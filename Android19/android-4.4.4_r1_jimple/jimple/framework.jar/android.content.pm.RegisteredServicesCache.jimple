public abstract class android.content.pm.RegisteredServicesCache extends java.lang.Object
{
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    private final java.lang.String mAttributesName;
    public final android.content.Context mContext;
    private final android.content.BroadcastReceiver mExternalReceiver;
    private android.os.Handler mHandler;
    private final java.lang.String mInterfaceName;
    private android.content.pm.RegisteredServicesCacheListener mListener;
    private final java.lang.String mMetaDataName;
    private final android.content.BroadcastReceiver mPackageReceiver;
    private final android.util.AtomicFile mPersistentServicesFile;
    private boolean mPersistentServicesFileDidNotExist;
    private final android.content.pm.XmlSerializerAndParser mSerializerAndParser;
    private final java.lang.Object mServicesLock;
    private final android.util.SparseArray mUserServices;

    public void <init>(android.content.Context, java.lang.String, java.lang.String, java.lang.String, android.content.pm.XmlSerializerAndParser)
    {
        android.content.pm.RegisteredServicesCache r0;
        android.content.Context r1, $r23, $r27;
        java.lang.String r2, r3, r4, $r19;
        android.content.pm.XmlSerializerAndParser r5;
        android.content.IntentFilter r6, r7, $r22, $r25;
        java.lang.Object $r8;
        android.util.SparseArray $r9;
        android.content.pm.RegisteredServicesCache$1 $r10;
        android.content.pm.RegisteredServicesCache$2 $r11;
        android.util.AtomicFile $r12;
        java.io.File $r13, $r14, $r15, $r16;
        java.lang.StringBuilder $r17, $r18, $r20;
        android.os.UserHandle $r21;
        android.content.BroadcastReceiver $r24, $r28;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: android.content.pm.XmlSerializerAndParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r8 = new java.lang.Object;

        specialinvoke $r8.<java.lang.Object: void <init>()>();

        r0.<android.content.pm.RegisteredServicesCache: java.lang.Object mServicesLock> = $r8;

        $r9 = new android.util.SparseArray;

        specialinvoke $r9.<android.util.SparseArray: void <init>(int)>(2);

        r0.<android.content.pm.RegisteredServicesCache: android.util.SparseArray mUserServices> = $r9;

        $r10 = new android.content.pm.RegisteredServicesCache$1;

        specialinvoke $r10.<android.content.pm.RegisteredServicesCache$1: void <init>(android.content.pm.RegisteredServicesCache)>(r0);

        r0.<android.content.pm.RegisteredServicesCache: android.content.BroadcastReceiver mPackageReceiver> = $r10;

        $r11 = new android.content.pm.RegisteredServicesCache$2;

        specialinvoke $r11.<android.content.pm.RegisteredServicesCache$2: void <init>(android.content.pm.RegisteredServicesCache)>(r0);

        r0.<android.content.pm.RegisteredServicesCache: android.content.BroadcastReceiver mExternalReceiver> = $r11;

        r0.<android.content.pm.RegisteredServicesCache: android.content.Context mContext> = r1;

        r0.<android.content.pm.RegisteredServicesCache: java.lang.String mInterfaceName> = r2;

        r0.<android.content.pm.RegisteredServicesCache: java.lang.String mMetaDataName> = r3;

        r0.<android.content.pm.RegisteredServicesCache: java.lang.String mAttributesName> = r4;

        r0.<android.content.pm.RegisteredServicesCache: android.content.pm.XmlSerializerAndParser mSerializerAndParser> = r5;

        $r12 = new android.util.AtomicFile;

        $r13 = new java.io.File;

        $r14 = new java.io.File;

        $r16 = new java.io.File;

        $r15 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        specialinvoke $r16.<java.io.File: void <init>(java.io.File,java.lang.String)>($r15, "system");

        specialinvoke $r14.<java.io.File: void <init>(java.io.File,java.lang.String)>($r16, "registered_services");

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".xml");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.io.File: void <init>(java.io.File,java.lang.String)>($r14, $r19);

        specialinvoke $r12.<android.util.AtomicFile: void <init>(java.io.File)>($r13);

        r0.<android.content.pm.RegisteredServicesCache: android.util.AtomicFile mPersistentServicesFile> = $r12;

        specialinvoke r0.<android.content.pm.RegisteredServicesCache: void readPersistentServicesLocked()>();

        $r22 = new android.content.IntentFilter;

        specialinvoke $r22.<android.content.IntentFilter: void <init>()>();

        r6 = $r22;

        virtualinvoke r6.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_ADDED");

        virtualinvoke r6.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_CHANGED");

        virtualinvoke r6.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_REMOVED");

        virtualinvoke r6.<android.content.IntentFilter: void addDataScheme(java.lang.String)>("package");

        $r23 = r0.<android.content.pm.RegisteredServicesCache: android.content.Context mContext>;

        $r24 = r0.<android.content.pm.RegisteredServicesCache: android.content.BroadcastReceiver mPackageReceiver>;

        $r21 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r23.<android.content.Context: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r24, $r21, r6, null, null);

        $r25 = new android.content.IntentFilter;

        specialinvoke $r25.<android.content.IntentFilter: void <init>()>();

        r7 = $r25;

        virtualinvoke r7.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.EXTERNAL_APPLICATIONS_AVAILABLE");

        virtualinvoke r7.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE");

        $r27 = r0.<android.content.pm.RegisteredServicesCache: android.content.Context mContext>;

        $r28 = r0.<android.content.pm.RegisteredServicesCache: android.content.BroadcastReceiver mExternalReceiver>;

        virtualinvoke $r27.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r28, r7);

        return;
    }

    static void access$100(android.content.pm.RegisteredServicesCache, int)
    {
        android.content.pm.RegisteredServicesCache r0;
        int i0;

        r0 := @parameter0: android.content.pm.RegisteredServicesCache;

        i0 := @parameter1: int;

        specialinvoke r0.<android.content.pm.RegisteredServicesCache: void generateServicesMap(int)>(i0);

        return;
    }

    private boolean containsType(java.util.ArrayList, java.lang.Object)
    {
        android.content.pm.RegisteredServicesCache r0;
        java.util.ArrayList r1;
        java.lang.Object r2, $r3, $r5;
        int i0, i1;
        android.content.pm.RegisteredServicesCache$ServiceInfo $r4;
        boolean $z0;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: java.lang.Object;

        i0 = 0;

        i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();

     label1:
        if i0 >= i1 goto label3;

        $r3 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r4 = (android.content.pm.RegisteredServicesCache$ServiceInfo) $r3;

        $r5 = $r4.<android.content.pm.RegisteredServicesCache$ServiceInfo: java.lang.Object type>;

        $z0 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return 0;
    }

    private boolean containsTypeAndUid(java.util.ArrayList, java.lang.Object, int)
    {
        android.content.pm.RegisteredServicesCache r0;
        java.util.ArrayList r1;
        java.lang.Object r2, $r4, $r5;
        int i0, i1, i2, $i3;
        android.content.pm.RegisteredServicesCache$ServiceInfo r3;
        boolean $z0;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        i1 = 0;

        i2 = virtualinvoke r1.<java.util.ArrayList: int size()>();

     label1:
        if i1 >= i2 goto label3;

        $r4 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (android.content.pm.RegisteredServicesCache$ServiceInfo) $r4;

        $r5 = r3.<android.content.pm.RegisteredServicesCache$ServiceInfo: java.lang.Object type>;

        $z0 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label2;

        $i3 = r3.<android.content.pm.RegisteredServicesCache$ServiceInfo: int uid>;

        if $i3 != i0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    private android.content.pm.RegisteredServicesCache$UserServices findOrCreateUserLocked(int)
    {
        android.content.pm.RegisteredServicesCache r0;
        int i0;
        android.content.pm.RegisteredServicesCache$UserServices r1, $r4;
        android.util.SparseArray $r2, $r5;
        java.lang.Object $r3;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        i0 := @parameter0: int;

        $r2 = r0.<android.content.pm.RegisteredServicesCache: android.util.SparseArray mUserServices>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (android.content.pm.RegisteredServicesCache$UserServices) $r3;

        if r1 != null goto label1;

        $r4 = new android.content.pm.RegisteredServicesCache$UserServices;

        specialinvoke $r4.<android.content.pm.RegisteredServicesCache$UserServices: void <init>(android.content.pm.RegisteredServicesCache$1)>(null);

        r1 = $r4;

        $r5 = r0.<android.content.pm.RegisteredServicesCache: android.util.SparseArray mUserServices>;

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r1);

     label1:
        return r1;
    }

    private void generateServicesMap(int)
    {
        android.content.pm.RegisteredServicesCache r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.content.pm.PackageManager r1;
        java.util.ArrayList r2, r8, r75;
        java.util.Iterator r3, r7, r9, r10;
        java.lang.Object r4, r11, r12, $r32, $r33, $r34, $r37, $r39, $r40, $r42, $r45, $r47, $r50, $r51, $r53;
        java.lang.Throwable r5, $r66, r81;
        android.content.pm.RegisteredServicesCache$UserServices r6;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z8, $z9, $z10;
        android.content.pm.RegisteredServicesCache$ServiceInfo r13, r18;
        java.lang.Integer r14, $r43, $r56;
        java.io.IOException r15, $r65;
        android.content.pm.ResolveInfo r16;
        org.xmlpull.v1.XmlPullParserException r17, $r70;
        android.content.Context $r21;
        java.lang.String $r22, $r58, $r60, $r63, $r67, $r71, $r73;
        java.util.List $r23;
        java.util.Map $r24, $r25, $r28, $r30, $r31, $r35, $r41, $r44, $r49, $r54;
        java.util.Set $r27;
        java.util.HashMap $r52;
        java.lang.StringBuilder $r57, $r59, $r62, $r68, $r72, $r74, r77, r78, r79, r80;
        android.content.Intent r76;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        i0 := @parameter0: int;

        $r21 = r0.<android.content.pm.RegisteredServicesCache: android.content.Context mContext>;

        r1 = virtualinvoke $r21.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r75 = new java.util.ArrayList;

        specialinvoke r75.<java.util.ArrayList: void <init>()>();

        r2 = r75;

        r76 = new android.content.Intent;

        $r22 = r0.<android.content.pm.RegisteredServicesCache: java.lang.String mInterfaceName>;

        specialinvoke r76.<android.content.Intent: void <init>(java.lang.String)>($r22);

        $r23 = virtualinvoke r1.<android.content.pm.PackageManager: java.util.List queryIntentServicesAsUser(android.content.Intent,int,int)>(r76, 128, i0);

        r3 = interfaceinvoke $r23.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label10;

        $r51 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r16 = (android.content.pm.ResolveInfo) $r51;

     label02:
        r18 = specialinvoke r0.<android.content.pm.RegisteredServicesCache: android.content.pm.RegisteredServicesCache$ServiceInfo parseServiceInfo(android.content.pm.ResolveInfo)>(r16);

     label03:
        if r18 != null goto label07;

     label04:
        r77 = new java.lang.StringBuilder;

        specialinvoke r77.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to load service info ");

        $r60 = virtualinvoke r16.<android.content.pm.ResolveInfo: java.lang.String toString()>();

        $r57 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r58);

     label05:
        goto label01;

     label06:
        $r70 := @caughtexception;

        r17 = $r70;

        r78 = new java.lang.StringBuilder;

        specialinvoke r78.<java.lang.StringBuilder: void <init>()>();

        $r68 = virtualinvoke r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to load service info ");

        $r67 = virtualinvoke r16.<android.content.pm.ResolveInfo: java.lang.String toString()>();

        $r74 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r67);

        $r73 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();

        r81 = (java.lang.Throwable) r17;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", $r73, r81);

        goto label01;

     label07:
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r18);

     label08:
        goto label01;

     label09:
        $r65 := @caughtexception;

        r15 = $r65;

        r79 = new java.lang.StringBuilder;

        specialinvoke r79.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to load service info ");

        $r63 = virtualinvoke r16.<android.content.pm.ResolveInfo: java.lang.String toString()>();

        $r72 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63);

        $r71 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", $r71, r15);

        goto label01;

     label10:
        r4 = r0.<android.content.pm.RegisteredServicesCache: java.lang.Object mServicesLock>;

        entermonitor r4;

     label11:
        r6 = specialinvoke r0.<android.content.pm.RegisteredServicesCache: android.content.pm.RegisteredServicesCache$UserServices findOrCreateUserLocked(int)>(i0);

        $r24 = r6.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map services>;

        if $r24 != null goto label27;

     label12:
        z0 = 1;

     label13:
        if z0 == 0 goto label28;

     label14:
        $r52 = staticinvoke <com.google.android.collect.Maps: java.util.HashMap newHashMap()>();

        r6.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map services> = $r52;

     label15:
        r80 = new java.lang.StringBuilder;

        specialinvoke r80.<java.lang.StringBuilder: void <init>()>();

     label16:
        z1 = 0;

     label17:
        r7 = virtualinvoke r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label18:
        $z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label36;

        $r33 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r13 = (android.content.pm.RegisteredServicesCache$ServiceInfo) $r33;

        $r31 = r6.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map persistentServices>;

        $r32 = r13.<android.content.pm.RegisteredServicesCache$ServiceInfo: java.lang.Object type>;

        $r37 = interfaceinvoke $r31.<java.util.Map: java.lang.Object get(java.lang.Object)>($r32);

        r14 = (java.lang.Integer) $r37;

     label19:
        if r14 != null goto label30;

        z1 = 1;

     label20:
        $r44 = r6.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map services>;

        $r45 = r13.<android.content.pm.RegisteredServicesCache$ServiceInfo: java.lang.Object type>;

        interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r45, r13);

        $r54 = r6.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map persistentServices>;

        $r53 = r13.<android.content.pm.RegisteredServicesCache$ServiceInfo: java.lang.Object type>;

        $i6 = r13.<android.content.pm.RegisteredServicesCache$ServiceInfo: int uid>;

        $r56 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        interfaceinvoke $r54.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r53, $r56);

        $z10 = r0.<android.content.pm.RegisteredServicesCache: boolean mPersistentServicesFileDidNotExist>;

        if $z10 == 0 goto label22;

     label21:
        if z0 != 0 goto label18;

     label22:
        $r50 = r13.<android.content.pm.RegisteredServicesCache$ServiceInfo: java.lang.Object type>;

        specialinvoke r0.<android.content.pm.RegisteredServicesCache: void notifyListener(java.lang.Object,int,boolean)>($r50, i0, 0);

     label23:
        goto label18;

     label24:
        $r66 := @caughtexception;

        r5 = $r66;

     label25:
        exitmonitor r4;

     label26:
        throw r5;

     label27:
        z0 = 0;

        goto label13;

     label28:
        $r25 = r6.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map services>;

        interfaceinvoke $r25.<java.util.Map: void clear()>();

     label29:
        goto label15;

     label30:
        $i1 = virtualinvoke r14.<java.lang.Integer: int intValue()>();

        $i2 = r13.<android.content.pm.RegisteredServicesCache$ServiceInfo: int uid>;

        if $i1 != $i2 goto label32;

        $r49 = r6.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map services>;

        $r47 = r13.<android.content.pm.RegisteredServicesCache$ServiceInfo: java.lang.Object type>;

        interfaceinvoke $r49.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r47, r13);

     label31:
        goto label18;

     label32:
        $i3 = r13.<android.content.pm.RegisteredServicesCache$ServiceInfo: int uid>;

        $z8 = specialinvoke r0.<android.content.pm.RegisteredServicesCache: boolean inSystemImage(int)>($i3);

        if $z8 != 0 goto label33;

        $r40 = r13.<android.content.pm.RegisteredServicesCache$ServiceInfo: java.lang.Object type>;

        $i4 = virtualinvoke r14.<java.lang.Integer: int intValue()>();

        $z9 = specialinvoke r0.<android.content.pm.RegisteredServicesCache: boolean containsTypeAndUid(java.util.ArrayList,java.lang.Object,int)>(r2, $r40, $i4);

        if $z9 != 0 goto label18;

     label33:
        z1 = 1;

     label34:
        $r35 = r6.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map services>;

        $r34 = r13.<android.content.pm.RegisteredServicesCache$ServiceInfo: java.lang.Object type>;

        interfaceinvoke $r35.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r34, r13);

        $r41 = r6.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map persistentServices>;

        $r42 = r13.<android.content.pm.RegisteredServicesCache$ServiceInfo: java.lang.Object type>;

        $i5 = r13.<android.content.pm.RegisteredServicesCache$ServiceInfo: int uid>;

        $r43 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        interfaceinvoke $r41.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r42, $r43);

        $r39 = r13.<android.content.pm.RegisteredServicesCache$ServiceInfo: java.lang.Object type>;

        specialinvoke r0.<android.content.pm.RegisteredServicesCache: void notifyListener(java.lang.Object,int,boolean)>($r39, i0, 0);

     label35:
        goto label18;

     label36:
        r8 = staticinvoke <com.google.android.collect.Lists: java.util.ArrayList newArrayList()>();

        $r28 = r6.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map persistentServices>;

        $r27 = interfaceinvoke $r28.<java.util.Map: java.util.Set keySet()>();

        r9 = interfaceinvoke $r27.<java.util.Set: java.util.Iterator iterator()>();

     label37:
        $z4 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label39;

        r12 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        $z6 = specialinvoke r0.<android.content.pm.RegisteredServicesCache: boolean containsType(java.util.ArrayList,java.lang.Object)>(r2, r12);

        if $z6 != 0 goto label37;

        virtualinvoke r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r12);

     label38:
        goto label37;

     label39:
        r10 = virtualinvoke r8.<java.util.ArrayList: java.util.Iterator iterator()>();

     label40:
        $z5 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label44;

        r11 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

     label41:
        z1 = 1;

     label42:
        $r30 = r6.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map persistentServices>;

        interfaceinvoke $r30.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r11);

        specialinvoke r0.<android.content.pm.RegisteredServicesCache: void notifyListener(java.lang.Object,int,boolean)>(r11, i0, 1);

     label43:
        goto label40;

     label44:
        if z1 == 0 goto label46;

     label45:
        specialinvoke r0.<android.content.pm.RegisteredServicesCache: void writePersistentServicesLocked()>();

     label46:
        exitmonitor r4;

     label47:
        return;

        catch org.xmlpull.v1.XmlPullParserException from label02 to label03 with label06;
        catch java.io.IOException from label02 to label03 with label09;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label05 with label06;
        catch java.io.IOException from label04 to label05 with label09;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label08 with label06;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.lang.Throwable from label11 to label12 with label24;
        catch java.lang.Throwable from label14 to label15 with label24;
        catch java.lang.Throwable from label15 to label16 with label24;
        catch java.lang.Throwable from label17 to label18 with label24;
        catch java.lang.Throwable from label18 to label19 with label24;
        catch java.lang.Throwable from label20 to label21 with label24;
        catch java.lang.Throwable from label22 to label23 with label24;
        catch java.lang.Throwable from label25 to label26 with label24;
        catch java.lang.Throwable from label28 to label29 with label24;
        catch java.lang.Throwable from label30 to label31 with label24;
        catch java.lang.Throwable from label32 to label33 with label24;
        catch java.lang.Throwable from label34 to label35 with label24;
        catch java.lang.Throwable from label36 to label37 with label24;
        catch java.lang.Throwable from label37 to label38 with label24;
        catch java.lang.Throwable from label39 to label40 with label24;
        catch java.lang.Throwable from label40 to label41 with label24;
        catch java.lang.Throwable from label42 to label43 with label24;
        catch java.lang.Throwable from label45 to label46 with label24;
        catch java.lang.Throwable from label46 to label47 with label24;
    }

    private boolean inSystemImage(int)
    {
        android.content.pm.RegisteredServicesCache r0;
        int i0, i1, i2, i3, $i4;
        java.lang.String[] r1;
        boolean z0;
        java.lang.String r2;
        android.content.Context $r4, $r6;
        android.content.pm.PackageManager $r5, $r7;
        android.content.pm.PackageInfo $r8;
        android.content.pm.ApplicationInfo $r9;
        android.content.pm.PackageManager$NameNotFoundException $r10;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        i0 := @parameter0: int;

        $r4 = r0.<android.content.pm.RegisteredServicesCache: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r1 = virtualinvoke $r5.<android.content.pm.PackageManager: java.lang.String[] getPackagesForUid(int)>(i0);

        i1 = lengthof r1;

        i2 = 0;

     label1:
        z0 = 0;

        if i2 >= i1 goto label4;

        r2 = r1[i2];

     label2:
        $r6 = r0.<android.content.pm.RegisteredServicesCache: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r8 = virtualinvoke $r7.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r2, 0);

        $r9 = $r8.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        i3 = $r9.<android.content.pm.ApplicationInfo: int flags>;

     label3:
        $i4 = i3 & 1;

        if $i4 == 0 goto label6;

        z0 = 1;

     label4:
        return z0;

     label5:
        $r10 := @caughtexception;

        return 0;

     label6:
        i2 = i2 + 1;

        goto label1;

        catch android.content.pm.PackageManager$NameNotFoundException from label2 to label3 with label5;
    }

    private void notifyListener(java.lang.Object, int, boolean)
    {
        android.content.pm.RegisteredServicesCache r0;
        java.lang.Object r1;
        int i0;
        boolean z0;
        java.lang.Throwable r2, $r6;
        android.content.pm.RegisteredServicesCacheListener r3;
        android.os.Handler r4;
        android.content.pm.RegisteredServicesCache$3 $r5;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        entermonitor r0;

     label1:
        r3 = r0.<android.content.pm.RegisteredServicesCache: android.content.pm.RegisteredServicesCacheListener mListener>;

        r4 = r0.<android.content.pm.RegisteredServicesCache: android.os.Handler mHandler>;

        exitmonitor r0;

     label2:
        if r3 != null goto label6;

        return;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

     label4:
        exitmonitor r0;

     label5:
        throw r2;

     label6:
        $r5 = new android.content.pm.RegisteredServicesCache$3;

        specialinvoke $r5.<android.content.pm.RegisteredServicesCache$3: void <init>(android.content.pm.RegisteredServicesCache,android.content.pm.RegisteredServicesCacheListener,java.lang.Object,int,boolean)>(r0, r3, r1, i0, z0);

        virtualinvoke r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r5);

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private android.content.pm.RegisteredServicesCache$ServiceInfo parseServiceInfo(android.content.pm.ResolveInfo) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.pm.RegisteredServicesCache r0;
        android.content.pm.ResolveInfo r1;
        android.content.pm.ServiceInfo r2, $r23;
        android.content.ComponentName r3, r46;
        android.content.pm.PackageManager r4;
        android.content.res.XmlResourceParser r5;
        java.lang.Throwable r6, $r43, r54, r55, r57;
        android.util.AttributeSet r8;
        int i0, $i1;
        java.lang.String r9, $r13, $r14, $r16, $r17, $r19, $r28, $r29, $r32, $r35, $r39, $r44;
        java.lang.Object r10;
        android.content.pm.RegisteredServicesCache$ServiceInfo r11, r53;
        android.content.Context $r15;
        android.content.pm.ApplicationInfo $r18, $r22;
        boolean $z0;
        android.content.res.Resources $r20;
        java.lang.StringBuilder $r25, $r27, $r30, $r31, $r37, $r38, $r40, $r45, r47, r49, r51;
        android.content.pm.PackageManager$NameNotFoundException $r36;
        org.xmlpull.v1.XmlPullParserException r48, r50, r52;
        org.xmlpull.v1.XmlPullParser r56;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        r1 := @parameter0: android.content.pm.ResolveInfo;

        r2 = r1.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        r46 = new android.content.ComponentName;

        $r14 = r2.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r13 = r2.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke r46.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r14, $r13);

        r3 = r46;

        $r15 = r0.<android.content.pm.RegisteredServicesCache: android.content.Context mContext>;

        r4 = virtualinvoke $r15.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r5 = null;

     label01:
        $r16 = r0.<android.content.pm.RegisteredServicesCache: java.lang.String mMetaDataName>;

        r5 = virtualinvoke r2.<android.content.pm.ServiceInfo: android.content.res.XmlResourceParser loadXmlMetaData(android.content.pm.PackageManager,java.lang.String)>(r4, $r16);

     label02:
        if r5 != null goto label08;

     label03:
        r48 = new org.xmlpull.v1.XmlPullParserException;

        r47 = new java.lang.StringBuilder;

        specialinvoke r47.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No ");

        $r32 = r0.<android.content.pm.RegisteredServicesCache: java.lang.String mMetaDataName>;

        $r37 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" meta-data");

        $r35 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r48.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r35);

        r54 = (java.lang.Throwable) r48;

        throw r54;

     label04:
        $r36 := @caughtexception;

     label05:
        r50 = new org.xmlpull.v1.XmlPullParserException;

        r49 = new java.lang.StringBuilder;

        specialinvoke r49.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to load resources for pacakge ");

        $r39 = r2.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r45 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r50.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r44);

        r55 = (java.lang.Throwable) r50;

        throw r55;

     label06:
        $r43 := @caughtexception;

        r6 = $r43;

        if r5 == null goto label07;

        interfaceinvoke r5.<android.content.res.XmlResourceParser: void close()>();

     label07:
        throw r6;

     label08:
        r56 = (org.xmlpull.v1.XmlPullParser) r5;

        r8 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r56);

     label09:
        i0 = interfaceinvoke r5.<android.content.res.XmlResourceParser: int next()>();

     label10:
        if i0 == 1 goto label11;

        if i0 != 2 goto label09;

     label11:
        r9 = interfaceinvoke r5.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $r17 = r0.<android.content.pm.RegisteredServicesCache: java.lang.String mAttributesName>;

        $z0 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z0 != 0 goto label12;

        r52 = new org.xmlpull.v1.XmlPullParserException;

        r51 = new java.lang.StringBuilder;

        specialinvoke r51.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Meta-data does not start with ");

        $r29 = r0.<android.content.pm.RegisteredServicesCache: java.lang.String mAttributesName>;

        $r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r27 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" tag");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r52.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r28);

        r57 = (java.lang.Throwable) r52;

        throw r57;

     label12:
        $r18 = r2.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r20 = virtualinvoke r4.<android.content.pm.PackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>($r18);

        $r19 = r2.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        r10 = virtualinvoke r0.<android.content.pm.RegisteredServicesCache: java.lang.Object parseServiceAttributes(android.content.res.Resources,java.lang.String,android.util.AttributeSet)>($r20, $r19, r8);

     label13:
        if r10 != null goto label15;

        r11 = null;

        if r5 == null goto label14;

        interfaceinvoke r5.<android.content.res.XmlResourceParser: void close()>();

     label14:
        return r11;

     label15:
        r53 = new android.content.pm.RegisteredServicesCache$ServiceInfo;

        $r23 = r1.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r22 = $r23.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i1 = $r22.<android.content.pm.ApplicationInfo: int uid>;

        specialinvoke r53.<android.content.pm.RegisteredServicesCache$ServiceInfo: void <init>(java.lang.Object,android.content.ComponentName,int)>(r10, r3, $i1);

        r11 = r53;

     label16:
        if r5 == null goto label14;

        interfaceinvoke r5.<android.content.res.XmlResourceParser: void close()>();

        return r11;

        catch android.content.pm.PackageManager$NameNotFoundException from label01 to label02 with label04;
        catch java.lang.Throwable from label01 to label02 with label06;
        catch android.content.pm.PackageManager$NameNotFoundException from label03 to label04 with label04;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label05 to label06 with label06;
        catch android.content.pm.PackageManager$NameNotFoundException from label08 to label09 with label04;
        catch java.lang.Throwable from label08 to label09 with label06;
        catch android.content.pm.PackageManager$NameNotFoundException from label09 to label10 with label04;
        catch java.lang.Throwable from label09 to label10 with label06;
        catch android.content.pm.PackageManager$NameNotFoundException from label11 to label12 with label04;
        catch java.lang.Throwable from label11 to label12 with label06;
        catch android.content.pm.PackageManager$NameNotFoundException from label12 to label13 with label04;
        catch java.lang.Throwable from label12 to label13 with label06;
        catch android.content.pm.PackageManager$NameNotFoundException from label15 to label16 with label04;
        catch java.lang.Throwable from label15 to label16 with label06;
    }

    private void readPersistentServicesLocked()
    {
        android.content.pm.RegisteredServicesCache r0;
        java.io.FileInputStream r1;
        java.lang.Throwable r2, $r25;
        java.lang.Exception r3, $r23;
        boolean z0, z1, $z2, $z3, $z4;
        org.xmlpull.v1.XmlPullParser r4;
        int i0, i1, i2, i3, $i4, $i5;
        java.lang.Object r5;
        android.content.pm.XmlSerializerAndParser $r6, $r16;
        android.util.SparseArray $r7;
        java.io.File $r8;
        android.util.AtomicFile $r9, $r10;
        java.lang.String $r11, $r12, $r13, $r14, $r15;
        java.util.Map $r17;
        java.lang.Integer $r18;
        android.content.pm.RegisteredServicesCache$UserServices $r19;
        java.io.IOException $r20, $r21, $r22;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        $r7 = r0.<android.content.pm.RegisteredServicesCache: android.util.SparseArray mUserServices>;

        virtualinvoke $r7.<android.util.SparseArray: void clear()>();

        $r6 = r0.<android.content.pm.RegisteredServicesCache: android.content.pm.XmlSerializerAndParser mSerializerAndParser>;

        if $r6 != null goto label02;

     label01:
        return;

     label02:
        r1 = null;

     label03:
        $r9 = r0.<android.content.pm.RegisteredServicesCache: android.util.AtomicFile mPersistentServicesFile>;

        $r8 = virtualinvoke $r9.<android.util.AtomicFile: java.io.File getBaseFile()>();

        $z2 = virtualinvoke $r8.<java.io.File: boolean exists()>();

        if $z2 != 0 goto label07;

     label04:
        z0 = 1;

     label05:
        r0.<android.content.pm.RegisteredServicesCache: boolean mPersistentServicesFileDidNotExist> = z0;

        z1 = r0.<android.content.pm.RegisteredServicesCache: boolean mPersistentServicesFileDidNotExist>;

     label06:
        if z1 == 0 goto label08;

        goto label01;

     label07:
        z0 = 0;

        goto label05;

     label08:
        $r10 = r0.<android.content.pm.RegisteredServicesCache: android.util.AtomicFile mPersistentServicesFile>;

        r1 = virtualinvoke $r10.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

        r4 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r4.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r1, null);

        i0 = interfaceinvoke r4.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label09:
        if i0 == 2 goto label12;

        if i0 == 1 goto label12;

     label10:
        i0 = interfaceinvoke r4.<org.xmlpull.v1.XmlPullParser: int next()>();

     label11:
        goto label09;

     label12:
        $r11 = "services";

        $r12 = interfaceinvoke r4.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z3 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z3 == 0 goto label16;

        i1 = interfaceinvoke r4.<org.xmlpull.v1.XmlPullParser: int next()>();

     label13:
        if i1 != 2 goto label21;

     label14:
        $i4 = interfaceinvoke r4.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i4 != 2 goto label21;

        $r14 = "service";

        $r13 = interfaceinvoke r4.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z4 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z4 == 0 goto label21;

        $r16 = r0.<android.content.pm.RegisteredServicesCache: android.content.pm.XmlSerializerAndParser mSerializerAndParser>;

        r5 = interfaceinvoke $r16.<android.content.pm.XmlSerializerAndParser: java.lang.Object createFromXml(org.xmlpull.v1.XmlPullParser)>(r4);

     label15:
        if r5 != null goto label20;

     label16:
        if r1 == null goto label01;

     label17:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label18:
        return;

     label19:
        $r22 := @caughtexception;

        return;

     label20:
        $r15 = interfaceinvoke r4.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "uid");

        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r15);

        $i5 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i3);

        $r19 = specialinvoke r0.<android.content.pm.RegisteredServicesCache: android.content.pm.RegisteredServicesCache$UserServices findOrCreateUserLocked(int)>($i5);

        $r17 = $r19.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map persistentServices>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r18);

     label21:
        i2 = interfaceinvoke r4.<org.xmlpull.v1.XmlPullParser: int next()>();

     label22:
        i1 = i2;

        if i1 != 1 goto label13;

        goto label16;

     label23:
        $r23 := @caughtexception;

        r3 = $r23;

     label24:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Error reading persistent services, starting from scratch", r3);

     label25:
        if r1 == null goto label01;

     label26:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label27:
        return;

     label28:
        $r21 := @caughtexception;

        return;

     label29:
        $r25 := @caughtexception;

        r2 = $r25;

        if r1 == null goto label31;

     label30:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label31:
        throw r2;

     label32:
        $r20 := @caughtexception;

        goto label31;

        catch java.lang.Exception from label03 to label04 with label23;
        catch java.lang.Throwable from label03 to label04 with label29;
        catch java.lang.Exception from label05 to label06 with label23;
        catch java.lang.Throwable from label05 to label06 with label29;
        catch java.lang.Exception from label08 to label09 with label23;
        catch java.lang.Throwable from label08 to label09 with label29;
        catch java.lang.Exception from label10 to label11 with label23;
        catch java.lang.Throwable from label10 to label11 with label29;
        catch java.lang.Exception from label12 to label13 with label23;
        catch java.lang.Throwable from label12 to label13 with label29;
        catch java.lang.Exception from label14 to label15 with label23;
        catch java.lang.Throwable from label14 to label15 with label29;
        catch java.io.IOException from label17 to label18 with label19;
        catch java.lang.Exception from label20 to label21 with label23;
        catch java.lang.Throwable from label20 to label21 with label29;
        catch java.lang.Exception from label21 to label22 with label23;
        catch java.lang.Throwable from label21 to label22 with label29;
        catch java.lang.Throwable from label24 to label25 with label29;
        catch java.io.IOException from label26 to label27 with label28;
        catch java.io.IOException from label30 to label31 with label32;
    }

    private void writePersistentServicesLocked()
    {
        android.content.pm.RegisteredServicesCache r0;
        java.io.FileOutputStream r1;
        java.io.IOException r2, $r29;
        com.android.internal.util.FastXmlSerializer r3, $r8;
        int i0, $i1, $i2;
        java.util.Iterator r4;
        java.util.Map$Entry r5;
        android.content.pm.XmlSerializerAndParser $r6, $r27;
        android.util.AtomicFile $r7, $r14, $r28;
        java.lang.Boolean $r9;
        android.util.SparseArray $r10, $r13;
        android.content.pm.RegisteredServicesCache$UserServices $r15;
        java.lang.Object $r16, $r20, $r22, $r24;
        java.util.Set $r17;
        java.util.Map $r18;
        boolean $z0;
        java.lang.String $r21;
        java.lang.Integer $r23;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        $r6 = r0.<android.content.pm.RegisteredServicesCache: android.content.pm.XmlSerializerAndParser mSerializerAndParser>;

        if $r6 != null goto label02;

     label01:
        return;

     label02:
        r1 = null;

     label03:
        $r7 = r0.<android.content.pm.RegisteredServicesCache: android.util.AtomicFile mPersistentServicesFile>;

        r1 = virtualinvoke $r7.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

        $r8 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke $r8.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        r3 = $r8;

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r1, "utf-8");

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r9);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "services");

     label04:
        i0 = 0;

     label05:
        $r10 = r0.<android.content.pm.RegisteredServicesCache: android.util.SparseArray mUserServices>;

        $i1 = virtualinvoke $r10.<android.util.SparseArray: int size()>();

        if i0 >= $i1 goto label10;

        $r13 = r0.<android.content.pm.RegisteredServicesCache: android.util.SparseArray mUserServices>;

        $r16 = virtualinvoke $r13.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        $r15 = (android.content.pm.RegisteredServicesCache$UserServices) $r16;

        $r18 = $r15.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map persistentServices>;

        $r17 = interfaceinvoke $r18.<java.util.Map: java.util.Set entrySet()>();

        r4 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label09;

        $r20 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r20;

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "service");

        $r22 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r23 = (java.lang.Integer) $r22;

        $i2 = virtualinvoke $r23.<java.lang.Integer: int intValue()>();

        $r21 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "uid", $r21);

        $r27 = r0.<android.content.pm.RegisteredServicesCache: android.content.pm.XmlSerializerAndParser mSerializerAndParser>;

        $r24 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        interfaceinvoke $r27.<android.content.pm.XmlSerializerAndParser: void writeAsXml(java.lang.Object,org.xmlpull.v1.XmlSerializer)>($r24, r3);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "service");

     label07:
        goto label06;

     label08:
        $r29 := @caughtexception;

        r2 = $r29;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", "Error writing accounts", r2);

        if r1 == null goto label01;

        $r28 = r0.<android.content.pm.RegisteredServicesCache: android.util.AtomicFile mPersistentServicesFile>;

        virtualinvoke $r28.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r1);

        return;

     label09:
        i0 = i0 + 1;

        goto label05;

     label10:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "services");

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        $r14 = r0.<android.content.pm.RegisteredServicesCache: android.util.AtomicFile mPersistentServicesFile>;

        virtualinvoke $r14.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r1);

     label11:
        return;

        catch java.io.IOException from label03 to label04 with label08;
        catch java.io.IOException from label05 to label06 with label08;
        catch java.io.IOException from label06 to label07 with label08;
        catch java.io.IOException from label10 to label11 with label08;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[], int)
    {
        android.content.pm.RegisteredServicesCache r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        int i0, $i1;
        java.lang.Object r4, $r18;
        java.lang.Throwable r5, $r23;
        android.content.pm.RegisteredServicesCache$UserServices r6;
        java.util.Iterator r7;
        android.content.pm.RegisteredServicesCache$ServiceInfo r8;
        java.util.Map $r9, $r12, $r15;
        java.lang.StringBuilder $r10, $r11, $r13, $r14, $r19, $r20, $r22;
        java.lang.String $r16, $r21;
        java.util.Collection $r17;
        boolean $z0;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        i0 := @parameter3: int;

        r4 = r0.<android.content.pm.RegisteredServicesCache: java.lang.Object mServicesLock>;

        entermonitor r4;

     label1:
        r6 = specialinvoke r0.<android.content.pm.RegisteredServicesCache: android.content.pm.RegisteredServicesCache$UserServices findOrCreateUserLocked(int)>(i0);

        $r9 = r6.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map services>;

        if $r9 == null goto label7;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RegisteredServicesCache: ");

        $r12 = r6.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map services>;

        $i1 = interfaceinvoke $r12.<java.util.Map: int size()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" services");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r16);

        $r15 = r6.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map services>;

        $r17 = interfaceinvoke $r15.<java.util.Map: java.util.Collection values()>();

        r7 = interfaceinvoke $r17.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r18 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (android.content.pm.RegisteredServicesCache$ServiceInfo) $r18;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r21);

     label3:
        goto label2;

     label4:
        $r23 := @caughtexception;

        r5 = $r23;

     label5:
        exitmonitor r4;

     label6:
        throw r5;

     label7:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("RegisteredServicesCache: services not loaded");

     label8:
        exitmonitor r4;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label7 to label8 with label4;
        catch java.lang.Throwable from label8 to label9 with label4;
    }

    public java.util.Collection getAllServices(int)
    {
        android.content.pm.RegisteredServicesCache r0;
        int i0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r9;
        android.content.pm.RegisteredServicesCache$UserServices r3;
        java.util.Collection r4, $r8;
        java.util.Map $r5, $r7;
        java.util.ArrayList $r6;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        i0 := @parameter0: int;

        r1 = r0.<android.content.pm.RegisteredServicesCache: java.lang.Object mServicesLock>;

        entermonitor r1;

     label1:
        r3 = specialinvoke r0.<android.content.pm.RegisteredServicesCache: android.content.pm.RegisteredServicesCache$UserServices findOrCreateUserLocked(int)>(i0);

        $r5 = r3.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map services>;

        if $r5 != null goto label2;

        specialinvoke r0.<android.content.pm.RegisteredServicesCache: void generateServicesMap(int)>(i0);

     label2:
        $r6 = new java.util.ArrayList;

        $r7 = r3.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map services>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Collection values()>();

        specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>($r8);

        r4 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>($r6);

        exitmonitor r1;

     label3:
        return r4;

     label4:
        $r9 := @caughtexception;

        r2 = $r9;

     label5:
        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public android.content.pm.RegisteredServicesCacheListener getListener()
    {
        android.content.pm.RegisteredServicesCache r0;
        java.lang.Throwable r1, $r3;
        android.content.pm.RegisteredServicesCacheListener r2;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        entermonitor r0;

     label1:
        r2 = r0.<android.content.pm.RegisteredServicesCache: android.content.pm.RegisteredServicesCacheListener mListener>;

        exitmonitor r0;

     label2:
        return r2;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

     label4:
        exitmonitor r0;

     label5:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.content.pm.RegisteredServicesCache$ServiceInfo getServiceInfo(java.lang.Object, int)
    {
        android.content.pm.RegisteredServicesCache r0;
        java.lang.Object r1, r2, $r8;
        int i0;
        java.lang.Throwable r3, $r9;
        android.content.pm.RegisteredServicesCache$UserServices r4;
        android.content.pm.RegisteredServicesCache$ServiceInfo r5;
        java.util.Map $r6, $r7;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        r2 = r0.<android.content.pm.RegisteredServicesCache: java.lang.Object mServicesLock>;

        entermonitor r2;

     label1:
        r4 = specialinvoke r0.<android.content.pm.RegisteredServicesCache: android.content.pm.RegisteredServicesCache$UserServices findOrCreateUserLocked(int)>(i0);

        $r6 = r4.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map services>;

        if $r6 != null goto label2;

        specialinvoke r0.<android.content.pm.RegisteredServicesCache: void generateServicesMap(int)>(i0);

     label2:
        $r7 = r4.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map services>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (android.content.pm.RegisteredServicesCache$ServiceInfo) $r8;

        exitmonitor r2;

     label3:
        return r5;

     label4:
        $r9 := @caughtexception;

        r3 = $r9;

     label5:
        exitmonitor r2;

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void invalidateCache(int)
    {
        android.content.pm.RegisteredServicesCache r0;
        int i0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r4;
        android.content.pm.RegisteredServicesCache$UserServices $r3;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        i0 := @parameter0: int;

        r1 = r0.<android.content.pm.RegisteredServicesCache: java.lang.Object mServicesLock>;

        entermonitor r1;

     label1:
        $r3 = specialinvoke r0.<android.content.pm.RegisteredServicesCache: android.content.pm.RegisteredServicesCache$UserServices findOrCreateUserLocked(int)>(i0);

        $r3.<android.content.pm.RegisteredServicesCache$UserServices: java.util.Map services> = null;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public abstract java.lang.Object parseServiceAttributes(android.content.res.Resources, java.lang.String, android.util.AttributeSet);

    public void setListener(android.content.pm.RegisteredServicesCacheListener, android.os.Handler)
    {
        android.content.pm.RegisteredServicesCache r0;
        android.content.pm.RegisteredServicesCacheListener r1;
        android.os.Handler r2, $r4;
        java.lang.Throwable r3, $r7;
        android.content.Context $r5;
        android.os.Looper $r6;

        r0 := @this: android.content.pm.RegisteredServicesCache;

        r1 := @parameter0: android.content.pm.RegisteredServicesCacheListener;

        r2 := @parameter1: android.os.Handler;

        if r2 != null goto label1;

        $r4 = new android.os.Handler;

        $r5 = r0.<android.content.pm.RegisteredServicesCache: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.os.Looper getMainLooper()>();

        specialinvoke $r4.<android.os.Handler: void <init>(android.os.Looper)>($r6);

        r2 = $r4;

     label1:
        entermonitor r0;

     label2:
        r0.<android.content.pm.RegisteredServicesCache: android.os.Handler mHandler> = r2;

        r0.<android.content.pm.RegisteredServicesCache: android.content.pm.RegisteredServicesCacheListener mListener> = r1;

        exitmonitor r0;

     label3:
        return;

     label4:
        $r7 := @caughtexception;

        r3 = $r7;

     label5:
        exitmonitor r0;

     label6:
        throw r3;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static void <clinit>()
    {
        <android.content.pm.RegisteredServicesCache: java.lang.String TAG> = "PackageManager";

        <android.content.pm.RegisteredServicesCache: boolean DEBUG> = 0;

        return;
    }
}
