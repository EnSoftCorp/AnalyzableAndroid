public class android.filterpacks.text.ToUpperCase extends android.filterfw.core.Filter
{
    private android.filterfw.core.FrameFormat mOutputFormat;

    public void <init>(java.lang.String)
    {
        android.filterpacks.text.ToUpperCase r0;
        java.lang.String r1;

        r0 := @this: android.filterpacks.text.ToUpperCase;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.filterfw.core.Filter: void <init>(java.lang.String)>(r1);

        return;
    }

    public void process(android.filterfw.core.FilterContext)
    {
        android.filterpacks.text.ToUpperCase r0;
        android.filterfw.core.FilterContext r1;
        java.lang.String r2, $r9;
        android.filterfw.core.Frame r3, $r4;
        java.lang.Object $r5;
        android.filterfw.core.FrameManager $r6;
        android.filterfw.core.FrameFormat $r7;
        java.util.Locale $r8;

        r0 := @this: android.filterpacks.text.ToUpperCase;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        $r4 = virtualinvoke r0.<android.filterpacks.text.ToUpperCase: android.filterfw.core.Frame pullInput(java.lang.String)>("mixedcase");

        $r5 = virtualinvoke $r4.<android.filterfw.core.Frame: java.lang.Object getObjectValue()>();

        r2 = (java.lang.String) $r5;

        $r6 = virtualinvoke r1.<android.filterfw.core.FilterContext: android.filterfw.core.FrameManager getFrameManager()>();

        $r7 = r0.<android.filterpacks.text.ToUpperCase: android.filterfw.core.FrameFormat mOutputFormat>;

        r3 = virtualinvoke $r6.<android.filterfw.core.FrameManager: android.filterfw.core.Frame newFrame(android.filterfw.core.FrameFormat)>($r7);

        $r8 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r9 = virtualinvoke r2.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r8);

        virtualinvoke r3.<android.filterfw.core.Frame: void setObjectValue(java.lang.Object)>($r9);

        virtualinvoke r0.<android.filterpacks.text.ToUpperCase: void pushOutput(java.lang.String,android.filterfw.core.Frame)>("uppercase", r3);

        return;
    }

    public void setupPorts()
    {
        android.filterpacks.text.ToUpperCase r0;
        android.filterfw.core.MutableFrameFormat $r1;
        android.filterfw.core.FrameFormat $r2, $r3;

        r0 := @this: android.filterpacks.text.ToUpperCase;

        $r1 = staticinvoke <android.filterfw.format.ObjectFormat: android.filterfw.core.MutableFrameFormat fromClass(java.lang.Class,int)>(class "java/lang/String", 1);

        r0.<android.filterpacks.text.ToUpperCase: android.filterfw.core.FrameFormat mOutputFormat> = $r1;

        $r2 = r0.<android.filterpacks.text.ToUpperCase: android.filterfw.core.FrameFormat mOutputFormat>;

        virtualinvoke r0.<android.filterpacks.text.ToUpperCase: void addMaskedInputPort(java.lang.String,android.filterfw.core.FrameFormat)>("mixedcase", $r2);

        $r3 = r0.<android.filterpacks.text.ToUpperCase: android.filterfw.core.FrameFormat mOutputFormat>;

        virtualinvoke r0.<android.filterpacks.text.ToUpperCase: void addOutputPort(java.lang.String,android.filterfw.core.FrameFormat)>("uppercase", $r3);

        return;
    }
}
