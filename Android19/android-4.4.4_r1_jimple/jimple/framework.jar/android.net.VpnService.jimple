public class android.net.VpnService extends android.app.Service
{
    public static final java.lang.String SERVICE_INTERFACE;

    public void <init>()
    {
        android.net.VpnService r0;

        r0 := @this: android.net.VpnService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        return;
    }

    static android.net.IConnectivityManager access$100()
    {
        android.net.IConnectivityManager $r0;

        $r0 = staticinvoke <android.net.VpnService: android.net.IConnectivityManager getService()>();

        return $r0;
    }

    private static android.net.IConnectivityManager getService()
    {
        android.os.IBinder $r0;
        android.net.IConnectivityManager $r1;

        $r0 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("connectivity");

        $r1 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager asInterface(android.os.IBinder)>($r0);

        return $r1;
    }

    public static android.content.Intent prepare(android.content.Context)
    {
        android.content.Context r0;
        boolean z0;
        android.net.IConnectivityManager $r2;
        java.lang.String $r3;
        android.content.Intent $r4;
        android.os.RemoteException $r5;

        r0 := @parameter0: android.content.Context;

     label1:
        $r2 = staticinvoke <android.net.VpnService: android.net.IConnectivityManager getService()>();

        $r3 = virtualinvoke r0.<android.content.Context: java.lang.String getPackageName()>();

        z0 = interfaceinvoke $r2.<android.net.IConnectivityManager: boolean prepareVpn(java.lang.String,java.lang.String)>($r3, null);

     label2:
        if z0 == 0 goto label4;

        return null;

     label3:
        $r5 := @caughtexception;

     label4:
        $r4 = staticinvoke <com.android.internal.net.VpnConfig: android.content.Intent getIntentForConfirmation()>();

        return $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.os.IBinder onBind(android.content.Intent)
    {
        android.net.VpnService r0;
        android.content.Intent r1;
        java.lang.String $r2, $r3;
        boolean $z0;
        android.net.VpnService$Callback $r4;

        r0 := @this: android.net.VpnService;

        r1 := @parameter0: android.content.Intent;

        if r1 == null goto label1;

        $r2 = "android.net.VpnService";

        $r3 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r4 = new android.net.VpnService$Callback;

        specialinvoke $r4.<android.net.VpnService$Callback: void <init>(android.net.VpnService,android.net.VpnService$1)>(r0, null);

        return $r4;

     label1:
        return null;
    }

    public void onRevoke()
    {
        android.net.VpnService r0;

        r0 := @this: android.net.VpnService;

        virtualinvoke r0.<android.net.VpnService: void stopSelf()>();

        return;
    }

    public boolean protect(int)
    {
        android.net.VpnService r0;
        int i0;
        android.os.ParcelFileDescriptor r1;
        java.lang.Throwable r2, $r10;
        boolean z0;
        android.net.IConnectivityManager $r7;
        java.lang.Exception $r8, $r9, $r11, $r12;

        r0 := @this: android.net.VpnService;

        i0 := @parameter0: int;

        r1 = null;

     label01:
        r1 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor fromFd(int)>(i0);

        $r7 = staticinvoke <android.net.VpnService: android.net.IConnectivityManager getService()>();

        z0 = interfaceinvoke $r7.<android.net.IConnectivityManager: boolean protectVpn(android.os.ParcelFileDescriptor)>(r1);

     label02:
        virtualinvoke r1.<android.os.ParcelFileDescriptor: void close()>();

     label03:
        return z0;

     label04:
        $r11 := @caughtexception;

     label05:
        virtualinvoke r1.<android.os.ParcelFileDescriptor: void close()>();

     label06:
        return 0;

     label07:
        $r12 := @caughtexception;

        return 0;

     label08:
        $r10 := @caughtexception;

        r2 = $r10;

     label09:
        virtualinvoke r1.<android.os.ParcelFileDescriptor: void close()>();

     label10:
        throw r2;

     label11:
        $r8 := @caughtexception;

        return z0;

     label12:
        $r9 := @caughtexception;

        goto label10;

        catch java.lang.Exception from label01 to label02 with label04;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Exception from label02 to label03 with label11;
        catch java.lang.Exception from label05 to label06 with label07;
        catch java.lang.Exception from label09 to label10 with label12;
    }

    public boolean protect(java.net.DatagramSocket)
    {
        android.net.VpnService r0;
        java.net.DatagramSocket r1;
        java.io.FileDescriptor $r2;
        int $i0;
        boolean $z0;

        r0 := @this: android.net.VpnService;

        r1 := @parameter0: java.net.DatagramSocket;

        $r2 = virtualinvoke r1.<java.net.DatagramSocket: java.io.FileDescriptor getFileDescriptor$()>();

        $i0 = virtualinvoke $r2.<java.io.FileDescriptor: int getInt$()>();

        $z0 = virtualinvoke r0.<android.net.VpnService: boolean protect(int)>($i0);

        return $z0;
    }

    public boolean protect(java.net.Socket)
    {
        android.net.VpnService r0;
        java.net.Socket r1;
        java.io.FileDescriptor $r2;
        int $i0;
        boolean $z0;

        r0 := @this: android.net.VpnService;

        r1 := @parameter0: java.net.Socket;

        $r2 = virtualinvoke r1.<java.net.Socket: java.io.FileDescriptor getFileDescriptor$()>();

        $i0 = virtualinvoke $r2.<java.io.FileDescriptor: int getInt$()>();

        $z0 = virtualinvoke r0.<android.net.VpnService: boolean protect(int)>($i0);

        return $z0;
    }

    public static void <clinit>()
    {
        <android.net.VpnService: java.lang.String SERVICE_INTERFACE> = "android.net.VpnService";

        return;
    }
}
