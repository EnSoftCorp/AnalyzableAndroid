class android.test.InstrumentationTestCase$2 extends java.lang.Object implements java.lang.Runnable
{
    final android.test.InstrumentationTestCase this$0;
    final java.lang.Throwable[] val$exceptions;
    final boolean val$repetitive;
    final java.lang.reflect.Method val$testMethod;
    final int val$tolerance;

    void <init>(android.test.InstrumentationTestCase, java.lang.reflect.Method, int, boolean, java.lang.Throwable[])
    {
        android.test.InstrumentationTestCase$2 r0;
        android.test.InstrumentationTestCase r1;
        java.lang.reflect.Method r2;
        int i0;
        boolean z0;
        java.lang.Throwable[] r3;

        r0 := @this: android.test.InstrumentationTestCase$2;

        r1 := @parameter0: android.test.InstrumentationTestCase;

        r2 := @parameter1: java.lang.reflect.Method;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        r3 := @parameter4: java.lang.Throwable[];

        r0.<android.test.InstrumentationTestCase$2: android.test.InstrumentationTestCase this$0> = r1;

        r0.<android.test.InstrumentationTestCase$2: java.lang.reflect.Method val$testMethod> = r2;

        r0.<android.test.InstrumentationTestCase$2: int val$tolerance> = i0;

        r0.<android.test.InstrumentationTestCase$2: boolean val$repetitive> = z0;

        r0.<android.test.InstrumentationTestCase$2: java.lang.Throwable[] val$exceptions> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.test.InstrumentationTestCase$2 r0;
        java.lang.Throwable r1, $r4;
        boolean $z0;
        int $i0;
        java.lang.reflect.Method $r2;
        android.test.InstrumentationTestCase $r3;
        java.lang.Throwable[] $r5;

        r0 := @this: android.test.InstrumentationTestCase$2;

     label1:
        $r3 = r0.<android.test.InstrumentationTestCase$2: android.test.InstrumentationTestCase this$0>;

        $r2 = r0.<android.test.InstrumentationTestCase$2: java.lang.reflect.Method val$testMethod>;

        $i0 = r0.<android.test.InstrumentationTestCase$2: int val$tolerance>;

        $z0 = r0.<android.test.InstrumentationTestCase$2: boolean val$repetitive>;

        staticinvoke <android.test.InstrumentationTestCase: void access$000(android.test.InstrumentationTestCase,java.lang.reflect.Method,int,boolean)>($r3, $r2, $i0, $z0);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = r0.<android.test.InstrumentationTestCase$2: java.lang.Throwable[] val$exceptions>;

        $r5[0] = r1;

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
