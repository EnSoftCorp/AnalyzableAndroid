public class android.text.util.Linkify extends java.lang.Object
{
    public static final int ALL;
    public static final int EMAIL_ADDRESSES;
    public static final int MAP_ADDRESSES;
    public static final int PHONE_NUMBERS;
    private static final int PHONE_NUMBER_MINIMUM_DIGITS;
    public static final int WEB_URLS;
    public static final android.text.util.Linkify$MatchFilter sPhoneNumberMatchFilter;
    public static final android.text.util.Linkify$TransformFilter sPhoneNumberTransformFilter;
    public static final android.text.util.Linkify$MatchFilter sUrlMatchFilter;

    static void <clinit>()
    {
        android.text.util.Linkify$1 $r0;
        android.text.util.Linkify$2 $r1;
        android.text.util.Linkify$3 $r2;

        <android.text.util.Linkify: int WEB_URLS> = 1;

        <android.text.util.Linkify: int PHONE_NUMBER_MINIMUM_DIGITS> = 5;

        <android.text.util.Linkify: int PHONE_NUMBERS> = 4;

        <android.text.util.Linkify: int MAP_ADDRESSES> = 8;

        <android.text.util.Linkify: int EMAIL_ADDRESSES> = 2;

        <android.text.util.Linkify: int ALL> = 15;

        $r0 = new android.text.util.Linkify$1;

        specialinvoke $r0.<android.text.util.Linkify$1: void <init>()>();

        <android.text.util.Linkify: android.text.util.Linkify$MatchFilter sUrlMatchFilter> = $r0;

        $r1 = new android.text.util.Linkify$2;

        specialinvoke $r1.<android.text.util.Linkify$2: void <init>()>();

        <android.text.util.Linkify: android.text.util.Linkify$MatchFilter sPhoneNumberMatchFilter> = $r1;

        $r2 = new android.text.util.Linkify$3;

        specialinvoke $r2.<android.text.util.Linkify$3: void <init>()>();

        <android.text.util.Linkify: android.text.util.Linkify$TransformFilter sPhoneNumberTransformFilter> = $r2;

        return;
    }

    public void <init>()
    {
        android.text.util.Linkify r0;

        r0 := @this: android.text.util.Linkify;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static final void addLinkMovementMethod(android.widget.TextView)
    {
        android.widget.TextView r0;
        android.text.method.MovementMethod r1, $r2;
        boolean $z0, $z1;

        r0 := @parameter0: android.widget.TextView;

        r1 = virtualinvoke r0.<android.widget.TextView: android.text.method.MovementMethod getMovementMethod()>();

        if r1 == null goto label1;

        $z1 = r1 instanceof android.text.method.LinkMovementMethod;

        if $z1 != 0 goto label2;

     label1:
        $z0 = virtualinvoke r0.<android.widget.TextView: boolean getLinksClickable()>();

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()>();

        virtualinvoke r0.<android.widget.TextView: void setMovementMethod(android.text.method.MovementMethod)>($r2);

     label2:
        return;
    }

    public static final void addLinks(android.widget.TextView, java.util.regex.Pattern, java.lang.String)
    {
        android.widget.TextView r0;
        java.util.regex.Pattern r1;
        java.lang.String r2;

        r0 := @parameter0: android.widget.TextView;

        r1 := @parameter1: java.util.regex.Pattern;

        r2 := @parameter2: java.lang.String;

        staticinvoke <android.text.util.Linkify: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>(r0, r1, r2, null, null);

        return;
    }

    public static final void addLinks(android.widget.TextView, java.util.regex.Pattern, java.lang.String, android.text.util.Linkify$MatchFilter, android.text.util.Linkify$TransformFilter)
    {
        android.widget.TextView r0;
        java.util.regex.Pattern r1;
        java.lang.String r2;
        android.text.util.Linkify$MatchFilter r3;
        android.text.util.Linkify$TransformFilter r4;
        android.text.SpannableString r5;
        java.lang.CharSequence $r6;
        boolean $z0;

        r0 := @parameter0: android.widget.TextView;

        r1 := @parameter1: java.util.regex.Pattern;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.text.util.Linkify$MatchFilter;

        r4 := @parameter4: android.text.util.Linkify$TransformFilter;

        $r6 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getText()>();

        r5 = staticinvoke <android.text.SpannableString: android.text.SpannableString valueOf(java.lang.CharSequence)>($r6);

        $z0 = staticinvoke <android.text.util.Linkify: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>(r5, r1, r2, r3, r4);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence)>(r5);

        staticinvoke <android.text.util.Linkify: void addLinkMovementMethod(android.widget.TextView)>(r0);

     label1:
        return;
    }

    public static final boolean addLinks(android.text.Spannable, int)
    {
        android.text.Spannable r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        android.text.style.URLSpan[] r1;
        java.util.ArrayList r2, $r6;
        java.util.Iterator r3;
        android.text.util.LinkSpec r4;
        java.lang.Object[] $r5;
        java.lang.Object $r7;
        boolean $z0;
        java.lang.String[] $r8, $r10;
        java.lang.String $r9;
        java.util.regex.Pattern $r11, $r12;
        android.text.util.Linkify$MatchFilter $r13;
        android.text.style.URLSpan $r14;

        r0 := @parameter0: android.text.Spannable;

        i0 := @parameter1: int;

        if i0 != 0 goto label01;

        return 0;

     label01:
        $i2 = interfaceinvoke r0.<android.text.Spannable: int length()>();

        $r5 = interfaceinvoke r0.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i2, class "android/text/style/URLSpan");

        r1 = (android.text.style.URLSpan[]) $r5;

        $i3 = lengthof r1;

        i1 = -1 + $i3;

     label02:
        if i1 < 0 goto label03;

        $r14 = r1[i1];

        interfaceinvoke r0.<android.text.Spannable: void removeSpan(java.lang.Object)>($r14);

        i1 = i1 + -1;

        goto label02;

     label03:
        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r2 = $r6;

        $i4 = i0 & 1;

        if $i4 == 0 goto label04;

        $r12 = <android.util.Patterns: java.util.regex.Pattern WEB_URL>;

        $r10 = newarray (java.lang.String)[3];

        $r10[0] = "http://";

        $r10[1] = "https://";

        $r10[2] = "rtsp://";

        $r13 = <android.text.util.Linkify: android.text.util.Linkify$MatchFilter sUrlMatchFilter>;

        staticinvoke <android.text.util.Linkify: void gatherLinks(java.util.ArrayList,android.text.Spannable,java.util.regex.Pattern,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>(r2, r0, $r12, $r10, $r13, null);

     label04:
        $i5 = i0 & 2;

        if $i5 == 0 goto label05;

        $r11 = <android.util.Patterns: java.util.regex.Pattern EMAIL_ADDRESS>;

        $r8 = newarray (java.lang.String)[1];

        $r8[0] = "mailto:";

        staticinvoke <android.text.util.Linkify: void gatherLinks(java.util.ArrayList,android.text.Spannable,java.util.regex.Pattern,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>(r2, r0, $r11, $r8, null, null);

     label05:
        $i6 = i0 & 4;

        if $i6 == 0 goto label06;

        staticinvoke <android.text.util.Linkify: void gatherTelLinks(java.util.ArrayList,android.text.Spannable)>(r2, r0);

     label06:
        $i7 = i0 & 8;

        if $i7 == 0 goto label07;

        staticinvoke <android.text.util.Linkify: void gatherMapLinks(java.util.ArrayList,android.text.Spannable)>(r2, r0);

     label07:
        staticinvoke <android.text.util.Linkify: void pruneOverlaps(java.util.ArrayList)>(r2);

        $i8 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if $i8 != 0 goto label08;

        return 0;

     label08:
        r3 = virtualinvoke r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label09:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.text.util.LinkSpec) $r7;

        $r9 = r4.<android.text.util.LinkSpec: java.lang.String url>;

        $i9 = r4.<android.text.util.LinkSpec: int start>;

        $i10 = r4.<android.text.util.LinkSpec: int end>;

        staticinvoke <android.text.util.Linkify: void applyLink(java.lang.String,int,int,android.text.Spannable)>($r9, $i9, $i10, r0);

        goto label09;

     label10:
        return 1;
    }

    public static final boolean addLinks(android.text.Spannable, java.util.regex.Pattern, java.lang.String)
    {
        android.text.Spannable r0;
        java.util.regex.Pattern r1;
        java.lang.String r2;
        boolean $z0;

        r0 := @parameter0: android.text.Spannable;

        r1 := @parameter1: java.util.regex.Pattern;

        r2 := @parameter2: java.lang.String;

        $z0 = staticinvoke <android.text.util.Linkify: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>(r0, r1, r2, null, null);

        return $z0;
    }

    public static final boolean addLinks(android.text.Spannable, java.util.regex.Pattern, java.lang.String, android.text.util.Linkify$MatchFilter, android.text.util.Linkify$TransformFilter)
    {
        android.text.Spannable r0;
        java.util.regex.Pattern r1;
        java.lang.String r2, r5, $r8, $r9;
        android.text.util.Linkify$MatchFilter r3;
        android.text.util.Linkify$TransformFilter r4;
        boolean z0, z1, $z2;
        java.util.regex.Matcher r6;
        int i0, i1;
        java.util.Locale $r7;
        java.lang.String[] $r10;

        r0 := @parameter0: android.text.Spannable;

        r1 := @parameter1: java.util.regex.Pattern;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.text.util.Linkify$MatchFilter;

        r4 := @parameter4: android.text.util.Linkify$TransformFilter;

        z0 = 0;

        if r2 != null goto label4;

        r5 = "";

     label1:
        r6 = virtualinvoke r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

     label2:
        $z2 = virtualinvoke r6.<java.util.regex.Matcher: boolean find()>();

        if $z2 == 0 goto label5;

        i0 = virtualinvoke r6.<java.util.regex.Matcher: int start()>();

        i1 = virtualinvoke r6.<java.util.regex.Matcher: int end()>();

        z1 = 1;

        if r3 == null goto label3;

        z1 = interfaceinvoke r3.<android.text.util.Linkify$MatchFilter: boolean acceptMatch(java.lang.CharSequence,int,int)>(r0, i0, i1);

     label3:
        if z1 == 0 goto label2;

        $r8 = virtualinvoke r6.<java.util.regex.Matcher: java.lang.String group(int)>(0);

        $r10 = newarray (java.lang.String)[1];

        $r10[0] = r5;

        $r9 = staticinvoke <android.text.util.Linkify: java.lang.String makeUrl(java.lang.String,java.lang.String[],java.util.regex.Matcher,android.text.util.Linkify$TransformFilter)>($r8, $r10, r6, r4);

        staticinvoke <android.text.util.Linkify: void applyLink(java.lang.String,int,int,android.text.Spannable)>($r9, i0, i1, r0);

        z0 = 1;

        goto label2;

     label4:
        $r7 = <java.util.Locale: java.util.Locale ROOT>;

        r5 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r7);

        goto label1;

     label5:
        return z0;
    }

    public static final boolean addLinks(android.widget.TextView, int)
    {
        android.widget.TextView r0;
        int i0;
        java.lang.CharSequence r1;
        android.text.SpannableString r2;
        boolean $z0, $z1, $z2;
        android.text.Spannable $r3;

        r0 := @parameter0: android.widget.TextView;

        i0 := @parameter1: int;

        if i0 != 0 goto label2;

     label1:
        return 0;

     label2:
        r1 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getText()>();

        $z0 = r1 instanceof android.text.Spannable;

        if $z0 == 0 goto label3;

        $r3 = (android.text.Spannable) r1;

        $z2 = staticinvoke <android.text.util.Linkify: boolean addLinks(android.text.Spannable,int)>($r3, i0);

        if $z2 == 0 goto label1;

        staticinvoke <android.text.util.Linkify: void addLinkMovementMethod(android.widget.TextView)>(r0);

        return 1;

     label3:
        r2 = staticinvoke <android.text.SpannableString: android.text.SpannableString valueOf(java.lang.CharSequence)>(r1);

        $z1 = staticinvoke <android.text.util.Linkify: boolean addLinks(android.text.Spannable,int)>(r2, i0);

        if $z1 == 0 goto label1;

        staticinvoke <android.text.util.Linkify: void addLinkMovementMethod(android.widget.TextView)>(r0);

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence)>(r2);

        return 1;
    }

    private static final void applyLink(java.lang.String, int, int, android.text.Spannable)
    {
        java.lang.String r0;
        int i0, i1;
        android.text.Spannable r1;
        android.text.style.URLSpan $r2;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: android.text.Spannable;

        $r2 = new android.text.style.URLSpan;

        specialinvoke $r2.<android.text.style.URLSpan: void <init>(java.lang.String)>(r0);

        interfaceinvoke r1.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r2, i0, i1, 33);

        return;
    }

    private static final void gatherLinks(java.util.ArrayList, android.text.Spannable, java.util.regex.Pattern, java.lang.String[], android.text.util.Linkify$MatchFilter, android.text.util.Linkify$TransformFilter)
    {
        java.util.ArrayList r0;
        android.text.Spannable r1;
        java.util.regex.Pattern r2;
        java.lang.String[] r3;
        android.text.util.Linkify$MatchFilter r4;
        android.text.util.Linkify$TransformFilter r5;
        java.util.regex.Matcher r6;
        int i0, i1;
        android.text.util.LinkSpec r7, $r8;
        boolean $z0, $z2;
        java.lang.String $r9, $r10;

        r0 := @parameter0: java.util.ArrayList;

        r1 := @parameter1: android.text.Spannable;

        r2 := @parameter2: java.util.regex.Pattern;

        r3 := @parameter3: java.lang.String[];

        r4 := @parameter4: android.text.util.Linkify$MatchFilter;

        r5 := @parameter5: android.text.util.Linkify$TransformFilter;

        r6 = virtualinvoke r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

     label1:
        $z0 = virtualinvoke r6.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label3;

        i0 = virtualinvoke r6.<java.util.regex.Matcher: int start()>();

        i1 = virtualinvoke r6.<java.util.regex.Matcher: int end()>();

        if r4 == null goto label2;

        $z2 = interfaceinvoke r4.<android.text.util.Linkify$MatchFilter: boolean acceptMatch(java.lang.CharSequence,int,int)>(r1, i0, i1);

        if $z2 == 0 goto label1;

     label2:
        $r8 = new android.text.util.LinkSpec;

        specialinvoke $r8.<android.text.util.LinkSpec: void <init>()>();

        r7 = $r8;

        $r9 = virtualinvoke r6.<java.util.regex.Matcher: java.lang.String group(int)>(0);

        $r10 = staticinvoke <android.text.util.Linkify: java.lang.String makeUrl(java.lang.String,java.lang.String[],java.util.regex.Matcher,android.text.util.Linkify$TransformFilter)>($r9, r3, r6, r5);

        r7.<android.text.util.LinkSpec: java.lang.String url> = $r10;

        r7.<android.text.util.LinkSpec: int start> = i0;

        r7.<android.text.util.LinkSpec: int end> = i1;

        virtualinvoke r0.<java.util.ArrayList: boolean add(java.lang.Object)>(r7);

        goto label1;

     label3:
        return;
    }

    private static final void gatherMapLinks(java.util.ArrayList, android.text.Spannable)
    {
        java.util.ArrayList r0;
        android.text.Spannable r1;
        java.lang.String r2, r3, r6, $r11;
        int i0, i1, i2, $i3, $i4, $i5;
        android.text.util.LinkSpec r4, $r7;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.io.UnsupportedEncodingException $r12;

        r0 := @parameter0: java.util.ArrayList;

        r1 := @parameter1: android.text.Spannable;

        r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        i0 = 0;

     label1:
        r3 = staticinvoke <android.webkit.WebView: java.lang.String findAddress(java.lang.String)>(r2);

        if r3 == null goto label2;

        i1 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>(r3);

        if i1 >= 0 goto label3;

     label2:
        return;

     label3:
        $r7 = new android.text.util.LinkSpec;

        specialinvoke $r7.<android.text.util.LinkSpec: void <init>()>();

        r4 = $r7;

        $i3 = virtualinvoke r3.<java.lang.String: int length()>();

        i2 = i1 + $i3;

        $i4 = i0 + i1;

        r4.<android.text.util.LinkSpec: int start> = $i4;

        $i5 = i0 + i2;

        r4.<android.text.util.LinkSpec: int end> = $i5;

        r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(i2);

        i0 = i0 + i2;

     label4:
        r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>(r3, "UTF-8");

     label5:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("geo:0,0?q=");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        r4.<android.text.util.LinkSpec: java.lang.String url> = $r11;

        virtualinvoke r0.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        goto label1;

     label6:
        $r12 := @caughtexception;

        goto label1;

        catch java.io.UnsupportedEncodingException from label4 to label5 with label6;
    }

    private static final void gatherTelLinks(java.util.ArrayList, android.text.Spannable)
    {
        java.util.ArrayList r0;
        android.text.Spannable r1;
        java.util.Iterator r2;
        com.android.i18n.phonenumbers.PhoneNumberMatch r3;
        android.text.util.LinkSpec r4, $r12;
        com.android.i18n.phonenumbers.PhoneNumberUtil $r5;
        java.lang.String $r6, $r8, $r14, $r17, $r18;
        java.util.Locale $r7;
        com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency $r9;
        java.lang.Iterable $r10;
        boolean $z0;
        java.lang.Object $r11;
        java.lang.StringBuilder $r13, $r15, $r16;
        int $i0, $i1;

        r0 := @parameter0: java.util.ArrayList;

        r1 := @parameter1: android.text.Spannable;

        $r5 = staticinvoke <com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.PhoneNumberUtil getInstance()>();

        $r6 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r7 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r8 = virtualinvoke $r7.<java.util.Locale: java.lang.String getCountry()>();

        $r9 = <com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency: com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency POSSIBLE>;

        $r10 = virtualinvoke $r5.<com.android.i18n.phonenumbers.PhoneNumberUtil: java.lang.Iterable findNumbers(java.lang.CharSequence,java.lang.String,com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency,long)>($r6, $r8, $r9, 9223372036854775807L);

        r2 = interfaceinvoke $r10.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r11 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.i18n.phonenumbers.PhoneNumberMatch) $r11;

        $r12 = new android.text.util.LinkSpec;

        specialinvoke $r12.<android.text.util.LinkSpec: void <init>()>();

        r4 = $r12;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tel:");

        $r14 = virtualinvoke r3.<com.android.i18n.phonenumbers.PhoneNumberMatch: java.lang.String rawString()>();

        $r17 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String normalizeNumber(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        r4.<android.text.util.LinkSpec: java.lang.String url> = $r18;

        $i0 = virtualinvoke r3.<com.android.i18n.phonenumbers.PhoneNumberMatch: int start()>();

        r4.<android.text.util.LinkSpec: int start> = $i0;

        $i1 = virtualinvoke r3.<com.android.i18n.phonenumbers.PhoneNumberMatch: int end()>();

        r4.<android.text.util.LinkSpec: int end> = $i1;

        virtualinvoke r0.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        goto label1;

     label2:
        return;
    }

    private static final java.lang.String makeUrl(java.lang.String, java.lang.String[], java.util.regex.Matcher, android.text.util.Linkify$TransformFilter)
    {
        java.lang.String r0, r4, r5, $r7, $r10, $r11, $r12, $r14, $r16;
        java.lang.String[] r1;
        java.util.regex.Matcher r2;
        android.text.util.Linkify$TransformFilter r3;
        int i0, i1, i2, i3, $i4;
        boolean z0, $z1, $z2;
        java.lang.StringBuilder $r6, $r8, $r9, $r13, $r15, $r17;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String[];

        r2 := @parameter2: java.util.regex.Matcher;

        r3 := @parameter3: android.text.util.Linkify$TransformFilter;

        if r3 == null goto label1;

        r0 = interfaceinvoke r3.<android.text.util.Linkify$TransformFilter: java.lang.String transformUrl(java.util.regex.Matcher,java.lang.String)>(r2, r0);

     label1:
        i0 = 0;

     label2:
        i1 = lengthof r1;

        z0 = 0;

        if i0 >= i1 goto label3;

        r4 = r1[i0];

        $r10 = r1[i0];

        i2 = virtualinvoke $r10.<java.lang.String: int length()>();

        $z1 = virtualinvoke r0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, r4, 0, i2);

        if $z1 == 0 goto label5;

        z0 = 1;

        r5 = r1[i0];

        $r11 = r1[i0];

        i3 = virtualinvoke $r11.<java.lang.String: int length()>();

        $z2 = virtualinvoke r0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(0, 0, r5, 0, i3);

        if $z2 != 0 goto label3;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r12 = r1[i0];

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = r1[i0];

        $i4 = virtualinvoke $r14.<java.lang.String: int length()>();

        $r16 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i4);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        r0 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        if z0 != 0 goto label4;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = r1[0];

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        r0 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        return r0;

     label5:
        i0 = i0 + 1;

        goto label2;
    }

    private static final void pruneOverlaps(java.util.ArrayList)
    {
        java.util.ArrayList r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22;
        android.text.util.LinkSpec r1, r2;
        android.text.util.Linkify$4 $r3;
        java.lang.Object $r4, $r5;

        r0 := @parameter0: java.util.ArrayList;

        $r3 = new android.text.util.Linkify$4;

        specialinvoke $r3.<android.text.util.Linkify$4: void <init>()>();

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r0, $r3);

        i0 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        $i3 = i0 - 1;

        if i1 >= $i3 goto label6;

        $r4 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r1 = (android.text.util.LinkSpec) $r4;

        $i4 = i1 + 1;

        $r5 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>($i4);

        r2 = (android.text.util.LinkSpec) $r5;

        i2 = -1;

        $i6 = r1.<android.text.util.LinkSpec: int start>;

        $i5 = r2.<android.text.util.LinkSpec: int start>;

        if $i6 > $i5 goto label5;

        $i8 = r1.<android.text.util.LinkSpec: int end>;

        $i7 = r2.<android.text.util.LinkSpec: int start>;

        if $i8 <= $i7 goto label5;

        $i9 = r2.<android.text.util.LinkSpec: int end>;

        $i10 = r1.<android.text.util.LinkSpec: int end>;

        if $i9 > $i10 goto label3;

        i2 = i1 + 1;

     label2:
        if i2 == -1 goto label5;

        virtualinvoke r0.<java.util.ArrayList: java.lang.Object remove(int)>(i2);

        i0 = i0 + -1;

        goto label1;

     label3:
        $i11 = r1.<android.text.util.LinkSpec: int end>;

        $i12 = r1.<android.text.util.LinkSpec: int start>;

        $i15 = $i11 - $i12;

        $i13 = r2.<android.text.util.LinkSpec: int end>;

        $i14 = r2.<android.text.util.LinkSpec: int start>;

        $i16 = $i13 - $i14;

        if $i15 <= $i16 goto label4;

        i2 = i1 + 1;

        goto label2;

     label4:
        $i17 = r1.<android.text.util.LinkSpec: int end>;

        $i18 = r1.<android.text.util.LinkSpec: int start>;

        $i21 = $i17 - $i18;

        $i19 = r2.<android.text.util.LinkSpec: int end>;

        $i20 = r2.<android.text.util.LinkSpec: int start>;

        $i22 = $i19 - $i20;

        if $i21 >= $i22 goto label2;

        i2 = i1;

        goto label2;

     label5:
        i1 = i1 + 1;

        goto label1;

     label6:
        return;
    }
}
