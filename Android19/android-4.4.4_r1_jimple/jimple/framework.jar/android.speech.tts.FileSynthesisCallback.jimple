class android.speech.tts.FileSynthesisCallback extends android.speech.tts.AbstractSynthesisCallback
{
    private static final boolean DBG;
    private static final int MAX_AUDIO_BUFFER_SIZE;
    private static final java.lang.String TAG;
    private static final short WAV_FORMAT_PCM;
    private static final int WAV_HEADER_LENGTH;
    private int mAudioFormat;
    private int mChannelCount;
    private boolean mDone;
    private java.nio.channels.FileChannel mFileChannel;
    private int mSampleRateInHz;
    private boolean mStarted;
    private final java.lang.Object mStateLock;
    private boolean mStopped;

    void <init>(java.nio.channels.FileChannel)
    {
        android.speech.tts.FileSynthesisCallback r0;
        java.nio.channels.FileChannel r1;
        java.lang.Object $r2;

        r0 := @this: android.speech.tts.FileSynthesisCallback;

        r1 := @parameter0: java.nio.channels.FileChannel;

        specialinvoke r0.<android.speech.tts.AbstractSynthesisCallback: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<android.speech.tts.FileSynthesisCallback: java.lang.Object mStateLock> = $r2;

        r0.<android.speech.tts.FileSynthesisCallback: boolean mStarted> = 0;

        r0.<android.speech.tts.FileSynthesisCallback: boolean mStopped> = 0;

        r0.<android.speech.tts.FileSynthesisCallback: boolean mDone> = 0;

        r0.<android.speech.tts.FileSynthesisCallback: java.nio.channels.FileChannel mFileChannel> = r1;

        return;
    }

    private void cleanUp()
    {
        android.speech.tts.FileSynthesisCallback r0;

        r0 := @this: android.speech.tts.FileSynthesisCallback;

        specialinvoke r0.<android.speech.tts.FileSynthesisCallback: void closeFile()>();

        return;
    }

    private void closeFile()
    {
        android.speech.tts.FileSynthesisCallback r0;
        java.io.IOException r1, $r4;
        java.nio.channels.FileChannel $r2, $r3;

        r0 := @this: android.speech.tts.FileSynthesisCallback;

     label1:
        $r2 = r0.<android.speech.tts.FileSynthesisCallback: java.nio.channels.FileChannel mFileChannel>;

        if $r2 == null goto label2;

        $r3 = r0.<android.speech.tts.FileSynthesisCallback: java.nio.channels.FileChannel mFileChannel>;

        virtualinvoke $r3.<java.nio.channels.FileChannel: void close()>();

        r0.<android.speech.tts.FileSynthesisCallback: java.nio.channels.FileChannel mFileChannel> = null;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("FileSynthesisRequest", "Failed to close output file descriptor", r1);

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private java.nio.ByteBuffer makeWavHeader(int, int, int, int)
    {
        android.speech.tts.FileSynthesisCallback r0;
        int i0, i1, i2, i3, i5, $i8, $i9, $i10, $i11, $i12;
        byte b4;
        short s6, s7, $s13;
        java.nio.ByteBuffer r1;
        byte[] $r2, $r4, $r9, $r11, $r17;
        java.nio.ByteOrder $r3;

        r0 := @this: android.speech.tts.FileSynthesisCallback;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        if i1 != 3 goto label2;

        b4 = 1;

     label1:
        $i8 = i0 * b4;

        i5 = i2 * $i8;

        $i9 = b4 * i2;

        s6 = (short) $i9;

        $i10 = b4 * 8;

        s7 = (short) $i10;

        $r2 = newarray (byte)[44];

        r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r2);

        $r3 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r3);

        $r4 = newarray (byte)[4];

        $r4[0] = 82;

        $r4[1] = 73;

        $r4[2] = 70;

        $r4[3] = 70;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r4);

        $i11 = i3 + 44;

        $i12 = -8 + $i11;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i12);

        $r9 = newarray (byte)[4];

        $r9[0] = 87;

        $r9[1] = 65;

        $r9[2] = 86;

        $r9[3] = 69;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r9);

        $r11 = newarray (byte)[4];

        $r11[0] = 102;

        $r11[1] = 109;

        $r11[2] = 116;

        $r11[3] = 32;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r11);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(16);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>(1);

        $s13 = (short) i2;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>($s13);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(i0);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(i5);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>(s6);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>(s7);

        $r17 = newarray (byte)[4];

        $r17[0] = 100;

        $r17[1] = 97;

        $r17[2] = 116;

        $r17[3] = 97;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r17);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(i3);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

        return r1;

     label2:
        b4 = 2;

        goto label1;
    }

    public int audioAvailable(byte[], int, int)
    {
        android.speech.tts.FileSynthesisCallback r0;
        byte[] r1;
        int i0, i1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r9;
        java.io.IOException r4, $r8;
        boolean $z0;
        java.nio.channels.FileChannel $r5, $r6;
        java.nio.ByteBuffer $r7;

        r0 := @this: android.speech.tts.FileSynthesisCallback;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = r0.<android.speech.tts.FileSynthesisCallback: java.lang.Object mStateLock>;

        entermonitor r2;

     label01:
        $z0 = r0.<android.speech.tts.FileSynthesisCallback: boolean mStopped>;

        if $z0 == 0 goto label03;

        exitmonitor r2;

     label02:
        return -1;

     label03:
        $r5 = r0.<android.speech.tts.FileSynthesisCallback: java.nio.channels.FileChannel mFileChannel>;

        if $r5 != null goto label08;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FileSynthesisRequest", "File not open");

        exitmonitor r2;

     label04:
        return -1;

     label05:
        $r9 := @caughtexception;

        r3 = $r9;

     label06:
        exitmonitor r2;

     label07:
        throw r3;

     label08:
        $r6 = r0.<android.speech.tts.FileSynthesisCallback: java.nio.channels.FileChannel mFileChannel>;

        $r7 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>(r1, i0, i1);

        virtualinvoke $r6.<java.nio.channels.FileChannel: int write(java.nio.ByteBuffer)>($r7);

     label09:
        exitmonitor r2;

     label10:
        return 0;

     label11:
        $r8 := @caughtexception;

        r4 = $r8;

     label12:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("FileSynthesisRequest", "Failed to write to output file descriptor", r4);

        specialinvoke r0.<android.speech.tts.FileSynthesisCallback: void cleanUp()>();

        exitmonitor r2;

     label13:
        return -1;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.io.IOException from label08 to label09 with label11;
        catch java.lang.Throwable from label08 to label09 with label05;
        catch java.lang.Throwable from label09 to label10 with label05;
        catch java.lang.Throwable from label12 to label13 with label05;
    }

    public int done()
    {
        android.speech.tts.FileSynthesisCallback r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r11;
        java.io.IOException r3, $r10;
        int i0, $i3, $i4, $i5;
        boolean $z0, $z1;
        java.nio.channels.FileChannel $r4, $r5, $r7, $r8;
        long $l1, $l2;
        java.nio.ByteBuffer $r9;

        r0 := @this: android.speech.tts.FileSynthesisCallback;

        r1 = r0.<android.speech.tts.FileSynthesisCallback: java.lang.Object mStateLock>;

        entermonitor r1;

     label01:
        $z0 = r0.<android.speech.tts.FileSynthesisCallback: boolean mDone>;

        if $z0 == 0 goto label03;

        exitmonitor r1;

     label02:
        return -1;

     label03:
        $z1 = r0.<android.speech.tts.FileSynthesisCallback: boolean mStopped>;

        if $z1 == 0 goto label08;

        exitmonitor r1;

     label04:
        return -1;

     label05:
        $r11 := @caughtexception;

        r2 = $r11;

     label06:
        exitmonitor r1;

     label07:
        throw r2;

     label08:
        $r4 = r0.<android.speech.tts.FileSynthesisCallback: java.nio.channels.FileChannel mFileChannel>;

        if $r4 != null goto label10;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FileSynthesisRequest", "File not open");

        exitmonitor r1;

     label09:
        return -1;

     label10:
        $r5 = r0.<android.speech.tts.FileSynthesisCallback: java.nio.channels.FileChannel mFileChannel>;

        virtualinvoke $r5.<java.nio.channels.FileChannel: java.nio.channels.FileChannel position(long)>(0L);

        $r7 = r0.<android.speech.tts.FileSynthesisCallback: java.nio.channels.FileChannel mFileChannel>;

        $l1 = virtualinvoke $r7.<java.nio.channels.FileChannel: long size()>();

        $l2 = $l1 - 44L;

        i0 = (int) $l2;

        $r8 = r0.<android.speech.tts.FileSynthesisCallback: java.nio.channels.FileChannel mFileChannel>;

        $i5 = r0.<android.speech.tts.FileSynthesisCallback: int mSampleRateInHz>;

        $i3 = r0.<android.speech.tts.FileSynthesisCallback: int mAudioFormat>;

        $i4 = r0.<android.speech.tts.FileSynthesisCallback: int mChannelCount>;

        $r9 = specialinvoke r0.<android.speech.tts.FileSynthesisCallback: java.nio.ByteBuffer makeWavHeader(int,int,int,int)>($i5, $i3, $i4, i0);

        virtualinvoke $r8.<java.nio.channels.FileChannel: int write(java.nio.ByteBuffer)>($r9);

        specialinvoke r0.<android.speech.tts.FileSynthesisCallback: void closeFile()>();

        r0.<android.speech.tts.FileSynthesisCallback: boolean mDone> = 1;

     label11:
        exitmonitor r1;

     label12:
        return 0;

     label13:
        $r10 := @caughtexception;

        r3 = $r10;

     label14:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("FileSynthesisRequest", "Failed to write to output file descriptor", r3);

        specialinvoke r0.<android.speech.tts.FileSynthesisCallback: void cleanUp()>();

        exitmonitor r1;

     label15:
        return -1;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Throwable from label08 to label09 with label05;
        catch java.io.IOException from label10 to label11 with label13;
        catch java.lang.Throwable from label10 to label11 with label05;
        catch java.lang.Throwable from label11 to label12 with label05;
        catch java.lang.Throwable from label14 to label15 with label05;
    }

    public void error()
    {
        android.speech.tts.FileSynthesisCallback r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.speech.tts.FileSynthesisCallback;

        r1 = r0.<android.speech.tts.FileSynthesisCallback: java.lang.Object mStateLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<android.speech.tts.FileSynthesisCallback: void cleanUp()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int getMaxBufferSize()
    {
        android.speech.tts.FileSynthesisCallback r0;

        r0 := @this: android.speech.tts.FileSynthesisCallback;

        return 8192;
    }

    boolean isDone()
    {
        android.speech.tts.FileSynthesisCallback r0;
        boolean $z0;

        r0 := @this: android.speech.tts.FileSynthesisCallback;

        $z0 = r0.<android.speech.tts.FileSynthesisCallback: boolean mDone>;

        return $z0;
    }

    public int start(int, int, int)
    {
        android.speech.tts.FileSynthesisCallback r0;
        int i0, i1, i2;
        java.lang.Object r1;
        java.lang.Throwable r2, $r12;
        java.io.IOException r3, $r8;
        boolean $z0, $z1;
        java.nio.channels.FileChannel $r4;
        java.nio.ByteBuffer $r5;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r7, $r9, $r11;
        java.lang.String $r10;

        r0 := @this: android.speech.tts.FileSynthesisCallback;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 = r0.<android.speech.tts.FileSynthesisCallback: java.lang.Object mStateLock>;

        entermonitor r1;

     label01:
        $z0 = r0.<android.speech.tts.FileSynthesisCallback: boolean mStopped>;

        if $z0 == 0 goto label03;

        exitmonitor r1;

     label02:
        return -1;

     label03:
        $z1 = r0.<android.speech.tts.FileSynthesisCallback: boolean mStarted>;

        if $z1 == 0 goto label07;

        specialinvoke r0.<android.speech.tts.FileSynthesisCallback: void cleanUp()>();

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("FileSynthesisRequest.start() called twice");

        throw $r6;

     label04:
        $r12 := @caughtexception;

        r2 = $r12;

     label05:
        exitmonitor r1;

     label06:
        throw r2;

     label07:
        r0.<android.speech.tts.FileSynthesisCallback: boolean mStarted> = 1;

        r0.<android.speech.tts.FileSynthesisCallback: int mSampleRateInHz> = i0;

        r0.<android.speech.tts.FileSynthesisCallback: int mAudioFormat> = i1;

        r0.<android.speech.tts.FileSynthesisCallback: int mChannelCount> = i2;

     label08:
        $r4 = r0.<android.speech.tts.FileSynthesisCallback: java.nio.channels.FileChannel mFileChannel>;

        $r5 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(44);

        virtualinvoke $r4.<java.nio.channels.FileChannel: int write(java.nio.ByteBuffer)>($r5);

     label09:
        exitmonitor r1;

     label10:
        return 0;

     label11:
        $r8 := @caughtexception;

        r3 = $r8;

     label12:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to write wav header to output file descriptor");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FileSynthesisRequest", $r10);

        specialinvoke r0.<android.speech.tts.FileSynthesisCallback: void cleanUp()>();

        exitmonitor r1;

     label13:
        return -1;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label03 to label04 with label04;
        catch java.lang.Throwable from label05 to label06 with label04;
        catch java.lang.Throwable from label07 to label08 with label04;
        catch java.io.IOException from label08 to label09 with label11;
        catch java.lang.Throwable from label08 to label09 with label04;
        catch java.lang.Throwable from label09 to label10 with label04;
        catch java.lang.Throwable from label12 to label13 with label04;
    }

    void stop()
    {
        android.speech.tts.FileSynthesisCallback r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.speech.tts.FileSynthesisCallback;

        r1 = r0.<android.speech.tts.FileSynthesisCallback: java.lang.Object mStateLock>;

        entermonitor r1;

     label1:
        r0.<android.speech.tts.FileSynthesisCallback: boolean mStopped> = 1;

        specialinvoke r0.<android.speech.tts.FileSynthesisCallback: void cleanUp()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static void <clinit>()
    {
        <android.speech.tts.FileSynthesisCallback: int WAV_HEADER_LENGTH> = 44;

        <android.speech.tts.FileSynthesisCallback: short WAV_FORMAT_PCM> = 1;

        <android.speech.tts.FileSynthesisCallback: java.lang.String TAG> = "FileSynthesisRequest";

        <android.speech.tts.FileSynthesisCallback: int MAX_AUDIO_BUFFER_SIZE> = 8192;

        <android.speech.tts.FileSynthesisCallback: boolean DBG> = 0;

        return;
    }
}
