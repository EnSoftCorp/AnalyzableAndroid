class android.net.wifi.WifiStateTracker$WifiStateReceiver extends android.content.BroadcastReceiver
{
    final android.net.wifi.WifiStateTracker this$0;

    private void <init>(android.net.wifi.WifiStateTracker)
    {
        android.net.wifi.WifiStateTracker$WifiStateReceiver r0;
        android.net.wifi.WifiStateTracker r1;

        r0 := @this: android.net.wifi.WifiStateTracker$WifiStateReceiver;

        r1 := @parameter0: android.net.wifi.WifiStateTracker;

        r0.<android.net.wifi.WifiStateTracker$WifiStateReceiver: android.net.wifi.WifiStateTracker this$0> = r1;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        return;
    }

    void <init>(android.net.wifi.WifiStateTracker, android.net.wifi.WifiStateTracker$1)
    {
        android.net.wifi.WifiStateTracker$WifiStateReceiver r0;
        android.net.wifi.WifiStateTracker r1;
        android.net.wifi.WifiStateTracker$1 r2;

        r0 := @this: android.net.wifi.WifiStateTracker$WifiStateReceiver;

        r1 := @parameter0: android.net.wifi.WifiStateTracker;

        r2 := @parameter1: android.net.wifi.WifiStateTracker$1;

        specialinvoke r0.<android.net.wifi.WifiStateTracker$WifiStateReceiver: void <init>(android.net.wifi.WifiStateTracker)>(r1);

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        android.net.wifi.WifiStateTracker$WifiStateReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;
        android.net.NetworkInfo$State r3, $r37;
        java.lang.String $r4, $r5;
        boolean $z0, $z1;
        android.net.wifi.WifiStateTracker $r6, $r9, $r11, $r14, $r18, $r22, $r27, $r29, $r31, $r33, $r36, $r40, $r42, $r43, $r46, $r47, $r55, $r58;
        android.os.Parcelable $r7, $r17, $r21, $r24, $r34;
        android.net.LinkProperties $r8, $r20, $r26, $r57;
        android.os.Handler $r12, $r45;
        android.net.NetworkInfo $r13, $r16, $r38, $r44, $r49, $r53;
        android.os.Message $r15, $r48;
        android.net.LinkCapabilities $r25, $r28, $r50;
        android.net.wifi.WifiInfo $r35;
        android.net.SamplingDataTracker $r39;
        android.net.NetworkInfo$DetailedState $r51, $r52;

        r0 := @this: android.net.wifi.WifiStateTracker$WifiStateReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        $r4 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("android.net.wifi.STATE_CHANGE");

        if $z0 == 0 goto label5;

        $r14 = r0.<android.net.wifi.WifiStateTracker$WifiStateReceiver: android.net.wifi.WifiStateTracker this$0>;

        $r17 = virtualinvoke r2.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("networkInfo");

        $r16 = (android.net.NetworkInfo) $r17;

        staticinvoke <android.net.wifi.WifiStateTracker: android.net.NetworkInfo access$102(android.net.wifi.WifiStateTracker,android.net.NetworkInfo)>($r14, $r16);

        $r18 = r0.<android.net.wifi.WifiStateTracker$WifiStateReceiver: android.net.wifi.WifiStateTracker this$0>;

        $r21 = virtualinvoke r2.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("linkProperties");

        $r20 = (android.net.LinkProperties) $r21;

        staticinvoke <android.net.wifi.WifiStateTracker: android.net.LinkProperties access$202(android.net.wifi.WifiStateTracker,android.net.LinkProperties)>($r18, $r20);

        $r22 = r0.<android.net.wifi.WifiStateTracker$WifiStateReceiver: android.net.wifi.WifiStateTracker this$0>;

        $r26 = staticinvoke <android.net.wifi.WifiStateTracker: android.net.LinkProperties access$300(android.net.wifi.WifiStateTracker)>($r22);

        if $r26 != null goto label1;

        $r58 = r0.<android.net.wifi.WifiStateTracker$WifiStateReceiver: android.net.wifi.WifiStateTracker this$0>;

        $r57 = new android.net.LinkProperties;

        specialinvoke $r57.<android.net.LinkProperties: void <init>()>();

        staticinvoke <android.net.wifi.WifiStateTracker: android.net.LinkProperties access$402(android.net.wifi.WifiStateTracker,android.net.LinkProperties)>($r58, $r57);

     label1:
        $r27 = r0.<android.net.wifi.WifiStateTracker$WifiStateReceiver: android.net.wifi.WifiStateTracker this$0>;

        $r24 = virtualinvoke r2.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("linkCapabilities");

        $r25 = (android.net.LinkCapabilities) $r24;

        staticinvoke <android.net.wifi.WifiStateTracker: android.net.LinkCapabilities access$502(android.net.wifi.WifiStateTracker,android.net.LinkCapabilities)>($r27, $r25);

        $r31 = r0.<android.net.wifi.WifiStateTracker$WifiStateReceiver: android.net.wifi.WifiStateTracker this$0>;

        $r28 = staticinvoke <android.net.wifi.WifiStateTracker: android.net.LinkCapabilities access$600(android.net.wifi.WifiStateTracker)>($r31);

        if $r28 != null goto label2;

        $r55 = r0.<android.net.wifi.WifiStateTracker$WifiStateReceiver: android.net.wifi.WifiStateTracker this$0>;

        $r50 = new android.net.LinkCapabilities;

        specialinvoke $r50.<android.net.LinkCapabilities: void <init>()>();

        staticinvoke <android.net.wifi.WifiStateTracker: android.net.LinkCapabilities access$702(android.net.wifi.WifiStateTracker,android.net.LinkCapabilities)>($r55, $r50);

     label2:
        $r29 = r0.<android.net.wifi.WifiStateTracker$WifiStateReceiver: android.net.wifi.WifiStateTracker this$0>;

        $r34 = virtualinvoke r2.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("wifiInfo");

        $r35 = (android.net.wifi.WifiInfo) $r34;

        staticinvoke <android.net.wifi.WifiStateTracker: android.net.wifi.WifiInfo access$802(android.net.wifi.WifiStateTracker,android.net.wifi.WifiInfo)>($r29, $r35);

        $r33 = r0.<android.net.wifi.WifiStateTracker$WifiStateReceiver: android.net.wifi.WifiStateTracker this$0>;

        $r38 = staticinvoke <android.net.wifi.WifiStateTracker: android.net.NetworkInfo access$900(android.net.wifi.WifiStateTracker)>($r33);

        r3 = virtualinvoke $r38.<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>();

        $r36 = r0.<android.net.wifi.WifiStateTracker$WifiStateReceiver: android.net.wifi.WifiStateTracker this$0>;

        $r37 = staticinvoke <android.net.wifi.WifiStateTracker: android.net.NetworkInfo$State access$1000(android.net.wifi.WifiStateTracker)>($r36);

        if $r37 != r3 goto label4;

        $r47 = r0.<android.net.wifi.WifiStateTracker$WifiStateReceiver: android.net.wifi.WifiStateTracker this$0>;

        $r53 = staticinvoke <android.net.wifi.WifiStateTracker: android.net.NetworkInfo access$1100(android.net.wifi.WifiStateTracker)>($r47);

        $r52 = virtualinvoke $r53.<android.net.NetworkInfo: android.net.NetworkInfo$DetailedState getDetailedState()>();

        $r51 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState CAPTIVE_PORTAL_CHECK>;

        if $r52 == $r51 goto label4;

     label3:
        return;

     label4:
        $r42 = r0.<android.net.wifi.WifiStateTracker$WifiStateReceiver: android.net.wifi.WifiStateTracker this$0>;

        staticinvoke <android.net.wifi.WifiStateTracker: android.net.NetworkInfo$State access$1002(android.net.wifi.WifiStateTracker,android.net.NetworkInfo$State)>($r42, r3);

        $r40 = r0.<android.net.wifi.WifiStateTracker$WifiStateReceiver: android.net.wifi.WifiStateTracker this$0>;

        $r39 = staticinvoke <android.net.wifi.WifiStateTracker: android.net.SamplingDataTracker access$1200(android.net.wifi.WifiStateTracker)>($r40);

        virtualinvoke $r39.<android.net.SamplingDataTracker: void resetSamplingData()>();

        $r46 = r0.<android.net.wifi.WifiStateTracker$WifiStateReceiver: android.net.wifi.WifiStateTracker this$0>;

        $r45 = staticinvoke <android.net.wifi.WifiStateTracker: android.os.Handler access$1400(android.net.wifi.WifiStateTracker)>($r46);

        $r44 = new android.net.NetworkInfo;

        $r43 = r0.<android.net.wifi.WifiStateTracker$WifiStateReceiver: android.net.wifi.WifiStateTracker this$0>;

        $r49 = staticinvoke <android.net.wifi.WifiStateTracker: android.net.NetworkInfo access$1300(android.net.wifi.WifiStateTracker)>($r43);

        specialinvoke $r44.<android.net.NetworkInfo: void <init>(android.net.NetworkInfo)>($r49);

        $r48 = virtualinvoke $r45.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(458752, $r44);

        virtualinvoke $r48.<android.os.Message: void sendToTarget()>();

        return;

     label5:
        $r5 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("android.net.wifi.LINK_CONFIGURATION_CHANGED");

        if $z1 == 0 goto label3;

        $r6 = r0.<android.net.wifi.WifiStateTracker$WifiStateReceiver: android.net.wifi.WifiStateTracker this$0>;

        $r7 = virtualinvoke r2.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("linkProperties");

        $r8 = (android.net.LinkProperties) $r7;

        staticinvoke <android.net.wifi.WifiStateTracker: android.net.LinkProperties access$1502(android.net.wifi.WifiStateTracker,android.net.LinkProperties)>($r6, $r8);

        $r9 = r0.<android.net.wifi.WifiStateTracker$WifiStateReceiver: android.net.wifi.WifiStateTracker this$0>;

        $r12 = staticinvoke <android.net.wifi.WifiStateTracker: android.os.Handler access$1400(android.net.wifi.WifiStateTracker)>($r9);

        $r11 = r0.<android.net.wifi.WifiStateTracker$WifiStateReceiver: android.net.wifi.WifiStateTracker this$0>;

        $r13 = staticinvoke <android.net.wifi.WifiStateTracker: android.net.NetworkInfo access$1600(android.net.wifi.WifiStateTracker)>($r11);

        $r15 = virtualinvoke $r12.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(458753, $r13);

        virtualinvoke $r15.<android.os.Message: void sendToTarget()>();

        return;
    }
}
