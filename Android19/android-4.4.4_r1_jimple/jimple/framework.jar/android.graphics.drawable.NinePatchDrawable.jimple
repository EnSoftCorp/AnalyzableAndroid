public class android.graphics.drawable.NinePatchDrawable extends android.graphics.drawable.Drawable
{
    private static final boolean DEFAULT_DITHER;
    private int mBitmapHeight;
    private int mBitmapWidth;
    private boolean mMutated;
    private android.graphics.NinePatch mNinePatch;
    private android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState;
    private android.graphics.Insets mOpticalInsets;
    private android.graphics.Rect mPadding;
    private android.graphics.Paint mPaint;
    private int mTargetDensity;

    void <init>()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.Insets $r1;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r1 = <android.graphics.Insets: android.graphics.Insets NONE>;

        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Insets mOpticalInsets> = $r1;

        r0.<android.graphics.drawable.NinePatchDrawable: int mTargetDensity> = 160;

        return;
    }

    public void <init>(android.content.res.Resources, android.graphics.Bitmap, byte[], android.graphics.Rect, android.graphics.Rect, java.lang.String)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.content.res.Resources r1;
        android.graphics.Bitmap r2;
        byte[] r3;
        android.graphics.Rect r4, r5;
        java.lang.String r6;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r7, $r9;
        android.graphics.NinePatch $r8;
        int $i0;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: android.graphics.Bitmap;

        r3 := @parameter2: byte[];

        r4 := @parameter3: android.graphics.Rect;

        r5 := @parameter4: android.graphics.Rect;

        r6 := @parameter5: java.lang.String;

        $r7 = new android.graphics.drawable.NinePatchDrawable$NinePatchState;

        $r8 = new android.graphics.NinePatch;

        specialinvoke $r8.<android.graphics.NinePatch: void <init>(android.graphics.Bitmap,byte[],java.lang.String)>(r2, r3, r6);

        specialinvoke $r7.<android.graphics.drawable.NinePatchDrawable$NinePatchState: void <init>(android.graphics.NinePatch,android.graphics.Rect,android.graphics.Rect)>($r8, r4, r5);

        specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState,android.content.res.Resources)>($r7, r1);

        $r9 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $i0 = r0.<android.graphics.drawable.NinePatchDrawable: int mTargetDensity>;

        $r9.<android.graphics.drawable.NinePatchDrawable$NinePatchState: int mTargetDensity> = $i0;

        return;
    }

    public void <init>(android.content.res.Resources, android.graphics.Bitmap, byte[], android.graphics.Rect, java.lang.String)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.content.res.Resources r1;
        android.graphics.Bitmap r2;
        byte[] r3;
        android.graphics.Rect r4;
        java.lang.String r5;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r6, $r8;
        android.graphics.NinePatch $r7;
        int $i0;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: android.graphics.Bitmap;

        r3 := @parameter2: byte[];

        r4 := @parameter3: android.graphics.Rect;

        r5 := @parameter4: java.lang.String;

        $r6 = new android.graphics.drawable.NinePatchDrawable$NinePatchState;

        $r7 = new android.graphics.NinePatch;

        specialinvoke $r7.<android.graphics.NinePatch: void <init>(android.graphics.Bitmap,byte[],java.lang.String)>(r2, r3, r5);

        specialinvoke $r6.<android.graphics.drawable.NinePatchDrawable$NinePatchState: void <init>(android.graphics.NinePatch,android.graphics.Rect)>($r7, r4);

        specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState,android.content.res.Resources)>($r6, r1);

        $r8 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $i0 = r0.<android.graphics.drawable.NinePatchDrawable: int mTargetDensity>;

        $r8.<android.graphics.drawable.NinePatchDrawable$NinePatchState: int mTargetDensity> = $i0;

        return;
    }

    public void <init>(android.content.res.Resources, android.graphics.NinePatch)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.content.res.Resources r1;
        android.graphics.NinePatch r2;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r3, $r5;
        android.graphics.Rect $r4;
        int $i0;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: android.graphics.NinePatch;

        $r3 = new android.graphics.drawable.NinePatchDrawable$NinePatchState;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        specialinvoke $r3.<android.graphics.drawable.NinePatchDrawable$NinePatchState: void <init>(android.graphics.NinePatch,android.graphics.Rect)>(r2, $r4);

        specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState,android.content.res.Resources)>($r3, r1);

        $r5 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $i0 = r0.<android.graphics.drawable.NinePatchDrawable: int mTargetDensity>;

        $r5.<android.graphics.drawable.NinePatchDrawable$NinePatchState: int mTargetDensity> = $i0;

        return;
    }

    public void <init>(android.graphics.Bitmap, byte[], android.graphics.Rect, java.lang.String)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.Bitmap r1;
        byte[] r2;
        android.graphics.Rect r3;
        java.lang.String r4;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r5;
        android.graphics.NinePatch $r6;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.graphics.Bitmap;

        r2 := @parameter1: byte[];

        r3 := @parameter2: android.graphics.Rect;

        r4 := @parameter3: java.lang.String;

        $r5 = new android.graphics.drawable.NinePatchDrawable$NinePatchState;

        $r6 = new android.graphics.NinePatch;

        specialinvoke $r6.<android.graphics.NinePatch: void <init>(android.graphics.Bitmap,byte[],java.lang.String)>(r1, r2, r4);

        specialinvoke $r5.<android.graphics.drawable.NinePatchDrawable$NinePatchState: void <init>(android.graphics.NinePatch,android.graphics.Rect)>($r6, r3);

        specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState,android.content.res.Resources)>($r5, null);

        return;
    }

    public void <init>(android.graphics.NinePatch)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.NinePatch r1;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r2;
        android.graphics.Rect $r3;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.graphics.NinePatch;

        $r2 = new android.graphics.drawable.NinePatchDrawable$NinePatchState;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        specialinvoke $r2.<android.graphics.drawable.NinePatchDrawable$NinePatchState: void <init>(android.graphics.NinePatch,android.graphics.Rect)>(r1, $r3);

        specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState,android.content.res.Resources)>($r2, null);

        return;
    }

    private void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState, android.content.res.Resources)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.drawable.NinePatchDrawable$NinePatchState r1;
        android.content.res.Resources r2;
        android.graphics.Insets $r3;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.graphics.drawable.NinePatchDrawable$NinePatchState;

        r2 := @parameter1: android.content.res.Resources;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r3 = <android.graphics.Insets: android.graphics.Insets NONE>;

        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Insets mOpticalInsets> = $r3;

        r0.<android.graphics.drawable.NinePatchDrawable: int mTargetDensity> = 160;

        specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: void setNinePatchState(android.graphics.drawable.NinePatchDrawable$NinePatchState,android.content.res.Resources)>(r1, r2);

        return;
    }

    void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState, android.content.res.Resources, android.graphics.drawable.NinePatchDrawable$1)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.drawable.NinePatchDrawable$NinePatchState r1;
        android.content.res.Resources r2;
        android.graphics.drawable.NinePatchDrawable$1 r3;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.graphics.drawable.NinePatchDrawable$NinePatchState;

        r2 := @parameter1: android.content.res.Resources;

        r3 := @parameter2: android.graphics.drawable.NinePatchDrawable$1;

        specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState,android.content.res.Resources)>(r1, r2);

        return;
    }

    private void computeBitmapSize()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        android.graphics.Rect r1, r2, $r7, $r12, $r14;
        android.graphics.NinePatch $r3, $r4, $r5, $r13, $r15;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r6, $r8, $r11, $r17;
        android.graphics.Insets $r9, $r10, $r16;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $r3 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.NinePatch mNinePatch>;

        i0 = virtualinvoke $r3.<android.graphics.NinePatch: int getDensity()>();

        i1 = r0.<android.graphics.drawable.NinePatchDrawable: int mTargetDensity>;

        if i0 != i1 goto label1;

        $r13 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.NinePatch mNinePatch>;

        $i14 = virtualinvoke $r13.<android.graphics.NinePatch: int getWidth()>();

        r0.<android.graphics.drawable.NinePatchDrawable: int mBitmapWidth> = $i14;

        $r15 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.NinePatch mNinePatch>;

        $i15 = virtualinvoke $r15.<android.graphics.NinePatch: int getHeight()>();

        r0.<android.graphics.drawable.NinePatchDrawable: int mBitmapHeight> = $i15;

        $r17 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $r16 = $r17.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.Insets mOpticalInsets>;

        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Insets mOpticalInsets> = $r16;

        return;

     label1:
        $r4 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.NinePatch mNinePatch>;

        $i2 = virtualinvoke $r4.<android.graphics.NinePatch: int getWidth()>();

        $i3 = staticinvoke <android.graphics.Bitmap: int scaleFromDensity(int,int,int)>($i2, i0, i1);

        r0.<android.graphics.drawable.NinePatchDrawable: int mBitmapWidth> = $i3;

        $r5 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.NinePatch mNinePatch>;

        $i4 = virtualinvoke $r5.<android.graphics.NinePatch: int getHeight()>();

        $i5 = staticinvoke <android.graphics.Bitmap: int scaleFromDensity(int,int,int)>($i4, i0, i1);

        r0.<android.graphics.drawable.NinePatchDrawable: int mBitmapHeight> = $i5;

        $r6 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $r7 = $r6.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.Rect mPadding>;

        if $r7 == null goto label3;

        $r12 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Rect mPadding>;

        if $r12 == null goto label3;

        r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Rect mPadding>;

        $r11 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        r2 = $r11.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.Rect mPadding>;

        if r1 != r2 goto label2;

        $r14 = new android.graphics.Rect;

        specialinvoke $r14.<android.graphics.Rect: void <init>(android.graphics.Rect)>(r2);

        r1 = $r14;

        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Rect mPadding> = r1;

     label2:
        $i7 = r2.<android.graphics.Rect: int left>;

        $i6 = staticinvoke <android.graphics.Bitmap: int scaleFromDensity(int,int,int)>($i7, i0, i1);

        r1.<android.graphics.Rect: int left> = $i6;

        $i9 = r2.<android.graphics.Rect: int top>;

        $i8 = staticinvoke <android.graphics.Bitmap: int scaleFromDensity(int,int,int)>($i9, i0, i1);

        r1.<android.graphics.Rect: int top> = $i8;

        $i11 = r2.<android.graphics.Rect: int right>;

        $i10 = staticinvoke <android.graphics.Bitmap: int scaleFromDensity(int,int,int)>($i11, i0, i1);

        r1.<android.graphics.Rect: int right> = $i10;

        $i13 = r2.<android.graphics.Rect: int bottom>;

        $i12 = staticinvoke <android.graphics.Bitmap: int scaleFromDensity(int,int,int)>($i13, i0, i1);

        r1.<android.graphics.Rect: int bottom> = $i12;

     label3:
        $r8 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $r10 = $r8.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.Insets mOpticalInsets>;

        $r9 = staticinvoke <android.graphics.drawable.NinePatchDrawable: android.graphics.Insets scaleFromDensity(android.graphics.Insets,int,int)>($r10, i0, i1);

        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Insets mOpticalInsets> = $r9;

        return;
    }

    private boolean needsMirroring()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        boolean $z0;
        int $i0;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $z0 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: boolean isAutoMirrored()>();

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: int getLayoutDirection()>();

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static android.graphics.Insets scaleFromDensity(android.graphics.Insets, int, int)
    {
        android.graphics.Insets r0, $r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;

        r0 := @parameter0: android.graphics.Insets;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = r0.<android.graphics.Insets: int left>;

        $i3 = staticinvoke <android.graphics.Bitmap: int scaleFromDensity(int,int,int)>($i2, i0, i1);

        $i4 = r0.<android.graphics.Insets: int top>;

        $i5 = staticinvoke <android.graphics.Bitmap: int scaleFromDensity(int,int,int)>($i4, i0, i1);

        $i6 = r0.<android.graphics.Insets: int right>;

        $i7 = staticinvoke <android.graphics.Bitmap: int scaleFromDensity(int,int,int)>($i6, i0, i1);

        $i8 = r0.<android.graphics.Insets: int bottom>;

        $i9 = staticinvoke <android.graphics.Bitmap: int scaleFromDensity(int,int,int)>($i8, i0, i1);

        $r1 = staticinvoke <android.graphics.Insets: android.graphics.Insets of(int,int,int,int)>($i3, $i5, $i7, $i9);

        return $r1;
    }

    private void setNinePatchState(android.graphics.drawable.NinePatchDrawable$NinePatchState, android.content.res.Resources)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.drawable.NinePatchDrawable$NinePatchState r1;
        android.content.res.Resources r2;
        int i0;
        android.graphics.NinePatch $r3, $r5;
        android.graphics.Rect $r4;
        boolean $z0, $z1, $z2;
        android.util.DisplayMetrics $r6;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.graphics.drawable.NinePatchDrawable$NinePatchState;

        r2 := @parameter1: android.content.res.Resources;

        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState> = r1;

        $r3 = r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.NinePatch mNinePatch>;

        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.NinePatch mNinePatch> = $r3;

        $r4 = r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.Rect mPadding>;

        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Rect mPadding> = $r4;

        if r2 == null goto label4;

        $r6 = virtualinvoke r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        i0 = $r6.<android.util.DisplayMetrics: int densityDpi>;

     label1:
        r0.<android.graphics.drawable.NinePatchDrawable: int mTargetDensity> = i0;

        $z0 = r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: boolean mDither>;

        if $z0 == 0 goto label2;

        $z2 = r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: boolean mDither>;

        virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: void setDither(boolean)>($z2);

     label2:
        $z1 = r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: boolean mAutoMirrored>;

        virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: void setAutoMirrored(boolean)>($z1);

        $r5 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.NinePatch mNinePatch>;

        if $r5 == null goto label3;

        specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: void computeBitmapSize()>();

     label3:
        return;

     label4:
        i0 = r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: int mTargetDensity>;

        goto label1;
    }

    public void draw(android.graphics.Canvas)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.Canvas r1;
        android.graphics.Rect r2;
        boolean z0;
        android.graphics.Paint $r3;
        android.graphics.NinePatch $r4;
        int $i1, $i2, $i3;
        float $f0;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        r2 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Rect getBounds()>();

        z0 = specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: boolean needsMirroring()>();

        if z0 == 0 goto label1;

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $i2 = r2.<android.graphics.Rect: int right>;

        $i1 = r2.<android.graphics.Rect: int left>;

        $i3 = $i2 - $i1;

        $f0 = (float) $i3;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f0, 0.0F);

        virtualinvoke r1.<android.graphics.Canvas: void scale(float,float)>(-1.0F, 1.0F);

     label1:
        $r4 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.NinePatch mNinePatch>;

        $r3 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r4.<android.graphics.NinePatch: void draw(android.graphics.Canvas,android.graphics.Rect,android.graphics.Paint)>(r1, r2, $r3);

        if z0 == 0 goto label2;

        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

     label2:
        return;
    }

    public int getAlpha()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.Paint $r1, $r2;
        int $i0;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint mPaint>;

        if $r1 != null goto label1;

        return 255;

     label1:
        $r2 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint getPaint()>();

        $i0 = virtualinvoke $r2.<android.graphics.Paint: int getAlpha()>();

        return $i0;
    }

    public int getChangingConfigurations()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        int $i0, $i1, $i2;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r1;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $i0 = specialinvoke r0.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $i1 = $r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: int mChangingConfigurations>;

        $i2 = $i0 | $i1;

        return $i2;
    }

    public android.graphics.drawable.Drawable$ConstantState getConstantState()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r1, $r2;
        int $i0;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $i0 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: int getChangingConfigurations()>();

        $r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: int mChangingConfigurations> = $i0;

        $r2 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        return $r2;
    }

    public int getIntrinsicHeight()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        int $i0;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $i0 = r0.<android.graphics.drawable.NinePatchDrawable: int mBitmapHeight>;

        return $i0;
    }

    public int getIntrinsicWidth()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        int $i0;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $i0 = r0.<android.graphics.drawable.NinePatchDrawable: int mBitmapWidth>;

        return $i0;
    }

    public int getMinimumHeight()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        int $i0;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $i0 = r0.<android.graphics.drawable.NinePatchDrawable: int mBitmapHeight>;

        return $i0;
    }

    public int getMinimumWidth()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        int $i0;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $i0 = r0.<android.graphics.drawable.NinePatchDrawable: int mBitmapWidth>;

        return $i0;
    }

    public int getOpacity()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.NinePatch $r1;
        boolean $z0;
        android.graphics.Paint $r2, $r3;
        int $i0;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.NinePatch mNinePatch>;

        $z0 = virtualinvoke $r1.<android.graphics.NinePatch: boolean hasAlpha()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint mPaint>;

        if $r2 == null goto label2;

        $r3 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint mPaint>;

        $i0 = virtualinvoke $r3.<android.graphics.Paint: int getAlpha()>();

        if $i0 >= 255 goto label2;

     label1:
        return -3;

     label2:
        return -1;
    }

    public android.graphics.Insets getOpticalInsets()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        boolean $z0;
        android.graphics.Insets $r1, $r2, $r3, $r4, $r5, $r6;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $z0 = specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: boolean needsMirroring()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Insets mOpticalInsets>;

        $i3 = $r2.<android.graphics.Insets: int right>;

        $r3 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Insets mOpticalInsets>;

        $i2 = $r3.<android.graphics.Insets: int top>;

        $r4 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Insets mOpticalInsets>;

        $i1 = $r4.<android.graphics.Insets: int right>;

        $r5 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Insets mOpticalInsets>;

        $i0 = $r5.<android.graphics.Insets: int bottom>;

        $r6 = staticinvoke <android.graphics.Insets: android.graphics.Insets of(int,int,int,int)>($i3, $i2, $i1, $i0);

        return $r6;

     label1:
        $r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Insets mOpticalInsets>;

        return $r1;
    }

    public boolean getPadding(android.graphics.Rect)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.Rect r1, $r2, $r3, $r4, $r5, $r6;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.graphics.Rect;

        $z0 = specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: boolean needsMirroring()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Rect mPadding>;

        $i10 = $r3.<android.graphics.Rect: int right>;

        $r4 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Rect mPadding>;

        $i8 = $r4.<android.graphics.Rect: int top>;

        $r5 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Rect mPadding>;

        $i9 = $r5.<android.graphics.Rect: int left>;

        $r6 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Rect mPadding>;

        $i7 = $r6.<android.graphics.Rect: int bottom>;

        virtualinvoke r1.<android.graphics.Rect: void set(int,int,int,int)>($i10, $i8, $i9, $i7);

     label1:
        $i1 = r1.<android.graphics.Rect: int left>;

        $i0 = r1.<android.graphics.Rect: int top>;

        $i3 = $i1 | $i0;

        $i2 = r1.<android.graphics.Rect: int right>;

        $i5 = $i3 | $i2;

        $i4 = r1.<android.graphics.Rect: int bottom>;

        $i6 = $i5 | $i4;

        if $i6 == 0 goto label3;

        return 1;

     label2:
        $r2 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Rect mPadding>;

        virtualinvoke r1.<android.graphics.Rect: void set(android.graphics.Rect)>($r2);

        goto label1;

     label3:
        return 0;
    }

    public android.graphics.Paint getPaint()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.Paint $r1, $r2, $r3, $r4;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint mPaint>;

        if $r1 != null goto label1;

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>()>();

        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint mPaint> = $r3;

        $r4 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r4.<android.graphics.Paint: void setDither(boolean)>(0);

     label1:
        $r2 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint mPaint>;

        return $r2;
    }

    public android.graphics.Region getTransparentRegion()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.NinePatch $r1;
        android.graphics.Rect $r2;
        android.graphics.Region $r3;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.NinePatch mNinePatch>;

        $r2 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Rect getBounds()>();

        $r3 = virtualinvoke $r1.<android.graphics.NinePatch: android.graphics.Region getTransparentRegion(android.graphics.Rect)>($r2);

        return $r3;
    }

    public void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.content.res.Resources r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.util.AttributeSet r3;
        android.content.res.TypedArray r4;
        int i0, $i1, $i2;
        boolean z0, z1;
        android.graphics.BitmapFactory$Options r5, r44;
        android.graphics.Rect r6, r7, r45, r46;
        android.graphics.Bitmap r8;
        android.util.TypedValue r9, r47;
        java.io.InputStream r11;
        int[] $r12;
        android.util.DisplayMetrics $r14;
        byte[] $r18, $r20;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r24, r53;
        java.lang.StringBuilder $r25, $r28, $r30, $r35, $r38, $r39, r42, r48, r50;
        java.lang.String $r26, $r27, $r29, $r36, $r37, $r40;
        java.io.IOException $r41;
        org.xmlpull.v1.XmlPullParserException r43, r49, r51;
        android.graphics.NinePatch r52;
        java.lang.Throwable r54, r55, r56;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter2: android.util.AttributeSet;

        specialinvoke r0.<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>(r1, r2, r3);

        $r12 = <com.android.internal.R$styleable: int[] NinePatchDrawable>;

        r4 = virtualinvoke r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r3, $r12);

        i0 = virtualinvoke r4.<android.content.res.TypedArray: int getResourceId(int,int)>(0, 0);

        if i0 != 0 goto label1;

        r43 = new org.xmlpull.v1.XmlPullParserException;

        r42 = new java.lang.StringBuilder;

        specialinvoke r42.<java.lang.StringBuilder: void <init>()>();

        $r40 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r39 = virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <nine-patch> requires a valid src attribute");

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r43.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r37);

        r54 = (java.lang.Throwable) r43;

        throw r54;

     label1:
        z0 = virtualinvoke r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(1, 0);

        r44 = new android.graphics.BitmapFactory$Options;

        specialinvoke r44.<android.graphics.BitmapFactory$Options: void <init>()>();

        r5 = r44;

        if z0 == 0 goto label2;

        r5.<android.graphics.BitmapFactory$Options: boolean inDither> = 0;

     label2:
        $r14 = virtualinvoke r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $i1 = $r14.<android.util.DisplayMetrics: int noncompatDensityDpi>;

        r5.<android.graphics.BitmapFactory$Options: int inScreenDensity> = $i1;

        r45 = new android.graphics.Rect;

        specialinvoke r45.<android.graphics.Rect: void <init>()>();

        r6 = r45;

        r46 = new android.graphics.Rect;

        specialinvoke r46.<android.graphics.Rect: void <init>()>();

        r7 = r46;

        r8 = null;

     label3:
        r47 = new android.util.TypedValue;

        specialinvoke r47.<android.util.TypedValue: void <init>()>();

        r9 = r47;

        r11 = virtualinvoke r1.<android.content.res.Resources: java.io.InputStream openRawResource(int,android.util.TypedValue)>(i0, r9);

        r8 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>(r1, r9, r11, r6, r5);

        virtualinvoke r11.<java.io.InputStream: void close()>();

     label4:
        if r8 != null goto label5;

        r49 = new org.xmlpull.v1.XmlPullParserException;

        r48 = new java.lang.StringBuilder;

        specialinvoke r48.<java.lang.StringBuilder: void <init>()>();

        $r29 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r30 = virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r35 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <nine-patch> requires a valid src attribute");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r49.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r36);

        r55 = (java.lang.Throwable) r49;

        throw r55;

     label5:
        $r18 = virtualinvoke r8.<android.graphics.Bitmap: byte[] getNinePatchChunk()>();

        if $r18 != null goto label6;

        r51 = new org.xmlpull.v1.XmlPullParserException;

        r50 = new java.lang.StringBuilder;

        specialinvoke r50.<java.lang.StringBuilder: void <init>()>();

        $r27 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r28 = virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r25 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <nine-patch> requires a valid 9-patch source image");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r51.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r26);

        r56 = (java.lang.Throwable) r51;

        throw r56;

     label6:
        z1 = virtualinvoke r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(2, 0);

        r53 = new android.graphics.drawable.NinePatchDrawable$NinePatchState;

        r52 = new android.graphics.NinePatch;

        $r20 = virtualinvoke r8.<android.graphics.Bitmap: byte[] getNinePatchChunk()>();

        specialinvoke r52.<android.graphics.NinePatch: void <init>(android.graphics.Bitmap,byte[])>(r8, $r20);

        specialinvoke r53.<android.graphics.drawable.NinePatchDrawable$NinePatchState: void <init>(android.graphics.NinePatch,android.graphics.Rect,android.graphics.Rect,boolean,boolean)>(r52, r6, r7, z0, z1);

        specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: void setNinePatchState(android.graphics.drawable.NinePatchDrawable$NinePatchState,android.content.res.Resources)>(r53, r1);

        $r24 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $i2 = r0.<android.graphics.drawable.NinePatchDrawable: int mTargetDensity>;

        $r24.<android.graphics.drawable.NinePatchDrawable$NinePatchState: int mTargetDensity> = $i2;

        virtualinvoke r4.<android.content.res.TypedArray: void recycle()>();

        return;

     label7:
        $r41 := @caughtexception;

        goto label4;

        catch java.io.IOException from label3 to label4 with label7;
    }

    public boolean isAutoMirrored()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r1;
        boolean $z0;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $z0 = $r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: boolean mAutoMirrored>;

        return $z0;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        boolean $z0;
        android.graphics.drawable.Drawable $r1;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r2, $r3, $r4;
        android.graphics.NinePatch $r5;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $z0 = r0.<android.graphics.drawable.NinePatchDrawable: boolean mMutated>;

        if $z0 != 0 goto label1;

        $r1 = specialinvoke r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        if $r1 != r0 goto label1;

        $r2 = new android.graphics.drawable.NinePatchDrawable$NinePatchState;

        $r3 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        specialinvoke $r2.<android.graphics.drawable.NinePatchDrawable$NinePatchState: void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState)>($r3);

        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState> = $r2;

        $r4 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $r5 = $r4.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.NinePatch mNinePatch>;

        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.NinePatch mNinePatch> = $r5;

        r0.<android.graphics.drawable.NinePatchDrawable: boolean mMutated> = 1;

     label1:
        return r0;
    }

    public void setAlpha(int)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        int i0;
        android.graphics.Paint $r1, $r2;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint mPaint>;

        if $r1 != null goto label1;

        if i0 != 255 goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint getPaint()>();

        virtualinvoke $r2.<android.graphics.Paint: void setAlpha(int)>(i0);

        virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: void invalidateSelf()>();

        return;
    }

    public void setAutoMirrored(boolean)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        boolean z0;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r1;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: boolean mAutoMirrored> = z0;

        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.ColorFilter r1;
        android.graphics.Paint $r2, $r3;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint mPaint>;

        if $r2 != null goto label1;

        if r1 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint getPaint()>();

        virtualinvoke $r3.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(r1);

        virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: void invalidateSelf()>();

        return;
    }

    public void setDither(boolean)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        boolean z0;
        android.graphics.Paint $r1, $r2;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint mPaint>;

        if $r1 != null goto label1;

        if z0 != 0 goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint getPaint()>();

        virtualinvoke $r2.<android.graphics.Paint: void setDither(boolean)>(z0);

        virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: void invalidateSelf()>();

        return;
    }

    public void setFilterBitmap(boolean)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        boolean z0;
        android.graphics.Paint $r1;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint getPaint()>();

        virtualinvoke $r1.<android.graphics.Paint: void setFilterBitmap(boolean)>(z0);

        virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: void invalidateSelf()>();

        return;
    }

    public void setTargetDensity(int)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        int i0, $i1;
        android.graphics.NinePatch $r1;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        i0 := @parameter0: int;

        $i1 = r0.<android.graphics.drawable.NinePatchDrawable: int mTargetDensity>;

        if i0 == $i1 goto label3;

        if i0 != 0 goto label1;

        i0 = 160;

     label1:
        r0.<android.graphics.drawable.NinePatchDrawable: int mTargetDensity> = i0;

        $r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.NinePatch mNinePatch>;

        if $r1 == null goto label2;

        specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: void computeBitmapSize()>();

     label2:
        virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: void invalidateSelf()>();

     label3:
        return;
    }

    public void setTargetDensity(android.graphics.Canvas)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.Canvas r1;
        int $i0;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        $i0 = virtualinvoke r1.<android.graphics.Canvas: int getDensity()>();

        virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: void setTargetDensity(int)>($i0);

        return;
    }

    public void setTargetDensity(android.util.DisplayMetrics)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.util.DisplayMetrics r1;
        int $i0;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.util.DisplayMetrics;

        $i0 = r1.<android.util.DisplayMetrics: int densityDpi>;

        virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: void setTargetDensity(int)>($i0);

        return;
    }
}
