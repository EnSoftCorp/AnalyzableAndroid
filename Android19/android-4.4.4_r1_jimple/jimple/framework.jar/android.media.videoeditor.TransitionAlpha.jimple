public class android.media.videoeditor.TransitionAlpha extends android.media.videoeditor.Transition
{
    private final int mBlendingPercent;
    private int mHeight;
    private final boolean mIsInvert;
    private final java.lang.String mMaskFilename;
    private java.lang.String mRGBMaskFile;
    private int mWidth;

    private void <init>()
    {
        android.media.videoeditor.TransitionAlpha r0;

        r0 := @this: android.media.videoeditor.TransitionAlpha;

        specialinvoke r0.<android.media.videoeditor.TransitionAlpha: void <init>(java.lang.String,android.media.videoeditor.MediaItem,android.media.videoeditor.MediaItem,long,int,java.lang.String,int,boolean)>(null, null, null, 0L, 0, null, 0, 0);

        return;
    }

    public void <init>(java.lang.String, android.media.videoeditor.MediaItem, android.media.videoeditor.MediaItem, long, int, java.lang.String, int, boolean)
    {
        android.media.videoeditor.TransitionAlpha r0;
        java.lang.String r1, r4, $r23, $r25, $r29, $r31, $r42;
        android.media.videoeditor.MediaItem r2, r3;
        long l0;
        int i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        boolean z0, $z1;
        android.graphics.BitmapFactory$Options r5, $r17;
        java.io.FileOutputStream r6, r7, $r32;
        java.io.DataOutputStream r8, $r30;
        android.graphics.Bitmap r9;
        java.nio.ByteBuffer r10;
        int[] r11;
        byte[] r12;
        java.io.File $r16;
        android.media.videoeditor.MediaArtistNativeHelper $r19;
        java.lang.StringBuilder $r20, $r21, $r22, $r24, $r27, $r28, $r35, $r36, $r37;
        java.lang.Object[] $r26;
        java.nio.IntBuffer $r34;
        java.lang.IllegalArgumentException $r38;
        java.io.IOException $r39, $r40, $r41;

        r0 := @this: android.media.videoeditor.TransitionAlpha;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.media.videoeditor.MediaItem;

        r3 := @parameter2: android.media.videoeditor.MediaItem;

        l0 := @parameter3: long;

        i1 := @parameter4: int;

        r4 := @parameter5: java.lang.String;

        i2 := @parameter6: int;

        z0 := @parameter7: boolean;

        specialinvoke r0.<android.media.videoeditor.Transition: void <init>(java.lang.String,android.media.videoeditor.MediaItem,android.media.videoeditor.MediaItem,long,int)>(r1, r2, r3, l0, i1);

        $r17 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r17.<android.graphics.BitmapFactory$Options: void <init>()>();

        r5 = $r17;

        r5.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 1;

        $r16 = new java.io.File;

        specialinvoke $r16.<java.io.File: void <init>(java.lang.String)>(r4);

        $z1 = virtualinvoke $r16.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label01;

        $r38 = new java.lang.IllegalArgumentException;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File not Found ");

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r42 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r38.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r42);

        throw $r38;

     label01:
        staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>(r4, r5);

        $i5 = r5.<android.graphics.BitmapFactory$Options: int outWidth>;

        r0.<android.media.videoeditor.TransitionAlpha: int mWidth> = $i5;

        $i4 = r5.<android.graphics.BitmapFactory$Options: int outHeight>;

        r0.<android.media.videoeditor.TransitionAlpha: int mHeight> = $i4;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = r0.<android.media.videoeditor.TransitionAlpha: android.media.videoeditor.MediaArtistNativeHelper mNativeHelper>;

        $r23 = virtualinvoke $r19.<android.media.videoeditor.MediaArtistNativeHelper: java.lang.String getProjectPath()>();

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r21 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mask");

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".rgb");

        $r25 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        $r26 = newarray (java.lang.Object)[0];

        $r31 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r25, $r26);

        r0.<android.media.videoeditor.TransitionAlpha: java.lang.String mRGBMaskFile> = $r31;

     label02:
        $r32 = new java.io.FileOutputStream;

        $r29 = r0.<android.media.videoeditor.TransitionAlpha: java.lang.String mRGBMaskFile>;

        specialinvoke $r32.<java.io.FileOutputStream: void <init>(java.lang.String)>($r29);

        r6 = $r32;

     label03:
        r7 = r6;

     label04:
        $r30 = new java.io.DataOutputStream;

        specialinvoke $r30.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r7);

        r8 = $r30;

        if r7 == null goto label10;

        r9 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>(r4);

        $i8 = r0.<android.media.videoeditor.TransitionAlpha: int mWidth>;

        r11 = newarray (int)[$i8];

        $i6 = lengthof r11;

        $i7 = 4 * $i6;

        r10 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i7);

        r12 = virtualinvoke r10.<java.nio.ByteBuffer: byte[] array()>();

        i3 = 0;

     label05:
        $i10 = r0.<android.media.videoeditor.TransitionAlpha: int mHeight>;

        if i3 >= $i10 goto label08;

        $i12 = r0.<android.media.videoeditor.TransitionAlpha: int mWidth>;

        $i9 = r0.<android.media.videoeditor.TransitionAlpha: int mWidth>;

        virtualinvoke r9.<android.graphics.Bitmap: void getPixels(int[],int,int,int,int,int,int)>(r11, 0, $i12, 0, i3, $i9, 1);

        $r34 = virtualinvoke r10.<java.nio.ByteBuffer: java.nio.IntBuffer asIntBuffer()>();

        $i11 = r0.<android.media.videoeditor.TransitionAlpha: int mWidth>;

        virtualinvoke $r34.<java.nio.IntBuffer: java.nio.IntBuffer put(int[],int,int)>(r11, 0, $i11);

     label06:
        virtualinvoke r8.<java.io.DataOutputStream: void write(byte[])>(r12);

     label07:
        i3 = i3 + 1;

        goto label05;

     label08:
        virtualinvoke r9.<android.graphics.Bitmap: void recycle()>();

     label09:
        virtualinvoke r7.<java.io.FileOutputStream: void close()>();

     label10:
        r0.<android.media.videoeditor.TransitionAlpha: java.lang.String mMaskFilename> = r4;

        r0.<android.media.videoeditor.TransitionAlpha: int mBlendingPercent> = i2;

        r0.<android.media.videoeditor.TransitionAlpha: boolean mIsInvert> = z0;

        return;

     label11:
        $r40 := @caughtexception;

        goto label07;

     label12:
        $r39 := @caughtexception;

        goto label10;

     label13:
        $r41 := @caughtexception;

        r7 = null;

        goto label04;

        catch java.io.IOException from label02 to label03 with label13;
        catch java.io.IOException from label06 to label07 with label11;
        catch java.io.IOException from label09 to label10 with label12;
    }

    public void generate()
    {
        android.media.videoeditor.TransitionAlpha r0;

        r0 := @this: android.media.videoeditor.TransitionAlpha;

        specialinvoke r0.<android.media.videoeditor.Transition: void generate()>();

        return;
    }

    public int getBlendingPercent()
    {
        android.media.videoeditor.TransitionAlpha r0;
        int $i0;

        r0 := @this: android.media.videoeditor.TransitionAlpha;

        $i0 = r0.<android.media.videoeditor.TransitionAlpha: int mBlendingPercent>;

        return $i0;
    }

    public java.lang.String getMaskFilename()
    {
        android.media.videoeditor.TransitionAlpha r0;
        java.lang.String $r1;

        r0 := @this: android.media.videoeditor.TransitionAlpha;

        $r1 = r0.<android.media.videoeditor.TransitionAlpha: java.lang.String mMaskFilename>;

        return $r1;
    }

    public java.lang.String getPNGMaskFilename()
    {
        android.media.videoeditor.TransitionAlpha r0;
        java.lang.String $r1;

        r0 := @this: android.media.videoeditor.TransitionAlpha;

        $r1 = r0.<android.media.videoeditor.TransitionAlpha: java.lang.String mRGBMaskFile>;

        return $r1;
    }

    public int getRGBFileHeight()
    {
        android.media.videoeditor.TransitionAlpha r0;
        int $i0;

        r0 := @this: android.media.videoeditor.TransitionAlpha;

        $i0 = r0.<android.media.videoeditor.TransitionAlpha: int mHeight>;

        return $i0;
    }

    public int getRGBFileWidth()
    {
        android.media.videoeditor.TransitionAlpha r0;
        int $i0;

        r0 := @this: android.media.videoeditor.TransitionAlpha;

        $i0 = r0.<android.media.videoeditor.TransitionAlpha: int mWidth>;

        return $i0;
    }

    public boolean isInvert()
    {
        android.media.videoeditor.TransitionAlpha r0;
        boolean $z0;

        r0 := @this: android.media.videoeditor.TransitionAlpha;

        $z0 = r0.<android.media.videoeditor.TransitionAlpha: boolean mIsInvert>;

        return $z0;
    }
}
