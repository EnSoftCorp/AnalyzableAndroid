public class android.media.videoeditor.VideoEditorImpl extends java.lang.Object implements android.media.videoeditor.VideoEditor
{
    private static final java.lang.String ATTR_AFTER_MEDIA_ITEM_ID;
    private static final java.lang.String ATTR_ASPECT_RATIO;
    private static final java.lang.String ATTR_AUDIO_WAVEFORM_FILENAME;
    private static final java.lang.String ATTR_BEFORE_MEDIA_ITEM_ID;
    private static final java.lang.String ATTR_BEGIN_TIME;
    private static final java.lang.String ATTR_BEHAVIOR;
    private static final java.lang.String ATTR_BLENDING;
    private static final java.lang.String ATTR_COLOR_EFFECT_TYPE;
    private static final java.lang.String ATTR_COLOR_EFFECT_VALUE;
    private static final java.lang.String ATTR_DIRECTION;
    private static final java.lang.String ATTR_DUCKED_TRACK_VOLUME;
    private static final java.lang.String ATTR_DUCK_ENABLED;
    private static final java.lang.String ATTR_DUCK_THRESHOLD;
    private static final java.lang.String ATTR_DURATION;
    private static final java.lang.String ATTR_END_RECT_BOTTOM;
    private static final java.lang.String ATTR_END_RECT_LEFT;
    private static final java.lang.String ATTR_END_RECT_RIGHT;
    private static final java.lang.String ATTR_END_RECT_TOP;
    private static final java.lang.String ATTR_END_TIME;
    private static final java.lang.String ATTR_FILENAME;
    private static final java.lang.String ATTR_GENERATED_IMAGE_CLIP;
    private static final java.lang.String ATTR_GENERATED_TRANSITION_CLIP;
    private static final java.lang.String ATTR_ID;
    private static final java.lang.String ATTR_INVERT;
    private static final java.lang.String ATTR_IS_IMAGE_CLIP_GENERATED;
    private static final java.lang.String ATTR_IS_TRANSITION_GENERATED;
    private static final java.lang.String ATTR_LOOP;
    private static final java.lang.String ATTR_MASK;
    private static final java.lang.String ATTR_MUTED;
    private static final java.lang.String ATTR_OVERLAY_FRAME_HEIGHT;
    private static final java.lang.String ATTR_OVERLAY_FRAME_WIDTH;
    private static final java.lang.String ATTR_OVERLAY_RESIZED_RGB_FRAME_HEIGHT;
    private static final java.lang.String ATTR_OVERLAY_RESIZED_RGB_FRAME_WIDTH;
    private static final java.lang.String ATTR_OVERLAY_RGB_FILENAME;
    private static final java.lang.String ATTR_REGENERATE_PCM;
    private static final java.lang.String ATTR_RENDERING_MODE;
    private static final java.lang.String ATTR_START_RECT_BOTTOM;
    private static final java.lang.String ATTR_START_RECT_LEFT;
    private static final java.lang.String ATTR_START_RECT_RIGHT;
    private static final java.lang.String ATTR_START_RECT_TOP;
    private static final java.lang.String ATTR_START_TIME;
    private static final java.lang.String ATTR_TYPE;
    private static final java.lang.String ATTR_VOLUME;
    private static final int ENGINE_ACCESS_MAX_TIMEOUT_MS;
    private static final java.lang.String PROJECT_FILENAME;
    private static final java.lang.String TAG;
    private static final java.lang.String TAG_AUDIO_TRACK;
    private static final java.lang.String TAG_AUDIO_TRACKS;
    private static final java.lang.String TAG_EFFECT;
    private static final java.lang.String TAG_EFFECTS;
    private static final java.lang.String TAG_MEDIA_ITEM;
    private static final java.lang.String TAG_MEDIA_ITEMS;
    private static final java.lang.String TAG_OVERLAY;
    private static final java.lang.String TAG_OVERLAYS;
    private static final java.lang.String TAG_OVERLAY_USER_ATTRIBUTES;
    private static final java.lang.String TAG_PROJECT;
    private static final java.lang.String TAG_TRANSITION;
    private static final java.lang.String TAG_TRANSITIONS;
    private int mAspectRatio;
    private final java.util.List mAudioTracks;
    private long mDurationMs;
    private final java.util.concurrent.Semaphore mLock;
    private android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper;
    private final boolean mMallocDebug;
    private final java.util.List mMediaItems;
    private boolean mPreviewInProgress;
    private final java.lang.String mProjectPath;
    private final java.util.List mTransitions;

    public void <init>(java.lang.String) throws java.io.IOException
    {
        android.media.videoeditor.VideoEditorImpl r0;
        java.lang.String r1, $r7, $r15;
        java.lang.Exception r2, $r12, $r14;
        java.util.ArrayList $r4, $r5, $r6;
        boolean $z0, $z1;
        java.util.concurrent.Semaphore $r8, $r10;
        android.media.videoeditor.MediaArtistNativeHelper $r9;
        java.io.File $r11;
        java.io.IOException $r13;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mAudioTracks> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mTransitions> = $r6;

        r0.<android.media.videoeditor.VideoEditorImpl: boolean mPreviewInProgress> = 0;

        $r7 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("libc.debug.malloc");

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("1");

        if $z0 == 0 goto label6;

        r0.<android.media.videoeditor.VideoEditorImpl: boolean mMallocDebug> = 1;

     label1:
        staticinvoke <android.media.videoeditor.VideoEditorImpl: void dumpHeap(java.lang.String)>("HeapAtStart");

     label2:
        $r8 = new java.util.concurrent.Semaphore;

        specialinvoke $r8.<java.util.concurrent.Semaphore: void <init>(int,boolean)>(1, 1);

        r0.<android.media.videoeditor.VideoEditorImpl: java.util.concurrent.Semaphore mLock> = $r8;

        $r9 = new android.media.videoeditor.MediaArtistNativeHelper;

        $r10 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.concurrent.Semaphore mLock>;

        specialinvoke $r9.<android.media.videoeditor.MediaArtistNativeHelper: void <init>(java.lang.String,java.util.concurrent.Semaphore,android.media.videoeditor.VideoEditor)>(r1, $r10, r0);

        r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper> = $r9;

        r0.<android.media.videoeditor.VideoEditorImpl: java.lang.String mProjectPath> = r1;

        $r11 = new java.io.File;

        specialinvoke $r11.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "videoeditor.xml");

        $z1 = virtualinvoke $r11.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label8;

     label3:
        specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: void load()>();

     label4:
        return;

     label5:
        $r14 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("VideoEditorImpl", "dumpHeap returned error in constructor");

        goto label2;

     label6:
        r0.<android.media.videoeditor.VideoEditorImpl: boolean mMallocDebug> = 0;

        goto label2;

     label7:
        $r12 := @caughtexception;

        r2 = $r12;

        virtualinvoke r2.<java.lang.Exception: void printStackTrace()>();

        $r13 = new java.io.IOException;

        $r15 = virtualinvoke r2.<java.lang.Exception: java.lang.String toString()>();

        specialinvoke $r13.<java.io.IOException: void <init>(java.lang.String)>($r15);

        throw $r13;

     label8:
        r0.<android.media.videoeditor.VideoEditorImpl: int mAspectRatio> = 2;

        r0.<android.media.videoeditor.VideoEditorImpl: long mDurationMs> = 0L;

        return;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label7;
    }

    private void computeTimelineDuration()
    {
        android.media.videoeditor.VideoEditorImpl r0;
        int i0, i1, $i5;
        android.media.videoeditor.MediaItem r1;
        java.util.List $r2, $r3;
        java.lang.Object $r4;
        long $l2, $l3, $l4, $l6, $l7, $l8;
        android.media.videoeditor.Transition $r5, $r6;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        r0.<android.media.videoeditor.VideoEditorImpl: long mDurationMs> = 0L;

        $r2 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r3 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i1);

        r1 = (android.media.videoeditor.MediaItem) $r4;

        $l2 = r0.<android.media.videoeditor.VideoEditorImpl: long mDurationMs>;

        $l3 = virtualinvoke r1.<android.media.videoeditor.MediaItem: long getTimelineDuration()>();

        $l4 = $l2 + $l3;

        r0.<android.media.videoeditor.VideoEditorImpl: long mDurationMs> = $l4;

        $r5 = virtualinvoke r1.<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getEndTransition()>();

        if $r5 == null goto label2;

        $i5 = i0 - 1;

        if i1 >= $i5 goto label2;

        $l6 = r0.<android.media.videoeditor.VideoEditorImpl: long mDurationMs>;

        $r6 = virtualinvoke r1.<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getEndTransition()>();

        $l7 = virtualinvoke $r6.<android.media.videoeditor.Transition: long getDuration()>();

        $l8 = $l6 - $l7;

        r0.<android.media.videoeditor.VideoEditorImpl: long mDurationMs> = $l8;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    private static void dumpHeap(java.lang.String) throws java.lang.Exception
    {
        java.lang.String r0, r1, $r3, $r4, $r12, $r20, $r27;
        java.io.FileOutputStream r2, $r14;
        boolean $z0, $z1;
        java.io.File $r5, $r6, $r22;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11, $r13, $r15, $r16, $r17, $r18, $r21, $r23, $r24, $r25, $r26;
        java.io.FileDescriptor $r19;

        r0 := @parameter0: java.lang.String;

        staticinvoke <java.lang.System: void gc()>();

        staticinvoke <java.lang.System: void runFinalization()>();

        staticinvoke <java.lang.Thread: void sleep(long)>(1000L);

        $r3 = "mounted";

        $r4 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r5 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        r1 = virtualinvoke $r5.<java.io.File: java.lang.String toString()>();

        $r6 = new java.io.File;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".dump");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r12);

        $z1 = virtualinvoke $r6.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label1;

        $r22 = new java.io.File;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".dump");

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<java.io.File: void <init>(java.lang.String)>($r27);

        virtualinvoke $r22.<java.io.File: boolean delete()>();

     label1:
        $r14 = new java.io.FileOutputStream;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".dump");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.io.FileOutputStream: void <init>(java.lang.String)>($r20);

        r2 = $r14;

        $r19 = virtualinvoke r2.<java.io.FileOutputStream: java.io.FileDescriptor getFD()>();

        staticinvoke <android.os.Debug: void dumpNativeHeap(java.io.FileDescriptor)>($r19);

        virtualinvoke r2.<java.io.FileOutputStream: void close()>();

     label2:
        return;
    }

    private void generateProjectThumbnail()
    {
        android.media.videoeditor.VideoEditorImpl r0;
        android.media.videoeditor.MediaItem r1;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.String r2, $r15, $r18, $r23, $r26, $r35, $r40, $r43, $r51;
        android.media.MediaMetadataRetriever r3, $r29;
        android.graphics.Bitmap r4, r5, r11;
        java.io.FileOutputStream r6, $r24;
        java.lang.Throwable r7, $r42;
        java.io.File $r12, $r34;
        java.lang.StringBuilder $r13, $r14, $r16, $r17, $r22, $r25, $r27, $r28, $r31, $r32, $r36, $r37, $r38, $r39, $r41, $r44, $r49, $r50, $r54, $r55;
        boolean $z0, $z1;
        java.util.List $r19, $r21;
        java.lang.Object $r20;
        android.graphics.Bitmap$CompressFormat $r30;
        java.lang.IllegalArgumentException $r33, $r45, $r47, $r52, $r53;
        java.io.IOException $r46, $r48;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        $r12 = new java.io.File;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = r0.<android.media.videoeditor.VideoEditorImpl: java.lang.String mProjectPath>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("thumbnail.jpg");

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.io.File: void <init>(java.lang.String)>($r18);

        $z0 = virtualinvoke $r12.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label01;

        $r34 = new java.io.File;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r40 = r0.<android.media.videoeditor.VideoEditorImpl: java.lang.String mProjectPath>;

        $r39 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r44 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("thumbnail.jpg");

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r34.<java.io.File: void <init>(java.lang.String)>($r43);

        virtualinvoke $r34.<java.io.File: boolean delete()>();

     label01:
        $r19 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        $i1 = interfaceinvoke $r19.<java.util.List: int size()>();

        if $i1 <= 0 goto label05;

        $r21 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        $r20 = interfaceinvoke $r21.<java.util.List: java.lang.Object get(int)>(0);

        r1 = (android.media.videoeditor.MediaItem) $r20;

        $i2 = virtualinvoke r1.<android.media.videoeditor.MediaItem: int getWidth()>();

        $i4 = 480 * $i2;

        $i3 = virtualinvoke r1.<android.media.videoeditor.MediaItem: int getHeight()>();

        i0 = $i4 / $i3;

        r2 = virtualinvoke r1.<android.media.videoeditor.MediaItem: java.lang.String getFilename()>();

        $z1 = r1 instanceof android.media.videoeditor.MediaVideoItem;

        if $z1 == 0 goto label06;

        $r29 = new android.media.MediaMetadataRetriever;

        specialinvoke $r29.<android.media.MediaMetadataRetriever: void <init>()>();

        r3 = $r29;

        virtualinvoke r3.<android.media.MediaMetadataRetriever: void setDataSource(java.lang.String)>(r2);

        r4 = virtualinvoke r3.<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime()>();

        virtualinvoke r3.<android.media.MediaMetadataRetriever: void release()>();

        if r4 != null goto label02;

        $r33 = new java.lang.IllegalArgumentException;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Thumbnail extraction from ");

        $r37 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed");

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r35);

        throw $r33;

     label02:
        r5 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>(r4, i0, 480, 1);

     label03:
        $r24 = new java.io.FileOutputStream;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = r0.<android.media.videoeditor.VideoEditorImpl: java.lang.String mProjectPath>;

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r25 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("thumbnail.jpg");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<java.io.FileOutputStream: void <init>(java.lang.String)>($r26);

        r6 = $r24;

        $r30 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat JPEG>;

        virtualinvoke r5.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r30, 100, r6);

        virtualinvoke r6.<java.io.FileOutputStream: void flush()>();

        virtualinvoke r6.<java.io.FileOutputStream: void close()>();

     label04:
        virtualinvoke r5.<android.graphics.Bitmap: void recycle()>();

     label05:
        return;

     label06:
        r11 = virtualinvoke r1.<android.media.videoeditor.MediaItem: android.graphics.Bitmap getThumbnail(int,int,long)>(i0, 480, 500L);

     label07:
        r5 = r11;

        goto label03;

     label08:
        $r52 := @caughtexception;

        $r53 = new java.lang.IllegalArgumentException;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Project thumbnail extraction from ");

        $r49 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r53.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r51);

        throw $r53;

     label09:
        $r48 := @caughtexception;

        $r47 = new java.lang.IllegalArgumentException;

        specialinvoke $r47.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("IO Error creating project thumbnail");

        throw $r47;

     label10:
        $r46 := @caughtexception;

     label11:
        $r45 = new java.lang.IllegalArgumentException;

        specialinvoke $r45.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Error creating project thumbnail");

        throw $r45;

     label12:
        $r42 := @caughtexception;

        r7 = $r42;

        virtualinvoke r5.<android.graphics.Bitmap: void recycle()>();

        throw r7;

        catch java.io.IOException from label03 to label04 with label10;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.IllegalArgumentException from label06 to label07 with label08;
        catch java.io.IOException from label06 to label07 with label09;
        catch java.lang.Throwable from label11 to label12 with label12;
    }

    private void load() throws java.io.FileNotFoundException, org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.media.videoeditor.VideoEditorImpl r0;
        java.io.FileInputStream r1, $r21;
        java.util.ArrayList r2, $r20;
        java.lang.Throwable r3, $r54;
        org.xmlpull.v1.XmlPullParser r4;
        int i0, i1, i2, $i4, $i8;
        android.media.videoeditor.MediaItem r5;
        android.media.videoeditor.Overlay r6;
        boolean z0, z1, z2, z3, z4, z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        java.lang.String r7, r8, r13, r18, $r19, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r32, $r36, $r38, $r39, $r48, $r49, $r56;
        java.lang.Exception r9, r10, r14, r15, r17, $r45, $r47, $r51, $r52, $r53;
        android.media.videoeditor.Effect r11;
        java.io.File r12, $r22, $r35;
        android.media.videoeditor.Transition r16;
        android.media.videoeditor.AudioTrack $r31;
        android.media.videoeditor.MediaImageItem $r33, $r34, $r37, $r40, $r41, $r42;
        java.util.List $r43, $r44, $r55;
        android.media.videoeditor.MediaArtistNativeHelper $r46;
        java.lang.StringBuilder $r50, $r57, $r58;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        $r21 = new java.io.FileInputStream;

        $r22 = new java.io.File;

        $r19 = r0.<android.media.videoeditor.VideoEditorImpl: java.lang.String mProjectPath>;

        specialinvoke $r22.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r19, "videoeditor.xml");

        specialinvoke $r21.<java.io.FileInputStream: void <init>(java.io.File)>($r22);

        r1 = $r21;

     label01:
        $r20 = new java.util.ArrayList;

        specialinvoke $r20.<java.util.ArrayList: void <init>()>();

        r2 = $r20;

        r4 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r4.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r1, "UTF-8");

        i0 = interfaceinvoke r4.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label02:
        r5 = null;

        r6 = null;

        z0 = 0;

        goto label67;

     label03:
        i0 = interfaceinvoke r4.<org.xmlpull.v1.XmlPullParser: int next()>();

     label04:
        goto label67;

     label05:
        r8 = interfaceinvoke r4.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r26 = "project";

        $z8 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z8 == 0 goto label09;

        $r48 = interfaceinvoke r4.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "aspect_ratio");

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r48);

        r0.<android.media.videoeditor.VideoEditorImpl: int mAspectRatio> = $i4;

        $r49 = interfaceinvoke r4.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "regeneratePCMFlag");

        z5 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r49);

        $r46 = r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        virtualinvoke $r46.<android.media.videoeditor.MediaArtistNativeHelper: void setAudioflag(boolean)>(z5);

     label06:
        goto label03;

     label07:
        $r54 := @caughtexception;

        r3 = $r54;

        if r1 == null goto label08;

        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label08:
        throw r3;

     label09:
        $r25 = "media_item";

        $z9 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z9 == 0 goto label17;

        r18 = interfaceinvoke r4.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "id");

     label10:
        r5 = specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaItem parseMediaItem(org.xmlpull.v1.XmlPullParser)>(r4);

        $r43 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        interfaceinvoke $r43.<java.util.List: boolean add(java.lang.Object)>(r5);

     label11:
        goto label03;

     label12:
        $r51 := @caughtexception;

        r17 = $r51;

     label13:
        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot load media item: ");

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r56 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("VideoEditorImpl", $r56, r17);

        $r55 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        $i8 = interfaceinvoke $r55.<java.util.List: int size()>();

        if $i8 != 0 goto label15;

     label14:
        z0 = 1;

     label15:
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r18);

     label16:
        r5 = null;

        goto label03;

     label17:
        $r28 = "transition";

        z1 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>(r8);

     label18:
        if z1 == 0 goto label26;

     label19:
        r16 = specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.Transition parseTransition(org.xmlpull.v1.XmlPullParser,java.util.List)>(r4, r2);

     label20:
        if r16 == null goto label03;

     label21:
        $r44 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mTransitions>;

        interfaceinvoke $r44.<java.util.List: boolean add(java.lang.Object)>(r16);

     label22:
        goto label03;

     label23:
        $r45 := @caughtexception;

        r15 = $r45;

     label24:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("VideoEditorImpl", "Cannot load transition", r15);

     label25:
        goto label03;

     label26:
        $r27 = "overlay";

        z2 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>(r8);

     label27:
        if z2 == 0 goto label33;

        if r5 == null goto label03;

     label28:
        r6 = specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.Overlay parseOverlay(org.xmlpull.v1.XmlPullParser,android.media.videoeditor.MediaItem)>(r4, r5);

        virtualinvoke r5.<android.media.videoeditor.MediaItem: void addOverlay(android.media.videoeditor.Overlay)>(r6);

     label29:
        goto label03;

     label30:
        $r52 := @caughtexception;

        r14 = $r52;

     label31:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("VideoEditorImpl", "Cannot load overlay", r14);

     label32:
        goto label03;

     label33:
        $r30 = "overlay_user_attributes";

        $z10 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z10 == 0 goto label40;

     label34:
        if r6 == null goto label03;

     label35:
        i1 = interfaceinvoke r4.<org.xmlpull.v1.XmlPullParser: int getAttributeCount()>();

     label36:
        i2 = 0;

     label37:
        if i2 >= i1 goto label03;

     label38:
        $r38 = interfaceinvoke r4.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeName(int)>(i2);

        $r39 = interfaceinvoke r4.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(int)>(i2);

        virtualinvoke r6.<android.media.videoeditor.Overlay: void setUserAttribute(java.lang.String,java.lang.String)>($r38, $r39);

     label39:
        i2 = i2 + 1;

        goto label37;

     label40:
        $r29 = "effect";

        z3 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>(r8);

     label41:
        if z3 == 0 goto label51;

        if r5 == null goto label03;

     label42:
        r11 = specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.Effect parseEffect(org.xmlpull.v1.XmlPullParser,android.media.videoeditor.MediaItem)>(r4, r5);

        virtualinvoke r5.<android.media.videoeditor.MediaItem: void addEffect(android.media.videoeditor.Effect)>(r11);

        $z11 = r11 instanceof android.media.videoeditor.EffectKenBurns;

        if $z11 == 0 goto label03;

        $r36 = interfaceinvoke r4.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "is_image_clip_generated");

        $z12 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r36);

        if $z12 == 0 goto label49;

        r13 = interfaceinvoke r4.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "generated_image_clip");

        $r35 = new java.io.File;

        specialinvoke $r35.<java.io.File: void <init>(java.lang.String)>(r13);

        r12 = $r35;

        $z13 = virtualinvoke r12.<java.io.File: boolean exists()>();

        if $z13 != 1 goto label47;

        $r42 = (android.media.videoeditor.MediaImageItem) r5;

        virtualinvoke $r42.<android.media.videoeditor.MediaImageItem: void setGeneratedImageClip(java.lang.String)>(r13);

        $r37 = (android.media.videoeditor.MediaImageItem) r5;

        virtualinvoke $r37.<android.media.videoeditor.MediaImageItem: void setRegenerateClip(boolean)>(0);

     label43:
        goto label03;

     label44:
        $r47 := @caughtexception;

        r10 = $r47;

     label45:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("VideoEditorImpl", "Cannot load effect", r10);

     label46:
        goto label03;

     label47:
        $r40 = (android.media.videoeditor.MediaImageItem) r5;

        virtualinvoke $r40.<android.media.videoeditor.MediaImageItem: void setGeneratedImageClip(java.lang.String)>(null);

        $r41 = (android.media.videoeditor.MediaImageItem) r5;

        virtualinvoke $r41.<android.media.videoeditor.MediaImageItem: void setRegenerateClip(boolean)>(1);

     label48:
        goto label03;

     label49:
        $r33 = (android.media.videoeditor.MediaImageItem) r5;

        virtualinvoke $r33.<android.media.videoeditor.MediaImageItem: void setGeneratedImageClip(java.lang.String)>(null);

        $r34 = (android.media.videoeditor.MediaImageItem) r5;

        virtualinvoke $r34.<android.media.videoeditor.MediaImageItem: void setRegenerateClip(boolean)>(1);

     label50:
        goto label03;

     label51:
        $r32 = "audio_track";

        z4 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>(r8);

     label52:
        if z4 == 0 goto label03;

     label53:
        $r31 = specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.AudioTrack parseAudioTrack(org.xmlpull.v1.XmlPullParser)>(r4);

        virtualinvoke r0.<android.media.videoeditor.VideoEditorImpl: void addAudioTrack(android.media.videoeditor.AudioTrack)>($r31);

     label54:
        goto label03;

     label55:
        $r53 := @caughtexception;

        r9 = $r53;

     label56:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("VideoEditorImpl", "Cannot load audio track", r9);

     label57:
        goto label03;

     label58:
        r7 = interfaceinvoke r4.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r23 = "media_item";

        $z7 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z7 == 0 goto label60;

     label59:
        r5 = null;

        goto label03;

     label60:
        $r24 = "overlay";

        $z6 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z6 == 0 goto label03;

     label61:
        r6 = null;

        goto label03;

     label62:
        specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: void computeTimelineDuration()>();

     label63:
        if z0 == 0 goto label65;

     label64:
        specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: void generateProjectThumbnail()>();

     label65:
        if r1 == null goto label66;

        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label66:
        return;

     label67:
        if i0 == 1 goto label62;

        tableswitch(i0)
        {
            case 2: goto label05;
            case 3: goto label58;
            default: goto label03;
        };

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label09 to label10 with label07;
        catch java.lang.Exception from label10 to label11 with label12;
        catch java.lang.Throwable from label10 to label11 with label07;
        catch java.lang.Throwable from label13 to label14 with label07;
        catch java.lang.Throwable from label15 to label16 with label07;
        catch java.lang.Throwable from label17 to label18 with label07;
        catch java.lang.Exception from label19 to label20 with label23;
        catch java.lang.Throwable from label19 to label20 with label07;
        catch java.lang.Exception from label21 to label22 with label23;
        catch java.lang.Throwable from label21 to label22 with label07;
        catch java.lang.Throwable from label24 to label25 with label07;
        catch java.lang.Throwable from label26 to label27 with label07;
        catch java.lang.Exception from label28 to label29 with label30;
        catch java.lang.Throwable from label28 to label29 with label07;
        catch java.lang.Throwable from label31 to label32 with label07;
        catch java.lang.Throwable from label33 to label34 with label07;
        catch java.lang.Throwable from label35 to label36 with label07;
        catch java.lang.Throwable from label38 to label39 with label07;
        catch java.lang.Throwable from label40 to label41 with label07;
        catch java.lang.Exception from label42 to label43 with label44;
        catch java.lang.Throwable from label42 to label43 with label07;
        catch java.lang.Throwable from label45 to label46 with label07;
        catch java.lang.Exception from label47 to label48 with label44;
        catch java.lang.Throwable from label47 to label48 with label07;
        catch java.lang.Exception from label49 to label50 with label44;
        catch java.lang.Throwable from label49 to label50 with label07;
        catch java.lang.Throwable from label51 to label52 with label07;
        catch java.lang.Exception from label53 to label54 with label55;
        catch java.lang.Throwable from label53 to label54 with label07;
        catch java.lang.Throwable from label56 to label57 with label07;
        catch java.lang.Throwable from label58 to label59 with label07;
        catch java.lang.Throwable from label60 to label61 with label07;
        catch java.lang.Throwable from label62 to label63 with label07;
        catch java.lang.Throwable from label64 to label65 with label07;
    }

    private void lock() throws java.lang.InterruptedException
    {
        android.media.videoeditor.VideoEditorImpl r0;
        boolean $z0, $z1;
        java.util.concurrent.Semaphore $r1;
        java.lang.Throwable $r2;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("VideoEditorImpl", 3);

        if $z0 == 0 goto label1;

        $r2 = new java.lang.Throwable;

        specialinvoke $r2.<java.lang.Throwable: void <init>()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("VideoEditorImpl", "lock: grabbing semaphore", $r2);

     label1:
        $r1 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.concurrent.Semaphore mLock>;

        virtualinvoke $r1.<java.util.concurrent.Semaphore: void acquire()>();

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("VideoEditorImpl", 3);

        if $z1 == 0 goto label2;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("VideoEditorImpl", "lock: grabbed semaphore");

     label2:
        return;
    }

    private boolean lock(long) throws java.lang.InterruptedException
    {
        android.media.videoeditor.VideoEditorImpl r0;
        long l0;
        boolean z0, $z1, $z2;
        java.util.concurrent.TimeUnit $r1;
        java.util.concurrent.Semaphore $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r7, $r8, $r10;
        java.lang.String $r6, $r9;
        java.lang.Throwable $r11;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        l0 := @parameter0: long;

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("VideoEditorImpl", 3);

        if $z1 == 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lock: grabbing semaphore with timeout ");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = new java.lang.Throwable;

        specialinvoke $r11.<java.lang.Throwable: void <init>()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("VideoEditorImpl", $r9, $r11);

     label1:
        $r2 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.concurrent.Semaphore mLock>;

        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        z0 = virtualinvoke $r2.<java.util.concurrent.Semaphore: boolean tryAcquire(long,java.util.concurrent.TimeUnit)>(l0, $r1);

        $z2 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("VideoEditorImpl", 3);

        if $z2 == 0 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lock: grabbed semaphore status ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("VideoEditorImpl", $r6);

     label2:
        return z0;
    }

    private android.media.videoeditor.AudioTrack parseAudioTrack(org.xmlpull.v1.XmlPullParser) throws java.io.IOException
    {
        android.media.videoeditor.VideoEditorImpl r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, r3, $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r14;
        long l0, l1, l2;
        int i3, $i4, $i5;
        boolean z0, $z1, $z2;
        android.media.videoeditor.AudioTrack $r10;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "id");

        r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "filename");

        $r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "start_time");

        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r4);

        $r5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "begin_time");

        l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r5);

        $r6 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "end_time");

        l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r6);

        $r7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "volume");

        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);

        $r8 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "muted");

        z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r8);

        $r10 = new android.media.videoeditor.AudioTrack;

        $r9 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "loop");

        $z1 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r9);

        $r11 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "ducking_enabled");

        $z2 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r11);

        $r12 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "ducking_threshold");

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r12);

        $r13 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "ducking_volume");

        $i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r13);

        $r14 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "waveform");

        specialinvoke $r10.<android.media.videoeditor.AudioTrack: void <init>(android.media.videoeditor.VideoEditor,java.lang.String,java.lang.String,long,long,long,boolean,int,boolean,boolean,int,int,java.lang.String)>(r0, r2, r3, l0, l1, l2, $z1, i3, z0, $z2, $i4, $i5, $r14);

        return $r10;
    }

    private android.media.videoeditor.Effect parseEffect(org.xmlpull.v1.XmlPullParser, android.media.videoeditor.MediaItem)
    {
        android.media.videoeditor.VideoEditorImpl r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.media.videoeditor.MediaItem r2;
        java.lang.String r3, r4, $r8, $r9, $r10, $r13, $r19, $r20, $r21, $r22, $r23, $r24, $r26, $r27, $r28, $r29, $r32;
        long l0, l1;
        android.graphics.Rect r5, r6, $r18, $r25;
        android.media.videoeditor.EffectKenBurns r7, $r30;
        int i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.lang.Class $r11, $r12;
        boolean $z0, $z1;
        java.lang.StringBuilder $r14, $r16, $r17;
        java.lang.IllegalArgumentException $r15;
        android.media.videoeditor.EffectColor $r31;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: android.media.videoeditor.MediaItem;

        r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "id");

        r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "type");

        $r8 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "duration");

        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r8);

        $r9 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "begin_time");

        l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r9);

        $r11 = class "android/media/videoeditor/EffectColor";

        $r10 = virtualinvoke $r11.<java.lang.Class: java.lang.String getSimpleName()>();

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label4;

        $r29 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "color_type");

        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r29);

        if i2 == 1 goto label1;

        if i2 != 2 goto label3;

     label1:
        $r32 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "color_value");

        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r32);

     label2:
        $r31 = new android.media.videoeditor.EffectColor;

        specialinvoke $r31.<android.media.videoeditor.EffectColor: void <init>(android.media.videoeditor.MediaItem,java.lang.String,long,long,int,int)>(r2, r3, l1, l0, i2, i3);

        return $r31;

     label3:
        i3 = 0;

        goto label2;

     label4:
        $r12 = class "android/media/videoeditor/EffectKenBurns";

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.String getSimpleName()>();

        $z1 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z1 == 0 goto label5;

        $r18 = new android.graphics.Rect;

        $r21 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "start_l");

        $i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r21);

        $r20 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "start_t");

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r20);

        $r23 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "start_r");

        $i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r23);

        $r22 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "start_b");

        $i6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r22);

        specialinvoke $r18.<android.graphics.Rect: void <init>(int,int,int,int)>($i5, $i4, $i7, $i6);

        r5 = $r18;

        $r25 = new android.graphics.Rect;

        $r26 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "end_l");

        $i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r26);

        $r24 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "end_t");

        $i10 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r24);

        $r28 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "end_r");

        $i9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r28);

        $r27 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "end_b");

        $i11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r27);

        specialinvoke $r25.<android.graphics.Rect: void <init>(int,int,int,int)>($i8, $i10, $i9, $i11);

        r6 = $r25;

        $r30 = new android.media.videoeditor.EffectKenBurns;

        specialinvoke $r30.<android.media.videoeditor.EffectKenBurns: void <init>(android.media.videoeditor.MediaItem,java.lang.String,android.graphics.Rect,android.graphics.Rect,long,long)>(r2, r3, r5, r6, l1, l0);

        r7 = $r30;

        return r7;

     label5:
        $r15 = new java.lang.IllegalArgumentException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid effect type: ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw $r15;
    }

    private android.media.videoeditor.MediaItem parseMediaItem(org.xmlpull.v1.XmlPullParser) throws java.io.IOException
    {
        android.media.videoeditor.VideoEditorImpl r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, r3, r4, r5, $r7, $r8, $r11, $r14, $r15, $r18, $r19, $r20, $r21, $r23, $r24, $r26;
        int i0, i3, i6;
        long l1, l2, l4, l5, $l7;
        boolean z0, $z1, $z2;
        android.media.videoeditor.MediaVideoItem r6, $r22, $r25, $r28;
        java.lang.Class $r9, $r10;
        java.lang.StringBuilder $r12, $r16, $r17;
        java.lang.IllegalArgumentException $r13;
        android.media.videoeditor.MediaImageItem $r27;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "id");

        r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "type");

        r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "filename");

        $r7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "rendering_mode");

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);

        $r9 = class "android/media/videoeditor/MediaImageItem";

        $r8 = virtualinvoke $r9.<java.lang.Class: java.lang.String getSimpleName()>();

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z1 == 0 goto label1;

        $r27 = new android.media.videoeditor.MediaImageItem;

        $r26 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "duration");

        $l7 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r26);

        specialinvoke $r27.<android.media.videoeditor.MediaImageItem: void <init>(android.media.videoeditor.VideoEditor,java.lang.String,java.lang.String,long,int)>(r0, r2, r4, $l7, i0);

        return $r27;

     label1:
        $r10 = class "android/media/videoeditor/MediaVideoItem";

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.String getSimpleName()>();

        $z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z2 == 0 goto label2;

        $r15 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "begin_time");

        l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r15);

        $r19 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "end_time");

        l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r19);

        $r18 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "volume");

        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r18);

        $r20 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "muted");

        z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r20);

        r5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "waveform");

        $r22 = new android.media.videoeditor.MediaVideoItem;

        specialinvoke $r22.<android.media.videoeditor.MediaVideoItem: void <init>(android.media.videoeditor.VideoEditor,java.lang.String,java.lang.String,int,long,long,int,boolean,java.lang.String)>(r0, r2, r4, i0, l1, l2, i3, z0, r5);

        r6 = $r22;

        $r23 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "begin_time");

        l4 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r23);

        $r21 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "end_time");

        l5 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r21);

        $r25 = (android.media.videoeditor.MediaVideoItem) r6;

        virtualinvoke $r25.<android.media.videoeditor.MediaVideoItem: void setExtractBoundaries(long,long)>(l4, l5);

        $r24 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "volume");

        i6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r24);

        $r28 = (android.media.videoeditor.MediaVideoItem) r6;

        virtualinvoke $r28.<android.media.videoeditor.MediaVideoItem: void setVolume(int)>(i6);

        return r6;

     label2:
        $r13 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown media item type: ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r14 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r13;
    }

    private android.media.videoeditor.Overlay parseOverlay(org.xmlpull.v1.XmlPullParser, android.media.videoeditor.MediaItem)
    {
        android.media.videoeditor.VideoEditorImpl r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.media.videoeditor.MediaItem r2;
        java.lang.String r3, r4, r6, $r7, $r8, $r10, $r16, $r17, $r18, $r20, $r22, $r25;
        long l0, l1;
        android.media.videoeditor.OverlayFrame r5, $r15, $r19, $r21, $r23, $r24;
        int i2, i3, i4, i5;
        java.lang.Class $r9;
        boolean $z0;
        java.lang.StringBuilder $r11, $r13, $r14;
        java.lang.IllegalArgumentException $r12;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: android.media.videoeditor.MediaItem;

        r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "id");

        r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "type");

        $r7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "duration");

        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r7);

        $r8 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "begin_time");

        l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r8);

        $r9 = class "android/media/videoeditor/OverlayFrame";

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getSimpleName()>();

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label2;

        $r15 = new android.media.videoeditor.OverlayFrame;

        $r17 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "filename");

        specialinvoke $r15.<android.media.videoeditor.OverlayFrame: void <init>(android.media.videoeditor.MediaItem,java.lang.String,java.lang.String,long,long)>(r2, r3, $r17, l1, l0);

        r5 = $r15;

        r6 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "overlay_rgb_filename");

        if r6 == null goto label1;

        $r19 = (android.media.videoeditor.OverlayFrame) r5;

        virtualinvoke $r19.<android.media.videoeditor.OverlayFrame: void setFilename(java.lang.String)>(r6);

        $r20 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "overlay_frame_width");

        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r20);

        $r18 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "overlay_frame_height");

        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r18);

        $r23 = (android.media.videoeditor.OverlayFrame) r5;

        virtualinvoke $r23.<android.media.videoeditor.OverlayFrame: void setOverlayFrameWidth(int)>(i2);

        $r21 = (android.media.videoeditor.OverlayFrame) r5;

        virtualinvoke $r21.<android.media.videoeditor.OverlayFrame: void setOverlayFrameHeight(int)>(i3);

        $r22 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "resized_RGBframe_width");

        i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r22);

        $r25 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "resized_RGBframe_height");

        i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r25);

        $r24 = (android.media.videoeditor.OverlayFrame) r5;

        virtualinvoke $r24.<android.media.videoeditor.OverlayFrame: void setResizedRGBSize(int,int)>(i4, i5);

     label1:
        return r5;

     label2:
        $r12 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid overlay type: ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r12;
    }

    private android.media.videoeditor.Transition parseTransition(org.xmlpull.v1.XmlPullParser, java.util.List)
    {
        android.media.videoeditor.VideoEditorImpl r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.util.List r2;
        java.lang.String r3, r4, r5, r7, r10, $r11, $r12, $r13, $r16, $r17, $r19, $r25, $r26, $r28, $r30, $r33, $r34;
        long l0;
        int i1, i2, i3;
        android.media.videoeditor.MediaItem r6, r8;
        android.media.videoeditor.Transition r9;
        java.lang.Class $r14, $r15, $r18, $r20;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.StringBuilder $r21, $r22, $r24;
        java.lang.IllegalArgumentException $r23;
        android.media.videoeditor.TransitionFadeBlack $r27;
        java.io.File $r29;
        android.media.videoeditor.TransitionCrossfade $r31;
        android.media.videoeditor.TransitionSliding $r32;
        android.media.videoeditor.TransitionAlpha $r35;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: java.util.List;

        r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "id");

        r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "type");

        $r11 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "duration");

        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r11);

        $r12 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "behavior");

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r12);

        r5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "before_media_item");

        if r5 == null goto label04;

        $z6 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>(r5);

        if $z6 == 0 goto label02;

        r9 = null;

     label01:
        return r9;

     label02:
        r6 = virtualinvoke r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaItem getMediaItem(java.lang.String)>(r5);

     label03:
        r7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "after_media_item");

        if r7 == null goto label10;

        $z7 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>(r7);

        if $z7 == 0 goto label05;

        return null;

     label04:
        r6 = null;

        goto label03;

     label05:
        r8 = virtualinvoke r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaItem getMediaItem(java.lang.String)>(r7);

     label06:
        $r14 = class "android/media/videoeditor/TransitionAlpha";

        $r13 = virtualinvoke $r14.<java.lang.Class: java.lang.String getSimpleName()>();

        $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label11;

        $r30 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "blending");

        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r30);

        $r35 = new android.media.videoeditor.TransitionAlpha;

        $r34 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "mask");

        $r33 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "invert");

        $z8 = staticinvoke <java.lang.Boolean: boolean getBoolean(java.lang.String)>($r33);

        specialinvoke $r35.<android.media.videoeditor.TransitionAlpha: void <init>(java.lang.String,android.media.videoeditor.MediaItem,android.media.videoeditor.MediaItem,long,int,java.lang.String,int,boolean)>(r3, r8, r6, l0, i1, $r34, i3, $z8);

        r9 = $r35;

     label07:
        $r25 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "is_transition_generated");

        $z4 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r25);

        if $z4 != 1 goto label08;

        r10 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "generated_transition_clip");

        $r29 = new java.io.File;

        specialinvoke $r29.<java.io.File: void <init>(java.lang.String)>(r10);

        $z5 = virtualinvoke $r29.<java.io.File: boolean exists()>();

        if $z5 == 0 goto label15;

        virtualinvoke r9.<android.media.videoeditor.Transition: void setFilename(java.lang.String)>(r10);

     label08:
        if r6 == null goto label09;

        virtualinvoke r6.<android.media.videoeditor.MediaItem: void setBeginTransition(android.media.videoeditor.Transition)>(r9);

     label09:
        if r8 == null goto label01;

        virtualinvoke r8.<android.media.videoeditor.MediaItem: void setEndTransition(android.media.videoeditor.Transition)>(r9);

        return r9;

     label10:
        r8 = null;

        goto label06;

     label11:
        $r15 = class "android/media/videoeditor/TransitionCrossfade";

        $r16 = virtualinvoke $r15.<java.lang.Class: java.lang.String getSimpleName()>();

        $z1 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z1 == 0 goto label12;

        $r31 = new android.media.videoeditor.TransitionCrossfade;

        specialinvoke $r31.<android.media.videoeditor.TransitionCrossfade: void <init>(java.lang.String,android.media.videoeditor.MediaItem,android.media.videoeditor.MediaItem,long,int)>(r3, r8, r6, l0, i1);

        r9 = $r31;

        goto label07;

     label12:
        $r18 = class "android/media/videoeditor/TransitionSliding";

        $r17 = virtualinvoke $r18.<java.lang.Class: java.lang.String getSimpleName()>();

        $z3 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z3 == 0 goto label13;

        $r28 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("", "direction");

        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r28);

        $r32 = new android.media.videoeditor.TransitionSliding;

        specialinvoke $r32.<android.media.videoeditor.TransitionSliding: void <init>(java.lang.String,android.media.videoeditor.MediaItem,android.media.videoeditor.MediaItem,long,int,int)>(r3, r8, r6, l0, i1, i2);

        r9 = $r32;

        goto label07;

     label13:
        $r20 = class "android/media/videoeditor/TransitionFadeBlack";

        $r19 = virtualinvoke $r20.<java.lang.Class: java.lang.String getSimpleName()>();

        $z2 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z2 == 0 goto label14;

        $r27 = new android.media.videoeditor.TransitionFadeBlack;

        specialinvoke $r27.<android.media.videoeditor.TransitionFadeBlack: void <init>(java.lang.String,android.media.videoeditor.MediaItem,android.media.videoeditor.MediaItem,long,int)>(r3, r8, r6, l0, i1);

        r9 = $r27;

        goto label07;

     label14:
        $r23 = new java.lang.IllegalArgumentException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid transition type: ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r26);

        throw $r23;

     label15:
        virtualinvoke r9.<android.media.videoeditor.Transition: void setFilename(java.lang.String)>(null);

        goto label08;
    }

    private void removeAdjacentTransitions(android.media.videoeditor.MediaItem)
    {
        android.media.videoeditor.VideoEditorImpl r0;
        android.media.videoeditor.MediaItem r1, $r4, $r6, $r7, $r9;
        android.media.videoeditor.Transition r2, r3;
        java.util.List $r5, $r8;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        r1 := @parameter0: android.media.videoeditor.MediaItem;

        r2 = virtualinvoke r1.<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getBeginTransition()>();

        if r2 == null goto label2;

        $r7 = virtualinvoke r2.<android.media.videoeditor.Transition: android.media.videoeditor.MediaItem getAfterMediaItem()>();

        if $r7 == null goto label1;

        $r9 = virtualinvoke r2.<android.media.videoeditor.Transition: android.media.videoeditor.MediaItem getAfterMediaItem()>();

        virtualinvoke $r9.<android.media.videoeditor.MediaItem: void setEndTransition(android.media.videoeditor.Transition)>(null);

     label1:
        virtualinvoke r2.<android.media.videoeditor.Transition: void invalidate()>();

        $r8 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mTransitions>;

        interfaceinvoke $r8.<java.util.List: boolean remove(java.lang.Object)>(r2);

     label2:
        r3 = virtualinvoke r1.<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getEndTransition()>();

        if r3 == null goto label4;

        $r4 = virtualinvoke r3.<android.media.videoeditor.Transition: android.media.videoeditor.MediaItem getBeforeMediaItem()>();

        if $r4 == null goto label3;

        $r6 = virtualinvoke r3.<android.media.videoeditor.Transition: android.media.videoeditor.MediaItem getBeforeMediaItem()>();

        virtualinvoke $r6.<android.media.videoeditor.MediaItem: void setBeginTransition(android.media.videoeditor.Transition)>(null);

     label3:
        virtualinvoke r3.<android.media.videoeditor.Transition: void invalidate()>();

        $r5 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mTransitions>;

        interfaceinvoke $r5.<java.util.List: boolean remove(java.lang.Object)>(r3);

     label4:
        virtualinvoke r1.<android.media.videoeditor.MediaItem: void setBeginTransition(android.media.videoeditor.Transition)>(null);

        virtualinvoke r1.<android.media.videoeditor.MediaItem: void setEndTransition(android.media.videoeditor.Transition)>(null);

        return;
    }

    private android.media.videoeditor.MediaItem removeMediaItem(java.lang.String, boolean)
    {
        android.media.videoeditor.VideoEditorImpl r0;
        java.lang.String r1, r3;
        boolean z0, $z1;
        java.lang.Throwable r2, $r10;
        android.media.videoeditor.MediaItem r4, $r7;
        java.util.List $r5, $r9;
        java.lang.Object $r6;
        android.media.videoeditor.MediaArtistNativeHelper $r8;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        entermonitor r0;

     label1:
        $r5 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (android.media.videoeditor.MediaItem) $r6;

        r3 = virtualinvoke $r7.<android.media.videoeditor.MediaItem: java.lang.String getId()>();

        r4 = virtualinvoke r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaItem getMediaItem(java.lang.String)>(r1);

     label2:
        if r4 == null goto label4;

     label3:
        $r8 = r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        virtualinvoke $r8.<android.media.videoeditor.MediaArtistNativeHelper: void setGeneratePreview(boolean)>(1);

        $r9 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        interfaceinvoke $r9.<java.util.List: boolean remove(java.lang.Object)>(r4);

        specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: void removeAdjacentTransitions(android.media.videoeditor.MediaItem)>(r4);

        specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: void computeTimelineDuration()>();

     label4:
        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label5;

        specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: void generateProjectThumbnail()>();

     label5:
        exitmonitor r0;

        return r4;

     label6:
        $r10 := @caughtexception;

        r2 = $r10;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    private void removeTransitionAfter(int)
    {
        android.media.videoeditor.VideoEditorImpl r0;
        int i0, $i1, $i2, $i3;
        android.media.videoeditor.MediaItem r1, $r8, $r13;
        java.util.Iterator r2;
        android.media.videoeditor.Transition r3;
        java.util.List $r4, $r6, $r10, $r12;
        java.lang.Object $r5, $r7, $r11;
        boolean $z0;
        android.media.videoeditor.MediaArtistNativeHelper $r9;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        i0 := @parameter0: int;

        $r4 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i0);

        r1 = (android.media.videoeditor.MediaItem) $r5;

        $r6 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mTransitions>;

        r2 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.media.videoeditor.Transition) $r7;

        $r8 = virtualinvoke r3.<android.media.videoeditor.Transition: android.media.videoeditor.MediaItem getAfterMediaItem()>();

        if $r8 != r1 goto label1;

        $r9 = r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        virtualinvoke $r9.<android.media.videoeditor.MediaArtistNativeHelper: void setGeneratePreview(boolean)>(1);

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

        virtualinvoke r3.<android.media.videoeditor.Transition: void invalidate()>();

        virtualinvoke r1.<android.media.videoeditor.MediaItem: void setEndTransition(android.media.videoeditor.Transition)>(null);

        $r10 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        $i1 = interfaceinvoke $r10.<java.util.List: int size()>();

        $i3 = -1 + $i1;

        if i0 >= $i3 goto label2;

        $r12 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        $i2 = i0 + 1;

        $r11 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>($i2);

        $r13 = (android.media.videoeditor.MediaItem) $r11;

        virtualinvoke $r13.<android.media.videoeditor.MediaItem: void setBeginTransition(android.media.videoeditor.Transition)>(null);

     label2:
        return;
    }

    private void removeTransitionBefore(int)
    {
        android.media.videoeditor.VideoEditorImpl r0;
        int i0, $i1;
        android.media.videoeditor.MediaItem r1, $r8, $r12;
        java.util.Iterator r2;
        android.media.videoeditor.Transition r3;
        java.util.List $r4, $r6, $r10;
        java.lang.Object $r5, $r7, $r11;
        boolean $z0;
        android.media.videoeditor.MediaArtistNativeHelper $r9;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        i0 := @parameter0: int;

        $r4 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i0);

        r1 = (android.media.videoeditor.MediaItem) $r5;

        $r6 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mTransitions>;

        r2 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.media.videoeditor.Transition) $r7;

        $r8 = virtualinvoke r3.<android.media.videoeditor.Transition: android.media.videoeditor.MediaItem getBeforeMediaItem()>();

        if $r8 != r1 goto label1;

        $r9 = r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        virtualinvoke $r9.<android.media.videoeditor.MediaArtistNativeHelper: void setGeneratePreview(boolean)>(1);

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

        virtualinvoke r3.<android.media.videoeditor.Transition: void invalidate()>();

        virtualinvoke r1.<android.media.videoeditor.MediaItem: void setBeginTransition(android.media.videoeditor.Transition)>(null);

        if i0 <= 0 goto label2;

        $r10 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        $i1 = i0 - 1;

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>($i1);

        $r12 = (android.media.videoeditor.MediaItem) $r11;

        virtualinvoke $r12.<android.media.videoeditor.MediaItem: void setEndTransition(android.media.videoeditor.Transition)>(null);

     label2:
        return;
    }

    private void unlock()
    {
        android.media.videoeditor.VideoEditorImpl r0;
        boolean $z0;
        java.util.concurrent.Semaphore $r1;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("VideoEditorImpl", 3);

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("VideoEditorImpl", "unlock: releasing semaphore");

     label1:
        $r1 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.concurrent.Semaphore mLock>;

        virtualinvoke $r1.<java.util.concurrent.Semaphore: void release()>();

        return;
    }

    public void addAudioTrack(android.media.videoeditor.AudioTrack)
    {
        android.media.videoeditor.VideoEditorImpl r0;
        android.media.videoeditor.AudioTrack r1;
        java.lang.Throwable r2, $r20;
        java.util.List $r3, $r5;
        int $i0;
        android.media.videoeditor.MediaArtistNativeHelper $r4, $r19;
        java.io.File $r6;
        java.lang.StringBuilder $r7, $r9, $r10, $r11, $r12, $r15;
        java.lang.String $r8, $r13, $r14, $r16;
        java.lang.Object[] $r17;
        boolean $z1;
        java.lang.IllegalArgumentException $r18, $r21;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        r1 := @parameter0: android.media.videoeditor.AudioTrack;

        entermonitor r0;

        if r1 != null goto label3;

     label1:
        $r21 = new java.lang.IllegalArgumentException;

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Audio Track is null");

        throw $r21;

     label2:
        $r20 := @caughtexception;

        r2 = $r20;

        exitmonitor r0;

        throw r2;

     label3:
        $r3 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mAudioTracks>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 != 1 goto label4;

        $r18 = new java.lang.IllegalArgumentException;

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No more tracks can be added");

        throw $r18;

     label4:
        $r4 = r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        virtualinvoke $r4.<android.media.videoeditor.MediaArtistNativeHelper: void setGeneratePreview(boolean)>(1);

        $r5 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mAudioTracks>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r6 = new java.io.File;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = r0.<android.media.videoeditor.VideoEditorImpl: java.lang.String mProjectPath>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AudioPcm");

        $r13 = virtualinvoke r1.<android.media.videoeditor.AudioTrack: java.lang.String getId()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".pcm");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = newarray (java.lang.Object)[0];

        $r16 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r14, $r17);

        specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r16);

        $z1 = virtualinvoke $r6.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label5;

        $r19 = r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        virtualinvoke $r19.<android.media.videoeditor.MediaArtistNativeHelper: void setAudioflag(boolean)>(0);

     label5:
        exitmonitor r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.Throwable from label4 to label5 with label2;
    }

    public void addMediaItem(android.media.videoeditor.MediaItem)
    {
        android.media.videoeditor.VideoEditorImpl r0;
        android.media.videoeditor.MediaItem r1;
        int i0, $i1, $i2;
        java.lang.Throwable r2, $r15;
        java.util.List $r3, $r5, $r6, $r7;
        boolean $z0;
        android.media.videoeditor.MediaArtistNativeHelper $r4;
        java.lang.IllegalArgumentException $r8, $r13;
        java.lang.StringBuilder $r9, $r10, $r11;
        java.lang.String $r12, $r14;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        r1 := @parameter0: android.media.videoeditor.MediaItem;

        entermonitor r0;

        if r1 != null goto label3;

     label1:
        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Media item is null");

        throw $r13;

     label2:
        $r15 := @caughtexception;

        r2 = $r15;

        exitmonitor r0;

        throw r2;

     label3:
        $r3 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label4;

        $r8 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Media item already exists: ");

        $r12 = virtualinvoke r1.<android.media.videoeditor.MediaItem: java.lang.String getId()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r8;

     label4:
        $r4 = r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        virtualinvoke $r4.<android.media.videoeditor.MediaArtistNativeHelper: void setGeneratePreview(boolean)>(1);

        $r5 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        i0 = interfaceinvoke $r5.<java.util.List: int size()>();

     label5:
        if i0 <= 0 goto label7;

     label6:
        $i2 = i0 - 1;

        specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: void removeTransitionAfter(int)>($i2);

     label7:
        $r6 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r1);

        specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: void computeTimelineDuration()>();

        $r7 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        $i1 = interfaceinvoke $r7.<java.util.List: int size()>();

        if $i1 != 1 goto label8;

        specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: void generateProjectThumbnail()>();

     label8:
        exitmonitor r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.Throwable from label4 to label5 with label2;
        catch java.lang.Throwable from label6 to label7 with label2;
        catch java.lang.Throwable from label7 to label8 with label2;
    }

    public void addTransition(android.media.videoeditor.Transition)
    {
        android.media.videoeditor.VideoEditorImpl r0;
        android.media.videoeditor.Transition r1, $r8, $r9, $r10, $r12, $r14, $r15;
        android.media.videoeditor.MediaItem r2, r3;
        java.lang.Throwable r4, $r22;
        int i0, i1, $i2;
        java.util.List $r5, $r7, $r11, $r13, $r16, $r17;
        android.media.videoeditor.MediaArtistNativeHelper $r6;
        java.lang.IllegalArgumentException $r18, $r19, $r20, $r21;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        r1 := @parameter0: android.media.videoeditor.Transition;

        entermonitor r0;

        if r1 != null goto label03;

     label01:
        $r21 = new java.lang.IllegalArgumentException;

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null Transition");

        throw $r21;

     label02:
        $r22 := @caughtexception;

        r4 = $r22;

        exitmonitor r0;

        throw r4;

     label03:
        r2 = virtualinvoke r1.<android.media.videoeditor.Transition: android.media.videoeditor.MediaItem getBeforeMediaItem()>();

        r3 = virtualinvoke r1.<android.media.videoeditor.Transition: android.media.videoeditor.MediaItem getAfterMediaItem()>();

        $r5 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        if $r5 != null goto label04;

        $r19 = new java.lang.IllegalArgumentException;

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No media items are added");

        throw $r19;

     label04:
        if r3 == null goto label10;

        if r2 == null goto label10;

     label05:
        $r16 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        i0 = interfaceinvoke $r16.<java.util.List: int indexOf(java.lang.Object)>(r3);

        $r17 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        i1 = interfaceinvoke $r17.<java.util.List: int indexOf(java.lang.Object)>(r2);

     label06:
        if i0 == -1 goto label07;

        if i1 != -1 goto label08;

     label07:
        $r20 = new java.lang.IllegalArgumentException;

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Either of the mediaItem is not found in the list");

        throw $r20;

     label08:
        $i2 = i1 - 1;

        if i0 == $i2 goto label10;

     label09:
        $r18 = new java.lang.IllegalArgumentException;

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("MediaItems are not in sequence");

        throw $r18;

     label10:
        $r6 = r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        virtualinvoke $r6.<android.media.videoeditor.MediaArtistNativeHelper: void setGeneratePreview(boolean)>(1);

        $r7 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mTransitions>;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r1);

     label11:
        if r3 == null goto label14;

     label12:
        $r12 = virtualinvoke r3.<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getEndTransition()>();

        if $r12 == null goto label13;

        $r14 = virtualinvoke r3.<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getEndTransition()>();

        virtualinvoke $r14.<android.media.videoeditor.Transition: void invalidate()>();

        $r13 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mTransitions>;

        $r15 = virtualinvoke r3.<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getEndTransition()>();

        interfaceinvoke $r13.<java.util.List: boolean remove(java.lang.Object)>($r15);

     label13:
        virtualinvoke r3.<android.media.videoeditor.MediaItem: void setEndTransition(android.media.videoeditor.Transition)>(r1);

     label14:
        if r2 == null goto label17;

     label15:
        $r9 = virtualinvoke r2.<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getBeginTransition()>();

        if $r9 == null goto label16;

        $r8 = virtualinvoke r2.<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getBeginTransition()>();

        virtualinvoke $r8.<android.media.videoeditor.Transition: void invalidate()>();

        $r11 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mTransitions>;

        $r10 = virtualinvoke r2.<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getBeginTransition()>();

        interfaceinvoke $r11.<java.util.List: boolean remove(java.lang.Object)>($r10);

     label16:
        virtualinvoke r2.<android.media.videoeditor.MediaItem: void setBeginTransition(android.media.videoeditor.Transition)>(r1);

     label17:
        specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: void computeTimelineDuration()>();

     label18:
        exitmonitor r0;

        return;

        catch java.lang.Throwable from label01 to label02 with label02;
        catch java.lang.Throwable from label03 to label04 with label02;
        catch java.lang.Throwable from label05 to label06 with label02;
        catch java.lang.Throwable from label07 to label08 with label02;
        catch java.lang.Throwable from label09 to label10 with label02;
        catch java.lang.Throwable from label10 to label11 with label02;
        catch java.lang.Throwable from label12 to label13 with label02;
        catch java.lang.Throwable from label13 to label14 with label02;
        catch java.lang.Throwable from label15 to label16 with label02;
        catch java.lang.Throwable from label16 to label17 with label02;
        catch java.lang.Throwable from label17 to label18 with label02;
    }

    public void cancelExport(java.lang.String)
    {
        android.media.videoeditor.VideoEditorImpl r0;
        java.lang.String r1;
        android.media.videoeditor.MediaArtistNativeHelper $r2, $r3;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        if $r2 == null goto label1;

        if r1 == null goto label1;

        $r3 = r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        virtualinvoke $r3.<android.media.videoeditor.MediaArtistNativeHelper: void stop(java.lang.String)>(r1);

     label1:
        return;
    }

    public void clearSurface(android.view.SurfaceHolder)
    {
        android.media.videoeditor.VideoEditorImpl r0;
        android.view.SurfaceHolder r1;
        android.view.Surface r2;
        boolean $z0;
        android.media.videoeditor.MediaArtistNativeHelper $r3, $r4;
        java.lang.IllegalStateException $r5;
        java.lang.IllegalArgumentException $r6, $r7;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        r1 := @parameter0: android.view.SurfaceHolder;

        if r1 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid surface holder");

        throw $r7;

     label1:
        r2 = interfaceinvoke r1.<android.view.SurfaceHolder: android.view.Surface getSurface()>();

        if r2 != null goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Surface could not be retrieved from surface holder");

        throw $r6;

     label2:
        $z0 = virtualinvoke r2.<android.view.Surface: boolean isValid()>();

        if $z0 != 0 goto label3;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Surface is not valid");

        throw $r5;

     label3:
        $r3 = r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        if $r3 == null goto label4;

        $r4 = r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        virtualinvoke $r4.<android.media.videoeditor.MediaArtistNativeHelper: void clearPreviewSurface(android.view.Surface)>(r2);

        return;

     label4:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VideoEditorImpl", "Native helper was not ready!");

        return;
    }

    public void export(java.lang.String, int, int, int, int, android.media.videoeditor.VideoEditor$ExportProgressListener) throws java.io.IOException
    {
        android.media.videoeditor.VideoEditorImpl r0;
        java.lang.String r1, $r13, $r16, $r22, $r30, $r34, $r44;
        int i0, i1, i2, i3, $i6;
        android.media.videoeditor.VideoEditor$ExportProgressListener r2;
        java.io.File r3, $r6;
        byte b4, b5, $b11;
        boolean z0;
        java.lang.Throwable r4, $r46;
        java.util.List $r7, $r19, $r24, $r25;
        long $l7, $l8, $l9, $l10, $l12;
        java.lang.StringBuilder $r8, $r10, $r11, $r14, $r15, $r17, $r27, $r32, $r33, $r35, $r36, $r37, $r38, $r39, $r45;
        java.lang.IllegalArgumentException $r9, $r12, $r26, $r31, $r43;
        android.media.videoeditor.MediaArtistNativeHelper $r18, $r20, $r21, $r23;
        java.lang.IllegalStateException $r28, $r29, $r41;
        java.io.IOException $r40;
        java.lang.InterruptedException $r42;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        r2 := @parameter5: android.media.videoeditor.VideoEditor$ExportProgressListener;

        if r1 != null goto label01;

        $r43 = new java.lang.IllegalArgumentException;

        specialinvoke $r43.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("export: filename is null");

        throw $r43;

     label01:
        $r6 = new java.io.File;

        specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>(r1);

        r3 = $r6;

        if r3 != null goto label02;

        $r40 = new java.io.IOException;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r45 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can not be created");

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r40.<java.io.IOException: void <init>(java.lang.String)>($r44);

        throw $r40;

     label02:
        $r7 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        $i6 = interfaceinvoke $r7.<java.util.List: int size()>();

        if $i6 != 0 goto label03;

        $r41 = new java.lang.IllegalStateException;

        specialinvoke $r41.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No MediaItems added");

        throw $r41;

     label03:
        lookupswitch(i0)
        {
            case 144: goto label05;
            case 288: goto label05;
            case 360: goto label05;
            case 480: goto label05;
            case 720: goto label05;
            case 1080: goto label05;
            default: goto label04;
        };

     label04:
        $r31 = new java.lang.IllegalArgumentException;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported height value ");

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r31.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r34);

        throw $r31;

     label05:
        lookupswitch(i1)
        {
            case 28000: goto label07;
            case 40000: goto label07;
            case 64000: goto label07;
            case 96000: goto label07;
            case 128000: goto label07;
            case 192000: goto label07;
            case 256000: goto label07;
            case 384000: goto label07;
            case 512000: goto label07;
            case 800000: goto label07;
            case 2000000: goto label07;
            case 5000000: goto label07;
            case 8000000: goto label07;
            default: goto label06;
        };

     label06:
        $r26 = new java.lang.IllegalArgumentException;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported bitrate value ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r30 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r30);

        throw $r26;

     label07:
        specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: void computeTimelineDuration()>();

        $l10 = r0.<android.media.videoeditor.VideoEditorImpl: long mDurationMs>;

        $l8 = (long) i1;

        $l7 = 96000L + $l8;

        $l9 = $l10 * $l7;

        $l12 = $l9 / 8000L;

        $b11 = 2147483648L cmp $l12;

        if $b11 > 0 goto label08;

        $r29 = new java.lang.IllegalStateException;

        specialinvoke $r29.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Export Size is more than 2GB");

        throw $r29;

     label08:
        tableswitch(i2)
        {
            case 1: goto label13;
            case 2: goto label10;
            default: goto label09;
        };

     label09:
        $r9 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported audio codec type ");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r9;

     label10:
        b4 = 2;

     label11:
        tableswitch(i3)
        {
            case 1: goto label14;
            case 2: goto label23;
            case 3: goto label24;
            default: goto label12;
        };

     label12:
        $r12 = new java.lang.IllegalArgumentException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported video codec type ");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r12;

     label13:
        b4 = 1;

        goto label11;

     label14:
        b5 = 1;

     label15:
        z0 = 0;

     label16:
        specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: void lock()>();

     label17:
        z0 = 1;

     label18:
        $r20 = r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        if $r20 != null goto label25;

        $r28 = new java.lang.IllegalStateException;

        specialinvoke $r28.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The video editor is not initialized");

        throw $r28;

     label19:
        $r42 := @caughtexception;

     label20:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("VideoEditorImpl", "Sem acquire NOT successful in export");

     label21:
        if z0 == 0 goto label22;

        specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: void unlock()>();

     label22:
        return;

     label23:
        b5 = 2;

        goto label15;

     label24:
        b5 = 3;

        goto label15;

     label25:
        $r21 = r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        virtualinvoke $r21.<android.media.videoeditor.MediaArtistNativeHelper: void setAudioCodec(int)>(b4);

        $r18 = r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        virtualinvoke $r18.<android.media.videoeditor.MediaArtistNativeHelper: void setVideoCodec(int)>(b5);

        $r23 = r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        $r22 = r0.<android.media.videoeditor.VideoEditorImpl: java.lang.String mProjectPath>;

        $r25 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        $r24 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mTransitions>;

        $r19 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mAudioTracks>;

        virtualinvoke $r23.<android.media.videoeditor.MediaArtistNativeHelper: void export(java.lang.String,java.lang.String,int,int,java.util.List,java.util.List,java.util.List,android.media.videoeditor.VideoEditor$ExportProgressListener)>(r1, $r22, i0, i1, $r25, $r24, $r19, r2);

     label26:
        specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: void unlock()>();

        return;

     label27:
        $r46 := @caughtexception;

        r4 = $r46;

        if z0 == 0 goto label28;

        specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: void unlock()>();

     label28:
        throw r4;

        catch java.lang.InterruptedException from label16 to label17 with label19;
        catch java.lang.Throwable from label16 to label17 with label27;
        catch java.lang.InterruptedException from label18 to label19 with label19;
        catch java.lang.Throwable from label18 to label19 with label27;
        catch java.lang.Throwable from label20 to label21 with label27;
        catch java.lang.InterruptedException from label25 to label26 with label19;
        catch java.lang.Throwable from label25 to label26 with label27;
    }

    public void export(java.lang.String, int, int, android.media.videoeditor.VideoEditor$ExportProgressListener) throws java.io.IOException
    {
        android.media.videoeditor.VideoEditorImpl r0;
        java.lang.String r1;
        int i0, i1;
        android.media.videoeditor.VideoEditor$ExportProgressListener r2;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.media.videoeditor.VideoEditor$ExportProgressListener;

        virtualinvoke r0.<android.media.videoeditor.VideoEditorImpl: void export(java.lang.String,int,int,int,int,android.media.videoeditor.VideoEditor$ExportProgressListener)>(r1, i0, i1, 2, 2, r2);

        return;
    }

    public void generatePreview(android.media.videoeditor.VideoEditor$MediaProcessingProgressListener)
    {
        android.media.videoeditor.VideoEditorImpl r0;
        android.media.videoeditor.VideoEditor$MediaProcessingProgressListener r1;
        boolean z0;
        java.lang.Throwable r2, $r12;
        android.media.videoeditor.MediaArtistNativeHelper $r4, $r9;
        java.util.List $r5, $r6, $r7, $r8, $r10;
        int $i0, $i1;
        java.lang.IllegalStateException $r11;
        java.lang.InterruptedException $r13;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        r1 := @parameter0: android.media.videoeditor.VideoEditor$MediaProcessingProgressListener;

        z0 = 0;

     label01:
        specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: void lock()>();

     label02:
        z0 = 1;

     label03:
        $r4 = r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        if $r4 != null goto label08;

        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The video editor is not initialized");

        throw $r11;

     label04:
        $r13 := @caughtexception;

     label05:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("VideoEditorImpl", "Sem acquire NOT successful in previewStoryBoard");

     label06:
        if z0 == 0 goto label07;

        specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: void unlock()>();

     label07:
        return;

     label08:
        $r5 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i0 > 0 goto label09;

        $r10 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mAudioTracks>;

        $i1 = interfaceinvoke $r10.<java.util.List: int size()>();

        if $i1 <= 0 goto label10;

     label09:
        $r9 = r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        $r8 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        $r7 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mTransitions>;

        $r6 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mAudioTracks>;

        virtualinvoke $r9.<android.media.videoeditor.MediaArtistNativeHelper: void previewStoryBoard(java.util.List,java.util.List,java.util.List,android.media.videoeditor.VideoEditor$MediaProcessingProgressListener)>($r8, $r7, $r6, r1);

     label10:
        specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: void unlock()>();

        return;

     label11:
        $r12 := @caughtexception;

        r2 = $r12;

        if z0 == 0 goto label12;

        specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: void unlock()>();

     label12:
        throw r2;

        catch java.lang.InterruptedException from label01 to label02 with label04;
        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.InterruptedException from label03 to label04 with label04;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.InterruptedException from label08 to label09 with label04;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.InterruptedException from label09 to label10 with label04;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    public java.util.List getAllAudioTracks()
    {
        android.media.videoeditor.VideoEditorImpl r0;
        java.util.List $r1;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        $r1 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mAudioTracks>;

        return $r1;
    }

    public java.util.List getAllMediaItems()
    {
        android.media.videoeditor.VideoEditorImpl r0;
        java.util.List $r1;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        $r1 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        return $r1;
    }

    public java.util.List getAllTransitions()
    {
        android.media.videoeditor.VideoEditorImpl r0;
        java.util.List $r1;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        $r1 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mTransitions>;

        return $r1;
    }

    public int getAspectRatio()
    {
        android.media.videoeditor.VideoEditorImpl r0;
        int $i0;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        $i0 = r0.<android.media.videoeditor.VideoEditorImpl: int mAspectRatio>;

        return $i0;
    }

    public android.media.videoeditor.AudioTrack getAudioTrack(java.lang.String)
    {
        android.media.videoeditor.VideoEditorImpl r0;
        java.lang.String r1, $r6;
        java.util.Iterator r2;
        android.media.videoeditor.AudioTrack r3;
        java.util.List $r4;
        boolean $z0, $z1;
        java.lang.Object $r5;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mAudioTracks>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.media.videoeditor.AudioTrack) $r5;

        $r6 = virtualinvoke r3.<android.media.videoeditor.AudioTrack: java.lang.String getId()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label1;

        return r3;

     label2:
        return null;
    }

    public long getDuration()
    {
        android.media.videoeditor.VideoEditorImpl r0;
        long $l0;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: void computeTimelineDuration()>();

        $l0 = r0.<android.media.videoeditor.VideoEditorImpl: long mDurationMs>;

        return $l0;
    }

    public android.media.videoeditor.MediaItem getMediaItem(java.lang.String)
    {
        android.media.videoeditor.VideoEditorImpl r0;
        java.lang.String r1, $r7;
        java.lang.Throwable r2, $r8;
        java.util.Iterator r3;
        android.media.videoeditor.MediaItem r4;
        boolean z0, $z1;
        java.util.List $r5;
        java.lang.Object $r6;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        r1 := @parameter0: java.lang.String;

        entermonitor r0;

     label1:
        $r5 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.media.videoeditor.MediaItem) $r6;

        $r7 = virtualinvoke r4.<android.media.videoeditor.MediaItem: java.lang.String getId()>();

        z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1);

     label3:
        if z0 == 0 goto label2;

     label4:
        exitmonitor r0;

        return r4;

     label5:
        r4 = null;

        goto label4;

     label6:
        $r8 := @caughtexception;

        r2 = $r8;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
    }

    android.media.videoeditor.MediaArtistNativeHelper getNativeContext()
    {
        android.media.videoeditor.VideoEditorImpl r0;
        android.media.videoeditor.MediaArtistNativeHelper $r1;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        $r1 = r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        return $r1;
    }

    public java.lang.String getPath()
    {
        android.media.videoeditor.VideoEditorImpl r0;
        java.lang.String $r1;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        $r1 = r0.<android.media.videoeditor.VideoEditorImpl: java.lang.String mProjectPath>;

        return $r1;
    }

    public android.media.videoeditor.Transition getTransition(java.lang.String)
    {
        android.media.videoeditor.VideoEditorImpl r0;
        java.lang.String r1, $r6;
        java.util.Iterator r2;
        android.media.videoeditor.Transition r3;
        java.util.List $r4;
        boolean $z0, $z1;
        java.lang.Object $r5;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mTransitions>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.media.videoeditor.Transition) $r5;

        $r6 = virtualinvoke r3.<android.media.videoeditor.Transition: java.lang.String getId()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label1;

        return r3;

     label2:
        return null;
    }

    public void insertAudioTrack(android.media.videoeditor.AudioTrack, java.lang.String)
    {
        android.media.videoeditor.VideoEditorImpl r0;
        android.media.videoeditor.AudioTrack r1, $r14;
        java.lang.String r2, $r10, $r13;
        java.lang.Throwable r3, $r20;
        int i0, i1, $i2, $i3;
        java.util.List $r4, $r5, $r12, $r16, $r19;
        java.lang.IllegalArgumentException $r6, $r18;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.Object $r11;
        android.media.videoeditor.MediaArtistNativeHelper $r15, $r17;
        boolean $z0;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        r1 := @parameter0: android.media.videoeditor.AudioTrack;

        r2 := @parameter1: java.lang.String;

        entermonitor r0;

     label01:
        $r4 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mAudioTracks>;

        $i2 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i2 != 1 goto label03;

        $r18 = new java.lang.IllegalArgumentException;

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No more tracks can be added");

        throw $r18;

     label02:
        $r20 := @caughtexception;

        r3 = $r20;

        exitmonitor r0;

        throw r3;

     label03:
        if r2 != null goto label06;

     label04:
        $r17 = r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        virtualinvoke $r17.<android.media.videoeditor.MediaArtistNativeHelper: void setGeneratePreview(boolean)>(1);

        $r19 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mAudioTracks>;

        interfaceinvoke $r19.<java.util.List: void add(int,java.lang.Object)>(0, r1);

     label05:
        exitmonitor r0;

        return;

     label06:
        $r5 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mAudioTracks>;

        i0 = interfaceinvoke $r5.<java.util.List: int size()>();

     label07:
        i1 = 0;

     label08:
        if i1 >= i0 goto label11;

     label09:
        $r12 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mAudioTracks>;

        $r11 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(i1);

        $r14 = (android.media.videoeditor.AudioTrack) $r11;

        $r13 = virtualinvoke $r14.<android.media.videoeditor.AudioTrack: java.lang.String getId()>();

        $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label12;

        $r15 = r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        virtualinvoke $r15.<android.media.videoeditor.MediaArtistNativeHelper: void setGeneratePreview(boolean)>(1);

        $r16 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mAudioTracks>;

        $i3 = i1 + 1;

        interfaceinvoke $r16.<java.util.List: void add(int,java.lang.Object)>($i3, r1);

     label10:
        goto label05;

     label11:
        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AudioTrack not found: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label12:
        i1 = i1 + 1;

        goto label08;

        catch java.lang.Throwable from label01 to label02 with label02;
        catch java.lang.Throwable from label04 to label05 with label02;
        catch java.lang.Throwable from label06 to label07 with label02;
        catch java.lang.Throwable from label09 to label10 with label02;
        catch java.lang.Throwable from label11 to label12 with label02;
    }

    public void insertMediaItem(android.media.videoeditor.MediaItem, java.lang.String)
    {
        android.media.videoeditor.VideoEditorImpl r0;
        android.media.videoeditor.MediaItem r1, $r14;
        java.lang.String r2, $r10, $r13, $r23, $r25;
        java.lang.Throwable r3, $r24;
        int i0, i1, $i2, $i3;
        java.util.List $r4, $r5, $r12, $r16, $r18, $r20;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r6, $r19;
        java.lang.StringBuilder $r7, $r8, $r9, $r21, $r22, $r26;
        java.lang.Object $r11;
        android.media.videoeditor.MediaArtistNativeHelper $r15, $r17;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        r1 := @parameter0: android.media.videoeditor.MediaItem;

        r2 := @parameter1: java.lang.String;

        entermonitor r0;

     label01:
        $r4 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        $z0 = interfaceinvoke $r4.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label03;

        $r19 = new java.lang.IllegalArgumentException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Media item already exists: ");

        $r25 = virtualinvoke r1.<android.media.videoeditor.MediaItem: java.lang.String getId()>();

        $r26 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r23 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r23);

        throw $r19;

     label02:
        $r24 := @caughtexception;

        r3 = $r24;

        exitmonitor r0;

        throw r3;

     label03:
        if r2 != null goto label07;

     label04:
        $r17 = r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        virtualinvoke $r17.<android.media.videoeditor.MediaArtistNativeHelper: void setGeneratePreview(boolean)>(1);

        $r18 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        $i3 = interfaceinvoke $r18.<java.util.List: int size()>();

        if $i3 <= 0 goto label05;

        specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: void removeTransitionBefore(int)>(0);

     label05:
        $r20 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        interfaceinvoke $r20.<java.util.List: void add(int,java.lang.Object)>(0, r1);

        specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: void computeTimelineDuration()>();

        specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: void generateProjectThumbnail()>();

     label06:
        exitmonitor r0;

        return;

     label07:
        $r5 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        i0 = interfaceinvoke $r5.<java.util.List: int size()>();

     label08:
        i1 = 0;

     label09:
        if i1 >= i0 goto label12;

     label10:
        $r12 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        $r11 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(i1);

        $r14 = (android.media.videoeditor.MediaItem) $r11;

        $r13 = virtualinvoke $r14.<android.media.videoeditor.MediaItem: java.lang.String getId()>();

        $z1 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label13;

        $r15 = r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        virtualinvoke $r15.<android.media.videoeditor.MediaArtistNativeHelper: void setGeneratePreview(boolean)>(1);

        specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: void removeTransitionAfter(int)>(i1);

        $r16 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        $i2 = i1 + 1;

        interfaceinvoke $r16.<java.util.List: void add(int,java.lang.Object)>($i2, r1);

        specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: void computeTimelineDuration()>();

     label11:
        goto label06;

     label12:
        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MediaItem not found: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label13:
        i1 = i1 + 1;

        goto label09;

        catch java.lang.Throwable from label01 to label02 with label02;
        catch java.lang.Throwable from label04 to label05 with label02;
        catch java.lang.Throwable from label05 to label06 with label02;
        catch java.lang.Throwable from label07 to label08 with label02;
        catch java.lang.Throwable from label10 to label11 with label02;
        catch java.lang.Throwable from label12 to label13 with label02;
    }

    public void moveAudioTrack(java.lang.String, java.lang.String)
    {
        android.media.videoeditor.VideoEditorImpl r0;
        java.lang.String r1, r2;
        java.lang.Throwable r3, $r5;
        java.lang.IllegalStateException $r4;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        entermonitor r0;

     label1:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not supported");

        throw $r4;

     label2:
        $r5 := @caughtexception;

        r3 = $r5;

        exitmonitor r0;

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label2;
    }

    public void moveMediaItem(java.lang.String, java.lang.String)
    {
        android.media.videoeditor.VideoEditorImpl r0;
        java.lang.String r1, r2, $r10, $r13, $r23;
        java.lang.Throwable r3, $r24;
        android.media.videoeditor.MediaItem r4, $r14;
        int i0, i1, $i2, $i3;
        java.util.List $r5, $r12, $r16, $r17, $r19;
        java.lang.IllegalArgumentException $r6, $r22;
        java.lang.StringBuilder $r7, $r8, $r9, $r21, $r25, $r26;
        java.lang.Object $r11;
        android.media.videoeditor.MediaArtistNativeHelper $r15, $r20;
        boolean $z0;
        java.lang.IllegalStateException $r18;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        entermonitor r0;

     label01:
        r4 = specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaItem removeMediaItem(java.lang.String,boolean)>(r1, 1);

     label02:
        if r4 != null goto label05;

     label03:
        $r22 = new java.lang.IllegalArgumentException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Target MediaItem not found: ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r23 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r23);

        throw $r22;

     label04:
        $r24 := @caughtexception;

        r3 = $r24;

        exitmonitor r0;

        throw r3;

     label05:
        if r2 != null goto label09;

     label06:
        $r17 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        $i3 = interfaceinvoke $r17.<java.util.List: int size()>();

        if $i3 <= 0 goto label08;

        $r20 = r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        virtualinvoke $r20.<android.media.videoeditor.MediaArtistNativeHelper: void setGeneratePreview(boolean)>(1);

        specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: void removeTransitionBefore(int)>(0);

        $r19 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        interfaceinvoke $r19.<java.util.List: void add(int,java.lang.Object)>(0, r4);

        specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: void computeTimelineDuration()>();

        specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: void generateProjectThumbnail()>();

     label07:
        exitmonitor r0;

        return;

     label08:
        $r18 = new java.lang.IllegalStateException;

        specialinvoke $r18.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot move media item (it is the only item)");

        throw $r18;

     label09:
        $r5 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        i0 = interfaceinvoke $r5.<java.util.List: int size()>();

     label10:
        i1 = 0;

     label11:
        if i1 >= i0 goto label14;

     label12:
        $r12 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        $r11 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(i1);

        $r14 = (android.media.videoeditor.MediaItem) $r11;

        $r13 = virtualinvoke $r14.<android.media.videoeditor.MediaItem: java.lang.String getId()>();

        $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label15;

        $r15 = r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        virtualinvoke $r15.<android.media.videoeditor.MediaArtistNativeHelper: void setGeneratePreview(boolean)>(1);

        specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: void removeTransitionAfter(int)>(i1);

        $r16 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        $i2 = i1 + 1;

        interfaceinvoke $r16.<java.util.List: void add(int,java.lang.Object)>($i2, r4);

        specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: void computeTimelineDuration()>();

     label13:
        goto label07;

     label14:
        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MediaItem not found: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label15:
        i1 = i1 + 1;

        goto label11;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label03 to label04 with label04;
        catch java.lang.Throwable from label06 to label07 with label04;
        catch java.lang.Throwable from label08 to label09 with label04;
        catch java.lang.Throwable from label09 to label10 with label04;
        catch java.lang.Throwable from label12 to label13 with label04;
        catch java.lang.Throwable from label14 to label15 with label04;
    }

    public void release()
    {
        android.media.videoeditor.VideoEditorImpl r0;
        boolean z0, $z1;
        java.lang.Throwable r1, $r10;
        java.lang.Exception r2, $r9, $r11;
        android.media.videoeditor.MediaArtistNativeHelper $r4, $r8;
        java.util.List $r5, $r6, $r7;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        virtualinvoke r0.<android.media.videoeditor.VideoEditorImpl: long stopPreview()>();

        z0 = 0;

     label01:
        specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: void lock()>();

     label02:
        z0 = 1;

     label03:
        $r4 = r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        if $r4 == null goto label04;

        $r5 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        interfaceinvoke $r5.<java.util.List: void clear()>();

        $r6 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mAudioTracks>;

        interfaceinvoke $r6.<java.util.List: void clear()>();

        $r7 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mTransitions>;

        interfaceinvoke $r7.<java.util.List: void clear()>();

        $r8 = r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        virtualinvoke $r8.<android.media.videoeditor.MediaArtistNativeHelper: void releaseNativeHelper()>();

        r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper> = null;

     label04:
        specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: void unlock()>();

     label05:
        $z1 = r0.<android.media.videoeditor.VideoEditorImpl: boolean mMallocDebug>;

        if $z1 == 0 goto label07;

     label06:
        staticinvoke <android.media.videoeditor.VideoEditorImpl: void dumpHeap(java.lang.String)>("HeapAtEnd");

     label07:
        return;

     label08:
        $r11 := @caughtexception;

        r2 = $r11;

     label09:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("VideoEditorImpl", "Sem acquire NOT successful in export", r2);

     label10:
        if z0 == 0 goto label05;

        specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: void unlock()>();

        goto label05;

     label11:
        $r10 := @caughtexception;

        r1 = $r10;

        if z0 == 0 goto label12;

        specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: void unlock()>();

     label12:
        throw r1;

     label13:
        $r9 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("VideoEditorImpl", "dumpHeap returned error in release");

        return;

        catch java.lang.Exception from label01 to label02 with label08;
        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Exception from label03 to label04 with label08;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Exception from label06 to label07 with label13;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    public void removeAllMediaItems()
    {
        android.media.videoeditor.VideoEditorImpl r0;
        java.lang.Throwable r1, $r22;
        java.util.Iterator r2;
        android.media.videoeditor.MediaArtistNativeHelper $r3;
        java.util.List $r4, $r5, $r6;
        boolean $z0, $z1;
        java.io.File $r7, $r14;
        java.lang.StringBuilder $r8, $r10, $r11, $r12, $r16, $r17, $r18, $r20;
        java.lang.String $r9, $r13, $r15, $r19;
        java.lang.Object $r21;
        android.media.videoeditor.Transition $r23;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        entermonitor r0;

     label1:
        $r3 = r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        virtualinvoke $r3.<android.media.videoeditor.MediaArtistNativeHelper: void setGeneratePreview(boolean)>(1);

        $r4 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        interfaceinvoke $r4.<java.util.List: void clear()>();

        $r5 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mTransitions>;

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r21 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r23 = (android.media.videoeditor.Transition) $r21;

        virtualinvoke $r23.<android.media.videoeditor.Transition: void invalidate()>();

     label3:
        goto label2;

     label4:
        $r22 := @caughtexception;

        r1 = $r22;

        exitmonitor r0;

        throw r1;

     label5:
        $r6 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mTransitions>;

        interfaceinvoke $r6.<java.util.List: void clear()>();

        r0.<android.media.videoeditor.VideoEditorImpl: long mDurationMs> = 0L;

        $r7 = new java.io.File;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = r0.<android.media.videoeditor.VideoEditorImpl: java.lang.String mProjectPath>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("thumbnail.jpg");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>($r13);

        $z1 = virtualinvoke $r7.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label6;

        $r14 = new java.io.File;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = r0.<android.media.videoeditor.VideoEditorImpl: java.lang.String mProjectPath>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("thumbnail.jpg");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.io.File: void <init>(java.lang.String)>($r19);

        virtualinvoke $r14.<java.io.File: boolean delete()>();

     label6:
        exitmonitor r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public android.media.videoeditor.AudioTrack removeAudioTrack(java.lang.String)
    {
        android.media.videoeditor.VideoEditorImpl r0;
        java.lang.String r1;
        java.lang.Throwable r2, $r9;
        android.media.videoeditor.AudioTrack r3;
        java.lang.IllegalArgumentException $r4;
        android.media.videoeditor.MediaArtistNativeHelper $r5, $r7, $r8;
        java.util.List $r6;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        r1 := @parameter0: java.lang.String;

        entermonitor r0;

     label1:
        r3 = virtualinvoke r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.AudioTrack getAudioTrack(java.lang.String)>(r1);

     label2:
        if r3 == null goto label5;

     label3:
        $r5 = r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        virtualinvoke $r5.<android.media.videoeditor.MediaArtistNativeHelper: void setGeneratePreview(boolean)>(1);

        $r6 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mAudioTracks>;

        interfaceinvoke $r6.<java.util.List: boolean remove(java.lang.Object)>(r3);

        virtualinvoke r3.<android.media.videoeditor.AudioTrack: void invalidate()>();

        $r7 = r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        virtualinvoke $r7.<android.media.videoeditor.MediaArtistNativeHelper: void invalidatePcmFile()>();

        $r8 = r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        virtualinvoke $r8.<android.media.videoeditor.MediaArtistNativeHelper: void setAudioflag(boolean)>(1);

     label4:
        exitmonitor r0;

        return r3;

     label5:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(" No more audio tracks");

        throw $r4;

     label6:
        $r9 := @caughtexception;

        r2 = $r9;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label5 to label6 with label6;
    }

    public android.media.videoeditor.MediaItem removeMediaItem(java.lang.String)
    {
        android.media.videoeditor.VideoEditorImpl r0;
        java.lang.String r1, r3;
        java.lang.Throwable r2, $r16;
        android.media.videoeditor.MediaItem r4, $r10;
        java.util.List r5, $r8, $r13;
        java.util.Iterator r6;
        android.media.videoeditor.Overlay r7;
        java.lang.Object $r9, $r14;
        boolean $z0, $z1, $z3, $z4, $z5;
        android.media.videoeditor.MediaArtistNativeHelper $r11;
        android.media.videoeditor.MediaVideoItem $r12;
        int $i0;
        android.media.videoeditor.OverlayFrame $r15;
        android.media.videoeditor.MediaImageItem $r17;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        r1 := @parameter0: java.lang.String;

        entermonitor r0;

     label01:
        $r8 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(0);

        $r10 = (android.media.videoeditor.MediaItem) $r9;

        r3 = virtualinvoke $r10.<android.media.videoeditor.MediaItem: java.lang.String getId()>();

        r4 = virtualinvoke r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaItem getMediaItem(java.lang.String)>(r1);

     label02:
        if r4 == null goto label09;

     label03:
        $r11 = r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        virtualinvoke $r11.<android.media.videoeditor.MediaArtistNativeHelper: void setGeneratePreview(boolean)>(1);

        $r13 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        interfaceinvoke $r13.<java.util.List: boolean remove(java.lang.Object)>(r4);

        $z3 = r4 instanceof android.media.videoeditor.MediaImageItem;

        if $z3 == 0 goto label04;

        $r17 = (android.media.videoeditor.MediaImageItem) r4;

        virtualinvoke $r17.<android.media.videoeditor.MediaImageItem: void invalidate()>();

     label04:
        r5 = virtualinvoke r4.<android.media.videoeditor.MediaItem: java.util.List getAllOverlays()>();

        $i0 = interfaceinvoke r5.<java.util.List: int size()>();

        if $i0 <= 0 goto label08;

        r6 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label08;

        $r14 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (android.media.videoeditor.Overlay) $r14;

        $z5 = r7 instanceof android.media.videoeditor.OverlayFrame;

        if $z5 == 0 goto label05;

        $r15 = (android.media.videoeditor.OverlayFrame) r7;

        virtualinvoke $r15.<android.media.videoeditor.OverlayFrame: void invalidate()>();

     label06:
        goto label05;

     label07:
        $r16 := @caughtexception;

        r2 = $r16;

        exitmonitor r0;

        throw r2;

     label08:
        specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: void removeAdjacentTransitions(android.media.videoeditor.MediaItem)>(r4);

        specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: void computeTimelineDuration()>();

     label09:
        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label10;

        specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: void generateProjectThumbnail()>();

     label10:
        $z1 = r4 instanceof android.media.videoeditor.MediaVideoItem;

        if $z1 == 0 goto label11;

        $r12 = (android.media.videoeditor.MediaVideoItem) r4;

        virtualinvoke $r12.<android.media.videoeditor.MediaVideoItem: void invalidate()>();

     label11:
        exitmonitor r0;

        return r4;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label09 to label10 with label07;
        catch java.lang.Throwable from label10 to label11 with label07;
    }

    public android.media.videoeditor.Transition removeTransition(java.lang.String)
    {
        android.media.videoeditor.VideoEditorImpl r0;
        java.lang.String r1, $r13;
        java.lang.Throwable r2, $r12;
        android.media.videoeditor.Transition r3;
        android.media.videoeditor.MediaItem r4, r5;
        android.media.videoeditor.MediaArtistNativeHelper $r6;
        java.util.List $r7;
        java.lang.IllegalStateException $r8;
        java.lang.StringBuilder $r9, $r10, $r11;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        r1 := @parameter0: java.lang.String;

        entermonitor r0;

     label01:
        r3 = virtualinvoke r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.Transition getTransition(java.lang.String)>(r1);

     label02:
        if r3 != null goto label05;

     label03:
        $r8 = new java.lang.IllegalStateException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Transition not found: ");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r8;

     label04:
        $r12 := @caughtexception;

        r2 = $r12;

        exitmonitor r0;

        throw r2;

     label05:
        $r6 = r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        virtualinvoke $r6.<android.media.videoeditor.MediaArtistNativeHelper: void setGeneratePreview(boolean)>(1);

        r4 = virtualinvoke r3.<android.media.videoeditor.Transition: android.media.videoeditor.MediaItem getAfterMediaItem()>();

     label06:
        if r4 == null goto label08;

     label07:
        virtualinvoke r4.<android.media.videoeditor.MediaItem: void setEndTransition(android.media.videoeditor.Transition)>(null);

     label08:
        r5 = virtualinvoke r3.<android.media.videoeditor.Transition: android.media.videoeditor.MediaItem getBeforeMediaItem()>();

     label09:
        if r5 == null goto label11;

     label10:
        virtualinvoke r5.<android.media.videoeditor.MediaItem: void setBeginTransition(android.media.videoeditor.Transition)>(null);

     label11:
        $r7 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mTransitions>;

        interfaceinvoke $r7.<java.util.List: boolean remove(java.lang.Object)>(r3);

        virtualinvoke r3.<android.media.videoeditor.Transition: void invalidate()>();

        specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: void computeTimelineDuration()>();

     label12:
        exitmonitor r0;

        return r3;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label03 to label04 with label04;
        catch java.lang.Throwable from label05 to label06 with label04;
        catch java.lang.Throwable from label07 to label08 with label04;
        catch java.lang.Throwable from label08 to label09 with label04;
        catch java.lang.Throwable from label10 to label11 with label04;
        catch java.lang.Throwable from label11 to label12 with label04;
    }

    public long renderPreviewFrame(android.view.SurfaceHolder, long, android.media.videoeditor.VideoEditor$OverlayData)
    {
        android.media.videoeditor.VideoEditorImpl r0;
        android.view.SurfaceHolder r1;
        long l0, l1, l2, $l5;
        android.media.videoeditor.VideoEditor$OverlayData r2;
        android.view.Surface r3;
        boolean z0, $z1;
        java.lang.Throwable r4, $r18, $r19;
        android.graphics.Rect r6;
        byte $b3, $b4;
        android.media.videoeditor.MediaArtistNativeHelper $r7, $r9;
        int $i6, $i7, $i8;
        java.util.List $r8;
        java.lang.IllegalStateException $r10, $r12, $r16, $r20;
        java.lang.IllegalArgumentException $r11, $r13, $r14, $r15;
        java.lang.InterruptedException $r17;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        r1 := @parameter0: android.view.SurfaceHolder;

        l0 := @parameter1: long;

        r2 := @parameter2: android.media.videoeditor.VideoEditor$OverlayData;

        if r1 != null goto label01;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Surface Holder is null");

        throw $r14;

     label01:
        r3 = interfaceinvoke r1.<android.view.SurfaceHolder: android.view.Surface getSurface()>();

        if r3 != null goto label02;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Surface could not be retrieved from Surface holder");

        throw $r13;

     label02:
        $z1 = virtualinvoke r3.<android.view.Surface: boolean isValid()>();

        if $z1 != 0 goto label03;

        $r16 = new java.lang.IllegalStateException;

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Surface is not valid");

        throw $r16;

     label03:
        $b3 = l0 cmp 0L;

        if $b3 >= 0 goto label04;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("requested time not correct");

        throw $r15;

     label04:
        $l5 = r0.<android.media.videoeditor.VideoEditorImpl: long mDurationMs>;

        $b4 = l0 cmp $l5;

        if $b4 <= 0 goto label05;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("requested time more than duration");

        throw $r11;

     label05:
        z0 = 0;

     label06:
        z0 = specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: boolean lock(long)>(500L);

     label07:
        if z0 != 0 goto label13;

     label08:
        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Timeout waiting for semaphore");

        throw $r12;

     label09:
        $r17 := @caughtexception;

     label10:
        $r18 = new java.lang.Throwable;

        specialinvoke $r18.<java.lang.Throwable: void <init>()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("VideoEditorImpl", "The thread was interrupted", $r18);

        $r20 = new java.lang.IllegalStateException;

        specialinvoke $r20.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The thread was interrupted");

        throw $r20;

     label11:
        $r19 := @caughtexception;

        r4 = $r19;

        if z0 == 0 goto label12;

        specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: void unlock()>();

     label12:
        throw r4;

     label13:
        $r7 = r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        if $r7 != null goto label14;

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The video editor is not initialized");

        throw $r10;

     label14:
        $r8 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        $i6 = interfaceinvoke $r8.<java.util.List: int size()>();

        if $i6 <= 0 goto label18;

        r6 = interfaceinvoke r1.<android.view.SurfaceHolder: android.graphics.Rect getSurfaceFrame()>();

        $r9 = r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        $i8 = virtualinvoke r6.<android.graphics.Rect: int width()>();

        $i7 = virtualinvoke r6.<android.graphics.Rect: int height()>();

        l2 = virtualinvoke $r9.<android.media.videoeditor.MediaArtistNativeHelper: long renderPreviewFrame(android.view.Surface,long,int,int,android.media.videoeditor.VideoEditor$OverlayData)>(r3, l0, $i8, $i7, r2);

     label15:
        l1 = l2;

     label16:
        if z0 == 0 goto label17;

        specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: void unlock()>();

     label17:
        return l1;

     label18:
        l1 = 0L;

        goto label16;

        catch java.lang.InterruptedException from label06 to label07 with label09;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.InterruptedException from label08 to label09 with label09;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.InterruptedException from label13 to label14 with label09;
        catch java.lang.Throwable from label13 to label14 with label11;
        catch java.lang.InterruptedException from label14 to label15 with label09;
        catch java.lang.Throwable from label14 to label15 with label11;
    }

    public void save() throws java.io.IOException
    {
        android.media.videoeditor.VideoEditorImpl r0;
        org.xmlpull.v1.XmlSerializer r1;
        java.io.StringWriter r2, $r30;
        java.util.Iterator r3, r4, r5, r16, r21, r25;
        android.media.videoeditor.AudioTrack r6;
        java.io.FileOutputStream r7, $r51;
        android.media.videoeditor.Transition r8;
        android.media.videoeditor.MediaItem r9, r10, r12, r18;
        android.media.videoeditor.TransitionAlpha r11;
        java.util.List r13, r14, $r38, $r42, $r44;
        android.media.videoeditor.Effect r15;
        android.graphics.Rect r17, r19;
        android.media.videoeditor.EffectColor r20;
        android.media.videoeditor.Overlay r22;
        java.lang.String r23, r24, $r32, $r35, $r46, $r48, $r53, $r54, $r59, $r61, $r62, $r65, $r67, $r69, $r70, $r73, $r75, $r76, $r78, $r83, $r84, $r88, $r90, $r92, $r94, $r95, $r96, $r102, $r104, $r105, $r107, $r110, $r112, $r114, $r116, $r121, $r125, $r126, $r128, $r133, $r136, $r138, $r139, $r142, $r147, $r149, $r151, $r153, $r154, $r156, $r158, $r161, $r162, $r170, $r172, $r173, $r176, $r177, $r184, $r186, $r188, $r191, $r194, $r195, $r198, $r200, $r202, $r204, $r206, $r207, $r210, $r211, $r213, $r215;
        java.util.Map r26;
        android.media.videoeditor.OverlayFrame r27;
        int $i0, $i4, $i5, $i6, $i7, $i9, $i10, $i12, $i13, $i14, $i15, $i16, $i17, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i33, $i34, $i35, $i36;
        java.lang.Boolean $r29;
        android.media.videoeditor.MediaVideoItem r31;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20;
        android.media.videoeditor.MediaArtistNativeHelper $r33;
        java.io.File $r52;
        byte[] $r55;
        java.lang.Object $r56, $r86, $r100, $r118, $r168, $r181, $r182;
        long $l1, $l2, $l3, $l8, $l11, $l18, $l29, $l30, $l31, $l32, $l37;
        java.lang.Class $r81, $r106, $r123, $r164;
        android.media.videoeditor.TransitionSliding $r109;
        android.media.videoeditor.EffectKenBurns $r134, $r145;
        android.media.videoeditor.MediaImageItem $r148, $r174;
        java.util.Set $r190;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        r1 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlSerializer newSerializer()>();

        $r30 = new java.io.StringWriter;

        specialinvoke $r30.<java.io.StringWriter: void <init>()>();

        r2 = $r30;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.Writer)>(r2);

        $r29 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>("UTF-8", $r29);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>("", "project");

        $i0 = r0.<android.media.videoeditor.VideoEditorImpl: int mAspectRatio>;

        $r35 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "aspect_ratio", $r35);

        $r33 = r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        $z0 = virtualinvoke $r33.<android.media.videoeditor.MediaArtistNativeHelper: boolean getAudioflag()>();

        $r32 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z0);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "regeneratePCMFlag", $r32);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>("", "media_items");

        $r42 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        r3 = interfaceinvoke $r42.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label18;

        $r100 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r12 = (android.media.videoeditor.MediaItem) $r100;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>("", "media_item");

        $r104 = virtualinvoke r12.<android.media.videoeditor.MediaItem: java.lang.String getId()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "id", $r104);

        $r106 = virtualinvoke r12.<java.lang.Object: java.lang.Class getClass()>();

        $r105 = virtualinvoke $r106.<java.lang.Class: java.lang.String getSimpleName()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "type", $r105);

        $r107 = virtualinvoke r12.<android.media.videoeditor.MediaItem: java.lang.String getFilename()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "filename", $r107);

        $i12 = virtualinvoke r12.<android.media.videoeditor.MediaItem: int getRenderingMode()>();

        $r128 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i12);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "rendering_mode", $r128);

        $z12 = r12 instanceof android.media.videoeditor.MediaVideoItem;

        if $z12 == 0 goto label07;

        r31 = (android.media.videoeditor.MediaVideoItem) r12;

        $l31 = virtualinvoke r31.<android.media.videoeditor.MediaVideoItem: long getBoundaryBeginTime()>();

        $r194 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l31);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "begin_time", $r194);

        $l37 = virtualinvoke r31.<android.media.videoeditor.MediaVideoItem: long getBoundaryEndTime()>();

        $r215 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l37);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "end_time", $r215);

        $i36 = virtualinvoke r31.<android.media.videoeditor.MediaVideoItem: int getVolume()>();

        $r213 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i36);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "volume", $r213);

        $z20 = virtualinvoke r31.<android.media.videoeditor.MediaVideoItem: boolean isMuted()>();

        $r210 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z20);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "muted", $r210);

        $r211 = virtualinvoke r31.<android.media.videoeditor.MediaVideoItem: java.lang.String getAudioWaveformFilename()>();

        if $r211 == null goto label02;

        $r207 = virtualinvoke r31.<android.media.videoeditor.MediaVideoItem: java.lang.String getAudioWaveformFilename()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "waveform", $r207);

     label02:
        r14 = virtualinvoke r12.<android.media.videoeditor.MediaItem: java.util.List getAllOverlays()>();

        $i13 = interfaceinvoke r14.<java.util.List: int size()>();

        if $i13 <= 0 goto label10;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>("", "overlays");

        r21 = interfaceinvoke r14.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z17 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>();

        if $z17 == 0 goto label09;

        $r168 = interfaceinvoke r21.<java.util.Iterator: java.lang.Object next()>();

        r22 = (android.media.videoeditor.Overlay) $r168;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>("", "overlay");

        $r161 = virtualinvoke r22.<android.media.videoeditor.Overlay: java.lang.String getId()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "id", $r161);

        $r164 = virtualinvoke r22.<java.lang.Object: java.lang.Class getClass()>();

        $r162 = virtualinvoke $r164.<java.lang.Class: java.lang.String getSimpleName()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "type", $r162);

        $l29 = virtualinvoke r22.<android.media.videoeditor.Overlay: long getStartTime()>();

        $r191 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l29);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "begin_time", $r191);

        $l30 = virtualinvoke r22.<android.media.videoeditor.Overlay: long getDuration()>();

        $r188 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l30);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "duration", $r188);

        $z18 = r22 instanceof android.media.videoeditor.OverlayFrame;

        if $z18 == 0 goto label05;

        r27 = (android.media.videoeditor.OverlayFrame) r22;

        $r184 = virtualinvoke r0.<android.media.videoeditor.VideoEditorImpl: java.lang.String getPath()>();

        virtualinvoke r27.<android.media.videoeditor.OverlayFrame: java.lang.String save(java.lang.String)>($r184);

        $r186 = virtualinvoke r27.<android.media.videoeditor.OverlayFrame: java.lang.String getBitmapImageFileName()>();

        if $r186 == null goto label04;

        $r198 = virtualinvoke r27.<android.media.videoeditor.OverlayFrame: java.lang.String getBitmapImageFileName()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "filename", $r198);

     label04:
        $r176 = virtualinvoke r27.<android.media.videoeditor.OverlayFrame: java.lang.String getFilename()>();

        if $r176 == null goto label05;

        $r177 = virtualinvoke r27.<android.media.videoeditor.OverlayFrame: java.lang.String getFilename()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "overlay_rgb_filename", $r177);

        $i28 = virtualinvoke r27.<android.media.videoeditor.OverlayFrame: int getOverlayFrameWidth()>();

        $r206 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i28);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "overlay_frame_width", $r206);

        $i35 = virtualinvoke r27.<android.media.videoeditor.OverlayFrame: int getOverlayFrameHeight()>();

        $r204 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i35);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "overlay_frame_height", $r204);

        $i34 = virtualinvoke r27.<android.media.videoeditor.OverlayFrame: int getResizedRGBSizeWidth()>();

        $r202 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i34);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "resized_RGBframe_width", $r202);

        $i33 = virtualinvoke r27.<android.media.videoeditor.OverlayFrame: int getResizedRGBSizeHeight()>();

        $r200 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i33);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "resized_RGBframe_height", $r200);

     label05:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>("", "overlay_user_attributes");

        r26 = virtualinvoke r22.<android.media.videoeditor.Overlay: java.util.Map getUserAttributes()>();

        $r190 = interfaceinvoke r26.<java.util.Map: java.util.Set keySet()>();

        r25 = interfaceinvoke $r190.<java.util.Set: java.util.Iterator iterator()>();

     label06:
        $z19 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>();

        if $z19 == 0 goto label08;

        $r181 = interfaceinvoke r25.<java.util.Iterator: java.lang.Object next()>();

        r24 = (java.lang.String) $r181;

        $r182 = interfaceinvoke r26.<java.util.Map: java.lang.Object get(java.lang.Object)>(r24);

        r23 = (java.lang.String) $r182;

        if r23 == null goto label06;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", r24, r23);

        goto label06;

     label07:
        $z13 = r12 instanceof android.media.videoeditor.MediaImageItem;

        if $z13 == 0 goto label02;

        $l32 = virtualinvoke r12.<android.media.videoeditor.MediaItem: long getTimelineDuration()>();

        $r195 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l32);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "duration", $r195);

        goto label02;

     label08:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>("", "overlay_user_attributes");

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>("", "overlay");

        goto label03;

     label09:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>("", "overlays");

     label10:
        r13 = virtualinvoke r12.<android.media.videoeditor.MediaItem: java.util.List getAllEffects()>();

        $i14 = interfaceinvoke r13.<java.util.List: int size()>();

        if $i14 <= 0 goto label17;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>("", "effects");

        r16 = interfaceinvoke r13.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $z14 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();

        if $z14 == 0 goto label16;

        $r118 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        r15 = (android.media.videoeditor.Effect) $r118;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>("", "effect");

        $r121 = virtualinvoke r15.<android.media.videoeditor.Effect: java.lang.String getId()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "id", $r121);

        $r123 = virtualinvoke r15.<java.lang.Object: java.lang.Class getClass()>();

        $r125 = virtualinvoke $r123.<java.lang.Class: java.lang.String getSimpleName()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "type", $r125);

        $l11 = virtualinvoke r15.<android.media.videoeditor.Effect: long getStartTime()>();

        $r126 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l11);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "begin_time", $r126);

        $l18 = virtualinvoke r15.<android.media.videoeditor.Effect: long getDuration()>();

        $r139 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l18);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "duration", $r139);

        $z15 = r15 instanceof android.media.videoeditor.EffectColor;

        if $z15 == 0 goto label14;

        r20 = (android.media.videoeditor.EffectColor) r15;

        $i27 = virtualinvoke r20.<android.media.videoeditor.EffectColor: int getType()>();

        $r170 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i27);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "color_type", $r170);

        $i25 = virtualinvoke r20.<android.media.videoeditor.EffectColor: int getType()>();

        if $i25 == 1 goto label12;

        $i24 = virtualinvoke r20.<android.media.videoeditor.EffectColor: int getType()>();

        if $i24 != 2 goto label13;

     label12:
        $i26 = virtualinvoke r20.<android.media.videoeditor.EffectColor: int getColor()>();

        $r172 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i26);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "color_value", $r172);

     label13:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>("", "effect");

        goto label11;

     label14:
        $z16 = r15 instanceof android.media.videoeditor.EffectKenBurns;

        if $z16 == 0 goto label13;

        $r145 = (android.media.videoeditor.EffectKenBurns) r15;

        r17 = virtualinvoke $r145.<android.media.videoeditor.EffectKenBurns: android.graphics.Rect getStartRect()>();

        $i19 = r17.<android.graphics.Rect: int left>;

        $r142 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i19);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "start_l", $r142);

        $i16 = r17.<android.graphics.Rect: int top>;

        $r133 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i16);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "start_t", $r133);

        $i15 = r17.<android.graphics.Rect: int right>;

        $r138 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i15);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "start_r", $r138);

        $i17 = r17.<android.graphics.Rect: int bottom>;

        $r136 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i17);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "start_b", $r136);

        $r134 = (android.media.videoeditor.EffectKenBurns) r15;

        r19 = virtualinvoke $r134.<android.media.videoeditor.EffectKenBurns: android.graphics.Rect getEndRect()>();

        $i22 = r19.<android.graphics.Rect: int left>;

        $r154 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i22);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "end_l", $r154);

        $i21 = r19.<android.graphics.Rect: int top>;

        $r158 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i21);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "end_t", $r158);

        $i23 = r19.<android.graphics.Rect: int right>;

        $r156 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i23);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "end_r", $r156);

        $i20 = r19.<android.graphics.Rect: int bottom>;

        $r149 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i20);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "end_b", $r149);

        r18 = virtualinvoke r15.<android.media.videoeditor.Effect: android.media.videoeditor.MediaItem getMediaItem()>();

        $r148 = (android.media.videoeditor.MediaImageItem) r18;

        $r147 = virtualinvoke $r148.<android.media.videoeditor.MediaImageItem: java.lang.String getGeneratedImageClip()>();

        if $r147 == null goto label15;

        $r151 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>(1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "is_image_clip_generated", $r151);

        $r174 = (android.media.videoeditor.MediaImageItem) r18;

        $r173 = virtualinvoke $r174.<android.media.videoeditor.MediaImageItem: java.lang.String getGeneratedImageClip()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "generated_image_clip", $r173);

        goto label13;

     label15:
        $r153 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>(0);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "is_image_clip_generated", $r153);

        goto label13;

     label16:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>("", "effects");

     label17:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>("", "media_item");

        goto label01;

     label18:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>("", "media_items");

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>("", "transitions");

        $r44 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mTransitions>;

        r4 = interfaceinvoke $r44.<java.util.List: java.util.Iterator iterator()>();

     label19:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label25;

        $r86 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r8 = (android.media.videoeditor.Transition) $r86;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>("", "transition");

        $r83 = virtualinvoke r8.<android.media.videoeditor.Transition: java.lang.String getId()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "id", $r83);

        $r81 = virtualinvoke r8.<java.lang.Object: java.lang.Class getClass()>();

        $r78 = virtualinvoke $r81.<java.lang.Class: java.lang.String getSimpleName()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "type", $r78);

        $l8 = virtualinvoke r8.<android.media.videoeditor.Transition: long getDuration()>();

        $r92 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l8);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "duration", $r92);

        $i7 = virtualinvoke r8.<android.media.videoeditor.Transition: int getBehavior()>();

        $r90 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i7);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "behavior", $r90);

        $z8 = virtualinvoke r8.<android.media.videoeditor.Transition: boolean isGenerated()>();

        $r88 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z8);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "is_transition_generated", $r88);

        $z7 = virtualinvoke r8.<android.media.videoeditor.Transition: boolean isGenerated()>();

        if $z7 != 1 goto label20;

        $r102 = r8.<android.media.videoeditor.Transition: java.lang.String mFilename>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "generated_transition_clip", $r102);

     label20:
        r9 = virtualinvoke r8.<android.media.videoeditor.Transition: android.media.videoeditor.MediaItem getAfterMediaItem()>();

        if r9 == null goto label21;

        $r116 = virtualinvoke r9.<android.media.videoeditor.MediaItem: java.lang.String getId()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "after_media_item", $r116);

     label21:
        r10 = virtualinvoke r8.<android.media.videoeditor.Transition: android.media.videoeditor.MediaItem getBeforeMediaItem()>();

        if r10 == null goto label22;

        $r114 = virtualinvoke r10.<android.media.videoeditor.MediaItem: java.lang.String getId()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "before_media_item", $r114);

     label22:
        $z10 = r8 instanceof android.media.videoeditor.TransitionSliding;

        if $z10 == 0 goto label24;

        $r109 = (android.media.videoeditor.TransitionSliding) r8;

        $i10 = virtualinvoke $r109.<android.media.videoeditor.TransitionSliding: int getDirection()>();

        $r112 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i10);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "direction", $r112);

     label23:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>("", "transition");

        goto label19;

     label24:
        $z11 = r8 instanceof android.media.videoeditor.TransitionAlpha;

        if $z11 == 0 goto label23;

        r11 = (android.media.videoeditor.TransitionAlpha) r8;

        $i9 = virtualinvoke r11.<android.media.videoeditor.TransitionAlpha: int getBlendingPercent()>();

        $r96 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i9);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "blending", $r96);

        $z9 = virtualinvoke r11.<android.media.videoeditor.TransitionAlpha: boolean isInvert()>();

        $r95 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z9);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "invert", $r95);

        $r94 = virtualinvoke r11.<android.media.videoeditor.TransitionAlpha: java.lang.String getMaskFilename()>();

        if $r94 == null goto label23;

        $r110 = virtualinvoke r11.<android.media.videoeditor.TransitionAlpha: java.lang.String getMaskFilename()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "mask", $r110);

        goto label23;

     label25:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>("", "transitions");

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>("", "audio_tracks");

        $r38 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mAudioTracks>;

        r5 = interfaceinvoke $r38.<java.util.List: java.util.Iterator iterator()>();

     label26:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label28;

        $r56 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (android.media.videoeditor.AudioTrack) $r56;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>("", "audio_track");

        $r46 = virtualinvoke r6.<android.media.videoeditor.AudioTrack: java.lang.String getId()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "id", $r46);

        $r48 = virtualinvoke r6.<android.media.videoeditor.AudioTrack: java.lang.String getFilename()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "filename", $r48);

        $l2 = virtualinvoke r6.<android.media.videoeditor.AudioTrack: long getStartTime()>();

        $r62 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l2);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "start_time", $r62);

        $l3 = virtualinvoke r6.<android.media.videoeditor.AudioTrack: long getBoundaryBeginTime()>();

        $r59 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l3);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "begin_time", $r59);

        $l1 = virtualinvoke r6.<android.media.videoeditor.AudioTrack: long getBoundaryEndTime()>();

        $r61 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "end_time", $r61);

        $i5 = virtualinvoke r6.<android.media.videoeditor.AudioTrack: int getVolume()>();

        $r67 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i5);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "volume", $r67);

        $z4 = virtualinvoke r6.<android.media.videoeditor.AudioTrack: boolean isDuckingEnabled()>();

        $r69 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z4);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "ducking_enabled", $r69);

        $i4 = virtualinvoke r6.<android.media.videoeditor.AudioTrack: int getDuckedTrackVolume()>();

        $r65 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "ducking_volume", $r65);

        $i6 = virtualinvoke r6.<android.media.videoeditor.AudioTrack: int getDuckingThreshhold()>();

        $r76 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i6);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "ducking_threshold", $r76);

        $z6 = virtualinvoke r6.<android.media.videoeditor.AudioTrack: boolean isMuted()>();

        $r75 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z6);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "muted", $r75);

        $z5 = virtualinvoke r6.<android.media.videoeditor.AudioTrack: boolean isLooping()>();

        $r73 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z5);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "loop", $r73);

        $r70 = virtualinvoke r6.<android.media.videoeditor.AudioTrack: java.lang.String getAudioWaveformFilename()>();

        if $r70 == null goto label27;

        $r84 = virtualinvoke r6.<android.media.videoeditor.AudioTrack: java.lang.String getAudioWaveformFilename()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "waveform", $r84);

     label27:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>("", "audio_track");

        goto label26;

     label28:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>("", "audio_tracks");

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>("", "project");

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        $r51 = new java.io.FileOutputStream;

        $r52 = new java.io.File;

        $r53 = virtualinvoke r0.<android.media.videoeditor.VideoEditorImpl: java.lang.String getPath()>();

        specialinvoke $r52.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r53, "videoeditor.xml");

        specialinvoke $r51.<java.io.FileOutputStream: void <init>(java.io.File)>($r52);

        r7 = $r51;

        $r54 = virtualinvoke r2.<java.io.StringWriter: java.lang.String toString()>();

        $r55 = virtualinvoke $r54.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r7.<java.io.FileOutputStream: void write(byte[])>($r55);

        virtualinvoke r7.<java.io.FileOutputStream: void flush()>();

        virtualinvoke r7.<java.io.FileOutputStream: void close()>();

        return;
    }

    public void setAspectRatio(int)
    {
        android.media.videoeditor.VideoEditorImpl r0;
        int i0;
        java.util.Iterator r1, r2, r3;
        android.media.videoeditor.MediaArtistNativeHelper $r4;
        java.util.List $r5, $r6, $r9;
        boolean $z0, $z1, $z2;
        java.lang.Object $r7, $r10, $r14;
        android.media.videoeditor.MediaItem $r8;
        android.media.videoeditor.OverlayFrame $r11;
        android.media.videoeditor.Overlay $r12;
        android.media.videoeditor.Transition $r13;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        i0 := @parameter0: int;

        r0.<android.media.videoeditor.VideoEditorImpl: int mAspectRatio> = i0;

        $r4 = r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        virtualinvoke $r4.<android.media.videoeditor.MediaArtistNativeHelper: void setGeneratePreview(boolean)>(1);

        $r5 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mTransitions>;

        r1 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r14 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r13 = (android.media.videoeditor.Transition) $r14;

        virtualinvoke $r13.<android.media.videoeditor.Transition: void invalidate()>();

        goto label1;

     label2:
        $r6 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        r2 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (android.media.videoeditor.MediaItem) $r7;

        $r9 = virtualinvoke $r8.<android.media.videoeditor.MediaItem: java.util.List getAllOverlays()>();

        r3 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (android.media.videoeditor.Overlay) $r10;

        $r11 = (android.media.videoeditor.OverlayFrame) $r12;

        virtualinvoke $r11.<android.media.videoeditor.OverlayFrame: void invalidateGeneratedFiles()>();

        goto label4;

     label5:
        return;
    }

    public void startPreview(android.view.SurfaceHolder, long, long, boolean, int, android.media.videoeditor.VideoEditor$PreviewProgressListener)
    {
        android.media.videoeditor.VideoEditorImpl r0;
        android.view.SurfaceHolder r1;
        long l0, l1, $l3;
        boolean z0, $z1, $z2, $z3;
        int i2, $i6;
        android.media.videoeditor.VideoEditor$PreviewProgressListener r2;
        android.view.Surface r3;
        byte $b4, $b5;
        java.lang.IllegalStateException $r5, $r12, $r15, $r20, $r23;
        android.media.videoeditor.MediaArtistNativeHelper $r6, $r10, $r13;
        java.util.List $r7, $r8, $r9, $r11;
        java.lang.IllegalArgumentException $r14, $r16, $r17, $r18, $r21;
        java.lang.InterruptedException $r19;
        java.lang.Throwable $r22;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        r1 := @parameter0: android.view.SurfaceHolder;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        z0 := @parameter3: boolean;

        i2 := @parameter4: int;

        r2 := @parameter5: android.media.videoeditor.VideoEditor$PreviewProgressListener;

        if r1 != null goto label01;

        $r18 = new java.lang.IllegalArgumentException;

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r18;

     label01:
        r3 = interfaceinvoke r1.<android.view.SurfaceHolder: android.view.Surface getSurface()>();

        if r3 != null goto label02;

        $r21 = new java.lang.IllegalArgumentException;

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Surface could not be retrieved from surface holder");

        throw $r21;

     label02:
        $z1 = virtualinvoke r3.<android.view.Surface: boolean isValid()>();

        if $z1 != 0 goto label03;

        $r20 = new java.lang.IllegalStateException;

        specialinvoke $r20.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Surface is not valid");

        throw $r20;

     label03:
        if r2 != null goto label04;

        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r16;

     label04:
        $l3 = r0.<android.media.videoeditor.VideoEditorImpl: long mDurationMs>;

        $b4 = l0 cmp $l3;

        if $b4 < 0 goto label05;

        $r17 = new java.lang.IllegalArgumentException;

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Requested time not correct");

        throw $r17;

     label05:
        $b5 = l0 cmp 0L;

        if $b5 >= 0 goto label06;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Requested time not correct");

        throw $r14;

     label06:
        $z2 = r0.<android.media.videoeditor.VideoEditorImpl: boolean mPreviewInProgress>;

        if $z2 != 0 goto label12;

     label07:
        $z3 = specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: boolean lock(long)>(500L);

        if $z3 != 0 goto label09;

        $r15 = new java.lang.IllegalStateException;

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Timeout waiting for semaphore");

        throw $r15;

     label08:
        $r19 := @caughtexception;

        $r22 = new java.lang.Throwable;

        specialinvoke $r22.<java.lang.Throwable: void <init>()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("VideoEditorImpl", "The thread was interrupted", $r22);

        $r23 = new java.lang.IllegalStateException;

        specialinvoke $r23.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The thread was interrupted");

        throw $r23;

     label09:
        $r6 = r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        if $r6 != null goto label10;

        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The video editor is not initialized");

        throw $r12;

     label10:
        $r7 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        $i6 = interfaceinvoke $r7.<java.util.List: int size()>();

        if $i6 <= 0 goto label11;

        r0.<android.media.videoeditor.VideoEditorImpl: boolean mPreviewInProgress> = 1;

        $r10 = r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        $r11 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mMediaItems>;

        $r8 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mTransitions>;

        $r9 = r0.<android.media.videoeditor.VideoEditorImpl: java.util.List mAudioTracks>;

        virtualinvoke $r10.<android.media.videoeditor.MediaArtistNativeHelper: void previewStoryBoard(java.util.List,java.util.List,java.util.List,android.media.videoeditor.VideoEditor$MediaProcessingProgressListener)>($r11, $r8, $r9, null);

        $r13 = r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        virtualinvoke $r13.<android.media.videoeditor.MediaArtistNativeHelper: void doPreview(android.view.Surface,long,long,boolean,int,android.media.videoeditor.VideoEditor$PreviewProgressListener)>(r3, l0, l1, z0, i2, r2);

     label11:
        return;

     label12:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Preview already in progress");

        throw $r5;

        catch java.lang.InterruptedException from label07 to label08 with label08;
        catch java.lang.InterruptedException from label09 to label10 with label08;
        catch java.lang.InterruptedException from label10 to label11 with label08;
    }

    public long stopPreview()
    {
        android.media.videoeditor.VideoEditorImpl r0;
        java.lang.Throwable r1, $r3;
        long l0;
        boolean $z0;
        android.media.videoeditor.MediaArtistNativeHelper $r2;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        $z0 = r0.<android.media.videoeditor.VideoEditorImpl: boolean mPreviewInProgress>;

        if $z0 == 0 goto label4;

     label1:
        $r2 = r0.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        l0 = virtualinvoke $r2.<android.media.videoeditor.MediaArtistNativeHelper: long stopPreview()>();

     label2:
        r0.<android.media.videoeditor.VideoEditorImpl: boolean mPreviewInProgress> = 0;

        specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: void unlock()>();

        return l0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        r0.<android.media.videoeditor.VideoEditorImpl: boolean mPreviewInProgress> = 0;

        specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: void unlock()>();

        throw r1;

     label4:
        return 0L;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void updateTimelineDuration()
    {
        android.media.videoeditor.VideoEditorImpl r0;

        r0 := @this: android.media.videoeditor.VideoEditorImpl;

        specialinvoke r0.<android.media.videoeditor.VideoEditorImpl: void computeTimelineDuration()>();

        return;
    }

    public static void <clinit>()
    {
        <android.media.videoeditor.VideoEditorImpl: java.lang.String TAG_TRANSITIONS> = "transitions";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String TAG_TRANSITION> = "transition";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String TAG_PROJECT> = "project";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String TAG_OVERLAY_USER_ATTRIBUTES> = "overlay_user_attributes";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String TAG_OVERLAYS> = "overlays";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String TAG_OVERLAY> = "overlay";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String TAG_MEDIA_ITEMS> = "media_items";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String TAG_MEDIA_ITEM> = "media_item";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String TAG_EFFECTS> = "effects";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String TAG_EFFECT> = "effect";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String TAG_AUDIO_TRACKS> = "audio_tracks";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String TAG_AUDIO_TRACK> = "audio_track";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String TAG> = "VideoEditorImpl";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String PROJECT_FILENAME> = "videoeditor.xml";

        <android.media.videoeditor.VideoEditorImpl: int ENGINE_ACCESS_MAX_TIMEOUT_MS> = 500;

        <android.media.videoeditor.VideoEditorImpl: java.lang.String ATTR_VOLUME> = "volume";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String ATTR_TYPE> = "type";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String ATTR_START_TIME> = "start_time";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String ATTR_START_RECT_TOP> = "start_t";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String ATTR_START_RECT_RIGHT> = "start_r";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String ATTR_START_RECT_LEFT> = "start_l";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String ATTR_START_RECT_BOTTOM> = "start_b";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String ATTR_RENDERING_MODE> = "rendering_mode";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String ATTR_REGENERATE_PCM> = "regeneratePCMFlag";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String ATTR_OVERLAY_RGB_FILENAME> = "overlay_rgb_filename";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String ATTR_OVERLAY_RESIZED_RGB_FRAME_WIDTH> = "resized_RGBframe_width";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String ATTR_OVERLAY_RESIZED_RGB_FRAME_HEIGHT> = "resized_RGBframe_height";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String ATTR_OVERLAY_FRAME_WIDTH> = "overlay_frame_width";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String ATTR_OVERLAY_FRAME_HEIGHT> = "overlay_frame_height";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String ATTR_MUTED> = "muted";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String ATTR_MASK> = "mask";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String ATTR_LOOP> = "loop";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String ATTR_IS_TRANSITION_GENERATED> = "is_transition_generated";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String ATTR_IS_IMAGE_CLIP_GENERATED> = "is_image_clip_generated";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String ATTR_INVERT> = "invert";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String ATTR_ID> = "id";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String ATTR_GENERATED_TRANSITION_CLIP> = "generated_transition_clip";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String ATTR_GENERATED_IMAGE_CLIP> = "generated_image_clip";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String ATTR_FILENAME> = "filename";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String ATTR_END_TIME> = "end_time";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String ATTR_END_RECT_TOP> = "end_t";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String ATTR_END_RECT_RIGHT> = "end_r";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String ATTR_END_RECT_LEFT> = "end_l";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String ATTR_END_RECT_BOTTOM> = "end_b";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String ATTR_DURATION> = "duration";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String ATTR_DUCK_THRESHOLD> = "ducking_threshold";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String ATTR_DUCK_ENABLED> = "ducking_enabled";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String ATTR_DUCKED_TRACK_VOLUME> = "ducking_volume";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String ATTR_DIRECTION> = "direction";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String ATTR_COLOR_EFFECT_VALUE> = "color_value";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String ATTR_COLOR_EFFECT_TYPE> = "color_type";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String ATTR_BLENDING> = "blending";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String ATTR_BEHAVIOR> = "behavior";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String ATTR_BEGIN_TIME> = "begin_time";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String ATTR_BEFORE_MEDIA_ITEM_ID> = "before_media_item";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String ATTR_AUDIO_WAVEFORM_FILENAME> = "waveform";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String ATTR_ASPECT_RATIO> = "aspect_ratio";

        <android.media.videoeditor.VideoEditorImpl: java.lang.String ATTR_AFTER_MEDIA_ITEM_ID> = "after_media_item";

        return;
    }
}
