public class android.filterfw.GraphEnvironment extends android.filterfw.MffEnvironment
{
    public static final int MODE_ASYNCHRONOUS;
    public static final int MODE_SYNCHRONOUS;
    private android.filterfw.io.GraphReader mGraphReader;
    private java.util.ArrayList mGraphs;

    public void <init>()
    {
        android.filterfw.GraphEnvironment r0;
        java.util.ArrayList $r1;

        r0 := @this: android.filterfw.GraphEnvironment;

        specialinvoke r0.<android.filterfw.MffEnvironment: void <init>(android.filterfw.core.FrameManager)>(null);

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<android.filterfw.GraphEnvironment: java.util.ArrayList mGraphs> = $r1;

        return;
    }

    public void <init>(android.filterfw.core.FrameManager, android.filterfw.io.GraphReader)
    {
        android.filterfw.GraphEnvironment r0;
        android.filterfw.core.FrameManager r1;
        android.filterfw.io.GraphReader r2;
        java.util.ArrayList $r3;

        r0 := @this: android.filterfw.GraphEnvironment;

        r1 := @parameter0: android.filterfw.core.FrameManager;

        r2 := @parameter1: android.filterfw.io.GraphReader;

        specialinvoke r0.<android.filterfw.MffEnvironment: void <init>(android.filterfw.core.FrameManager)>(r1);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.filterfw.GraphEnvironment: java.util.ArrayList mGraphs> = $r3;

        r0.<android.filterfw.GraphEnvironment: android.filterfw.io.GraphReader mGraphReader> = r2;

        return;
    }

    public int addGraph(android.filterfw.core.FilterGraph)
    {
        android.filterfw.GraphEnvironment r0;
        android.filterfw.core.FilterGraph r1;
        android.filterfw.GraphEnvironment$GraphHandle r2, $r3;
        java.util.ArrayList $r4, $r5;
        int $i0, $i1;

        r0 := @this: android.filterfw.GraphEnvironment;

        r1 := @parameter0: android.filterfw.core.FilterGraph;

        $r3 = new android.filterfw.GraphEnvironment$GraphHandle;

        specialinvoke $r3.<android.filterfw.GraphEnvironment$GraphHandle: void <init>(android.filterfw.GraphEnvironment,android.filterfw.core.FilterGraph)>(r0, r1);

        r2 = $r3;

        $r4 = r0.<android.filterfw.GraphEnvironment: java.util.ArrayList mGraphs>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        $r5 = r0.<android.filterfw.GraphEnvironment: java.util.ArrayList mGraphs>;

        $i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        $i1 = -1 + $i0;

        return $i1;
    }

    public transient void addReferences(java.lang.Object[])
    {
        android.filterfw.GraphEnvironment r0;
        java.lang.Object[] r1;
        android.filterfw.io.GraphReader $r2;

        r0 := @this: android.filterfw.GraphEnvironment;

        r1 := @parameter0: java.lang.Object[];

        $r2 = virtualinvoke r0.<android.filterfw.GraphEnvironment: android.filterfw.io.GraphReader getGraphReader()>();

        virtualinvoke $r2.<android.filterfw.io.GraphReader: void addReferencesByKeysAndValues(java.lang.Object[])>(r1);

        return;
    }

    public android.filterfw.core.FilterGraph getGraph(int)
    {
        android.filterfw.GraphEnvironment r0;
        int i0, $i1;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;
        java.lang.String $r6;
        java.util.ArrayList $r7, $r8;
        java.lang.Object $r9;
        android.filterfw.GraphEnvironment$GraphHandle $r10;
        android.filterfw.core.FilterGraph $r11;

        r0 := @this: android.filterfw.GraphEnvironment;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r7 = r0.<android.filterfw.GraphEnvironment: java.util.ArrayList mGraphs>;

        $i1 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        if i0 < $i1 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid graph ID ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" specified in runGraph()!");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r1;

     label2:
        $r8 = r0.<android.filterfw.GraphEnvironment: java.util.ArrayList mGraphs>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r10 = (android.filterfw.GraphEnvironment$GraphHandle) $r9;

        $r11 = virtualinvoke $r10.<android.filterfw.GraphEnvironment$GraphHandle: android.filterfw.core.FilterGraph getGraph()>();

        return $r11;
    }

    public android.filterfw.io.GraphReader getGraphReader()
    {
        android.filterfw.GraphEnvironment r0;
        android.filterfw.io.GraphReader $r1, $r2;
        android.filterfw.io.TextGraphReader $r3;

        r0 := @this: android.filterfw.GraphEnvironment;

        $r1 = r0.<android.filterfw.GraphEnvironment: android.filterfw.io.GraphReader mGraphReader>;

        if $r1 != null goto label1;

        $r3 = new android.filterfw.io.TextGraphReader;

        specialinvoke $r3.<android.filterfw.io.TextGraphReader: void <init>()>();

        r0.<android.filterfw.GraphEnvironment: android.filterfw.io.GraphReader mGraphReader> = $r3;

     label1:
        $r2 = r0.<android.filterfw.GraphEnvironment: android.filterfw.io.GraphReader mGraphReader>;

        return $r2;
    }

    public android.filterfw.core.GraphRunner getRunner(int, int)
    {
        android.filterfw.GraphEnvironment r0;
        int i0, i1;
        java.lang.RuntimeException $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;
        java.lang.String $r6;
        java.util.ArrayList $r7, $r12;
        java.lang.Object $r8, $r13;
        android.filterfw.GraphEnvironment$GraphHandle $r9, $r15;
        android.filterfw.core.FilterContext $r10, $r14;
        android.filterfw.core.GraphRunner $r11;
        android.filterfw.core.AsyncRunner $r16;

        r0 := @this: android.filterfw.GraphEnvironment;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        tableswitch(i1)
        {
            case 1: goto label2;
            case 2: goto label3;
            default: goto label1;
        };

     label1:
        $r1 = new java.lang.RuntimeException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid execution mode ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" specified in getRunner()!");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r1;

     label2:
        $r12 = r0.<android.filterfw.GraphEnvironment: java.util.ArrayList mGraphs>;

        $r13 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r15 = (android.filterfw.GraphEnvironment$GraphHandle) $r13;

        $r14 = virtualinvoke r0.<android.filterfw.GraphEnvironment: android.filterfw.core.FilterContext getContext()>();

        $r16 = virtualinvoke $r15.<android.filterfw.GraphEnvironment$GraphHandle: android.filterfw.core.AsyncRunner getAsyncRunner(android.filterfw.core.FilterContext)>($r14);

        return $r16;

     label3:
        $r7 = r0.<android.filterfw.GraphEnvironment: java.util.ArrayList mGraphs>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r9 = (android.filterfw.GraphEnvironment$GraphHandle) $r8;

        $r10 = virtualinvoke r0.<android.filterfw.GraphEnvironment: android.filterfw.core.FilterContext getContext()>();

        $r11 = virtualinvoke $r9.<android.filterfw.GraphEnvironment$GraphHandle: android.filterfw.core.GraphRunner getSyncRunner(android.filterfw.core.FilterContext)>($r10);

        return $r11;
    }

    public int loadGraph(android.content.Context, int)
    {
        android.filterfw.GraphEnvironment r0;
        android.content.Context r1;
        int i0, $i1;
        android.filterfw.io.GraphIOException r2, $r5;
        android.filterfw.core.FilterGraph r3;
        android.filterfw.io.GraphReader $r4;
        java.lang.RuntimeException $r6;
        java.lang.StringBuilder $r7, $r8, $r10;
        java.lang.String $r9, $r11;

        r0 := @this: android.filterfw.GraphEnvironment;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

     label1:
        $r4 = virtualinvoke r0.<android.filterfw.GraphEnvironment: android.filterfw.io.GraphReader getGraphReader()>();

        r3 = virtualinvoke $r4.<android.filterfw.io.GraphReader: android.filterfw.core.FilterGraph readGraphResource(android.content.Context,int)>(r1, i0);

     label2:
        $i1 = virtualinvoke r0.<android.filterfw.GraphEnvironment: int addGraph(android.filterfw.core.FilterGraph)>(r3);

        return $i1;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = new java.lang.RuntimeException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not read graph: ");

        $r9 = virtualinvoke r2.<android.filterfw.io.GraphIOException: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11);

        throw $r6;

        catch android.filterfw.io.GraphIOException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.filterfw.GraphEnvironment: int MODE_SYNCHRONOUS> = 2;

        <android.filterfw.GraphEnvironment: int MODE_ASYNCHRONOUS> = 1;

        return;
    }
}
