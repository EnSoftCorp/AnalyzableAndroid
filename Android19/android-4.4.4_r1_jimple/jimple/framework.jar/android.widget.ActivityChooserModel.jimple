public class android.widget.ActivityChooserModel extends android.database.DataSetObservable
{
    private static final java.lang.String ATTRIBUTE_ACTIVITY;
    private static final java.lang.String ATTRIBUTE_TIME;
    private static final java.lang.String ATTRIBUTE_WEIGHT;
    private static final boolean DEBUG;
    private static final int DEFAULT_ACTIVITY_INFLATION;
    private static final float DEFAULT_HISTORICAL_RECORD_WEIGHT;
    public static final java.lang.String DEFAULT_HISTORY_FILE_NAME;
    public static final int DEFAULT_HISTORY_MAX_LENGTH;
    private static final java.lang.String HISTORY_FILE_EXTENSION;
    private static final int INVALID_INDEX;
    private static final java.lang.String LOG_TAG;
    private static final java.lang.String TAG_HISTORICAL_RECORD;
    private static final java.lang.String TAG_HISTORICAL_RECORDS;
    private static final java.util.Map sDataModelRegistry;
    private static final java.lang.Object sRegistryLock;
    private final java.util.List mActivities;
    private android.widget.ActivityChooserModel$OnChooseActivityListener mActivityChoserModelPolicy;
    private android.widget.ActivityChooserModel$ActivitySorter mActivitySorter;
    private boolean mCanReadHistoricalData;
    private final android.content.Context mContext;
    private final java.util.List mHistoricalRecords;
    private boolean mHistoricalRecordsChanged;
    private final java.lang.String mHistoryFileName;
    private int mHistoryMaxSize;
    private final java.lang.Object mInstanceLock;
    private android.content.Intent mIntent;
    private final com.android.internal.content.PackageMonitor mPackageMonitor;
    private boolean mReadShareHistoryCalled;
    private boolean mReloadActivities;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.util.HashMap $r3;

        <android.widget.ActivityChooserModel: java.lang.String TAG_HISTORICAL_RECORDS> = "historical-records";

        <android.widget.ActivityChooserModel: java.lang.String TAG_HISTORICAL_RECORD> = "historical-record";

        <android.widget.ActivityChooserModel: int INVALID_INDEX> = -1;

        <android.widget.ActivityChooserModel: java.lang.String HISTORY_FILE_EXTENSION> = ".xml";

        <android.widget.ActivityChooserModel: int DEFAULT_HISTORY_MAX_LENGTH> = 50;

        <android.widget.ActivityChooserModel: java.lang.String DEFAULT_HISTORY_FILE_NAME> = "activity_choser_model_history.xml";

        <android.widget.ActivityChooserModel: float DEFAULT_HISTORICAL_RECORD_WEIGHT> = 1.0F;

        <android.widget.ActivityChooserModel: int DEFAULT_ACTIVITY_INFLATION> = 5;

        <android.widget.ActivityChooserModel: boolean DEBUG> = 0;

        <android.widget.ActivityChooserModel: java.lang.String ATTRIBUTE_WEIGHT> = "weight";

        <android.widget.ActivityChooserModel: java.lang.String ATTRIBUTE_TIME> = "time";

        <android.widget.ActivityChooserModel: java.lang.String ATTRIBUTE_ACTIVITY> = "activity";

        $r0 = class "android/widget/ActivityChooserModel";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.widget.ActivityChooserModel: java.lang.String LOG_TAG> = $r1;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        <android.widget.ActivityChooserModel: java.lang.Object sRegistryLock> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        <android.widget.ActivityChooserModel: java.util.Map sDataModelRegistry> = $r3;

        return;
    }

    private void <init>(android.content.Context, java.lang.String)
    {
        android.widget.ActivityChooserModel r0;
        android.content.Context r1, $r8, $r9;
        java.lang.String r2, $r14;
        java.lang.Object $r3;
        java.util.ArrayList $r4, $r5;
        android.widget.ActivityChooserModel$DataModelPackageMonitor $r6;
        android.widget.ActivityChooserModel$DefaultSorter $r7;
        boolean $z0, $z1;
        com.android.internal.content.PackageMonitor $r10;
        java.lang.StringBuilder $r11, $r12, $r13;

        r0 := @this: android.widget.ActivityChooserModel;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<android.database.DataSetObservable: void <init>()>();

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<android.widget.ActivityChooserModel: java.lang.Object mInstanceLock> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.widget.ActivityChooserModel: java.util.List mActivities> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<android.widget.ActivityChooserModel: java.util.List mHistoricalRecords> = $r5;

        $r6 = new android.widget.ActivityChooserModel$DataModelPackageMonitor;

        specialinvoke $r6.<android.widget.ActivityChooserModel$DataModelPackageMonitor: void <init>(android.widget.ActivityChooserModel,android.widget.ActivityChooserModel$1)>(r0, null);

        r0.<android.widget.ActivityChooserModel: com.android.internal.content.PackageMonitor mPackageMonitor> = $r6;

        $r7 = new android.widget.ActivityChooserModel$DefaultSorter;

        specialinvoke $r7.<android.widget.ActivityChooserModel$DefaultSorter: void <init>(android.widget.ActivityChooserModel,android.widget.ActivityChooserModel$1)>(r0, null);

        r0.<android.widget.ActivityChooserModel: android.widget.ActivityChooserModel$ActivitySorter mActivitySorter> = $r7;

        r0.<android.widget.ActivityChooserModel: int mHistoryMaxSize> = 50;

        r0.<android.widget.ActivityChooserModel: boolean mCanReadHistoricalData> = 1;

        r0.<android.widget.ActivityChooserModel: boolean mReadShareHistoryCalled> = 0;

        r0.<android.widget.ActivityChooserModel: boolean mHistoricalRecordsChanged> = 1;

        r0.<android.widget.ActivityChooserModel: boolean mReloadActivities> = 0;

        $r8 = virtualinvoke r1.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<android.widget.ActivityChooserModel: android.content.Context mContext> = $r8;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r2.<java.lang.String: boolean endsWith(java.lang.String)>(".xml");

        if $z1 != 0 goto label2;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".xml");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.widget.ActivityChooserModel: java.lang.String mHistoryFileName> = $r14;

     label1:
        $r10 = r0.<android.widget.ActivityChooserModel: com.android.internal.content.PackageMonitor mPackageMonitor>;

        $r9 = r0.<android.widget.ActivityChooserModel: android.content.Context mContext>;

        virtualinvoke $r10.<com.android.internal.content.PackageMonitor: void register(android.content.Context,android.os.Looper,boolean)>($r9, null, 1);

        return;

     label2:
        r0.<android.widget.ActivityChooserModel: java.lang.String mHistoryFileName> = r2;

        goto label1;
    }

    static android.content.Context access$300(android.widget.ActivityChooserModel)
    {
        android.widget.ActivityChooserModel r0;
        android.content.Context $r1;

        r0 := @parameter0: android.widget.ActivityChooserModel;

        $r1 = r0.<android.widget.ActivityChooserModel: android.content.Context mContext>;

        return $r1;
    }

    static java.lang.String access$400()
    {
        java.lang.String $r0;

        $r0 = <android.widget.ActivityChooserModel: java.lang.String LOG_TAG>;

        return $r0;
    }

    static java.lang.String access$500(android.widget.ActivityChooserModel)
    {
        android.widget.ActivityChooserModel r0;
        java.lang.String $r1;

        r0 := @parameter0: android.widget.ActivityChooserModel;

        $r1 = r0.<android.widget.ActivityChooserModel: java.lang.String mHistoryFileName>;

        return $r1;
    }

    static boolean access$602(android.widget.ActivityChooserModel, boolean)
    {
        android.widget.ActivityChooserModel r0;
        boolean z0;

        r0 := @parameter0: android.widget.ActivityChooserModel;

        z0 := @parameter1: boolean;

        r0.<android.widget.ActivityChooserModel: boolean mCanReadHistoricalData> = z0;

        return z0;
    }

    static boolean access$702(android.widget.ActivityChooserModel, boolean)
    {
        android.widget.ActivityChooserModel r0;
        boolean z0;

        r0 := @parameter0: android.widget.ActivityChooserModel;

        z0 := @parameter1: boolean;

        r0.<android.widget.ActivityChooserModel: boolean mReloadActivities> = z0;

        return z0;
    }

    private boolean addHisoricalRecord(android.widget.ActivityChooserModel$HistoricalRecord)
    {
        android.widget.ActivityChooserModel r0;
        android.widget.ActivityChooserModel$HistoricalRecord r1;
        boolean z0;
        java.util.List $r2;

        r0 := @this: android.widget.ActivityChooserModel;

        r1 := @parameter0: android.widget.ActivityChooserModel$HistoricalRecord;

        $r2 = r0.<android.widget.ActivityChooserModel: java.util.List mHistoricalRecords>;

        z0 = interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        if z0 == 0 goto label1;

        r0.<android.widget.ActivityChooserModel: boolean mHistoricalRecordsChanged> = 1;

        specialinvoke r0.<android.widget.ActivityChooserModel: void pruneExcessiveHistoricalRecordsIfNeeded()>();

        specialinvoke r0.<android.widget.ActivityChooserModel: void persistHistoricalDataIfNeeded()>();

        specialinvoke r0.<android.widget.ActivityChooserModel: boolean sortActivitiesIfNeeded()>();

        virtualinvoke r0.<android.widget.ActivityChooserModel: void notifyChanged()>();

     label1:
        return z0;
    }

    private void ensureConsistentState()
    {
        android.widget.ActivityChooserModel r0;
        boolean z0, $z1, $z2;

        r0 := @this: android.widget.ActivityChooserModel;

        $z1 = specialinvoke r0.<android.widget.ActivityChooserModel: boolean loadActivitiesIfNeeded()>();

        $z2 = specialinvoke r0.<android.widget.ActivityChooserModel: boolean readHistoricalDataIfNeeded()>();

        z0 = $z1 | $z2;

        specialinvoke r0.<android.widget.ActivityChooserModel: void pruneExcessiveHistoricalRecordsIfNeeded()>();

        if z0 == 0 goto label1;

        specialinvoke r0.<android.widget.ActivityChooserModel: boolean sortActivitiesIfNeeded()>();

        virtualinvoke r0.<android.widget.ActivityChooserModel: void notifyChanged()>();

     label1:
        return;
    }

    public static android.widget.ActivityChooserModel get(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1;
        java.lang.Object r2, $r6;
        java.lang.Throwable r3, $r10;
        android.widget.ActivityChooserModel r4, $r7;
        java.util.Map $r5, $r8;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 = <android.widget.ActivityChooserModel: java.lang.Object sRegistryLock>;

        entermonitor r2;

     label1:
        $r5 = <android.widget.ActivityChooserModel: java.util.Map sDataModelRegistry>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (android.widget.ActivityChooserModel) $r6;

     label2:
        if r4 != null goto label4;

     label3:
        $r7 = new android.widget.ActivityChooserModel;

        specialinvoke $r7.<android.widget.ActivityChooserModel: void <init>(android.content.Context,java.lang.String)>(r0, r1);

        r4 = $r7;

        $r8 = <android.widget.ActivityChooserModel: java.util.Map sDataModelRegistry>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4);

     label4:
        exitmonitor r2;

     label5:
        return r4;

     label6:
        $r10 := @caughtexception;

        r3 = $r10;

     label7:
        exitmonitor r2;

     label8:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private boolean loadActivitiesIfNeeded()
    {
        android.widget.ActivityChooserModel r0;
        boolean z0, z1, $z2;
        android.content.Intent r1, $r8;
        java.util.List r2, $r5, $r12;
        int i0, i1, $i2, $i3, $i4;
        android.content.pm.ResolveInfo r3;
        android.content.pm.ActivityInfo r4;
        android.content.Context $r6;
        android.content.pm.PackageManager $r7;
        java.lang.Object $r9;
        java.lang.String $r10;
        android.content.pm.ApplicationInfo $r11;
        android.widget.ActivityChooserModel$ActivityResolveInfo $r13;

        r0 := @this: android.widget.ActivityChooserModel;

        z0 = r0.<android.widget.ActivityChooserModel: boolean mReloadActivities>;

        z1 = 0;

        if z0 == 0 goto label4;

        r1 = r0.<android.widget.ActivityChooserModel: android.content.Intent mIntent>;

        z1 = 0;

        if r1 == null goto label4;

        r0.<android.widget.ActivityChooserModel: boolean mReloadActivities> = 0;

        $r5 = r0.<android.widget.ActivityChooserModel: java.util.List mActivities>;

        interfaceinvoke $r5.<java.util.List: void clear()>();

        $r6 = r0.<android.widget.ActivityChooserModel: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r8 = r0.<android.widget.ActivityChooserModel: android.content.Intent mIntent>;

        r2 = virtualinvoke $r7.<android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>($r8, 0);

        i0 = interfaceinvoke r2.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r9 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        r3 = (android.content.pm.ResolveInfo) $r9;

        r4 = r3.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r10 = r4.<android.content.pm.ActivityInfo: java.lang.String permission>;

        $i2 = staticinvoke <android.os.Process: int myUid()>();

        $r11 = r4.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i4 = $r11.<android.content.pm.ApplicationInfo: int uid>;

        $z2 = r4.<android.content.pm.ActivityInfo: boolean exported>;

        $i3 = staticinvoke <android.app.ActivityManager: int checkComponentPermission(java.lang.String,int,int,boolean)>($r10, $i2, $i4, $z2);

        if $i3 != 0 goto label2;

        $r12 = r0.<android.widget.ActivityChooserModel: java.util.List mActivities>;

        $r13 = new android.widget.ActivityChooserModel$ActivityResolveInfo;

        specialinvoke $r13.<android.widget.ActivityChooserModel$ActivityResolveInfo: void <init>(android.widget.ActivityChooserModel,android.content.pm.ResolveInfo)>(r0, r3);

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r13);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        z1 = 1;

     label4:
        return z1;
    }

    private void persistHistoricalDataIfNeeded()
    {
        android.widget.ActivityChooserModel r0;
        android.widget.ActivityChooserModel$PersistHistoryAsyncTask r1, $r5;
        java.util.concurrent.Executor r2;
        java.lang.Object[] r3;
        boolean $z0, $z1, $z2;
        java.lang.String $r4, $r8;
        java.util.ArrayList $r6;
        java.util.List $r7;
        java.lang.IllegalStateException $r10;

        r0 := @this: android.widget.ActivityChooserModel;

        $z0 = r0.<android.widget.ActivityChooserModel: boolean mReadShareHistoryCalled>;

        if $z0 != 0 goto label1;

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No preceding call to #readHistoricalData");

        throw $r10;

     label1:
        $z1 = r0.<android.widget.ActivityChooserModel: boolean mHistoricalRecordsChanged>;

        if $z1 != 0 goto label3;

     label2:
        return;

     label3:
        r0.<android.widget.ActivityChooserModel: boolean mHistoricalRecordsChanged> = 0;

        $r4 = r0.<android.widget.ActivityChooserModel: java.lang.String mHistoryFileName>;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

        if $z2 != 0 goto label2;

        $r5 = new android.widget.ActivityChooserModel$PersistHistoryAsyncTask;

        specialinvoke $r5.<android.widget.ActivityChooserModel$PersistHistoryAsyncTask: void <init>(android.widget.ActivityChooserModel,android.widget.ActivityChooserModel$1)>(r0, null);

        r1 = $r5;

        r2 = <android.os.AsyncTask: java.util.concurrent.Executor SERIAL_EXECUTOR>;

        r3 = newarray (java.lang.Object)[2];

        $r6 = new java.util.ArrayList;

        $r7 = r0.<android.widget.ActivityChooserModel: java.util.List mHistoricalRecords>;

        specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>($r7);

        r3[0] = $r6;

        $r8 = r0.<android.widget.ActivityChooserModel: java.lang.String mHistoryFileName>;

        r3[1] = $r8;

        virtualinvoke r1.<android.widget.ActivityChooserModel$PersistHistoryAsyncTask: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>(r2, r3);

        return;
    }

    private void pruneExcessiveHistoricalRecordsIfNeeded()
    {
        android.widget.ActivityChooserModel r0;
        int i0, i1, $i2, $i3;
        java.util.List $r1, $r2;
        java.lang.Object $r3;
        android.widget.ActivityChooserModel$HistoricalRecord $r4;

        r0 := @this: android.widget.ActivityChooserModel;

        $r1 = r0.<android.widget.ActivityChooserModel: java.util.List mHistoricalRecords>;

        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i3 = r0.<android.widget.ActivityChooserModel: int mHistoryMaxSize>;

        i0 = $i2 - $i3;

        if i0 > 0 goto label2;

     label1:
        return;

     label2:
        r0.<android.widget.ActivityChooserModel: boolean mHistoricalRecordsChanged> = 1;

        i1 = 0;

     label3:
        if i1 >= i0 goto label1;

        $r2 = r0.<android.widget.ActivityChooserModel: java.util.List mHistoricalRecords>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object remove(int)>(0);

        $r4 = (android.widget.ActivityChooserModel$HistoricalRecord) $r3;

        i1 = i1 + 1;

        goto label3;
    }

    private boolean readHistoricalDataIfNeeded()
    {
        android.widget.ActivityChooserModel r0;
        boolean $z0, $z1, $z2;
        java.lang.String $r1;

        r0 := @this: android.widget.ActivityChooserModel;

        $z0 = r0.<android.widget.ActivityChooserModel: boolean mCanReadHistoricalData>;

        if $z0 == 0 goto label1;

        $z1 = r0.<android.widget.ActivityChooserModel: boolean mHistoricalRecordsChanged>;

        if $z1 == 0 goto label1;

        $r1 = r0.<android.widget.ActivityChooserModel: java.lang.String mHistoryFileName>;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z2 != 0 goto label1;

        r0.<android.widget.ActivityChooserModel: boolean mCanReadHistoricalData> = 0;

        r0.<android.widget.ActivityChooserModel: boolean mReadShareHistoryCalled> = 1;

        specialinvoke r0.<android.widget.ActivityChooserModel: void readHistoricalDataImpl()>();

        return 1;

     label1:
        return 0;
    }

    private void readHistoricalDataImpl()
    {
        android.widget.ActivityChooserModel r0;
        java.io.FileInputStream r2;
        java.lang.Throwable r3, $r31, r49, r50, r51;
        java.io.IOException r5, $r30, $r34, $r35, $r41, $r42;
        org.xmlpull.v1.XmlPullParserException r7, $r23, r44, r46;
        org.xmlpull.v1.XmlPullParser r9;
        int i0, i1;
        java.util.List r10;
        java.lang.String $r11, $r14, $r15, $r16, $r17, $r18, $r20, $r22, $r26, $r28, $r32, $r38, $r40, $r43;
        android.content.Context $r13;
        boolean $z0, $z1;
        long $l2;
        float $f0;
        java.lang.StringBuilder $r27, $r29, $r37, $r39, r45, r47;
        java.io.FileNotFoundException $r36;
        android.widget.ActivityChooserModel$HistoricalRecord r48;

        r0 := @this: android.widget.ActivityChooserModel;

     label01:
        $r13 = r0.<android.widget.ActivityChooserModel: android.content.Context mContext>;

        $r11 = r0.<android.widget.ActivityChooserModel: java.lang.String mHistoryFileName>;

        r2 = virtualinvoke $r13.<android.content.Context: java.io.FileInputStream openFileInput(java.lang.String)>($r11);

     label02:
        r9 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r9.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r2, null);

     label03:
        i0 = 0;

     label04:
        if i0 == 1 goto label07;

        if i0 == 2 goto label07;

     label05:
        i0 = interfaceinvoke r9.<org.xmlpull.v1.XmlPullParser: int next()>();

     label06:
        goto label04;

     label07:
        $r14 = "historical-records";

        $r15 = interfaceinvoke r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z0 != 0 goto label14;

        r44 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r44.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Share records file does not start with historical-records tag.");

        r49 = (java.lang.Throwable) r44;

        throw r49;

     label08:
        $r23 := @caughtexception;

        r7 = $r23;

     label09:
        $r28 = <android.widget.ActivityChooserModel: java.lang.String LOG_TAG>;

        r45 = new java.lang.StringBuilder;

        specialinvoke r45.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading historical recrod file: ");

        $r26 = r0.<android.widget.ActivityChooserModel: java.lang.String mHistoryFileName>;

        $r27 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r32 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        r50 = (java.lang.Throwable) r7;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r28, $r32, r50);

     label10:
        if r2 == null goto label35;

     label11:
        virtualinvoke r2.<java.io.FileInputStream: void close()>();

     label12:
        return;

     label13:
        $r30 := @caughtexception;

        return;

     label14:
        r10 = r0.<android.widget.ActivityChooserModel: java.util.List mHistoricalRecords>;

        interfaceinvoke r10.<java.util.List: void clear()>();

     label15:
        i1 = interfaceinvoke r9.<org.xmlpull.v1.XmlPullParser: int next()>();

     label16:
        if i1 != 1 goto label20;

        if r2 == null goto label35;

     label17:
        virtualinvoke r2.<java.io.FileInputStream: void close()>();

     label18:
        return;

     label19:
        $r42 := @caughtexception;

        return;

     label20:
        if i1 == 3 goto label15;

        if i1 == 4 goto label15;

     label21:
        $r16 = "historical-record";

        $r17 = interfaceinvoke r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z1 != 0 goto label28;

        r46 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r46.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Share records file not well-formed.");

        r51 = (java.lang.Throwable) r46;

        throw r51;

     label22:
        $r34 := @caughtexception;

        r5 = $r34;

     label23:
        $r40 = <android.widget.ActivityChooserModel: java.lang.String LOG_TAG>;

        r47 = new java.lang.StringBuilder;

        specialinvoke r47.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading historical recrod file: ");

        $r38 = r0.<android.widget.ActivityChooserModel: java.lang.String mHistoryFileName>;

        $r37 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r43 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r40, $r43, r5);

     label24:
        if r2 == null goto label35;

     label25:
        virtualinvoke r2.<java.io.FileInputStream: void close()>();

     label26:
        return;

     label27:
        $r35 := @caughtexception;

        return;

     label28:
        r48 = new android.widget.ActivityChooserModel$HistoricalRecord;

        $r18 = interfaceinvoke r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "activity");

        $r20 = interfaceinvoke r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "time");

        $l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r20);

        $r22 = interfaceinvoke r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "weight");

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r22);

        specialinvoke r48.<android.widget.ActivityChooserModel$HistoricalRecord: void <init>(java.lang.String,long,float)>($r18, $l2, $f0);

        interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r48);

     label29:
        goto label15;

     label30:
        $r31 := @caughtexception;

        r3 = $r31;

        if r2 == null goto label32;

     label31:
        virtualinvoke r2.<java.io.FileInputStream: void close()>();

     label32:
        throw r3;

     label33:
        $r41 := @caughtexception;

        goto label32;

     label34:
        $r36 := @caughtexception;

     label35:
        return;

        catch java.io.FileNotFoundException from label01 to label02 with label34;
        catch org.xmlpull.v1.XmlPullParserException from label02 to label03 with label08;
        catch java.io.IOException from label02 to label03 with label22;
        catch java.lang.Throwable from label02 to label03 with label30;
        catch org.xmlpull.v1.XmlPullParserException from label05 to label06 with label08;
        catch java.io.IOException from label05 to label06 with label22;
        catch java.lang.Throwable from label05 to label06 with label30;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label08 with label08;
        catch java.io.IOException from label07 to label08 with label22;
        catch java.lang.Throwable from label07 to label08 with label30;
        catch java.lang.Throwable from label09 to label10 with label30;
        catch java.io.IOException from label11 to label12 with label13;
        catch org.xmlpull.v1.XmlPullParserException from label14 to label15 with label08;
        catch java.io.IOException from label14 to label15 with label22;
        catch java.lang.Throwable from label14 to label15 with label30;
        catch org.xmlpull.v1.XmlPullParserException from label15 to label16 with label08;
        catch java.io.IOException from label15 to label16 with label22;
        catch java.lang.Throwable from label15 to label16 with label30;
        catch java.io.IOException from label17 to label18 with label19;
        catch org.xmlpull.v1.XmlPullParserException from label21 to label22 with label08;
        catch java.io.IOException from label21 to label22 with label22;
        catch java.lang.Throwable from label21 to label22 with label30;
        catch java.lang.Throwable from label23 to label24 with label30;
        catch java.io.IOException from label25 to label26 with label27;
        catch org.xmlpull.v1.XmlPullParserException from label28 to label29 with label08;
        catch java.io.IOException from label28 to label29 with label22;
        catch java.lang.Throwable from label28 to label29 with label30;
        catch java.io.IOException from label31 to label32 with label33;
    }

    private boolean sortActivitiesIfNeeded()
    {
        android.widget.ActivityChooserModel r0;
        android.widget.ActivityChooserModel$ActivitySorter $r1, $r6;
        android.content.Intent $r2, $r7;
        java.util.List $r3, $r4, $r5, $r8, $r9;
        boolean $z0, $z1;

        r0 := @this: android.widget.ActivityChooserModel;

        $r1 = r0.<android.widget.ActivityChooserModel: android.widget.ActivityChooserModel$ActivitySorter mActivitySorter>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.ActivityChooserModel: android.content.Intent mIntent>;

        if $r2 == null goto label1;

        $r3 = r0.<android.widget.ActivityChooserModel: java.util.List mActivities>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r4 = r0.<android.widget.ActivityChooserModel: java.util.List mHistoricalRecords>;

        $z1 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label1;

        $r6 = r0.<android.widget.ActivityChooserModel: android.widget.ActivityChooserModel$ActivitySorter mActivitySorter>;

        $r7 = r0.<android.widget.ActivityChooserModel: android.content.Intent mIntent>;

        $r8 = r0.<android.widget.ActivityChooserModel: java.util.List mActivities>;

        $r5 = r0.<android.widget.ActivityChooserModel: java.util.List mHistoricalRecords>;

        $r9 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r5);

        interfaceinvoke $r6.<android.widget.ActivityChooserModel$ActivitySorter: void sort(android.content.Intent,java.util.List,java.util.List)>($r7, $r8, $r9);

        return 1;

     label1:
        return 0;
    }

    public android.content.Intent chooseActivity(int)
    {
        android.widget.ActivityChooserModel r0;
        int i0;
        java.lang.Object r1, $r9;
        java.lang.Throwable r2, $r24;
        android.widget.ActivityChooserModel$ActivityResolveInfo r3;
        android.content.ComponentName r4, $r10;
        android.content.Intent r5, r6, $r7, $r17, $r18, $r23;
        java.util.List $r8;
        android.content.pm.ResolveInfo $r11, $r14;
        android.content.pm.ActivityInfo $r12, $r13;
        java.lang.String $r15, $r16;
        android.widget.ActivityChooserModel$OnChooseActivityListener $r19, $r22;
        long $l1;
        android.widget.ActivityChooserModel$HistoricalRecord $r21;
        boolean $z1;

        r0 := @this: android.widget.ActivityChooserModel;

        i0 := @parameter0: int;

        r1 = r0.<android.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        entermonitor r1;

     label1:
        $r7 = r0.<android.widget.ActivityChooserModel: android.content.Intent mIntent>;

        if $r7 != null goto label3;

        exitmonitor r1;

     label2:
        return null;

     label3:
        specialinvoke r0.<android.widget.ActivityChooserModel: void ensureConsistentState()>();

        $r8 = r0.<android.widget.ActivityChooserModel: java.util.List mActivities>;

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i0);

        r3 = (android.widget.ActivityChooserModel$ActivityResolveInfo) $r9;

        $r10 = new android.content.ComponentName;

        $r11 = r3.<android.widget.ActivityChooserModel$ActivityResolveInfo: android.content.pm.ResolveInfo resolveInfo>;

        $r12 = $r11.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r15 = $r12.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r14 = r3.<android.widget.ActivityChooserModel$ActivityResolveInfo: android.content.pm.ResolveInfo resolveInfo>;

        $r13 = $r14.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r16 = $r13.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r10.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r15, $r16);

        r4 = $r10;

        $r18 = new android.content.Intent;

        $r17 = r0.<android.widget.ActivityChooserModel: android.content.Intent mIntent>;

        specialinvoke $r18.<android.content.Intent: void <init>(android.content.Intent)>($r17);

        r5 = $r18;

        virtualinvoke r5.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r4);

        $r19 = r0.<android.widget.ActivityChooserModel: android.widget.ActivityChooserModel$OnChooseActivityListener mActivityChoserModelPolicy>;

        if $r19 == null goto label5;

        $r23 = new android.content.Intent;

        specialinvoke $r23.<android.content.Intent: void <init>(android.content.Intent)>(r5);

        r6 = $r23;

        $r22 = r0.<android.widget.ActivityChooserModel: android.widget.ActivityChooserModel$OnChooseActivityListener mActivityChoserModelPolicy>;

        $z1 = interfaceinvoke $r22.<android.widget.ActivityChooserModel$OnChooseActivityListener: boolean onChooseActivity(android.widget.ActivityChooserModel,android.content.Intent)>(r0, r6);

        if $z1 == 0 goto label5;

        exitmonitor r1;

     label4:
        return null;

     label5:
        $r21 = new android.widget.ActivityChooserModel$HistoricalRecord;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke $r21.<android.widget.ActivityChooserModel$HistoricalRecord: void <init>(android.content.ComponentName,long,float)>(r4, $l1, 1.0F);

        specialinvoke r0.<android.widget.ActivityChooserModel: boolean addHisoricalRecord(android.widget.ActivityChooserModel$HistoricalRecord)>($r21);

        exitmonitor r1;

     label6:
        return r5;

     label7:
        $r24 := @caughtexception;

        r2 = $r24;

     label8:
        exitmonitor r1;

     label9:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.widget.ActivityChooserModel r0;
        com.android.internal.content.PackageMonitor $r1;

        r0 := @this: android.widget.ActivityChooserModel;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        $r1 = r0.<android.widget.ActivityChooserModel: com.android.internal.content.PackageMonitor mPackageMonitor>;

        virtualinvoke $r1.<com.android.internal.content.PackageMonitor: void unregister()>();

        return;
    }

    public android.content.pm.ResolveInfo getActivity(int)
    {
        android.widget.ActivityChooserModel r0;
        int i0;
        java.lang.Object r1, $r5;
        java.lang.Throwable r2, $r7;
        android.content.pm.ResolveInfo r3;
        java.util.List $r4;
        android.widget.ActivityChooserModel$ActivityResolveInfo $r6;

        r0 := @this: android.widget.ActivityChooserModel;

        i0 := @parameter0: int;

        r1 = r0.<android.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<android.widget.ActivityChooserModel: void ensureConsistentState()>();

        $r4 = r0.<android.widget.ActivityChooserModel: java.util.List mActivities>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i0);

        $r6 = (android.widget.ActivityChooserModel$ActivityResolveInfo) $r5;

        r3 = $r6.<android.widget.ActivityChooserModel$ActivityResolveInfo: android.content.pm.ResolveInfo resolveInfo>;

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int getActivityCount()
    {
        android.widget.ActivityChooserModel r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r4;
        int i0;
        java.util.List $r3;

        r0 := @this: android.widget.ActivityChooserModel;

        r1 = r0.<android.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<android.widget.ActivityChooserModel: void ensureConsistentState()>();

        $r3 = r0.<android.widget.ActivityChooserModel: java.util.List mActivities>;

        i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int getActivityIndex(android.content.pm.ResolveInfo)
    {
        android.widget.ActivityChooserModel r0;
        android.content.pm.ResolveInfo r1, $r7;
        java.lang.Object r2, $r5;
        java.lang.Throwable r3, $r8;
        java.util.List r4;
        int i0, i1;
        android.widget.ActivityChooserModel$ActivityResolveInfo $r6;

        r0 := @this: android.widget.ActivityChooserModel;

        r1 := @parameter0: android.content.pm.ResolveInfo;

        r2 = r0.<android.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        entermonitor r2;

     label01:
        specialinvoke r0.<android.widget.ActivityChooserModel: void ensureConsistentState()>();

        r4 = r0.<android.widget.ActivityChooserModel: java.util.List mActivities>;

        i0 = interfaceinvoke r4.<java.util.List: int size()>();

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label06;

     label04:
        $r5 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i1);

        $r6 = (android.widget.ActivityChooserModel$ActivityResolveInfo) $r5;

        $r7 = $r6.<android.widget.ActivityChooserModel$ActivityResolveInfo: android.content.pm.ResolveInfo resolveInfo>;

        if $r7 != r1 goto label11;

        exitmonitor r2;

     label05:
        return i1;

     label06:
        exitmonitor r2;

     label07:
        return -1;

     label08:
        $r8 := @caughtexception;

        r3 = $r8;

     label09:
        exitmonitor r2;

     label10:
        throw r3;

     label11:
        i1 = i1 + 1;

        goto label03;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public android.content.pm.ResolveInfo getDefaultActivity()
    {
        android.widget.ActivityChooserModel r0;
        java.lang.Object r1, $r6;
        java.lang.Throwable r2, $r8;
        android.content.pm.ResolveInfo r3;
        java.util.List $r4, $r5;
        boolean $z0;
        android.widget.ActivityChooserModel$ActivityResolveInfo $r7;

        r0 := @this: android.widget.ActivityChooserModel;

        r1 = r0.<android.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<android.widget.ActivityChooserModel: void ensureConsistentState()>();

        $r4 = r0.<android.widget.ActivityChooserModel: java.util.List mActivities>;

        $z0 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $r5 = r0.<android.widget.ActivityChooserModel: java.util.List mActivities>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (android.widget.ActivityChooserModel$ActivityResolveInfo) $r6;

        r3 = $r7.<android.widget.ActivityChooserModel$ActivityResolveInfo: android.content.pm.ResolveInfo resolveInfo>;

        exitmonitor r1;

     label2:
        return r3;

     label3:
        exitmonitor r1;

     label4:
        return null;

     label5:
        $r8 := @caughtexception;

        r2 = $r8;

     label6:
        exitmonitor r1;

     label7:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public int getHistoryMaxSize()
    {
        android.widget.ActivityChooserModel r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r3;
        int i0;

        r0 := @this: android.widget.ActivityChooserModel;

        r1 = r0.<android.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        entermonitor r1;

     label1:
        i0 = r0.<android.widget.ActivityChooserModel: int mHistoryMaxSize>;

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int getHistorySize()
    {
        android.widget.ActivityChooserModel r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r4;
        int i0;
        java.util.List $r3;

        r0 := @this: android.widget.ActivityChooserModel;

        r1 = r0.<android.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<android.widget.ActivityChooserModel: void ensureConsistentState()>();

        $r3 = r0.<android.widget.ActivityChooserModel: java.util.List mHistoricalRecords>;

        i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.content.Intent getIntent()
    {
        android.widget.ActivityChooserModel r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r4;
        android.content.Intent r3;

        r0 := @this: android.widget.ActivityChooserModel;

        r1 = r0.<android.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        entermonitor r1;

     label1:
        r3 = r0.<android.widget.ActivityChooserModel: android.content.Intent mIntent>;

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setActivitySorter(android.widget.ActivityChooserModel$ActivitySorter)
    {
        android.widget.ActivityChooserModel r0;
        android.widget.ActivityChooserModel$ActivitySorter r1, $r4;
        java.lang.Object r2;
        java.lang.Throwable r3, $r5;
        boolean $z0;

        r0 := @this: android.widget.ActivityChooserModel;

        r1 := @parameter0: android.widget.ActivityChooserModel$ActivitySorter;

        r2 = r0.<android.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        entermonitor r2;

     label1:
        $r4 = r0.<android.widget.ActivityChooserModel: android.widget.ActivityChooserModel$ActivitySorter mActivitySorter>;

        if $r4 != r1 goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        r0.<android.widget.ActivityChooserModel: android.widget.ActivityChooserModel$ActivitySorter mActivitySorter> = r1;

        $z0 = specialinvoke r0.<android.widget.ActivityChooserModel: boolean sortActivitiesIfNeeded()>();

        if $z0 == 0 goto label4;

        virtualinvoke r0.<android.widget.ActivityChooserModel: void notifyChanged()>();

     label4:
        exitmonitor r2;

     label5:
        return;

     label6:
        $r5 := @caughtexception;

        r3 = $r5;

     label7:
        exitmonitor r2;

     label8:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void setDefaultActivity(int)
    {
        android.widget.ActivityChooserModel r0;
        int i0;
        java.lang.Object r1, $r6, $r8;
        java.lang.Throwable r2, $r17;
        android.widget.ActivityChooserModel$ActivityResolveInfo r3, r4;
        float f0, $f1, $f2, $f3;
        java.util.List $r5, $r7;
        android.widget.ActivityChooserModel$HistoricalRecord $r9;
        android.content.ComponentName $r10;
        android.content.pm.ResolveInfo $r11, $r14;
        android.content.pm.ActivityInfo $r12, $r13;
        java.lang.String $r15, $r16;
        long $l1;

        r0 := @this: android.widget.ActivityChooserModel;

        i0 := @parameter0: int;

        r1 = r0.<android.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<android.widget.ActivityChooserModel: void ensureConsistentState()>();

        $r5 = r0.<android.widget.ActivityChooserModel: java.util.List mActivities>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i0);

        r3 = (android.widget.ActivityChooserModel$ActivityResolveInfo) $r6;

        $r7 = r0.<android.widget.ActivityChooserModel: java.util.List mActivities>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(0);

        r4 = (android.widget.ActivityChooserModel$ActivityResolveInfo) $r8;

     label2:
        if r4 == null goto label9;

     label3:
        $f3 = r4.<android.widget.ActivityChooserModel$ActivityResolveInfo: float weight>;

        $f1 = r3.<android.widget.ActivityChooserModel$ActivityResolveInfo: float weight>;

        $f2 = $f3 - $f1;

        f0 = 5.0F + $f2;

     label4:
        $r9 = new android.widget.ActivityChooserModel$HistoricalRecord;

        $r10 = new android.content.ComponentName;

        $r11 = r3.<android.widget.ActivityChooserModel$ActivityResolveInfo: android.content.pm.ResolveInfo resolveInfo>;

        $r12 = $r11.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r15 = $r12.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r14 = r3.<android.widget.ActivityChooserModel$ActivityResolveInfo: android.content.pm.ResolveInfo resolveInfo>;

        $r13 = $r14.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r16 = $r13.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r10.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r15, $r16);

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke $r9.<android.widget.ActivityChooserModel$HistoricalRecord: void <init>(android.content.ComponentName,long,float)>($r10, $l1, f0);

        specialinvoke r0.<android.widget.ActivityChooserModel: boolean addHisoricalRecord(android.widget.ActivityChooserModel$HistoricalRecord)>($r9);

        exitmonitor r1;

     label5:
        return;

     label6:
        $r17 := @caughtexception;

        r2 = $r17;

     label7:
        exitmonitor r1;

     label8:
        throw r2;

     label9:
        f0 = 1.0F;

        goto label4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void setHistoryMaxSize(int)
    {
        android.widget.ActivityChooserModel r0;
        int i0, $i1;
        java.lang.Object r1;
        java.lang.Throwable r2, $r3;
        boolean $z0;

        r0 := @this: android.widget.ActivityChooserModel;

        i0 := @parameter0: int;

        r1 = r0.<android.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        entermonitor r1;

     label1:
        $i1 = r0.<android.widget.ActivityChooserModel: int mHistoryMaxSize>;

        if $i1 != i0 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        r0.<android.widget.ActivityChooserModel: int mHistoryMaxSize> = i0;

        specialinvoke r0.<android.widget.ActivityChooserModel: void pruneExcessiveHistoricalRecordsIfNeeded()>();

        $z0 = specialinvoke r0.<android.widget.ActivityChooserModel: boolean sortActivitiesIfNeeded()>();

        if $z0 == 0 goto label4;

        virtualinvoke r0.<android.widget.ActivityChooserModel: void notifyChanged()>();

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r3 := @caughtexception;

        r2 = $r3;

     label7:
        exitmonitor r1;

     label8:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void setIntent(android.content.Intent)
    {
        android.widget.ActivityChooserModel r0;
        android.content.Intent r1, $r4;
        java.lang.Object r2;
        java.lang.Throwable r3, $r5;

        r0 := @this: android.widget.ActivityChooserModel;

        r1 := @parameter0: android.content.Intent;

        r2 = r0.<android.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        entermonitor r2;

     label1:
        $r4 = r0.<android.widget.ActivityChooserModel: android.content.Intent mIntent>;

        if $r4 != r1 goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        r0.<android.widget.ActivityChooserModel: android.content.Intent mIntent> = r1;

        r0.<android.widget.ActivityChooserModel: boolean mReloadActivities> = 1;

        specialinvoke r0.<android.widget.ActivityChooserModel: void ensureConsistentState()>();

        exitmonitor r2;

     label4:
        return;

     label5:
        $r5 := @caughtexception;

        r3 = $r5;

     label6:
        exitmonitor r2;

     label7:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void setOnChooseActivityListener(android.widget.ActivityChooserModel$OnChooseActivityListener)
    {
        android.widget.ActivityChooserModel r0;
        android.widget.ActivityChooserModel$OnChooseActivityListener r1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r4;

        r0 := @this: android.widget.ActivityChooserModel;

        r1 := @parameter0: android.widget.ActivityChooserModel$OnChooseActivityListener;

        r2 = r0.<android.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        entermonitor r2;

     label1:
        r0.<android.widget.ActivityChooserModel: android.widget.ActivityChooserModel$OnChooseActivityListener mActivityChoserModelPolicy> = r1;

        exitmonitor r2;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
