class android.view.AccessibilityIterators$WordTextSegmentIterator extends android.view.AccessibilityIterators$CharacterTextSegmentIterator
{
    private static android.view.AccessibilityIterators$WordTextSegmentIterator sInstance;

    private void <init>(java.util.Locale)
    {
        android.view.AccessibilityIterators$WordTextSegmentIterator r0;
        java.util.Locale r1;

        r0 := @this: android.view.AccessibilityIterators$WordTextSegmentIterator;

        r1 := @parameter0: java.util.Locale;

        specialinvoke r0.<android.view.AccessibilityIterators$CharacterTextSegmentIterator: void <init>(java.util.Locale,android.view.AccessibilityIterators$1)>(r1, null);

        return;
    }

    public static android.view.AccessibilityIterators$WordTextSegmentIterator getInstance(java.util.Locale)
    {
        java.util.Locale r0;
        android.view.AccessibilityIterators$WordTextSegmentIterator $r1, $r2, $r3;

        r0 := @parameter0: java.util.Locale;

        $r1 = <android.view.AccessibilityIterators$WordTextSegmentIterator: android.view.AccessibilityIterators$WordTextSegmentIterator sInstance>;

        if $r1 != null goto label1;

        $r3 = new android.view.AccessibilityIterators$WordTextSegmentIterator;

        specialinvoke $r3.<android.view.AccessibilityIterators$WordTextSegmentIterator: void <init>(java.util.Locale)>(r0);

        <android.view.AccessibilityIterators$WordTextSegmentIterator: android.view.AccessibilityIterators$WordTextSegmentIterator sInstance> = $r3;

     label1:
        $r2 = <android.view.AccessibilityIterators$WordTextSegmentIterator: android.view.AccessibilityIterators$WordTextSegmentIterator sInstance>;

        return $r2;
    }

    private boolean isEndBoundary(int)
    {
        android.view.AccessibilityIterators$WordTextSegmentIterator r0;
        int i0, $i1, $i2;
        boolean $z0, $z1;
        java.lang.String $r1;

        r0 := @this: android.view.AccessibilityIterators$WordTextSegmentIterator;

        i0 := @parameter0: int;

        if i0 <= 0 goto label2;

        $i1 = i0 - 1;

        $z0 = specialinvoke r0.<android.view.AccessibilityIterators$WordTextSegmentIterator: boolean isLetterOrDigit(int)>($i1);

        if $z0 == 0 goto label2;

        $r1 = r0.<android.view.AccessibilityIterators$WordTextSegmentIterator: java.lang.String mText>;

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        if i0 == $i2 goto label1;

        $z1 = specialinvoke r0.<android.view.AccessibilityIterators$WordTextSegmentIterator: boolean isLetterOrDigit(int)>(i0);

        if $z1 != 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    private boolean isLetterOrDigit(int)
    {
        android.view.AccessibilityIterators$WordTextSegmentIterator r0;
        int i0, $i1, $i2;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: android.view.AccessibilityIterators$WordTextSegmentIterator;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r1 = r0.<android.view.AccessibilityIterators$WordTextSegmentIterator: java.lang.String mText>;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if i0 >= $i1 goto label1;

        $r2 = r0.<android.view.AccessibilityIterators$WordTextSegmentIterator: java.lang.String mText>;

        $i2 = virtualinvoke $r2.<java.lang.String: int codePointAt(int)>(i0);

        $z0 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(int)>($i2);

        return $z0;

     label1:
        return 0;
    }

    private boolean isStartBoundary(int)
    {
        android.view.AccessibilityIterators$WordTextSegmentIterator r0;
        int i0, $i1;
        boolean $z0, $z1;

        r0 := @this: android.view.AccessibilityIterators$WordTextSegmentIterator;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<android.view.AccessibilityIterators$WordTextSegmentIterator: boolean isLetterOrDigit(int)>(i0);

        if $z0 == 0 goto label2;

        if i0 == 0 goto label1;

        $i1 = i0 - 1;

        $z1 = specialinvoke r0.<android.view.AccessibilityIterators$WordTextSegmentIterator: boolean isLetterOrDigit(int)>($i1);

        if $z1 != 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public int[] following(int)
    {
        android.view.AccessibilityIterators$WordTextSegmentIterator r0;
        int i0, i1, i2, $i3, $i4;
        java.lang.String $r1, $r2;
        boolean $z0, $z1, $z2;
        java.text.BreakIterator $r3, $r5;
        int[] $r4;

        r0 := @this: android.view.AccessibilityIterators$WordTextSegmentIterator;

        i0 := @parameter0: int;

        $r1 = r0.<android.view.AccessibilityIterators$WordTextSegmentIterator: java.lang.String mText>;

        $i3 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i3 > 0 goto label2;

     label1:
        return null;

     label2:
        $r2 = r0.<android.view.AccessibilityIterators$WordTextSegmentIterator: java.lang.String mText>;

        $i4 = virtualinvoke $r2.<java.lang.String: int length()>();

        if i0 >= $i4 goto label1;

        i1 = i0;

        if i1 >= 0 goto label3;

        i1 = 0;

     label3:
        $z0 = specialinvoke r0.<android.view.AccessibilityIterators$WordTextSegmentIterator: boolean isLetterOrDigit(int)>(i1);

        if $z0 != 0 goto label4;

        $z2 = specialinvoke r0.<android.view.AccessibilityIterators$WordTextSegmentIterator: boolean isStartBoundary(int)>(i1);

        if $z2 != 0 goto label4;

        $r5 = r0.<android.view.AccessibilityIterators$WordTextSegmentIterator: java.text.BreakIterator mImpl>;

        i1 = virtualinvoke $r5.<java.text.BreakIterator: int following(int)>(i1);

        if i1 != -1 goto label3;

        return null;

     label4:
        $r3 = r0.<android.view.AccessibilityIterators$WordTextSegmentIterator: java.text.BreakIterator mImpl>;

        i2 = virtualinvoke $r3.<java.text.BreakIterator: int following(int)>(i1);

        if i2 == -1 goto label1;

        $z1 = specialinvoke r0.<android.view.AccessibilityIterators$WordTextSegmentIterator: boolean isEndBoundary(int)>(i2);

        if $z1 == 0 goto label1;

        $r4 = virtualinvoke r0.<android.view.AccessibilityIterators$WordTextSegmentIterator: int[] getRange(int,int)>(i1, i2);

        return $r4;
    }

    protected void onLocaleChanged(java.util.Locale)
    {
        android.view.AccessibilityIterators$WordTextSegmentIterator r0;
        java.util.Locale r1;
        java.text.BreakIterator $r2;

        r0 := @this: android.view.AccessibilityIterators$WordTextSegmentIterator;

        r1 := @parameter0: java.util.Locale;

        $r2 = staticinvoke <java.text.BreakIterator: java.text.BreakIterator getWordInstance(java.util.Locale)>(r1);

        r0.<android.view.AccessibilityIterators$WordTextSegmentIterator: java.text.BreakIterator mImpl> = $r2;

        return;
    }

    public int[] preceding(int)
    {
        android.view.AccessibilityIterators$WordTextSegmentIterator r0;
        int i0, i1, i2, i3, $i4;
        java.lang.String $r1;
        java.text.BreakIterator $r2, $r4;
        boolean $z0, $z1, $z2;
        int[] $r3;

        r0 := @this: android.view.AccessibilityIterators$WordTextSegmentIterator;

        i0 := @parameter0: int;

        $r1 = r0.<android.view.AccessibilityIterators$WordTextSegmentIterator: java.lang.String mText>;

        i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if i1 > 0 goto label2;

     label1:
        return null;

     label2:
        if i0 <= 0 goto label1;

        i2 = i0;

        if i2 <= i1 goto label3;

        i2 = i1;

     label3:
        if i2 <= 0 goto label4;

        $i4 = i2 - 1;

        $z1 = specialinvoke r0.<android.view.AccessibilityIterators$WordTextSegmentIterator: boolean isLetterOrDigit(int)>($i4);

        if $z1 != 0 goto label4;

        $z2 = specialinvoke r0.<android.view.AccessibilityIterators$WordTextSegmentIterator: boolean isEndBoundary(int)>(i2);

        if $z2 != 0 goto label4;

        $r4 = r0.<android.view.AccessibilityIterators$WordTextSegmentIterator: java.text.BreakIterator mImpl>;

        i2 = virtualinvoke $r4.<java.text.BreakIterator: int preceding(int)>(i2);

        if i2 != -1 goto label3;

        return null;

     label4:
        $r2 = r0.<android.view.AccessibilityIterators$WordTextSegmentIterator: java.text.BreakIterator mImpl>;

        i3 = virtualinvoke $r2.<java.text.BreakIterator: int preceding(int)>(i2);

        if i3 == -1 goto label1;

        $z0 = specialinvoke r0.<android.view.AccessibilityIterators$WordTextSegmentIterator: boolean isStartBoundary(int)>(i3);

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<android.view.AccessibilityIterators$WordTextSegmentIterator: int[] getRange(int,int)>(i3, i2);

        return $r3;
    }
}
