class android.content.AbstractThreadedSyncAdapter$SyncThread extends java.lang.Thread
{
    private final android.accounts.Account mAccount;
    private final java.lang.String mAuthority;
    private final android.os.Bundle mExtras;
    private final android.content.SyncContext mSyncContext;
    private final android.accounts.Account mThreadsKey;
    final android.content.AbstractThreadedSyncAdapter this$0;

    private void <init>(android.content.AbstractThreadedSyncAdapter, java.lang.String, android.content.SyncContext, java.lang.String, android.accounts.Account, android.os.Bundle)
    {
        android.content.AbstractThreadedSyncAdapter$SyncThread r0;
        android.content.AbstractThreadedSyncAdapter r1;
        java.lang.String r2, r4;
        android.content.SyncContext r3;
        android.accounts.Account r5, $r7;
        android.os.Bundle r6;

        r0 := @this: android.content.AbstractThreadedSyncAdapter$SyncThread;

        r1 := @parameter0: android.content.AbstractThreadedSyncAdapter;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.SyncContext;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: android.accounts.Account;

        r6 := @parameter5: android.os.Bundle;

        r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.content.AbstractThreadedSyncAdapter this$0> = r1;

        specialinvoke r0.<java.lang.Thread: void <init>(java.lang.String)>(r2);

        r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.content.SyncContext mSyncContext> = r3;

        r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: java.lang.String mAuthority> = r4;

        r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.accounts.Account mAccount> = r5;

        r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.os.Bundle mExtras> = r6;

        $r7 = staticinvoke <android.content.AbstractThreadedSyncAdapter: android.accounts.Account access$100(android.content.AbstractThreadedSyncAdapter,android.accounts.Account)>(r1, r5);

        r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.accounts.Account mThreadsKey> = $r7;

        return;
    }

    void <init>(android.content.AbstractThreadedSyncAdapter, java.lang.String, android.content.SyncContext, java.lang.String, android.accounts.Account, android.os.Bundle, android.content.AbstractThreadedSyncAdapter$1)
    {
        android.content.AbstractThreadedSyncAdapter$SyncThread r0;
        android.content.AbstractThreadedSyncAdapter r1;
        java.lang.String r2, r4;
        android.content.SyncContext r3;
        android.accounts.Account r5;
        android.os.Bundle r6;
        android.content.AbstractThreadedSyncAdapter$1 r7;

        r0 := @this: android.content.AbstractThreadedSyncAdapter$SyncThread;

        r1 := @parameter0: android.content.AbstractThreadedSyncAdapter;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.SyncContext;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: android.accounts.Account;

        r6 := @parameter5: android.os.Bundle;

        r7 := @parameter6: android.content.AbstractThreadedSyncAdapter$1;

        specialinvoke r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: void <init>(android.content.AbstractThreadedSyncAdapter,java.lang.String,android.content.SyncContext,java.lang.String,android.accounts.Account,android.os.Bundle)>(r1, r2, r3, r4, r5, r6);

        return;
    }

    static android.content.SyncContext access$700(android.content.AbstractThreadedSyncAdapter$SyncThread)
    {
        android.content.AbstractThreadedSyncAdapter$SyncThread r0;
        android.content.SyncContext $r1;

        r0 := @parameter0: android.content.AbstractThreadedSyncAdapter$SyncThread;

        $r1 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.content.SyncContext mSyncContext>;

        return $r1;
    }

    private boolean isCanceled()
    {
        android.content.AbstractThreadedSyncAdapter$SyncThread r0;
        java.lang.Thread $r1;
        boolean $z0;

        r0 := @this: android.content.AbstractThreadedSyncAdapter$SyncThread;

        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $z0 = virtualinvoke $r1.<java.lang.Thread: boolean isInterrupted()>();

        return $z0;
    }

    public void run()
    {
        android.content.AbstractThreadedSyncAdapter$SyncThread r0;
        android.content.SyncResult r1, $r11;
        android.content.ContentProviderClient r2;
        java.lang.Throwable r3, r5, r7, r9, $r30, $r35, $r37, $r38;
        java.lang.Object r4, r6, r8;
        boolean z0, $z1, $z2, $z3;
        java.lang.String $r10, $r14, $r20;
        android.content.Context $r12;
        android.content.AbstractThreadedSyncAdapter $r13, $r16, $r17, $r23, $r25, $r26, $r31, $r32;
        android.content.ContentResolver $r15;
        android.accounts.Account $r18, $r24, $r29, $r33;
        java.util.HashMap $r19, $r27, $r34;
        android.os.Bundle $r21;
        android.content.SyncContext $r22, $r28, $r36;

        r0 := @this: android.content.AbstractThreadedSyncAdapter$SyncThread;

        staticinvoke <android.os.Process: void setThreadPriority(int)>(10);

        $r10 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: java.lang.String mAuthority>;

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(128L, $r10);

        $r11 = new android.content.SyncResult;

        specialinvoke $r11.<android.content.SyncResult: void <init>()>();

        r1 = $r11;

        r2 = null;

     label01:
        z0 = specialinvoke r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: boolean isCanceled()>();

     label02:
        if z0 == 0 goto label10;

        staticinvoke <android.os.Trace: void traceEnd(long)>(128L);

        goto label03;

     label03:
        $z2 = specialinvoke r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: boolean isCanceled()>();

        if $z2 != 0 goto label04;

        $r28 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.content.SyncContext mSyncContext>;

        virtualinvoke $r28.<android.content.SyncContext: void onFinished(android.content.SyncResult)>(r1);

     label04:
        $r23 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.content.AbstractThreadedSyncAdapter this$0>;

        r8 = staticinvoke <android.content.AbstractThreadedSyncAdapter: java.lang.Object access$200(android.content.AbstractThreadedSyncAdapter)>($r23);

        entermonitor r8;

     label05:
        $r26 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.content.AbstractThreadedSyncAdapter this$0>;

        $r27 = staticinvoke <android.content.AbstractThreadedSyncAdapter: java.util.HashMap access$300(android.content.AbstractThreadedSyncAdapter)>($r26);

        $r29 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.accounts.Account mThreadsKey>;

        virtualinvoke $r27.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r29);

        exitmonitor r8;

     label06:
        return;

     label07:
        $r37 := @caughtexception;

        r9 = $r37;

     label08:
        exitmonitor r8;

     label09:
        throw r9;

     label10:
        $r13 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.content.AbstractThreadedSyncAdapter this$0>;

        $r12 = staticinvoke <android.content.AbstractThreadedSyncAdapter: android.content.Context access$900(android.content.AbstractThreadedSyncAdapter)>($r13);

        $r15 = virtualinvoke $r12.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r14 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: java.lang.String mAuthority>;

        r2 = virtualinvoke $r15.<android.content.ContentResolver: android.content.ContentProviderClient acquireContentProviderClient(java.lang.String)>($r14);

     label11:
        if r2 == null goto label21;

     label12:
        $r25 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.content.AbstractThreadedSyncAdapter this$0>;

        $r24 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.accounts.Account mAccount>;

        $r21 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.os.Bundle mExtras>;

        $r20 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: java.lang.String mAuthority>;

        virtualinvoke $r25.<android.content.AbstractThreadedSyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>($r24, $r21, $r20, r2, r1);

     label13:
        staticinvoke <android.os.Trace: void traceEnd(long)>(128L);

        if r2 == null goto label14;

        virtualinvoke r2.<android.content.ContentProviderClient: boolean release()>();

     label14:
        $z1 = specialinvoke r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: boolean isCanceled()>();

        if $z1 != 0 goto label15;

        $r22 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.content.SyncContext mSyncContext>;

        virtualinvoke $r22.<android.content.SyncContext: void onFinished(android.content.SyncResult)>(r1);

     label15:
        $r16 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.content.AbstractThreadedSyncAdapter this$0>;

        r6 = staticinvoke <android.content.AbstractThreadedSyncAdapter: java.lang.Object access$200(android.content.AbstractThreadedSyncAdapter)>($r16);

        entermonitor r6;

     label16:
        $r17 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.content.AbstractThreadedSyncAdapter this$0>;

        $r19 = staticinvoke <android.content.AbstractThreadedSyncAdapter: java.util.HashMap access$300(android.content.AbstractThreadedSyncAdapter)>($r17);

        $r18 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.accounts.Account mThreadsKey>;

        virtualinvoke $r19.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r18);

        exitmonitor r6;

     label17:
        return;

     label18:
        $r38 := @caughtexception;

        r7 = $r38;

     label19:
        exitmonitor r6;

     label20:
        throw r7;

     label21:
        r1.<android.content.SyncResult: boolean databaseError> = 1;

     label22:
        goto label13;

     label23:
        $r30 := @caughtexception;

        r3 = $r30;

        staticinvoke <android.os.Trace: void traceEnd(long)>(128L);

        if r2 == null goto label24;

        virtualinvoke r2.<android.content.ContentProviderClient: boolean release()>();

     label24:
        $z3 = specialinvoke r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: boolean isCanceled()>();

        if $z3 != 0 goto label25;

        $r36 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.content.SyncContext mSyncContext>;

        virtualinvoke $r36.<android.content.SyncContext: void onFinished(android.content.SyncResult)>(r1);

     label25:
        $r32 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.content.AbstractThreadedSyncAdapter this$0>;

        r4 = staticinvoke <android.content.AbstractThreadedSyncAdapter: java.lang.Object access$200(android.content.AbstractThreadedSyncAdapter)>($r32);

        entermonitor r4;

     label26:
        $r31 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.content.AbstractThreadedSyncAdapter this$0>;

        $r34 = staticinvoke <android.content.AbstractThreadedSyncAdapter: java.util.HashMap access$300(android.content.AbstractThreadedSyncAdapter)>($r31);

        $r33 = r0.<android.content.AbstractThreadedSyncAdapter$SyncThread: android.accounts.Account mThreadsKey>;

        virtualinvoke $r34.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r33);

        exitmonitor r4;

     label27:
        throw r3;

     label28:
        $r35 := @caughtexception;

        r5 = $r35;

     label29:
        exitmonitor r4;

     label30:
        throw r5;

        catch java.lang.Throwable from label01 to label02 with label23;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label10 to label11 with label23;
        catch java.lang.Throwable from label12 to label13 with label23;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
        catch java.lang.Throwable from label21 to label22 with label23;
        catch java.lang.Throwable from label26 to label27 with label28;
        catch java.lang.Throwable from label29 to label30 with label28;
    }
}
