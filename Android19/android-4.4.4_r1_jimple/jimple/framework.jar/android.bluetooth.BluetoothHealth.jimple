public final class android.bluetooth.BluetoothHealth extends java.lang.Object implements android.bluetooth.BluetoothProfile
{
    public static final int APP_CONFIG_REGISTRATION_FAILURE;
    public static final int APP_CONFIG_REGISTRATION_SUCCESS;
    public static final int APP_CONFIG_UNREGISTRATION_FAILURE;
    public static final int APP_CONFIG_UNREGISTRATION_SUCCESS;
    public static final int CHANNEL_TYPE_ANY;
    public static final int CHANNEL_TYPE_RELIABLE;
    public static final int CHANNEL_TYPE_STREAMING;
    private static final boolean DBG;
    public static final int HEALTH_OPERATION_ERROR;
    public static final int HEALTH_OPERATION_GENERIC_FAILURE;
    public static final int HEALTH_OPERATION_INVALID_ARGS;
    public static final int HEALTH_OPERATION_NOT_ALLOWED;
    public static final int HEALTH_OPERATION_NOT_FOUND;
    public static final int HEALTH_OPERATION_SUCCESS;
    public static final int SINK_ROLE;
    public static final int SOURCE_ROLE;
    public static final int STATE_CHANNEL_CONNECTED;
    public static final int STATE_CHANNEL_CONNECTING;
    public static final int STATE_CHANNEL_DISCONNECTED;
    public static final int STATE_CHANNEL_DISCONNECTING;
    private static final java.lang.String TAG;
    private static final boolean VDBG;
    android.bluetooth.BluetoothAdapter mAdapter;
    private final android.bluetooth.IBluetoothStateChangeCallback mBluetoothStateChangeCallback;
    private final android.content.ServiceConnection mConnection;
    private android.content.Context mContext;
    private android.bluetooth.IBluetoothHealth mService;
    private android.bluetooth.BluetoothProfile$ServiceListener mServiceListener;

    void <init>(android.content.Context, android.bluetooth.BluetoothProfile$ServiceListener)
    {
        android.bluetooth.BluetoothHealth r0;
        android.content.Context r1;
        android.bluetooth.BluetoothProfile$ServiceListener r2;
        android.bluetooth.IBluetoothManager r3;
        android.os.RemoteException r4, $r10;
        android.bluetooth.BluetoothHealth$1 $r5;
        android.bluetooth.BluetoothHealth$2 $r6;
        android.bluetooth.BluetoothAdapter $r7, $r8;
        android.bluetooth.IBluetoothStateChangeCallback $r9;

        r0 := @this: android.bluetooth.BluetoothHealth;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.bluetooth.BluetoothProfile$ServiceListener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new android.bluetooth.BluetoothHealth$1;

        specialinvoke $r5.<android.bluetooth.BluetoothHealth$1: void <init>(android.bluetooth.BluetoothHealth)>(r0);

        r0.<android.bluetooth.BluetoothHealth: android.bluetooth.IBluetoothStateChangeCallback mBluetoothStateChangeCallback> = $r5;

        $r6 = new android.bluetooth.BluetoothHealth$2;

        specialinvoke $r6.<android.bluetooth.BluetoothHealth$2: void <init>(android.bluetooth.BluetoothHealth)>(r0);

        r0.<android.bluetooth.BluetoothHealth: android.content.ServiceConnection mConnection> = $r6;

        r0.<android.bluetooth.BluetoothHealth: android.content.Context mContext> = r1;

        r0.<android.bluetooth.BluetoothHealth: android.bluetooth.BluetoothProfile$ServiceListener mServiceListener> = r2;

        $r7 = staticinvoke <android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>();

        r0.<android.bluetooth.BluetoothHealth: android.bluetooth.BluetoothAdapter mAdapter> = $r7;

        $r8 = r0.<android.bluetooth.BluetoothHealth: android.bluetooth.BluetoothAdapter mAdapter>;

        r3 = virtualinvoke $r8.<android.bluetooth.BluetoothAdapter: android.bluetooth.IBluetoothManager getBluetoothManager()>();

        if r3 == null goto label2;

     label1:
        $r9 = r0.<android.bluetooth.BluetoothHealth: android.bluetooth.IBluetoothStateChangeCallback mBluetoothStateChangeCallback>;

        interfaceinvoke r3.<android.bluetooth.IBluetoothManager: void registerStateChangeCallback(android.bluetooth.IBluetoothStateChangeCallback)>($r9);

     label2:
        virtualinvoke r0.<android.bluetooth.BluetoothHealth: boolean doBind()>();

        return;

     label3:
        $r10 := @caughtexception;

        r4 = $r10;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothHealth", "", r4);

        goto label2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    static android.content.ServiceConnection access$000(android.bluetooth.BluetoothHealth)
    {
        android.bluetooth.BluetoothHealth r0;
        android.content.ServiceConnection $r1;

        r0 := @parameter0: android.bluetooth.BluetoothHealth;

        $r1 = r0.<android.bluetooth.BluetoothHealth: android.content.ServiceConnection mConnection>;

        return $r1;
    }

    static android.bluetooth.IBluetoothHealth access$100(android.bluetooth.BluetoothHealth)
    {
        android.bluetooth.BluetoothHealth r0;
        android.bluetooth.IBluetoothHealth $r1;

        r0 := @parameter0: android.bluetooth.BluetoothHealth;

        $r1 = r0.<android.bluetooth.BluetoothHealth: android.bluetooth.IBluetoothHealth mService>;

        return $r1;
    }

    static android.bluetooth.IBluetoothHealth access$102(android.bluetooth.BluetoothHealth, android.bluetooth.IBluetoothHealth)
    {
        android.bluetooth.BluetoothHealth r0;
        android.bluetooth.IBluetoothHealth r1;

        r0 := @parameter0: android.bluetooth.BluetoothHealth;

        r1 := @parameter1: android.bluetooth.IBluetoothHealth;

        r0.<android.bluetooth.BluetoothHealth: android.bluetooth.IBluetoothHealth mService> = r1;

        return r1;
    }

    static android.content.Context access$200(android.bluetooth.BluetoothHealth)
    {
        android.bluetooth.BluetoothHealth r0;
        android.content.Context $r1;

        r0 := @parameter0: android.bluetooth.BluetoothHealth;

        $r1 = r0.<android.bluetooth.BluetoothHealth: android.content.Context mContext>;

        return $r1;
    }

    static android.bluetooth.BluetoothProfile$ServiceListener access$300(android.bluetooth.BluetoothHealth)
    {
        android.bluetooth.BluetoothHealth r0;
        android.bluetooth.BluetoothProfile$ServiceListener $r1;

        r0 := @parameter0: android.bluetooth.BluetoothHealth;

        $r1 = r0.<android.bluetooth.BluetoothHealth: android.bluetooth.BluetoothProfile$ServiceListener mServiceListener>;

        return $r1;
    }

    private boolean checkAppParam(java.lang.String, int, int, android.bluetooth.BluetoothHealthCallback)
    {
        android.bluetooth.BluetoothHealth r0;
        java.lang.String r1;
        int i0, i1;
        android.bluetooth.BluetoothHealthCallback r2;

        r0 := @this: android.bluetooth.BluetoothHealth;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.bluetooth.BluetoothHealthCallback;

        if r1 == null goto label3;

        if i0 == 1 goto label1;

        if i0 != 2 goto label3;

     label1:
        if i1 == 10 goto label2;

        if i1 == 11 goto label2;

        if i1 != 12 goto label3;

     label2:
        if r2 != null goto label4;

     label3:
        return 0;

     label4:
        if i0 != 1 goto label5;

        if i1 == 12 goto label3;

     label5:
        return 1;
    }

    private boolean isEnabled()
    {
        android.bluetooth.BluetoothHealth r0;
        android.bluetooth.BluetoothAdapter r1;
        int $i0;

        r0 := @this: android.bluetooth.BluetoothHealth;

        r1 = staticinvoke <android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>();

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<android.bluetooth.BluetoothAdapter: int getState()>();

        if $i0 != 12 goto label1;

        return 1;

     label1:
        staticinvoke <android.bluetooth.BluetoothHealth: void log(java.lang.String)>("Bluetooth is Not enabled");

        return 0;
    }

    private boolean isValidDevice(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHealth r0;
        android.bluetooth.BluetoothDevice r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: android.bluetooth.BluetoothHealth;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        if r1 != null goto label2;

     label1:
        return 0;

     label2:
        $r2 = virtualinvoke r1.<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>();

        $z0 = staticinvoke <android.bluetooth.BluetoothAdapter: boolean checkBluetoothAddress(java.lang.String)>($r2);

        if $z0 == 0 goto label1;

        return 1;
    }

    private static void log(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothHealth", r0);

        return;
    }

    void close()
    {
        android.bluetooth.BluetoothHealth r0;
        android.bluetooth.IBluetoothManager r1;
        android.content.ServiceConnection r2, $r8;
        java.lang.Throwable r3, $r12;
        android.bluetooth.IBluetoothHealth r4;
        java.lang.Exception r5, r6, $r11, $r13;
        android.bluetooth.BluetoothAdapter $r7;
        android.content.Context $r9;
        android.bluetooth.IBluetoothStateChangeCallback $r10;

        r0 := @this: android.bluetooth.BluetoothHealth;

        $r7 = r0.<android.bluetooth.BluetoothHealth: android.bluetooth.BluetoothAdapter mAdapter>;

        r1 = virtualinvoke $r7.<android.bluetooth.BluetoothAdapter: android.bluetooth.IBluetoothManager getBluetoothManager()>();

        if r1 == null goto label02;

     label01:
        $r10 = r0.<android.bluetooth.BluetoothHealth: android.bluetooth.IBluetoothStateChangeCallback mBluetoothStateChangeCallback>;

        interfaceinvoke r1.<android.bluetooth.IBluetoothManager: void unregisterStateChangeCallback(android.bluetooth.IBluetoothStateChangeCallback)>($r10);

     label02:
        r2 = r0.<android.bluetooth.BluetoothHealth: android.content.ServiceConnection mConnection>;

        entermonitor r2;

     label03:
        r4 = r0.<android.bluetooth.BluetoothHealth: android.bluetooth.IBluetoothHealth mService>;

     label04:
        if r4 == null goto label06;

     label05:
        r0.<android.bluetooth.BluetoothHealth: android.bluetooth.IBluetoothHealth mService> = null;

        $r9 = r0.<android.bluetooth.BluetoothHealth: android.content.Context mContext>;

        $r8 = r0.<android.bluetooth.BluetoothHealth: android.content.ServiceConnection mConnection>;

        virtualinvoke $r9.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r8);

     label06:
        exitmonitor r2;

     label07:
        r0.<android.bluetooth.BluetoothHealth: android.bluetooth.BluetoothProfile$ServiceListener mServiceListener> = null;

        return;

     label08:
        $r11 := @caughtexception;

        r6 = $r11;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothHealth", "", r6);

        goto label02;

     label09:
        $r13 := @caughtexception;

        r5 = $r13;

     label10:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothHealth", "", r5);

     label11:
        goto label06;

     label12:
        $r12 := @caughtexception;

        r3 = $r12;

     label13:
        exitmonitor r2;

     label14:
        throw r3;

        catch java.lang.Exception from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Exception from label05 to label06 with label09;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public boolean connectChannelToSink(android.bluetooth.BluetoothDevice, android.bluetooth.BluetoothHealthAppConfiguration, int)
    {
        android.bluetooth.BluetoothHealth r0;
        android.bluetooth.BluetoothDevice r1;
        android.bluetooth.BluetoothHealthAppConfiguration r2;
        int i0;
        android.os.RemoteException r3, $r8;
        boolean z0, $z1, $z2;
        android.bluetooth.IBluetoothHealth $r4, $r7;
        java.lang.Throwable $r5;
        java.lang.String $r6, $r9;

        r0 := @this: android.bluetooth.BluetoothHealth;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        r2 := @parameter1: android.bluetooth.BluetoothHealthAppConfiguration;

        i0 := @parameter2: int;

        $r4 = r0.<android.bluetooth.BluetoothHealth: android.bluetooth.IBluetoothHealth mService>;

        if $r4 == null goto label5;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHealth: boolean isEnabled()>();

        if $z1 == 0 goto label5;

        $z2 = specialinvoke r0.<android.bluetooth.BluetoothHealth: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r1);

        if $z2 == 0 goto label5;

        if r2 == null goto label5;

     label1:
        $r7 = r0.<android.bluetooth.BluetoothHealth: android.bluetooth.IBluetoothHealth mService>;

        z0 = interfaceinvoke $r7.<android.bluetooth.IBluetoothHealth: boolean connectChannelToSink(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration,int)>(r1, r2, i0);

     label2:
        return z0;

     label3:
        $r8 := @caughtexception;

        r3 = $r8;

        $r9 = virtualinvoke r3.<android.os.RemoteException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHealth", $r9);

     label4:
        return 0;

     label5:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHealth", "Proxy not attached to service");

        $r5 = new java.lang.Throwable;

        specialinvoke $r5.<java.lang.Throwable: void <init>()>();

        $r6 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r5);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothHealth", $r6);

        goto label4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean connectChannelToSource(android.bluetooth.BluetoothDevice, android.bluetooth.BluetoothHealthAppConfiguration)
    {
        android.bluetooth.BluetoothHealth r0;
        android.bluetooth.BluetoothDevice r1;
        android.bluetooth.BluetoothHealthAppConfiguration r2;
        android.os.RemoteException r3, $r8;
        boolean z0, $z1, $z2;
        android.bluetooth.IBluetoothHealth $r4, $r7;
        java.lang.Throwable $r5;
        java.lang.String $r6, $r9;

        r0 := @this: android.bluetooth.BluetoothHealth;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        r2 := @parameter1: android.bluetooth.BluetoothHealthAppConfiguration;

        $r4 = r0.<android.bluetooth.BluetoothHealth: android.bluetooth.IBluetoothHealth mService>;

        if $r4 == null goto label5;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHealth: boolean isEnabled()>();

        if $z1 == 0 goto label5;

        $z2 = specialinvoke r0.<android.bluetooth.BluetoothHealth: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r1);

        if $z2 == 0 goto label5;

        if r2 == null goto label5;

     label1:
        $r7 = r0.<android.bluetooth.BluetoothHealth: android.bluetooth.IBluetoothHealth mService>;

        z0 = interfaceinvoke $r7.<android.bluetooth.IBluetoothHealth: boolean connectChannelToSource(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)>(r1, r2);

     label2:
        return z0;

     label3:
        $r8 := @caughtexception;

        r3 = $r8;

        $r9 = virtualinvoke r3.<android.os.RemoteException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHealth", $r9);

     label4:
        return 0;

     label5:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHealth", "Proxy not attached to service");

        $r5 = new java.lang.Throwable;

        specialinvoke $r5.<java.lang.Throwable: void <init>()>();

        $r6 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r5);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothHealth", $r6);

        goto label4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean disconnectChannel(android.bluetooth.BluetoothDevice, android.bluetooth.BluetoothHealthAppConfiguration, int)
    {
        android.bluetooth.BluetoothHealth r0;
        android.bluetooth.BluetoothDevice r1;
        android.bluetooth.BluetoothHealthAppConfiguration r2;
        int i0;
        android.os.RemoteException r3, $r8;
        boolean z0, $z1, $z2;
        android.bluetooth.IBluetoothHealth $r4, $r7;
        java.lang.Throwable $r5;
        java.lang.String $r6, $r9;

        r0 := @this: android.bluetooth.BluetoothHealth;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        r2 := @parameter1: android.bluetooth.BluetoothHealthAppConfiguration;

        i0 := @parameter2: int;

        $r4 = r0.<android.bluetooth.BluetoothHealth: android.bluetooth.IBluetoothHealth mService>;

        if $r4 == null goto label5;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHealth: boolean isEnabled()>();

        if $z1 == 0 goto label5;

        $z2 = specialinvoke r0.<android.bluetooth.BluetoothHealth: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r1);

        if $z2 == 0 goto label5;

        if r2 == null goto label5;

     label1:
        $r7 = r0.<android.bluetooth.BluetoothHealth: android.bluetooth.IBluetoothHealth mService>;

        z0 = interfaceinvoke $r7.<android.bluetooth.IBluetoothHealth: boolean disconnectChannel(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration,int)>(r1, r2, i0);

     label2:
        return z0;

     label3:
        $r8 := @caughtexception;

        r3 = $r8;

        $r9 = virtualinvoke r3.<android.os.RemoteException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHealth", $r9);

     label4:
        return 0;

     label5:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHealth", "Proxy not attached to service");

        $r5 = new java.lang.Throwable;

        specialinvoke $r5.<java.lang.Throwable: void <init>()>();

        $r6 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r5);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothHealth", $r6);

        goto label4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    boolean doBind()
    {
        android.bluetooth.BluetoothHealth r0;
        android.content.Intent r1, $r3;
        android.content.ComponentName r2;
        java.lang.Class $r4;
        java.lang.String $r5, $r12;
        android.content.Context $r6, $r13;
        android.content.pm.PackageManager $r7;
        java.lang.StringBuilder $r9, $r10, $r11;
        android.content.ServiceConnection $r14;
        boolean $z0;

        r0 := @this: android.bluetooth.BluetoothHealth;

        $r3 = new android.content.Intent;

        $r4 = class "android/bluetooth/IBluetoothHealth";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>($r5);

        r1 = $r3;

        $r6 = r0.<android.bluetooth.BluetoothHealth: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r2 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName resolveSystemService(android.content.pm.PackageManager,int)>($r7, 0);

        virtualinvoke r1.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r2);

        if r2 == null goto label1;

        $r13 = r0.<android.bluetooth.BluetoothHealth: android.content.Context mContext>;

        $r14 = r0.<android.bluetooth.BluetoothHealth: android.content.ServiceConnection mConnection>;

        $z0 = virtualinvoke $r13.<android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>(r1, $r14, 0);

        if $z0 != 0 goto label2;

     label1:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not bind to Bluetooth Health Service with ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHealth", $r12);

        return 0;

     label2:
        return 1;
    }

    public java.util.List getConnectedDevices()
    {
        android.bluetooth.BluetoothHealth r0;
        java.util.List r2;
        android.bluetooth.IBluetoothHealth $r3, $r4, $r6;
        java.util.ArrayList $r5, $r14;
        boolean $z0;
        android.os.RemoteException $r7;
        java.lang.StringBuilder $r8, $r9, $r13;
        java.lang.String $r10, $r12;
        java.lang.Throwable $r11;

        r0 := @this: android.bluetooth.BluetoothHealth;

        $r3 = r0.<android.bluetooth.BluetoothHealth: android.bluetooth.IBluetoothHealth mService>;

        if $r3 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHealth: boolean isEnabled()>();

        if $z0 == 0 goto label4;

     label1:
        $r6 = r0.<android.bluetooth.BluetoothHealth: android.bluetooth.IBluetoothHealth mService>;

        r2 = interfaceinvoke $r6.<android.bluetooth.IBluetoothHealth: java.util.List getConnectedHealthDevices()>();

     label2:
        return r2;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stack:");

        $r11 = new java.lang.Throwable;

        specialinvoke $r11.<java.lang.Throwable: void <init>()>();

        $r10 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r11);

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHealth", $r12);

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        return $r14;

     label4:
        $r4 = r0.<android.bluetooth.BluetoothHealth: android.bluetooth.IBluetoothHealth mService>;

        if $r4 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHealth", "Proxy not attached to service");

     label5:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        return $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getConnectionState(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHealth r0;
        android.bluetooth.BluetoothDevice r1;
        android.os.RemoteException r2, $r7;
        int i0;
        android.bluetooth.IBluetoothHealth $r3, $r6;
        java.lang.Throwable $r4;
        java.lang.String $r5, $r8;
        boolean $z0, $z1;

        r0 := @this: android.bluetooth.BluetoothHealth;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        $r3 = r0.<android.bluetooth.BluetoothHealth: android.bluetooth.IBluetoothHealth mService>;

        if $r3 == null goto label5;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHealth: boolean isEnabled()>();

        if $z0 == 0 goto label5;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHealth: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r1);

        if $z1 == 0 goto label5;

     label1:
        $r6 = r0.<android.bluetooth.BluetoothHealth: android.bluetooth.IBluetoothHealth mService>;

        i0 = interfaceinvoke $r6.<android.bluetooth.IBluetoothHealth: int getHealthDeviceConnectionState(android.bluetooth.BluetoothDevice)>(r1);

     label2:
        return i0;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        $r8 = virtualinvoke r2.<android.os.RemoteException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHealth", $r8);

     label4:
        return 0;

     label5:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHealth", "Proxy not attached to service");

        $r4 = new java.lang.Throwable;

        specialinvoke $r4.<java.lang.Throwable: void <init>()>();

        $r5 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r4);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothHealth", $r5);

        goto label4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getDevicesMatchingConnectionStates(int[])
    {
        android.bluetooth.BluetoothHealth r0;
        int[] r1;
        java.util.List r3;
        android.bluetooth.IBluetoothHealth $r4, $r5, $r7;
        java.util.ArrayList $r6, $r15;
        boolean $z0;
        android.os.RemoteException $r8;
        java.lang.StringBuilder $r9, $r11, $r12;
        java.lang.Throwable $r10;
        java.lang.String $r13, $r14;

        r0 := @this: android.bluetooth.BluetoothHealth;

        r1 := @parameter0: int[];

        $r4 = r0.<android.bluetooth.BluetoothHealth: android.bluetooth.IBluetoothHealth mService>;

        if $r4 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHealth: boolean isEnabled()>();

        if $z0 == 0 goto label4;

     label1:
        $r7 = r0.<android.bluetooth.BluetoothHealth: android.bluetooth.IBluetoothHealth mService>;

        r3 = interfaceinvoke $r7.<android.bluetooth.IBluetoothHealth: java.util.List getHealthDevicesMatchingConnectionStates(int[])>(r1);

     label2:
        return r3;

     label3:
        $r8 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stack:");

        $r10 = new java.lang.Throwable;

        specialinvoke $r10.<java.lang.Throwable: void <init>()>();

        $r13 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHealth", $r14);

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        return $r15;

     label4:
        $r5 = r0.<android.bluetooth.BluetoothHealth: android.bluetooth.IBluetoothHealth mService>;

        if $r5 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHealth", "Proxy not attached to service");

     label5:
        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        return $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.os.ParcelFileDescriptor getMainChannelFd(android.bluetooth.BluetoothDevice, android.bluetooth.BluetoothHealthAppConfiguration)
    {
        android.bluetooth.BluetoothHealth r0;
        android.bluetooth.BluetoothDevice r1;
        android.bluetooth.BluetoothHealthAppConfiguration r2;
        android.os.RemoteException r3, $r9;
        android.os.ParcelFileDescriptor r4;
        android.bluetooth.IBluetoothHealth $r5, $r8;
        java.lang.Throwable $r6;
        java.lang.String $r7, $r10;
        boolean $z0, $z1;

        r0 := @this: android.bluetooth.BluetoothHealth;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        r2 := @parameter1: android.bluetooth.BluetoothHealthAppConfiguration;

        $r5 = r0.<android.bluetooth.BluetoothHealth: android.bluetooth.IBluetoothHealth mService>;

        if $r5 == null goto label5;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHealth: boolean isEnabled()>();

        if $z0 == 0 goto label5;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHealth: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r1);

        if $z1 == 0 goto label5;

        if r2 == null goto label5;

     label1:
        $r8 = r0.<android.bluetooth.BluetoothHealth: android.bluetooth.IBluetoothHealth mService>;

        r4 = interfaceinvoke $r8.<android.bluetooth.IBluetoothHealth: android.os.ParcelFileDescriptor getMainChannelFd(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)>(r1, r2);

     label2:
        return r4;

     label3:
        $r9 := @caughtexception;

        r3 = $r9;

        $r10 = virtualinvoke r3.<android.os.RemoteException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHealth", $r10);

     label4:
        return null;

     label5:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHealth", "Proxy not attached to service");

        $r6 = new java.lang.Throwable;

        specialinvoke $r6.<java.lang.Throwable: void <init>()>();

        $r7 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r6);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothHealth", $r7);

        goto label4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean registerAppConfiguration(java.lang.String, int, int, int, android.bluetooth.BluetoothHealthCallback)
    {
        android.bluetooth.BluetoothHealth r0;
        java.lang.String r1, $r10, $r13;
        int i0, i1, i2;
        android.bluetooth.BluetoothHealthCallback r2;
        android.bluetooth.BluetoothHealth$BluetoothHealthCallbackWrapper r3, $r7;
        android.bluetooth.BluetoothHealthAppConfiguration r4, $r6;
        boolean z0, z1, $z2, $z3;
        android.os.RemoteException r5, $r12;
        android.bluetooth.IBluetoothHealth $r8, $r11;
        java.lang.Throwable $r9;

        r0 := @this: android.bluetooth.BluetoothHealth;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: android.bluetooth.BluetoothHealthCallback;

        $z2 = specialinvoke r0.<android.bluetooth.BluetoothHealth: boolean isEnabled()>();

        if $z2 == 0 goto label1;

        $z3 = specialinvoke r0.<android.bluetooth.BluetoothHealth: boolean checkAppParam(java.lang.String,int,int,android.bluetooth.BluetoothHealthCallback)>(r1, i1, i2, r2);

        if $z3 != 0 goto label2;

     label1:
        return 0;

     label2:
        $r7 = new android.bluetooth.BluetoothHealth$BluetoothHealthCallbackWrapper;

        specialinvoke $r7.<android.bluetooth.BluetoothHealth$BluetoothHealthCallbackWrapper: void <init>(android.bluetooth.BluetoothHealthCallback)>(r2);

        r3 = $r7;

        $r6 = new android.bluetooth.BluetoothHealthAppConfiguration;

        specialinvoke $r6.<android.bluetooth.BluetoothHealthAppConfiguration: void <init>(java.lang.String,int,int,int)>(r1, i0, i1, i2);

        r4 = $r6;

        $r8 = r0.<android.bluetooth.BluetoothHealth: android.bluetooth.IBluetoothHealth mService>;

        if $r8 == null goto label7;

     label3:
        $r11 = r0.<android.bluetooth.BluetoothHealth: android.bluetooth.IBluetoothHealth mService>;

        z1 = interfaceinvoke $r11.<android.bluetooth.IBluetoothHealth: boolean registerAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration,android.bluetooth.IBluetoothHealthCallback)>(r4, r3);

     label4:
        z0 = z1;

     label5:
        return z0;

     label6:
        $r12 := @caughtexception;

        r5 = $r12;

        $r13 = virtualinvoke r5.<android.os.RemoteException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHealth", $r13);

        z0 = 0;

        goto label5;

     label7:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHealth", "Proxy not attached to service");

        $r9 = new java.lang.Throwable;

        specialinvoke $r9.<java.lang.Throwable: void <init>()>();

        $r10 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r9);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothHealth", $r10);

        z0 = 0;

        goto label5;

        catch android.os.RemoteException from label3 to label4 with label6;
    }

    public boolean registerSinkAppConfiguration(java.lang.String, int, android.bluetooth.BluetoothHealthCallback)
    {
        android.bluetooth.BluetoothHealth r0;
        java.lang.String r1;
        int i0;
        android.bluetooth.BluetoothHealthCallback r2;
        boolean $z0, $z1;

        r0 := @this: android.bluetooth.BluetoothHealth;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.bluetooth.BluetoothHealthCallback;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHealth: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        if r1 != null goto label2;

     label1:
        return 0;

     label2:
        $z1 = virtualinvoke r0.<android.bluetooth.BluetoothHealth: boolean registerAppConfiguration(java.lang.String,int,int,int,android.bluetooth.BluetoothHealthCallback)>(r1, i0, 2, 12, r2);

        return $z1;
    }

    public boolean unregisterAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration)
    {
        android.bluetooth.BluetoothHealth r0;
        android.bluetooth.BluetoothHealthAppConfiguration r1;
        android.os.RemoteException r2, $r7;
        boolean z0, $z1;
        android.bluetooth.IBluetoothHealth $r3, $r6;
        java.lang.Throwable $r4;
        java.lang.String $r5, $r8;

        r0 := @this: android.bluetooth.BluetoothHealth;

        r1 := @parameter0: android.bluetooth.BluetoothHealthAppConfiguration;

        $r3 = r0.<android.bluetooth.BluetoothHealth: android.bluetooth.IBluetoothHealth mService>;

        if $r3 == null goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHealth: boolean isEnabled()>();

        if $z1 == 0 goto label4;

        if r1 == null goto label4;

     label1:
        $r6 = r0.<android.bluetooth.BluetoothHealth: android.bluetooth.IBluetoothHealth mService>;

        z0 = interfaceinvoke $r6.<android.bluetooth.IBluetoothHealth: boolean unregisterAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration)>(r1);

     label2:
        return z0;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        $r8 = virtualinvoke r2.<android.os.RemoteException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHealth", $r8);

        return 0;

     label4:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHealth", "Proxy not attached to service");

        $r4 = new java.lang.Throwable;

        specialinvoke $r4.<java.lang.Throwable: void <init>()>();

        $r5 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r4);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothHealth", $r5);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.bluetooth.BluetoothHealth: java.lang.String TAG> = "BluetoothHealth";

        <android.bluetooth.BluetoothHealth: int STATE_CHANNEL_DISCONNECTING> = 3;

        <android.bluetooth.BluetoothHealth: int STATE_CHANNEL_DISCONNECTED> = 0;

        <android.bluetooth.BluetoothHealth: int STATE_CHANNEL_CONNECTING> = 1;

        <android.bluetooth.BluetoothHealth: int STATE_CHANNEL_CONNECTED> = 2;

        <android.bluetooth.BluetoothHealth: int SOURCE_ROLE> = 1;

        <android.bluetooth.BluetoothHealth: int SINK_ROLE> = 2;

        <android.bluetooth.BluetoothHealth: int HEALTH_OPERATION_SUCCESS> = 6000;

        <android.bluetooth.BluetoothHealth: int HEALTH_OPERATION_NOT_FOUND> = 6004;

        <android.bluetooth.BluetoothHealth: int HEALTH_OPERATION_NOT_ALLOWED> = 6005;

        <android.bluetooth.BluetoothHealth: int HEALTH_OPERATION_INVALID_ARGS> = 6002;

        <android.bluetooth.BluetoothHealth: int HEALTH_OPERATION_GENERIC_FAILURE> = 6003;

        <android.bluetooth.BluetoothHealth: int HEALTH_OPERATION_ERROR> = 6001;

        <android.bluetooth.BluetoothHealth: boolean DBG> = 1;

        <android.bluetooth.BluetoothHealth: int CHANNEL_TYPE_STREAMING> = 11;

        <android.bluetooth.BluetoothHealth: int CHANNEL_TYPE_RELIABLE> = 10;

        <android.bluetooth.BluetoothHealth: int CHANNEL_TYPE_ANY> = 12;

        <android.bluetooth.BluetoothHealth: int APP_CONFIG_UNREGISTRATION_SUCCESS> = 2;

        <android.bluetooth.BluetoothHealth: int APP_CONFIG_UNREGISTRATION_FAILURE> = 3;

        <android.bluetooth.BluetoothHealth: int APP_CONFIG_REGISTRATION_SUCCESS> = 0;

        <android.bluetooth.BluetoothHealth: int APP_CONFIG_REGISTRATION_FAILURE> = 1;

        return;
    }
}
