class android.provider.CalendarContract$EventsEntity$EntityIteratorImpl extends android.content.CursorEntityIterator
{
    private static final java.lang.String[] ATTENDEES_PROJECTION;
    private static final int COLUMN_ATTENDEE_EMAIL;
    private static final int COLUMN_ATTENDEE_IDENTITY;
    private static final int COLUMN_ATTENDEE_ID_NAMESPACE;
    private static final int COLUMN_ATTENDEE_NAME;
    private static final int COLUMN_ATTENDEE_RELATIONSHIP;
    private static final int COLUMN_ATTENDEE_STATUS;
    private static final int COLUMN_ATTENDEE_TYPE;
    private static final int COLUMN_ID;
    private static final int COLUMN_METHOD;
    private static final int COLUMN_MINUTES;
    private static final int COLUMN_NAME;
    private static final int COLUMN_VALUE;
    private static final java.lang.String[] EXTENDED_PROJECTION;
    private static final java.lang.String[] REMINDERS_PROJECTION;
    private static final java.lang.String WHERE_EVENT_ID;
    private final android.content.ContentProviderClient mProvider;
    private final android.content.ContentResolver mResolver;

    static void <clinit>()
    {
        java.lang.String[] $r0, $r1, $r2;

        <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: java.lang.String WHERE_EVENT_ID> = "event_id=?";

        <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: int COLUMN_VALUE> = 2;

        <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: int COLUMN_NAME> = 1;

        <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: int COLUMN_MINUTES> = 0;

        <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: int COLUMN_METHOD> = 1;

        <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: int COLUMN_ID> = 0;

        <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: int COLUMN_ATTENDEE_TYPE> = 3;

        <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: int COLUMN_ATTENDEE_STATUS> = 4;

        <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: int COLUMN_ATTENDEE_RELATIONSHIP> = 2;

        <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: int COLUMN_ATTENDEE_NAME> = 0;

        <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: int COLUMN_ATTENDEE_ID_NAMESPACE> = 6;

        <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: int COLUMN_ATTENDEE_IDENTITY> = 5;

        <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: int COLUMN_ATTENDEE_EMAIL> = 1;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "minutes";

        $r0[1] = "method";

        <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: java.lang.String[] REMINDERS_PROJECTION> = $r0;

        $r1 = newarray (java.lang.String)[7];

        $r1[0] = "attendeeName";

        $r1[1] = "attendeeEmail";

        $r1[2] = "attendeeRelationship";

        $r1[3] = "attendeeType";

        $r1[4] = "attendeeStatus";

        $r1[5] = "attendeeIdentity";

        $r1[6] = "attendeeIdNamespace";

        <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: java.lang.String[] ATTENDEES_PROJECTION> = $r1;

        $r2 = newarray (java.lang.String)[3];

        $r2[0] = "_id";

        $r2[1] = "name";

        $r2[2] = "value";

        <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: java.lang.String[] EXTENDED_PROJECTION> = $r2;

        return;
    }

    public void <init>(android.database.Cursor, android.content.ContentProviderClient)
    {
        android.provider.CalendarContract$EventsEntity$EntityIteratorImpl r0;
        android.database.Cursor r1;
        android.content.ContentProviderClient r2;

        r0 := @this: android.provider.CalendarContract$EventsEntity$EntityIteratorImpl;

        r1 := @parameter0: android.database.Cursor;

        r2 := @parameter1: android.content.ContentProviderClient;

        specialinvoke r0.<android.content.CursorEntityIterator: void <init>(android.database.Cursor)>(r1);

        r0.<android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: android.content.ContentResolver mResolver> = null;

        r0.<android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: android.content.ContentProviderClient mProvider> = r2;

        return;
    }

    public void <init>(android.database.Cursor, android.content.ContentResolver)
    {
        android.provider.CalendarContract$EventsEntity$EntityIteratorImpl r0;
        android.database.Cursor r1;
        android.content.ContentResolver r2;

        r0 := @this: android.provider.CalendarContract$EventsEntity$EntityIteratorImpl;

        r1 := @parameter0: android.database.Cursor;

        r2 := @parameter1: android.content.ContentResolver;

        specialinvoke r0.<android.content.CursorEntityIterator: void <init>(android.database.Cursor)>(r1);

        r0.<android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: android.content.ContentResolver mResolver> = r2;

        r0.<android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: android.content.ContentProviderClient mProvider> = null;

        return;
    }

    public android.content.Entity getEntityAndIncrementCursor(android.database.Cursor) throws android.os.RemoteException
    {
        android.provider.CalendarContract$EventsEntity$EntityIteratorImpl r0;
        android.database.Cursor r1, r8, r14, r23;
        long l0;
        android.content.ContentValues r2, r10, r16, r24, $r37, $r46, $r53, $r59;
        android.content.Entity r3, $r40;
        android.content.ContentProviderClient r4, r11, r19;
        android.net.Uri r5, r12, r18, r25, r32, r36, $r48, $r61, $r63;
        java.lang.String[] r6, r7, r13, r15, r20, r21, r27, r28, r29, r30, r33, r34;
        java.lang.Throwable r9, r17, r22, $r66, $r67, $r68;
        android.content.ContentResolver r26, r31, r35, $r38, $r41, $r45;
        int $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Long $r39;
        boolean $z0, $z1, $z3;
        java.lang.String $r42, $r43, $r44, $r47, $r49, $r50, $r51, $r52, $r54, $r58, $r60, $r62, $r69;
        java.lang.Integer $r55, $r56, $r57, $r64, $r65;

        r0 := @this: android.provider.CalendarContract$EventsEntity$EntityIteratorImpl;

        r1 := @parameter0: android.database.Cursor;

        $i1 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("_id");

        l0 = interfaceinvoke r1.<android.database.Cursor: long getLong(int)>($i1);

        $r37 = new android.content.ContentValues;

        specialinvoke $r37.<android.content.ContentValues: void <init>()>();

        r2 = $r37;

        $r39 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("_id", $r39);

        staticinvoke <android.database.DatabaseUtils: void cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "calendar_id");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "title");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "description");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "eventLocation");

        staticinvoke <android.database.DatabaseUtils: void cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "eventStatus");

        staticinvoke <android.database.DatabaseUtils: void cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "selfAttendeeStatus");

        staticinvoke <android.database.DatabaseUtils: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "dtstart");

        staticinvoke <android.database.DatabaseUtils: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "dtend");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "duration");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "eventTimezone");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "eventEndTimezone");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "allDay");

        staticinvoke <android.database.DatabaseUtils: void cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "accessLevel");

        staticinvoke <android.database.DatabaseUtils: void cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "availability");

        staticinvoke <android.database.DatabaseUtils: void cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "eventColor");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "eventColor_index");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "hasAlarm");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "hasExtendedProperties");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "rrule");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "rdate");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "exrule");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "exdate");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "original_sync_id");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "original_id");

        staticinvoke <android.database.DatabaseUtils: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "originalInstanceTime");

        staticinvoke <android.database.DatabaseUtils: void cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "originalAllDay");

        staticinvoke <android.database.DatabaseUtils: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "lastDate");

        staticinvoke <android.database.DatabaseUtils: void cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "hasAttendeeData");

        staticinvoke <android.database.DatabaseUtils: void cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "guestsCanInviteOthers");

        staticinvoke <android.database.DatabaseUtils: void cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "guestsCanModify");

        staticinvoke <android.database.DatabaseUtils: void cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "guestsCanSeeGuests");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "customAppPackage");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "customAppUri");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "uid2445");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "organizer");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "isOrganizer");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "_sync_id");

        staticinvoke <android.database.DatabaseUtils: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "dirty");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "mutators");

        staticinvoke <android.database.DatabaseUtils: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "lastSynced");

        staticinvoke <android.database.DatabaseUtils: void cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "deleted");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "sync_data1");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "sync_data2");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "sync_data3");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "sync_data4");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "sync_data5");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "sync_data6");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "sync_data7");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "sync_data8");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "sync_data9");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "sync_data10");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "cal_sync1");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "cal_sync2");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "cal_sync3");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "cal_sync4");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "cal_sync5");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "cal_sync6");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "cal_sync7");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "cal_sync8");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "cal_sync9");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "cal_sync10");

        $r40 = new android.content.Entity;

        specialinvoke $r40.<android.content.Entity: void <init>(android.content.ContentValues)>(r2);

        r3 = $r40;

        $r38 = r0.<android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: android.content.ContentResolver mResolver>;

        if $r38 == null goto label04;

        r35 = r0.<android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: android.content.ContentResolver mResolver>;

        r36 = <android.provider.CalendarContract$Reminders: android.net.Uri CONTENT_URI>;

        r33 = <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: java.lang.String[] REMINDERS_PROJECTION>;

        r34 = newarray (java.lang.String)[1];

        $r69 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        r34[0] = $r69;

        r8 = virtualinvoke r35.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r36, r33, "event_id=?", r34, null);

     label01:
        $z0 = interfaceinvoke r8.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label05;

        $r59 = new android.content.ContentValues;

        specialinvoke $r59.<android.content.ContentValues: void <init>()>();

        r10 = $r59;

        $i6 = interfaceinvoke r8.<android.database.Cursor: int getInt(int)>(0);

        $r65 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        virtualinvoke r10.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("minutes", $r65);

        $i5 = interfaceinvoke r8.<android.database.Cursor: int getInt(int)>(1);

        $r64 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        virtualinvoke r10.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("method", $r64);

        $r63 = <android.provider.CalendarContract$Reminders: android.net.Uri CONTENT_URI>;

        virtualinvoke r3.<android.content.Entity: void addSubValue(android.net.Uri,android.content.ContentValues)>($r63, r10);

     label02:
        goto label01;

     label03:
        $r66 := @caughtexception;

        r9 = $r66;

        interfaceinvoke r8.<android.database.Cursor: void close()>();

        throw r9;

     label04:
        r4 = r0.<android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: android.content.ContentProviderClient mProvider>;

        r5 = <android.provider.CalendarContract$Reminders: android.net.Uri CONTENT_URI>;

        r6 = <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: java.lang.String[] REMINDERS_PROJECTION>;

        r7 = newarray (java.lang.String)[1];

        $r42 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        r7[0] = $r42;

        r8 = virtualinvoke r4.<android.content.ContentProviderClient: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r5, r6, "event_id=?", r7, null);

        goto label01;

     label05:
        interfaceinvoke r8.<android.database.Cursor: void close()>();

        $r41 = r0.<android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: android.content.ContentResolver mResolver>;

        if $r41 == null goto label09;

        r31 = r0.<android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: android.content.ContentResolver mResolver>;

        r32 = <android.provider.CalendarContract$Attendees: android.net.Uri CONTENT_URI>;

        r29 = <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: java.lang.String[] ATTENDEES_PROJECTION>;

        r30 = newarray (java.lang.String)[1];

        $r58 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        r30[0] = $r58;

        r14 = virtualinvoke r31.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r32, r29, "event_id=?", r30, null);

     label06:
        $z1 = interfaceinvoke r14.<android.database.Cursor: boolean moveToNext()>();

        if $z1 == 0 goto label10;

        $r53 = new android.content.ContentValues;

        specialinvoke $r53.<android.content.ContentValues: void <init>()>();

        r16 = $r53;

        $r54 = interfaceinvoke r14.<android.database.Cursor: java.lang.String getString(int)>(0);

        virtualinvoke r16.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("attendeeName", $r54);

        $r52 = interfaceinvoke r14.<android.database.Cursor: java.lang.String getString(int)>(1);

        virtualinvoke r16.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("attendeeEmail", $r52);

        $i2 = interfaceinvoke r14.<android.database.Cursor: int getInt(int)>(2);

        $r56 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke r16.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("attendeeRelationship", $r56);

        $i4 = interfaceinvoke r14.<android.database.Cursor: int getInt(int)>(3);

        $r57 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        virtualinvoke r16.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("attendeeType", $r57);

        $i3 = interfaceinvoke r14.<android.database.Cursor: int getInt(int)>(4);

        $r55 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        virtualinvoke r16.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("attendeeStatus", $r55);

        $r60 = interfaceinvoke r14.<android.database.Cursor: java.lang.String getString(int)>(5);

        virtualinvoke r16.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("attendeeIdentity", $r60);

        $r62 = interfaceinvoke r14.<android.database.Cursor: java.lang.String getString(int)>(6);

        virtualinvoke r16.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("attendeeIdNamespace", $r62);

        $r61 = <android.provider.CalendarContract$Attendees: android.net.Uri CONTENT_URI>;

        virtualinvoke r3.<android.content.Entity: void addSubValue(android.net.Uri,android.content.ContentValues)>($r61, r16);

     label07:
        goto label06;

     label08:
        $r67 := @caughtexception;

        r17 = $r67;

        interfaceinvoke r14.<android.database.Cursor: void close()>();

        throw r17;

     label09:
        r11 = r0.<android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: android.content.ContentProviderClient mProvider>;

        r12 = <android.provider.CalendarContract$Attendees: android.net.Uri CONTENT_URI>;

        r13 = <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: java.lang.String[] ATTENDEES_PROJECTION>;

        r15 = newarray (java.lang.String)[1];

        $r43 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        r15[0] = $r43;

        r14 = virtualinvoke r11.<android.content.ContentProviderClient: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r12, r13, "event_id=?", r15, null);

        goto label06;

     label10:
        interfaceinvoke r14.<android.database.Cursor: void close()>();

        $r45 = r0.<android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: android.content.ContentResolver mResolver>;

        if $r45 == null goto label14;

        r26 = r0.<android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: android.content.ContentResolver mResolver>;

        r25 = <android.provider.CalendarContract$ExtendedProperties: android.net.Uri CONTENT_URI>;

        r28 = <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: java.lang.String[] EXTENDED_PROJECTION>;

        r27 = newarray (java.lang.String)[1];

        $r49 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        r27[0] = $r49;

        r23 = virtualinvoke r26.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r25, r28, "event_id=?", r27, null);

     label11:
        $z3 = interfaceinvoke r23.<android.database.Cursor: boolean moveToNext()>();

        if $z3 == 0 goto label15;

        $r46 = new android.content.ContentValues;

        specialinvoke $r46.<android.content.ContentValues: void <init>()>();

        r24 = $r46;

        $r50 = interfaceinvoke r23.<android.database.Cursor: java.lang.String getString(int)>(0);

        virtualinvoke r24.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("_id", $r50);

        $r51 = interfaceinvoke r23.<android.database.Cursor: java.lang.String getString(int)>(1);

        virtualinvoke r24.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("name", $r51);

        $r47 = interfaceinvoke r23.<android.database.Cursor: java.lang.String getString(int)>(2);

        virtualinvoke r24.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("value", $r47);

        $r48 = <android.provider.CalendarContract$ExtendedProperties: android.net.Uri CONTENT_URI>;

        virtualinvoke r3.<android.content.Entity: void addSubValue(android.net.Uri,android.content.ContentValues)>($r48, r24);

     label12:
        goto label11;

     label13:
        $r68 := @caughtexception;

        r22 = $r68;

        interfaceinvoke r23.<android.database.Cursor: void close()>();

        throw r22;

     label14:
        r19 = r0.<android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: android.content.ContentProviderClient mProvider>;

        r18 = <android.provider.CalendarContract$ExtendedProperties: android.net.Uri CONTENT_URI>;

        r21 = <android.provider.CalendarContract$EventsEntity$EntityIteratorImpl: java.lang.String[] EXTENDED_PROJECTION>;

        r20 = newarray (java.lang.String)[1];

        $r44 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        r20[0] = $r44;

        r23 = virtualinvoke r19.<android.content.ContentProviderClient: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r18, r21, "event_id=?", r20, null);

        goto label11;

     label15:
        interfaceinvoke r23.<android.database.Cursor: void close()>();

        interfaceinvoke r1.<android.database.Cursor: boolean moveToNext()>();

        return r3;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label11 to label12 with label13;
    }
}
