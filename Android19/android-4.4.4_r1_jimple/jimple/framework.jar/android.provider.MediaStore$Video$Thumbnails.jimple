public class android.provider.MediaStore$Video$Thumbnails extends java.lang.Object implements android.provider.BaseColumns
{
    public static final java.lang.String DATA;
    public static final java.lang.String DEFAULT_SORT_ORDER;
    public static final android.net.Uri EXTERNAL_CONTENT_URI;
    public static final int FULL_SCREEN_KIND;
    public static final java.lang.String HEIGHT;
    public static final android.net.Uri INTERNAL_CONTENT_URI;
    public static final java.lang.String KIND;
    public static final int MICRO_KIND;
    public static final int MINI_KIND;
    public static final java.lang.String VIDEO_ID;
    public static final java.lang.String WIDTH;

    static void <clinit>()
    {
        android.net.Uri $r0, $r1;

        <android.provider.MediaStore$Video$Thumbnails: java.lang.String WIDTH> = "width";

        <android.provider.MediaStore$Video$Thumbnails: java.lang.String VIDEO_ID> = "video_id";

        <android.provider.MediaStore$Video$Thumbnails: int MINI_KIND> = 1;

        <android.provider.MediaStore$Video$Thumbnails: int MICRO_KIND> = 3;

        <android.provider.MediaStore$Video$Thumbnails: java.lang.String KIND> = "kind";

        <android.provider.MediaStore$Video$Thumbnails: java.lang.String HEIGHT> = "height";

        <android.provider.MediaStore$Video$Thumbnails: int FULL_SCREEN_KIND> = 2;

        <android.provider.MediaStore$Video$Thumbnails: java.lang.String DEFAULT_SORT_ORDER> = "video_id ASC";

        <android.provider.MediaStore$Video$Thumbnails: java.lang.String DATA> = "_data";

        $r0 = staticinvoke <android.provider.MediaStore$Video$Thumbnails: android.net.Uri getContentUri(java.lang.String)>("internal");

        <android.provider.MediaStore$Video$Thumbnails: android.net.Uri INTERNAL_CONTENT_URI> = $r0;

        $r1 = staticinvoke <android.provider.MediaStore$Video$Thumbnails: android.net.Uri getContentUri(java.lang.String)>("external");

        <android.provider.MediaStore$Video$Thumbnails: android.net.Uri EXTERNAL_CONTENT_URI> = $r1;

        return;
    }

    public void <init>()
    {
        android.provider.MediaStore$Video$Thumbnails r0;

        r0 := @this: android.provider.MediaStore$Video$Thumbnails;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void cancelThumbnailRequest(android.content.ContentResolver, long)
    {
        android.content.ContentResolver r0;
        long l0;
        android.net.Uri $r1;

        r0 := @parameter0: android.content.ContentResolver;

        l0 := @parameter1: long;

        $r1 = <android.provider.MediaStore$Video$Thumbnails: android.net.Uri EXTERNAL_CONTENT_URI>;

        staticinvoke <android.provider.MediaStore$InternalThumbnails: void cancelThumbnailRequest(android.content.ContentResolver,long,android.net.Uri,long)>(r0, l0, $r1, 0L);

        return;
    }

    public static void cancelThumbnailRequest(android.content.ContentResolver, long, long)
    {
        android.content.ContentResolver r0;
        long l0, l1;
        android.net.Uri $r1;

        r0 := @parameter0: android.content.ContentResolver;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $r1 = <android.provider.MediaStore$Video$Thumbnails: android.net.Uri EXTERNAL_CONTENT_URI>;

        staticinvoke <android.provider.MediaStore$InternalThumbnails: void cancelThumbnailRequest(android.content.ContentResolver,long,android.net.Uri,long)>(r0, l0, $r1, l1);

        return;
    }

    public static android.net.Uri getContentUri(java.lang.String)
    {
        java.lang.String r0, $r5;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;
        android.net.Uri $r6;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("content://media/");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/video/thumbnails");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r5);

        return $r6;
    }

    public static android.graphics.Bitmap getThumbnail(android.content.ContentResolver, long, int, android.graphics.BitmapFactory$Options)
    {
        android.content.ContentResolver r0;
        long l0;
        int i1;
        android.graphics.BitmapFactory$Options r1;
        android.net.Uri $r2;
        android.graphics.Bitmap $r3;

        r0 := @parameter0: android.content.ContentResolver;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        r1 := @parameter3: android.graphics.BitmapFactory$Options;

        $r2 = <android.provider.MediaStore$Video$Thumbnails: android.net.Uri EXTERNAL_CONTENT_URI>;

        $r3 = staticinvoke <android.provider.MediaStore$InternalThumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,long,int,android.graphics.BitmapFactory$Options,android.net.Uri,boolean)>(r0, l0, 0L, i1, r1, $r2, 1);

        return $r3;
    }

    public static android.graphics.Bitmap getThumbnail(android.content.ContentResolver, long, long, int, android.graphics.BitmapFactory$Options)
    {
        android.content.ContentResolver r0;
        long l0, l1;
        int i2;
        android.graphics.BitmapFactory$Options r1;
        android.net.Uri $r2;
        android.graphics.Bitmap $r3;

        r0 := @parameter0: android.content.ContentResolver;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        i2 := @parameter3: int;

        r1 := @parameter4: android.graphics.BitmapFactory$Options;

        $r2 = <android.provider.MediaStore$Video$Thumbnails: android.net.Uri EXTERNAL_CONTENT_URI>;

        $r3 = staticinvoke <android.provider.MediaStore$InternalThumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,long,int,android.graphics.BitmapFactory$Options,android.net.Uri,boolean)>(r0, l0, l1, i2, r1, $r2, 1);

        return $r3;
    }
}
