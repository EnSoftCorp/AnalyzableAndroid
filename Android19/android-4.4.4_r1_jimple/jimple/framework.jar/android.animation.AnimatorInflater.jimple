public class android.animation.AnimatorInflater extends java.lang.Object
{
    private static final int SEQUENTIALLY;
    private static final int TOGETHER;
    private static final int VALUE_TYPE_COLOR;
    private static final int VALUE_TYPE_CUSTOM;
    private static final int VALUE_TYPE_FLOAT;
    private static final int VALUE_TYPE_INT;

    public void <init>()
    {
        android.animation.AnimatorInflater r0;

        r0 := @this: android.animation.AnimatorInflater;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static android.animation.Animator createAnimatorFromXml(android.content.Context, org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.Context r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.util.AttributeSet $r2;
        android.animation.Animator $r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $r2 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r1);

        $r3 = staticinvoke <android.animation.AnimatorInflater: android.animation.Animator createAnimatorFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int)>(r0, r1, $r2, null, 0);

        return $r3;
    }

    private static android.animation.Animator createAnimatorFromXml(android.content.Context, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.animation.AnimatorSet, int) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.Context r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.util.AttributeSet r2;
        android.animation.AnimatorSet r3, $r19, $r21;
        int i0, i1, i2, i3, i4, i5, $i6, $i7;
        android.animation.Animator r4, r8;
        java.util.ArrayList r5, $r22;
        android.animation.Animator[] r6;
        java.util.Iterator r7;
        java.lang.String r9, $r16, $r18;
        android.content.res.TypedArray r10;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r11;
        java.lang.RuntimeException $r12;
        java.lang.StringBuilder $r13, $r14, $r15;
        int[] $r17;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter2: android.util.AttributeSet;

        r3 := @parameter3: android.animation.AnimatorSet;

        i0 := @parameter4: int;

        r4 = null;

        r5 = null;

        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label01:
        i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i2 != 3 goto label02;

        $i7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i7 <= i1 goto label08;

     label02:
        if i2 == 1 goto label08;

        if i2 != 2 goto label01;

        r9 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z2 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("objectAnimator");

        if $z2 == 0 goto label05;

        r4 = staticinvoke <android.animation.AnimatorInflater: android.animation.ObjectAnimator loadObjectAnimator(android.content.Context,android.util.AttributeSet)>(r0, r2);

     label03:
        if r3 == null goto label01;

        if r5 != null goto label04;

        $r22 = new java.util.ArrayList;

        specialinvoke $r22.<java.util.ArrayList: void <init>()>();

        r5 = $r22;

     label04:
        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        goto label01;

     label05:
        $z1 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("animator");

        if $z1 == 0 goto label06;

        r4 = staticinvoke <android.animation.AnimatorInflater: android.animation.ValueAnimator loadAnimator(android.content.Context,android.util.AttributeSet,android.animation.ValueAnimator)>(r0, r2, null);

        goto label03;

     label06:
        $z3 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("set");

        if $z3 == 0 goto label07;

        $r19 = new android.animation.AnimatorSet;

        specialinvoke $r19.<android.animation.AnimatorSet: void <init>()>();

        r4 = $r19;

        $r17 = <com.android.internal.R$styleable: int[] AnimatorSet>;

        r10 = virtualinvoke r0.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r2, $r17);

        i5 = virtualinvoke r10.<android.content.res.TypedArray: int getInt(int,int)>(0, 0);

        $r21 = (android.animation.AnimatorSet) r4;

        staticinvoke <android.animation.AnimatorInflater: android.animation.Animator createAnimatorFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int)>(r0, r1, r2, $r21, i5);

        virtualinvoke r10.<android.content.res.TypedArray: void recycle()>();

        goto label03;

     label07:
        $r12 = new java.lang.RuntimeException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown animator name: ");

        $r16 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>($r18);

        throw $r12;

     label08:
        if r3 == null goto label11;

        if r5 == null goto label11;

        $i6 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        r6 = newarray (android.animation.Animator)[$i6];

        i3 = 0;

        r7 = virtualinvoke r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label09:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r11 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (android.animation.Animator) $r11;

        i4 = i3 + 1;

        r6[i3] = r8;

        i3 = i4;

        goto label09;

     label10:
        if i0 != 0 goto label12;

        virtualinvoke r3.<android.animation.AnimatorSet: void playTogether(android.animation.Animator[])>(r6);

     label11:
        return r4;

     label12:
        virtualinvoke r3.<android.animation.AnimatorSet: void playSequentially(android.animation.Animator[])>(r6);

        return r4;
    }

    public static android.animation.Animator loadAnimator(android.content.Context, int) throws android.content.res.Resources$NotFoundException
    {
        android.content.Context r0;
        int i0;
        android.content.res.XmlResourceParser r1;
        java.io.IOException r2, $r18;
        android.content.res.Resources$NotFoundException r3, r6, r27, r29;
        java.lang.Throwable r4, $r25, r31;
        org.xmlpull.v1.XmlPullParserException r5, $r9;
        android.animation.Animator r7;
        android.content.res.Resources $r8;
        java.lang.StringBuilder $r11, $r13, $r19, $r21, r26, r28;
        java.lang.String $r14, $r16, $r22, $r24;
        org.xmlpull.v1.XmlPullParser r30;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 = null;

     label01:
        $r8 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r8.<android.content.res.Resources: android.content.res.XmlResourceParser getAnimation(int)>(i0);

        r30 = (org.xmlpull.v1.XmlPullParser) r1;

        r7 = staticinvoke <android.animation.AnimatorInflater: android.animation.Animator createAnimatorFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser)>(r0, r30);

     label02:
        if r1 == null goto label03;

        interfaceinvoke r1.<android.content.res.XmlResourceParser: void close()>();

     label03:
        return r7;

     label04:
        $r9 := @caughtexception;

        r5 = $r9;

     label05:
        r27 = new android.content.res.Resources$NotFoundException;

        r26 = new java.lang.StringBuilder;

        specialinvoke r26.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t load animation resource ID #0x");

        $r14 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r27.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r16);

        r6 = r27;

        r31 = (java.lang.Throwable) r5;

        virtualinvoke r6.<android.content.res.Resources$NotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>(r31);

        throw r6;

     label06:
        $r25 := @caughtexception;

        r4 = $r25;

        if r1 == null goto label07;

        interfaceinvoke r1.<android.content.res.XmlResourceParser: void close()>();

     label07:
        throw r4;

     label08:
        $r18 := @caughtexception;

        r2 = $r18;

     label09:
        r29 = new android.content.res.Resources$NotFoundException;

        r28 = new java.lang.StringBuilder;

        specialinvoke r28.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t load animation resource ID #0x");

        $r22 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r29.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r24);

        r3 = r29;

        virtualinvoke r3.<android.content.res.Resources$NotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>(r2);

     label10:
        throw r3;

        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label04;
        catch java.io.IOException from label01 to label02 with label08;
        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.lang.Throwable from label05 to label06 with label06;
        catch java.lang.Throwable from label09 to label10 with label06;
    }

    private static android.animation.ValueAnimator loadAnimator(android.content.Context, android.util.AttributeSet, android.animation.ValueAnimator) throws android.content.res.Resources$NotFoundException
    {
        android.content.Context r0;
        android.util.AttributeSet r1;
        android.animation.ValueAnimator r2, $r21;
        android.content.res.TypedArray r3;
        long l0, l1;
        int i2, i3, i4, i5, i6, i7, i8, i9, i10, $i11, $i12;
        boolean z0, z1, z2, $z3, $z4;
        android.util.TypedValue r4, r5;
        int[] r6, r8, r9, $r12, $r16, $r17, $r18;
        android.view.animation.Interpolator r7;
        float f0, f1, f2, $f3, $f4, $f5;
        float[] r10, r11, r13, $r19, $r22, $r23;
        android.animation.ArgbEvaluator r14, $r20;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.util.AttributeSet;

        r2 := @parameter2: android.animation.ValueAnimator;

        $r12 = <com.android.internal.R$styleable: int[] Animator>;

        r3 = virtualinvoke r0.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r1, $r12);

        $i11 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(1, 300);

        l0 = (long) $i11;

        $i12 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(2, 0);

        l1 = (long) $i12;

        i2 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(7, 0);

        if r2 != null goto label01;

        $r21 = new android.animation.ValueAnimator;

        specialinvoke $r21.<android.animation.ValueAnimator: void <init>()>();

        r2 = $r21;

     label01:
        if i2 != 0 goto label17;

        z0 = 1;

     label02:
        r4 = virtualinvoke r3.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(5);

        if r4 == null goto label18;

        z1 = 1;

     label03:
        if z1 == 0 goto label19;

        i3 = r4.<android.util.TypedValue: int type>;

     label04:
        r5 = virtualinvoke r3.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(6);

        if r5 == null goto label20;

        z2 = 1;

     label05:
        if z2 == 0 goto label21;

        i4 = r5.<android.util.TypedValue: int type>;

     label06:
        if z1 == 0 goto label07;

        if i3 < 28 goto label07;

        if i3 <= 31 goto label08;

     label07:
        if z2 == 0 goto label09;

        if i4 < 28 goto label09;

        if i4 > 31 goto label09;

     label08:
        z0 = 0;

        $r20 = new android.animation.ArgbEvaluator;

        specialinvoke $r20.<android.animation.ArgbEvaluator: void <init>()>();

        r14 = $r20;

        virtualinvoke r2.<android.animation.ValueAnimator: void setEvaluator(android.animation.TypeEvaluator)>(r14);

     label09:
        if z0 == 0 goto label28;

        if z1 == 0 goto label25;

        if i3 != 5 goto label22;

        f1 = virtualinvoke r3.<android.content.res.TypedArray: float getDimension(int,float)>(5, 0.0F);

     label10:
        if z2 == 0 goto label24;

        if i4 != 5 goto label23;

        f2 = virtualinvoke r3.<android.content.res.TypedArray: float getDimension(int,float)>(6, 0.0F);

     label11:
        $r23 = newarray (float)[2];

        $r23[0] = f1;

        $r23[1] = f2;

        r13 = $r23;

        virtualinvoke r2.<android.animation.ValueAnimator: void setFloatValues(float[])>(r13);

     label12:
        virtualinvoke r2.<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>(l0);

        virtualinvoke r2.<android.animation.ValueAnimator: void setStartDelay(long)>(l1);

        $z3 = virtualinvoke r3.<android.content.res.TypedArray: boolean hasValue(int)>(3);

        if $z3 == 0 goto label13;

        i9 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(3, 0);

        virtualinvoke r2.<android.animation.ValueAnimator: void setRepeatCount(int)>(i9);

     label13:
        $z4 = virtualinvoke r3.<android.content.res.TypedArray: boolean hasValue(int)>(4);

        if $z4 == 0 goto label14;

        i7 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(4, 1);

        virtualinvoke r2.<android.animation.ValueAnimator: void setRepeatMode(int)>(i7);

     label14:
        goto label15;

     label15:
        i6 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>(0, 0);

        if i6 <= 0 goto label16;

        r7 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>(r0, i6);

        virtualinvoke r2.<android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>(r7);

     label16:
        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        return r2;

     label17:
        z0 = 0;

        goto label02;

     label18:
        z1 = 0;

        goto label03;

     label19:
        i3 = 0;

        goto label04;

     label20:
        z2 = 0;

        goto label05;

     label21:
        i4 = 0;

        goto label06;

     label22:
        f1 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(5, 0.0F);

        goto label10;

     label23:
        f2 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(6, 0.0F);

        goto label11;

     label24:
        $r22 = newarray (float)[1];

        $r22[0] = f1;

        r11 = $r22;

        virtualinvoke r2.<android.animation.ValueAnimator: void setFloatValues(float[])>(r11);

        goto label12;

     label25:
        if i4 != 5 goto label27;

        f0 = virtualinvoke r3.<android.content.res.TypedArray: float getDimension(int,float)>(6, 0.0F);

     label26:
        $r19 = newarray (float)[1];

        $r19[0] = f0;

        r10 = $r19;

        virtualinvoke r2.<android.animation.ValueAnimator: void setFloatValues(float[])>(r10);

        goto label12;

     label27:
        f0 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(6, 0.0F);

        goto label26;

     label28:
        if z1 == 0 goto label36;

        if i3 != 5 goto label31;

        $f4 = virtualinvoke r3.<android.content.res.TypedArray: float getDimension(int,float)>(5, 0.0F);

        i8 = (int) $f4;

     label29:
        if z2 == 0 goto label35;

        if i4 != 5 goto label33;

        $f5 = virtualinvoke r3.<android.content.res.TypedArray: float getDimension(int,float)>(6, 0.0F);

        i10 = (int) $f5;

     label30:
        $r17 = newarray (int)[2];

        $r17[0] = i8;

        $r17[1] = i10;

        r9 = $r17;

        virtualinvoke r2.<android.animation.ValueAnimator: void setIntValues(int[])>(r9);

        goto label12;

     label31:
        if i3 < 28 goto label32;

        if i3 > 31 goto label32;

        i8 = virtualinvoke r3.<android.content.res.TypedArray: int getColor(int,int)>(5, 0);

        goto label29;

     label32:
        i8 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(5, 0);

        goto label29;

     label33:
        if i4 < 28 goto label34;

        if i4 > 31 goto label34;

        i10 = virtualinvoke r3.<android.content.res.TypedArray: int getColor(int,int)>(6, 0);

        goto label30;

     label34:
        i10 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(6, 0);

        goto label30;

     label35:
        $r18 = newarray (int)[1];

        $r18[0] = i8;

        r8 = $r18;

        virtualinvoke r2.<android.animation.ValueAnimator: void setIntValues(int[])>(r8);

        goto label12;

     label36:
        if z2 == 0 goto label12;

        if i4 != 5 goto label38;

        $f3 = virtualinvoke r3.<android.content.res.TypedArray: float getDimension(int,float)>(6, 0.0F);

        i5 = (int) $f3;

     label37:
        $r16 = newarray (int)[1];

        $r16[0] = i5;

        r6 = $r16;

        virtualinvoke r2.<android.animation.ValueAnimator: void setIntValues(int[])>(r6);

        goto label12;

     label38:
        if i4 < 28 goto label39;

        if i4 > 31 goto label39;

        i5 = virtualinvoke r3.<android.content.res.TypedArray: int getColor(int,int)>(6, 0);

        goto label37;

     label39:
        i5 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(6, 0);

        goto label37;
    }

    private static android.animation.ObjectAnimator loadObjectAnimator(android.content.Context, android.util.AttributeSet) throws android.content.res.Resources$NotFoundException
    {
        android.content.Context r0;
        android.util.AttributeSet r1;
        android.animation.ObjectAnimator r2, $r4;
        android.content.res.TypedArray r3;
        int[] $r6;
        java.lang.String $r7;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.util.AttributeSet;

        $r4 = new android.animation.ObjectAnimator;

        specialinvoke $r4.<android.animation.ObjectAnimator: void <init>()>();

        r2 = $r4;

        staticinvoke <android.animation.AnimatorInflater: android.animation.ValueAnimator loadAnimator(android.content.Context,android.util.AttributeSet,android.animation.ValueAnimator)>(r0, r1, r2);

        $r6 = <com.android.internal.R$styleable: int[] PropertyAnimator>;

        r3 = virtualinvoke r0.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r1, $r6);

        $r7 = virtualinvoke r3.<android.content.res.TypedArray: java.lang.String getString(int)>(0);

        virtualinvoke r2.<android.animation.ObjectAnimator: void setPropertyName(java.lang.String)>($r7);

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        return r2;
    }

    public static void <clinit>()
    {
        <android.animation.AnimatorInflater: int VALUE_TYPE_INT> = 1;

        <android.animation.AnimatorInflater: int VALUE_TYPE_FLOAT> = 0;

        <android.animation.AnimatorInflater: int VALUE_TYPE_CUSTOM> = 5;

        <android.animation.AnimatorInflater: int VALUE_TYPE_COLOR> = 4;

        <android.animation.AnimatorInflater: int TOGETHER> = 0;

        <android.animation.AnimatorInflater: int SEQUENTIALLY> = 1;

        return;
    }
}
