public class android.ddm.DdmHandleExit extends org.apache.harmony.dalvik.ddmc.ChunkHandler
{
    public static final int CHUNK_EXIT;
    private static android.ddm.DdmHandleExit mInstance;

    static void <clinit>()
    {
        int $i0;
        android.ddm.DdmHandleExit $r0;

        $i0 = staticinvoke <android.ddm.DdmHandleExit: int type(java.lang.String)>("EXIT");

        <android.ddm.DdmHandleExit: int CHUNK_EXIT> = $i0;

        $r0 = new android.ddm.DdmHandleExit;

        specialinvoke $r0.<android.ddm.DdmHandleExit: void <init>()>();

        <android.ddm.DdmHandleExit: android.ddm.DdmHandleExit mInstance> = $r0;

        return;
    }

    private void <init>()
    {
        android.ddm.DdmHandleExit r0;

        r0 := @this: android.ddm.DdmHandleExit;

        specialinvoke r0.<org.apache.harmony.dalvik.ddmc.ChunkHandler: void <init>()>();

        return;
    }

    public static void register()
    {
        android.ddm.DdmHandleExit $r0;
        int $i0;

        $i0 = <android.ddm.DdmHandleExit: int CHUNK_EXIT>;

        $r0 = <android.ddm.DdmHandleExit: android.ddm.DdmHandleExit mInstance>;

        staticinvoke <org.apache.harmony.dalvik.ddmc.DdmServer: void registerHandler(int,org.apache.harmony.dalvik.ddmc.ChunkHandler)>($i0, $r0);

        return;
    }

    public void connected()
    {
        android.ddm.DdmHandleExit r0;

        r0 := @this: android.ddm.DdmHandleExit;

        return;
    }

    public void disconnected()
    {
        android.ddm.DdmHandleExit r0;

        r0 := @this: android.ddm.DdmHandleExit;

        return;
    }

    public org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)
    {
        android.ddm.DdmHandleExit r0;
        org.apache.harmony.dalvik.ddmc.Chunk r1;
        int i0;
        java.nio.ByteBuffer $r2;
        java.lang.Runtime $r3;

        r0 := @this: android.ddm.DdmHandleExit;

        r1 := @parameter0: org.apache.harmony.dalvik.ddmc.Chunk;

        $r2 = staticinvoke <android.ddm.DdmHandleExit: java.nio.ByteBuffer wrapChunk(org.apache.harmony.dalvik.ddmc.Chunk)>(r1);

        i0 = virtualinvoke $r2.<java.nio.ByteBuffer: int getInt()>();

        $r3 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r3.<java.lang.Runtime: void halt(int)>(i0);

        return null;
    }
}
