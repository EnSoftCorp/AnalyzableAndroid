public class android.app.Activity extends android.view.ContextThemeWrapper implements android.view.LayoutInflater$Factory2, android.view.Window$Callback, android.view.KeyEvent$Callback, android.view.View$OnCreateContextMenuListener, android.content.ComponentCallbacks2
{
    private static final boolean DEBUG_LIFECYCLE;
    public static final int DEFAULT_KEYS_DIALER;
    public static final int DEFAULT_KEYS_DISABLE;
    public static final int DEFAULT_KEYS_SEARCH_GLOBAL;
    public static final int DEFAULT_KEYS_SEARCH_LOCAL;
    public static final int DEFAULT_KEYS_SHORTCUT;
    protected static final int[] FOCUSED_STATE_SET;
    static final java.lang.String FRAGMENTS_TAG;
    public static final int RESULT_CANCELED;
    public static final int RESULT_FIRST_USER;
    public static final int RESULT_OK;
    private static final java.lang.String SAVED_DIALOGS_TAG;
    private static final java.lang.String SAVED_DIALOG_ARGS_KEY_PREFIX;
    private static final java.lang.String SAVED_DIALOG_IDS_KEY;
    private static final java.lang.String SAVED_DIALOG_KEY_PREFIX;
    private static final java.lang.String TAG;
    private static final java.lang.String WINDOW_HIERARCHY_TAG;
    com.android.internal.app.ActionBarImpl mActionBar;
    android.content.pm.ActivityInfo mActivityInfo;
    android.util.ArrayMap mAllLoaderManagers;
    private android.app.Application mApplication;
    boolean mCalled;
    private boolean mChangeCanvasToTranslucent;
    boolean mChangingConfigurations;
    boolean mCheckedForLoaderManager;
    private android.content.ComponentName mComponent;
    int mConfigChangeFlags;
    final android.app.FragmentContainer mContainer;
    android.content.res.Configuration mCurrentConfig;
    android.view.View mDecor;
    private int mDefaultKeyMode;
    private android.text.SpannableStringBuilder mDefaultKeySsb;
    private boolean mDestroyed;
    private boolean mDoReportFullyDrawn;
    java.lang.String mEmbeddedID;
    private boolean mEnableDefaultActionBarUp;
    boolean mFinished;
    final android.app.FragmentManagerImpl mFragments;
    final android.os.Handler mHandler;
    private int mIdent;
    private final java.lang.Object mInstanceTracker;
    private android.app.Instrumentation mInstrumentation;
    android.content.Intent mIntent;
    android.app.Activity$NonConfigurationInstances mLastNonConfigurationInstances;
    android.app.LoaderManagerImpl mLoaderManager;
    boolean mLoadersStarted;
    android.app.ActivityThread mMainThread;
    private final java.util.ArrayList mManagedCursors;
    private android.util.SparseArray mManagedDialogs;
    private android.view.MenuInflater mMenuInflater;
    android.app.Activity mParent;
    int mResultCode;
    android.content.Intent mResultData;
    boolean mResumed;
    private android.app.SearchManager mSearchManager;
    boolean mStartedActivity;
    private boolean mStopped;
    boolean mTemporaryPause;
    private java.lang.CharSequence mTitle;
    private int mTitleColor;
    private boolean mTitleReady;
    private android.os.IBinder mToken;
    private android.app.Activity$TranslucentConversionListener mTranslucentCallback;
    private java.lang.Thread mUiThread;
    boolean mVisibleFromClient;
    boolean mVisibleFromServer;
    private android.view.Window mWindow;
    boolean mWindowAdded;
    private android.view.WindowManager mWindowManager;

    static void <clinit>()
    {
        int[] $r0;

        <android.app.Activity: java.lang.String WINDOW_HIERARCHY_TAG> = "android:viewHierarchyState";

        <android.app.Activity: java.lang.String TAG> = "Activity";

        <android.app.Activity: java.lang.String SAVED_DIALOG_KEY_PREFIX> = "android:dialog_";

        <android.app.Activity: java.lang.String SAVED_DIALOG_IDS_KEY> = "android:savedDialogIds";

        <android.app.Activity: java.lang.String SAVED_DIALOG_ARGS_KEY_PREFIX> = "android:dialog_args_";

        <android.app.Activity: java.lang.String SAVED_DIALOGS_TAG> = "android:savedDialogs";

        <android.app.Activity: int RESULT_OK> = -1;

        <android.app.Activity: int RESULT_FIRST_USER> = 1;

        <android.app.Activity: int RESULT_CANCELED> = 0;

        <android.app.Activity: java.lang.String FRAGMENTS_TAG> = "android:fragments";

        <android.app.Activity: int DEFAULT_KEYS_SHORTCUT> = 2;

        <android.app.Activity: int DEFAULT_KEYS_SEARCH_LOCAL> = 3;

        <android.app.Activity: int DEFAULT_KEYS_SEARCH_GLOBAL> = 4;

        <android.app.Activity: int DEFAULT_KEYS_DISABLE> = 0;

        <android.app.Activity: int DEFAULT_KEYS_DIALER> = 1;

        <android.app.Activity: boolean DEBUG_LIFECYCLE> = 0;

        $r0 = newarray (int)[1];

        $r0[0] = 16842908;

        <android.app.Activity: int[] FOCUSED_STATE_SET> = $r0;

        return;
    }

    public void <init>()
    {
        android.app.Activity r0;
        android.app.FragmentManagerImpl $r1;
        android.app.Activity$1 $r2;
        java.util.ArrayList $r3;
        java.lang.Object $r4;
        android.os.Handler $r5;

        r0 := @this: android.app.Activity;

        specialinvoke r0.<android.view.ContextThemeWrapper: void <init>()>();

        r0.<android.app.Activity: boolean mDoReportFullyDrawn> = 1;

        r0.<android.app.Activity: boolean mTemporaryPause> = 0;

        r0.<android.app.Activity: boolean mChangingConfigurations> = 0;

        r0.<android.app.Activity: android.view.View mDecor> = null;

        r0.<android.app.Activity: boolean mWindowAdded> = 0;

        r0.<android.app.Activity: boolean mVisibleFromServer> = 0;

        r0.<android.app.Activity: boolean mVisibleFromClient> = 1;

        r0.<android.app.Activity: com.android.internal.app.ActionBarImpl mActionBar> = null;

        r0.<android.app.Activity: int mTitleColor> = 0;

        $r1 = new android.app.FragmentManagerImpl;

        specialinvoke $r1.<android.app.FragmentManagerImpl: void <init>()>();

        r0.<android.app.Activity: android.app.FragmentManagerImpl mFragments> = $r1;

        $r2 = new android.app.Activity$1;

        specialinvoke $r2.<android.app.Activity$1: void <init>(android.app.Activity)>(r0);

        r0.<android.app.Activity: android.app.FragmentContainer mContainer> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.app.Activity: java.util.ArrayList mManagedCursors> = $r3;

        r0.<android.app.Activity: int mResultCode> = 0;

        r0.<android.app.Activity: android.content.Intent mResultData> = null;

        r0.<android.app.Activity: boolean mTitleReady> = 0;

        r0.<android.app.Activity: int mDefaultKeyMode> = 0;

        r0.<android.app.Activity: android.text.SpannableStringBuilder mDefaultKeySsb> = null;

        $r4 = staticinvoke <android.os.StrictMode: java.lang.Object trackActivity(java.lang.Object)>(r0);

        r0.<android.app.Activity: java.lang.Object mInstanceTracker> = $r4;

        $r5 = new android.os.Handler;

        specialinvoke $r5.<android.os.Handler: void <init>()>();

        r0.<android.app.Activity: android.os.Handler mHandler> = $r5;

        return;
    }

    private android.app.Dialog createDialog(java.lang.Integer, android.os.Bundle, android.os.Bundle)
    {
        android.app.Activity r0;
        java.lang.Integer r1;
        android.os.Bundle r2, r3;
        android.app.Dialog r4;
        int $i0;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: java.lang.Integer;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: android.os.Bundle;

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        r4 = virtualinvoke r0.<android.app.Activity: android.app.Dialog onCreateDialog(int,android.os.Bundle)>($i0, r3);

        if r4 != null goto label1;

        return null;

     label1:
        virtualinvoke r4.<android.app.Dialog: void dispatchOnCreate(android.os.Bundle)>(r2);

        return r4;
    }

    private void ensureSearchManager()
    {
        android.app.Activity r0;
        android.app.SearchManager $r1, $r2;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.app.SearchManager mSearchManager>;

        if $r1 == null goto label1;

        return;

     label1:
        $r2 = new android.app.SearchManager;

        specialinvoke $r2.<android.app.SearchManager: void <init>(android.content.Context,android.os.Handler)>(r0, null);

        r0.<android.app.Activity: android.app.SearchManager mSearchManager> = $r2;

        return;
    }

    private void initActionBar()
    {
        android.app.Activity r0;
        android.view.Window r1, $r7, $r9;
        boolean $z0, $z1, $z2;
        com.android.internal.app.ActionBarImpl $r3, $r4, $r5;
        android.content.pm.ActivityInfo $r6, $r8;
        int $i0, $i1;

        r0 := @this: android.app.Activity;

        r1 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        virtualinvoke r1.<android.view.Window: android.view.View getDecorView()>();

        $z0 = virtualinvoke r0.<android.app.Activity: boolean isChild()>();

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r1.<android.view.Window: boolean hasFeature(int)>(8);

        if $z1 == 0 goto label1;

        $r3 = r0.<android.app.Activity: com.android.internal.app.ActionBarImpl mActionBar>;

        if $r3 == null goto label2;

     label1:
        return;

     label2:
        $r4 = new com.android.internal.app.ActionBarImpl;

        specialinvoke $r4.<com.android.internal.app.ActionBarImpl: void <init>(android.app.Activity)>(r0);

        r0.<android.app.Activity: com.android.internal.app.ActionBarImpl mActionBar> = $r4;

        $r5 = r0.<android.app.Activity: com.android.internal.app.ActionBarImpl mActionBar>;

        $z2 = r0.<android.app.Activity: boolean mEnableDefaultActionBarUp>;

        virtualinvoke $r5.<com.android.internal.app.ActionBarImpl: void setDefaultDisplayHomeAsUpEnabled(boolean)>($z2);

        $r7 = r0.<android.app.Activity: android.view.Window mWindow>;

        $r6 = r0.<android.app.Activity: android.content.pm.ActivityInfo mActivityInfo>;

        $i0 = virtualinvoke $r6.<android.content.pm.ActivityInfo: int getIconResource()>();

        virtualinvoke $r7.<android.view.Window: void setDefaultIcon(int)>($i0);

        $r9 = r0.<android.app.Activity: android.view.Window mWindow>;

        $r8 = r0.<android.app.Activity: android.content.pm.ActivityInfo mActivityInfo>;

        $i1 = virtualinvoke $r8.<android.content.pm.ActivityInfo: int getLogoResource()>();

        virtualinvoke $r9.<android.view.Window: void setDefaultLogo(int)>($i1);

        return;
    }

    private java.lang.IllegalArgumentException missingDialog(int)
    {
        android.app.Activity r0;
        int i0;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no dialog with id ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was ever ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("shown via Activity#showDialog");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        return $r1;
    }

    private void restoreManagedDialogs(android.os.Bundle)
    {
        android.app.Activity r0;
        android.os.Bundle r1, r2, r5, $r11, $r12, $r16;
        int[] r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Integer r4;
        android.app.Activity$ManagedDialog r6, $r9;
        android.util.SparseArray $r7, $r15;
        java.lang.String $r8, $r10;
        android.app.Dialog $r13, $r14, $r17, $r18;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.os.Bundle;

        r2 = virtualinvoke r1.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>("android:savedDialogs");

        if r2 != null goto label2;

     label1:
        return;

     label2:
        r3 = virtualinvoke r2.<android.os.Bundle: int[] getIntArray(java.lang.String)>("android:savedDialogIds");

        i0 = lengthof r3;

        $r7 = new android.util.SparseArray;

        specialinvoke $r7.<android.util.SparseArray: void <init>(int)>(i0);

        r0.<android.app.Activity: android.util.SparseArray mManagedDialogs> = $r7;

        i1 = 0;

     label3:
        if i1 >= i0 goto label1;

        $i2 = r3[i1];

        r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $i3 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        $r8 = staticinvoke <android.app.Activity: java.lang.String savedDialogKeyFor(int)>($i3);

        r5 = virtualinvoke r2.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>($r8);

        if r5 == null goto label4;

        $r9 = new android.app.Activity$ManagedDialog;

        specialinvoke $r9.<android.app.Activity$ManagedDialog: void <init>(android.app.Activity$1)>(null);

        r6 = $r9;

        $i4 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        $r10 = staticinvoke <android.app.Activity: java.lang.String savedDialogArgsKeyFor(int)>($i4);

        $r12 = virtualinvoke r2.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>($r10);

        r6.<android.app.Activity$ManagedDialog: android.os.Bundle mArgs> = $r12;

        $r11 = r6.<android.app.Activity$ManagedDialog: android.os.Bundle mArgs>;

        $r14 = specialinvoke r0.<android.app.Activity: android.app.Dialog createDialog(java.lang.Integer,android.os.Bundle,android.os.Bundle)>(r4, r5, $r11);

        r6.<android.app.Activity$ManagedDialog: android.app.Dialog mDialog> = $r14;

        $r13 = r6.<android.app.Activity$ManagedDialog: android.app.Dialog mDialog>;

        if $r13 == null goto label4;

        $r15 = r0.<android.app.Activity: android.util.SparseArray mManagedDialogs>;

        $i5 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        virtualinvoke $r15.<android.util.SparseArray: void put(int,java.lang.Object)>($i5, r6);

        $i6 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        $r18 = r6.<android.app.Activity$ManagedDialog: android.app.Dialog mDialog>;

        $r16 = r6.<android.app.Activity$ManagedDialog: android.os.Bundle mArgs>;

        virtualinvoke r0.<android.app.Activity: void onPrepareDialog(int,android.app.Dialog,android.os.Bundle)>($i6, $r18, $r16);

        $r17 = r6.<android.app.Activity$ManagedDialog: android.app.Dialog mDialog>;

        virtualinvoke $r17.<android.app.Dialog: void onRestoreInstanceState(android.os.Bundle)>(r5);

     label4:
        i1 = i1 + 1;

        goto label3;
    }

    private void saveManagedDialogs(android.os.Bundle)
    {
        android.app.Activity r0;
        android.os.Bundle r1, r2, $r7, $r14, $r15, $r16;
        int i0, i1, i2, $i3;
        int[] r3;
        android.app.Activity$ManagedDialog r4;
        android.util.SparseArray $r5, $r6, $r8, $r9, $r11;
        java.lang.Object $r10;
        android.app.Dialog $r12;
        java.lang.String $r13, $r17;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.os.Bundle;

        $r5 = r0.<android.app.Activity: android.util.SparseArray mManagedDialogs>;

        if $r5 != null goto label2;

     label1:
        return;

     label2:
        $r6 = r0.<android.app.Activity: android.util.SparseArray mManagedDialogs>;

        i0 = virtualinvoke $r6.<android.util.SparseArray: int size()>();

        if i0 == 0 goto label1;

        $r7 = new android.os.Bundle;

        specialinvoke $r7.<android.os.Bundle: void <init>()>();

        r2 = $r7;

        $r8 = r0.<android.app.Activity: android.util.SparseArray mManagedDialogs>;

        $i3 = virtualinvoke $r8.<android.util.SparseArray: int size()>();

        r3 = newarray (int)[$i3];

        i1 = 0;

     label3:
        if i1 >= i0 goto label5;

        $r9 = r0.<android.app.Activity: android.util.SparseArray mManagedDialogs>;

        i2 = virtualinvoke $r9.<android.util.SparseArray: int keyAt(int)>(i1);

        r3[i1] = i2;

        $r11 = r0.<android.app.Activity: android.util.SparseArray mManagedDialogs>;

        $r10 = virtualinvoke $r11.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r4 = (android.app.Activity$ManagedDialog) $r10;

        $r13 = staticinvoke <android.app.Activity: java.lang.String savedDialogKeyFor(int)>(i2);

        $r12 = r4.<android.app.Activity$ManagedDialog: android.app.Dialog mDialog>;

        $r15 = virtualinvoke $r12.<android.app.Dialog: android.os.Bundle onSaveInstanceState()>();

        virtualinvoke r2.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>($r13, $r15);

        $r14 = r4.<android.app.Activity$ManagedDialog: android.os.Bundle mArgs>;

        if $r14 == null goto label4;

        $r17 = staticinvoke <android.app.Activity: java.lang.String savedDialogArgsKeyFor(int)>(i2);

        $r16 = r4.<android.app.Activity$ManagedDialog: android.os.Bundle mArgs>;

        virtualinvoke r2.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>($r17, $r16);

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        virtualinvoke r2.<android.os.Bundle: void putIntArray(java.lang.String,int[])>("android:savedDialogIds", r3);

        virtualinvoke r1.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>("android:savedDialogs", r2);

        return;
    }

    private static java.lang.String savedDialogArgsKeyFor(int)
    {
        int i0;
        java.lang.StringBuilder $r0, $r1, $r2;
        java.lang.String $r3;

        i0 := @parameter0: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android:dialog_args_");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    private static java.lang.String savedDialogKeyFor(int)
    {
        int i0;
        java.lang.StringBuilder $r0, $r1, $r2;
        java.lang.String $r3;

        i0 := @parameter0: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android:dialog_");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    private void startIntentSenderForResultInner(android.content.IntentSender, int, android.content.Intent, int, int, android.app.Activity, android.os.Bundle) throws android.content.IntentSender$SendIntentException
    {
        android.app.Activity r0, r3;
        android.content.IntentSender r1;
        int i0, i1, i2, i3;
        android.content.Intent r2;
        android.os.Bundle r4;
        java.lang.String r5, $r10;
        android.app.IActivityManager $r7;
        android.app.ActivityThread $r8;
        android.app.ActivityThread$ApplicationThread $r9;
        android.os.IBinder $r11;
        android.content.IntentSender$SendIntentException $r12;
        android.content.ContentResolver $r13;
        android.os.RemoteException $r14;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.IntentSender;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.Intent;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r3 := @parameter5: android.app.Activity;

        r4 := @parameter6: android.os.Bundle;

        r5 = null;

        if r2 == null goto label2;

     label1:
        virtualinvoke r2.<android.content.Intent: boolean migrateExtraStreamToClipData()>();

        virtualinvoke r2.<android.content.Intent: void prepareToLeaveProcess()>();

        $r13 = virtualinvoke r0.<android.app.Activity: android.content.ContentResolver getContentResolver()>();

        r5 = virtualinvoke r2.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>($r13);

     label2:
        $r7 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r8 = r0.<android.app.Activity: android.app.ActivityThread mMainThread>;

        $r9 = virtualinvoke $r8.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread getApplicationThread()>();

        $r11 = r0.<android.app.Activity: android.os.IBinder mToken>;

        $r10 = r3.<android.app.Activity: java.lang.String mEmbeddedID>;

        i3 = interfaceinvoke $r7.<android.app.IActivityManager: int startActivityIntentSender(android.app.IApplicationThread,android.content.IntentSender,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle)>($r9, r1, r2, r5, $r11, $r10, i0, i1, i2, r4);

     label3:
        if i3 != -6 goto label8;

     label4:
        $r12 = new android.content.IntentSender$SendIntentException;

        specialinvoke $r12.<android.content.IntentSender$SendIntentException: void <init>()>();

        throw $r12;

     label5:
        $r14 := @caughtexception;

     label6:
        if i0 < 0 goto label7;

        r0.<android.app.Activity: boolean mStartedActivity> = 1;

     label7:
        return;

     label8:
        staticinvoke <android.app.Instrumentation: void checkStartActivityResult(int,java.lang.Object)>(i3, null);

     label9:
        goto label6;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label2 to label3 with label5;
        catch android.os.RemoteException from label4 to label5 with label5;
        catch android.os.RemoteException from label8 to label9 with label5;
    }

    public void addContentView(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        android.app.Activity r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams r2;
        android.view.Window $r3;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        $r3 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        virtualinvoke $r3.<android.view.Window: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)>(r1, r2);

        specialinvoke r0.<android.app.Activity: void initActionBar()>();

        return;
    }

    final void attach(android.content.Context, android.app.ActivityThread, android.app.Instrumentation, android.os.IBinder, int, android.app.Application, android.content.Intent, android.content.pm.ActivityInfo, java.lang.CharSequence, android.app.Activity, java.lang.String, android.app.Activity$NonConfigurationInstances, android.content.res.Configuration)
    {
        android.app.Activity r0, r9, $r27, $r32;
        android.content.Context r1;
        android.app.ActivityThread r2;
        android.app.Instrumentation r3;
        android.os.IBinder r4, r16;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.app.Application r5;
        android.content.Intent r6;
        android.content.pm.ActivityInfo r7;
        java.lang.CharSequence r8;
        java.lang.String r10, r15;
        android.app.Activity$NonConfigurationInstances r11;
        android.content.res.Configuration r12;
        android.view.Window r13, $r18, $r20, $r21, $r28, $r29, $r30, $r33, $r34;
        android.view.WindowManager r14, $r31;
        android.app.FragmentContainer $r17;
        boolean z0;
        android.app.FragmentManagerImpl $r19;
        android.view.LayoutInflater $r22;
        java.lang.Thread $r23;
        java.lang.Object $r24;
        android.content.ComponentName $r25, $r26;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.app.ActivityThread;

        r3 := @parameter2: android.app.Instrumentation;

        r4 := @parameter3: android.os.IBinder;

        i0 := @parameter4: int;

        r5 := @parameter5: android.app.Application;

        r6 := @parameter6: android.content.Intent;

        r7 := @parameter7: android.content.pm.ActivityInfo;

        r8 := @parameter8: java.lang.CharSequence;

        r9 := @parameter9: android.app.Activity;

        r10 := @parameter10: java.lang.String;

        r11 := @parameter11: android.app.Activity$NonConfigurationInstances;

        r12 := @parameter12: android.content.res.Configuration;

        virtualinvoke r0.<android.app.Activity: void attachBaseContext(android.content.Context)>(r1);

        $r19 = r0.<android.app.Activity: android.app.FragmentManagerImpl mFragments>;

        $r17 = r0.<android.app.Activity: android.app.FragmentContainer mContainer>;

        virtualinvoke $r19.<android.app.FragmentManagerImpl: void attachActivity(android.app.Activity,android.app.FragmentContainer,android.app.Fragment)>(r0, $r17, null);

        $r18 = staticinvoke <com.android.internal.policy.PolicyManager: android.view.Window makeNewWindow(android.content.Context)>(r0);

        r0.<android.app.Activity: android.view.Window mWindow> = $r18;

        $r21 = r0.<android.app.Activity: android.view.Window mWindow>;

        virtualinvoke $r21.<android.view.Window: void setCallback(android.view.Window$Callback)>(r0);

        $r20 = r0.<android.app.Activity: android.view.Window mWindow>;

        $r22 = virtualinvoke $r20.<android.view.Window: android.view.LayoutInflater getLayoutInflater()>();

        virtualinvoke $r22.<android.view.LayoutInflater: void setPrivateFactory(android.view.LayoutInflater$Factory2)>(r0);

        $i1 = r7.<android.content.pm.ActivityInfo: int softInputMode>;

        if $i1 == 0 goto label1;

        $r33 = r0.<android.app.Activity: android.view.Window mWindow>;

        $i5 = r7.<android.content.pm.ActivityInfo: int softInputMode>;

        virtualinvoke $r33.<android.view.Window: void setSoftInputMode(int)>($i5);

     label1:
        $i2 = r7.<android.content.pm.ActivityInfo: int uiOptions>;

        if $i2 == 0 goto label2;

        $r34 = r0.<android.app.Activity: android.view.Window mWindow>;

        $i6 = r7.<android.content.pm.ActivityInfo: int uiOptions>;

        virtualinvoke $r34.<android.view.Window: void setUiOptions(int)>($i6);

     label2:
        $r23 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r0.<android.app.Activity: java.lang.Thread mUiThread> = $r23;

        r0.<android.app.Activity: android.app.ActivityThread mMainThread> = r2;

        r0.<android.app.Activity: android.app.Instrumentation mInstrumentation> = r3;

        r0.<android.app.Activity: android.os.IBinder mToken> = r4;

        r0.<android.app.Activity: int mIdent> = i0;

        r0.<android.app.Activity: android.app.Application mApplication> = r5;

        r0.<android.app.Activity: android.content.Intent mIntent> = r6;

        $r25 = virtualinvoke r6.<android.content.Intent: android.content.ComponentName getComponent()>();

        r0.<android.app.Activity: android.content.ComponentName mComponent> = $r25;

        r0.<android.app.Activity: android.content.pm.ActivityInfo mActivityInfo> = r7;

        r0.<android.app.Activity: java.lang.CharSequence mTitle> = r8;

        r0.<android.app.Activity: android.app.Activity mParent> = r9;

        r0.<android.app.Activity: java.lang.String mEmbeddedID> = r10;

        r0.<android.app.Activity: android.app.Activity$NonConfigurationInstances mLastNonConfigurationInstances> = r11;

        r13 = r0.<android.app.Activity: android.view.Window mWindow>;

        $r24 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        r14 = (android.view.WindowManager) $r24;

        r16 = r0.<android.app.Activity: android.os.IBinder mToken>;

        $r26 = r0.<android.app.Activity: android.content.ComponentName mComponent>;

        r15 = virtualinvoke $r26.<android.content.ComponentName: java.lang.String flattenToString()>();

        $i3 = r7.<android.content.pm.ActivityInfo: int flags>;

        $i4 = 512 & $i3;

        if $i4 == 0 goto label5;

        z0 = 1;

     label3:
        virtualinvoke r13.<android.view.Window: void setWindowManager(android.view.WindowManager,android.os.IBinder,java.lang.String,boolean)>(r14, r16, r15, z0);

        $r27 = r0.<android.app.Activity: android.app.Activity mParent>;

        if $r27 == null goto label4;

        $r29 = r0.<android.app.Activity: android.view.Window mWindow>;

        $r32 = r0.<android.app.Activity: android.app.Activity mParent>;

        $r30 = virtualinvoke $r32.<android.app.Activity: android.view.Window getWindow()>();

        virtualinvoke $r29.<android.view.Window: void setContainer(android.view.Window)>($r30);

     label4:
        $r28 = r0.<android.app.Activity: android.view.Window mWindow>;

        $r31 = virtualinvoke $r28.<android.view.Window: android.view.WindowManager getWindowManager()>();

        r0.<android.app.Activity: android.view.WindowManager mWindowManager> = $r31;

        r0.<android.app.Activity: android.content.res.Configuration mCurrentConfig> = r12;

        return;

     label5:
        z0 = 0;

        goto label3;
    }

    final void attach(android.content.Context, android.app.ActivityThread, android.app.Instrumentation, android.os.IBinder, android.app.Application, android.content.Intent, android.content.pm.ActivityInfo, java.lang.CharSequence, android.app.Activity, java.lang.String, android.app.Activity$NonConfigurationInstances, android.content.res.Configuration)
    {
        android.app.Activity r0, r9;
        android.content.Context r1;
        android.app.ActivityThread r2;
        android.app.Instrumentation r3;
        android.os.IBinder r4;
        android.app.Application r5;
        android.content.Intent r6;
        android.content.pm.ActivityInfo r7;
        java.lang.CharSequence r8;
        java.lang.String r10;
        android.app.Activity$NonConfigurationInstances r11;
        android.content.res.Configuration r12;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.app.ActivityThread;

        r3 := @parameter2: android.app.Instrumentation;

        r4 := @parameter3: android.os.IBinder;

        r5 := @parameter4: android.app.Application;

        r6 := @parameter5: android.content.Intent;

        r7 := @parameter6: android.content.pm.ActivityInfo;

        r8 := @parameter7: java.lang.CharSequence;

        r9 := @parameter8: android.app.Activity;

        r10 := @parameter9: java.lang.String;

        r11 := @parameter10: android.app.Activity$NonConfigurationInstances;

        r12 := @parameter11: android.content.res.Configuration;

        virtualinvoke r0.<android.app.Activity: void attach(android.content.Context,android.app.ActivityThread,android.app.Instrumentation,android.os.IBinder,int,android.app.Application,android.content.Intent,android.content.pm.ActivityInfo,java.lang.CharSequence,android.app.Activity,java.lang.String,android.app.Activity$NonConfigurationInstances,android.content.res.Configuration)>(r1, r2, r3, r4, 0, r5, r6, r7, r8, r9, r10, r11, r12);

        return;
    }

    public void closeContextMenu()
    {
        android.app.Activity r0;
        android.view.Window $r1;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.view.Window mWindow>;

        virtualinvoke $r1.<android.view.Window: void closePanel(int)>(6);

        return;
    }

    public void closeOptionsMenu()
    {
        android.app.Activity r0;
        android.view.Window $r1;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.view.Window mWindow>;

        virtualinvoke $r1.<android.view.Window: void closePanel(int)>(0);

        return;
    }

    public void convertFromTranslucent()
    {
        android.app.Activity r0;
        android.app.IActivityManager $r2;
        android.os.IBinder $r3, $r5;
        boolean $z0;
        android.view.WindowManagerGlobal $r4;
        android.os.RemoteException $r6;

        r0 := @this: android.app.Activity;

     label1:
        r0.<android.app.Activity: android.app.Activity$TranslucentConversionListener mTranslucentCallback> = null;

        $r2 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r3 = r0.<android.app.Activity: android.os.IBinder mToken>;

        $z0 = interfaceinvoke $r2.<android.app.IActivityManager: boolean convertFromTranslucent(android.os.IBinder)>($r3);

        if $z0 == 0 goto label2;

        $r4 = staticinvoke <android.view.WindowManagerGlobal: android.view.WindowManagerGlobal getInstance()>();

        $r5 = r0.<android.app.Activity: android.os.IBinder mToken>;

        virtualinvoke $r4.<android.view.WindowManagerGlobal: void changeCanvasOpacity(android.os.IBinder,boolean)>($r5, 1);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void convertToTranslucent(android.app.Activity$TranslucentConversionListener)
    {
        android.app.Activity r0;
        android.app.Activity$TranslucentConversionListener r1;
        android.app.IActivityManager $r3;
        android.os.IBinder $r4;
        boolean $z0;
        android.os.RemoteException $r5;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.app.Activity$TranslucentConversionListener;

     label1:
        r0.<android.app.Activity: android.app.Activity$TranslucentConversionListener mTranslucentCallback> = r1;

        $r3 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r4 = r0.<android.app.Activity: android.os.IBinder mToken>;

        $z0 = interfaceinvoke $r3.<android.app.IActivityManager: boolean convertToTranslucent(android.os.IBinder)>($r4);

        r0.<android.app.Activity: boolean mChangeCanvasToTranslucent> = $z0;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.app.PendingIntent createPendingResult(int, android.content.Intent, int)
    {
        android.app.Activity r0, $r7, $r8;
        int i0, i1, $i2;
        android.content.Intent r1;
        java.lang.String r2, $r10;
        android.app.IActivityManager r4;
        android.os.IBinder r5;
        android.content.IIntentSender r6;
        android.content.Intent[] $r9;
        android.os.RemoteException $r11;
        android.app.PendingIntent $r12;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        i1 := @parameter2: int;

        r2 = virtualinvoke r0.<android.app.Activity: java.lang.String getPackageName()>();

     label1:
        virtualinvoke r1.<android.content.Intent: void prepareToLeaveProcess()>();

        r4 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r7 = r0.<android.app.Activity: android.app.Activity mParent>;

        if $r7 != null goto label5;

        r5 = r0.<android.app.Activity: android.os.IBinder mToken>;

     label2:
        $r10 = r0.<android.app.Activity: java.lang.String mEmbeddedID>;

        $r9 = newarray (android.content.Intent)[1];

        $r9[0] = r1;

        $i2 = staticinvoke <android.os.UserHandle: int myUserId()>();

        r6 = interfaceinvoke r4.<android.app.IActivityManager: android.content.IIntentSender getIntentSender(int,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int)>(3, r2, r5, $r10, i0, $r9, null, i1, null, $i2);

     label3:
        if r6 == null goto label7;

     label4:
        $r12 = new android.app.PendingIntent;

        specialinvoke $r12.<android.app.PendingIntent: void <init>(android.content.IIntentSender)>(r6);

        return $r12;

     label5:
        $r8 = r0.<android.app.Activity: android.app.Activity mParent>;

        r5 = $r8.<android.app.Activity: android.os.IBinder mToken>;

     label6:
        goto label2;

     label7:
        return null;

     label8:
        $r11 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label8;
        catch android.os.RemoteException from label2 to label3 with label8;
        catch android.os.RemoteException from label4 to label5 with label8;
        catch android.os.RemoteException from label5 to label6 with label8;
    }

    public final void dismissDialog(int)
    {
        android.app.Activity r0;
        int i0;
        android.app.Activity$ManagedDialog r1;
        android.util.SparseArray $r2, $r3;
        java.lang.Object $r4;
        android.app.Dialog $r5;
        java.lang.IllegalArgumentException $r6, $r7;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        $r2 = r0.<android.app.Activity: android.util.SparseArray mManagedDialogs>;

        if $r2 != null goto label1;

        $r7 = specialinvoke r0.<android.app.Activity: java.lang.IllegalArgumentException missingDialog(int)>(i0);

        throw $r7;

     label1:
        $r3 = r0.<android.app.Activity: android.util.SparseArray mManagedDialogs>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (android.app.Activity$ManagedDialog) $r4;

        if r1 != null goto label2;

        $r6 = specialinvoke r0.<android.app.Activity: java.lang.IllegalArgumentException missingDialog(int)>(i0);

        throw $r6;

     label2:
        $r5 = r1.<android.app.Activity$ManagedDialog: android.app.Dialog mDialog>;

        virtualinvoke $r5.<android.app.Dialog: void dismiss()>();

        return;
    }

    void dispatchActivityResult(java.lang.String, int, int, android.content.Intent)
    {
        android.app.Activity r0;
        java.lang.String r1;
        int i0, i1;
        android.content.Intent r2;
        android.app.Fragment r3;
        android.app.FragmentManagerImpl $r4, $r5;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.content.Intent;

        $r4 = r0.<android.app.Activity: android.app.FragmentManagerImpl mFragments>;

        virtualinvoke $r4.<android.app.FragmentManagerImpl: void noteStateNotSaved()>();

        if r1 != null goto label2;

        virtualinvoke r0.<android.app.Activity: void onActivityResult(int,int,android.content.Intent)>(i0, i1, r2);

     label1:
        return;

     label2:
        $r5 = r0.<android.app.Activity: android.app.FragmentManagerImpl mFragments>;

        r3 = virtualinvoke $r5.<android.app.FragmentManagerImpl: android.app.Fragment findFragmentByWho(java.lang.String)>(r1);

        if r3 == null goto label1;

        virtualinvoke r3.<android.app.Fragment: void onActivityResult(int,int,android.content.Intent)>(i0, i1, r2);

        return;
    }

    public boolean dispatchGenericMotionEvent(android.view.MotionEvent)
    {
        android.app.Activity r0;
        android.view.MotionEvent r1;
        android.view.Window $r2;
        boolean $z0, $z1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.MotionEvent;

        virtualinvoke r0.<android.app.Activity: void onUserInteraction()>();

        $r2 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        $z0 = virtualinvoke $r2.<android.view.Window: boolean superDispatchGenericMotionEvent(android.view.MotionEvent)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = virtualinvoke r0.<android.app.Activity: boolean onGenericMotionEvent(android.view.MotionEvent)>(r1);

        return $z1;
    }

    public boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        android.app.Activity r0;
        android.view.KeyEvent r1;
        android.view.Window r2;
        android.view.View r3;
        android.view.KeyEvent$DispatcherState r4;
        boolean $z0, $z1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.KeyEvent;

        virtualinvoke r0.<android.app.Activity: void onUserInteraction()>();

        r2 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        $z0 = virtualinvoke r2.<android.view.Window: boolean superDispatchKeyEvent(android.view.KeyEvent)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r3 = r0.<android.app.Activity: android.view.View mDecor>;

        if r3 != null goto label2;

        r3 = virtualinvoke r2.<android.view.Window: android.view.View getDecorView()>();

     label2:
        if r3 == null goto label4;

        r4 = virtualinvoke r3.<android.view.View: android.view.KeyEvent$DispatcherState getKeyDispatcherState()>();

     label3:
        $z1 = virtualinvoke r1.<android.view.KeyEvent: boolean dispatch(android.view.KeyEvent$Callback,android.view.KeyEvent$DispatcherState,java.lang.Object)>(r0, r4, r0);

        return $z1;

     label4:
        r4 = null;

        goto label3;
    }

    public boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
    {
        android.app.Activity r0;
        android.view.KeyEvent r1;
        android.view.Window $r2;
        boolean $z0, $z1;
        int $i0;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.KeyEvent;

        virtualinvoke r0.<android.app.Activity: void onUserInteraction()>();

        $r2 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        $z0 = virtualinvoke $r2.<android.view.Window: boolean superDispatchKeyShortcutEvent(android.view.KeyEvent)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $i0 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        $z1 = virtualinvoke r0.<android.app.Activity: boolean onKeyShortcut(int,android.view.KeyEvent)>($i0, r1);

        return $z1;
    }

    public boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.app.Activity r0;
        android.view.accessibility.AccessibilityEvent r1;
        android.view.WindowManager$LayoutParams r2;
        boolean z0, $z1;
        java.lang.CharSequence r3;
        java.lang.Class $r4;
        java.lang.String $r5, $r6;
        android.view.Window $r7;
        int $i0, $i1;
        java.util.List $r8;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r5);

        $r6 = virtualinvoke r0.<android.app.Activity: java.lang.String getPackageName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setPackageName(java.lang.CharSequence)>($r6);

        $r7 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        r2 = virtualinvoke $r7.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        $i0 = r2.<android.view.ViewGroup$LayoutParams: int width>;

        if $i0 != -1 goto label3;

        $i1 = r2.<android.view.ViewGroup$LayoutParams: int height>;

        if $i1 != -1 goto label3;

        z0 = 1;

     label1:
        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setFullScreen(boolean)>(z0);

        r3 = virtualinvoke r0.<android.app.Activity: java.lang.CharSequence getTitle()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z1 != 0 goto label2;

        $r8 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r3);

     label2:
        return 1;

     label3:
        z0 = 0;

        goto label1;
    }

    public boolean dispatchTouchEvent(android.view.MotionEvent)
    {
        android.app.Activity r0;
        android.view.MotionEvent r1;
        int $i0;
        android.view.Window $r2;
        boolean $z0, $z1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        if $i0 != 0 goto label1;

        virtualinvoke r0.<android.app.Activity: void onUserInteraction()>();

     label1:
        $r2 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        $z0 = virtualinvoke $r2.<android.view.Window: boolean superDispatchTouchEvent(android.view.MotionEvent)>(r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $z1 = virtualinvoke r0.<android.app.Activity: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        return $z1;
    }

    public boolean dispatchTrackballEvent(android.view.MotionEvent)
    {
        android.app.Activity r0;
        android.view.MotionEvent r1;
        android.view.Window $r2;
        boolean $z0, $z1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.MotionEvent;

        virtualinvoke r0.<android.app.Activity: void onUserInteraction()>();

        $r2 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        $z0 = virtualinvoke $r2.<android.view.Window: boolean superDispatchTrackballEvent(android.view.MotionEvent)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = virtualinvoke r0.<android.app.Activity: boolean onTrackballEvent(android.view.MotionEvent)>(r1);

        return $z1;
    }

    public void dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        android.app.Activity r0;
        java.lang.String r1;
        java.io.FileDescriptor r2;
        java.io.PrintWriter r3;
        java.lang.String[] r4;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.FileDescriptor;

        r3 := @parameter2: java.io.PrintWriter;

        r4 := @parameter3: java.lang.String[];

        virtualinvoke r0.<android.app.Activity: void dumpInner(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3, r4);

        return;
    }

    void dumpInner(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        android.app.Activity r0;
        java.lang.String r1, r5, $r6, $r25, $r29;
        java.io.FileDescriptor r2;
        java.io.PrintWriter r3;
        java.lang.String[] r4;
        int $i0, $i1;
        java.lang.StringBuilder $r7, $r8, $r9, $r26, $r28, $r31;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.content.res.Configuration $r10;
        android.app.FragmentManagerImpl $r11;
        android.app.LoaderManagerImpl $r12, $r27, $r30;
        android.os.Handler $r13;
        android.view.Window $r14, $r18, $r20, $r21;
        android.util.PrintWriterPrinter $r15;
        android.os.Looper $r16;
        android.view.View $r17, $r19, $r24;
        android.view.ViewRootImpl $r22, $r23;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.FileDescriptor;

        r3 := @parameter2: java.io.PrintWriter;

        r4 := @parameter3: java.lang.String[];

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("Local Activity ");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>($r6);

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>(" State:");

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        r5 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r5);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("mResumed=");

        $z0 = r0.<android.app.Activity: boolean mResumed>;

        virtualinvoke r3.<java.io.PrintWriter: void print(boolean)>($z0);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" mStopped=");

        $z1 = r0.<android.app.Activity: boolean mStopped>;

        virtualinvoke r3.<java.io.PrintWriter: void print(boolean)>($z1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" mFinished=");

        $z2 = r0.<android.app.Activity: boolean mFinished>;

        virtualinvoke r3.<java.io.PrintWriter: void println(boolean)>($z2);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r5);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("mLoadersStarted=");

        $z3 = r0.<android.app.Activity: boolean mLoadersStarted>;

        virtualinvoke r3.<java.io.PrintWriter: void println(boolean)>($z3);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r5);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("mChangingConfigurations=");

        $z4 = r0.<android.app.Activity: boolean mChangingConfigurations>;

        virtualinvoke r3.<java.io.PrintWriter: void println(boolean)>($z4);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r5);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("mCurrentConfig=");

        $r10 = r0.<android.app.Activity: android.content.res.Configuration mCurrentConfig>;

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.Object)>($r10);

        $r12 = r0.<android.app.Activity: android.app.LoaderManagerImpl mLoaderManager>;

        if $r12 == null goto label1;

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("Loader Manager ");

        $r27 = r0.<android.app.Activity: android.app.LoaderManagerImpl mLoaderManager>;

        $i1 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r27);

        $r25 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>($r25);

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>(":");

        $r30 = r0.<android.app.Activity: android.app.LoaderManagerImpl mLoaderManager>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r28 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r30.<android.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>($r29, r2, r3, r4);

     label1:
        $r11 = r0.<android.app.Activity: android.app.FragmentManagerImpl mFragments>;

        virtualinvoke $r11.<android.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3, r4);

        $r14 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        if $r14 == null goto label2;

        $r18 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        $r17 = virtualinvoke $r18.<android.view.Window: android.view.View peekDecorView()>();

        if $r17 == null goto label2;

        $r20 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        $r19 = virtualinvoke $r20.<android.view.Window: android.view.View peekDecorView()>();

        $r22 = virtualinvoke $r19.<android.view.View: android.view.ViewRootImpl getViewRootImpl()>();

        if $r22 == null goto label2;

        $r21 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        $r24 = virtualinvoke $r21.<android.view.Window: android.view.View peekDecorView()>();

        $r23 = virtualinvoke $r24.<android.view.View: android.view.ViewRootImpl getViewRootImpl()>();

        virtualinvoke $r23.<android.view.ViewRootImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3, r4);

     label2:
        $r13 = r0.<android.app.Activity: android.os.Handler mHandler>;

        $r16 = virtualinvoke $r13.<android.os.Handler: android.os.Looper getLooper()>();

        $r15 = new android.util.PrintWriterPrinter;

        specialinvoke $r15.<android.util.PrintWriterPrinter: void <init>(java.io.PrintWriter)>(r3);

        virtualinvoke $r16.<android.os.Looper: void dump(android.util.Printer,java.lang.String)>($r15, r1);

        return;
    }

    public android.view.View findViewById(int)
    {
        android.app.Activity r0;
        int i0;
        android.view.Window $r1;
        android.view.View $r2;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        $r2 = virtualinvoke $r1.<android.view.Window: android.view.View findViewById(int)>(i0);

        return $r2;
    }

    public void finish()
    {
        android.app.Activity r0, $r4, $r5;
        java.lang.Throwable r1, $r8;
        int i0;
        android.content.Intent r2;
        android.app.IActivityManager $r6;
        android.os.IBinder $r7;
        boolean $z0;
        android.os.RemoteException $r9;

        r0 := @this: android.app.Activity;

        $r4 = r0.<android.app.Activity: android.app.Activity mParent>;

        if $r4 != null goto label09;

        entermonitor r0;

     label01:
        i0 = r0.<android.app.Activity: int mResultCode>;

        r2 = r0.<android.app.Activity: android.content.Intent mResultData>;

        exitmonitor r0;

     label02:
        if r2 == null goto label04;

     label03:
        virtualinvoke r2.<android.content.Intent: void prepareToLeaveProcess()>();

     label04:
        $r6 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r7 = r0.<android.app.Activity: android.os.IBinder mToken>;

        $z0 = interfaceinvoke $r6.<android.app.IActivityManager: boolean finishActivity(android.os.IBinder,int,android.content.Intent)>($r7, i0, r2);

        if $z0 == 0 goto label05;

        r0.<android.app.Activity: boolean mFinished> = 1;

     label05:
        return;

     label06:
        $r8 := @caughtexception;

        r1 = $r8;

     label07:
        exitmonitor r0;

     label08:
        throw r1;

     label09:
        $r5 = r0.<android.app.Activity: android.app.Activity mParent>;

        virtualinvoke $r5.<android.app.Activity: void finishFromChild(android.app.Activity)>(r0);

        return;

     label10:
        $r9 := @caughtexception;

        return;

        catch java.lang.Throwable from label01 to label02 with label06;
        catch android.os.RemoteException from label03 to label04 with label10;
        catch android.os.RemoteException from label04 to label05 with label10;
        catch java.lang.Throwable from label07 to label08 with label06;
    }

    public void finishActivity(int)
    {
        android.app.Activity r0, $r2, $r3;
        int i0;
        android.app.IActivityManager $r4;
        java.lang.String $r5;
        android.os.IBinder $r6;
        android.os.RemoteException $r7;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        $r2 = r0.<android.app.Activity: android.app.Activity mParent>;

        if $r2 != null goto label3;

     label1:
        $r4 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r6 = r0.<android.app.Activity: android.os.IBinder mToken>;

        $r5 = r0.<android.app.Activity: java.lang.String mEmbeddedID>;

        interfaceinvoke $r4.<android.app.IActivityManager: void finishSubActivity(android.os.IBinder,java.lang.String,int)>($r6, $r5, i0);

     label2:
        return;

     label3:
        $r3 = r0.<android.app.Activity: android.app.Activity mParent>;

        virtualinvoke $r3.<android.app.Activity: void finishActivityFromChild(android.app.Activity,int)>(r0, i0);

        return;

     label4:
        $r7 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public void finishActivityFromChild(android.app.Activity, int)
    {
        android.app.Activity r0, r1;
        int i0;
        android.app.IActivityManager $r3;
        java.lang.String $r4;
        android.os.IBinder $r5;
        android.os.RemoteException $r6;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.app.Activity;

        i0 := @parameter1: int;

     label1:
        $r3 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r5 = r0.<android.app.Activity: android.os.IBinder mToken>;

        $r4 = r1.<android.app.Activity: java.lang.String mEmbeddedID>;

        interfaceinvoke $r3.<android.app.IActivityManager: void finishSubActivity(android.os.IBinder,java.lang.String,int)>($r5, $r4, i0);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void finishAffinity()
    {
        android.app.Activity r0, $r2;
        int $i0;
        java.lang.IllegalStateException $r3, $r7;
        android.content.Intent $r4;
        android.app.IActivityManager $r5;
        android.os.IBinder $r6;
        boolean $z0;
        android.os.RemoteException $r8;

        r0 := @this: android.app.Activity;

        $r2 = r0.<android.app.Activity: android.app.Activity mParent>;

        if $r2 == null goto label1;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can not be called from an embedded activity");

        throw $r7;

     label1:
        $i0 = r0.<android.app.Activity: int mResultCode>;

        if $i0 != 0 goto label2;

        $r4 = r0.<android.app.Activity: android.content.Intent mResultData>;

        if $r4 == null goto label3;

     label2:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can not be called to deliver a result");

        throw $r3;

     label3:
        $r5 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r6 = r0.<android.app.Activity: android.os.IBinder mToken>;

        $z0 = interfaceinvoke $r5.<android.app.IActivityManager: boolean finishActivityAffinity(android.os.IBinder)>($r6);

        if $z0 == 0 goto label4;

        r0.<android.app.Activity: boolean mFinished> = 1;

     label4:
        return;

     label5:
        $r8 := @caughtexception;

        return;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public void finishFromChild(android.app.Activity)
    {
        android.app.Activity r0, r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.app.Activity;

        virtualinvoke r0.<android.app.Activity: void finish()>();

        return;
    }

    public android.app.ActionBar getActionBar()
    {
        android.app.Activity r0;
        com.android.internal.app.ActionBarImpl $r1;
        android.app.ActionBar r2;

        r0 := @this: android.app.Activity;

        specialinvoke r0.<android.app.Activity: void initActionBar()>();

        $r1 = r0.<android.app.Activity: com.android.internal.app.ActionBarImpl mActionBar>;

        r2 = (android.app.ActionBar) $r1;

        return r2;
    }

    public final android.os.IBinder getActivityToken()
    {
        android.app.Activity r0, $r1, $r3;
        android.os.IBinder $r2, $r4;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.app.Activity mParent>;

        if $r1 == null goto label1;

        $r3 = r0.<android.app.Activity: android.app.Activity mParent>;

        $r4 = virtualinvoke $r3.<android.app.Activity: android.os.IBinder getActivityToken()>();

        return $r4;

     label1:
        $r2 = r0.<android.app.Activity: android.os.IBinder mToken>;

        return $r2;
    }

    public final android.app.Application getApplication()
    {
        android.app.Activity r0;
        android.app.Application $r1;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.app.Application mApplication>;

        return $r1;
    }

    public android.content.ComponentName getCallingActivity()
    {
        android.app.Activity r0;
        android.content.ComponentName r2;
        android.app.IActivityManager $r3;
        android.os.IBinder $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.app.Activity;

     label1:
        $r3 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r4 = r0.<android.app.Activity: android.os.IBinder mToken>;

        r2 = interfaceinvoke $r3.<android.app.IActivityManager: android.content.ComponentName getCallingActivity(android.os.IBinder)>($r4);

     label2:
        return r2;

     label3:
        $r5 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.String getCallingPackage()
    {
        android.app.Activity r0;
        java.lang.String r2;
        android.app.IActivityManager $r3;
        android.os.IBinder $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.app.Activity;

     label1:
        $r3 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r4 = r0.<android.app.Activity: android.os.IBinder mToken>;

        r2 = interfaceinvoke $r3.<android.app.IActivityManager: java.lang.String getCallingPackage(android.os.IBinder)>($r4);

     label2:
        return r2;

     label3:
        $r5 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getChangingConfigurations()
    {
        android.app.Activity r0;
        int $i0;

        r0 := @this: android.app.Activity;

        $i0 = r0.<android.app.Activity: int mConfigChangeFlags>;

        return $i0;
    }

    public android.content.ComponentName getComponentName()
    {
        android.app.Activity r0;
        android.content.ComponentName $r1;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.content.ComponentName mComponent>;

        return $r1;
    }

    public android.view.View getCurrentFocus()
    {
        android.app.Activity r0;
        android.view.Window $r1, $r2;
        android.view.View $r3;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.view.Window mWindow>;

        if $r1 == null goto label1;

        $r2 = r0.<android.app.Activity: android.view.Window mWindow>;

        $r3 = virtualinvoke $r2.<android.view.Window: android.view.View getCurrentFocus()>();

        return $r3;

     label1:
        return null;
    }

    public android.app.FragmentManager getFragmentManager()
    {
        android.app.Activity r0;
        android.app.FragmentManagerImpl $r1;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.app.FragmentManagerImpl mFragments>;

        return $r1;
    }

    public android.content.Intent getIntent()
    {
        android.app.Activity r0;
        android.content.Intent $r1;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.content.Intent mIntent>;

        return $r1;
    }

    java.util.HashMap getLastNonConfigurationChildInstances()
    {
        android.app.Activity r0;
        android.app.Activity$NonConfigurationInstances $r1, $r2;
        java.util.HashMap $r3;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.app.Activity$NonConfigurationInstances mLastNonConfigurationInstances>;

        if $r1 == null goto label1;

        $r2 = r0.<android.app.Activity: android.app.Activity$NonConfigurationInstances mLastNonConfigurationInstances>;

        $r3 = $r2.<android.app.Activity$NonConfigurationInstances: java.util.HashMap children>;

        return $r3;

     label1:
        return null;
    }

    public java.lang.Object getLastNonConfigurationInstance()
    {
        android.app.Activity r0;
        android.app.Activity$NonConfigurationInstances $r1, $r2;
        java.lang.Object $r3;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.app.Activity$NonConfigurationInstances mLastNonConfigurationInstances>;

        if $r1 == null goto label1;

        $r2 = r0.<android.app.Activity: android.app.Activity$NonConfigurationInstances mLastNonConfigurationInstances>;

        $r3 = $r2.<android.app.Activity$NonConfigurationInstances: java.lang.Object activity>;

        return $r3;

     label1:
        return null;
    }

    public android.view.LayoutInflater getLayoutInflater()
    {
        android.app.Activity r0;
        android.view.Window $r1;
        android.view.LayoutInflater $r2;

        r0 := @this: android.app.Activity;

        $r1 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        $r2 = virtualinvoke $r1.<android.view.Window: android.view.LayoutInflater getLayoutInflater()>();

        return $r2;
    }

    public android.app.LoaderManager getLoaderManager()
    {
        android.app.Activity r0;
        android.app.LoaderManagerImpl $r1, $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.app.LoaderManagerImpl mLoaderManager>;

        if $r1 == null goto label1;

        $r4 = r0.<android.app.Activity: android.app.LoaderManagerImpl mLoaderManager>;

        return $r4;

     label1:
        r0.<android.app.Activity: boolean mCheckedForLoaderManager> = 1;

        $z0 = r0.<android.app.Activity: boolean mLoadersStarted>;

        $r2 = virtualinvoke r0.<android.app.Activity: android.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean)>("(root)", $z0, 1);

        r0.<android.app.Activity: android.app.LoaderManagerImpl mLoaderManager> = $r2;

        $r3 = r0.<android.app.Activity: android.app.LoaderManagerImpl mLoaderManager>;

        return $r3;
    }

    android.app.LoaderManagerImpl getLoaderManager(java.lang.String, boolean, boolean)
    {
        android.app.Activity r0;
        java.lang.String r1;
        boolean z0, z1;
        android.app.LoaderManagerImpl r2, $r6;
        android.util.ArrayMap $r3, $r4, $r7, $r9;
        java.lang.Object $r5;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r3 = r0.<android.app.Activity: android.util.ArrayMap mAllLoaderManagers>;

        if $r3 != null goto label1;

        $r9 = new android.util.ArrayMap;

        specialinvoke $r9.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.Activity: android.util.ArrayMap mAllLoaderManagers> = $r9;

     label1:
        $r4 = r0.<android.app.Activity: android.util.ArrayMap mAllLoaderManagers>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (android.app.LoaderManagerImpl) $r5;

        if r2 != null goto label3;

        if z1 == 0 goto label2;

        $r6 = new android.app.LoaderManagerImpl;

        specialinvoke $r6.<android.app.LoaderManagerImpl: void <init>(java.lang.String,android.app.Activity,boolean)>(r1, r0, z0);

        r2 = $r6;

        $r7 = r0.<android.app.Activity: android.util.ArrayMap mAllLoaderManagers>;

        virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

     label2:
        return r2;

     label3:
        virtualinvoke r2.<android.app.LoaderManagerImpl: void updateActivity(android.app.Activity)>(r0);

        return r2;
    }

    public java.lang.String getLocalClassName()
    {
        android.app.Activity r0;
        java.lang.String r1, r2, $r4;
        int i0, $i1, $i3;
        android.content.ComponentName $r3;
        boolean $z0;
        char $c2;

        r0 := @this: android.app.Activity;

        r1 = virtualinvoke r0.<android.app.Activity: java.lang.String getPackageName()>();

        $r3 = r0.<android.app.Activity: android.content.ComponentName mComponent>;

        r2 = virtualinvoke $r3.<android.content.ComponentName: java.lang.String getClassName()>();

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i1 <= i0 goto label1;

        $c2 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i0);

        if $c2 == 46 goto label2;

     label1:
        return r2;

     label2:
        $i3 = i0 + 1;

        $r4 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3);

        return $r4;
    }

    public android.view.MenuInflater getMenuInflater()
    {
        android.app.Activity r0;
        android.view.MenuInflater $r1, $r2, $r4, $r5;
        com.android.internal.app.ActionBarImpl $r3, $r6;
        android.content.Context $r7;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.view.MenuInflater mMenuInflater>;

        if $r1 != null goto label1;

        specialinvoke r0.<android.app.Activity: void initActionBar()>();

        $r3 = r0.<android.app.Activity: com.android.internal.app.ActionBarImpl mActionBar>;

        if $r3 == null goto label2;

        $r5 = new android.view.MenuInflater;

        $r6 = r0.<android.app.Activity: com.android.internal.app.ActionBarImpl mActionBar>;

        $r7 = virtualinvoke $r6.<com.android.internal.app.ActionBarImpl: android.content.Context getThemedContext()>();

        specialinvoke $r5.<android.view.MenuInflater: void <init>(android.content.Context,java.lang.Object)>($r7, r0);

        r0.<android.app.Activity: android.view.MenuInflater mMenuInflater> = $r5;

     label1:
        $r2 = r0.<android.app.Activity: android.view.MenuInflater mMenuInflater>;

        return $r2;

     label2:
        $r4 = new android.view.MenuInflater;

        specialinvoke $r4.<android.view.MenuInflater: void <init>(android.content.Context)>(r0);

        r0.<android.app.Activity: android.view.MenuInflater mMenuInflater> = $r4;

        goto label1;
    }

    public final android.app.Activity getParent()
    {
        android.app.Activity r0, $r1;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.app.Activity mParent>;

        return $r1;
    }

    public android.content.Intent getParentActivityIntent()
    {
        android.app.Activity r0;
        java.lang.String r1, $r10, $r17;
        android.content.ComponentName r2, $r7;
        android.content.Intent r4, r5, $r11;
        android.content.pm.ActivityInfo $r6, $r9;
        boolean $z0;
        android.content.pm.PackageManager $r8;
        java.lang.StringBuilder $r12, $r14, $r15, $r16;
        android.content.pm.PackageManager$NameNotFoundException $r13;

        r0 := @this: android.app.Activity;

        $r6 = r0.<android.app.Activity: android.content.pm.ActivityInfo mActivityInfo>;

        r1 = $r6.<android.content.pm.ActivityInfo: java.lang.String parentActivityName>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r7 = new android.content.ComponentName;

        specialinvoke $r7.<android.content.ComponentName: void <init>(android.content.Context,java.lang.String)>(r0, r1);

        r2 = $r7;

     label2:
        $r8 = virtualinvoke r0.<android.app.Activity: android.content.pm.PackageManager getPackageManager()>();

        $r9 = virtualinvoke $r8.<android.content.pm.PackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>(r2, 0);

        $r10 = $r9.<android.content.pm.ActivityInfo: java.lang.String parentActivityName>;

        if $r10 != null goto label4;

        r5 = staticinvoke <android.content.Intent: android.content.Intent makeMainActivity(android.content.ComponentName)>(r2);

     label3:
        goto label7;

     label4:
        $r11 = new android.content.Intent;

        specialinvoke $r11.<android.content.Intent: void <init>()>();

        r4 = virtualinvoke $r11.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r2);

     label5:
        r5 = r4;

        goto label7;

     label6:
        $r13 := @caughtexception;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getParentActivityIntent: bad parentActivityName \'");

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' in manifest");

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Activity", $r17);

        return null;

     label7:
        return r5;

        catch android.content.pm.PackageManager$NameNotFoundException from label2 to label3 with label6;
        catch android.content.pm.PackageManager$NameNotFoundException from label4 to label5 with label6;
    }

    public android.content.SharedPreferences getPreferences(int)
    {
        android.app.Activity r0;
        int i0;
        java.lang.String $r1;
        android.content.SharedPreferences $r2;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.app.Activity: java.lang.String getLocalClassName()>();

        $r2 = virtualinvoke r0.<android.app.Activity: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>($r1, i0);

        return $r2;
    }

    public int getRequestedOrientation()
    {
        android.app.Activity r0, $r2, $r3;
        int i0, $i1;
        android.app.IActivityManager $r4;
        android.os.IBinder $r5;
        android.os.RemoteException $r6;

        r0 := @this: android.app.Activity;

        $r2 = r0.<android.app.Activity: android.app.Activity mParent>;

        if $r2 != null goto label3;

     label1:
        $r4 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r5 = r0.<android.app.Activity: android.os.IBinder mToken>;

        i0 = interfaceinvoke $r4.<android.app.IActivityManager: int getRequestedOrientation(android.os.IBinder)>($r5);

     label2:
        return i0;

     label3:
        $r3 = r0.<android.app.Activity: android.app.Activity mParent>;

        $i1 = virtualinvoke $r3.<android.app.Activity: int getRequestedOrientation()>();

        return $i1;

     label4:
        $r6 := @caughtexception;

        return -1;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public java.lang.Object getSystemService(java.lang.String)
    {
        android.app.Activity r0;
        java.lang.String r1, $r3, $r4;
        android.content.Context $r2;
        boolean $z0, $z1;
        java.lang.Object $r5;
        android.app.SearchManager $r6;
        android.view.WindowManager $r7;
        java.lang.IllegalStateException $r8;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.app.Activity: android.content.Context getBaseContext()>();

        if $r2 != null goto label1;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("System services not available to Activities before onCreate()");

        throw $r8;

     label1:
        $r3 = "window";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r7 = r0.<android.app.Activity: android.view.WindowManager mWindowManager>;

        return $r7;

     label2:
        $r4 = "search";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label3;

        specialinvoke r0.<android.app.Activity: void ensureSearchManager()>();

        $r6 = r0.<android.app.Activity: android.app.SearchManager mSearchManager>;

        return $r6;

     label3:
        $r5 = specialinvoke r0.<android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)>(r1);

        return $r5;
    }

    public int getTaskId()
    {
        android.app.Activity r0;
        int i0;
        android.app.IActivityManager $r2;
        android.os.IBinder $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.app.Activity;

     label1:
        $r2 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r3 = r0.<android.app.Activity: android.os.IBinder mToken>;

        i0 = interfaceinvoke $r2.<android.app.IActivityManager: int getTaskForActivity(android.os.IBinder,boolean)>($r3, 0);

     label2:
        return i0;

     label3:
        $r4 := @caughtexception;

        return -1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public final java.lang.CharSequence getTitle()
    {
        android.app.Activity r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: java.lang.CharSequence mTitle>;

        return $r1;
    }

    public final int getTitleColor()
    {
        android.app.Activity r0;
        int $i0;

        r0 := @this: android.app.Activity;

        $i0 = r0.<android.app.Activity: int mTitleColor>;

        return $i0;
    }

    public final int getVolumeControlStream()
    {
        android.app.Activity r0;
        android.view.Window $r1;
        int $i0;

        r0 := @this: android.app.Activity;

        $r1 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        $i0 = virtualinvoke $r1.<android.view.Window: int getVolumeControlStream()>();

        return $i0;
    }

    public android.view.Window getWindow()
    {
        android.app.Activity r0;
        android.view.Window $r1;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.view.Window mWindow>;

        return $r1;
    }

    public android.view.WindowManager getWindowManager()
    {
        android.app.Activity r0;
        android.view.WindowManager $r1;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.view.WindowManager mWindowManager>;

        return $r1;
    }

    public boolean hasWindowFocus()
    {
        android.app.Activity r0;
        android.view.Window r1;
        android.view.View r2;
        boolean $z0;

        r0 := @this: android.app.Activity;

        r1 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        if r1 == null goto label1;

        r2 = virtualinvoke r1.<android.view.Window: android.view.View getDecorView()>();

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<android.view.View: boolean hasWindowFocus()>();

        return $z0;

     label1:
        return 0;
    }

    void invalidateFragment(java.lang.String)
    {
        android.app.Activity r0;
        java.lang.String r1;
        android.app.LoaderManagerImpl r2;
        android.util.ArrayMap $r3, $r4, $r6;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<android.app.Activity: android.util.ArrayMap mAllLoaderManagers>;

        if $r3 == null goto label1;

        $r4 = r0.<android.app.Activity: android.util.ArrayMap mAllLoaderManagers>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (android.app.LoaderManagerImpl) $r5;

        if r2 == null goto label1;

        $z0 = r2.<android.app.LoaderManagerImpl: boolean mRetaining>;

        if $z0 != 0 goto label1;

        virtualinvoke r2.<android.app.LoaderManagerImpl: void doDestroy()>();

        $r6 = r0.<android.app.Activity: android.util.ArrayMap mAllLoaderManagers>;

        virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

     label1:
        return;
    }

    public void invalidateOptionsMenu()
    {
        android.app.Activity r0;
        android.view.Window $r1;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.view.Window mWindow>;

        virtualinvoke $r1.<android.view.Window: void invalidatePanelMenu(int)>(0);

        return;
    }

    public boolean isChangingConfigurations()
    {
        android.app.Activity r0;
        boolean $z0;

        r0 := @this: android.app.Activity;

        $z0 = r0.<android.app.Activity: boolean mChangingConfigurations>;

        return $z0;
    }

    public final boolean isChild()
    {
        android.app.Activity r0, $r1;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.app.Activity mParent>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isDestroyed()
    {
        android.app.Activity r0;
        boolean $z0;

        r0 := @this: android.app.Activity;

        $z0 = r0.<android.app.Activity: boolean mDestroyed>;

        return $z0;
    }

    public boolean isFinishing()
    {
        android.app.Activity r0;
        boolean $z0;

        r0 := @this: android.app.Activity;

        $z0 = r0.<android.app.Activity: boolean mFinished>;

        return $z0;
    }

    public boolean isImmersive()
    {
        android.app.Activity r0;
        boolean z0;
        android.app.IActivityManager $r2;
        android.os.IBinder $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.app.Activity;

     label1:
        $r2 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r3 = r0.<android.app.Activity: android.os.IBinder mToken>;

        z0 = interfaceinvoke $r2.<android.app.IActivityManager: boolean isImmersive(android.os.IBinder)>($r3);

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public final boolean isResumed()
    {
        android.app.Activity r0;
        boolean $z0;

        r0 := @this: android.app.Activity;

        $z0 = r0.<android.app.Activity: boolean mResumed>;

        return $z0;
    }

    public boolean isTaskRoot()
    {
        android.app.Activity r0;
        int i0;
        android.app.IActivityManager $r2;
        android.os.IBinder $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.app.Activity;

     label1:
        $r2 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r3 = r0.<android.app.Activity: android.os.IBinder mToken>;

        i0 = interfaceinvoke $r2.<android.app.IActivityManager: int getTaskForActivity(android.os.IBinder,boolean)>($r3, 1);

     label2:
        if i0 < 0 goto label3;

        return 1;

     label3:
        return 0;

     label4:
        $r4 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    void makeVisible()
    {
        android.app.Activity r0;
        boolean $z0;
        android.view.View $r1, $r3;
        android.view.WindowManager $r2;
        android.view.Window $r4;
        android.view.WindowManager$LayoutParams $r5;

        r0 := @this: android.app.Activity;

        $z0 = r0.<android.app.Activity: boolean mWindowAdded>;

        if $z0 != 0 goto label1;

        $r2 = virtualinvoke r0.<android.app.Activity: android.view.WindowManager getWindowManager()>();

        $r3 = r0.<android.app.Activity: android.view.View mDecor>;

        $r4 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        $r5 = virtualinvoke $r4.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        interfaceinvoke $r2.<android.view.ViewManager: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r3, $r5);

        r0.<android.app.Activity: boolean mWindowAdded> = 1;

     label1:
        $r1 = r0.<android.app.Activity: android.view.View mDecor>;

        virtualinvoke $r1.<android.view.View: void setVisibility(int)>(0);

        return;
    }

    public final android.database.Cursor managedQuery(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String)
    {
        android.app.Activity r0;
        android.net.Uri r1;
        java.lang.String[] r2;
        java.lang.String r3, r4;
        android.database.Cursor r5;
        android.content.ContentResolver $r6;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        $r6 = virtualinvoke r0.<android.app.Activity: android.content.ContentResolver getContentResolver()>();

        r5 = virtualinvoke $r6.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r1, r2, r3, null, r4);

        if r5 == null goto label1;

        virtualinvoke r0.<android.app.Activity: void startManagingCursor(android.database.Cursor)>(r5);

     label1:
        return r5;
    }

    public final android.database.Cursor managedQuery(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String)
    {
        android.app.Activity r0;
        android.net.Uri r1;
        java.lang.String[] r2, r4;
        java.lang.String r3, r5;
        android.database.Cursor r6;
        android.content.ContentResolver $r7;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        r5 := @parameter4: java.lang.String;

        $r7 = virtualinvoke r0.<android.app.Activity: android.content.ContentResolver getContentResolver()>();

        r6 = virtualinvoke $r7.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r1, r2, r3, r4, r5);

        if r6 == null goto label1;

        virtualinvoke r0.<android.app.Activity: void startManagingCursor(android.database.Cursor)>(r6);

     label1:
        return r6;
    }

    public boolean moveTaskToBack(boolean)
    {
        android.app.Activity r0;
        boolean z0, z1;
        android.app.IActivityManager $r2;
        android.os.IBinder $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.app.Activity;

        z0 := @parameter0: boolean;

     label1:
        $r2 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r3 = r0.<android.app.Activity: android.os.IBinder mToken>;

        z1 = interfaceinvoke $r2.<android.app.IActivityManager: boolean moveActivityTaskToBack(android.os.IBinder,boolean)>($r3, z0);

     label2:
        return z1;

     label3:
        $r4 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean navigateUpTo(android.content.Intent)
    {
        android.app.Activity r0, $r7, $r8;
        android.content.Intent r1, r3, r6, $r14;
        java.lang.Throwable r2, $r15;
        int i0;
        boolean z0, $z1;
        android.content.ComponentName r5, $r9;
        android.app.IActivityManager $r10;
        android.os.IBinder $r11;
        android.content.pm.PackageManager $r12;
        android.os.RemoteException $r16;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.Intent;

        $r7 = r0.<android.app.Activity: android.app.Activity mParent>;

        if $r7 != null goto label11;

        $r9 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r9 != null goto label02;

        $r12 = virtualinvoke r0.<android.app.Activity: android.content.pm.PackageManager getPackageManager()>();

        r5 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName resolveActivity(android.content.pm.PackageManager)>($r12);

        if r5 != null goto label01;

        return 0;

     label01:
        $r14 = new android.content.Intent;

        specialinvoke $r14.<android.content.Intent: void <init>(android.content.Intent)>(r1);

        r6 = $r14;

        virtualinvoke r6.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r5);

        r1 = r6;

     label02:
        entermonitor r0;

     label03:
        i0 = r0.<android.app.Activity: int mResultCode>;

        r3 = r0.<android.app.Activity: android.content.Intent mResultData>;

        exitmonitor r0;

     label04:
        if r3 == null goto label05;

        virtualinvoke r3.<android.content.Intent: void prepareToLeaveProcess()>();

     label05:
        virtualinvoke r1.<android.content.Intent: void prepareToLeaveProcess()>();

        $r10 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r11 = r0.<android.app.Activity: android.os.IBinder mToken>;

        z0 = interfaceinvoke $r10.<android.app.IActivityManager: boolean navigateUpTo(android.os.IBinder,android.content.Intent,int,android.content.Intent)>($r11, r1, i0, r3);

     label06:
        return z0;

     label07:
        $r15 := @caughtexception;

        r2 = $r15;

     label08:
        exitmonitor r0;

     label09:
        throw r2;

     label10:
        $r16 := @caughtexception;

        return 0;

     label11:
        $r8 = r0.<android.app.Activity: android.app.Activity mParent>;

        $z1 = virtualinvoke $r8.<android.app.Activity: boolean navigateUpToFromChild(android.app.Activity,android.content.Intent)>(r0, r1);

        return $z1;

        catch java.lang.Throwable from label03 to label04 with label07;
        catch android.os.RemoteException from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label07;
    }

    public boolean navigateUpToFromChild(android.app.Activity, android.content.Intent)
    {
        android.app.Activity r0, r1;
        android.content.Intent r2;
        boolean $z0;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.content.Intent;

        $z0 = virtualinvoke r0.<android.app.Activity: boolean navigateUpTo(android.content.Intent)>(r2);

        return $z0;
    }

    public void onActionModeFinished(android.view.ActionMode)
    {
        android.app.Activity r0;
        android.view.ActionMode r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.ActionMode;

        return;
    }

    public void onActionModeStarted(android.view.ActionMode)
    {
        android.app.Activity r0;
        android.view.ActionMode r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.ActionMode;

        return;
    }

    protected void onActivityResult(int, int, android.content.Intent)
    {
        android.app.Activity r0;
        int i0, i1;
        android.content.Intent r1;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.content.Intent;

        return;
    }

    protected void onApplyThemeResource(android.content.res.Resources$Theme, int, boolean)
    {
        android.app.Activity r0, $r3, $r4;
        android.content.res.Resources$Theme r1, $r5;
        int i0;
        boolean z0;
        java.lang.Exception $r6;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.res.Resources$Theme;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r3 = r0.<android.app.Activity: android.app.Activity mParent>;

        if $r3 != null goto label1;

        specialinvoke r0.<android.view.ContextThemeWrapper: void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean)>(r1, i0, z0);

        return;

     label1:
        $r4 = r0.<android.app.Activity: android.app.Activity mParent>;

        $r5 = virtualinvoke $r4.<android.app.Activity: android.content.res.Resources$Theme getTheme()>();

        virtualinvoke r1.<android.content.res.Resources$Theme: void setTo(android.content.res.Resources$Theme)>($r5);

     label2:
        virtualinvoke r1.<android.content.res.Resources$Theme: void applyStyle(int,boolean)>(i0, 0);

        return;

     label3:
        $r6 := @caughtexception;

        goto label2;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void onAttachFragment(android.app.Fragment)
    {
        android.app.Activity r0;
        android.app.Fragment r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.app.Fragment;

        return;
    }

    public void onAttachedToWindow()
    {
        android.app.Activity r0;

        r0 := @this: android.app.Activity;

        return;
    }

    public void onBackPressed()
    {
        android.app.Activity r0;
        android.app.FragmentManagerImpl $r1;
        boolean $z0;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.app.FragmentManagerImpl mFragments>;

        $z0 = virtualinvoke $r1.<android.app.FragmentManagerImpl: boolean popBackStackImmediate()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<android.app.Activity: void finish()>();

     label1:
        return;
    }

    protected void onChildTitleChanged(android.app.Activity, java.lang.CharSequence)
    {
        android.app.Activity r0, r1;
        java.lang.CharSequence r2;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: java.lang.CharSequence;

        return;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        android.app.Activity r0;
        android.content.res.Configuration r1;
        android.app.FragmentManagerImpl $r2;
        android.view.Window $r3, $r6;
        com.android.internal.app.ActionBarImpl $r4, $r5;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.res.Configuration;

        r0.<android.app.Activity: boolean mCalled> = 1;

        $r2 = r0.<android.app.Activity: android.app.FragmentManagerImpl mFragments>;

        virtualinvoke $r2.<android.app.FragmentManagerImpl: void dispatchConfigurationChanged(android.content.res.Configuration)>(r1);

        $r3 = r0.<android.app.Activity: android.view.Window mWindow>;

        if $r3 == null goto label1;

        $r6 = r0.<android.app.Activity: android.view.Window mWindow>;

        virtualinvoke $r6.<android.view.Window: void onConfigurationChanged(android.content.res.Configuration)>(r1);

     label1:
        $r4 = r0.<android.app.Activity: com.android.internal.app.ActionBarImpl mActionBar>;

        if $r4 == null goto label2;

        $r5 = r0.<android.app.Activity: com.android.internal.app.ActionBarImpl mActionBar>;

        virtualinvoke $r5.<com.android.internal.app.ActionBarImpl: void onConfigurationChanged(android.content.res.Configuration)>(r1);

     label2:
        return;
    }

    public void onContentChanged()
    {
        android.app.Activity r0;

        r0 := @this: android.app.Activity;

        return;
    }

    public boolean onContextItemSelected(android.view.MenuItem)
    {
        android.app.Activity r0, $r2, $r3;
        android.view.MenuItem r1;
        boolean $z0;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.MenuItem;

        $r2 = r0.<android.app.Activity: android.app.Activity mParent>;

        if $r2 == null goto label1;

        $r3 = r0.<android.app.Activity: android.app.Activity mParent>;

        $z0 = virtualinvoke $r3.<android.app.Activity: boolean onContextItemSelected(android.view.MenuItem)>(r1);

        return $z0;

     label1:
        return 0;
    }

    public void onContextMenuClosed(android.view.Menu)
    {
        android.app.Activity r0, $r2, $r3;
        android.view.Menu r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.Menu;

        $r2 = r0.<android.app.Activity: android.app.Activity mParent>;

        if $r2 == null goto label1;

        $r3 = r0.<android.app.Activity: android.app.Activity mParent>;

        virtualinvoke $r3.<android.app.Activity: void onContextMenuClosed(android.view.Menu)>(r1);

     label1:
        return;
    }

    protected void onCreate(android.os.Bundle)
    {
        android.app.Activity r0;
        android.os.Bundle r1;
        android.os.Parcelable r2;
        android.app.FragmentManagerImpl r3, $r8;
        java.util.ArrayList r4;
        android.app.Activity$NonConfigurationInstances $r5, $r10, $r11, $r14;
        android.content.pm.ActivityInfo $r6;
        java.lang.String $r7;
        android.app.Application $r9;
        com.android.internal.app.ActionBarImpl $r12, $r13;
        android.util.ArrayMap $r15;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.os.Bundle;

        $r5 = r0.<android.app.Activity: android.app.Activity$NonConfigurationInstances mLastNonConfigurationInstances>;

        if $r5 == null goto label1;

        $r14 = r0.<android.app.Activity: android.app.Activity$NonConfigurationInstances mLastNonConfigurationInstances>;

        $r15 = $r14.<android.app.Activity$NonConfigurationInstances: android.util.ArrayMap loaders>;

        r0.<android.app.Activity: android.util.ArrayMap mAllLoaderManagers> = $r15;

     label1:
        $r6 = r0.<android.app.Activity: android.content.pm.ActivityInfo mActivityInfo>;

        $r7 = $r6.<android.content.pm.ActivityInfo: java.lang.String parentActivityName>;

        if $r7 == null goto label2;

        $r12 = r0.<android.app.Activity: com.android.internal.app.ActionBarImpl mActionBar>;

        if $r12 != null goto label5;

        r0.<android.app.Activity: boolean mEnableDefaultActionBarUp> = 1;

     label2:
        if r1 == null goto label4;

        r2 = virtualinvoke r1.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("android:fragments");

        r3 = r0.<android.app.Activity: android.app.FragmentManagerImpl mFragments>;

        $r10 = r0.<android.app.Activity: android.app.Activity$NonConfigurationInstances mLastNonConfigurationInstances>;

        if $r10 == null goto label6;

        $r11 = r0.<android.app.Activity: android.app.Activity$NonConfigurationInstances mLastNonConfigurationInstances>;

        r4 = $r11.<android.app.Activity$NonConfigurationInstances: java.util.ArrayList fragments>;

     label3:
        virtualinvoke r3.<android.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>(r2, r4);

     label4:
        $r8 = r0.<android.app.Activity: android.app.FragmentManagerImpl mFragments>;

        virtualinvoke $r8.<android.app.FragmentManagerImpl: void dispatchCreate()>();

        $r9 = virtualinvoke r0.<android.app.Activity: android.app.Application getApplication()>();

        virtualinvoke $r9.<android.app.Application: void dispatchActivityCreated(android.app.Activity,android.os.Bundle)>(r0, r1);

        r0.<android.app.Activity: boolean mCalled> = 1;

        return;

     label5:
        $r13 = r0.<android.app.Activity: com.android.internal.app.ActionBarImpl mActionBar>;

        virtualinvoke $r13.<com.android.internal.app.ActionBarImpl: void setDefaultDisplayHomeAsUpEnabled(boolean)>(1);

        goto label2;

     label6:
        r4 = null;

        goto label3;
    }

    public void onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu$ContextMenuInfo)
    {
        android.app.Activity r0;
        android.view.ContextMenu r1;
        android.view.View r2;
        android.view.ContextMenu$ContextMenuInfo r3;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.ContextMenu;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.view.ContextMenu$ContextMenuInfo;

        return;
    }

    public java.lang.CharSequence onCreateDescription()
    {
        android.app.Activity r0;

        r0 := @this: android.app.Activity;

        return null;
    }

    protected android.app.Dialog onCreateDialog(int)
    {
        android.app.Activity r0;
        int i0;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        return null;
    }

    protected android.app.Dialog onCreateDialog(int, android.os.Bundle)
    {
        android.app.Activity r0;
        int i0;
        android.os.Bundle r1;
        android.app.Dialog $r2;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        $r2 = virtualinvoke r0.<android.app.Activity: android.app.Dialog onCreateDialog(int)>(i0);

        return $r2;
    }

    public void onCreateNavigateUpTaskStack(android.app.TaskStackBuilder)
    {
        android.app.Activity r0;
        android.app.TaskStackBuilder r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.app.TaskStackBuilder;

        virtualinvoke r1.<android.app.TaskStackBuilder: android.app.TaskStackBuilder addParentStack(android.app.Activity)>(r0);

        return;
    }

    public boolean onCreateOptionsMenu(android.view.Menu)
    {
        android.app.Activity r0, $r2, $r3;
        android.view.Menu r1;
        boolean $z0;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.Menu;

        $r2 = r0.<android.app.Activity: android.app.Activity mParent>;

        if $r2 == null goto label1;

        $r3 = r0.<android.app.Activity: android.app.Activity mParent>;

        $z0 = virtualinvoke $r3.<android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)>(r1);

        return $z0;

     label1:
        return 1;
    }

    public boolean onCreatePanelMenu(int, android.view.Menu)
    {
        android.app.Activity r0;
        int i0;
        android.view.Menu r1;
        boolean $z0, $z1, $z2;
        android.app.FragmentManagerImpl $r2;
        android.view.MenuInflater $r3;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.Menu;

        if i0 != 0 goto label1;

        $z0 = virtualinvoke r0.<android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)>(r1);

        $r2 = r0.<android.app.Activity: android.app.FragmentManagerImpl mFragments>;

        $r3 = virtualinvoke r0.<android.app.Activity: android.view.MenuInflater getMenuInflater()>();

        $z1 = virtualinvoke $r2.<android.app.FragmentManagerImpl: boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>(r1, $r3);

        $z2 = $z0 | $z1;

        return $z2;

     label1:
        return 0;
    }

    public android.view.View onCreatePanelView(int)
    {
        android.app.Activity r0;
        int i0;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        return null;
    }

    public boolean onCreateThumbnail(android.graphics.Bitmap, android.graphics.Canvas)
    {
        android.app.Activity r0;
        android.graphics.Bitmap r1;
        android.graphics.Canvas r2;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.graphics.Bitmap;

        r2 := @parameter1: android.graphics.Canvas;

        return 0;
    }

    public android.view.View onCreateView(android.view.View, java.lang.String, android.content.Context, android.util.AttributeSet)
    {
        android.app.Activity r0;
        android.view.View r1, $r11, $r14, $r15, $r16, $r18, $r62;
        java.lang.String r2, r5, r7, $r9, $r21, $r25, $r32, $r33, $r37, $r45, $r53, $r57, $r60;
        android.content.Context r3;
        android.util.AttributeSet r4;
        android.content.res.TypedArray r6;
        int i0, i1, i2;
        android.app.Fragment r8;
        boolean $z0, $z1, $z2, $z3;
        int[] $r10;
        android.app.FragmentManagerImpl $r12, $r41, $r43, $r51, $r52, $r54;
        java.lang.Object $r13;
        java.lang.IllegalStateException $r17;
        java.lang.StringBuilder $r19, $r20, $r23, $r24, $r26, $r28, $r29, $r30, $r31, $r34, $r35, $r36, $r38, $r39, $r40, $r44, $r46, $r47, $r48, $r49, $r50, $r55, $r56, $r59, $r61;
        android.os.Bundle $r22, $r42;
        java.lang.IllegalArgumentException $r27, $r58;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.Context;

        r4 := @parameter3: android.util.AttributeSet;

        $r9 = "fragment";

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 != 0 goto label01;

        $r62 = virtualinvoke r0.<android.app.Activity: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)>(r2, r3, r4);

        return $r62;

     label01:
        r5 = interfaceinvoke r4.<android.util.AttributeSet: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "class");

        $r10 = <com.android.internal.R$styleable: int[] Fragment>;

        r6 = virtualinvoke r3.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r4, $r10);

        if r5 != null goto label02;

        r5 = virtualinvoke r6.<android.content.res.TypedArray: java.lang.String getString(int)>(0);

     label02:
        i0 = virtualinvoke r6.<android.content.res.TypedArray: int getResourceId(int,int)>(1, -1);

        r7 = virtualinvoke r6.<android.content.res.TypedArray: java.lang.String getString(int)>(2);

        virtualinvoke r6.<android.content.res.TypedArray: void recycle()>();

        i1 = 0;

        if r1 == null goto label03;

        i1 = virtualinvoke r1.<android.view.View: int getId()>();

     label03:
        if i1 != -1 goto label04;

        if i0 != -1 goto label04;

        if r7 != null goto label04;

        $r58 = new java.lang.IllegalArgumentException;

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r60 = interfaceinvoke r4.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        $r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

        $r55 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Must specify unique android:id, android:tag, or have a parent with an id for ");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r58.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r57);

        throw $r58;

     label04:
        r8 = null;

        if i0 == -1 goto label05;

        $r52 = r0.<android.app.Activity: android.app.FragmentManagerImpl mFragments>;

        r8 = virtualinvoke $r52.<android.app.FragmentManagerImpl: android.app.Fragment findFragmentById(int)>(i0);

     label05:
        if r8 != null goto label06;

        if r7 == null goto label06;

        $r51 = r0.<android.app.Activity: android.app.FragmentManagerImpl mFragments>;

        r8 = virtualinvoke $r51.<android.app.FragmentManagerImpl: android.app.Fragment findFragmentByTag(java.lang.String)>(r7);

     label06:
        if r8 != null goto label07;

        if i1 == -1 goto label07;

        $r54 = r0.<android.app.Activity: android.app.FragmentManagerImpl mFragments>;

        r8 = virtualinvoke $r54.<android.app.FragmentManagerImpl: android.app.Fragment findFragmentById(int)>(i1);

     label07:
        $z1 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z1 == 0 goto label08;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onCreateView: id=0x");

        $r45 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r44 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r50 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" fname=");

        $r49 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r48 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" existing=");

        $r47 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r53 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("Activity", $r53);

     label08:
        if r8 != null goto label12;

        r8 = staticinvoke <android.app.Fragment: android.app.Fragment instantiate(android.content.Context,java.lang.String)>(r0, r5);

        r8.<android.app.Fragment: boolean mFromLayout> = 1;

        if i0 == 0 goto label11;

        i2 = i0;

     label09:
        r8.<android.app.Fragment: int mFragmentId> = i2;

        r8.<android.app.Fragment: int mContainerId> = i1;

        r8.<android.app.Fragment: java.lang.String mTag> = r7;

        r8.<android.app.Fragment: boolean mInLayout> = 1;

        $r43 = r0.<android.app.Activity: android.app.FragmentManagerImpl mFragments>;

        r8.<android.app.Fragment: android.app.FragmentManagerImpl mFragmentManager> = $r43;

        $r42 = r8.<android.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke r8.<android.app.Fragment: void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)>(r0, r4, $r42);

        $r41 = r0.<android.app.Activity: android.app.FragmentManagerImpl mFragments>;

        virtualinvoke $r41.<android.app.FragmentManagerImpl: void addFragment(android.app.Fragment,boolean)>(r8, 1);

     label10:
        $r11 = r8.<android.app.Fragment: android.view.View mView>;

        if $r11 != null goto label15;

        $r17 = new java.lang.IllegalStateException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment ");

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not create a view.");

        $r21 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r21);

        throw $r17;

     label11:
        i2 = i1;

        goto label09;

     label12:
        $z3 = r8.<android.app.Fragment: boolean mInLayout>;

        if $z3 == 0 goto label13;

        $r27 = new java.lang.IllegalArgumentException;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r25 = interfaceinvoke r4.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        $r26 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Duplicate id 0x");

        $r32 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r29 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", tag ");

        $r35 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", or parent id 0x");

        $r33 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i1);

        $r34 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r39 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with another fragment for ");

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r37);

        throw $r27;

     label13:
        r8.<android.app.Fragment: boolean mInLayout> = 1;

        $z2 = r8.<android.app.Fragment: boolean mRetaining>;

        if $z2 != 0 goto label14;

        $r22 = r8.<android.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke r8.<android.app.Fragment: void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)>(r0, r4, $r22);

     label14:
        $r12 = r0.<android.app.Activity: android.app.FragmentManagerImpl mFragments>;

        virtualinvoke $r12.<android.app.FragmentManagerImpl: void moveToState(android.app.Fragment)>(r8);

        goto label10;

     label15:
        if i0 == 0 goto label16;

        $r18 = r8.<android.app.Fragment: android.view.View mView>;

        virtualinvoke $r18.<android.view.View: void setId(int)>(i0);

     label16:
        $r14 = r8.<android.app.Fragment: android.view.View mView>;

        $r13 = virtualinvoke $r14.<android.view.View: java.lang.Object getTag()>();

        if $r13 != null goto label17;

        $r15 = r8.<android.app.Fragment: android.view.View mView>;

        virtualinvoke $r15.<android.view.View: void setTag(java.lang.Object)>(r7);

     label17:
        $r16 = r8.<android.app.Fragment: android.view.View mView>;

        return $r16;
    }

    public android.view.View onCreateView(java.lang.String, android.content.Context, android.util.AttributeSet)
    {
        android.app.Activity r0;
        java.lang.String r1;
        android.content.Context r2;
        android.util.AttributeSet r3;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: android.util.AttributeSet;

        return null;
    }

    protected void onDestroy()
    {
        android.app.Activity r0;
        java.util.ArrayList r1, $r6, $r7, $r12;
        java.lang.Throwable r2, $r19;
        int i0, i1, i2, i3;
        android.app.Activity$ManagedCursor r3;
        android.app.Activity$ManagedDialog r4;
        android.util.SparseArray $r5, $r13, $r15;
        android.app.SearchManager $r8, $r9;
        android.app.Application $r10;
        java.lang.Object $r11, $r17;
        android.database.Cursor $r14;
        android.app.Dialog $r16, $r18;
        boolean $z0;

        r0 := @this: android.app.Activity;

        r0.<android.app.Activity: boolean mCalled> = 1;

        $r5 = r0.<android.app.Activity: android.util.SparseArray mManagedDialogs>;

        if $r5 == null goto label04;

        $r13 = r0.<android.app.Activity: android.util.SparseArray mManagedDialogs>;

        i2 = virtualinvoke $r13.<android.util.SparseArray: int size()>();

        i3 = 0;

     label01:
        if i3 >= i2 goto label03;

        $r15 = r0.<android.app.Activity: android.util.SparseArray mManagedDialogs>;

        $r17 = virtualinvoke $r15.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        r4 = (android.app.Activity$ManagedDialog) $r17;

        $r16 = r4.<android.app.Activity$ManagedDialog: android.app.Dialog mDialog>;

        $z0 = virtualinvoke $r16.<android.app.Dialog: boolean isShowing()>();

        if $z0 == 0 goto label02;

        $r18 = r4.<android.app.Activity$ManagedDialog: android.app.Dialog mDialog>;

        virtualinvoke $r18.<android.app.Dialog: void dismiss()>();

     label02:
        i3 = i3 + 1;

        goto label01;

     label03:
        r0.<android.app.Activity: android.util.SparseArray mManagedDialogs> = null;

     label04:
        r1 = r0.<android.app.Activity: java.util.ArrayList mManagedCursors>;

        entermonitor r1;

     label05:
        $r6 = r0.<android.app.Activity: java.util.ArrayList mManagedCursors>;

        i0 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

     label06:
        i1 = 0;

     label07:
        if i1 >= i0 goto label12;

     label08:
        $r12 = r0.<android.app.Activity: java.util.ArrayList mManagedCursors>;

        $r11 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (android.app.Activity$ManagedCursor) $r11;

     label09:
        if r3 == null goto label18;

     label10:
        $r14 = staticinvoke <android.app.Activity$ManagedCursor: android.database.Cursor access$100(android.app.Activity$ManagedCursor)>(r3);

        interfaceinvoke $r14.<android.database.Cursor: void close()>();

     label11:
        goto label18;

     label12:
        $r7 = r0.<android.app.Activity: java.util.ArrayList mManagedCursors>;

        virtualinvoke $r7.<java.util.ArrayList: void clear()>();

        exitmonitor r1;

     label13:
        $r8 = r0.<android.app.Activity: android.app.SearchManager mSearchManager>;

        if $r8 == null goto label14;

        $r9 = r0.<android.app.Activity: android.app.SearchManager mSearchManager>;

        virtualinvoke $r9.<android.app.SearchManager: void stopSearch()>();

     label14:
        $r10 = virtualinvoke r0.<android.app.Activity: android.app.Application getApplication()>();

        virtualinvoke $r10.<android.app.Application: void dispatchActivityDestroyed(android.app.Activity)>(r0);

        return;

     label15:
        $r19 := @caughtexception;

        r2 = $r19;

     label16:
        exitmonitor r1;

     label17:
        throw r2;

     label18:
        i1 = i1 + 1;

        goto label07;

        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    public void onDetachedFromWindow()
    {
        android.app.Activity r0;

        r0 := @this: android.app.Activity;

        return;
    }

    public boolean onGenericMotionEvent(android.view.MotionEvent)
    {
        android.app.Activity r0;
        android.view.MotionEvent r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.MotionEvent;

        return 0;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        android.app.Activity r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        android.view.KeyEvent r1;
        boolean z0, z1, $z2, $z3;
        java.lang.String r2, $r16;
        android.content.Intent r3, $r11;
        android.text.SpannableStringBuilder $r4, $r5, $r6, $r8, $r9, $r10;
        android.text.method.TextKeyListener $r7;
        java.lang.StringBuilder $r12, $r13, $r14;
        android.net.Uri $r15;
        android.view.Window $r17;
        android.content.pm.ApplicationInfo $r19;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        if i0 != 4 goto label04;

        $r19 = virtualinvoke r0.<android.app.Activity: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i6 = $r19.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i6 < 5 goto label03;

        virtualinvoke r1.<android.view.KeyEvent: void startTracking()>();

     label01:
        z1 = 1;

     label02:
        return z1;

     label03:
        virtualinvoke r0.<android.app.Activity: void onBackPressed()>();

        goto label01;

     label04:
        $i2 = r0.<android.app.Activity: int mDefaultKeyMode>;

        if $i2 != 0 goto label05;

        return 0;

     label05:
        $i3 = r0.<android.app.Activity: int mDefaultKeyMode>;

        if $i3 != 2 goto label07;

        $r17 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        $z3 = virtualinvoke $r17.<android.view.Window: boolean performPanelShortcut(int,int,android.view.KeyEvent,int)>(0, i0, r1, 2);

        if $z3 == 0 goto label06;

        return 1;

     label06:
        return 0;

     label07:
        $i4 = virtualinvoke r1.<android.view.KeyEvent: int getRepeatCount()>();

        if $i4 != 0 goto label08;

        $z2 = virtualinvoke r1.<android.view.KeyEvent: boolean isSystem()>();

        if $z2 == 0 goto label10;

     label08:
        z0 = 1;

        z1 = 0;

     label09:
        if z0 == 0 goto label02;

        $r4 = r0.<android.app.Activity: android.text.SpannableStringBuilder mDefaultKeySsb>;

        virtualinvoke $r4.<android.text.SpannableStringBuilder: void clear()>();

        $r5 = r0.<android.app.Activity: android.text.SpannableStringBuilder mDefaultKeySsb>;

        virtualinvoke $r5.<android.text.SpannableStringBuilder: void clearSpans()>();

        $r6 = r0.<android.app.Activity: android.text.SpannableStringBuilder mDefaultKeySsb>;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int)>($r6, 0);

        return z1;

     label10:
        $r7 = staticinvoke <android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance()>();

        $r8 = r0.<android.app.Activity: android.text.SpannableStringBuilder mDefaultKeySsb>;

        z1 = virtualinvoke $r7.<android.text.method.TextKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>(null, $r8, i0, r1);

        z0 = 0;

        if z1 == 0 goto label09;

        $r9 = r0.<android.app.Activity: android.text.SpannableStringBuilder mDefaultKeySsb>;

        i1 = virtualinvoke $r9.<android.text.SpannableStringBuilder: int length()>();

        z0 = 0;

        if i1 <= 0 goto label09;

        $r10 = r0.<android.app.Activity: android.text.SpannableStringBuilder mDefaultKeySsb>;

        r2 = virtualinvoke $r10.<android.text.SpannableStringBuilder: java.lang.String toString()>();

        z0 = 1;

        $i5 = r0.<android.app.Activity: int mDefaultKeyMode>;

        tableswitch($i5)
        {
            case 1: goto label12;
            case 2: goto label11;
            case 3: goto label13;
            case 4: goto label14;
            default: goto label11;
        };

     label11:
        goto label09;

     label12:
        $r11 = new android.content.Intent;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tel:");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r16);

        specialinvoke $r11.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.DIAL", $r15);

        r3 = $r11;

        virtualinvoke r3.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

        virtualinvoke r0.<android.app.Activity: void startActivity(android.content.Intent)>(r3);

        goto label09;

     label13:
        virtualinvoke r0.<android.app.Activity: void startSearch(java.lang.String,boolean,android.os.Bundle,boolean)>(r2, 0, null, 0);

        goto label09;

     label14:
        virtualinvoke r0.<android.app.Activity: void startSearch(java.lang.String,boolean,android.os.Bundle,boolean)>(r2, 0, null, 1);

        goto label09;
    }

    public boolean onKeyLongPress(int, android.view.KeyEvent)
    {
        android.app.Activity r0;
        int i0;
        android.view.KeyEvent r1;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        return 0;
    }

    public boolean onKeyMultiple(int, int, android.view.KeyEvent)
    {
        android.app.Activity r0;
        int i0, i1;
        android.view.KeyEvent r1;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.view.KeyEvent;

        return 0;
    }

    public boolean onKeyShortcut(int, android.view.KeyEvent)
    {
        android.app.Activity r0;
        int i0;
        android.view.KeyEvent r1;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        return 0;
    }

    public boolean onKeyUp(int, android.view.KeyEvent)
    {
        android.app.Activity r0;
        int i0, $i1;
        android.view.KeyEvent r1;
        android.content.pm.ApplicationInfo $r2;
        boolean $z0, $z1;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        $r2 = virtualinvoke r0.<android.app.Activity: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i1 = $r2.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i1 < 5 goto label1;

        if i0 != 4 goto label1;

        $z0 = virtualinvoke r1.<android.view.KeyEvent: boolean isTracking()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r1.<android.view.KeyEvent: boolean isCanceled()>();

        if $z1 != 0 goto label1;

        virtualinvoke r0.<android.app.Activity: void onBackPressed()>();

        return 1;

     label1:
        return 0;
    }

    public void onLowMemory()
    {
        android.app.Activity r0;
        android.app.FragmentManagerImpl $r1;

        r0 := @this: android.app.Activity;

        r0.<android.app.Activity: boolean mCalled> = 1;

        $r1 = r0.<android.app.Activity: android.app.FragmentManagerImpl mFragments>;

        virtualinvoke $r1.<android.app.FragmentManagerImpl: void dispatchLowMemory()>();

        return;
    }

    public boolean onMenuItemSelected(int, android.view.MenuItem)
    {
        android.app.Activity r0, $r11, $r12;
        int i0, $i2, $i3, $i4, i6, i7, i8;
        android.view.MenuItem r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.CharSequence r2;
        java.lang.Object[] r3, r4;
        android.app.FragmentManagerImpl $r5, $r8;
        java.lang.Integer $r6, $r14;
        java.lang.String $r7, $r13;
        com.android.internal.app.ActionBarImpl $r9, $r10;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.MenuItem;

        z0 = 1;

        r2 = interfaceinvoke r1.<android.view.MenuItem: java.lang.CharSequence getTitleCondensed()>();

        lookupswitch(i0)
        {
            case 0: goto label3;
            case 6: goto label7;
            default: goto label1;
        };

     label1:
        z0 = 0;

     label2:
        return z0;

     label3:
        if r2 == null goto label4;

        r4 = newarray (java.lang.Object)[2];

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        r4[0] = $r14;

        $r13 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        i6 = (int) 1;

        r4[i6] = $r13;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(50000, r4);

     label4:
        $z3 = virtualinvoke r0.<android.app.Activity: boolean onOptionsItemSelected(android.view.MenuItem)>(r1);

        if $z3 != 0 goto label2;

        $r8 = r0.<android.app.Activity: android.app.FragmentManagerImpl mFragments>;

        $z4 = virtualinvoke $r8.<android.app.FragmentManagerImpl: boolean dispatchOptionsItemSelected(android.view.MenuItem)>(r1);

        if $z4 != 0 goto label2;

        $i2 = interfaceinvoke r1.<android.view.MenuItem: int getItemId()>();

        if $i2 != 16908332 goto label6;

        $r10 = r0.<android.app.Activity: com.android.internal.app.ActionBarImpl mActionBar>;

        if $r10 == null goto label6;

        $r9 = r0.<android.app.Activity: com.android.internal.app.ActionBarImpl mActionBar>;

        $i3 = virtualinvoke $r9.<com.android.internal.app.ActionBarImpl: int getDisplayOptions()>();

        $i4 = 4 & $i3;

        if $i4 == 0 goto label6;

        $r11 = r0.<android.app.Activity: android.app.Activity mParent>;

        if $r11 != null goto label5;

        $z6 = virtualinvoke r0.<android.app.Activity: boolean onNavigateUp()>();

        return $z6;

     label5:
        $r12 = r0.<android.app.Activity: android.app.Activity mParent>;

        $z5 = virtualinvoke $r12.<android.app.Activity: boolean onNavigateUpFromChild(android.app.Activity)>(r0);

        return $z5;

     label6:
        return 0;

     label7:
        if r2 == null goto label8;

        r3 = newarray (java.lang.Object)[2];

        i7 = (int) 1;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7);

        r3[0] = $r6;

        $r7 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        i8 = (int) 1;

        r3[i8] = $r7;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(50000, r3);

     label8:
        $z1 = virtualinvoke r0.<android.app.Activity: boolean onContextItemSelected(android.view.MenuItem)>(r1);

        if $z1 != 0 goto label2;

        $r5 = r0.<android.app.Activity: android.app.FragmentManagerImpl mFragments>;

        $z2 = virtualinvoke $r5.<android.app.FragmentManagerImpl: boolean dispatchContextItemSelected(android.view.MenuItem)>(r1);

        return $z2;
    }

    public boolean onMenuOpened(int, android.view.Menu)
    {
        android.app.Activity r0;
        int i0;
        android.view.Menu r1;
        com.android.internal.app.ActionBarImpl $r2, $r3;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.Menu;

        if i0 != 8 goto label1;

        specialinvoke r0.<android.app.Activity: void initActionBar()>();

        $r2 = r0.<android.app.Activity: com.android.internal.app.ActionBarImpl mActionBar>;

        if $r2 == null goto label2;

        $r3 = r0.<android.app.Activity: com.android.internal.app.ActionBarImpl mActionBar>;

        virtualinvoke $r3.<com.android.internal.app.ActionBarImpl: void dispatchMenuVisibilityChanged(boolean)>(1);

     label1:
        return 1;

     label2:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Activity", "Tried to open action bar menu with no action bar");

        return 1;
    }

    public boolean onNavigateUp()
    {
        android.app.Activity r0;
        android.content.Intent r1, $r5;
        android.app.TaskStackBuilder r2;
        android.content.pm.ActivityInfo $r3;
        java.lang.String $r4;
        boolean $z0;
        int $i0;

        r0 := @this: android.app.Activity;

        r1 = virtualinvoke r0.<android.app.Activity: android.content.Intent getParentActivityIntent()>();

        if r1 == null goto label6;

        $r3 = r0.<android.app.Activity: android.content.pm.ActivityInfo mActivityInfo>;

        $r4 = $r3.<android.content.pm.ActivityInfo: java.lang.String taskAffinity>;

        if $r4 != null goto label2;

        virtualinvoke r0.<android.app.Activity: void finish()>();

     label1:
        return 1;

     label2:
        $z0 = virtualinvoke r0.<android.app.Activity: boolean shouldUpRecreateTask(android.content.Intent)>(r1);

        if $z0 == 0 goto label5;

        r2 = staticinvoke <android.app.TaskStackBuilder: android.app.TaskStackBuilder create(android.content.Context)>(r0);

        virtualinvoke r0.<android.app.Activity: void onCreateNavigateUpTaskStack(android.app.TaskStackBuilder)>(r2);

        virtualinvoke r0.<android.app.Activity: void onPrepareNavigateUpTaskStack(android.app.TaskStackBuilder)>(r2);

        virtualinvoke r2.<android.app.TaskStackBuilder: void startActivities()>();

        $i0 = r0.<android.app.Activity: int mResultCode>;

        if $i0 != 0 goto label3;

        $r5 = r0.<android.app.Activity: android.content.Intent mResultData>;

        if $r5 == null goto label4;

     label3:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Activity", "onNavigateUp only finishing topmost activity to return a result");

        virtualinvoke r0.<android.app.Activity: void finish()>();

        goto label1;

     label4:
        virtualinvoke r0.<android.app.Activity: void finishAffinity()>();

        goto label1;

     label5:
        virtualinvoke r0.<android.app.Activity: boolean navigateUpTo(android.content.Intent)>(r1);

        goto label1;

     label6:
        return 0;
    }

    public boolean onNavigateUpFromChild(android.app.Activity)
    {
        android.app.Activity r0, r1;
        boolean $z0;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.app.Activity;

        $z0 = virtualinvoke r0.<android.app.Activity: boolean onNavigateUp()>();

        return $z0;
    }

    protected void onNewIntent(android.content.Intent)
    {
        android.app.Activity r0;
        android.content.Intent r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.Intent;

        return;
    }

    public boolean onOptionsItemSelected(android.view.MenuItem)
    {
        android.app.Activity r0, $r2, $r3;
        android.view.MenuItem r1;
        boolean $z0;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.MenuItem;

        $r2 = r0.<android.app.Activity: android.app.Activity mParent>;

        if $r2 == null goto label1;

        $r3 = r0.<android.app.Activity: android.app.Activity mParent>;

        $z0 = virtualinvoke $r3.<android.app.Activity: boolean onOptionsItemSelected(android.view.MenuItem)>(r1);

        return $z0;

     label1:
        return 0;
    }

    public void onOptionsMenuClosed(android.view.Menu)
    {
        android.app.Activity r0, $r2, $r3;
        android.view.Menu r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.Menu;

        $r2 = r0.<android.app.Activity: android.app.Activity mParent>;

        if $r2 == null goto label1;

        $r3 = r0.<android.app.Activity: android.app.Activity mParent>;

        virtualinvoke $r3.<android.app.Activity: void onOptionsMenuClosed(android.view.Menu)>(r1);

     label1:
        return;
    }

    public void onPanelClosed(int, android.view.Menu)
    {
        android.app.Activity r0;
        int i0;
        android.view.Menu r1;
        com.android.internal.app.ActionBarImpl $r2;
        android.app.FragmentManagerImpl $r3;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.Menu;

        lookupswitch(i0)
        {
            case 0: goto label2;
            case 6: goto label3;
            case 8: goto label4;
            default: goto label1;
        };

     label1:
        return;

     label2:
        $r3 = r0.<android.app.Activity: android.app.FragmentManagerImpl mFragments>;

        virtualinvoke $r3.<android.app.FragmentManagerImpl: void dispatchOptionsMenuClosed(android.view.Menu)>(r1);

        virtualinvoke r0.<android.app.Activity: void onOptionsMenuClosed(android.view.Menu)>(r1);

        return;

     label3:
        virtualinvoke r0.<android.app.Activity: void onContextMenuClosed(android.view.Menu)>(r1);

        return;

     label4:
        specialinvoke r0.<android.app.Activity: void initActionBar()>();

        $r2 = r0.<android.app.Activity: com.android.internal.app.ActionBarImpl mActionBar>;

        virtualinvoke $r2.<com.android.internal.app.ActionBarImpl: void dispatchMenuVisibilityChanged(boolean)>(0);

        return;
    }

    protected void onPause()
    {
        android.app.Activity r0;
        android.app.Application $r1;

        r0 := @this: android.app.Activity;

        $r1 = virtualinvoke r0.<android.app.Activity: android.app.Application getApplication()>();

        virtualinvoke $r1.<android.app.Application: void dispatchActivityPaused(android.app.Activity)>(r0);

        r0.<android.app.Activity: boolean mCalled> = 1;

        return;
    }

    protected void onPostCreate(android.os.Bundle)
    {
        android.app.Activity r0;
        android.os.Bundle r1;
        boolean $z0;
        java.lang.CharSequence $r2;
        int $i0;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.os.Bundle;

        $z0 = virtualinvoke r0.<android.app.Activity: boolean isChild()>();

        if $z0 != 0 goto label1;

        r0.<android.app.Activity: boolean mTitleReady> = 1;

        $r2 = virtualinvoke r0.<android.app.Activity: java.lang.CharSequence getTitle()>();

        $i0 = virtualinvoke r0.<android.app.Activity: int getTitleColor()>();

        virtualinvoke r0.<android.app.Activity: void onTitleChanged(java.lang.CharSequence,int)>($r2, $i0);

     label1:
        r0.<android.app.Activity: boolean mCalled> = 1;

        return;
    }

    protected void onPostResume()
    {
        android.app.Activity r0;
        android.view.Window r1;
        com.android.internal.app.ActionBarImpl $r2, $r3;

        r0 := @this: android.app.Activity;

        r1 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.Window: void makeActive()>();

     label1:
        $r2 = r0.<android.app.Activity: com.android.internal.app.ActionBarImpl mActionBar>;

        if $r2 == null goto label2;

        $r3 = r0.<android.app.Activity: com.android.internal.app.ActionBarImpl mActionBar>;

        virtualinvoke $r3.<com.android.internal.app.ActionBarImpl: void setShowHideAnimationEnabled(boolean)>(1);

     label2:
        r0.<android.app.Activity: boolean mCalled> = 1;

        return;
    }

    protected void onPrepareDialog(int, android.app.Dialog)
    {
        android.app.Activity r0;
        int i0;
        android.app.Dialog r1;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.app.Dialog;

        virtualinvoke r1.<android.app.Dialog: void setOwnerActivity(android.app.Activity)>(r0);

        return;
    }

    protected void onPrepareDialog(int, android.app.Dialog, android.os.Bundle)
    {
        android.app.Activity r0;
        int i0;
        android.app.Dialog r1;
        android.os.Bundle r2;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.app.Dialog;

        r2 := @parameter2: android.os.Bundle;

        virtualinvoke r0.<android.app.Activity: void onPrepareDialog(int,android.app.Dialog)>(i0, r1);

        return;
    }

    public void onPrepareNavigateUpTaskStack(android.app.TaskStackBuilder)
    {
        android.app.Activity r0;
        android.app.TaskStackBuilder r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.app.TaskStackBuilder;

        return;
    }

    public boolean onPrepareOptionsMenu(android.view.Menu)
    {
        android.app.Activity r0, $r2, $r3;
        android.view.Menu r1;
        boolean $z0;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.Menu;

        $r2 = r0.<android.app.Activity: android.app.Activity mParent>;

        if $r2 == null goto label1;

        $r3 = r0.<android.app.Activity: android.app.Activity mParent>;

        $z0 = virtualinvoke $r3.<android.app.Activity: boolean onPrepareOptionsMenu(android.view.Menu)>(r1);

        return $z0;

     label1:
        return 1;
    }

    public boolean onPreparePanel(int, android.view.View, android.view.Menu)
    {
        android.app.Activity r0;
        int i0;
        android.view.View r1;
        android.view.Menu r2;
        boolean $z0, $z1, $z2;
        android.app.FragmentManagerImpl $r3;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.View;

        r2 := @parameter2: android.view.Menu;

        if i0 != 0 goto label1;

        if r2 == null goto label1;

        $z0 = virtualinvoke r0.<android.app.Activity: boolean onPrepareOptionsMenu(android.view.Menu)>(r2);

        $r3 = r0.<android.app.Activity: android.app.FragmentManagerImpl mFragments>;

        $z1 = virtualinvoke $r3.<android.app.FragmentManagerImpl: boolean dispatchPrepareOptionsMenu(android.view.Menu)>(r2);

        $z2 = $z0 | $z1;

        return $z2;

     label1:
        return 1;
    }

    public void onProvideAssistData(android.os.Bundle)
    {
        android.app.Activity r0;
        android.os.Bundle r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.os.Bundle;

        return;
    }

    protected void onRestart()
    {
        android.app.Activity r0;

        r0 := @this: android.app.Activity;

        r0.<android.app.Activity: boolean mCalled> = 1;

        return;
    }

    protected void onRestoreInstanceState(android.os.Bundle)
    {
        android.app.Activity r0;
        android.os.Bundle r1, r2;
        android.view.Window $r3, $r4;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.os.Bundle;

        $r3 = r0.<android.app.Activity: android.view.Window mWindow>;

        if $r3 == null goto label1;

        r2 = virtualinvoke r1.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>("android:viewHierarchyState");

        if r2 == null goto label1;

        $r4 = r0.<android.app.Activity: android.view.Window mWindow>;

        virtualinvoke $r4.<android.view.Window: void restoreHierarchyState(android.os.Bundle)>(r2);

     label1:
        return;
    }

    protected void onResume()
    {
        android.app.Activity r0;
        android.app.Application $r1;

        r0 := @this: android.app.Activity;

        $r1 = virtualinvoke r0.<android.app.Activity: android.app.Application getApplication()>();

        virtualinvoke $r1.<android.app.Application: void dispatchActivityResumed(android.app.Activity)>(r0);

        r0.<android.app.Activity: boolean mCalled> = 1;

        return;
    }

    java.util.HashMap onRetainNonConfigurationChildInstances()
    {
        android.app.Activity r0;

        r0 := @this: android.app.Activity;

        return null;
    }

    public java.lang.Object onRetainNonConfigurationInstance()
    {
        android.app.Activity r0;

        r0 := @this: android.app.Activity;

        return null;
    }

    protected void onSaveInstanceState(android.os.Bundle)
    {
        android.app.Activity r0;
        android.os.Bundle r1, $r4;
        android.os.Parcelable r2;
        android.view.Window $r3;
        android.app.FragmentManagerImpl $r5;
        android.app.Application $r6;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.os.Bundle;

        $r3 = r0.<android.app.Activity: android.view.Window mWindow>;

        $r4 = virtualinvoke $r3.<android.view.Window: android.os.Bundle saveHierarchyState()>();

        virtualinvoke r1.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>("android:viewHierarchyState", $r4);

        $r5 = r0.<android.app.Activity: android.app.FragmentManagerImpl mFragments>;

        r2 = virtualinvoke $r5.<android.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>();

        if r2 == null goto label1;

        virtualinvoke r1.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("android:fragments", r2);

     label1:
        $r6 = virtualinvoke r0.<android.app.Activity: android.app.Application getApplication()>();

        virtualinvoke $r6.<android.app.Application: void dispatchActivitySaveInstanceState(android.app.Activity,android.os.Bundle)>(r0, r1);

        return;
    }

    public boolean onSearchRequested()
    {
        android.app.Activity r0;

        r0 := @this: android.app.Activity;

        virtualinvoke r0.<android.app.Activity: void startSearch(java.lang.String,boolean,android.os.Bundle,boolean)>(null, 0, null, 0);

        return 1;
    }

    protected void onStart()
    {
        android.app.Activity r0;
        boolean $z0, $z1, $z2;
        android.app.Application $r1;
        android.app.LoaderManagerImpl $r2, $r3, $r4;

        r0 := @this: android.app.Activity;

        r0.<android.app.Activity: boolean mCalled> = 1;

        $z0 = r0.<android.app.Activity: boolean mLoadersStarted>;

        if $z0 != 0 goto label2;

        r0.<android.app.Activity: boolean mLoadersStarted> = 1;

        $r2 = r0.<android.app.Activity: android.app.LoaderManagerImpl mLoaderManager>;

        if $r2 == null goto label3;

        $r4 = r0.<android.app.Activity: android.app.LoaderManagerImpl mLoaderManager>;

        virtualinvoke $r4.<android.app.LoaderManagerImpl: void doStart()>();

     label1:
        r0.<android.app.Activity: boolean mCheckedForLoaderManager> = 1;

     label2:
        $r1 = virtualinvoke r0.<android.app.Activity: android.app.Application getApplication()>();

        virtualinvoke $r1.<android.app.Application: void dispatchActivityStarted(android.app.Activity)>(r0);

        return;

     label3:
        $z1 = r0.<android.app.Activity: boolean mCheckedForLoaderManager>;

        if $z1 != 0 goto label1;

        $z2 = r0.<android.app.Activity: boolean mLoadersStarted>;

        $r3 = virtualinvoke r0.<android.app.Activity: android.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean)>("(root)", $z2, 0);

        r0.<android.app.Activity: android.app.LoaderManagerImpl mLoaderManager> = $r3;

        goto label1;
    }

    protected void onStop()
    {
        android.app.Activity r0;
        com.android.internal.app.ActionBarImpl $r1, $r3;
        android.app.Application $r2;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: com.android.internal.app.ActionBarImpl mActionBar>;

        if $r1 == null goto label1;

        $r3 = r0.<android.app.Activity: com.android.internal.app.ActionBarImpl mActionBar>;

        virtualinvoke $r3.<com.android.internal.app.ActionBarImpl: void setShowHideAnimationEnabled(boolean)>(0);

     label1:
        $r2 = virtualinvoke r0.<android.app.Activity: android.app.Application getApplication()>();

        virtualinvoke $r2.<android.app.Application: void dispatchActivityStopped(android.app.Activity)>(r0);

        r0.<android.app.Activity: android.app.Activity$TranslucentConversionListener mTranslucentCallback> = null;

        r0.<android.app.Activity: boolean mCalled> = 1;

        return;
    }

    protected void onTitleChanged(java.lang.CharSequence, int)
    {
        android.app.Activity r0;
        java.lang.CharSequence r1;
        int i0;
        android.view.Window r2;
        boolean $z0;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        $z0 = r0.<android.app.Activity: boolean mTitleReady>;

        if $z0 == 0 goto label1;

        r2 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        if r2 == null goto label1;

        virtualinvoke r2.<android.view.Window: void setTitle(java.lang.CharSequence)>(r1);

        if i0 == 0 goto label1;

        virtualinvoke r2.<android.view.Window: void setTitleColor(int)>(i0);

     label1:
        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.app.Activity r0;
        android.view.MotionEvent r1;
        android.view.Window $r2;
        boolean $z0;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<android.app.Activity: android.view.Window mWindow>;

        $z0 = virtualinvoke $r2.<android.view.Window: boolean shouldCloseOnTouch(android.content.Context,android.view.MotionEvent)>(r0, r1);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.app.Activity: void finish()>();

        return 1;

     label1:
        return 0;
    }

    public boolean onTrackballEvent(android.view.MotionEvent)
    {
        android.app.Activity r0;
        android.view.MotionEvent r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.MotionEvent;

        return 0;
    }

    void onTranslucentConversionComplete(boolean)
    {
        android.app.Activity r0;
        boolean z0, $z1;
        android.app.Activity$TranslucentConversionListener $r1, $r4;
        android.view.WindowManagerGlobal $r2;
        android.os.IBinder $r3;

        r0 := @this: android.app.Activity;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.app.Activity: android.app.Activity$TranslucentConversionListener mTranslucentCallback>;

        if $r1 == null goto label1;

        $r4 = r0.<android.app.Activity: android.app.Activity$TranslucentConversionListener mTranslucentCallback>;

        interfaceinvoke $r4.<android.app.Activity$TranslucentConversionListener: void onTranslucentConversionComplete(boolean)>(z0);

        r0.<android.app.Activity: android.app.Activity$TranslucentConversionListener mTranslucentCallback> = null;

     label1:
        $z1 = r0.<android.app.Activity: boolean mChangeCanvasToTranslucent>;

        if $z1 == 0 goto label2;

        $r2 = staticinvoke <android.view.WindowManagerGlobal: android.view.WindowManagerGlobal getInstance()>();

        $r3 = r0.<android.app.Activity: android.os.IBinder mToken>;

        virtualinvoke $r2.<android.view.WindowManagerGlobal: void changeCanvasOpacity(android.os.IBinder,boolean)>($r3, 0);

     label2:
        return;
    }

    public void onTrimMemory(int)
    {
        android.app.Activity r0;
        int i0;
        android.app.FragmentManagerImpl $r1;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r0.<android.app.Activity: boolean mCalled> = 1;

        $r1 = r0.<android.app.Activity: android.app.FragmentManagerImpl mFragments>;

        virtualinvoke $r1.<android.app.FragmentManagerImpl: void dispatchTrimMemory(int)>(i0);

        return;
    }

    public void onUserInteraction()
    {
        android.app.Activity r0;

        r0 := @this: android.app.Activity;

        return;
    }

    protected void onUserLeaveHint()
    {
        android.app.Activity r0;

        r0 := @this: android.app.Activity;

        return;
    }

    public void onWindowAttributesChanged(android.view.WindowManager$LayoutParams)
    {
        android.app.Activity r0, $r3;
        android.view.WindowManager$LayoutParams r1;
        android.view.View r2;
        android.view.ViewParent $r4;
        android.view.WindowManager $r5;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.WindowManager$LayoutParams;

        $r3 = r0.<android.app.Activity: android.app.Activity mParent>;

        if $r3 != null goto label1;

        r2 = r0.<android.app.Activity: android.view.View mDecor>;

        if r2 == null goto label1;

        $r4 = virtualinvoke r2.<android.view.View: android.view.ViewParent getParent()>();

        if $r4 == null goto label1;

        $r5 = virtualinvoke r0.<android.app.Activity: android.view.WindowManager getWindowManager()>();

        interfaceinvoke $r5.<android.view.WindowManager: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>(r2, r1);

     label1:
        return;
    }

    public void onWindowFocusChanged(boolean)
    {
        android.app.Activity r0;
        boolean z0;

        r0 := @this: android.app.Activity;

        z0 := @parameter0: boolean;

        return;
    }

    public android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback)
    {
        android.app.Activity r0;
        android.view.ActionMode$Callback r1;
        com.android.internal.app.ActionBarImpl $r2, $r3;
        android.view.ActionMode $r4;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.ActionMode$Callback;

        specialinvoke r0.<android.app.Activity: void initActionBar()>();

        $r2 = r0.<android.app.Activity: com.android.internal.app.ActionBarImpl mActionBar>;

        if $r2 == null goto label1;

        $r3 = r0.<android.app.Activity: com.android.internal.app.ActionBarImpl mActionBar>;

        $r4 = virtualinvoke $r3.<com.android.internal.app.ActionBarImpl: android.view.ActionMode startActionMode(android.view.ActionMode$Callback)>(r1);

        return $r4;

     label1:
        return null;
    }

    public void openContextMenu(android.view.View)
    {
        android.app.Activity r0;
        android.view.View r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.View;

        virtualinvoke r1.<android.view.View: boolean showContextMenu()>();

        return;
    }

    public void openOptionsMenu()
    {
        android.app.Activity r0;
        android.view.Window $r1;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.view.Window mWindow>;

        virtualinvoke $r1.<android.view.Window: void openPanel(int,android.view.KeyEvent)>(0, null);

        return;
    }

    public void overridePendingTransition(int, int)
    {
        android.app.Activity r0;
        int i0, i1;
        android.app.IActivityManager $r2;
        android.os.IBinder $r3;
        java.lang.String $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

     label1:
        $r2 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r3 = r0.<android.app.Activity: android.os.IBinder mToken>;

        $r4 = virtualinvoke r0.<android.app.Activity: java.lang.String getPackageName()>();

        interfaceinvoke $r2.<android.app.IActivityManager: void overridePendingTransition(android.os.IBinder,java.lang.String,int,int)>($r3, $r4, i0, i1);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    final void performCreate(android.os.Bundle)
    {
        android.app.Activity r0;
        android.os.Bundle r1;
        boolean z0, z1;
        android.view.Window $r2;
        android.content.res.TypedArray $r3;
        android.app.FragmentManagerImpl $r4;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.os.Bundle;

        virtualinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>(r1);

        $r2 = r0.<android.app.Activity: android.view.Window mWindow>;

        $r3 = virtualinvoke $r2.<android.view.Window: android.content.res.TypedArray getWindowStyle()>();

        z0 = virtualinvoke $r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(10, 0);

        z1 = 0;

        if z0 != 0 goto label1;

        z1 = 1;

     label1:
        r0.<android.app.Activity: boolean mVisibleFromClient> = z1;

        $r4 = r0.<android.app.Activity: android.app.FragmentManagerImpl mFragments>;

        virtualinvoke $r4.<android.app.FragmentManagerImpl: void dispatchActivityCreated()>();

        return;
    }

    final void performDestroy()
    {
        android.app.Activity r0;
        android.view.Window $r1;
        android.app.FragmentManagerImpl $r2;
        android.app.LoaderManagerImpl $r3, $r4;

        r0 := @this: android.app.Activity;

        r0.<android.app.Activity: boolean mDestroyed> = 1;

        $r1 = r0.<android.app.Activity: android.view.Window mWindow>;

        virtualinvoke $r1.<android.view.Window: void destroy()>();

        $r2 = r0.<android.app.Activity: android.app.FragmentManagerImpl mFragments>;

        virtualinvoke $r2.<android.app.FragmentManagerImpl: void dispatchDestroy()>();

        virtualinvoke r0.<android.app.Activity: void onDestroy()>();

        $r3 = r0.<android.app.Activity: android.app.LoaderManagerImpl mLoaderManager>;

        if $r3 == null goto label1;

        $r4 = r0.<android.app.Activity: android.app.LoaderManagerImpl mLoaderManager>;

        virtualinvoke $r4.<android.app.LoaderManagerImpl: void doDestroy()>();

     label1:
        return;
    }

    final void performPause()
    {
        android.app.Activity r0;
        android.app.FragmentManagerImpl $r1;
        boolean $z0;
        android.content.pm.ApplicationInfo $r2;
        int $i0;
        android.util.SuperNotCalledException $r3;
        java.lang.StringBuilder $r4, $r5, $r8, $r9;
        android.content.ComponentName $r6;
        java.lang.String $r7, $r10;

        r0 := @this: android.app.Activity;

        r0.<android.app.Activity: boolean mDoReportFullyDrawn> = 0;

        $r1 = r0.<android.app.Activity: android.app.FragmentManagerImpl mFragments>;

        virtualinvoke $r1.<android.app.FragmentManagerImpl: void dispatchPause()>();

        r0.<android.app.Activity: boolean mCalled> = 0;

        virtualinvoke r0.<android.app.Activity: void onPause()>();

        r0.<android.app.Activity: boolean mResumed> = 0;

        $z0 = r0.<android.app.Activity: boolean mCalled>;

        if $z0 != 0 goto label1;

        $r2 = virtualinvoke r0.<android.app.Activity: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i0 = $r2.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i0 < 9 goto label1;

        $r3 = new android.util.SuperNotCalledException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity ");

        $r6 = r0.<android.app.Activity: android.content.ComponentName mComponent>;

        $r7 = virtualinvoke $r6.<android.content.ComponentName: java.lang.String toShortString()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not call through to super.onPause()");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<android.util.SuperNotCalledException: void <init>(java.lang.String)>($r10);

        throw $r3;

     label1:
        r0.<android.app.Activity: boolean mResumed> = 0;

        return;
    }

    final void performRestart()
    {
        android.app.Activity r0, $r24;
        java.util.ArrayList r1, $r6, $r15;
        java.lang.Throwable r2, $r27;
        int i0, i1, $i2;
        android.app.Activity$ManagedCursor r3;
        android.app.FragmentManagerImpl $r4;
        boolean $z0, $z1, $z2, $z3, $z6;
        android.os.IBinder $r5, $r29;
        android.app.Instrumentation $r7;
        android.util.SuperNotCalledException $r8;
        java.lang.StringBuilder $r9, $r10, $r13, $r14, $r20, $r23, $r25;
        java.lang.String $r11, $r16, $r26;
        android.content.ComponentName $r12;
        java.lang.Object $r17;
        android.database.Cursor $r18, $r21;
        android.content.pm.ApplicationInfo $r19;
        java.lang.IllegalStateException $r22;
        android.view.WindowManagerGlobal $r28;

        r0 := @this: android.app.Activity;

        $r4 = r0.<android.app.Activity: android.app.FragmentManagerImpl mFragments>;

        virtualinvoke $r4.<android.app.FragmentManagerImpl: void noteStateNotSaved()>();

        $z0 = r0.<android.app.Activity: boolean mStopped>;

        if $z0 == 0 goto label15;

        r0.<android.app.Activity: boolean mStopped> = 0;

        $r5 = r0.<android.app.Activity: android.os.IBinder mToken>;

        if $r5 == null goto label01;

        $r24 = r0.<android.app.Activity: android.app.Activity mParent>;

        if $r24 != null goto label01;

        $r28 = staticinvoke <android.view.WindowManagerGlobal: android.view.WindowManagerGlobal getInstance()>();

        $r29 = r0.<android.app.Activity: android.os.IBinder mToken>;

        virtualinvoke $r28.<android.view.WindowManagerGlobal: void setStoppedState(android.os.IBinder,boolean)>($r29, 0);

     label01:
        r1 = r0.<android.app.Activity: java.util.ArrayList mManagedCursors>;

        entermonitor r1;

     label02:
        $r6 = r0.<android.app.Activity: java.util.ArrayList mManagedCursors>;

        i0 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

     label03:
        i1 = 0;

     label04:
        if i1 >= i0 goto label12;

     label05:
        $r15 = r0.<android.app.Activity: java.util.ArrayList mManagedCursors>;

        $r17 = virtualinvoke $r15.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (android.app.Activity$ManagedCursor) $r17;

        $z2 = staticinvoke <android.app.Activity$ManagedCursor: boolean access$200(android.app.Activity$ManagedCursor)>(r3);

        if $z2 != 0 goto label06;

        $z6 = staticinvoke <android.app.Activity$ManagedCursor: boolean access$300(android.app.Activity$ManagedCursor)>(r3);

        if $z6 == 0 goto label16;

     label06:
        $r18 = staticinvoke <android.app.Activity$ManagedCursor: android.database.Cursor access$100(android.app.Activity$ManagedCursor)>(r3);

        $z3 = interfaceinvoke $r18.<android.database.Cursor: boolean requery()>();

        if $z3 != 0 goto label10;

        $r19 = virtualinvoke r0.<android.app.Activity: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i2 = $r19.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i2 < 14 goto label10;

        $r22 = new java.lang.IllegalStateException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("trying to requery an already closed cursor  ");

        $r21 = staticinvoke <android.app.Activity$ManagedCursor: android.database.Cursor access$100(android.app.Activity$ManagedCursor)>(r3);

        $r25 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r26);

        throw $r22;

     label07:
        $r27 := @caughtexception;

        r2 = $r27;

     label08:
        exitmonitor r1;

     label09:
        throw r2;

     label10:
        staticinvoke <android.app.Activity$ManagedCursor: boolean access$202(android.app.Activity$ManagedCursor,boolean)>(r3, 0);

        staticinvoke <android.app.Activity$ManagedCursor: boolean access$302(android.app.Activity$ManagedCursor,boolean)>(r3, 0);

     label11:
        goto label16;

     label12:
        exitmonitor r1;

     label13:
        r0.<android.app.Activity: boolean mCalled> = 0;

        $r7 = r0.<android.app.Activity: android.app.Instrumentation mInstrumentation>;

        virtualinvoke $r7.<android.app.Instrumentation: void callActivityOnRestart(android.app.Activity)>(r0);

        $z1 = r0.<android.app.Activity: boolean mCalled>;

        if $z1 != 0 goto label14;

        $r8 = new android.util.SuperNotCalledException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity ");

        $r12 = r0.<android.app.Activity: android.content.ComponentName mComponent>;

        $r11 = virtualinvoke $r12.<android.content.ComponentName: java.lang.String toShortString()>();

        $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not call through to super.onRestart()");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<android.util.SuperNotCalledException: void <init>(java.lang.String)>($r16);

        throw $r8;

     label14:
        virtualinvoke r0.<android.app.Activity: void performStart()>();

     label15:
        return;

     label16:
        i1 = i1 + 1;

        goto label04;

        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label06 to label07 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label10 to label11 with label07;
        catch java.lang.Throwable from label12 to label13 with label07;
    }

    final void performRestoreInstanceState(android.os.Bundle)
    {
        android.app.Activity r0;
        android.os.Bundle r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.os.Bundle;

        virtualinvoke r0.<android.app.Activity: void onRestoreInstanceState(android.os.Bundle)>(r1);

        specialinvoke r0.<android.app.Activity: void restoreManagedDialogs(android.os.Bundle)>(r1);

        return;
    }

    final void performResume()
    {
        android.app.Activity r0;
        android.app.FragmentManagerImpl $r1, $r3, $r4;
        android.app.Instrumentation $r2;
        boolean $z1, $z3;
        android.util.SuperNotCalledException $r5, $r12;
        java.lang.StringBuilder $r6, $r7, $r10, $r11, $r14, $r15, $r18, $r19;
        android.content.ComponentName $r8, $r17;
        java.lang.String $r9, $r13, $r16, $r20;

        r0 := @this: android.app.Activity;

        virtualinvoke r0.<android.app.Activity: void performRestart()>();

        $r1 = r0.<android.app.Activity: android.app.FragmentManagerImpl mFragments>;

        virtualinvoke $r1.<android.app.FragmentManagerImpl: boolean execPendingActions()>();

        r0.<android.app.Activity: android.app.Activity$NonConfigurationInstances mLastNonConfigurationInstances> = null;

        r0.<android.app.Activity: boolean mCalled> = 0;

        $r2 = r0.<android.app.Activity: android.app.Instrumentation mInstrumentation>;

        virtualinvoke $r2.<android.app.Instrumentation: void callActivityOnResume(android.app.Activity)>(r0);

        $z1 = r0.<android.app.Activity: boolean mCalled>;

        if $z1 != 0 goto label1;

        $r12 = new android.util.SuperNotCalledException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity ");

        $r17 = r0.<android.app.Activity: android.content.ComponentName mComponent>;

        $r16 = virtualinvoke $r17.<android.content.ComponentName: java.lang.String toShortString()>();

        $r19 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not call through to super.onResume()");

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<android.util.SuperNotCalledException: void <init>(java.lang.String)>($r20);

        throw $r12;

     label1:
        r0.<android.app.Activity: boolean mCalled> = 0;

        $r3 = r0.<android.app.Activity: android.app.FragmentManagerImpl mFragments>;

        virtualinvoke $r3.<android.app.FragmentManagerImpl: void dispatchResume()>();

        $r4 = r0.<android.app.Activity: android.app.FragmentManagerImpl mFragments>;

        virtualinvoke $r4.<android.app.FragmentManagerImpl: boolean execPendingActions()>();

        virtualinvoke r0.<android.app.Activity: void onPostResume()>();

        $z3 = r0.<android.app.Activity: boolean mCalled>;

        if $z3 != 0 goto label2;

        $r5 = new android.util.SuperNotCalledException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity ");

        $r8 = r0.<android.app.Activity: android.content.ComponentName mComponent>;

        $r9 = virtualinvoke $r8.<android.content.ComponentName: java.lang.String toShortString()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not call through to super.onPostResume()");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<android.util.SuperNotCalledException: void <init>(java.lang.String)>($r13);

        throw $r5;

     label2:
        return;
    }

    final void performSaveInstanceState(android.os.Bundle)
    {
        android.app.Activity r0;
        android.os.Bundle r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.os.Bundle;

        virtualinvoke r0.<android.app.Activity: void onSaveInstanceState(android.os.Bundle)>(r1);

        specialinvoke r0.<android.app.Activity: void saveManagedDialogs(android.os.Bundle)>(r1);

        return;
    }

    final void performStart()
    {
        android.app.Activity r0;
        int i0, i1, i2;
        android.app.LoaderManagerImpl[] r1;
        android.app.LoaderManagerImpl r2, $r12;
        android.app.FragmentManagerImpl $r3, $r4, $r6;
        android.app.Instrumentation $r5;
        boolean $z1;
        android.util.ArrayMap $r7, $r8, $r10;
        java.lang.Object $r9;
        android.util.SuperNotCalledException $r11;
        java.lang.StringBuilder $r13, $r14, $r17, $r18;
        java.lang.String $r15, $r19;
        android.content.ComponentName $r16;

        r0 := @this: android.app.Activity;

        $r3 = r0.<android.app.Activity: android.app.FragmentManagerImpl mFragments>;

        virtualinvoke $r3.<android.app.FragmentManagerImpl: void noteStateNotSaved()>();

        r0.<android.app.Activity: boolean mCalled> = 0;

        $r4 = r0.<android.app.Activity: android.app.FragmentManagerImpl mFragments>;

        virtualinvoke $r4.<android.app.FragmentManagerImpl: boolean execPendingActions()>();

        $r5 = r0.<android.app.Activity: android.app.Instrumentation mInstrumentation>;

        virtualinvoke $r5.<android.app.Instrumentation: void callActivityOnStart(android.app.Activity)>(r0);

        $z1 = r0.<android.app.Activity: boolean mCalled>;

        if $z1 != 0 goto label1;

        $r11 = new android.util.SuperNotCalledException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity ");

        $r16 = r0.<android.app.Activity: android.content.ComponentName mComponent>;

        $r15 = virtualinvoke $r16.<android.content.ComponentName: java.lang.String toShortString()>();

        $r18 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not call through to super.onStart()");

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<android.util.SuperNotCalledException: void <init>(java.lang.String)>($r19);

        throw $r11;

     label1:
        $r6 = r0.<android.app.Activity: android.app.FragmentManagerImpl mFragments>;

        virtualinvoke $r6.<android.app.FragmentManagerImpl: void dispatchStart()>();

        $r7 = r0.<android.app.Activity: android.util.ArrayMap mAllLoaderManagers>;

        if $r7 == null goto label5;

        $r8 = r0.<android.app.Activity: android.util.ArrayMap mAllLoaderManagers>;

        i0 = virtualinvoke $r8.<android.util.ArrayMap: int size()>();

        r1 = newarray (android.app.LoaderManagerImpl)[i0];

        i1 = i0 - 1;

     label2:
        if i1 < 0 goto label3;

        $r10 = r0.<android.app.Activity: android.util.ArrayMap mAllLoaderManagers>;

        $r9 = virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        $r12 = (android.app.LoaderManagerImpl) $r9;

        r1[i1] = $r12;

        i1 = i1 + -1;

        goto label2;

     label3:
        i2 = 0;

     label4:
        if i2 >= i0 goto label5;

        r2 = r1[i2];

        virtualinvoke r2.<android.app.LoaderManagerImpl: void finishRetain()>();

        virtualinvoke r2.<android.app.LoaderManagerImpl: void doReportStart()>();

        i2 = i2 + 1;

        goto label4;

     label5:
        return;
    }

    final void performStop()
    {
        android.app.Activity r0, $r21;
        java.util.ArrayList r1, $r8, $r9;
        java.lang.Throwable r2, $r25;
        int i0, i1;
        android.app.Activity$ManagedCursor r3;
        boolean $z0, $z1, $z2, $z3, $z5;
        android.view.Window $r4, $r24;
        android.os.IBinder $r5, $r23;
        android.app.FragmentManagerImpl $r6;
        android.app.Instrumentation $r7;
        java.lang.Object $r10;
        android.database.Cursor $r11;
        java.lang.StringBuilder $r12, $r15, $r16, $r19;
        android.util.SuperNotCalledException $r13;
        android.content.ComponentName $r14;
        java.lang.String $r17, $r18;
        android.view.WindowManagerGlobal $r20;
        android.app.LoaderManagerImpl $r22, $r26, $r27;

        r0 := @this: android.app.Activity;

        r0.<android.app.Activity: boolean mDoReportFullyDrawn> = 0;

        $z0 = r0.<android.app.Activity: boolean mLoadersStarted>;

        if $z0 == 0 goto label01;

        r0.<android.app.Activity: boolean mLoadersStarted> = 0;

        $r22 = r0.<android.app.Activity: android.app.LoaderManagerImpl mLoaderManager>;

        if $r22 == null goto label01;

        $z5 = r0.<android.app.Activity: boolean mChangingConfigurations>;

        if $z5 != 0 goto label04;

        $r27 = r0.<android.app.Activity: android.app.LoaderManagerImpl mLoaderManager>;

        virtualinvoke $r27.<android.app.LoaderManagerImpl: void doStop()>();

     label01:
        $z1 = r0.<android.app.Activity: boolean mStopped>;

        if $z1 != 0 goto label13;

        $r4 = r0.<android.app.Activity: android.view.Window mWindow>;

        if $r4 == null goto label02;

        $r24 = r0.<android.app.Activity: android.view.Window mWindow>;

        virtualinvoke $r24.<android.view.Window: void closeAllPanels()>();

     label02:
        $r5 = r0.<android.app.Activity: android.os.IBinder mToken>;

        if $r5 == null goto label03;

        $r21 = r0.<android.app.Activity: android.app.Activity mParent>;

        if $r21 != null goto label03;

        $r20 = staticinvoke <android.view.WindowManagerGlobal: android.view.WindowManagerGlobal getInstance()>();

        $r23 = r0.<android.app.Activity: android.os.IBinder mToken>;

        virtualinvoke $r20.<android.view.WindowManagerGlobal: void setStoppedState(android.os.IBinder,boolean)>($r23, 1);

     label03:
        $r6 = r0.<android.app.Activity: android.app.FragmentManagerImpl mFragments>;

        virtualinvoke $r6.<android.app.FragmentManagerImpl: void dispatchStop()>();

        r0.<android.app.Activity: boolean mCalled> = 0;

        $r7 = r0.<android.app.Activity: android.app.Instrumentation mInstrumentation>;

        virtualinvoke $r7.<android.app.Instrumentation: void callActivityOnStop(android.app.Activity)>(r0);

        $z2 = r0.<android.app.Activity: boolean mCalled>;

        if $z2 != 0 goto label05;

        $r13 = new android.util.SuperNotCalledException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity ");

        $r14 = r0.<android.app.Activity: android.content.ComponentName mComponent>;

        $r17 = virtualinvoke $r14.<android.content.ComponentName: java.lang.String toShortString()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not call through to super.onStop()");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<android.util.SuperNotCalledException: void <init>(java.lang.String)>($r18);

        throw $r13;

     label04:
        $r26 = r0.<android.app.Activity: android.app.LoaderManagerImpl mLoaderManager>;

        virtualinvoke $r26.<android.app.LoaderManagerImpl: void doRetain()>();

        goto label01;

     label05:
        r1 = r0.<android.app.Activity: java.util.ArrayList mManagedCursors>;

        entermonitor r1;

     label06:
        $r8 = r0.<android.app.Activity: java.util.ArrayList mManagedCursors>;

        i0 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

     label07:
        i1 = 0;

     label08:
        if i1 >= i0 goto label11;

     label09:
        $r9 = r0.<android.app.Activity: java.util.ArrayList mManagedCursors>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (android.app.Activity$ManagedCursor) $r10;

        $z3 = staticinvoke <android.app.Activity$ManagedCursor: boolean access$200(android.app.Activity$ManagedCursor)>(r3);

        if $z3 != 0 goto label17;

        $r11 = staticinvoke <android.app.Activity$ManagedCursor: android.database.Cursor access$100(android.app.Activity$ManagedCursor)>(r3);

        interfaceinvoke $r11.<android.database.Cursor: void deactivate()>();

        staticinvoke <android.app.Activity$ManagedCursor: boolean access$202(android.app.Activity$ManagedCursor,boolean)>(r3, 1);

     label10:
        goto label17;

     label11:
        exitmonitor r1;

     label12:
        r0.<android.app.Activity: boolean mStopped> = 1;

     label13:
        r0.<android.app.Activity: boolean mResumed> = 0;

        return;

     label14:
        $r25 := @caughtexception;

        r2 = $r25;

     label15:
        exitmonitor r1;

     label16:
        throw r2;

     label17:
        i1 = i1 + 1;

        goto label08;

        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label11 to label12 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    final void performUserLeaving()
    {
        android.app.Activity r0;

        r0 := @this: android.app.Activity;

        virtualinvoke r0.<android.app.Activity: void onUserInteraction()>();

        virtualinvoke r0.<android.app.Activity: void onUserLeaveHint()>();

        return;
    }

    public void recreate()
    {
        android.app.Activity r0, $r1;
        android.os.Looper $r2, $r4;
        android.app.ActivityThread $r3, $r6;
        android.os.IBinder $r5;
        java.lang.IllegalStateException $r7, $r8;

        r0 := @this: android.app.Activity;

        $r1 = r0.<android.app.Activity: android.app.Activity mParent>;

        if $r1 == null goto label1;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can only be called on top-level activity");

        throw $r8;

     label1:
        $r2 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r3 = r0.<android.app.Activity: android.app.ActivityThread mMainThread>;

        $r4 = virtualinvoke $r3.<android.app.ActivityThread: android.os.Looper getLooper()>();

        if $r2 == $r4 goto label2;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Must be called from main thread");

        throw $r7;

     label2:
        $r6 = r0.<android.app.Activity: android.app.ActivityThread mMainThread>;

        $r5 = r0.<android.app.Activity: android.os.IBinder mToken>;

        virtualinvoke $r6.<android.app.ActivityThread: void requestRelaunchActivity(android.os.IBinder,java.util.List,java.util.List,int,boolean,android.content.res.Configuration,boolean)>($r5, null, null, 0, 0, null, 0);

        return;
    }

    public void registerForContextMenu(android.view.View)
    {
        android.app.Activity r0;
        android.view.View r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.View;

        virtualinvoke r1.<android.view.View: void setOnCreateContextMenuListener(android.view.View$OnCreateContextMenuListener)>(r0);

        return;
    }

    public final void removeDialog(int)
    {
        android.app.Activity r0;
        int i0;
        android.app.Activity$ManagedDialog r1;
        android.util.SparseArray $r2, $r3, $r6;
        java.lang.Object $r4;
        android.app.Dialog $r5;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        $r2 = r0.<android.app.Activity: android.util.SparseArray mManagedDialogs>;

        if $r2 == null goto label1;

        $r3 = r0.<android.app.Activity: android.util.SparseArray mManagedDialogs>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (android.app.Activity$ManagedDialog) $r4;

        if r1 == null goto label1;

        $r5 = r1.<android.app.Activity$ManagedDialog: android.app.Dialog mDialog>;

        virtualinvoke $r5.<android.app.Dialog: void dismiss()>();

        $r6 = r0.<android.app.Activity: android.util.SparseArray mManagedDialogs>;

        virtualinvoke $r6.<android.util.SparseArray: void remove(int)>(i0);

     label1:
        return;
    }

    public void reportFullyDrawn()
    {
        android.app.Activity r0;
        boolean $z0;
        android.app.IActivityManager $r2;
        android.os.IBinder $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.app.Activity;

        $z0 = r0.<android.app.Activity: boolean mDoReportFullyDrawn>;

        if $z0 == 0 goto label2;

        r0.<android.app.Activity: boolean mDoReportFullyDrawn> = 0;

     label1:
        $r2 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r3 = r0.<android.app.Activity: android.os.IBinder mToken>;

        interfaceinvoke $r2.<android.app.IActivityManager: void reportActivityFullyDrawn(android.os.IBinder)>($r3);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public final boolean requestWindowFeature(int)
    {
        android.app.Activity r0;
        int i0;
        android.view.Window $r1;
        boolean $z0;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        $z0 = virtualinvoke $r1.<android.view.Window: boolean requestFeature(int)>(i0);

        return $z0;
    }

    android.app.Activity$NonConfigurationInstances retainNonConfigurationInstances()
    {
        android.app.Activity r0;
        java.lang.Object r1, $r15;
        java.util.HashMap r2;
        java.util.ArrayList r3;
        android.util.ArrayMap r4, $r9, $r11, $r14, $r16;
        boolean z0, $z1;
        android.app.Activity$NonConfigurationInstances r5, $r10;
        int i0, i1, i2;
        android.app.LoaderManagerImpl[] r6;
        android.app.LoaderManagerImpl r7, $r17;
        android.app.FragmentManagerImpl $r8;
        java.lang.String $r12;

        r0 := @this: android.app.Activity;

        r1 = virtualinvoke r0.<android.app.Activity: java.lang.Object onRetainNonConfigurationInstance()>();

        r2 = virtualinvoke r0.<android.app.Activity: java.util.HashMap onRetainNonConfigurationChildInstances()>();

        $r8 = r0.<android.app.Activity: android.app.FragmentManagerImpl mFragments>;

        r3 = virtualinvoke $r8.<android.app.FragmentManagerImpl: java.util.ArrayList retainNonConfig()>();

        r4 = r0.<android.app.Activity: android.util.ArrayMap mAllLoaderManagers>;

        z0 = 0;

        if r4 == null goto label6;

        $r11 = r0.<android.app.Activity: android.util.ArrayMap mAllLoaderManagers>;

        i0 = virtualinvoke $r11.<android.util.ArrayMap: int size()>();

        r6 = newarray (android.app.LoaderManagerImpl)[i0];

        i1 = i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r16 = r0.<android.app.Activity: android.util.ArrayMap mAllLoaderManagers>;

        $r15 = virtualinvoke $r16.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        $r17 = (android.app.LoaderManagerImpl) $r15;

        r6[i1] = $r17;

        i1 = i1 + -1;

        goto label1;

     label2:
        i2 = 0;

     label3:
        if i2 >= i0 goto label6;

        r7 = r6[i2];

        $z1 = r7.<android.app.LoaderManagerImpl: boolean mRetaining>;

        if $z1 == 0 goto label5;

        z0 = 1;

     label4:
        i2 = i2 + 1;

        goto label3;

     label5:
        virtualinvoke r7.<android.app.LoaderManagerImpl: void doDestroy()>();

        $r14 = r0.<android.app.Activity: android.util.ArrayMap mAllLoaderManagers>;

        $r12 = r7.<android.app.LoaderManagerImpl: java.lang.String mWho>;

        virtualinvoke $r14.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r12);

        goto label4;

     label6:
        if r1 != null goto label7;

        if r2 != null goto label7;

        if r3 != null goto label7;

        if z0 != 0 goto label7;

        return null;

     label7:
        $r10 = new android.app.Activity$NonConfigurationInstances;

        specialinvoke $r10.<android.app.Activity$NonConfigurationInstances: void <init>()>();

        r5 = $r10;

        r5.<android.app.Activity$NonConfigurationInstances: java.lang.Object activity> = r1;

        r5.<android.app.Activity$NonConfigurationInstances: java.util.HashMap children> = r2;

        r5.<android.app.Activity$NonConfigurationInstances: java.util.ArrayList fragments> = r3;

        $r9 = r0.<android.app.Activity: android.util.ArrayMap mAllLoaderManagers>;

        r5.<android.app.Activity$NonConfigurationInstances: android.util.ArrayMap loaders> = $r9;

        return r5;
    }

    public final void runOnUiThread(java.lang.Runnable)
    {
        android.app.Activity r0;
        java.lang.Runnable r1;
        java.lang.Thread $r2, $r3;
        android.os.Handler $r4;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: java.lang.Runnable;

        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r3 = r0.<android.app.Activity: java.lang.Thread mUiThread>;

        if $r2 == $r3 goto label1;

        $r4 = r0.<android.app.Activity: android.os.Handler mHandler>;

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>(r1);

        return;

     label1:
        interfaceinvoke r1.<java.lang.Runnable: void run()>();

        return;
    }

    public void setContentView(int)
    {
        android.app.Activity r0;
        int i0;
        android.view.Window $r1;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        virtualinvoke $r1.<android.view.Window: void setContentView(int)>(i0);

        specialinvoke r0.<android.app.Activity: void initActionBar()>();

        return;
    }

    public void setContentView(android.view.View)
    {
        android.app.Activity r0;
        android.view.View r1;
        android.view.Window $r2;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        virtualinvoke $r2.<android.view.Window: void setContentView(android.view.View)>(r1);

        specialinvoke r0.<android.app.Activity: void initActionBar()>();

        return;
    }

    public void setContentView(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        android.app.Activity r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams r2;
        android.view.Window $r3;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        $r3 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        virtualinvoke $r3.<android.view.Window: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)>(r1, r2);

        specialinvoke r0.<android.app.Activity: void initActionBar()>();

        return;
    }

    public final void setDefaultKeyMode(int)
    {
        android.app.Activity r0;
        int i0;
        java.lang.IllegalArgumentException $r1;
        android.text.SpannableStringBuilder $r2, $r3;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r0.<android.app.Activity: int mDefaultKeyMode> = i0;

        tableswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label3;
            default: goto label1;
        };

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r1;

     label2:
        r0.<android.app.Activity: android.text.SpannableStringBuilder mDefaultKeySsb> = null;

        return;

     label3:
        $r2 = new android.text.SpannableStringBuilder;

        specialinvoke $r2.<android.text.SpannableStringBuilder: void <init>()>();

        r0.<android.app.Activity: android.text.SpannableStringBuilder mDefaultKeySsb> = $r2;

        $r3 = r0.<android.app.Activity: android.text.SpannableStringBuilder mDefaultKeySsb>;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int)>($r3, 0);

        return;
    }

    public final void setFeatureDrawable(int, android.graphics.drawable.Drawable)
    {
        android.app.Activity r0;
        int i0;
        android.graphics.drawable.Drawable r1;
        android.view.Window $r2;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.drawable.Drawable;

        $r2 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        virtualinvoke $r2.<android.view.Window: void setFeatureDrawable(int,android.graphics.drawable.Drawable)>(i0, r1);

        return;
    }

    public final void setFeatureDrawableAlpha(int, int)
    {
        android.app.Activity r0;
        int i0, i1;
        android.view.Window $r1;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        virtualinvoke $r1.<android.view.Window: void setFeatureDrawableAlpha(int,int)>(i0, i1);

        return;
    }

    public final void setFeatureDrawableResource(int, int)
    {
        android.app.Activity r0;
        int i0, i1;
        android.view.Window $r1;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        virtualinvoke $r1.<android.view.Window: void setFeatureDrawableResource(int,int)>(i0, i1);

        return;
    }

    public final void setFeatureDrawableUri(int, android.net.Uri)
    {
        android.app.Activity r0;
        int i0;
        android.net.Uri r1;
        android.view.Window $r2;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.net.Uri;

        $r2 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        virtualinvoke $r2.<android.view.Window: void setFeatureDrawableUri(int,android.net.Uri)>(i0, r1);

        return;
    }

    public void setFinishOnTouchOutside(boolean)
    {
        android.app.Activity r0;
        boolean z0;
        android.view.Window $r1;

        r0 := @this: android.app.Activity;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.app.Activity: android.view.Window mWindow>;

        virtualinvoke $r1.<android.view.Window: void setCloseOnTouchOutside(boolean)>(z0);

        return;
    }

    public void setImmersive(boolean)
    {
        android.app.Activity r0;
        boolean z0;
        android.app.IActivityManager $r2;
        android.os.IBinder $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.app.Activity;

        z0 := @parameter0: boolean;

     label1:
        $r2 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r3 = r0.<android.app.Activity: android.os.IBinder mToken>;

        interfaceinvoke $r2.<android.app.IActivityManager: void setImmersive(android.os.IBinder,boolean)>($r3, z0);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setIntent(android.content.Intent)
    {
        android.app.Activity r0;
        android.content.Intent r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.Intent;

        r0.<android.app.Activity: android.content.Intent mIntent> = r1;

        return;
    }

    final void setParent(android.app.Activity)
    {
        android.app.Activity r0, r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.app.Activity;

        r0.<android.app.Activity: android.app.Activity mParent> = r1;

        return;
    }

    public void setPersistent(boolean)
    {
        android.app.Activity r0;
        boolean z0;

        r0 := @this: android.app.Activity;

        z0 := @parameter0: boolean;

        return;
    }

    public final void setProgress(int)
    {
        android.app.Activity r0;
        int i0, $i1;
        android.view.Window $r1;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        $i1 = i0 + 0;

        virtualinvoke $r1.<android.view.Window: void setFeatureInt(int,int)>(2, $i1);

        return;
    }

    public final void setProgressBarIndeterminate(boolean)
    {
        android.app.Activity r0;
        boolean z0;
        android.view.Window r1;
        byte b0;

        r0 := @this: android.app.Activity;

        z0 := @parameter0: boolean;

        r1 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        if z0 == 0 goto label2;

        b0 = -3;

     label1:
        virtualinvoke r1.<android.view.Window: void setFeatureInt(int,int)>(2, b0);

        return;

     label2:
        b0 = -4;

        goto label1;
    }

    public final void setProgressBarIndeterminateVisibility(boolean)
    {
        android.app.Activity r0;
        boolean z0;
        android.view.Window r1;
        byte b0;

        r0 := @this: android.app.Activity;

        z0 := @parameter0: boolean;

        r1 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        if z0 == 0 goto label2;

        b0 = -1;

     label1:
        virtualinvoke r1.<android.view.Window: void setFeatureInt(int,int)>(5, b0);

        return;

     label2:
        b0 = -2;

        goto label1;
    }

    public final void setProgressBarVisibility(boolean)
    {
        android.app.Activity r0;
        boolean z0;
        android.view.Window r1;
        byte b0;

        r0 := @this: android.app.Activity;

        z0 := @parameter0: boolean;

        r1 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        if z0 == 0 goto label2;

        b0 = -1;

     label1:
        virtualinvoke r1.<android.view.Window: void setFeatureInt(int,int)>(2, b0);

        return;

     label2:
        b0 = -2;

        goto label1;
    }

    public void setRequestedOrientation(int)
    {
        android.app.Activity r0, $r2, $r3;
        int i0;
        android.app.IActivityManager $r4;
        android.os.IBinder $r5;
        android.os.RemoteException $r6;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        $r2 = r0.<android.app.Activity: android.app.Activity mParent>;

        if $r2 != null goto label3;

     label1:
        $r4 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r5 = r0.<android.app.Activity: android.os.IBinder mToken>;

        interfaceinvoke $r4.<android.app.IActivityManager: void setRequestedOrientation(android.os.IBinder,int)>($r5, i0);

     label2:
        return;

     label3:
        $r3 = r0.<android.app.Activity: android.app.Activity mParent>;

        virtualinvoke $r3.<android.app.Activity: void setRequestedOrientation(int)>(i0);

        return;

     label4:
        $r6 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public final void setResult(int)
    {
        android.app.Activity r0;
        int i0;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        r0.<android.app.Activity: int mResultCode> = i0;

        r0.<android.app.Activity: android.content.Intent mResultData> = null;

        exitmonitor r0;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

     label4:
        exitmonitor r0;

     label5:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public final void setResult(int, android.content.Intent)
    {
        android.app.Activity r0;
        int i0;
        android.content.Intent r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        entermonitor r0;

     label1:
        r0.<android.app.Activity: int mResultCode> = i0;

        r0.<android.app.Activity: android.content.Intent mResultData> = r1;

        exitmonitor r0;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        exitmonitor r0;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public final void setSecondaryProgress(int)
    {
        android.app.Activity r0;
        int i0, $i1;
        android.view.Window $r1;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        $i1 = i0 + 20000;

        virtualinvoke $r1.<android.view.Window: void setFeatureInt(int,int)>(2, $i1);

        return;
    }

    public void setTitle(int)
    {
        android.app.Activity r0;
        int i0;
        java.lang.CharSequence $r1;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.app.Activity: java.lang.CharSequence getText(int)>(i0);

        virtualinvoke r0.<android.app.Activity: void setTitle(java.lang.CharSequence)>($r1);

        return;
    }

    public void setTitle(java.lang.CharSequence)
    {
        android.app.Activity r0, $r2, $r3;
        java.lang.CharSequence r1;
        int $i0;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: java.lang.CharSequence;

        r0.<android.app.Activity: java.lang.CharSequence mTitle> = r1;

        $i0 = r0.<android.app.Activity: int mTitleColor>;

        virtualinvoke r0.<android.app.Activity: void onTitleChanged(java.lang.CharSequence,int)>(r1, $i0);

        $r2 = r0.<android.app.Activity: android.app.Activity mParent>;

        if $r2 == null goto label1;

        $r3 = r0.<android.app.Activity: android.app.Activity mParent>;

        virtualinvoke $r3.<android.app.Activity: void onChildTitleChanged(android.app.Activity,java.lang.CharSequence)>(r0, r1);

     label1:
        return;
    }

    public void setTitleColor(int)
    {
        android.app.Activity r0;
        int i0;
        java.lang.CharSequence $r1;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r0.<android.app.Activity: int mTitleColor> = i0;

        $r1 = r0.<android.app.Activity: java.lang.CharSequence mTitle>;

        virtualinvoke r0.<android.app.Activity: void onTitleChanged(java.lang.CharSequence,int)>($r1, i0);

        return;
    }

    public void setVisible(boolean)
    {
        android.app.Activity r0;
        boolean z0, $z1, $z2;
        android.view.View $r1;

        r0 := @this: android.app.Activity;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.app.Activity: boolean mVisibleFromClient>;

        if $z1 == z0 goto label1;

        r0.<android.app.Activity: boolean mVisibleFromClient> = z0;

        $z2 = r0.<android.app.Activity: boolean mVisibleFromServer>;

        if $z2 == 0 goto label1;

        if z0 == 0 goto label2;

        virtualinvoke r0.<android.app.Activity: void makeVisible()>();

     label1:
        return;

     label2:
        $r1 = r0.<android.app.Activity: android.view.View mDecor>;

        virtualinvoke $r1.<android.view.View: void setVisibility(int)>(4);

        return;
    }

    public final void setVolumeControlStream(int)
    {
        android.app.Activity r0;
        int i0;
        android.view.Window $r1;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        virtualinvoke $r1.<android.view.Window: void setVolumeControlStream(int)>(i0);

        return;
    }

    public boolean shouldUpRecreateTask(android.content.Intent)
    {
        android.app.Activity r0;
        android.content.Intent r1;
        android.content.pm.PackageManager r4;
        android.content.ComponentName r5;
        android.content.pm.ActivityInfo r6;
        boolean z0;
        java.lang.String $r7, $r9;
        android.app.IActivityManager $r8;
        android.os.IBinder $r10;
        android.content.pm.PackageManager$NameNotFoundException $r11;
        android.os.RemoteException $r12;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.Intent;

     label01:
        r4 = virtualinvoke r0.<android.app.Activity: android.content.pm.PackageManager getPackageManager()>();

        r5 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

     label02:
        if r5 != null goto label04;

     label03:
        r5 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName resolveActivity(android.content.pm.PackageManager)>(r4);

     label04:
        r6 = virtualinvoke r4.<android.content.pm.PackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>(r5, 0);

        $r7 = r6.<android.content.pm.ActivityInfo: java.lang.String taskAffinity>;

        if $r7 != null goto label06;

     label05:
        return 0;

     label06:
        $r8 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r10 = r0.<android.app.Activity: android.os.IBinder mToken>;

        $r9 = r6.<android.content.pm.ActivityInfo: java.lang.String taskAffinity>;

        z0 = interfaceinvoke $r8.<android.app.IActivityManager: boolean targetTaskAffinityMatchesActivity(android.os.IBinder,java.lang.String)>($r10, $r9);

     label07:
        if z0 != 0 goto label10;

        return 1;

     label08:
        $r12 := @caughtexception;

        return 0;

     label09:
        $r11 := @caughtexception;

     label10:
        return 0;

        catch android.os.RemoteException from label01 to label02 with label08;
        catch android.content.pm.PackageManager$NameNotFoundException from label01 to label02 with label09;
        catch android.os.RemoteException from label03 to label04 with label08;
        catch android.content.pm.PackageManager$NameNotFoundException from label03 to label04 with label09;
        catch android.os.RemoteException from label04 to label05 with label08;
        catch android.content.pm.PackageManager$NameNotFoundException from label04 to label05 with label09;
        catch android.os.RemoteException from label06 to label07 with label08;
        catch android.content.pm.PackageManager$NameNotFoundException from label06 to label07 with label09;
    }

    public final void showDialog(int)
    {
        android.app.Activity r0;
        int i0;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.app.Activity: boolean showDialog(int,android.os.Bundle)>(i0, null);

        return;
    }

    public final boolean showDialog(int, android.os.Bundle)
    {
        android.app.Activity r0;
        int i0;
        android.os.Bundle r1;
        android.app.Activity$ManagedDialog r2, $r8;
        android.util.SparseArray $r3, $r4, $r12, $r13;
        java.lang.Object $r5;
        android.app.Dialog $r6, $r7, $r10, $r11;
        java.lang.Integer $r9;

        r0 := @this: android.app.Activity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        $r3 = r0.<android.app.Activity: android.util.SparseArray mManagedDialogs>;

        if $r3 != null goto label1;

        $r13 = new android.util.SparseArray;

        specialinvoke $r13.<android.util.SparseArray: void <init>()>();

        r0.<android.app.Activity: android.util.SparseArray mManagedDialogs> = $r13;

     label1:
        $r4 = r0.<android.app.Activity: android.util.SparseArray mManagedDialogs>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (android.app.Activity$ManagedDialog) $r5;

        if r2 != null goto label3;

        $r8 = new android.app.Activity$ManagedDialog;

        specialinvoke $r8.<android.app.Activity$ManagedDialog: void <init>(android.app.Activity$1)>(null);

        r2 = $r8;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r10 = specialinvoke r0.<android.app.Activity: android.app.Dialog createDialog(java.lang.Integer,android.os.Bundle,android.os.Bundle)>($r9, null, r1);

        r2.<android.app.Activity$ManagedDialog: android.app.Dialog mDialog> = $r10;

        $r11 = r2.<android.app.Activity$ManagedDialog: android.app.Dialog mDialog>;

        if $r11 != null goto label2;

        return 0;

     label2:
        $r12 = r0.<android.app.Activity: android.util.SparseArray mManagedDialogs>;

        virtualinvoke $r12.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r2);

     label3:
        r2.<android.app.Activity$ManagedDialog: android.os.Bundle mArgs> = r1;

        $r6 = r2.<android.app.Activity$ManagedDialog: android.app.Dialog mDialog>;

        virtualinvoke r0.<android.app.Activity: void onPrepareDialog(int,android.app.Dialog,android.os.Bundle)>(i0, $r6, r1);

        $r7 = r2.<android.app.Activity$ManagedDialog: android.app.Dialog mDialog>;

        virtualinvoke $r7.<android.app.Dialog: void show()>();

        return 1;
    }

    public android.view.ActionMode startActionMode(android.view.ActionMode$Callback)
    {
        android.app.Activity r0;
        android.view.ActionMode$Callback r1;
        android.view.Window $r2;
        android.view.View $r3;
        android.view.ActionMode $r4;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.ActionMode$Callback;

        $r2 = r0.<android.app.Activity: android.view.Window mWindow>;

        $r3 = virtualinvoke $r2.<android.view.Window: android.view.View getDecorView()>();

        $r4 = virtualinvoke $r3.<android.view.View: android.view.ActionMode startActionMode(android.view.ActionMode$Callback)>(r1);

        return $r4;
    }

    public void startActivities(android.content.Intent[])
    {
        android.app.Activity r0;
        android.content.Intent[] r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.Intent[];

        virtualinvoke r0.<android.app.Activity: void startActivities(android.content.Intent[],android.os.Bundle)>(r1, null);

        return;
    }

    public void startActivities(android.content.Intent[], android.os.Bundle)
    {
        android.app.Activity r0;
        android.content.Intent[] r1;
        android.os.Bundle r2;
        android.app.ActivityThread $r3;
        android.app.Instrumentation $r4;
        android.app.ActivityThread$ApplicationThread $r5;
        android.os.IBinder $r6;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.Intent[];

        r2 := @parameter1: android.os.Bundle;

        $r4 = r0.<android.app.Activity: android.app.Instrumentation mInstrumentation>;

        $r3 = r0.<android.app.Activity: android.app.ActivityThread mMainThread>;

        $r5 = virtualinvoke $r3.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread getApplicationThread()>();

        $r6 = r0.<android.app.Activity: android.os.IBinder mToken>;

        virtualinvoke $r4.<android.app.Instrumentation: void execStartActivities(android.content.Context,android.os.IBinder,android.os.IBinder,android.app.Activity,android.content.Intent[],android.os.Bundle)>(r0, $r5, $r6, r0, r1, r2);

        return;
    }

    public void startActivity(android.content.Intent)
    {
        android.app.Activity r0;
        android.content.Intent r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.Intent;

        virtualinvoke r0.<android.app.Activity: void startActivity(android.content.Intent,android.os.Bundle)>(r1, null);

        return;
    }

    public void startActivity(android.content.Intent, android.os.Bundle)
    {
        android.app.Activity r0;
        android.content.Intent r1;
        android.os.Bundle r2;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: android.os.Bundle;

        if r2 == null goto label1;

        virtualinvoke r0.<android.app.Activity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)>(r1, -1, r2);

        return;

     label1:
        virtualinvoke r0.<android.app.Activity: void startActivityForResult(android.content.Intent,int)>(r1, -1);

        return;
    }

    public void startActivityAsUser(android.content.Intent, android.os.Bundle, android.os.UserHandle)
    {
        android.app.Activity r0, $r5;
        android.content.Intent r1, $r14;
        android.os.Bundle r2;
        android.os.UserHandle r3;
        android.app.Instrumentation$ActivityResult r4;
        android.app.ActivityThread $r6, $r10;
        android.app.Instrumentation $r7;
        android.app.ActivityThread$ApplicationThread $r8;
        android.os.IBinder $r9, $r11;
        java.lang.String $r12;
        int $i0;
        java.lang.RuntimeException $r13;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: android.os.UserHandle;

        $r5 = r0.<android.app.Activity: android.app.Activity mParent>;

        if $r5 == null goto label1;

        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>("Called be called from a child");

        throw $r13;

     label1:
        $r7 = r0.<android.app.Activity: android.app.Instrumentation mInstrumentation>;

        $r6 = r0.<android.app.Activity: android.app.ActivityThread mMainThread>;

        $r8 = virtualinvoke $r6.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread getApplicationThread()>();

        $r9 = r0.<android.app.Activity: android.os.IBinder mToken>;

        r4 = virtualinvoke $r7.<android.app.Instrumentation: android.app.Instrumentation$ActivityResult execStartActivity(android.content.Context,android.os.IBinder,android.os.IBinder,android.app.Activity,android.content.Intent,int,android.os.Bundle,android.os.UserHandle)>(r0, $r8, $r9, r0, r1, -1, r2, r3);

        if r4 == null goto label2;

        $r10 = r0.<android.app.Activity: android.app.ActivityThread mMainThread>;

        $r11 = r0.<android.app.Activity: android.os.IBinder mToken>;

        $r12 = r0.<android.app.Activity: java.lang.String mEmbeddedID>;

        $i0 = virtualinvoke r4.<android.app.Instrumentation$ActivityResult: int getResultCode()>();

        $r14 = virtualinvoke r4.<android.app.Instrumentation$ActivityResult: android.content.Intent getResultData()>();

        virtualinvoke $r10.<android.app.ActivityThread: void sendActivityResult(android.os.IBinder,java.lang.String,int,int,android.content.Intent)>($r11, $r12, -1, $i0, $r14);

     label2:
        return;
    }

    public void startActivityAsUser(android.content.Intent, android.os.UserHandle)
    {
        android.app.Activity r0;
        android.content.Intent r1;
        android.os.UserHandle r2;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: android.os.UserHandle;

        virtualinvoke r0.<android.app.Activity: void startActivityAsUser(android.content.Intent,android.os.Bundle,android.os.UserHandle)>(r1, null, r2);

        return;
    }

    public void startActivityForResult(android.content.Intent, int)
    {
        android.app.Activity r0;
        android.content.Intent r1;
        int i0;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.app.Activity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)>(r1, i0, null);

        return;
    }

    public void startActivityForResult(android.content.Intent, int, android.os.Bundle)
    {
        android.app.Activity r0, $r5, $r6, $r7;
        android.content.Intent r1, $r17;
        int i0, $i1;
        android.os.Bundle r2;
        android.app.Instrumentation$ActivityResult r3;
        android.view.View r4;
        android.app.ActivityThread $r8, $r14;
        android.app.Instrumentation $r9;
        android.app.ActivityThread$ApplicationThread $r10;
        android.os.IBinder $r11, $r16;
        android.view.Window $r12, $r13;
        java.lang.String $r15;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        $r5 = r0.<android.app.Activity: android.app.Activity mParent>;

        if $r5 != null goto label6;

        $r9 = r0.<android.app.Activity: android.app.Instrumentation mInstrumentation>;

        $r8 = r0.<android.app.Activity: android.app.ActivityThread mMainThread>;

        $r10 = virtualinvoke $r8.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread getApplicationThread()>();

        $r11 = r0.<android.app.Activity: android.os.IBinder mToken>;

        r3 = virtualinvoke $r9.<android.app.Instrumentation: android.app.Instrumentation$ActivityResult execStartActivity(android.content.Context,android.os.IBinder,android.os.IBinder,android.app.Activity,android.content.Intent,int,android.os.Bundle)>(r0, $r10, $r11, r0, r1, i0, r2);

        if r3 == null goto label1;

        $r14 = r0.<android.app.Activity: android.app.ActivityThread mMainThread>;

        $r16 = r0.<android.app.Activity: android.os.IBinder mToken>;

        $r15 = r0.<android.app.Activity: java.lang.String mEmbeddedID>;

        $i1 = virtualinvoke r3.<android.app.Instrumentation$ActivityResult: int getResultCode()>();

        $r17 = virtualinvoke r3.<android.app.Instrumentation$ActivityResult: android.content.Intent getResultData()>();

        virtualinvoke $r14.<android.app.ActivityThread: void sendActivityResult(android.os.IBinder,java.lang.String,int,int,android.content.Intent)>($r16, $r15, i0, $i1, $r17);

     label1:
        if i0 < 0 goto label2;

        r0.<android.app.Activity: boolean mStartedActivity> = 1;

     label2:
        $r12 = r0.<android.app.Activity: android.view.Window mWindow>;

        if $r12 == null goto label5;

        $r13 = r0.<android.app.Activity: android.view.Window mWindow>;

        r4 = virtualinvoke $r13.<android.view.Window: android.view.View peekDecorView()>();

     label3:
        if r4 == null goto label4;

        virtualinvoke r4.<android.view.View: void cancelPendingInputEvents()>();

     label4:
        return;

     label5:
        r4 = null;

        goto label3;

     label6:
        if r2 == null goto label7;

        $r7 = r0.<android.app.Activity: android.app.Activity mParent>;

        virtualinvoke $r7.<android.app.Activity: void startActivityFromChild(android.app.Activity,android.content.Intent,int,android.os.Bundle)>(r0, r1, i0, r2);

        return;

     label7:
        $r6 = r0.<android.app.Activity: android.app.Activity mParent>;

        virtualinvoke $r6.<android.app.Activity: void startActivityFromChild(android.app.Activity,android.content.Intent,int)>(r0, r1, i0);

        return;
    }

    public void startActivityFromChild(android.app.Activity, android.content.Intent, int)
    {
        android.app.Activity r0, r1;
        android.content.Intent r2;
        int i0;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.content.Intent;

        i0 := @parameter2: int;

        virtualinvoke r0.<android.app.Activity: void startActivityFromChild(android.app.Activity,android.content.Intent,int,android.os.Bundle)>(r1, r2, i0, null);

        return;
    }

    public void startActivityFromChild(android.app.Activity, android.content.Intent, int, android.os.Bundle)
    {
        android.app.Activity r0, r1;
        android.content.Intent r2, $r12;
        int i0, $i1;
        android.os.Bundle r3;
        android.app.Instrumentation$ActivityResult r4;
        android.app.ActivityThread $r5, $r9;
        android.app.Instrumentation $r6;
        android.app.ActivityThread$ApplicationThread $r7;
        android.os.IBinder $r8, $r10;
        java.lang.String $r11;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.content.Intent;

        i0 := @parameter2: int;

        r3 := @parameter3: android.os.Bundle;

        $r6 = r0.<android.app.Activity: android.app.Instrumentation mInstrumentation>;

        $r5 = r0.<android.app.Activity: android.app.ActivityThread mMainThread>;

        $r7 = virtualinvoke $r5.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread getApplicationThread()>();

        $r8 = r0.<android.app.Activity: android.os.IBinder mToken>;

        r4 = virtualinvoke $r6.<android.app.Instrumentation: android.app.Instrumentation$ActivityResult execStartActivity(android.content.Context,android.os.IBinder,android.os.IBinder,android.app.Activity,android.content.Intent,int,android.os.Bundle)>(r0, $r7, $r8, r1, r2, i0, r3);

        if r4 == null goto label1;

        $r9 = r0.<android.app.Activity: android.app.ActivityThread mMainThread>;

        $r10 = r0.<android.app.Activity: android.os.IBinder mToken>;

        $r11 = r1.<android.app.Activity: java.lang.String mEmbeddedID>;

        $i1 = virtualinvoke r4.<android.app.Instrumentation$ActivityResult: int getResultCode()>();

        $r12 = virtualinvoke r4.<android.app.Instrumentation$ActivityResult: android.content.Intent getResultData()>();

        virtualinvoke $r9.<android.app.ActivityThread: void sendActivityResult(android.os.IBinder,java.lang.String,int,int,android.content.Intent)>($r10, $r11, i0, $i1, $r12);

     label1:
        return;
    }

    public void startActivityFromFragment(android.app.Fragment, android.content.Intent, int)
    {
        android.app.Activity r0;
        android.app.Fragment r1;
        android.content.Intent r2;
        int i0;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.app.Fragment;

        r2 := @parameter1: android.content.Intent;

        i0 := @parameter2: int;

        virtualinvoke r0.<android.app.Activity: void startActivityFromFragment(android.app.Fragment,android.content.Intent,int,android.os.Bundle)>(r1, r2, i0, null);

        return;
    }

    public void startActivityFromFragment(android.app.Fragment, android.content.Intent, int, android.os.Bundle)
    {
        android.app.Activity r0;
        android.app.Fragment r1;
        android.content.Intent r2, $r12;
        int i0, $i1;
        android.os.Bundle r3;
        android.app.Instrumentation$ActivityResult r4;
        android.app.ActivityThread $r5, $r9;
        android.app.Instrumentation $r6;
        android.app.ActivityThread$ApplicationThread $r7;
        android.os.IBinder $r8, $r10;
        java.lang.String $r11;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.app.Fragment;

        r2 := @parameter1: android.content.Intent;

        i0 := @parameter2: int;

        r3 := @parameter3: android.os.Bundle;

        $r6 = r0.<android.app.Activity: android.app.Instrumentation mInstrumentation>;

        $r5 = r0.<android.app.Activity: android.app.ActivityThread mMainThread>;

        $r7 = virtualinvoke $r5.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread getApplicationThread()>();

        $r8 = r0.<android.app.Activity: android.os.IBinder mToken>;

        r4 = virtualinvoke $r6.<android.app.Instrumentation: android.app.Instrumentation$ActivityResult execStartActivity(android.content.Context,android.os.IBinder,android.os.IBinder,android.app.Fragment,android.content.Intent,int,android.os.Bundle)>(r0, $r7, $r8, r1, r2, i0, r3);

        if r4 == null goto label1;

        $r9 = r0.<android.app.Activity: android.app.ActivityThread mMainThread>;

        $r10 = r0.<android.app.Activity: android.os.IBinder mToken>;

        $r11 = r1.<android.app.Fragment: java.lang.String mWho>;

        $i1 = virtualinvoke r4.<android.app.Instrumentation$ActivityResult: int getResultCode()>();

        $r12 = virtualinvoke r4.<android.app.Instrumentation$ActivityResult: android.content.Intent getResultData()>();

        virtualinvoke $r9.<android.app.ActivityThread: void sendActivityResult(android.os.IBinder,java.lang.String,int,int,android.content.Intent)>($r10, $r11, i0, $i1, $r12);

     label1:
        return;
    }

    public boolean startActivityIfNeeded(android.content.Intent, int)
    {
        android.app.Activity r0;
        android.content.Intent r1;
        int i0;
        boolean $z0;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r0.<android.app.Activity: boolean startActivityIfNeeded(android.content.Intent,int,android.os.Bundle)>(r1, i0, null);

        return $z0;
    }

    public boolean startActivityIfNeeded(android.content.Intent, int, android.os.Bundle)
    {
        android.app.Activity r0, $r4;
        android.content.Intent r1;
        int i0, i1, i2;
        android.os.Bundle r2;
        java.lang.UnsupportedOperationException $r5;
        android.app.IActivityManager $r6;
        android.app.ActivityThread $r7;
        android.app.ActivityThread$ApplicationThread $r8;
        java.lang.String $r9, $r11, $r12;
        android.content.ContentResolver $r10;
        android.os.IBinder $r13;
        android.os.RemoteException $r14;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        $r4 = r0.<android.app.Activity: android.app.Activity mParent>;

        if $r4 != null goto label6;

        i1 = 1;

     label1:
        virtualinvoke r1.<android.content.Intent: boolean migrateExtraStreamToClipData()>();

        virtualinvoke r1.<android.content.Intent: void prepareToLeaveProcess()>();

        $r6 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r7 = r0.<android.app.Activity: android.app.ActivityThread mMainThread>;

        $r8 = virtualinvoke $r7.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread getApplicationThread()>();

        $r9 = virtualinvoke r0.<android.app.Activity: java.lang.String getBasePackageName()>();

        $r10 = virtualinvoke r0.<android.app.Activity: android.content.ContentResolver getContentResolver()>();

        $r12 = virtualinvoke r1.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>($r10);

        $r13 = r0.<android.app.Activity: android.os.IBinder mToken>;

        $r11 = r0.<android.app.Activity: java.lang.String mEmbeddedID>;

        i2 = interfaceinvoke $r6.<android.app.IActivityManager: int startActivity(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,java.lang.String,android.os.ParcelFileDescriptor,android.os.Bundle)>($r8, $r9, r1, $r12, $r13, $r11, i0, 1, null, null, r2);

     label2:
        i1 = i2;

     label3:
        staticinvoke <android.app.Instrumentation: void checkStartActivityResult(int,java.lang.Object)>(i1, r1);

        if i0 < 0 goto label4;

        r0.<android.app.Activity: boolean mStartedActivity> = 1;

     label4:
        if i1 == 1 goto label5;

        return 1;

     label5:
        return 0;

     label6:
        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("startActivityIfNeeded can only be called from a top-level activity");

        throw $r5;

     label7:
        $r14 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label1 to label2 with label7;
    }

    public void startIntentSender(android.content.IntentSender, android.content.Intent, int, int, int) throws android.content.IntentSender$SendIntentException
    {
        android.app.Activity r0;
        android.content.IntentSender r1;
        android.content.Intent r2;
        int i0, i1, i2;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.IntentSender;

        r2 := @parameter1: android.content.Intent;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        virtualinvoke r0.<android.app.Activity: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle)>(r1, r2, i0, i1, i2, null);

        return;
    }

    public void startIntentSender(android.content.IntentSender, android.content.Intent, int, int, int, android.os.Bundle) throws android.content.IntentSender$SendIntentException
    {
        android.app.Activity r0;
        android.content.IntentSender r1;
        android.content.Intent r2;
        int i0, i1, i2;
        android.os.Bundle r3;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.IntentSender;

        r2 := @parameter1: android.content.Intent;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r3 := @parameter5: android.os.Bundle;

        if r3 == null goto label1;

        virtualinvoke r0.<android.app.Activity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>(r1, -1, r2, i0, i1, i2, r3);

        return;

     label1:
        virtualinvoke r0.<android.app.Activity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)>(r1, -1, r2, i0, i1, i2);

        return;
    }

    public void startIntentSenderForResult(android.content.IntentSender, int, android.content.Intent, int, int, int) throws android.content.IntentSender$SendIntentException
    {
        android.app.Activity r0;
        android.content.IntentSender r1;
        int i0, i1, i2, i3;
        android.content.Intent r2;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.IntentSender;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.Intent;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        virtualinvoke r0.<android.app.Activity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>(r1, i0, r2, i1, i2, i3, null);

        return;
    }

    public void startIntentSenderForResult(android.content.IntentSender, int, android.content.Intent, int, int, int, android.os.Bundle) throws android.content.IntentSender$SendIntentException
    {
        android.app.Activity r0, $r4, $r5, $r6;
        android.content.IntentSender r1;
        int i0, i1, i2, i3;
        android.content.Intent r2;
        android.os.Bundle r3;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.IntentSender;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.Intent;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        r3 := @parameter6: android.os.Bundle;

        $r4 = r0.<android.app.Activity: android.app.Activity mParent>;

        if $r4 != null goto label1;

        specialinvoke r0.<android.app.Activity: void startIntentSenderForResultInner(android.content.IntentSender,int,android.content.Intent,int,int,android.app.Activity,android.os.Bundle)>(r1, i0, r2, i1, i2, r0, r3);

        return;

     label1:
        if r3 == null goto label2;

        $r6 = r0.<android.app.Activity: android.app.Activity mParent>;

        virtualinvoke $r6.<android.app.Activity: void startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>(r0, r1, i0, r2, i1, i2, i3, r3);

        return;

     label2:
        $r5 = r0.<android.app.Activity: android.app.Activity mParent>;

        virtualinvoke $r5.<android.app.Activity: void startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int)>(r0, r1, i0, r2, i1, i2, i3);

        return;
    }

    public void startIntentSenderFromChild(android.app.Activity, android.content.IntentSender, int, android.content.Intent, int, int, int) throws android.content.IntentSender$SendIntentException
    {
        android.app.Activity r0, r1;
        android.content.IntentSender r2;
        int i0, i1, i2, i3;
        android.content.Intent r3;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.content.IntentSender;

        i0 := @parameter2: int;

        r3 := @parameter3: android.content.Intent;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        virtualinvoke r0.<android.app.Activity: void startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>(r1, r2, i0, r3, i1, i2, i3, null);

        return;
    }

    public void startIntentSenderFromChild(android.app.Activity, android.content.IntentSender, int, android.content.Intent, int, int, int, android.os.Bundle) throws android.content.IntentSender$SendIntentException
    {
        android.app.Activity r0, r1;
        android.content.IntentSender r2;
        int i0, i1, i2, i3;
        android.content.Intent r3;
        android.os.Bundle r4;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.content.IntentSender;

        i0 := @parameter2: int;

        r3 := @parameter3: android.content.Intent;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        r4 := @parameter7: android.os.Bundle;

        specialinvoke r0.<android.app.Activity: void startIntentSenderForResultInner(android.content.IntentSender,int,android.content.Intent,int,int,android.app.Activity,android.os.Bundle)>(r2, i0, r3, i1, i2, r1, r4);

        return;
    }

    public void startManagingCursor(android.database.Cursor)
    {
        android.app.Activity r0;
        android.database.Cursor r1;
        java.util.ArrayList r2, $r5;
        java.lang.Throwable r3, $r6;
        android.app.Activity$ManagedCursor $r4;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.database.Cursor;

        r2 = r0.<android.app.Activity: java.util.ArrayList mManagedCursors>;

        entermonitor r2;

     label1:
        $r5 = r0.<android.app.Activity: java.util.ArrayList mManagedCursors>;

        $r4 = new android.app.Activity$ManagedCursor;

        specialinvoke $r4.<android.app.Activity$ManagedCursor: void <init>(android.database.Cursor)>(r1);

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean startNextMatchingActivity(android.content.Intent)
    {
        android.app.Activity r0;
        android.content.Intent r1;
        boolean $z0;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.Intent;

        $z0 = virtualinvoke r0.<android.app.Activity: boolean startNextMatchingActivity(android.content.Intent,android.os.Bundle)>(r1, null);

        return $z0;
    }

    public boolean startNextMatchingActivity(android.content.Intent, android.os.Bundle)
    {
        android.app.Activity r0, $r4;
        android.content.Intent r1;
        android.os.Bundle r2;
        boolean z0;
        java.lang.UnsupportedOperationException $r5;
        android.app.IActivityManager $r6;
        android.os.IBinder $r7;
        android.os.RemoteException $r8;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: android.os.Bundle;

        $r4 = r0.<android.app.Activity: android.app.Activity mParent>;

        if $r4 != null goto label4;

     label1:
        virtualinvoke r1.<android.content.Intent: boolean migrateExtraStreamToClipData()>();

        virtualinvoke r1.<android.content.Intent: void prepareToLeaveProcess()>();

        $r6 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r7 = r0.<android.app.Activity: android.os.IBinder mToken>;

        z0 = interfaceinvoke $r6.<android.app.IActivityManager: boolean startNextMatchingActivity(android.os.IBinder,android.content.Intent,android.os.Bundle)>($r7, r1, r2);

     label2:
        return z0;

     label3:
        $r8 := @caughtexception;

        return 0;

     label4:
        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("startNextMatchingActivity can only be called from a top-level activity");

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void startSearch(java.lang.String, boolean, android.os.Bundle, boolean)
    {
        android.app.Activity r0;
        java.lang.String r1;
        boolean z0, z1;
        android.os.Bundle r2;
        android.app.SearchManager $r3;
        android.content.ComponentName $r4;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.os.Bundle;

        z1 := @parameter3: boolean;

        specialinvoke r0.<android.app.Activity: void ensureSearchManager()>();

        $r3 = r0.<android.app.Activity: android.app.SearchManager mSearchManager>;

        $r4 = virtualinvoke r0.<android.app.Activity: android.content.ComponentName getComponentName()>();

        virtualinvoke $r3.<android.app.SearchManager: void startSearch(java.lang.String,boolean,android.content.ComponentName,android.os.Bundle,boolean)>(r1, z0, $r4, r2, z1);

        return;
    }

    public void stopManagingCursor(android.database.Cursor)
    {
        android.app.Activity r0;
        android.database.Cursor r1, $r8;
        java.util.ArrayList r2, $r4, $r5, $r9;
        java.lang.Throwable r3, $r11;
        int i0, i1;
        java.lang.Object $r6;
        android.app.Activity$ManagedCursor $r7;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.database.Cursor;

        r2 = r0.<android.app.Activity: java.util.ArrayList mManagedCursors>;

        entermonitor r2;

     label01:
        $r4 = r0.<android.app.Activity: java.util.ArrayList mManagedCursors>;

        i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label05;

     label04:
        $r5 = r0.<android.app.Activity: java.util.ArrayList mManagedCursors>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r7 = (android.app.Activity$ManagedCursor) $r6;

        $r8 = staticinvoke <android.app.Activity$ManagedCursor: android.database.Cursor access$100(android.app.Activity$ManagedCursor)>($r7);

        if $r8 != r1 goto label10;

        $r9 = r0.<android.app.Activity: java.util.ArrayList mManagedCursors>;

        virtualinvoke $r9.<java.util.ArrayList: java.lang.Object remove(int)>(i1);

     label05:
        exitmonitor r2;

     label06:
        return;

     label07:
        $r11 := @caughtexception;

        r3 = $r11;

     label08:
        exitmonitor r2;

     label09:
        throw r3;

     label10:
        i1 = i1 + 1;

        goto label03;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
    }

    public void takeKeyEvents(boolean)
    {
        android.app.Activity r0;
        boolean z0;
        android.view.Window $r1;

        r0 := @this: android.app.Activity;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();

        virtualinvoke $r1.<android.view.Window: void takeKeyEvents(boolean)>(z0);

        return;
    }

    public void triggerSearch(java.lang.String, android.os.Bundle)
    {
        android.app.Activity r0;
        java.lang.String r1;
        android.os.Bundle r2;
        android.app.SearchManager $r3;
        android.content.ComponentName $r4;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        specialinvoke r0.<android.app.Activity: void ensureSearchManager()>();

        $r3 = r0.<android.app.Activity: android.app.SearchManager mSearchManager>;

        $r4 = virtualinvoke r0.<android.app.Activity: android.content.ComponentName getComponentName()>();

        virtualinvoke $r3.<android.app.SearchManager: void triggerSearch(java.lang.String,android.content.ComponentName,android.os.Bundle)>(r1, $r4, r2);

        return;
    }

    public void unregisterForContextMenu(android.view.View)
    {
        android.app.Activity r0;
        android.view.View r1;

        r0 := @this: android.app.Activity;

        r1 := @parameter0: android.view.View;

        virtualinvoke r1.<android.view.View: void setOnCreateContextMenuListener(android.view.View$OnCreateContextMenuListener)>(null);

        return;
    }
}
