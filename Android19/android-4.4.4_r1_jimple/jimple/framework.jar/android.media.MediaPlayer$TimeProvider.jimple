class android.media.MediaPlayer$TimeProvider extends java.lang.Object implements android.media.MediaPlayer$OnSeekCompleteListener, android.media.MediaTimeProvider
{
    private static final long MAX_EARLY_CALLBACK_US;
    private static final long MAX_NS_WITHOUT_POSITION_CHECK;
    private static final int NOTIFY;
    private static final int NOTIFY_SEEK;
    private static final int NOTIFY_STOP;
    private static final int NOTIFY_TIME;
    private static final int REFRESH_AND_NOTIFY_TIME;
    private static final java.lang.String TAG;
    private static final long TIME_ADJUSTMENT_RATE;
    public boolean DEBUG;
    private android.os.Handler mEventHandler;
    private android.os.HandlerThread mHandlerThread;
    private long mLastNanoTime;
    private long mLastReportedTime;
    private long mLastTimeUs;
    private android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners;
    private boolean mPaused;
    private boolean mPausing;
    private android.media.MediaPlayer mPlayer;
    private boolean mRefresh;
    private boolean mSeeking;
    private boolean mStopped;
    private long mTimeAdjustment;
    private long[] mTimes;

    public void <init>(android.media.MediaPlayer)
    {
        android.media.MediaPlayer$TimeProvider r0;
        android.media.MediaPlayer r1;
        android.os.Looper r3;
        android.media.MediaPlayer$TimeProvider$EventHandler $r4;
        android.media.MediaTimeProvider$OnMediaTimeListener[] $r5;
        long[] $r6;
        android.os.HandlerThread $r7, $r8, $r9;
        java.lang.IllegalStateException $r10;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        r1 := @parameter0: android.media.MediaPlayer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.MediaPlayer$TimeProvider: long mLastTimeUs> = 0L;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mPaused> = 1;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mStopped> = 1;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mRefresh> = 0;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mPausing> = 0;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mSeeking> = 0;

        r0.<android.media.MediaPlayer$TimeProvider: boolean DEBUG> = 0;

        r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaPlayer mPlayer> = r1;

     label1:
        virtualinvoke r0.<android.media.MediaPlayer$TimeProvider: long getCurrentTimeUs(boolean,boolean)>(1, 0);

     label2:
        r3 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if r3 != null goto label3;

        r3 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        if r3 != null goto label3;

        $r7 = new android.os.HandlerThread;

        specialinvoke $r7.<android.os.HandlerThread: void <init>(java.lang.String,int)>("MediaPlayerMTPEventThread", -2);

        r0.<android.media.MediaPlayer$TimeProvider: android.os.HandlerThread mHandlerThread> = $r7;

        $r8 = r0.<android.media.MediaPlayer$TimeProvider: android.os.HandlerThread mHandlerThread>;

        virtualinvoke $r8.<android.os.HandlerThread: void start()>();

        $r9 = r0.<android.media.MediaPlayer$TimeProvider: android.os.HandlerThread mHandlerThread>;

        r3 = virtualinvoke $r9.<android.os.HandlerThread: android.os.Looper getLooper()>();

     label3:
        $r4 = new android.media.MediaPlayer$TimeProvider$EventHandler;

        specialinvoke $r4.<android.media.MediaPlayer$TimeProvider$EventHandler: void <init>(android.media.MediaPlayer$TimeProvider,android.os.Looper)>(r0, r3);

        r0.<android.media.MediaPlayer$TimeProvider: android.os.Handler mEventHandler> = $r4;

        $r5 = newarray (android.media.MediaTimeProvider$OnMediaTimeListener)[0];

        r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners> = $r5;

        $r6 = newarray (long)[0];

        r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes> = $r6;

        r0.<android.media.MediaPlayer$TimeProvider: long mLastTimeUs> = 0L;

        r0.<android.media.MediaPlayer$TimeProvider: long mTimeAdjustment> = 0L;

        return;

     label4:
        $r10 := @caughtexception;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mRefresh> = 1;

        goto label2;

        catch java.lang.IllegalStateException from label1 to label2 with label4;
    }

    static void access$2000(android.media.MediaPlayer$TimeProvider, boolean)
    {
        android.media.MediaPlayer$TimeProvider r0;
        boolean z0;

        r0 := @parameter0: android.media.MediaPlayer$TimeProvider;

        z0 := @parameter1: boolean;

        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void notifyTimedEvent(boolean)>(z0);

        return;
    }

    static void access$2100(android.media.MediaPlayer$TimeProvider)
    {
        android.media.MediaPlayer$TimeProvider r0;

        r0 := @parameter0: android.media.MediaPlayer$TimeProvider;

        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void notifyStop()>();

        return;
    }

    static void access$2200(android.media.MediaPlayer$TimeProvider)
    {
        android.media.MediaPlayer$TimeProvider r0;

        r0 := @parameter0: android.media.MediaPlayer$TimeProvider;

        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void notifySeek()>();

        return;
    }

    private long getEstimatedTime(long, boolean)
    {
        android.media.MediaPlayer$TimeProvider r0;
        long l0, l1, l2, $l3, $l4, $l5, $l6, $l7, $l9, $l10, $l11, $l12, $l14, $l15, $l16, $l17;
        boolean z0, $z1;
        byte $b8, $b13;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        $z1 = r0.<android.media.MediaPlayer$TimeProvider: boolean mPaused>;

        if $z1 == 0 goto label2;

        $l17 = r0.<android.media.MediaPlayer$TimeProvider: long mLastTimeUs>;

        $l14 = r0.<android.media.MediaPlayer$TimeProvider: long mTimeAdjustment>;

        $l16 = $l17 + $l14;

        r0.<android.media.MediaPlayer$TimeProvider: long mLastReportedTime> = $l16;

     label1:
        $l9 = r0.<android.media.MediaPlayer$TimeProvider: long mLastReportedTime>;

        return $l9;

     label2:
        $l3 = r0.<android.media.MediaPlayer$TimeProvider: long mLastNanoTime>;

        $l4 = l0 - $l3;

        l1 = $l4 / 1000L;

        $l5 = r0.<android.media.MediaPlayer$TimeProvider: long mLastTimeUs>;

        $l6 = l1 + $l5;

        r0.<android.media.MediaPlayer$TimeProvider: long mLastReportedTime> = $l6;

        $l7 = r0.<android.media.MediaPlayer$TimeProvider: long mTimeAdjustment>;

        $b8 = $l7 cmp 0L;

        if $b8 <= 0 goto label1;

        $l10 = r0.<android.media.MediaPlayer$TimeProvider: long mTimeAdjustment>;

        $l11 = l1 / 2L;

        l2 = $l10 - $l11;

        $b13 = l2 cmp 0L;

        if $b13 > 0 goto label3;

        r0.<android.media.MediaPlayer$TimeProvider: long mTimeAdjustment> = 0L;

        goto label1;

     label3:
        $l12 = r0.<android.media.MediaPlayer$TimeProvider: long mLastReportedTime>;

        $l15 = l2 + $l12;

        r0.<android.media.MediaPlayer$TimeProvider: long mLastReportedTime> = $l15;

        goto label1;
    }

    private void notifySeek()
    {
        android.media.MediaPlayer$TimeProvider r0;
        java.lang.Throwable r1, $r9;
        long l0;
        android.media.MediaTimeProvider$OnMediaTimeListener[] r3;
        int i1, i2;
        android.media.MediaTimeProvider$OnMediaTimeListener r4;
        boolean $z0, $z1;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;
        java.lang.IllegalStateException $r10;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        entermonitor r0;

     label01:
        r0.<android.media.MediaPlayer$TimeProvider: boolean mSeeking> = 0;

     label02:
        l0 = virtualinvoke r0.<android.media.MediaPlayer$TimeProvider: long getCurrentTimeUs(boolean,boolean)>(1, 0);

        $z0 = r0.<android.media.MediaPlayer$TimeProvider: boolean DEBUG>;

        if $z0 == 0 goto label03;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onSeekComplete at ");

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MTP", $r8);

     label03:
        r3 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        i1 = lengthof r3;

     label04:
        i2 = 0;

     label05:
        if i2 >= i1 goto label08;

     label06:
        r4 = r3[i2];

     label07:
        if r4 != null goto label09;

     label08:
        exitmonitor r0;

        return;

     label09:
        interfaceinvoke r4.<android.media.MediaTimeProvider$OnMediaTimeListener: void onSeek(long)>(l0);

     label10:
        i2 = i2 + 1;

        goto label05;

     label11:
        $r10 := @caughtexception;

     label12:
        $z1 = r0.<android.media.MediaPlayer$TimeProvider: boolean DEBUG>;

        if $z1 == 0 goto label13;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MTP", "onSeekComplete but no player");

     label13:
        r0.<android.media.MediaPlayer$TimeProvider: boolean mPausing> = 1;

        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void notifyTimedEvent(boolean)>(0);

     label14:
        goto label08;

     label15:
        $r9 := @caughtexception;

        r1 = $r9;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.IllegalStateException from label02 to label03 with label11;
        catch java.lang.Throwable from label02 to label03 with label15;
        catch java.lang.IllegalStateException from label03 to label04 with label11;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.IllegalStateException from label06 to label07 with label11;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.IllegalStateException from label09 to label10 with label11;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    private void notifyStop()
    {
        android.media.MediaPlayer$TimeProvider r0;
        java.lang.Throwable r1, $r4;
        android.media.MediaTimeProvider$OnMediaTimeListener[] r2;
        int i0, i1;
        android.media.MediaTimeProvider$OnMediaTimeListener r3;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        entermonitor r0;

     label1:
        r2 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        i0 = lengthof r2;

     label2:
        i1 = 0;

     label3:
        if i1 >= i0 goto label6;

     label4:
        r3 = r2[i1];

     label5:
        if r3 != null goto label7;

     label6:
        exitmonitor r0;

        return;

     label7:
        interfaceinvoke r3.<android.media.MediaTimeProvider$OnMediaTimeListener: void onStop()>();

     label8:
        i1 = i1 + 1;

        goto label3;

     label9:
        $r4 := @caughtexception;

        r1 = $r4;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label4 to label5 with label9;
        catch java.lang.Throwable from label7 to label8 with label9;
    }

    private void notifyTimedEvent(boolean)
    {
        android.media.MediaPlayer$TimeProvider r0;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z8;
        java.lang.Throwable r1, $r38;
        long l0, l1, l4, l6, $l9, $l11, $l13, $l16, $l17, $l20;
        java.lang.StringBuilder r3, $r12, $r13, $r15, $r16, $r17, $r27, $r28, $r29, $r31, $r32;
        long[] r4, $r8, $r18, $r21, $r22, $r24, $r25;
        int i2, i3, i5, $i7;
        java.util.Vector r5, $r7;
        java.util.Iterator r6;
        byte $b8, $b12, $b14, $b15, $b18, $b21;
        android.os.Handler $r9;
        java.lang.Object $r10;
        android.media.MediaTimeProvider$OnMediaTimeListener $r11, $r19, $r23;
        java.lang.String $r14, $r37;
        android.media.MediaTimeProvider$OnMediaTimeListener[] $r20, $r26;
        java.lang.IllegalStateException $r34;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        z0 := @parameter0: boolean;

        entermonitor r0;

     label01:
        l6 = virtualinvoke r0.<android.media.MediaPlayer$TimeProvider: long getCurrentTimeUs(boolean,boolean)>(z0, 1);

     label02:
        l0 = l6;

     label03:
        l1 = l0;

     label04:
        z1 = r0.<android.media.MediaPlayer$TimeProvider: boolean mSeeking>;

     label05:
        if z1 == 0 goto label10;

     label06:
        exitmonitor r0;

        return;

     label07:
        $r34 := @caughtexception;

     label08:
        r0.<android.media.MediaPlayer$TimeProvider: boolean mRefresh> = 1;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mPausing> = 1;

        l0 = virtualinvoke r0.<android.media.MediaPlayer$TimeProvider: long getCurrentTimeUs(boolean,boolean)>(z0, 1);

     label09:
        goto label03;

     label10:
        $z3 = r0.<android.media.MediaPlayer$TimeProvider: boolean DEBUG>;

        if $z3 == 0 goto label22;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        r3 = $r31;

        $r32 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("notifyTimedEvent(");

        $l20 = r0.<android.media.MediaPlayer$TimeProvider: long mLastTimeUs>;

        $r27 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l20);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") from {");

     label11:
        z2 = 1;

     label12:
        r4 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        i2 = lengthof r4;

     label13:
        i3 = 0;

     label14:
        if i3 >= i2 goto label21;

     label15:
        l4 = r4[i3];

     label16:
        $b21 = l4 cmp -1L;

        if $b21 != 0 goto label17;

        goto label43;

     label17:
        if z2 != 0 goto label19;

     label18:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label19:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l4);

     label20:
        z2 = 0;

        goto label43;

     label21:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r37 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MTP", $r37);

     label22:
        $r7 = new java.util.Vector;

        specialinvoke $r7.<java.util.Vector: void <init>()>();

        r5 = $r7;

     label23:
        i5 = 0;

     label24:
        $r8 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $i7 = lengthof $r8;

        if i5 >= $i7 goto label25;

        $r20 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $r19 = $r20[i5];

        if $r19 != null goto label32;

     label25:
        $b8 = l1 cmp l0;

        if $b8 <= 0 goto label41;

     label26:
        $z5 = r0.<android.media.MediaPlayer$TimeProvider: boolean mPaused>;

        if $z5 != 0 goto label41;

        $z6 = r0.<android.media.MediaPlayer$TimeProvider: boolean DEBUG>;

        if $z6 == 0 goto label27;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("scheduling for ");

        $r17 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MTP", $r14);

     label27:
        $l9 = l1 - l0;

        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void scheduleNotification(int,long)>(0, $l9);

     label28:
        r6 = virtualinvoke r5.<java.util.Vector: java.util.Iterator iterator()>();

     label29:
        $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label06;

        $r10 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (android.media.MediaTimeProvider$OnMediaTimeListener) $r10;

        interfaceinvoke $r11.<android.media.MediaTimeProvider$OnMediaTimeListener: void onTimedEvent(long)>(l0);

     label30:
        goto label29;

     label31:
        $r38 := @caughtexception;

        r1 = $r38;

        exitmonitor r0;

        throw r1;

     label32:
        $r18 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $l13 = $r18[i5];

        $b12 = $l13 cmp -1L;

        if $b12 > 0 goto label34;

     label33:
        goto label44;

     label34:
        $r21 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $l16 = $r21[i5];

        $l11 = 1000L + l0;

        $b15 = $l16 cmp $l11;

        if $b15 > 0 goto label37;

        $r26 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $r23 = $r26[i5];

        virtualinvoke r5.<java.util.Vector: boolean add(java.lang.Object)>($r23);

        $z8 = r0.<android.media.MediaPlayer$TimeProvider: boolean DEBUG>;

        if $z8 == 0 goto label35;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MTP", "removed");

     label35:
        $r24 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $r24[i5] = -1L;

     label36:
        goto label44;

     label37:
        $b14 = l1 cmp l0;

        if $b14 == 0 goto label39;

     label38:
        $r25 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $l17 = $r25[i5];

        $b18 = $l17 cmp l1;

        if $b18 >= 0 goto label44;

     label39:
        $r22 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        l1 = $r22[i5];

     label40:
        goto label44;

     label41:
        $r9 = r0.<android.media.MediaPlayer$TimeProvider: android.os.Handler mEventHandler>;

        virtualinvoke $r9.<android.os.Handler: void removeMessages(int)>(1);

     label42:
        goto label28;

     label43:
        i3 = i3 + 1;

        goto label14;

     label44:
        i5 = i5 + 1;

        goto label24;

        catch java.lang.IllegalStateException from label01 to label02 with label07;
        catch java.lang.Throwable from label01 to label02 with label31;
        catch java.lang.Throwable from label04 to label05 with label31;
        catch java.lang.Throwable from label08 to label09 with label31;
        catch java.lang.Throwable from label10 to label11 with label31;
        catch java.lang.Throwable from label12 to label13 with label31;
        catch java.lang.Throwable from label15 to label16 with label31;
        catch java.lang.Throwable from label18 to label19 with label31;
        catch java.lang.Throwable from label19 to label20 with label31;
        catch java.lang.Throwable from label21 to label22 with label31;
        catch java.lang.Throwable from label22 to label23 with label31;
        catch java.lang.Throwable from label24 to label25 with label31;
        catch java.lang.Throwable from label26 to label27 with label31;
        catch java.lang.Throwable from label27 to label28 with label31;
        catch java.lang.Throwable from label28 to label29 with label31;
        catch java.lang.Throwable from label29 to label30 with label31;
        catch java.lang.Throwable from label32 to label33 with label31;
        catch java.lang.Throwable from label34 to label35 with label31;
        catch java.lang.Throwable from label35 to label36 with label31;
        catch java.lang.Throwable from label38 to label39 with label31;
        catch java.lang.Throwable from label39 to label40 with label31;
        catch java.lang.Throwable from label41 to label42 with label31;
    }

    private int registerListener(android.media.MediaTimeProvider$OnMediaTimeListener)
    {
        android.media.MediaPlayer$TimeProvider r0;
        android.media.MediaTimeProvider$OnMediaTimeListener r1, $r7, $r16, $r17;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.media.MediaTimeProvider$OnMediaTimeListener[] r2, $r4, $r5, $r6, $r8, $r10, $r11, $r13, $r15;
        long[] r3, $r9, $r12, $r14;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        r1 := @parameter0: android.media.MediaTimeProvider$OnMediaTimeListener;

        i0 = 0;

     label1:
        $r4 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $i1 = lengthof $r4;

        if i0 >= $i1 goto label2;

        $r13 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $r16 = $r13[i0];

        if $r16 == r1 goto label2;

        $r15 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $r17 = $r15[i0];

        if $r17 != null goto label5;

     label2:
        $r5 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $i2 = lengthof $r5;

        if i0 < $i2 goto label3;

        $i3 = i0 + 1;

        r2 = newarray (android.media.MediaTimeProvider$OnMediaTimeListener)[$i3];

        $i4 = i0 + 1;

        r3 = newarray (long)[$i4];

        $r11 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $r10 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $i5 = lengthof $r10;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r11, 0, r2, 0, $i5);

        $r14 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $r12 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $i6 = lengthof $r12;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r14, 0, r3, 0, $i6);

        r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners> = r2;

        r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes> = r3;

     label3:
        $r6 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $r7 = $r6[i0];

        if $r7 != null goto label4;

        $r8 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $r8[i0] = r1;

        $r9 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $r9[i0] = -1L;

     label4:
        return i0;

     label5:
        i0 = i0 + 1;

        goto label1;
    }

    private void scheduleNotification(int, long)
    {
        android.media.MediaPlayer$TimeProvider r0;
        int i0, $i3;
        long l1, $l2, $l4;
        android.os.Message r1;
        boolean $z0, $z1;
        android.os.Handler $r2, $r3, $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r10;
        java.lang.String $r9;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $z0 = r0.<android.media.MediaPlayer$TimeProvider: boolean mSeeking>;

        if $z0 == 0 goto label2;

        if i0 == 0 goto label1;

        if i0 != 1 goto label2;

     label1:
        return;

     label2:
        $z1 = r0.<android.media.MediaPlayer$TimeProvider: boolean DEBUG>;

        if $z1 == 0 goto label3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("scheduleNotification ");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MTP", $r9);

     label3:
        $r2 = r0.<android.media.MediaPlayer$TimeProvider: android.os.Handler mEventHandler>;

        virtualinvoke $r2.<android.os.Handler: void removeMessages(int)>(1);

        $r3 = r0.<android.media.MediaPlayer$TimeProvider: android.os.Handler mEventHandler>;

        r1 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(1, i0, 0);

        $r4 = r0.<android.media.MediaPlayer$TimeProvider: android.os.Handler mEventHandler>;

        $l2 = l1 / 1000L;

        $i3 = (int) $l2;

        $l4 = (long) $i3;

        virtualinvoke $r4.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>(r1, $l4);

        return;
    }

    public void cancelNotifications(android.media.MediaTimeProvider$OnMediaTimeListener)
    {
        android.media.MediaPlayer$TimeProvider r0;
        android.media.MediaTimeProvider$OnMediaTimeListener r1, $r5, $r7;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.lang.Throwable r2, $r17;
        android.media.MediaTimeProvider$OnMediaTimeListener[] $r3, $r4, $r6, $r8, $r9, $r11, $r14, $r15;
        long[] $r10, $r12, $r13, $r16, $r18;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        r1 := @parameter0: android.media.MediaTimeProvider$OnMediaTimeListener;

        entermonitor r0;

        i0 = 0;

     label1:
        $r3 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $i1 = lengthof $r3;

        if i0 >= $i1 goto label2;

        $r4 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $r5 = $r4[i0];

        if $r5 != r1 goto label4;

        $r11 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $i5 = i0 + 1;

        $r9 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $r8 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $i2 = lengthof $r8;

        $i3 = $i2 - i0;

        $i4 = -1 + $i3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r11, $i5, $r9, i0, $i4);

        $r13 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $i9 = i0 + 1;

        $r12 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $r10 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $i7 = lengthof $r10;

        $i6 = $i7 - i0;

        $i8 = -1 + $i6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r13, $i9, $r12, i0, $i8);

        $r15 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $r14 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $i10 = lengthof $r14;

        $i11 = -1 + $i10;

        $r15[$i11] = null;

        $r18 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $r16 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $i12 = lengthof $r16;

        $i13 = -1 + $i12;

        $r18[$i13] = -1L;

     label2:
        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void scheduleNotification(int,long)>(0, 0L);

        exitmonitor r0;

     label3:
        return;

     label4:
        $r6 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $r7 = $r6[i0];

        if $r7 == null goto label2;

     label5:
        i0 = i0 + 1;

        goto label1;

     label6:
        $r17 := @caughtexception;

        r2 = $r17;

     label7:
        exitmonitor r0;

     label8:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void close()
    {
        android.media.MediaPlayer$TimeProvider r0;
        android.os.Handler $r1;
        android.os.HandlerThread $r2, $r3;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        $r1 = r0.<android.media.MediaPlayer$TimeProvider: android.os.Handler mEventHandler>;

        virtualinvoke $r1.<android.os.Handler: void removeMessages(int)>(1);

        $r2 = r0.<android.media.MediaPlayer$TimeProvider: android.os.HandlerThread mHandlerThread>;

        if $r2 == null goto label1;

        $r3 = r0.<android.media.MediaPlayer$TimeProvider: android.os.HandlerThread mHandlerThread>;

        virtualinvoke $r3.<android.os.HandlerThread: boolean quitSafely()>();

        r0.<android.media.MediaPlayer$TimeProvider: android.os.HandlerThread mHandlerThread> = null;

     label1:
        return;
    }

    protected void finalize()
    {
        android.media.MediaPlayer$TimeProvider r0;
        android.os.HandlerThread $r1, $r2;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        $r1 = r0.<android.media.MediaPlayer$TimeProvider: android.os.HandlerThread mHandlerThread>;

        if $r1 == null goto label1;

        $r2 = r0.<android.media.MediaPlayer$TimeProvider: android.os.HandlerThread mHandlerThread>;

        virtualinvoke $r2.<android.os.HandlerThread: boolean quitSafely()>();

     label1:
        return;
    }

    public long getCurrentTimeUs(boolean, boolean) throws java.lang.IllegalStateException
    {
        android.media.MediaPlayer$TimeProvider r0;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.Throwable r1, $r12;
        long l0, l1, l2, l3, l4, $l5, $l7, $l8, $l9, $l10, $l11, $l13, $l14, $l16, $l17, $l21;
        java.lang.IllegalStateException r2, $r13;
        java.lang.StringBuilder r3, $r7, $r8, $r9, $r11, $r14, $r15, $r16;
        java.lang.String r4, $r10, $r17;
        android.media.MediaPlayer $r5, $r6;
        int $i6;
        byte $b12, $b15, $b19;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 = 1;

        entermonitor r0;

     label01:
        $z3 = r0.<android.media.MediaPlayer$TimeProvider: boolean mPaused>;

        if $z3 == 0 goto label05;

     label02:
        if z0 != 0 goto label05;

     label03:
        l0 = r0.<android.media.MediaPlayer$TimeProvider: long mLastReportedTime>;

        exitmonitor r0;

     label04:
        return l0;

     label05:
        l1 = staticinvoke <java.lang.System: long nanoTime()>();

     label06:
        if z0 != 0 goto label09;

     label07:
        l2 = r0.<android.media.MediaPlayer$TimeProvider: long mLastNanoTime>;

     label08:
        $l17 = l2 + 5000000000L;

        $b19 = l1 cmp $l17;

        if $b19 < 0 goto label16;

     label09:
        $r5 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaPlayer mPlayer>;

        $i6 = virtualinvoke $r5.<android.media.MediaPlayer: int getCurrentPosition()>();

        $l5 = (long) $i6;

        $l7 = 1000L * $l5;

        r0.<android.media.MediaPlayer$TimeProvider: long mLastTimeUs> = $l7;

        $r6 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaPlayer mPlayer>;

        $z5 = virtualinvoke $r6.<android.media.MediaPlayer: boolean isPlaying()>();

        if $z5 != 0 goto label21;

     label10:
        r0.<android.media.MediaPlayer$TimeProvider: boolean mPaused> = z2;

        $z4 = r0.<android.media.MediaPlayer$TimeProvider: boolean DEBUG>;

        if $z4 == 0 goto label13;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        r3 = $r7;

        $z6 = r0.<android.media.MediaPlayer$TimeProvider: boolean mPaused>;

        if $z6 == 0 goto label22;

     label11:
        r4 = "paused";

     label12:
        $r9 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $l16 = r0.<android.media.MediaPlayer$TimeProvider: long mLastTimeUs>;

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l16);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MTP", $r10);

     label13:
        r0.<android.media.MediaPlayer$TimeProvider: long mLastNanoTime> = l1;

     label14:
        if z1 == 0 goto label28;

     label15:
        $l9 = r0.<android.media.MediaPlayer$TimeProvider: long mLastTimeUs>;

        $l8 = r0.<android.media.MediaPlayer$TimeProvider: long mLastReportedTime>;

        $b12 = $l9 cmp $l8;

        if $b12 >= 0 goto label28;

        $l10 = r0.<android.media.MediaPlayer$TimeProvider: long mLastReportedTime>;

        $l13 = r0.<android.media.MediaPlayer$TimeProvider: long mLastTimeUs>;

        $l11 = $l10 - $l13;

        r0.<android.media.MediaPlayer$TimeProvider: long mTimeAdjustment> = $l11;

        $l14 = r0.<android.media.MediaPlayer$TimeProvider: long mTimeAdjustment>;

        $b15 = $l14 cmp 1000000L;

        if $b15 <= 0 goto label16;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mStopped> = 0;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mSeeking> = 1;

        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void scheduleNotification(int,long)>(3, 0L);

     label16:
        l3 = specialinvoke r0.<android.media.MediaPlayer$TimeProvider: long getEstimatedTime(long,boolean)>(l1, z1);

        exitmonitor r0;

     label17:
        return l3;

     label18:
        $r12 := @caughtexception;

        r1 = $r12;

     label19:
        exitmonitor r0;

     label20:
        throw r1;

     label21:
        z2 = 0;

        goto label10;

     label22:
        r4 = "playing";

        goto label12;

     label23:
        $r13 := @caughtexception;

        r2 = $r13;

     label24:
        $z8 = r0.<android.media.MediaPlayer$TimeProvider: boolean mPausing>;

        if $z8 == 0 goto label27;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mPausing> = 0;

        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: long getEstimatedTime(long,boolean)>(l1, z1);

        r0.<android.media.MediaPlayer$TimeProvider: boolean mPaused> = 1;

        $z7 = r0.<android.media.MediaPlayer$TimeProvider: boolean DEBUG>;

        if $z7 == 0 goto label25;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal state, but pausing: estimating at ");

        $l21 = r0.<android.media.MediaPlayer$TimeProvider: long mLastReportedTime>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l21);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MTP", $r17);

     label25:
        l4 = r0.<android.media.MediaPlayer$TimeProvider: long mLastReportedTime>;

        exitmonitor r0;

     label26:
        return l4;

     label27:
        throw r2;

     label28:
        r0.<android.media.MediaPlayer$TimeProvider: long mTimeAdjustment> = 0L;

     label29:
        goto label16;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label05 to label06 with label18;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch java.lang.IllegalStateException from label09 to label10 with label23;
        catch java.lang.Throwable from label09 to label10 with label18;
        catch java.lang.IllegalStateException from label10 to label11 with label23;
        catch java.lang.Throwable from label10 to label11 with label18;
        catch java.lang.IllegalStateException from label12 to label13 with label23;
        catch java.lang.Throwable from label12 to label13 with label18;
        catch java.lang.Throwable from label13 to label14 with label18;
        catch java.lang.Throwable from label15 to label16 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
        catch java.lang.Throwable from label24 to label25 with label18;
        catch java.lang.Throwable from label25 to label26 with label18;
        catch java.lang.Throwable from label27 to label28 with label18;
        catch java.lang.Throwable from label28 to label29 with label18;
    }

    public void notifyAt(long, android.media.MediaTimeProvider$OnMediaTimeListener)
    {
        android.media.MediaPlayer$TimeProvider r0;
        long l0;
        android.media.MediaTimeProvider$OnMediaTimeListener r1;
        java.lang.Throwable r2, $r8;
        boolean $z0;
        long[] $r3;
        int $i1;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        l0 := @parameter0: long;

        r1 := @parameter1: android.media.MediaTimeProvider$OnMediaTimeListener;

        entermonitor r0;

     label1:
        $z0 = r0.<android.media.MediaPlayer$TimeProvider: boolean DEBUG>;

        if $z0 == 0 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("notifyAt ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MTP", $r7);

     label2:
        $r3 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $i1 = specialinvoke r0.<android.media.MediaPlayer$TimeProvider: int registerListener(android.media.MediaTimeProvider$OnMediaTimeListener)>(r1);

        $r3[$i1] = l0;

        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void scheduleNotification(int,long)>(0, 0L);

        exitmonitor r0;

     label3:
        return;

     label4:
        $r8 := @caughtexception;

        r2 = $r8;

     label5:
        exitmonitor r0;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void onNewPlayer()
    {
        android.media.MediaPlayer$TimeProvider r0;
        java.lang.Throwable r1, $r2;
        boolean $z0;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        $z0 = r0.<android.media.MediaPlayer$TimeProvider: boolean mRefresh>;

        if $z0 == 0 goto label6;

        entermonitor r0;

     label1:
        r0.<android.media.MediaPlayer$TimeProvider: boolean mStopped> = 0;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mSeeking> = 1;

        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void scheduleNotification(int,long)>(3, 0L);

        exitmonitor r0;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

     label4:
        exitmonitor r0;

     label5:
        throw r1;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onPaused(boolean)
    {
        android.media.MediaPlayer$TimeProvider r0;
        boolean z0, $z1, $z2;
        java.lang.Throwable r1, $r6;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        z0 := @parameter0: boolean;

        entermonitor r0;

     label1:
        $z1 = r0.<android.media.MediaPlayer$TimeProvider: boolean DEBUG>;

        if $z1 == 0 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onPaused: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MTP", $r5);

     label2:
        $z2 = r0.<android.media.MediaPlayer$TimeProvider: boolean mStopped>;

        if $z2 == 0 goto label5;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mStopped> = 0;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mSeeking> = 1;

        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void scheduleNotification(int,long)>(3, 0L);

     label3:
        exitmonitor r0;

     label4:
        return;

     label5:
        r0.<android.media.MediaPlayer$TimeProvider: boolean mPausing> = z0;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mSeeking> = 0;

        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void scheduleNotification(int,long)>(1, 0L);

     label6:
        goto label3;

     label7:
        $r6 := @caughtexception;

        r1 = $r6;

     label8:
        exitmonitor r0;

     label9:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void onSeekComplete(android.media.MediaPlayer)
    {
        android.media.MediaPlayer$TimeProvider r0;
        android.media.MediaPlayer r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        r1 := @parameter0: android.media.MediaPlayer;

        entermonitor r0;

     label1:
        r0.<android.media.MediaPlayer$TimeProvider: boolean mStopped> = 0;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mSeeking> = 1;

        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void scheduleNotification(int,long)>(3, 0L);

        exitmonitor r0;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        exitmonitor r0;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onStopped()
    {
        android.media.MediaPlayer$TimeProvider r0;
        java.lang.Throwable r1, $r2;
        boolean $z0;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        entermonitor r0;

     label1:
        $z0 = r0.<android.media.MediaPlayer$TimeProvider: boolean DEBUG>;

        if $z0 == 0 goto label2;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MTP", "onStopped");

     label2:
        r0.<android.media.MediaPlayer$TimeProvider: boolean mPaused> = 1;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mStopped> = 1;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mSeeking> = 0;

        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void scheduleNotification(int,long)>(2, 0L);

        exitmonitor r0;

     label3:
        return;

     label4:
        $r2 := @caughtexception;

        r1 = $r2;

     label5:
        exitmonitor r0;

     label6:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void scheduleUpdate(android.media.MediaTimeProvider$OnMediaTimeListener)
    {
        android.media.MediaPlayer$TimeProvider r0;
        android.media.MediaTimeProvider$OnMediaTimeListener r1;
        java.lang.Throwable r2, $r4;
        int i0;
        boolean $z0, $z1;
        long[] $r3;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        r1 := @parameter0: android.media.MediaTimeProvider$OnMediaTimeListener;

        entermonitor r0;

     label1:
        $z0 = r0.<android.media.MediaPlayer$TimeProvider: boolean DEBUG>;

        if $z0 == 0 goto label2;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MTP", "scheduleUpdate");

     label2:
        i0 = specialinvoke r0.<android.media.MediaPlayer$TimeProvider: int registerListener(android.media.MediaTimeProvider$OnMediaTimeListener)>(r1);

        $z1 = r0.<android.media.MediaPlayer$TimeProvider: boolean mStopped>;

        if $z1 == 0 goto label5;

        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void scheduleNotification(int,long)>(2, 0L);

     label3:
        exitmonitor r0;

     label4:
        return;

     label5:
        $r3 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $r3[i0] = 0L;

        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void scheduleNotification(int,long)>(0, 0L);

     label6:
        goto label3;

     label7:
        $r4 := @caughtexception;

        r2 = $r4;

     label8:
        exitmonitor r0;

     label9:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public static void <clinit>()
    {
        <android.media.MediaPlayer$TimeProvider: long TIME_ADJUSTMENT_RATE> = 2L;

        <android.media.MediaPlayer$TimeProvider: java.lang.String TAG> = "MTP";

        <android.media.MediaPlayer$TimeProvider: int REFRESH_AND_NOTIFY_TIME> = 1;

        <android.media.MediaPlayer$TimeProvider: int NOTIFY_TIME> = 0;

        <android.media.MediaPlayer$TimeProvider: int NOTIFY_STOP> = 2;

        <android.media.MediaPlayer$TimeProvider: int NOTIFY_SEEK> = 3;

        <android.media.MediaPlayer$TimeProvider: int NOTIFY> = 1;

        <android.media.MediaPlayer$TimeProvider: long MAX_NS_WITHOUT_POSITION_CHECK> = 5000000000L;

        <android.media.MediaPlayer$TimeProvider: long MAX_EARLY_CALLBACK_US> = 1000L;

        return;
    }
}
