public class android.util.EventLog extends java.lang.Object
{
    private static final java.lang.String COMMENT_PATTERN;
    private static final java.lang.String TAG;
    private static final java.lang.String TAGS_FILE;
    private static final java.lang.String TAG_PATTERN;
    private static java.util.HashMap sTagCodes;
    private static java.util.HashMap sTagNames;

    static void <clinit>()
    {
        <android.util.EventLog: java.lang.String TAG_PATTERN> = "^\\s*(\\d+)\\s+(\\w+)\\s*(\\(.*\\))?\\s*$";

        <android.util.EventLog: java.lang.String TAGS_FILE> = "/system/etc/event-log-tags";

        <android.util.EventLog: java.lang.String TAG> = "EventLog";

        <android.util.EventLog: java.lang.String COMMENT_PATTERN> = "^\\s*(#.*)?$";

        <android.util.EventLog: java.util.HashMap sTagCodes> = null;

        <android.util.EventLog: java.util.HashMap sTagNames> = null;

        return;
    }

    public void <init>()
    {
        android.util.EventLog r0;

        r0 := @this: android.util.EventLog;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int getTagCode(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Integer r1;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        int $i0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.util.EventLog: void readTagsFile()>();

        $r2 = <android.util.EventLog: java.util.HashMap sTagCodes>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);

        r1 = (java.lang.Integer) $r3;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        return $i0;

     label1:
        return -1;
    }

    public static java.lang.String getTagName(int)
    {
        int i0;
        java.util.HashMap $r0;
        java.lang.Integer $r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        i0 := @parameter0: int;

        staticinvoke <android.util.EventLog: void readTagsFile()>();

        $r0 = <android.util.EventLog: java.util.HashMap sTagNames>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2 = virtualinvoke $r0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    public static native void readEvents(int[], java.util.Collection) throws java.io.IOException;

    private static void readTagsFile()
    {
        java.lang.Throwable r0, r5, $r40, $r41, $r44;
        java.util.regex.Pattern r1, r2;
        java.io.BufferedReader r3, r4, $r19;
        java.io.IOException r7, $r34, $r35, $r39, $r42, $r43;
        java.lang.String r9, r12, $r21, $r29, $r36;
        java.util.regex.Matcher r10, $r20;
        java.lang.NumberFormatException r11, $r33;
        int i0;
        java.util.HashMap $r14, r15, $r16, $r17, $r23, $r24;
        java.io.FileReader $r18;
        boolean $z0, $z1;
        java.lang.Integer $r25, $r27;
        java.lang.StringBuilder $r26, $r30, $r31, $r32, $r37, $r38;

        entermonitor class "android/util/EventLog";

     label01:
        $r14 = <android.util.EventLog: java.util.HashMap sTagCodes>;

        if $r14 == null goto label04;

        r15 = <android.util.EventLog: java.util.HashMap sTagNames>;

     label02:
        if r15 == null goto label04;

     label03:
        exitmonitor class "android/util/EventLog";

        return;

     label04:
        $r17 = new java.util.HashMap;

        specialinvoke $r17.<java.util.HashMap: void <init>()>();

        <android.util.EventLog: java.util.HashMap sTagCodes> = $r17;

        $r16 = new java.util.HashMap;

        specialinvoke $r16.<java.util.HashMap: void <init>()>();

        <android.util.EventLog: java.util.HashMap sTagNames> = $r16;

        r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^\\s*(#.*)?$");

        r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^\\s*(\\d+)\\s+(\\w+)\\s*(\\(.*\\))?\\s*$");

     label05:
        r3 = null;

     label06:
        $r19 = new java.io.BufferedReader;

        $r18 = new java.io.FileReader;

        specialinvoke $r18.<java.io.FileReader: void <init>(java.lang.String)>("/system/etc/event-log-tags");

        specialinvoke $r19.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r18, 256);

        r4 = $r19;

     label07:
        r9 = virtualinvoke r4.<java.io.BufferedReader: java.lang.String readLine()>();

     label08:
        if r9 == null goto label27;

     label09:
        $r20 = virtualinvoke r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r9);

        $z0 = virtualinvoke $r20.<java.util.regex.Matcher: boolean matches()>();

        if $z0 != 0 goto label07;

        r10 = virtualinvoke r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r9);

        $z1 = virtualinvoke r10.<java.util.regex.Matcher: boolean matches()>();

        if $z1 != 0 goto label17;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad entry in /system/etc/event-log-tags: ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r29 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String)>("EventLog", $r29);

     label10:
        goto label07;

     label11:
        $r42 := @caughtexception;

        r7 = $r42;

        r3 = r4;

     label12:
        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("EventLog", "Error reading /system/etc/event-log-tags", r7);

     label13:
        if r3 == null goto label03;

     label14:
        virtualinvoke r3.<java.io.BufferedReader: void close()>();

     label15:
        goto label03;

     label16:
        $r35 := @caughtexception;

        goto label03;

     label17:
        $r21 = virtualinvoke r10.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r21);

        r12 = virtualinvoke r10.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        $r24 = <android.util.EventLog: java.util.HashMap sTagCodes>;

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r24.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r12, $r25);

        $r23 = <android.util.EventLog: java.util.HashMap sTagNames>;

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r23.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r27, r12);

     label18:
        goto label07;

     label19:
        $r33 := @caughtexception;

        r11 = $r33;

     label20:
        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in /system/etc/event-log-tags: ");

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("EventLog", $r36, r11);

     label21:
        goto label07;

     label22:
        $r44 := @caughtexception;

        r5 = $r44;

        r3 = r4;

     label23:
        if r3 == null goto label25;

     label24:
        virtualinvoke r3.<java.io.BufferedReader: void close()>();

     label25:
        throw r5;

     label26:
        $r41 := @caughtexception;

        r0 = $r41;

        exitmonitor class "android/util/EventLog";

        throw r0;

     label27:
        if r4 == null goto label29;

     label28:
        virtualinvoke r4.<java.io.BufferedReader: void close()>();

     label29:
        goto label03;

     label30:
        $r39 := @caughtexception;

        goto label03;

     label31:
        $r34 := @caughtexception;

        goto label25;

     label32:
        $r40 := @caughtexception;

        r5 = $r40;

        goto label23;

     label33:
        $r43 := @caughtexception;

        r7 = $r43;

        r3 = null;

        goto label12;

        catch java.lang.Throwable from label01 to label02 with label26;
        catch java.lang.Throwable from label04 to label05 with label26;
        catch java.io.IOException from label06 to label07 with label33;
        catch java.lang.Throwable from label06 to label07 with label32;
        catch java.io.IOException from label07 to label08 with label11;
        catch java.lang.Throwable from label07 to label08 with label22;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.lang.Throwable from label09 to label10 with label22;
        catch java.lang.Throwable from label12 to label13 with label32;
        catch java.io.IOException from label14 to label15 with label16;
        catch java.lang.Throwable from label14 to label15 with label26;
        catch java.lang.NumberFormatException from label17 to label18 with label19;
        catch java.io.IOException from label17 to label18 with label11;
        catch java.lang.Throwable from label17 to label18 with label22;
        catch java.io.IOException from label20 to label21 with label11;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.io.IOException from label24 to label25 with label31;
        catch java.lang.Throwable from label24 to label25 with label26;
        catch java.lang.Throwable from label25 to label26 with label26;
        catch java.io.IOException from label28 to label29 with label30;
        catch java.lang.Throwable from label28 to label29 with label26;
    }

    public static native int writeEvent(int, int);

    public static native int writeEvent(int, long);

    public static native int writeEvent(int, java.lang.String);

    public static native transient int writeEvent(int, java.lang.Object[]);
}
