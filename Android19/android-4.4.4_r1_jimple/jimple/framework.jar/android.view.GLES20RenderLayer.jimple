class android.view.GLES20RenderLayer extends android.view.GLES20Layer
{
    private final android.view.GLES20Canvas mCanvas;
    private int mLayerHeight;
    private int mLayerWidth;

    void <init>(int, int, boolean)
    {
        android.view.GLES20RenderLayer r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, i8;
        boolean z0, z1;
        int[] r1;
        android.view.GLES20Canvas $r2;
        android.view.GLES20Layer$Finalizer $r3;

        r0 := @this: android.view.GLES20RenderLayer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 = 1;

        specialinvoke r0.<android.view.GLES20Layer: void <init>(int,int,boolean)>(i0, i1, z0);

        r1 = newarray (int)[2];

        $i3 = staticinvoke <android.view.GLES20Canvas: int nCreateLayer(int,int,boolean,int[])>(i0, i1, z0, r1);

        r0.<android.view.GLES20RenderLayer: int mLayer> = $i3;

        $i4 = r0.<android.view.GLES20RenderLayer: int mLayer>;

        if $i4 == 0 goto label3;

        $i5 = r1[0];

        r0.<android.view.GLES20RenderLayer: int mLayerWidth> = $i5;

        i8 = (int) 1;

        $i6 = r1[i8];

        r0.<android.view.GLES20RenderLayer: int mLayerHeight> = $i6;

        i2 = r0.<android.view.GLES20RenderLayer: int mLayer>;

        if z0 != 0 goto label2;

     label1:
        $r2 = new android.view.GLES20Canvas;

        specialinvoke $r2.<android.view.GLES20Canvas: void <init>(int,boolean)>(i2, z1);

        r0.<android.view.GLES20RenderLayer: android.view.GLES20Canvas mCanvas> = $r2;

        $r3 = new android.view.GLES20Layer$Finalizer;

        $i7 = r0.<android.view.GLES20RenderLayer: int mLayer>;

        specialinvoke $r3.<android.view.GLES20Layer$Finalizer: void <init>(int)>($i7);

        r0.<android.view.GLES20RenderLayer: android.view.GLES20Layer$Finalizer mFinalizer> = $r3;

        return;

     label2:
        z1 = 0;

        goto label1;

     label3:
        r0.<android.view.GLES20RenderLayer: android.view.GLES20Canvas mCanvas> = null;

        r0.<android.view.GLES20RenderLayer: android.view.GLES20Layer$Finalizer mFinalizer> = null;

        return;
    }

    void end(android.graphics.Canvas)
    {
        android.view.GLES20RenderLayer r0;
        android.graphics.Canvas r1;
        android.view.HardwareCanvas r2;
        boolean $z0;
        android.view.GLES20Canvas $r3;

        r0 := @this: android.view.GLES20RenderLayer;

        r1 := @parameter0: android.graphics.Canvas;

        r2 = virtualinvoke r0.<android.view.GLES20RenderLayer: android.view.HardwareCanvas getCanvas()>();

        if r2 == null goto label1;

        virtualinvoke r2.<android.view.HardwareCanvas: void onPostDraw()>();

     label1:
        $z0 = r1 instanceof android.view.GLES20Canvas;

        if $z0 == 0 goto label2;

        $r3 = (android.view.GLES20Canvas) r1;

        virtualinvoke $r3.<android.view.GLES20Canvas: void resume()>();

     label2:
        return;
    }

    android.view.HardwareCanvas getCanvas()
    {
        android.view.GLES20RenderLayer r0;
        android.view.GLES20Canvas $r1;

        r0 := @this: android.view.GLES20RenderLayer;

        $r1 = r0.<android.view.GLES20RenderLayer: android.view.GLES20Canvas mCanvas>;

        return $r1;
    }

    boolean isValid()
    {
        android.view.GLES20RenderLayer r0;
        int $i0, $i1, $i2;

        r0 := @this: android.view.GLES20RenderLayer;

        $i0 = r0.<android.view.GLES20RenderLayer: int mLayer>;

        if $i0 == 0 goto label1;

        $i1 = r0.<android.view.GLES20RenderLayer: int mLayerWidth>;

        if $i1 <= 0 goto label1;

        $i2 = r0.<android.view.GLES20RenderLayer: int mLayerHeight>;

        if $i2 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    void redrawLater(android.view.DisplayList, android.graphics.Rect)
    {
        android.view.GLES20RenderLayer r0;
        android.view.DisplayList r1;
        android.graphics.Rect r2;
        android.view.GLES20Canvas $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.view.GLES20DisplayList $r4;

        r0 := @this: android.view.GLES20RenderLayer;

        r1 := @parameter0: android.view.DisplayList;

        r2 := @parameter1: android.graphics.Rect;

        $i0 = r0.<android.view.GLES20RenderLayer: int mLayer>;

        $r3 = r0.<android.view.GLES20RenderLayer: android.view.GLES20Canvas mCanvas>;

        $i1 = virtualinvoke $r3.<android.view.GLES20Canvas: int getRenderer()>();

        $r4 = (android.view.GLES20DisplayList) r1;

        $i2 = virtualinvoke $r4.<android.view.GLES20DisplayList: int getNativeDisplayList()>();

        $i6 = r2.<android.graphics.Rect: int left>;

        $i5 = r2.<android.graphics.Rect: int top>;

        $i4 = r2.<android.graphics.Rect: int right>;

        $i3 = r2.<android.graphics.Rect: int bottom>;

        staticinvoke <android.view.GLES20Canvas: void nUpdateRenderLayer(int,int,int,int,int,int,int)>($i0, $i1, $i2, $i6, $i5, $i4, $i3);

        return;
    }

    boolean resize(int, int)
    {
        android.view.GLES20RenderLayer r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        int[] r1;
        boolean $z0, $z1, $z2;

        r0 := @this: android.view.GLES20RenderLayer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = virtualinvoke r0.<android.view.GLES20RenderLayer: boolean isValid()>();

        if $z0 == 0 goto label1;

        if i0 <= 0 goto label1;

        if i1 > 0 goto label2;

     label1:
        return 0;

     label2:
        r0.<android.view.GLES20RenderLayer: int mWidth> = i0;

        r0.<android.view.GLES20RenderLayer: int mHeight> = i1;

        $i2 = r0.<android.view.GLES20RenderLayer: int mLayerWidth>;

        if i0 != $i2 goto label3;

        $i6 = r0.<android.view.GLES20RenderLayer: int mLayerHeight>;

        if i1 == $i6 goto label4;

     label3:
        r1 = newarray (int)[2];

        $i3 = r0.<android.view.GLES20RenderLayer: int mLayer>;

        $z1 = staticinvoke <android.view.GLES20Canvas: boolean nResizeLayer(int,int,int,int[])>($i3, i0, i1, r1);

        if $z1 == 0 goto label5;

        $i4 = r1[0];

        r0.<android.view.GLES20RenderLayer: int mLayerWidth> = $i4;

        $i5 = r1[1];

        r0.<android.view.GLES20RenderLayer: int mLayerHeight> = $i5;

     label4:
        $z2 = virtualinvoke r0.<android.view.GLES20RenderLayer: boolean isValid()>();

        return $z2;

     label5:
        r0.<android.view.GLES20RenderLayer: int mLayer> = 0;

        r0.<android.view.GLES20RenderLayer: int mLayerWidth> = 0;

        r0.<android.view.GLES20RenderLayer: int mLayerHeight> = 0;

        goto label4;
    }

    void setOpaque(boolean)
    {
        android.view.GLES20RenderLayer r0;
        boolean z0;
        int $i0;

        r0 := @this: android.view.GLES20RenderLayer;

        z0 := @parameter0: boolean;

        r0.<android.view.GLES20RenderLayer: boolean mOpaque> = z0;

        $i0 = r0.<android.view.GLES20RenderLayer: int mLayer>;

        staticinvoke <android.view.GLES20Canvas: void nSetOpaqueLayer(int,boolean)>($i0, z0);

        return;
    }

    void setTransform(android.graphics.Matrix)
    {
        android.view.GLES20RenderLayer r0;
        android.graphics.Matrix r1;

        r0 := @this: android.view.GLES20RenderLayer;

        r1 := @parameter0: android.graphics.Matrix;

        return;
    }

    android.view.HardwareCanvas start(android.graphics.Canvas)
    {
        android.view.GLES20RenderLayer r0;
        android.graphics.Canvas r1;
        android.view.HardwareCanvas $r2;

        r0 := @this: android.view.GLES20RenderLayer;

        r1 := @parameter0: android.graphics.Canvas;

        $r2 = virtualinvoke r0.<android.view.GLES20RenderLayer: android.view.HardwareCanvas start(android.graphics.Canvas,android.graphics.Rect)>(r1, null);

        return $r2;
    }

    android.view.HardwareCanvas start(android.graphics.Canvas, android.graphics.Rect)
    {
        android.view.GLES20RenderLayer r0;
        android.graphics.Canvas r1;
        android.graphics.Rect r2;
        android.view.HardwareCanvas r3;
        boolean $z0;
        int $i0, $i1;
        android.view.GLES20Canvas $r4;

        r0 := @this: android.view.GLES20RenderLayer;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: android.graphics.Rect;

        $z0 = r1 instanceof android.view.GLES20Canvas;

        if $z0 == 0 goto label1;

        $r4 = (android.view.GLES20Canvas) r1;

        virtualinvoke $r4.<android.view.GLES20Canvas: void interrupt()>();

     label1:
        r3 = virtualinvoke r0.<android.view.GLES20RenderLayer: android.view.HardwareCanvas getCanvas()>();

        $i1 = r0.<android.view.GLES20RenderLayer: int mWidth>;

        $i0 = r0.<android.view.GLES20RenderLayer: int mHeight>;

        virtualinvoke r3.<android.view.HardwareCanvas: void setViewport(int,int)>($i1, $i0);

        virtualinvoke r3.<android.view.HardwareCanvas: int onPreDraw(android.graphics.Rect)>(r2);

        return r3;
    }
}
