public class android.filterfw.core.FrameFormat extends java.lang.Object
{
    public static final int BYTES_PER_SAMPLE_UNSPECIFIED;
    protected static final int SIZE_UNKNOWN;
    public static final int SIZE_UNSPECIFIED;
    public static final int TARGET_GPU;
    public static final int TARGET_NATIVE;
    public static final int TARGET_RS;
    public static final int TARGET_SIMPLE;
    public static final int TARGET_UNSPECIFIED;
    public static final int TARGET_VERTEXBUFFER;
    public static final int TYPE_BIT;
    public static final int TYPE_BYTE;
    public static final int TYPE_DOUBLE;
    public static final int TYPE_FLOAT;
    public static final int TYPE_INT16;
    public static final int TYPE_INT32;
    public static final int TYPE_OBJECT;
    public static final int TYPE_POINTER;
    public static final int TYPE_UNSPECIFIED;
    protected int mBaseType;
    protected int mBytesPerSample;
    protected int[] mDimensions;
    protected android.filterfw.core.KeyValueMap mMetaData;
    protected java.lang.Class mObjectClass;
    protected int mSize;
    protected int mTarget;

    protected void <init>()
    {
        android.filterfw.core.FrameFormat r0;

        r0 := @this: android.filterfw.core.FrameFormat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.filterfw.core.FrameFormat: int mBaseType> = 0;

        r0.<android.filterfw.core.FrameFormat: int mBytesPerSample> = 1;

        r0.<android.filterfw.core.FrameFormat: int mSize> = -1;

        r0.<android.filterfw.core.FrameFormat: int mTarget> = 0;

        return;
    }

    public void <init>(int, int)
    {
        android.filterfw.core.FrameFormat r0;
        int i0, i1;

        r0 := @this: android.filterfw.core.FrameFormat;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.filterfw.core.FrameFormat: int mBaseType> = 0;

        r0.<android.filterfw.core.FrameFormat: int mBytesPerSample> = 1;

        r0.<android.filterfw.core.FrameFormat: int mSize> = -1;

        r0.<android.filterfw.core.FrameFormat: int mTarget> = 0;

        r0.<android.filterfw.core.FrameFormat: int mBaseType> = i0;

        r0.<android.filterfw.core.FrameFormat: int mTarget> = i1;

        specialinvoke r0.<android.filterfw.core.FrameFormat: void initDefaults()>();

        return;
    }

    public static java.lang.String baseTypeToString(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label02;
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label05;
            case 4: goto label06;
            case 5: goto label07;
            case 6: goto label08;
            case 7: goto label09;
            case 8: goto label10;
            default: goto label01;
        };

     label01:
        return "unknown";

     label02:
        return "unspecified";

     label03:
        return "bit";

     label04:
        return "byte";

     label05:
        return "int";

     label06:
        return "int";

     label07:
        return "float";

     label08:
        return "double";

     label09:
        return "pointer";

     label10:
        return "object";
    }

    public static int bytesPerSampleOf(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label2;
            case 4: goto label3;
            case 5: goto label3;
            case 6: goto label4;
            case 7: goto label3;
            default: goto label1;
        };

     label1:
        return 1;

     label2:
        return 2;

     label3:
        return 4;

     label4:
        return 8;
    }

    public static java.lang.String dimensionsToString(int[])
    {
        int[] r0;
        java.lang.StringBuffer r1, $r2;
        int i0, i1, $i2, $i3;
        java.lang.String $r3, $r6, $r9;
        java.lang.StringBuilder $r4, $r5, $r7, $r8;

        r0 := @parameter0: int[];

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        r1 = $r2;

        if r0 == null goto label4;

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        $i2 = r0[i1];

        if $i2 != 0 goto label3;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[]");

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $i3 = r0[i1];

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i3);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        goto label2;

     label4:
        $r3 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    private void initDefaults()
    {
        android.filterfw.core.FrameFormat r0;
        int $i0, $i1;

        r0 := @this: android.filterfw.core.FrameFormat;

        $i0 = r0.<android.filterfw.core.FrameFormat: int mBaseType>;

        $i1 = staticinvoke <android.filterfw.core.FrameFormat: int bytesPerSampleOf(int)>($i0);

        r0.<android.filterfw.core.FrameFormat: int mBytesPerSample> = $i1;

        return;
    }

    public static java.lang.String metaDataToString(android.filterfw.core.KeyValueMap)
    {
        android.filterfw.core.KeyValueMap r0;
        java.lang.StringBuffer r1, $r4;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.util.Set $r6;
        boolean $z0;
        java.lang.String $r8, $r13, $r19;
        java.lang.Object $r9, $r11, $r14;
        java.lang.StringBuilder $r10, $r12, $r15, $r16, $r17;

        r0 := @parameter0: android.filterfw.core.KeyValueMap;

        if r0 != null goto label1;

        return "";

     label1:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        r1 = $r4;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("{ ");

        $r6 = virtualinvoke r0.<android.filterfw.core.KeyValueMap: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r9;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r13 = (java.lang.String) $r11;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r14 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        goto label2;

     label3:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}");

        $r8 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;
    }

    public static int readTargetString(java.lang.String)
    {
        java.lang.String r0, $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.RuntimeException $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("CPU");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("NATIVE");

        if $z1 == 0 goto label2;

     label1:
        return 2;

     label2:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("GPU");

        if $z2 == 0 goto label3;

        return 3;

     label3:
        $z3 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("SIMPLE");

        if $z3 == 0 goto label4;

        return 1;

     label4:
        $z4 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("VERTEXBUFFER");

        if $z4 == 0 goto label5;

        return 4;

     label5:
        $z5 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("UNSPECIFIED");

        if $z5 == 0 goto label6;

        return 0;

     label6:
        $r1 = new java.lang.RuntimeException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown target type \'");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'!");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r1;
    }

    public static java.lang.String targetToString(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            case 5: goto label7;
            default: goto label1;
        };

     label1:
        return "unknown";

     label2:
        return "unspecified";

     label3:
        return "simple";

     label4:
        return "native";

     label5:
        return "gpu";

     label6:
        return "vbo";

     label7:
        return "renderscript";
    }

    public static android.filterfw.core.FrameFormat unspecified()
    {
        android.filterfw.core.FrameFormat $r0;

        $r0 = new android.filterfw.core.FrameFormat;

        specialinvoke $r0.<android.filterfw.core.FrameFormat: void <init>(int,int)>(0, 0);

        return $r0;
    }

    int calcSize(int[])
    {
        android.filterfw.core.FrameFormat r0;
        int[] r1;
        int i0, i1, i2, $i3, $i4;

        r0 := @this: android.filterfw.core.FrameFormat;

        r1 := @parameter0: int[];

        if r1 == null goto label2;

        $i3 = lengthof r1;

        if $i3 <= 0 goto label2;

        i0 = virtualinvoke r0.<android.filterfw.core.FrameFormat: int getBytesPerSample()>();

        i1 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        $i4 = r1[i2];

        i0 = i0 * $i4;

        i2 = i2 + 1;

        goto label1;

     label2:
        i0 = 0;

     label3:
        return i0;
    }

    public boolean equals(java.lang.Object)
    {
        android.filterfw.core.FrameFormat r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        int[] $r3, $r4;
        android.filterfw.core.KeyValueMap $r5, $r6;

        r0 := @this: android.filterfw.core.FrameFormat;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label2;

     label1:
        return 1;

     label2:
        $z0 = r1 instanceof android.filterfw.core.FrameFormat;

        if $z0 != 0 goto label3;

        return 0;

     label3:
        r2 = (android.filterfw.core.FrameFormat) r1;

        $i1 = r2.<android.filterfw.core.FrameFormat: int mBaseType>;

        $i0 = r0.<android.filterfw.core.FrameFormat: int mBaseType>;

        if $i1 != $i0 goto label4;

        $i3 = r2.<android.filterfw.core.FrameFormat: int mTarget>;

        $i2 = r0.<android.filterfw.core.FrameFormat: int mTarget>;

        if $i3 != $i2 goto label4;

        $i5 = r2.<android.filterfw.core.FrameFormat: int mBytesPerSample>;

        $i4 = r0.<android.filterfw.core.FrameFormat: int mBytesPerSample>;

        if $i5 != $i4 goto label4;

        $r4 = r2.<android.filterfw.core.FrameFormat: int[] mDimensions>;

        $r3 = r0.<android.filterfw.core.FrameFormat: int[] mDimensions>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r4, $r3);

        if $z1 == 0 goto label4;

        $r6 = r2.<android.filterfw.core.FrameFormat: android.filterfw.core.KeyValueMap mMetaData>;

        $r5 = r0.<android.filterfw.core.FrameFormat: android.filterfw.core.KeyValueMap mMetaData>;

        $z2 = virtualinvoke $r6.<android.filterfw.core.KeyValueMap: boolean equals(java.lang.Object)>($r5);

        if $z2 != 0 goto label1;

     label4:
        return 0;
    }

    public int getBaseType()
    {
        android.filterfw.core.FrameFormat r0;
        int $i0;

        r0 := @this: android.filterfw.core.FrameFormat;

        $i0 = r0.<android.filterfw.core.FrameFormat: int mBaseType>;

        return $i0;
    }

    public int getBytesPerSample()
    {
        android.filterfw.core.FrameFormat r0;
        int $i0;

        r0 := @this: android.filterfw.core.FrameFormat;

        $i0 = r0.<android.filterfw.core.FrameFormat: int mBytesPerSample>;

        return $i0;
    }

    public int getDepth()
    {
        android.filterfw.core.FrameFormat r0;
        int[] $r1, $r2, $r3;
        int $i0, $i1;

        r0 := @this: android.filterfw.core.FrameFormat;

        $r1 = r0.<android.filterfw.core.FrameFormat: int[] mDimensions>;

        if $r1 == null goto label1;

        $r2 = r0.<android.filterfw.core.FrameFormat: int[] mDimensions>;

        $i0 = lengthof $r2;

        if $i0 < 3 goto label1;

        $r3 = r0.<android.filterfw.core.FrameFormat: int[] mDimensions>;

        $i1 = $r3[2];

        return $i1;

     label1:
        return -1;
    }

    public int getDimension(int)
    {
        android.filterfw.core.FrameFormat r0;
        int i0, $i1;
        int[] $r1;

        r0 := @this: android.filterfw.core.FrameFormat;

        i0 := @parameter0: int;

        $r1 = r0.<android.filterfw.core.FrameFormat: int[] mDimensions>;

        $i1 = $r1[i0];

        return $i1;
    }

    public int getDimensionCount()
    {
        android.filterfw.core.FrameFormat r0;
        int[] $r1, $r2;
        int $i0;

        r0 := @this: android.filterfw.core.FrameFormat;

        $r1 = r0.<android.filterfw.core.FrameFormat: int[] mDimensions>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<android.filterfw.core.FrameFormat: int[] mDimensions>;

        $i0 = lengthof $r2;

        return $i0;
    }

    public int[] getDimensions()
    {
        android.filterfw.core.FrameFormat r0;
        int[] $r1;

        r0 := @this: android.filterfw.core.FrameFormat;

        $r1 = r0.<android.filterfw.core.FrameFormat: int[] mDimensions>;

        return $r1;
    }

    public int getHeight()
    {
        android.filterfw.core.FrameFormat r0;
        int[] $r1, $r2, $r3;
        int $i0, $i1;

        r0 := @this: android.filterfw.core.FrameFormat;

        $r1 = r0.<android.filterfw.core.FrameFormat: int[] mDimensions>;

        if $r1 == null goto label1;

        $r2 = r0.<android.filterfw.core.FrameFormat: int[] mDimensions>;

        $i0 = lengthof $r2;

        if $i0 < 2 goto label1;

        $r3 = r0.<android.filterfw.core.FrameFormat: int[] mDimensions>;

        $i1 = $r3[1];

        return $i1;

     label1:
        return -1;
    }

    public int getLength()
    {
        android.filterfw.core.FrameFormat r0;
        int[] $r1, $r2, $r3;
        int $i0, $i1;

        r0 := @this: android.filterfw.core.FrameFormat;

        $r1 = r0.<android.filterfw.core.FrameFormat: int[] mDimensions>;

        if $r1 == null goto label1;

        $r2 = r0.<android.filterfw.core.FrameFormat: int[] mDimensions>;

        $i0 = lengthof $r2;

        if $i0 < 1 goto label1;

        $r3 = r0.<android.filterfw.core.FrameFormat: int[] mDimensions>;

        $i1 = $r3[0];

        return $i1;

     label1:
        return -1;
    }

    public java.lang.Object getMetaValue(java.lang.String)
    {
        android.filterfw.core.FrameFormat r0;
        java.lang.String r1;
        android.filterfw.core.KeyValueMap $r2, $r3;
        java.lang.Object $r4;

        r0 := @this: android.filterfw.core.FrameFormat;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.filterfw.core.FrameFormat: android.filterfw.core.KeyValueMap mMetaData>;

        if $r2 == null goto label1;

        $r3 = r0.<android.filterfw.core.FrameFormat: android.filterfw.core.KeyValueMap mMetaData>;

        $r4 = virtualinvoke $r3.<android.filterfw.core.KeyValueMap: java.lang.Object get(java.lang.Object)>(r1);

        return $r4;

     label1:
        return null;
    }

    public int getNumberOfDimensions()
    {
        android.filterfw.core.FrameFormat r0;
        int[] $r1, $r2;
        int $i0;

        r0 := @this: android.filterfw.core.FrameFormat;

        $r1 = r0.<android.filterfw.core.FrameFormat: int[] mDimensions>;

        if $r1 == null goto label1;

        $r2 = r0.<android.filterfw.core.FrameFormat: int[] mDimensions>;

        $i0 = lengthof $r2;

        return $i0;

     label1:
        return 0;
    }

    public java.lang.Class getObjectClass()
    {
        android.filterfw.core.FrameFormat r0;
        java.lang.Class $r1;

        r0 := @this: android.filterfw.core.FrameFormat;

        $r1 = r0.<android.filterfw.core.FrameFormat: java.lang.Class mObjectClass>;

        return $r1;
    }

    public int getSize()
    {
        android.filterfw.core.FrameFormat r0;
        int $i0, $i1, $i2;
        int[] $r1;

        r0 := @this: android.filterfw.core.FrameFormat;

        $i0 = r0.<android.filterfw.core.FrameFormat: int mSize>;

        if $i0 != -1 goto label1;

        $r1 = r0.<android.filterfw.core.FrameFormat: int[] mDimensions>;

        $i2 = virtualinvoke r0.<android.filterfw.core.FrameFormat: int calcSize(int[])>($r1);

        r0.<android.filterfw.core.FrameFormat: int mSize> = $i2;

     label1:
        $i1 = r0.<android.filterfw.core.FrameFormat: int mSize>;

        return $i1;
    }

    public int getTarget()
    {
        android.filterfw.core.FrameFormat r0;
        int $i0;

        r0 := @this: android.filterfw.core.FrameFormat;

        $i0 = r0.<android.filterfw.core.FrameFormat: int mTarget>;

        return $i0;
    }

    public int getValuesPerSample()
    {
        android.filterfw.core.FrameFormat r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.filterfw.core.FrameFormat;

        $i1 = r0.<android.filterfw.core.FrameFormat: int mBytesPerSample>;

        $i0 = r0.<android.filterfw.core.FrameFormat: int mBaseType>;

        $i2 = staticinvoke <android.filterfw.core.FrameFormat: int bytesPerSampleOf(int)>($i0);

        $i3 = $i1 / $i2;

        return $i3;
    }

    public int getWidth()
    {
        android.filterfw.core.FrameFormat r0;
        int $i0;

        r0 := @this: android.filterfw.core.FrameFormat;

        $i0 = virtualinvoke r0.<android.filterfw.core.FrameFormat: int getLength()>();

        return $i0;
    }

    public boolean hasMetaKey(java.lang.String)
    {
        android.filterfw.core.FrameFormat r0;
        java.lang.String r1;
        android.filterfw.core.KeyValueMap $r2, $r3;
        boolean $z0;

        r0 := @this: android.filterfw.core.FrameFormat;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.filterfw.core.FrameFormat: android.filterfw.core.KeyValueMap mMetaData>;

        if $r2 == null goto label1;

        $r3 = r0.<android.filterfw.core.FrameFormat: android.filterfw.core.KeyValueMap mMetaData>;

        $z0 = virtualinvoke $r3.<android.filterfw.core.KeyValueMap: boolean containsKey(java.lang.Object)>(r1);

        return $z0;

     label1:
        return 0;
    }

    public boolean hasMetaKey(java.lang.String, java.lang.Class)
    {
        android.filterfw.core.FrameFormat r0;
        java.lang.String r1, $r20;
        java.lang.Class r2, $r7, $r14;
        android.filterfw.core.KeyValueMap $r3, $r4, $r5, $r13;
        boolean $z0, $z1;
        java.lang.Object $r6, $r15;
        java.lang.RuntimeException $r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r16, $r17, $r18, $r19;

        r0 := @this: android.filterfw.core.FrameFormat;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        $r3 = r0.<android.filterfw.core.FrameFormat: android.filterfw.core.KeyValueMap mMetaData>;

        if $r3 == null goto label2;

        $r4 = r0.<android.filterfw.core.FrameFormat: android.filterfw.core.KeyValueMap mMetaData>;

        $z0 = virtualinvoke $r4.<android.filterfw.core.KeyValueMap: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r5 = r0.<android.filterfw.core.FrameFormat: android.filterfw.core.KeyValueMap mMetaData>;

        $r6 = virtualinvoke $r5.<android.filterfw.core.KeyValueMap: java.lang.Object get(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r7);

        if $z1 != 0 goto label1;

        $r8 = new java.lang.RuntimeException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FrameFormat meta-key \'");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' is of type ");

        $r13 = r0.<android.filterfw.core.FrameFormat: android.filterfw.core.KeyValueMap mMetaData>;

        $r15 = virtualinvoke $r13.<android.filterfw.core.KeyValueMap: java.lang.Object get(java.lang.Object)>(r1);

        $r14 = virtualinvoke $r15.<java.lang.Object: java.lang.Class getClass()>();

        $r17 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but expected to be of type ");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r20);

        throw $r8;

     label1:
        return 1;

     label2:
        return 0;
    }

    public int hashCode()
    {
        android.filterfw.core.FrameFormat r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.filterfw.core.FrameFormat;

        $i0 = r0.<android.filterfw.core.FrameFormat: int mBaseType>;

        $i2 = 4211 ^ $i0;

        $i1 = r0.<android.filterfw.core.FrameFormat: int mBytesPerSample>;

        $i3 = $i2 ^ $i1;

        $i4 = virtualinvoke r0.<android.filterfw.core.FrameFormat: int getSize()>();

        $i5 = $i3 ^ $i4;

        return $i5;
    }

    public boolean isBinaryDataType()
    {
        android.filterfw.core.FrameFormat r0;
        int $i0, $i1;

        r0 := @this: android.filterfw.core.FrameFormat;

        $i0 = r0.<android.filterfw.core.FrameFormat: int mBaseType>;

        if $i0 < 1 goto label1;

        $i1 = r0.<android.filterfw.core.FrameFormat: int mBaseType>;

        if $i1 > 6 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isCompatibleWith(android.filterfw.core.FrameFormat)
    {
        android.filterfw.core.FrameFormat r0, r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        java.util.Iterator r2;
        java.lang.String r3;
        java.lang.Class $r4, $r15, $r16, $r17;
        android.filterfw.core.KeyValueMap $r5, $r6, $r9, $r10, $r11, $r12;
        java.util.Set $r7;
        java.lang.Object $r8, $r13, $r14;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: android.filterfw.core.FrameFormat;

        r1 := @parameter0: android.filterfw.core.FrameFormat;

        $i2 = virtualinvoke r1.<android.filterfw.core.FrameFormat: int getBaseType()>();

        if $i2 == 0 goto label02;

        $i12 = virtualinvoke r0.<android.filterfw.core.FrameFormat: int getBaseType()>();

        $i13 = virtualinvoke r1.<android.filterfw.core.FrameFormat: int getBaseType()>();

        if $i12 == $i13 goto label02;

     label01:
        return 0;

     label02:
        $i3 = virtualinvoke r1.<android.filterfw.core.FrameFormat: int getTarget()>();

        if $i3 == 0 goto label03;

        $i14 = virtualinvoke r0.<android.filterfw.core.FrameFormat: int getTarget()>();

        $i15 = virtualinvoke r1.<android.filterfw.core.FrameFormat: int getTarget()>();

        if $i14 != $i15 goto label01;

     label03:
        $i4 = virtualinvoke r1.<android.filterfw.core.FrameFormat: int getBytesPerSample()>();

        if $i4 == 1 goto label04;

        $i8 = virtualinvoke r0.<android.filterfw.core.FrameFormat: int getBytesPerSample()>();

        $i9 = virtualinvoke r1.<android.filterfw.core.FrameFormat: int getBytesPerSample()>();

        if $i8 != $i9 goto label01;

     label04:
        $i5 = virtualinvoke r1.<android.filterfw.core.FrameFormat: int getDimensionCount()>();

        if $i5 <= 0 goto label05;

        $i10 = virtualinvoke r0.<android.filterfw.core.FrameFormat: int getDimensionCount()>();

        $i11 = virtualinvoke r1.<android.filterfw.core.FrameFormat: int getDimensionCount()>();

        if $i10 != $i11 goto label01;

     label05:
        i0 = 0;

     label06:
        $i6 = virtualinvoke r1.<android.filterfw.core.FrameFormat: int getDimensionCount()>();

        if i0 >= $i6 goto label08;

        i1 = virtualinvoke r1.<android.filterfw.core.FrameFormat: int getDimension(int)>(i0);

        if i1 == 0 goto label07;

        $i7 = virtualinvoke r0.<android.filterfw.core.FrameFormat: int getDimension(int)>(i0);

        if $i7 != i1 goto label01;

     label07:
        i0 = i0 + 1;

        goto label06;

     label08:
        $r4 = virtualinvoke r1.<android.filterfw.core.FrameFormat: java.lang.Class getObjectClass()>();

        if $r4 == null goto label09;

        $r16 = virtualinvoke r0.<android.filterfw.core.FrameFormat: java.lang.Class getObjectClass()>();

        if $r16 == null goto label01;

        $r15 = virtualinvoke r1.<android.filterfw.core.FrameFormat: java.lang.Class getObjectClass()>();

        $r17 = virtualinvoke r0.<android.filterfw.core.FrameFormat: java.lang.Class getObjectClass()>();

        $z3 = virtualinvoke $r15.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r17);

        if $z3 == 0 goto label01;

     label09:
        $r5 = r1.<android.filterfw.core.FrameFormat: android.filterfw.core.KeyValueMap mMetaData>;

        if $r5 == null goto label11;

        $r6 = r1.<android.filterfw.core.FrameFormat: android.filterfw.core.KeyValueMap mMetaData>;

        $r7 = virtualinvoke $r6.<android.filterfw.core.KeyValueMap: java.util.Set keySet()>();

        r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label10:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r8;

        $r10 = r0.<android.filterfw.core.FrameFormat: android.filterfw.core.KeyValueMap mMetaData>;

        if $r10 == null goto label01;

        $r9 = r0.<android.filterfw.core.FrameFormat: android.filterfw.core.KeyValueMap mMetaData>;

        $z1 = virtualinvoke $r9.<android.filterfw.core.KeyValueMap: boolean containsKey(java.lang.Object)>(r3);

        if $z1 == 0 goto label01;

        $r11 = r0.<android.filterfw.core.FrameFormat: android.filterfw.core.KeyValueMap mMetaData>;

        $r13 = virtualinvoke $r11.<android.filterfw.core.KeyValueMap: java.lang.Object get(java.lang.Object)>(r3);

        $r12 = r1.<android.filterfw.core.FrameFormat: android.filterfw.core.KeyValueMap mMetaData>;

        $r14 = virtualinvoke $r12.<android.filterfw.core.KeyValueMap: java.lang.Object get(java.lang.Object)>(r3);

        $z2 = virtualinvoke $r13.<java.lang.Object: boolean equals(java.lang.Object)>($r14);

        if $z2 != 0 goto label10;

        return 0;

     label11:
        return 1;
    }

    boolean isReplaceableBy(android.filterfw.core.FrameFormat)
    {
        android.filterfw.core.FrameFormat r0, r1;
        int $i0, $i1, $i2, $i3;
        int[] $r2, $r3;
        boolean $z0;

        r0 := @this: android.filterfw.core.FrameFormat;

        r1 := @parameter0: android.filterfw.core.FrameFormat;

        $i1 = r0.<android.filterfw.core.FrameFormat: int mTarget>;

        $i0 = r1.<android.filterfw.core.FrameFormat: int mTarget>;

        if $i1 != $i0 goto label1;

        $i2 = virtualinvoke r0.<android.filterfw.core.FrameFormat: int getSize()>();

        $i3 = virtualinvoke r1.<android.filterfw.core.FrameFormat: int getSize()>();

        if $i2 != $i3 goto label1;

        $r3 = r1.<android.filterfw.core.FrameFormat: int[] mDimensions>;

        $r2 = r0.<android.filterfw.core.FrameFormat: int[] mDimensions>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r3, $r2);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean mayBeCompatibleWith(android.filterfw.core.FrameFormat)
    {
        android.filterfw.core.FrameFormat r0, r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        java.util.Iterator r2;
        java.lang.String r3;
        java.lang.Class $r4, $r15, $r16, $r17;
        android.filterfw.core.KeyValueMap $r5, $r6, $r7, $r9, $r11, $r12;
        java.util.Set $r8;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r10, $r13, $r14;

        r0 := @this: android.filterfw.core.FrameFormat;

        r1 := @parameter0: android.filterfw.core.FrameFormat;

        $i2 = virtualinvoke r1.<android.filterfw.core.FrameFormat: int getBaseType()>();

        if $i2 == 0 goto label02;

        $i16 = virtualinvoke r0.<android.filterfw.core.FrameFormat: int getBaseType()>();

        if $i16 == 0 goto label02;

        $i17 = virtualinvoke r0.<android.filterfw.core.FrameFormat: int getBaseType()>();

        $i20 = virtualinvoke r1.<android.filterfw.core.FrameFormat: int getBaseType()>();

        if $i17 == $i20 goto label02;

     label01:
        return 0;

     label02:
        $i3 = virtualinvoke r1.<android.filterfw.core.FrameFormat: int getTarget()>();

        if $i3 == 0 goto label03;

        $i13 = virtualinvoke r0.<android.filterfw.core.FrameFormat: int getTarget()>();

        if $i13 == 0 goto label03;

        $i18 = virtualinvoke r0.<android.filterfw.core.FrameFormat: int getTarget()>();

        $i19 = virtualinvoke r1.<android.filterfw.core.FrameFormat: int getTarget()>();

        if $i18 != $i19 goto label01;

     label03:
        $i4 = virtualinvoke r1.<android.filterfw.core.FrameFormat: int getBytesPerSample()>();

        if $i4 == 1 goto label04;

        $i14 = virtualinvoke r0.<android.filterfw.core.FrameFormat: int getBytesPerSample()>();

        if $i14 == 1 goto label04;

        $i15 = virtualinvoke r0.<android.filterfw.core.FrameFormat: int getBytesPerSample()>();

        $i12 = virtualinvoke r1.<android.filterfw.core.FrameFormat: int getBytesPerSample()>();

        if $i15 != $i12 goto label01;

     label04:
        $i5 = virtualinvoke r1.<android.filterfw.core.FrameFormat: int getDimensionCount()>();

        if $i5 <= 0 goto label05;

        $i11 = virtualinvoke r0.<android.filterfw.core.FrameFormat: int getDimensionCount()>();

        if $i11 <= 0 goto label05;

        $i8 = virtualinvoke r0.<android.filterfw.core.FrameFormat: int getDimensionCount()>();

        $i9 = virtualinvoke r1.<android.filterfw.core.FrameFormat: int getDimensionCount()>();

        if $i8 != $i9 goto label01;

     label05:
        i0 = 0;

     label06:
        $i6 = virtualinvoke r1.<android.filterfw.core.FrameFormat: int getDimensionCount()>();

        if i0 >= $i6 goto label08;

        i1 = virtualinvoke r1.<android.filterfw.core.FrameFormat: int getDimension(int)>(i0);

        if i1 == 0 goto label07;

        $i7 = virtualinvoke r0.<android.filterfw.core.FrameFormat: int getDimension(int)>(i0);

        if $i7 == 0 goto label07;

        $i10 = virtualinvoke r0.<android.filterfw.core.FrameFormat: int getDimension(int)>(i0);

        if $i10 != i1 goto label01;

     label07:
        i0 = i0 + 1;

        goto label06;

     label08:
        $r4 = virtualinvoke r1.<android.filterfw.core.FrameFormat: java.lang.Class getObjectClass()>();

        if $r4 == null goto label09;

        $r16 = virtualinvoke r0.<android.filterfw.core.FrameFormat: java.lang.Class getObjectClass()>();

        if $r16 == null goto label09;

        $r15 = virtualinvoke r1.<android.filterfw.core.FrameFormat: java.lang.Class getObjectClass()>();

        $r17 = virtualinvoke r0.<android.filterfw.core.FrameFormat: java.lang.Class getObjectClass()>();

        $z3 = virtualinvoke $r15.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r17);

        if $z3 == 0 goto label01;

     label09:
        $r5 = r1.<android.filterfw.core.FrameFormat: android.filterfw.core.KeyValueMap mMetaData>;

        if $r5 == null goto label11;

        $r6 = r0.<android.filterfw.core.FrameFormat: android.filterfw.core.KeyValueMap mMetaData>;

        if $r6 == null goto label11;

        $r7 = r1.<android.filterfw.core.FrameFormat: android.filterfw.core.KeyValueMap mMetaData>;

        $r8 = virtualinvoke $r7.<android.filterfw.core.KeyValueMap: java.util.Set keySet()>();

        r2 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label10:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r10;

        $r9 = r0.<android.filterfw.core.FrameFormat: android.filterfw.core.KeyValueMap mMetaData>;

        $z1 = virtualinvoke $r9.<android.filterfw.core.KeyValueMap: boolean containsKey(java.lang.Object)>(r3);

        if $z1 == 0 goto label10;

        $r11 = r0.<android.filterfw.core.FrameFormat: android.filterfw.core.KeyValueMap mMetaData>;

        $r13 = virtualinvoke $r11.<android.filterfw.core.KeyValueMap: java.lang.Object get(java.lang.Object)>(r3);

        $r12 = r1.<android.filterfw.core.FrameFormat: android.filterfw.core.KeyValueMap mMetaData>;

        $r14 = virtualinvoke $r12.<android.filterfw.core.KeyValueMap: java.lang.Object get(java.lang.Object)>(r3);

        $z2 = virtualinvoke $r13.<java.lang.Object: boolean equals(java.lang.Object)>($r14);

        if $z2 != 0 goto label10;

        return 0;

     label11:
        return 1;
    }

    public android.filterfw.core.MutableFrameFormat mutableCopy()
    {
        android.filterfw.core.FrameFormat r0;
        android.filterfw.core.MutableFrameFormat r1, $r3;
        android.filterfw.core.KeyValueMap r2, $r6, $r7;
        int $i0, $i1, $i2;
        int[] $r4;
        java.lang.Class $r5;
        java.lang.Object $r8;

        r0 := @this: android.filterfw.core.FrameFormat;

        $r3 = new android.filterfw.core.MutableFrameFormat;

        specialinvoke $r3.<android.filterfw.core.MutableFrameFormat: void <init>()>();

        r1 = $r3;

        $i0 = virtualinvoke r0.<android.filterfw.core.FrameFormat: int getBaseType()>();

        virtualinvoke r1.<android.filterfw.core.MutableFrameFormat: void setBaseType(int)>($i0);

        $i1 = virtualinvoke r0.<android.filterfw.core.FrameFormat: int getTarget()>();

        virtualinvoke r1.<android.filterfw.core.MutableFrameFormat: void setTarget(int)>($i1);

        $i2 = virtualinvoke r0.<android.filterfw.core.FrameFormat: int getBytesPerSample()>();

        virtualinvoke r1.<android.filterfw.core.MutableFrameFormat: void setBytesPerSample(int)>($i2);

        $r4 = virtualinvoke r0.<android.filterfw.core.FrameFormat: int[] getDimensions()>();

        virtualinvoke r1.<android.filterfw.core.MutableFrameFormat: void setDimensions(int[])>($r4);

        $r5 = virtualinvoke r0.<android.filterfw.core.FrameFormat: java.lang.Class getObjectClass()>();

        virtualinvoke r1.<android.filterfw.core.MutableFrameFormat: void setObjectClass(java.lang.Class)>($r5);

        $r6 = r0.<android.filterfw.core.FrameFormat: android.filterfw.core.KeyValueMap mMetaData>;

        if $r6 != null goto label2;

        r2 = null;

     label1:
        r1.<android.filterfw.core.MutableFrameFormat: android.filterfw.core.KeyValueMap mMetaData> = r2;

        return r1;

     label2:
        $r7 = r0.<android.filterfw.core.FrameFormat: android.filterfw.core.KeyValueMap mMetaData>;

        $r8 = virtualinvoke $r7.<android.filterfw.core.KeyValueMap: java.lang.Object clone()>();

        r2 = (android.filterfw.core.KeyValueMap) $r8;

        goto label1;
    }

    public java.lang.String toString()
    {
        android.filterfw.core.FrameFormat r0;
        int i0, $i1, $i2, $i3;
        java.lang.String r1, r2, r3, $r5, $r13, $r17, $r20, $r25, $r27;
        java.lang.StringBuilder $r4, $r6, $r7, $r9, $r11, $r12, $r14, $r15, $r16, $r18, $r19, $r22, $r23, $r24;
        java.lang.Class $r8, $r10;
        int[] $r21;
        android.filterfw.core.KeyValueMap $r26;

        r0 := @this: android.filterfw.core.FrameFormat;

        i0 = virtualinvoke r0.<android.filterfw.core.FrameFormat: int getValuesPerSample()>();

        if i0 != 1 goto label4;

        r1 = "";

     label1:
        $i1 = r0.<android.filterfw.core.FrameFormat: int mTarget>;

        if $i1 != 0 goto label5;

        r2 = "";

     label2:
        $r8 = r0.<android.filterfw.core.FrameFormat: java.lang.Class mObjectClass>;

        if $r8 != null goto label6;

        r3 = "";

     label3:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $i3 = r0.<android.filterfw.core.FrameFormat: int mBaseType>;

        $r17 = staticinvoke <android.filterfw.core.FrameFormat: java.lang.String baseTypeToString(int)>($i3);

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r21 = r0.<android.filterfw.core.FrameFormat: int[] mDimensions>;

        $r20 = staticinvoke <android.filterfw.core.FrameFormat: java.lang.String dimensionsToString(int[])>($r21);

        $r23 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r26 = r0.<android.filterfw.core.FrameFormat: android.filterfw.core.KeyValueMap mMetaData>;

        $r27 = staticinvoke <android.filterfw.core.FrameFormat: java.lang.String metaDataToString(android.filterfw.core.KeyValueMap)>($r26);

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r25;

     label4:
        r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        goto label1;

     label5:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $i2 = r0.<android.filterfw.core.FrameFormat: int mTarget>;

        $r5 = staticinvoke <android.filterfw.core.FrameFormat: java.lang.String targetToString(int)>($i2);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label6:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" class(");

        $r10 = r0.<android.filterfw.core.FrameFormat: java.lang.Class mObjectClass>;

        $r13 = virtualinvoke $r10.<java.lang.Class: java.lang.String getSimpleName()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        r3 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label3;
    }

    public static void <clinit>()
    {
        <android.filterfw.core.FrameFormat: int TYPE_POINTER> = 7;

        <android.filterfw.core.FrameFormat: int TYPE_OBJECT> = 8;

        <android.filterfw.core.FrameFormat: int TYPE_INT32> = 4;

        <android.filterfw.core.FrameFormat: int TYPE_INT16> = 3;

        <android.filterfw.core.FrameFormat: int TYPE_FLOAT> = 5;

        <android.filterfw.core.FrameFormat: int TYPE_DOUBLE> = 6;

        <android.filterfw.core.FrameFormat: int TYPE_BYTE> = 2;

        <android.filterfw.core.FrameFormat: int TYPE_BIT> = 1;

        <android.filterfw.core.FrameFormat: int TARGET_VERTEXBUFFER> = 4;

        <android.filterfw.core.FrameFormat: int TARGET_UNSPECIFIED> = 0;

        <android.filterfw.core.FrameFormat: int TARGET_SIMPLE> = 1;

        <android.filterfw.core.FrameFormat: int TARGET_RS> = 5;

        <android.filterfw.core.FrameFormat: int TARGET_NATIVE> = 2;

        <android.filterfw.core.FrameFormat: int TARGET_GPU> = 3;

        <android.filterfw.core.FrameFormat: int SIZE_UNSPECIFIED> = 0;

        <android.filterfw.core.FrameFormat: int SIZE_UNKNOWN> = -1;

        <android.filterfw.core.FrameFormat: int BYTES_PER_SAMPLE_UNSPECIFIED> = 1;

        return;
    }
}
