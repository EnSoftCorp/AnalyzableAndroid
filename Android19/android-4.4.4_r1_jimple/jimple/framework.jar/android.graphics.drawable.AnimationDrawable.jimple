public class android.graphics.drawable.AnimationDrawable extends android.graphics.drawable.DrawableContainer implements java.lang.Runnable, android.graphics.drawable.Animatable
{
    private final android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState;
    private int mCurFrame;
    private boolean mMutated;

    public void <init>()
    {
        android.graphics.drawable.AnimationDrawable r0;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        specialinvoke r0.<android.graphics.drawable.AnimationDrawable: void <init>(android.graphics.drawable.AnimationDrawable$AnimationState,android.content.res.Resources)>(null, null);

        return;
    }

    private void <init>(android.graphics.drawable.AnimationDrawable$AnimationState, android.content.res.Resources)
    {
        android.graphics.drawable.AnimationDrawable r0;
        android.graphics.drawable.AnimationDrawable$AnimationState r1, r3, $r4;
        android.content.res.Resources r2;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        r1 := @parameter0: android.graphics.drawable.AnimationDrawable$AnimationState;

        r2 := @parameter1: android.content.res.Resources;

        specialinvoke r0.<android.graphics.drawable.DrawableContainer: void <init>()>();

        r0.<android.graphics.drawable.AnimationDrawable: int mCurFrame> = -1;

        $r4 = new android.graphics.drawable.AnimationDrawable$AnimationState;

        specialinvoke $r4.<android.graphics.drawable.AnimationDrawable$AnimationState: void <init>(android.graphics.drawable.AnimationDrawable$AnimationState,android.graphics.drawable.AnimationDrawable,android.content.res.Resources)>(r1, r0, r2);

        r3 = $r4;

        r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState> = r3;

        virtualinvoke r0.<android.graphics.drawable.AnimationDrawable: void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState)>(r3);

        if r1 == null goto label1;

        specialinvoke r0.<android.graphics.drawable.AnimationDrawable: void setFrame(int,boolean,boolean)>(0, 1, 0);

     label1:
        return;
    }

    void <init>(android.graphics.drawable.AnimationDrawable$AnimationState, android.content.res.Resources, android.graphics.drawable.AnimationDrawable$1)
    {
        android.graphics.drawable.AnimationDrawable r0;
        android.graphics.drawable.AnimationDrawable$AnimationState r1;
        android.content.res.Resources r2;
        android.graphics.drawable.AnimationDrawable$1 r3;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        r1 := @parameter0: android.graphics.drawable.AnimationDrawable$AnimationState;

        r2 := @parameter1: android.content.res.Resources;

        r3 := @parameter2: android.graphics.drawable.AnimationDrawable$1;

        specialinvoke r0.<android.graphics.drawable.AnimationDrawable: void <init>(android.graphics.drawable.AnimationDrawable$AnimationState,android.content.res.Resources)>(r1, r2);

        return;
    }

    private void nextFrame(boolean)
    {
        android.graphics.drawable.AnimationDrawable r0;
        boolean z0, z1, $z2;
        int i0, i1, $i2, $i3;
        android.graphics.drawable.AnimationDrawable$AnimationState $r1, $r2;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        z0 := @parameter0: boolean;

        $i2 = r0.<android.graphics.drawable.AnimationDrawable: int mCurFrame>;

        i0 = 1 + $i2;

        $r1 = r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        i1 = virtualinvoke $r1.<android.graphics.drawable.AnimationDrawable$AnimationState: int getChildCount()>();

        if i0 < i1 goto label1;

        i0 = 0;

     label1:
        $r2 = r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        $z2 = staticinvoke <android.graphics.drawable.AnimationDrawable$AnimationState: boolean access$100(android.graphics.drawable.AnimationDrawable$AnimationState)>($r2);

        if $z2 == 0 goto label2;

        $i3 = i1 - 1;

        if i0 >= $i3 goto label4;

     label2:
        z1 = 1;

     label3:
        specialinvoke r0.<android.graphics.drawable.AnimationDrawable: void setFrame(int,boolean,boolean)>(i0, z0, z1);

        return;

     label4:
        z1 = 0;

        goto label3;
    }

    private void setFrame(int, boolean, boolean)
    {
        android.graphics.drawable.AnimationDrawable r0;
        int i0, $i1, $i3;
        boolean z0, z1;
        android.graphics.drawable.AnimationDrawable$AnimationState $r1, $r2;
        long $l2, $l4, $l5;
        int[] $r3;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r1 = r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        $i1 = virtualinvoke $r1.<android.graphics.drawable.AnimationDrawable$AnimationState: int getChildCount()>();

        if i0 < $i1 goto label2;

     label1:
        return;

     label2:
        r0.<android.graphics.drawable.AnimationDrawable: int mCurFrame> = i0;

        virtualinvoke r0.<android.graphics.drawable.AnimationDrawable: boolean selectDrawable(int)>(i0);

        if z0 == 0 goto label3;

        virtualinvoke r0.<android.graphics.drawable.AnimationDrawable: void unscheduleSelf(java.lang.Runnable)>(r0);

     label3:
        if z1 == 0 goto label1;

        r0.<android.graphics.drawable.AnimationDrawable: int mCurFrame> = i0;

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r2 = r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        $r3 = staticinvoke <android.graphics.drawable.AnimationDrawable$AnimationState: int[] access$000(android.graphics.drawable.AnimationDrawable$AnimationState)>($r2);

        $i3 = $r3[i0];

        $l4 = (long) $i3;

        $l5 = $l2 + $l4;

        virtualinvoke r0.<android.graphics.drawable.AnimationDrawable: void scheduleSelf(java.lang.Runnable,long)>(r0, $l5);

        return;
    }

    public void addFrame(android.graphics.drawable.Drawable, int)
    {
        android.graphics.drawable.AnimationDrawable r0;
        android.graphics.drawable.Drawable r1;
        int i0, $i1;
        android.graphics.drawable.AnimationDrawable$AnimationState $r2;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        i0 := @parameter1: int;

        $r2 = r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        virtualinvoke $r2.<android.graphics.drawable.AnimationDrawable$AnimationState: void addFrame(android.graphics.drawable.Drawable,int)>(r1, i0);

        $i1 = r0.<android.graphics.drawable.AnimationDrawable: int mCurFrame>;

        if $i1 >= 0 goto label1;

        specialinvoke r0.<android.graphics.drawable.AnimationDrawable: void setFrame(int,boolean,boolean)>(0, 1, 0);

     label1:
        return;
    }

    public int getDuration(int)
    {
        android.graphics.drawable.AnimationDrawable r0;
        int i0, $i1;
        android.graphics.drawable.AnimationDrawable$AnimationState $r1;
        int[] $r2;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        $r2 = staticinvoke <android.graphics.drawable.AnimationDrawable$AnimationState: int[] access$000(android.graphics.drawable.AnimationDrawable$AnimationState)>($r1);

        $i1 = $r2[i0];

        return $i1;
    }

    public android.graphics.drawable.Drawable getFrame(int)
    {
        android.graphics.drawable.AnimationDrawable r0;
        int i0;
        android.graphics.drawable.AnimationDrawable$AnimationState $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        $r2 = virtualinvoke $r1.<android.graphics.drawable.AnimationDrawable$AnimationState: android.graphics.drawable.Drawable getChild(int)>(i0);

        return $r2;
    }

    public int getNumberOfFrames()
    {
        android.graphics.drawable.AnimationDrawable r0;
        android.graphics.drawable.AnimationDrawable$AnimationState $r1;
        int $i0;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        $r1 = r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.AnimationDrawable$AnimationState: int getChildCount()>();

        return $i0;
    }

    public void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.AnimationDrawable r0;
        android.content.res.Resources r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.util.AttributeSet r3;
        android.content.res.TypedArray r4, r5;
        int i0, i1, i2, i3, i4, i5, $i6;
        android.graphics.drawable.Drawable r6;
        int[] $r7, $r11;
        boolean $z0, $z1, $z3;
        android.graphics.drawable.AnimationDrawable$AnimationState $r8, $r9, $r14;
        java.lang.String $r10, $r17, $r21, $r23, $r24;
        java.lang.StringBuilder $r15, $r16, $r18, $r22, $r25, r26, r28;
        org.xmlpull.v1.XmlPullParserException r27, r29;
        java.lang.Throwable r30, r31;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter2: android.util.AttributeSet;

        $r7 = <com.android.internal.R$styleable: int[] AnimationDrawable>;

        r4 = virtualinvoke r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r3, $r7);

        specialinvoke r0.<android.graphics.drawable.DrawableContainer: void inflateWithAttributes(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.TypedArray,int)>(r1, r2, r4, 0);

        $r8 = r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        $z0 = virtualinvoke r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(1, 0);

        virtualinvoke $r8.<android.graphics.drawable.AnimationDrawable$AnimationState: void setVariablePadding(boolean)>($z0);

        $r9 = r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        $z1 = virtualinvoke r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(2, 0);

        staticinvoke <android.graphics.drawable.AnimationDrawable$AnimationState: boolean access$102(android.graphics.drawable.AnimationDrawable$AnimationState,boolean)>($r9, $z1);

        virtualinvoke r4.<android.content.res.TypedArray: void recycle()>();

        $i6 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        i0 = 1 + $i6;

     label1:
        i1 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i1 == 1 goto label7;

        i2 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if i2 >= i0 goto label2;

        if i1 == 3 goto label7;

     label2:
        if i1 != 2 goto label1;

        if i2 > i0 goto label1;

        $r10 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z3 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z3 == 0 goto label1;

        $r11 = <com.android.internal.R$styleable: int[] AnimationDrawableItem>;

        r5 = virtualinvoke r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r3, $r11);

        i3 = virtualinvoke r5.<android.content.res.TypedArray: int getInt(int,int)>(0, -1);

        if i3 >= 0 goto label3;

        r27 = new org.xmlpull.v1.XmlPullParserException;

        r26 = new java.lang.StringBuilder;

        specialinvoke r26.<java.lang.StringBuilder: void <init>()>();

        $r24 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r25 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r22 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <item> tag requires a \'duration\' attribute");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r27.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r23);

        r30 = (java.lang.Throwable) r27;

        throw r30;

     label3:
        i4 = virtualinvoke r5.<android.content.res.TypedArray: int getResourceId(int,int)>(1, 0);

        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        if i4 == 0 goto label5;

        r6 = virtualinvoke r1.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(i4);

     label4:
        $r14 = r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        virtualinvoke $r14.<android.graphics.drawable.AnimationDrawable$AnimationState: void addFrame(android.graphics.drawable.Drawable,int)>(r6, i3);

        if r6 == null goto label1;

        virtualinvoke r6.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        goto label1;

     label5:
        i5 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i5 == 4 goto label5;

        if i5 == 2 goto label6;

        r29 = new org.xmlpull.v1.XmlPullParserException;

        r28 = new java.lang.StringBuilder;

        specialinvoke r28.<java.lang.StringBuilder: void <init>()>();

        $r17 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r18 = virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r15 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <item> tag requires a \'drawable\' attribute or child tag");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" defining a drawable");

        $r21 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r29.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r21);

        r31 = (java.lang.Throwable) r29;

        throw r31;

     label6:
        r6 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>(r1, r2, r3);

        goto label4;

     label7:
        specialinvoke r0.<android.graphics.drawable.AnimationDrawable: void setFrame(int,boolean,boolean)>(0, 1, 0);

        return;
    }

    public boolean isOneShot()
    {
        android.graphics.drawable.AnimationDrawable r0;
        android.graphics.drawable.AnimationDrawable$AnimationState $r1;
        boolean $z0;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        $r1 = r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        $z0 = staticinvoke <android.graphics.drawable.AnimationDrawable$AnimationState: boolean access$100(android.graphics.drawable.AnimationDrawable$AnimationState)>($r1);

        return $z0;
    }

    public boolean isRunning()
    {
        android.graphics.drawable.AnimationDrawable r0;
        int $i0;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        $i0 = r0.<android.graphics.drawable.AnimationDrawable: int mCurFrame>;

        if $i0 <= -1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        android.graphics.drawable.AnimationDrawable r0;
        boolean $z0;
        android.graphics.drawable.Drawable $r1;
        android.graphics.drawable.AnimationDrawable$AnimationState $r2, $r3;
        int[] $r4, $r6;
        java.lang.Object $r5;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        $z0 = r0.<android.graphics.drawable.AnimationDrawable: boolean mMutated>;

        if $z0 != 0 goto label1;

        $r1 = specialinvoke r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mutate()>();

        if $r1 != r0 goto label1;

        $r3 = r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        $r2 = r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        $r4 = staticinvoke <android.graphics.drawable.AnimationDrawable$AnimationState: int[] access$000(android.graphics.drawable.AnimationDrawable$AnimationState)>($r2);

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Object clone()>();

        $r6 = (int[]) $r5;

        staticinvoke <android.graphics.drawable.AnimationDrawable$AnimationState: int[] access$002(android.graphics.drawable.AnimationDrawable$AnimationState,int[])>($r3, $r6);

        r0.<android.graphics.drawable.AnimationDrawable: boolean mMutated> = 1;

     label1:
        return r0;
    }

    public void run()
    {
        android.graphics.drawable.AnimationDrawable r0;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        specialinvoke r0.<android.graphics.drawable.AnimationDrawable: void nextFrame(boolean)>(0);

        return;
    }

    public void setOneShot(boolean)
    {
        android.graphics.drawable.AnimationDrawable r0;
        boolean z0;
        android.graphics.drawable.AnimationDrawable$AnimationState $r1;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.AnimationDrawable$AnimationState mAnimationState>;

        staticinvoke <android.graphics.drawable.AnimationDrawable$AnimationState: boolean access$102(android.graphics.drawable.AnimationDrawable$AnimationState,boolean)>($r1, z0);

        return;
    }

    public boolean setVisible(boolean, boolean)
    {
        android.graphics.drawable.AnimationDrawable r0;
        boolean z0, z1, z2;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 = specialinvoke r0.<android.graphics.drawable.DrawableContainer: boolean setVisible(boolean,boolean)>(z0, z1);

        if z0 == 0 goto label3;

        if z2 != 0 goto label1;

        if z1 == 0 goto label2;

     label1:
        specialinvoke r0.<android.graphics.drawable.AnimationDrawable: void setFrame(int,boolean,boolean)>(0, 1, 1);

     label2:
        return z2;

     label3:
        virtualinvoke r0.<android.graphics.drawable.AnimationDrawable: void unscheduleSelf(java.lang.Runnable)>(r0);

        return z2;
    }

    public void start()
    {
        android.graphics.drawable.AnimationDrawable r0;
        boolean $z0;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        $z0 = virtualinvoke r0.<android.graphics.drawable.AnimationDrawable: boolean isRunning()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<android.graphics.drawable.AnimationDrawable: void run()>();

     label1:
        return;
    }

    public void stop()
    {
        android.graphics.drawable.AnimationDrawable r0;
        boolean $z0;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        $z0 = virtualinvoke r0.<android.graphics.drawable.AnimationDrawable: boolean isRunning()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.graphics.drawable.AnimationDrawable: void unscheduleSelf(java.lang.Runnable)>(r0);

     label1:
        return;
    }

    public void unscheduleSelf(java.lang.Runnable)
    {
        android.graphics.drawable.AnimationDrawable r0;
        java.lang.Runnable r1;

        r0 := @this: android.graphics.drawable.AnimationDrawable;

        r1 := @parameter0: java.lang.Runnable;

        r0.<android.graphics.drawable.AnimationDrawable: int mCurFrame> = -1;

        specialinvoke r0.<android.graphics.drawable.DrawableContainer: void unscheduleSelf(java.lang.Runnable)>(r1);

        return;
    }
}
