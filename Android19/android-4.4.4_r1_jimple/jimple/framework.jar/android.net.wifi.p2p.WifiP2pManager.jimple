public class android.net.wifi.p2p.WifiP2pManager extends java.lang.Object
{
    public static final int ADD_LOCAL_SERVICE;
    public static final int ADD_LOCAL_SERVICE_FAILED;
    public static final int ADD_LOCAL_SERVICE_SUCCEEDED;
    public static final int ADD_SERVICE_REQUEST;
    public static final int ADD_SERVICE_REQUEST_FAILED;
    public static final int ADD_SERVICE_REQUEST_SUCCEEDED;
    private static final int BASE;
    public static final int BUSY;
    public static final int CANCEL_CONNECT;
    public static final int CANCEL_CONNECT_FAILED;
    public static final int CANCEL_CONNECT_SUCCEEDED;
    public static final int CLEAR_LOCAL_SERVICES;
    public static final int CLEAR_LOCAL_SERVICES_FAILED;
    public static final int CLEAR_LOCAL_SERVICES_SUCCEEDED;
    public static final int CLEAR_SERVICE_REQUESTS;
    public static final int CLEAR_SERVICE_REQUESTS_FAILED;
    public static final int CLEAR_SERVICE_REQUESTS_SUCCEEDED;
    public static final int CONNECT;
    public static final int CONNECT_FAILED;
    public static final int CONNECT_SUCCEEDED;
    public static final int CREATE_GROUP;
    public static final int CREATE_GROUP_FAILED;
    public static final int CREATE_GROUP_SUCCEEDED;
    public static final int DELETE_PERSISTENT_GROUP;
    public static final int DELETE_PERSISTENT_GROUP_FAILED;
    public static final int DELETE_PERSISTENT_GROUP_SUCCEEDED;
    public static final int DISCOVER_PEERS;
    public static final int DISCOVER_PEERS_FAILED;
    public static final int DISCOVER_PEERS_SUCCEEDED;
    public static final int DISCOVER_SERVICES;
    public static final int DISCOVER_SERVICES_FAILED;
    public static final int DISCOVER_SERVICES_SUCCEEDED;
    public static final int ERROR;
    public static final java.lang.String EXTRA_DISCOVERY_STATE;
    public static final java.lang.String EXTRA_NETWORK_INFO;
    public static final java.lang.String EXTRA_P2P_DEVICE_LIST;
    public static final java.lang.String EXTRA_WIFI_P2P_DEVICE;
    public static final java.lang.String EXTRA_WIFI_P2P_GROUP;
    public static final java.lang.String EXTRA_WIFI_P2P_INFO;
    public static final java.lang.String EXTRA_WIFI_STATE;
    public static final int MIRACAST_DISABLED;
    public static final int MIRACAST_SINK;
    public static final int MIRACAST_SOURCE;
    public static final int NO_SERVICE_REQUESTS;
    public static final int P2P_UNSUPPORTED;
    public static final int PING;
    public static final int REMOVE_GROUP;
    public static final int REMOVE_GROUP_FAILED;
    public static final int REMOVE_GROUP_SUCCEEDED;
    public static final int REMOVE_LOCAL_SERVICE;
    public static final int REMOVE_LOCAL_SERVICE_FAILED;
    public static final int REMOVE_LOCAL_SERVICE_SUCCEEDED;
    public static final int REMOVE_SERVICE_REQUEST;
    public static final int REMOVE_SERVICE_REQUEST_FAILED;
    public static final int REMOVE_SERVICE_REQUEST_SUCCEEDED;
    public static final int REQUEST_CONNECTION_INFO;
    public static final int REQUEST_GROUP_INFO;
    public static final int REQUEST_PEERS;
    public static final int REQUEST_PERSISTENT_GROUP_INFO;
    public static final int RESPONSE_CONNECTION_INFO;
    public static final int RESPONSE_GROUP_INFO;
    public static final int RESPONSE_PEERS;
    public static final int RESPONSE_PERSISTENT_GROUP_INFO;
    public static final int RESPONSE_SERVICE;
    public static final int SET_CHANNEL;
    public static final int SET_CHANNEL_FAILED;
    public static final int SET_CHANNEL_SUCCEEDED;
    public static final int SET_DEVICE_NAME;
    public static final int SET_DEVICE_NAME_FAILED;
    public static final int SET_DEVICE_NAME_SUCCEEDED;
    public static final int SET_WFD_INFO;
    public static final int SET_WFD_INFO_FAILED;
    public static final int SET_WFD_INFO_SUCCEEDED;
    public static final int START_LISTEN;
    public static final int START_LISTEN_FAILED;
    public static final int START_LISTEN_SUCCEEDED;
    public static final int START_WPS;
    public static final int START_WPS_FAILED;
    public static final int START_WPS_SUCCEEDED;
    public static final int STOP_DISCOVERY;
    public static final int STOP_DISCOVERY_FAILED;
    public static final int STOP_DISCOVERY_SUCCEEDED;
    public static final int STOP_LISTEN;
    public static final int STOP_LISTEN_FAILED;
    public static final int STOP_LISTEN_SUCCEEDED;
    private static final java.lang.String TAG;
    public static final java.lang.String WIFI_P2P_CONNECTION_CHANGED_ACTION;
    public static final java.lang.String WIFI_P2P_DISCOVERY_CHANGED_ACTION;
    public static final int WIFI_P2P_DISCOVERY_STARTED;
    public static final int WIFI_P2P_DISCOVERY_STOPPED;
    public static final java.lang.String WIFI_P2P_PEERS_CHANGED_ACTION;
    public static final java.lang.String WIFI_P2P_PERSISTENT_GROUPS_CHANGED_ACTION;
    public static final java.lang.String WIFI_P2P_STATE_CHANGED_ACTION;
    public static final int WIFI_P2P_STATE_DISABLED;
    public static final int WIFI_P2P_STATE_ENABLED;
    public static final java.lang.String WIFI_P2P_THIS_DEVICE_CHANGED_ACTION;
    android.net.wifi.p2p.IWifiP2pManager mService;

    public void <init>(android.net.wifi.p2p.IWifiP2pManager)
    {
        android.net.wifi.p2p.WifiP2pManager r0;
        android.net.wifi.p2p.IWifiP2pManager r1;

        r0 := @this: android.net.wifi.p2p.WifiP2pManager;

        r1 := @parameter0: android.net.wifi.p2p.IWifiP2pManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.wifi.p2p.WifiP2pManager: android.net.wifi.p2p.IWifiP2pManager mService> = r1;

        return;
    }

    private static void checkChannel(android.net.wifi.p2p.WifiP2pManager$Channel)
    {
        android.net.wifi.p2p.WifiP2pManager$Channel r0;
        java.lang.IllegalArgumentException $r1;

        r0 := @parameter0: android.net.wifi.p2p.WifiP2pManager$Channel;

        if r0 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Channel needs to be initialized");

        throw $r1;

     label1:
        return;
    }

    private static void checkP2pConfig(android.net.wifi.p2p.WifiP2pConfig)
    {
        android.net.wifi.p2p.WifiP2pConfig r0;
        java.lang.String $r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r2, $r3;

        r0 := @parameter0: android.net.wifi.p2p.WifiP2pConfig;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("config cannot be null");

        throw $r3;

     label1:
        $r1 = r0.<android.net.wifi.p2p.WifiP2pConfig: java.lang.String deviceAddress>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("deviceAddress cannot be empty");

        throw $r2;

     label2:
        return;
    }

    private static void checkServiceInfo(android.net.wifi.p2p.nsd.WifiP2pServiceInfo)
    {
        android.net.wifi.p2p.nsd.WifiP2pServiceInfo r0;
        java.lang.IllegalArgumentException $r1;

        r0 := @parameter0: android.net.wifi.p2p.nsd.WifiP2pServiceInfo;

        if r0 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("service info is null");

        throw $r1;

     label1:
        return;
    }

    private static void checkServiceRequest(android.net.wifi.p2p.nsd.WifiP2pServiceRequest)
    {
        android.net.wifi.p2p.nsd.WifiP2pServiceRequest r0;
        java.lang.IllegalArgumentException $r1;

        r0 := @parameter0: android.net.wifi.p2p.nsd.WifiP2pServiceRequest;

        if r0 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("service request is null");

        throw $r1;

     label1:
        return;
    }

    public void addLocalService(android.net.wifi.p2p.WifiP2pManager$Channel, android.net.wifi.p2p.nsd.WifiP2pServiceInfo, android.net.wifi.p2p.WifiP2pManager$ActionListener)
    {
        android.net.wifi.p2p.WifiP2pManager r0;
        android.net.wifi.p2p.WifiP2pManager$Channel r1;
        android.net.wifi.p2p.nsd.WifiP2pServiceInfo r2;
        android.net.wifi.p2p.WifiP2pManager$ActionListener r3;
        com.android.internal.util.AsyncChannel $r4;
        int $i0;

        r0 := @this: android.net.wifi.p2p.WifiP2pManager;

        r1 := @parameter0: android.net.wifi.p2p.WifiP2pManager$Channel;

        r2 := @parameter1: android.net.wifi.p2p.nsd.WifiP2pServiceInfo;

        r3 := @parameter2: android.net.wifi.p2p.WifiP2pManager$ActionListener;

        staticinvoke <android.net.wifi.p2p.WifiP2pManager: void checkChannel(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        staticinvoke <android.net.wifi.p2p.WifiP2pManager: void checkServiceInfo(android.net.wifi.p2p.nsd.WifiP2pServiceInfo)>(r2);

        $r4 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: com.android.internal.util.AsyncChannel access$400(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        $i0 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: int access$500(android.net.wifi.p2p.WifiP2pManager$Channel,java.lang.Object)>(r1, r3);

        virtualinvoke $r4.<com.android.internal.util.AsyncChannel: void sendMessage(int,int,int,java.lang.Object)>(139292, 0, $i0, r2);

        return;
    }

    public void addServiceRequest(android.net.wifi.p2p.WifiP2pManager$Channel, android.net.wifi.p2p.nsd.WifiP2pServiceRequest, android.net.wifi.p2p.WifiP2pManager$ActionListener)
    {
        android.net.wifi.p2p.WifiP2pManager r0;
        android.net.wifi.p2p.WifiP2pManager$Channel r1;
        android.net.wifi.p2p.nsd.WifiP2pServiceRequest r2;
        android.net.wifi.p2p.WifiP2pManager$ActionListener r3;
        com.android.internal.util.AsyncChannel $r4;
        int $i0;

        r0 := @this: android.net.wifi.p2p.WifiP2pManager;

        r1 := @parameter0: android.net.wifi.p2p.WifiP2pManager$Channel;

        r2 := @parameter1: android.net.wifi.p2p.nsd.WifiP2pServiceRequest;

        r3 := @parameter2: android.net.wifi.p2p.WifiP2pManager$ActionListener;

        staticinvoke <android.net.wifi.p2p.WifiP2pManager: void checkChannel(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        staticinvoke <android.net.wifi.p2p.WifiP2pManager: void checkServiceRequest(android.net.wifi.p2p.nsd.WifiP2pServiceRequest)>(r2);

        $r4 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: com.android.internal.util.AsyncChannel access$400(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        $i0 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: int access$500(android.net.wifi.p2p.WifiP2pManager$Channel,java.lang.Object)>(r1, r3);

        virtualinvoke $r4.<com.android.internal.util.AsyncChannel: void sendMessage(int,int,int,java.lang.Object)>(139301, 0, $i0, r2);

        return;
    }

    public void cancelConnect(android.net.wifi.p2p.WifiP2pManager$Channel, android.net.wifi.p2p.WifiP2pManager$ActionListener)
    {
        android.net.wifi.p2p.WifiP2pManager r0;
        android.net.wifi.p2p.WifiP2pManager$Channel r1;
        android.net.wifi.p2p.WifiP2pManager$ActionListener r2;
        com.android.internal.util.AsyncChannel $r3;
        int $i0;

        r0 := @this: android.net.wifi.p2p.WifiP2pManager;

        r1 := @parameter0: android.net.wifi.p2p.WifiP2pManager$Channel;

        r2 := @parameter1: android.net.wifi.p2p.WifiP2pManager$ActionListener;

        staticinvoke <android.net.wifi.p2p.WifiP2pManager: void checkChannel(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        $r3 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: com.android.internal.util.AsyncChannel access$400(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        $i0 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: int access$500(android.net.wifi.p2p.WifiP2pManager$Channel,java.lang.Object)>(r1, r2);

        virtualinvoke $r3.<com.android.internal.util.AsyncChannel: void sendMessage(int,int,int)>(139274, 0, $i0);

        return;
    }

    public void clearLocalServices(android.net.wifi.p2p.WifiP2pManager$Channel, android.net.wifi.p2p.WifiP2pManager$ActionListener)
    {
        android.net.wifi.p2p.WifiP2pManager r0;
        android.net.wifi.p2p.WifiP2pManager$Channel r1;
        android.net.wifi.p2p.WifiP2pManager$ActionListener r2;
        com.android.internal.util.AsyncChannel $r3;
        int $i0;

        r0 := @this: android.net.wifi.p2p.WifiP2pManager;

        r1 := @parameter0: android.net.wifi.p2p.WifiP2pManager$Channel;

        r2 := @parameter1: android.net.wifi.p2p.WifiP2pManager$ActionListener;

        staticinvoke <android.net.wifi.p2p.WifiP2pManager: void checkChannel(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        $r3 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: com.android.internal.util.AsyncChannel access$400(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        $i0 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: int access$500(android.net.wifi.p2p.WifiP2pManager$Channel,java.lang.Object)>(r1, r2);

        virtualinvoke $r3.<com.android.internal.util.AsyncChannel: void sendMessage(int,int,int)>(139298, 0, $i0);

        return;
    }

    public void clearServiceRequests(android.net.wifi.p2p.WifiP2pManager$Channel, android.net.wifi.p2p.WifiP2pManager$ActionListener)
    {
        android.net.wifi.p2p.WifiP2pManager r0;
        android.net.wifi.p2p.WifiP2pManager$Channel r1;
        android.net.wifi.p2p.WifiP2pManager$ActionListener r2;
        com.android.internal.util.AsyncChannel $r3;
        int $i0;

        r0 := @this: android.net.wifi.p2p.WifiP2pManager;

        r1 := @parameter0: android.net.wifi.p2p.WifiP2pManager$Channel;

        r2 := @parameter1: android.net.wifi.p2p.WifiP2pManager$ActionListener;

        staticinvoke <android.net.wifi.p2p.WifiP2pManager: void checkChannel(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        $r3 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: com.android.internal.util.AsyncChannel access$400(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        $i0 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: int access$500(android.net.wifi.p2p.WifiP2pManager$Channel,java.lang.Object)>(r1, r2);

        virtualinvoke $r3.<com.android.internal.util.AsyncChannel: void sendMessage(int,int,int)>(139307, 0, $i0);

        return;
    }

    public void connect(android.net.wifi.p2p.WifiP2pManager$Channel, android.net.wifi.p2p.WifiP2pConfig, android.net.wifi.p2p.WifiP2pManager$ActionListener)
    {
        android.net.wifi.p2p.WifiP2pManager r0;
        android.net.wifi.p2p.WifiP2pManager$Channel r1;
        android.net.wifi.p2p.WifiP2pConfig r2;
        android.net.wifi.p2p.WifiP2pManager$ActionListener r3;
        com.android.internal.util.AsyncChannel $r4;
        int $i0;

        r0 := @this: android.net.wifi.p2p.WifiP2pManager;

        r1 := @parameter0: android.net.wifi.p2p.WifiP2pManager$Channel;

        r2 := @parameter1: android.net.wifi.p2p.WifiP2pConfig;

        r3 := @parameter2: android.net.wifi.p2p.WifiP2pManager$ActionListener;

        staticinvoke <android.net.wifi.p2p.WifiP2pManager: void checkChannel(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        staticinvoke <android.net.wifi.p2p.WifiP2pManager: void checkP2pConfig(android.net.wifi.p2p.WifiP2pConfig)>(r2);

        $r4 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: com.android.internal.util.AsyncChannel access$400(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        $i0 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: int access$500(android.net.wifi.p2p.WifiP2pManager$Channel,java.lang.Object)>(r1, r3);

        virtualinvoke $r4.<com.android.internal.util.AsyncChannel: void sendMessage(int,int,int,java.lang.Object)>(139271, 0, $i0, r2);

        return;
    }

    public void createGroup(android.net.wifi.p2p.WifiP2pManager$Channel, android.net.wifi.p2p.WifiP2pManager$ActionListener)
    {
        android.net.wifi.p2p.WifiP2pManager r0;
        android.net.wifi.p2p.WifiP2pManager$Channel r1;
        android.net.wifi.p2p.WifiP2pManager$ActionListener r2;
        com.android.internal.util.AsyncChannel $r3;
        int $i0;

        r0 := @this: android.net.wifi.p2p.WifiP2pManager;

        r1 := @parameter0: android.net.wifi.p2p.WifiP2pManager$Channel;

        r2 := @parameter1: android.net.wifi.p2p.WifiP2pManager$ActionListener;

        staticinvoke <android.net.wifi.p2p.WifiP2pManager: void checkChannel(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        $r3 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: com.android.internal.util.AsyncChannel access$400(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        $i0 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: int access$500(android.net.wifi.p2p.WifiP2pManager$Channel,java.lang.Object)>(r1, r2);

        virtualinvoke $r3.<com.android.internal.util.AsyncChannel: void sendMessage(int,int,int)>(139277, -2, $i0);

        return;
    }

    public void deletePersistentGroup(android.net.wifi.p2p.WifiP2pManager$Channel, int, android.net.wifi.p2p.WifiP2pManager$ActionListener)
    {
        android.net.wifi.p2p.WifiP2pManager r0;
        android.net.wifi.p2p.WifiP2pManager$Channel r1;
        int i0, $i1;
        android.net.wifi.p2p.WifiP2pManager$ActionListener r2;
        com.android.internal.util.AsyncChannel $r3;

        r0 := @this: android.net.wifi.p2p.WifiP2pManager;

        r1 := @parameter0: android.net.wifi.p2p.WifiP2pManager$Channel;

        i0 := @parameter1: int;

        r2 := @parameter2: android.net.wifi.p2p.WifiP2pManager$ActionListener;

        staticinvoke <android.net.wifi.p2p.WifiP2pManager: void checkChannel(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        $r3 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: com.android.internal.util.AsyncChannel access$400(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        $i1 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: int access$500(android.net.wifi.p2p.WifiP2pManager$Channel,java.lang.Object)>(r1, r2);

        virtualinvoke $r3.<com.android.internal.util.AsyncChannel: void sendMessage(int,int,int)>(139318, i0, $i1);

        return;
    }

    public void discoverPeers(android.net.wifi.p2p.WifiP2pManager$Channel, android.net.wifi.p2p.WifiP2pManager$ActionListener)
    {
        android.net.wifi.p2p.WifiP2pManager r0;
        android.net.wifi.p2p.WifiP2pManager$Channel r1;
        android.net.wifi.p2p.WifiP2pManager$ActionListener r2;
        com.android.internal.util.AsyncChannel $r3;
        int $i0;

        r0 := @this: android.net.wifi.p2p.WifiP2pManager;

        r1 := @parameter0: android.net.wifi.p2p.WifiP2pManager$Channel;

        r2 := @parameter1: android.net.wifi.p2p.WifiP2pManager$ActionListener;

        staticinvoke <android.net.wifi.p2p.WifiP2pManager: void checkChannel(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        $r3 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: com.android.internal.util.AsyncChannel access$400(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        $i0 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: int access$500(android.net.wifi.p2p.WifiP2pManager$Channel,java.lang.Object)>(r1, r2);

        virtualinvoke $r3.<com.android.internal.util.AsyncChannel: void sendMessage(int,int,int)>(139265, 0, $i0);

        return;
    }

    public void discoverServices(android.net.wifi.p2p.WifiP2pManager$Channel, android.net.wifi.p2p.WifiP2pManager$ActionListener)
    {
        android.net.wifi.p2p.WifiP2pManager r0;
        android.net.wifi.p2p.WifiP2pManager$Channel r1;
        android.net.wifi.p2p.WifiP2pManager$ActionListener r2;
        com.android.internal.util.AsyncChannel $r3;
        int $i0;

        r0 := @this: android.net.wifi.p2p.WifiP2pManager;

        r1 := @parameter0: android.net.wifi.p2p.WifiP2pManager$Channel;

        r2 := @parameter1: android.net.wifi.p2p.WifiP2pManager$ActionListener;

        staticinvoke <android.net.wifi.p2p.WifiP2pManager: void checkChannel(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        $r3 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: com.android.internal.util.AsyncChannel access$400(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        $i0 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: int access$500(android.net.wifi.p2p.WifiP2pManager$Channel,java.lang.Object)>(r1, r2);

        virtualinvoke $r3.<com.android.internal.util.AsyncChannel: void sendMessage(int,int,int)>(139310, 0, $i0);

        return;
    }

    public android.os.Messenger getMessenger()
    {
        android.net.wifi.p2p.WifiP2pManager r0;
        android.os.Messenger r2;
        android.net.wifi.p2p.IWifiP2pManager $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.net.wifi.p2p.WifiP2pManager;

     label1:
        $r3 = r0.<android.net.wifi.p2p.WifiP2pManager: android.net.wifi.p2p.IWifiP2pManager mService>;

        r2 = interfaceinvoke $r3.<android.net.wifi.p2p.IWifiP2pManager: android.os.Messenger getMessenger()>();

     label2:
        return r2;

     label3:
        $r4 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.net.wifi.p2p.WifiP2pManager$Channel initialize(android.content.Context, android.os.Looper, android.net.wifi.p2p.WifiP2pManager$ChannelListener)
    {
        android.net.wifi.p2p.WifiP2pManager r0;
        android.content.Context r1;
        android.os.Looper r2;
        android.net.wifi.p2p.WifiP2pManager$ChannelListener r3;
        android.os.Messenger r4;
        android.net.wifi.p2p.WifiP2pManager$Channel r5, $r6;
        com.android.internal.util.AsyncChannel $r7;
        android.net.wifi.p2p.WifiP2pManager$Channel$P2pHandler $r8;
        int $i0;

        r0 := @this: android.net.wifi.p2p.WifiP2pManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Looper;

        r3 := @parameter2: android.net.wifi.p2p.WifiP2pManager$ChannelListener;

        r4 = virtualinvoke r0.<android.net.wifi.p2p.WifiP2pManager: android.os.Messenger getMessenger()>();

        if r4 != null goto label2;

        r5 = null;

     label1:
        return r5;

     label2:
        $r6 = new android.net.wifi.p2p.WifiP2pManager$Channel;

        specialinvoke $r6.<android.net.wifi.p2p.WifiP2pManager$Channel: void <init>(android.content.Context,android.os.Looper,android.net.wifi.p2p.WifiP2pManager$ChannelListener)>(r1, r2, r3);

        r5 = $r6;

        $r7 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: com.android.internal.util.AsyncChannel access$400(android.net.wifi.p2p.WifiP2pManager$Channel)>(r5);

        $r8 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: android.net.wifi.p2p.WifiP2pManager$Channel$P2pHandler access$300(android.net.wifi.p2p.WifiP2pManager$Channel)>(r5);

        $i0 = virtualinvoke $r7.<com.android.internal.util.AsyncChannel: int connectSync(android.content.Context,android.os.Handler,android.os.Messenger)>(r1, $r8, r4);

        if $i0 == 0 goto label1;

        return null;
    }

    public void listen(android.net.wifi.p2p.WifiP2pManager$Channel, boolean, android.net.wifi.p2p.WifiP2pManager$ActionListener)
    {
        android.net.wifi.p2p.WifiP2pManager r0;
        android.net.wifi.p2p.WifiP2pManager$Channel r1;
        boolean z0;
        android.net.wifi.p2p.WifiP2pManager$ActionListener r2;
        com.android.internal.util.AsyncChannel r3;
        int i0, $i1;

        r0 := @this: android.net.wifi.p2p.WifiP2pManager;

        r1 := @parameter0: android.net.wifi.p2p.WifiP2pManager$Channel;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.net.wifi.p2p.WifiP2pManager$ActionListener;

        staticinvoke <android.net.wifi.p2p.WifiP2pManager: void checkChannel(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        r3 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: com.android.internal.util.AsyncChannel access$400(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        if z0 == 0 goto label2;

        i0 = 139329;

     label1:
        $i1 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: int access$500(android.net.wifi.p2p.WifiP2pManager$Channel,java.lang.Object)>(r1, r2);

        virtualinvoke r3.<com.android.internal.util.AsyncChannel: void sendMessage(int,int,int)>(i0, 0, $i1);

        return;

     label2:
        i0 = 139332;

        goto label1;
    }

    public void removeGroup(android.net.wifi.p2p.WifiP2pManager$Channel, android.net.wifi.p2p.WifiP2pManager$ActionListener)
    {
        android.net.wifi.p2p.WifiP2pManager r0;
        android.net.wifi.p2p.WifiP2pManager$Channel r1;
        android.net.wifi.p2p.WifiP2pManager$ActionListener r2;
        com.android.internal.util.AsyncChannel $r3;
        int $i0;

        r0 := @this: android.net.wifi.p2p.WifiP2pManager;

        r1 := @parameter0: android.net.wifi.p2p.WifiP2pManager$Channel;

        r2 := @parameter1: android.net.wifi.p2p.WifiP2pManager$ActionListener;

        staticinvoke <android.net.wifi.p2p.WifiP2pManager: void checkChannel(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        $r3 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: com.android.internal.util.AsyncChannel access$400(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        $i0 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: int access$500(android.net.wifi.p2p.WifiP2pManager$Channel,java.lang.Object)>(r1, r2);

        virtualinvoke $r3.<com.android.internal.util.AsyncChannel: void sendMessage(int,int,int)>(139280, 0, $i0);

        return;
    }

    public void removeLocalService(android.net.wifi.p2p.WifiP2pManager$Channel, android.net.wifi.p2p.nsd.WifiP2pServiceInfo, android.net.wifi.p2p.WifiP2pManager$ActionListener)
    {
        android.net.wifi.p2p.WifiP2pManager r0;
        android.net.wifi.p2p.WifiP2pManager$Channel r1;
        android.net.wifi.p2p.nsd.WifiP2pServiceInfo r2;
        android.net.wifi.p2p.WifiP2pManager$ActionListener r3;
        com.android.internal.util.AsyncChannel $r4;
        int $i0;

        r0 := @this: android.net.wifi.p2p.WifiP2pManager;

        r1 := @parameter0: android.net.wifi.p2p.WifiP2pManager$Channel;

        r2 := @parameter1: android.net.wifi.p2p.nsd.WifiP2pServiceInfo;

        r3 := @parameter2: android.net.wifi.p2p.WifiP2pManager$ActionListener;

        staticinvoke <android.net.wifi.p2p.WifiP2pManager: void checkChannel(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        staticinvoke <android.net.wifi.p2p.WifiP2pManager: void checkServiceInfo(android.net.wifi.p2p.nsd.WifiP2pServiceInfo)>(r2);

        $r4 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: com.android.internal.util.AsyncChannel access$400(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        $i0 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: int access$500(android.net.wifi.p2p.WifiP2pManager$Channel,java.lang.Object)>(r1, r3);

        virtualinvoke $r4.<com.android.internal.util.AsyncChannel: void sendMessage(int,int,int,java.lang.Object)>(139295, 0, $i0, r2);

        return;
    }

    public void removeServiceRequest(android.net.wifi.p2p.WifiP2pManager$Channel, android.net.wifi.p2p.nsd.WifiP2pServiceRequest, android.net.wifi.p2p.WifiP2pManager$ActionListener)
    {
        android.net.wifi.p2p.WifiP2pManager r0;
        android.net.wifi.p2p.WifiP2pManager$Channel r1;
        android.net.wifi.p2p.nsd.WifiP2pServiceRequest r2;
        android.net.wifi.p2p.WifiP2pManager$ActionListener r3;
        com.android.internal.util.AsyncChannel $r4;
        int $i0;

        r0 := @this: android.net.wifi.p2p.WifiP2pManager;

        r1 := @parameter0: android.net.wifi.p2p.WifiP2pManager$Channel;

        r2 := @parameter1: android.net.wifi.p2p.nsd.WifiP2pServiceRequest;

        r3 := @parameter2: android.net.wifi.p2p.WifiP2pManager$ActionListener;

        staticinvoke <android.net.wifi.p2p.WifiP2pManager: void checkChannel(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        staticinvoke <android.net.wifi.p2p.WifiP2pManager: void checkServiceRequest(android.net.wifi.p2p.nsd.WifiP2pServiceRequest)>(r2);

        $r4 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: com.android.internal.util.AsyncChannel access$400(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        $i0 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: int access$500(android.net.wifi.p2p.WifiP2pManager$Channel,java.lang.Object)>(r1, r3);

        virtualinvoke $r4.<com.android.internal.util.AsyncChannel: void sendMessage(int,int,int,java.lang.Object)>(139304, 0, $i0, r2);

        return;
    }

    public void requestConnectionInfo(android.net.wifi.p2p.WifiP2pManager$Channel, android.net.wifi.p2p.WifiP2pManager$ConnectionInfoListener)
    {
        android.net.wifi.p2p.WifiP2pManager r0;
        android.net.wifi.p2p.WifiP2pManager$Channel r1;
        android.net.wifi.p2p.WifiP2pManager$ConnectionInfoListener r2;
        com.android.internal.util.AsyncChannel $r3;
        int $i0;

        r0 := @this: android.net.wifi.p2p.WifiP2pManager;

        r1 := @parameter0: android.net.wifi.p2p.WifiP2pManager$Channel;

        r2 := @parameter1: android.net.wifi.p2p.WifiP2pManager$ConnectionInfoListener;

        staticinvoke <android.net.wifi.p2p.WifiP2pManager: void checkChannel(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        $r3 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: com.android.internal.util.AsyncChannel access$400(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        $i0 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: int access$500(android.net.wifi.p2p.WifiP2pManager$Channel,java.lang.Object)>(r1, r2);

        virtualinvoke $r3.<com.android.internal.util.AsyncChannel: void sendMessage(int,int,int)>(139285, 0, $i0);

        return;
    }

    public void requestGroupInfo(android.net.wifi.p2p.WifiP2pManager$Channel, android.net.wifi.p2p.WifiP2pManager$GroupInfoListener)
    {
        android.net.wifi.p2p.WifiP2pManager r0;
        android.net.wifi.p2p.WifiP2pManager$Channel r1;
        android.net.wifi.p2p.WifiP2pManager$GroupInfoListener r2;
        com.android.internal.util.AsyncChannel $r3;
        int $i0;

        r0 := @this: android.net.wifi.p2p.WifiP2pManager;

        r1 := @parameter0: android.net.wifi.p2p.WifiP2pManager$Channel;

        r2 := @parameter1: android.net.wifi.p2p.WifiP2pManager$GroupInfoListener;

        staticinvoke <android.net.wifi.p2p.WifiP2pManager: void checkChannel(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        $r3 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: com.android.internal.util.AsyncChannel access$400(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        $i0 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: int access$500(android.net.wifi.p2p.WifiP2pManager$Channel,java.lang.Object)>(r1, r2);

        virtualinvoke $r3.<com.android.internal.util.AsyncChannel: void sendMessage(int,int,int)>(139287, 0, $i0);

        return;
    }

    public void requestPeers(android.net.wifi.p2p.WifiP2pManager$Channel, android.net.wifi.p2p.WifiP2pManager$PeerListListener)
    {
        android.net.wifi.p2p.WifiP2pManager r0;
        android.net.wifi.p2p.WifiP2pManager$Channel r1;
        android.net.wifi.p2p.WifiP2pManager$PeerListListener r2;
        com.android.internal.util.AsyncChannel $r3;
        int $i0;

        r0 := @this: android.net.wifi.p2p.WifiP2pManager;

        r1 := @parameter0: android.net.wifi.p2p.WifiP2pManager$Channel;

        r2 := @parameter1: android.net.wifi.p2p.WifiP2pManager$PeerListListener;

        staticinvoke <android.net.wifi.p2p.WifiP2pManager: void checkChannel(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        $r3 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: com.android.internal.util.AsyncChannel access$400(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        $i0 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: int access$500(android.net.wifi.p2p.WifiP2pManager$Channel,java.lang.Object)>(r1, r2);

        virtualinvoke $r3.<com.android.internal.util.AsyncChannel: void sendMessage(int,int,int)>(139283, 0, $i0);

        return;
    }

    public void requestPersistentGroupInfo(android.net.wifi.p2p.WifiP2pManager$Channel, android.net.wifi.p2p.WifiP2pManager$PersistentGroupInfoListener)
    {
        android.net.wifi.p2p.WifiP2pManager r0;
        android.net.wifi.p2p.WifiP2pManager$Channel r1;
        android.net.wifi.p2p.WifiP2pManager$PersistentGroupInfoListener r2;
        com.android.internal.util.AsyncChannel $r3;
        int $i0;

        r0 := @this: android.net.wifi.p2p.WifiP2pManager;

        r1 := @parameter0: android.net.wifi.p2p.WifiP2pManager$Channel;

        r2 := @parameter1: android.net.wifi.p2p.WifiP2pManager$PersistentGroupInfoListener;

        staticinvoke <android.net.wifi.p2p.WifiP2pManager: void checkChannel(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        $r3 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: com.android.internal.util.AsyncChannel access$400(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        $i0 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: int access$500(android.net.wifi.p2p.WifiP2pManager$Channel,java.lang.Object)>(r1, r2);

        virtualinvoke $r3.<com.android.internal.util.AsyncChannel: void sendMessage(int,int,int)>(139321, 0, $i0);

        return;
    }

    public void setDeviceName(android.net.wifi.p2p.WifiP2pManager$Channel, java.lang.String, android.net.wifi.p2p.WifiP2pManager$ActionListener)
    {
        android.net.wifi.p2p.WifiP2pManager r0;
        android.net.wifi.p2p.WifiP2pManager$Channel r1;
        java.lang.String r2;
        android.net.wifi.p2p.WifiP2pManager$ActionListener r3;
        android.net.wifi.p2p.WifiP2pDevice r4, $r5;
        com.android.internal.util.AsyncChannel $r6;
        int $i0;

        r0 := @this: android.net.wifi.p2p.WifiP2pManager;

        r1 := @parameter0: android.net.wifi.p2p.WifiP2pManager$Channel;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.net.wifi.p2p.WifiP2pManager$ActionListener;

        staticinvoke <android.net.wifi.p2p.WifiP2pManager: void checkChannel(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        $r5 = new android.net.wifi.p2p.WifiP2pDevice;

        specialinvoke $r5.<android.net.wifi.p2p.WifiP2pDevice: void <init>()>();

        r4 = $r5;

        r4.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceName> = r2;

        $r6 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: com.android.internal.util.AsyncChannel access$400(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        $i0 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: int access$500(android.net.wifi.p2p.WifiP2pManager$Channel,java.lang.Object)>(r1, r3);

        virtualinvoke $r6.<com.android.internal.util.AsyncChannel: void sendMessage(int,int,int,java.lang.Object)>(139315, 0, $i0, r4);

        return;
    }

    public void setDnsSdResponseListeners(android.net.wifi.p2p.WifiP2pManager$Channel, android.net.wifi.p2p.WifiP2pManager$DnsSdServiceResponseListener, android.net.wifi.p2p.WifiP2pManager$DnsSdTxtRecordListener)
    {
        android.net.wifi.p2p.WifiP2pManager r0;
        android.net.wifi.p2p.WifiP2pManager$Channel r1;
        android.net.wifi.p2p.WifiP2pManager$DnsSdServiceResponseListener r2;
        android.net.wifi.p2p.WifiP2pManager$DnsSdTxtRecordListener r3;

        r0 := @this: android.net.wifi.p2p.WifiP2pManager;

        r1 := @parameter0: android.net.wifi.p2p.WifiP2pManager$Channel;

        r2 := @parameter1: android.net.wifi.p2p.WifiP2pManager$DnsSdServiceResponseListener;

        r3 := @parameter2: android.net.wifi.p2p.WifiP2pManager$DnsSdTxtRecordListener;

        staticinvoke <android.net.wifi.p2p.WifiP2pManager: void checkChannel(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: android.net.wifi.p2p.WifiP2pManager$DnsSdServiceResponseListener access$702(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$DnsSdServiceResponseListener)>(r1, r2);

        staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: android.net.wifi.p2p.WifiP2pManager$DnsSdTxtRecordListener access$802(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$DnsSdTxtRecordListener)>(r1, r3);

        return;
    }

    public void setMiracastMode(int)
    {
        android.net.wifi.p2p.WifiP2pManager r0;
        int i0;
        android.net.wifi.p2p.IWifiP2pManager $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.net.wifi.p2p.WifiP2pManager;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.net.wifi.p2p.WifiP2pManager: android.net.wifi.p2p.IWifiP2pManager mService>;

        interfaceinvoke $r2.<android.net.wifi.p2p.IWifiP2pManager: void setMiracastMode(int)>(i0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setServiceResponseListener(android.net.wifi.p2p.WifiP2pManager$Channel, android.net.wifi.p2p.WifiP2pManager$ServiceResponseListener)
    {
        android.net.wifi.p2p.WifiP2pManager r0;
        android.net.wifi.p2p.WifiP2pManager$Channel r1;
        android.net.wifi.p2p.WifiP2pManager$ServiceResponseListener r2;

        r0 := @this: android.net.wifi.p2p.WifiP2pManager;

        r1 := @parameter0: android.net.wifi.p2p.WifiP2pManager$Channel;

        r2 := @parameter1: android.net.wifi.p2p.WifiP2pManager$ServiceResponseListener;

        staticinvoke <android.net.wifi.p2p.WifiP2pManager: void checkChannel(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: android.net.wifi.p2p.WifiP2pManager$ServiceResponseListener access$602(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ServiceResponseListener)>(r1, r2);

        return;
    }

    public void setUpnpServiceResponseListener(android.net.wifi.p2p.WifiP2pManager$Channel, android.net.wifi.p2p.WifiP2pManager$UpnpServiceResponseListener)
    {
        android.net.wifi.p2p.WifiP2pManager r0;
        android.net.wifi.p2p.WifiP2pManager$Channel r1;
        android.net.wifi.p2p.WifiP2pManager$UpnpServiceResponseListener r2;

        r0 := @this: android.net.wifi.p2p.WifiP2pManager;

        r1 := @parameter0: android.net.wifi.p2p.WifiP2pManager$Channel;

        r2 := @parameter1: android.net.wifi.p2p.WifiP2pManager$UpnpServiceResponseListener;

        staticinvoke <android.net.wifi.p2p.WifiP2pManager: void checkChannel(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: android.net.wifi.p2p.WifiP2pManager$UpnpServiceResponseListener access$902(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$UpnpServiceResponseListener)>(r1, r2);

        return;
    }

    public void setWFDInfo(android.net.wifi.p2p.WifiP2pManager$Channel, android.net.wifi.p2p.WifiP2pWfdInfo, android.net.wifi.p2p.WifiP2pManager$ActionListener)
    {
        android.net.wifi.p2p.WifiP2pManager r0;
        android.net.wifi.p2p.WifiP2pManager$Channel r1;
        android.net.wifi.p2p.WifiP2pWfdInfo r2;
        android.net.wifi.p2p.WifiP2pManager$ActionListener r3;
        com.android.internal.util.AsyncChannel $r4;
        int $i0;

        r0 := @this: android.net.wifi.p2p.WifiP2pManager;

        r1 := @parameter0: android.net.wifi.p2p.WifiP2pManager$Channel;

        r2 := @parameter1: android.net.wifi.p2p.WifiP2pWfdInfo;

        r3 := @parameter2: android.net.wifi.p2p.WifiP2pManager$ActionListener;

        staticinvoke <android.net.wifi.p2p.WifiP2pManager: void checkChannel(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        $r4 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: com.android.internal.util.AsyncChannel access$400(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        $i0 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: int access$500(android.net.wifi.p2p.WifiP2pManager$Channel,java.lang.Object)>(r1, r3);

        virtualinvoke $r4.<com.android.internal.util.AsyncChannel: void sendMessage(int,int,int,java.lang.Object)>(139323, 0, $i0, r2);

        return;
    }

    public void setWifiP2pChannels(android.net.wifi.p2p.WifiP2pManager$Channel, int, int, android.net.wifi.p2p.WifiP2pManager$ActionListener)
    {
        android.net.wifi.p2p.WifiP2pManager r0;
        android.net.wifi.p2p.WifiP2pManager$Channel r1;
        int i0, i1, $i2;
        android.net.wifi.p2p.WifiP2pManager$ActionListener r2;
        android.os.Bundle r3, $r4;
        com.android.internal.util.AsyncChannel $r5;

        r0 := @this: android.net.wifi.p2p.WifiP2pManager;

        r1 := @parameter0: android.net.wifi.p2p.WifiP2pManager$Channel;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.net.wifi.p2p.WifiP2pManager$ActionListener;

        staticinvoke <android.net.wifi.p2p.WifiP2pManager: void checkChannel(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        $r4 = new android.os.Bundle;

        specialinvoke $r4.<android.os.Bundle: void <init>()>();

        r3 = $r4;

        virtualinvoke r3.<android.os.Bundle: void putInt(java.lang.String,int)>("lc", i0);

        virtualinvoke r3.<android.os.Bundle: void putInt(java.lang.String,int)>("oc", i1);

        $r5 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: com.android.internal.util.AsyncChannel access$400(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        $i2 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: int access$500(android.net.wifi.p2p.WifiP2pManager$Channel,java.lang.Object)>(r1, r2);

        virtualinvoke $r5.<com.android.internal.util.AsyncChannel: void sendMessage(int,int,int,java.lang.Object)>(139335, 0, $i2, r3);

        return;
    }

    public void startWps(android.net.wifi.p2p.WifiP2pManager$Channel, android.net.wifi.WpsInfo, android.net.wifi.p2p.WifiP2pManager$ActionListener)
    {
        android.net.wifi.p2p.WifiP2pManager r0;
        android.net.wifi.p2p.WifiP2pManager$Channel r1;
        android.net.wifi.WpsInfo r2;
        android.net.wifi.p2p.WifiP2pManager$ActionListener r3;
        com.android.internal.util.AsyncChannel $r4;
        int $i0;

        r0 := @this: android.net.wifi.p2p.WifiP2pManager;

        r1 := @parameter0: android.net.wifi.p2p.WifiP2pManager$Channel;

        r2 := @parameter1: android.net.wifi.WpsInfo;

        r3 := @parameter2: android.net.wifi.p2p.WifiP2pManager$ActionListener;

        staticinvoke <android.net.wifi.p2p.WifiP2pManager: void checkChannel(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        $r4 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: com.android.internal.util.AsyncChannel access$400(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        $i0 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: int access$500(android.net.wifi.p2p.WifiP2pManager$Channel,java.lang.Object)>(r1, r3);

        virtualinvoke $r4.<com.android.internal.util.AsyncChannel: void sendMessage(int,int,int,java.lang.Object)>(139326, 0, $i0, r2);

        return;
    }

    public void stopPeerDiscovery(android.net.wifi.p2p.WifiP2pManager$Channel, android.net.wifi.p2p.WifiP2pManager$ActionListener)
    {
        android.net.wifi.p2p.WifiP2pManager r0;
        android.net.wifi.p2p.WifiP2pManager$Channel r1;
        android.net.wifi.p2p.WifiP2pManager$ActionListener r2;
        com.android.internal.util.AsyncChannel $r3;
        int $i0;

        r0 := @this: android.net.wifi.p2p.WifiP2pManager;

        r1 := @parameter0: android.net.wifi.p2p.WifiP2pManager$Channel;

        r2 := @parameter1: android.net.wifi.p2p.WifiP2pManager$ActionListener;

        staticinvoke <android.net.wifi.p2p.WifiP2pManager: void checkChannel(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        $r3 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: com.android.internal.util.AsyncChannel access$400(android.net.wifi.p2p.WifiP2pManager$Channel)>(r1);

        $i0 = staticinvoke <android.net.wifi.p2p.WifiP2pManager$Channel: int access$500(android.net.wifi.p2p.WifiP2pManager$Channel,java.lang.Object)>(r1, r2);

        virtualinvoke $r3.<com.android.internal.util.AsyncChannel: void sendMessage(int,int,int)>(139268, 0, $i0);

        return;
    }

    public static void <clinit>()
    {
        <android.net.wifi.p2p.WifiP2pManager: java.lang.String WIFI_P2P_THIS_DEVICE_CHANGED_ACTION> = "android.net.wifi.p2p.THIS_DEVICE_CHANGED";

        <android.net.wifi.p2p.WifiP2pManager: int WIFI_P2P_STATE_ENABLED> = 2;

        <android.net.wifi.p2p.WifiP2pManager: int WIFI_P2P_STATE_DISABLED> = 1;

        <android.net.wifi.p2p.WifiP2pManager: java.lang.String WIFI_P2P_STATE_CHANGED_ACTION> = "android.net.wifi.p2p.STATE_CHANGED";

        <android.net.wifi.p2p.WifiP2pManager: java.lang.String WIFI_P2P_PERSISTENT_GROUPS_CHANGED_ACTION> = "android.net.wifi.p2p.PERSISTENT_GROUPS_CHANGED";

        <android.net.wifi.p2p.WifiP2pManager: java.lang.String WIFI_P2P_PEERS_CHANGED_ACTION> = "android.net.wifi.p2p.PEERS_CHANGED";

        <android.net.wifi.p2p.WifiP2pManager: int WIFI_P2P_DISCOVERY_STOPPED> = 1;

        <android.net.wifi.p2p.WifiP2pManager: int WIFI_P2P_DISCOVERY_STARTED> = 2;

        <android.net.wifi.p2p.WifiP2pManager: java.lang.String WIFI_P2P_DISCOVERY_CHANGED_ACTION> = "android.net.wifi.p2p.DISCOVERY_STATE_CHANGE";

        <android.net.wifi.p2p.WifiP2pManager: java.lang.String WIFI_P2P_CONNECTION_CHANGED_ACTION> = "android.net.wifi.p2p.CONNECTION_STATE_CHANGE";

        <android.net.wifi.p2p.WifiP2pManager: java.lang.String TAG> = "WifiP2pManager";

        <android.net.wifi.p2p.WifiP2pManager: int STOP_LISTEN_SUCCEEDED> = 139334;

        <android.net.wifi.p2p.WifiP2pManager: int STOP_LISTEN_FAILED> = 139333;

        <android.net.wifi.p2p.WifiP2pManager: int STOP_LISTEN> = 139332;

        <android.net.wifi.p2p.WifiP2pManager: int STOP_DISCOVERY_SUCCEEDED> = 139270;

        <android.net.wifi.p2p.WifiP2pManager: int STOP_DISCOVERY_FAILED> = 139269;

        <android.net.wifi.p2p.WifiP2pManager: int STOP_DISCOVERY> = 139268;

        <android.net.wifi.p2p.WifiP2pManager: int START_WPS_SUCCEEDED> = 139328;

        <android.net.wifi.p2p.WifiP2pManager: int START_WPS_FAILED> = 139327;

        <android.net.wifi.p2p.WifiP2pManager: int START_WPS> = 139326;

        <android.net.wifi.p2p.WifiP2pManager: int START_LISTEN_SUCCEEDED> = 139331;

        <android.net.wifi.p2p.WifiP2pManager: int START_LISTEN_FAILED> = 139330;

        <android.net.wifi.p2p.WifiP2pManager: int START_LISTEN> = 139329;

        <android.net.wifi.p2p.WifiP2pManager: int SET_WFD_INFO_SUCCEEDED> = 139325;

        <android.net.wifi.p2p.WifiP2pManager: int SET_WFD_INFO_FAILED> = 139324;

        <android.net.wifi.p2p.WifiP2pManager: int SET_WFD_INFO> = 139323;

        <android.net.wifi.p2p.WifiP2pManager: int SET_DEVICE_NAME_SUCCEEDED> = 139317;

        <android.net.wifi.p2p.WifiP2pManager: int SET_DEVICE_NAME_FAILED> = 139316;

        <android.net.wifi.p2p.WifiP2pManager: int SET_DEVICE_NAME> = 139315;

        <android.net.wifi.p2p.WifiP2pManager: int SET_CHANNEL_SUCCEEDED> = 139337;

        <android.net.wifi.p2p.WifiP2pManager: int SET_CHANNEL_FAILED> = 139336;

        <android.net.wifi.p2p.WifiP2pManager: int SET_CHANNEL> = 139335;

        <android.net.wifi.p2p.WifiP2pManager: int RESPONSE_SERVICE> = 139314;

        <android.net.wifi.p2p.WifiP2pManager: int RESPONSE_PERSISTENT_GROUP_INFO> = 139322;

        <android.net.wifi.p2p.WifiP2pManager: int RESPONSE_PEERS> = 139284;

        <android.net.wifi.p2p.WifiP2pManager: int RESPONSE_GROUP_INFO> = 139288;

        <android.net.wifi.p2p.WifiP2pManager: int RESPONSE_CONNECTION_INFO> = 139286;

        <android.net.wifi.p2p.WifiP2pManager: int REQUEST_PERSISTENT_GROUP_INFO> = 139321;

        <android.net.wifi.p2p.WifiP2pManager: int REQUEST_PEERS> = 139283;

        <android.net.wifi.p2p.WifiP2pManager: int REQUEST_GROUP_INFO> = 139287;

        <android.net.wifi.p2p.WifiP2pManager: int REQUEST_CONNECTION_INFO> = 139285;

        <android.net.wifi.p2p.WifiP2pManager: int REMOVE_SERVICE_REQUEST_SUCCEEDED> = 139306;

        <android.net.wifi.p2p.WifiP2pManager: int REMOVE_SERVICE_REQUEST_FAILED> = 139305;

        <android.net.wifi.p2p.WifiP2pManager: int REMOVE_SERVICE_REQUEST> = 139304;

        <android.net.wifi.p2p.WifiP2pManager: int REMOVE_LOCAL_SERVICE_SUCCEEDED> = 139297;

        <android.net.wifi.p2p.WifiP2pManager: int REMOVE_LOCAL_SERVICE_FAILED> = 139296;

        <android.net.wifi.p2p.WifiP2pManager: int REMOVE_LOCAL_SERVICE> = 139295;

        <android.net.wifi.p2p.WifiP2pManager: int REMOVE_GROUP_SUCCEEDED> = 139282;

        <android.net.wifi.p2p.WifiP2pManager: int REMOVE_GROUP_FAILED> = 139281;

        <android.net.wifi.p2p.WifiP2pManager: int REMOVE_GROUP> = 139280;

        <android.net.wifi.p2p.WifiP2pManager: int PING> = 139313;

        <android.net.wifi.p2p.WifiP2pManager: int P2P_UNSUPPORTED> = 1;

        <android.net.wifi.p2p.WifiP2pManager: int NO_SERVICE_REQUESTS> = 3;

        <android.net.wifi.p2p.WifiP2pManager: int MIRACAST_SOURCE> = 1;

        <android.net.wifi.p2p.WifiP2pManager: int MIRACAST_SINK> = 2;

        <android.net.wifi.p2p.WifiP2pManager: int MIRACAST_DISABLED> = 0;

        <android.net.wifi.p2p.WifiP2pManager: java.lang.String EXTRA_WIFI_STATE> = "wifi_p2p_state";

        <android.net.wifi.p2p.WifiP2pManager: java.lang.String EXTRA_WIFI_P2P_INFO> = "wifiP2pInfo";

        <android.net.wifi.p2p.WifiP2pManager: java.lang.String EXTRA_WIFI_P2P_GROUP> = "p2pGroupInfo";

        <android.net.wifi.p2p.WifiP2pManager: java.lang.String EXTRA_WIFI_P2P_DEVICE> = "wifiP2pDevice";

        <android.net.wifi.p2p.WifiP2pManager: java.lang.String EXTRA_P2P_DEVICE_LIST> = "wifiP2pDeviceList";

        <android.net.wifi.p2p.WifiP2pManager: java.lang.String EXTRA_NETWORK_INFO> = "networkInfo";

        <android.net.wifi.p2p.WifiP2pManager: java.lang.String EXTRA_DISCOVERY_STATE> = "discoveryState";

        <android.net.wifi.p2p.WifiP2pManager: int ERROR> = 0;

        <android.net.wifi.p2p.WifiP2pManager: int DISCOVER_SERVICES_SUCCEEDED> = 139312;

        <android.net.wifi.p2p.WifiP2pManager: int DISCOVER_SERVICES_FAILED> = 139311;

        <android.net.wifi.p2p.WifiP2pManager: int DISCOVER_SERVICES> = 139310;

        <android.net.wifi.p2p.WifiP2pManager: int DISCOVER_PEERS_SUCCEEDED> = 139267;

        <android.net.wifi.p2p.WifiP2pManager: int DISCOVER_PEERS_FAILED> = 139266;

        <android.net.wifi.p2p.WifiP2pManager: int DISCOVER_PEERS> = 139265;

        <android.net.wifi.p2p.WifiP2pManager: int DELETE_PERSISTENT_GROUP_SUCCEEDED> = 139320;

        <android.net.wifi.p2p.WifiP2pManager: int DELETE_PERSISTENT_GROUP_FAILED> = 139319;

        <android.net.wifi.p2p.WifiP2pManager: int DELETE_PERSISTENT_GROUP> = 139318;

        <android.net.wifi.p2p.WifiP2pManager: int CREATE_GROUP_SUCCEEDED> = 139279;

        <android.net.wifi.p2p.WifiP2pManager: int CREATE_GROUP_FAILED> = 139278;

        <android.net.wifi.p2p.WifiP2pManager: int CREATE_GROUP> = 139277;

        <android.net.wifi.p2p.WifiP2pManager: int CONNECT_SUCCEEDED> = 139273;

        <android.net.wifi.p2p.WifiP2pManager: int CONNECT_FAILED> = 139272;

        <android.net.wifi.p2p.WifiP2pManager: int CONNECT> = 139271;

        <android.net.wifi.p2p.WifiP2pManager: int CLEAR_SERVICE_REQUESTS_SUCCEEDED> = 139309;

        <android.net.wifi.p2p.WifiP2pManager: int CLEAR_SERVICE_REQUESTS_FAILED> = 139308;

        <android.net.wifi.p2p.WifiP2pManager: int CLEAR_SERVICE_REQUESTS> = 139307;

        <android.net.wifi.p2p.WifiP2pManager: int CLEAR_LOCAL_SERVICES_SUCCEEDED> = 139300;

        <android.net.wifi.p2p.WifiP2pManager: int CLEAR_LOCAL_SERVICES_FAILED> = 139299;

        <android.net.wifi.p2p.WifiP2pManager: int CLEAR_LOCAL_SERVICES> = 139298;

        <android.net.wifi.p2p.WifiP2pManager: int CANCEL_CONNECT_SUCCEEDED> = 139276;

        <android.net.wifi.p2p.WifiP2pManager: int CANCEL_CONNECT_FAILED> = 139275;

        <android.net.wifi.p2p.WifiP2pManager: int CANCEL_CONNECT> = 139274;

        <android.net.wifi.p2p.WifiP2pManager: int BUSY> = 2;

        <android.net.wifi.p2p.WifiP2pManager: int BASE> = 139264;

        <android.net.wifi.p2p.WifiP2pManager: int ADD_SERVICE_REQUEST_SUCCEEDED> = 139303;

        <android.net.wifi.p2p.WifiP2pManager: int ADD_SERVICE_REQUEST_FAILED> = 139302;

        <android.net.wifi.p2p.WifiP2pManager: int ADD_SERVICE_REQUEST> = 139301;

        <android.net.wifi.p2p.WifiP2pManager: int ADD_LOCAL_SERVICE_SUCCEEDED> = 139294;

        <android.net.wifi.p2p.WifiP2pManager: int ADD_LOCAL_SERVICE_FAILED> = 139293;

        <android.net.wifi.p2p.WifiP2pManager: int ADD_LOCAL_SERVICE> = 139292;

        return;
    }
}
