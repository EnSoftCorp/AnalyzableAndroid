public class android.app.Dialog extends java.lang.Object implements android.content.DialogInterface, android.view.Window$Callback, android.view.KeyEvent$Callback, android.view.View$OnCreateContextMenuListener
{
    private static final int CANCEL;
    private static final java.lang.String DIALOG_HIERARCHY_TAG;
    private static final java.lang.String DIALOG_SHOWING_TAG;
    private static final int DISMISS;
    private static final int SHOW;
    private static final java.lang.String TAG;
    private com.android.internal.app.ActionBarImpl mActionBar;
    private android.view.ActionMode mActionMode;
    private java.lang.String mCancelAndDismissTaken;
    private android.os.Message mCancelMessage;
    protected boolean mCancelable;
    private boolean mCanceled;
    final android.content.Context mContext;
    private boolean mCreated;
    android.view.View mDecor;
    private final java.lang.Runnable mDismissAction;
    private android.os.Message mDismissMessage;
    private final android.os.Handler mHandler;
    private android.os.Handler mListenersHandler;
    private android.content.DialogInterface$OnKeyListener mOnKeyListener;
    private android.app.Activity mOwnerActivity;
    private android.os.Message mShowMessage;
    private boolean mShowing;
    android.view.Window mWindow;
    final android.view.WindowManager mWindowManager;

    public void <init>(android.content.Context)
    {
        android.app.Dialog r0;
        android.content.Context r1;

        r0 := @this: android.app.Dialog;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.app.Dialog: void <init>(android.content.Context,int,boolean)>(r1, 0, 1);

        return;
    }

    public void <init>(android.content.Context, int)
    {
        android.app.Dialog r0;
        android.content.Context r1;
        int i0;

        r0 := @this: android.app.Dialog;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        specialinvoke r0.<android.app.Dialog: void <init>(android.content.Context,int,boolean)>(r1, i0, 1);

        return;
    }

    void <init>(android.content.Context, int, boolean)
    {
        android.app.Dialog r0;
        android.content.Context r1, $r8;
        int i0;
        boolean z0;
        android.view.Window r2;
        android.util.TypedValue r3, $r12;
        android.os.Handler $r4;
        android.app.Dialog$1 $r5;
        java.lang.Object $r6;
        android.view.WindowManager $r7, $r9;
        android.app.Dialog$ListenersHandler $r10;
        android.view.ContextThemeWrapper $r11;
        android.content.res.Resources$Theme $r13;

        r0 := @this: android.app.Dialog;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.app.Dialog: boolean mCancelable> = 1;

        r0.<android.app.Dialog: boolean mCreated> = 0;

        r0.<android.app.Dialog: boolean mShowing> = 0;

        r0.<android.app.Dialog: boolean mCanceled> = 0;

        $r4 = new android.os.Handler;

        specialinvoke $r4.<android.os.Handler: void <init>()>();

        r0.<android.app.Dialog: android.os.Handler mHandler> = $r4;

        $r5 = new android.app.Dialog$1;

        specialinvoke $r5.<android.app.Dialog$1: void <init>(android.app.Dialog)>(r0);

        r0.<android.app.Dialog: java.lang.Runnable mDismissAction> = $r5;

        if z0 == 0 goto label3;

        if i0 != 0 goto label1;

        $r12 = new android.util.TypedValue;

        specialinvoke $r12.<android.util.TypedValue: void <init>()>();

        r3 = $r12;

        $r13 = virtualinvoke r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        virtualinvoke $r13.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(16843528, r3, 1);

        i0 = r3.<android.util.TypedValue: int resourceId>;

     label1:
        $r11 = new android.view.ContextThemeWrapper;

        specialinvoke $r11.<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>(r1, i0);

        r0.<android.app.Dialog: android.content.Context mContext> = $r11;

     label2:
        $r6 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r7 = (android.view.WindowManager) $r6;

        r0.<android.app.Dialog: android.view.WindowManager mWindowManager> = $r7;

        $r8 = r0.<android.app.Dialog: android.content.Context mContext>;

        r2 = staticinvoke <com.android.internal.policy.PolicyManager: android.view.Window makeNewWindow(android.content.Context)>($r8);

        r0.<android.app.Dialog: android.view.Window mWindow> = r2;

        virtualinvoke r2.<android.view.Window: void setCallback(android.view.Window$Callback)>(r0);

        $r9 = r0.<android.app.Dialog: android.view.WindowManager mWindowManager>;

        virtualinvoke r2.<android.view.Window: void setWindowManager(android.view.WindowManager,android.os.IBinder,java.lang.String)>($r9, null, null);

        virtualinvoke r2.<android.view.Window: void setGravity(int)>(17);

        $r10 = new android.app.Dialog$ListenersHandler;

        specialinvoke $r10.<android.app.Dialog$ListenersHandler: void <init>(android.app.Dialog)>(r0);

        r0.<android.app.Dialog: android.os.Handler mListenersHandler> = $r10;

        return;

     label3:
        r0.<android.app.Dialog: android.content.Context mContext> = r1;

        goto label2;
    }

    protected void <init>(android.content.Context, boolean, android.content.DialogInterface$OnCancelListener)
    {
        android.app.Dialog r0;
        android.content.Context r1;
        boolean z0;
        android.content.DialogInterface$OnCancelListener r2;

        r0 := @this: android.app.Dialog;

        r1 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.content.DialogInterface$OnCancelListener;

        specialinvoke r0.<android.app.Dialog: void <init>(android.content.Context)>(r1);

        r0.<android.app.Dialog: boolean mCancelable> = z0;

        virtualinvoke r0.<android.app.Dialog: void setOnCancelListener(android.content.DialogInterface$OnCancelListener)>(r2);

        return;
    }

    protected void <init>(android.content.Context, boolean, android.os.Message)
    {
        android.app.Dialog r0;
        android.content.Context r1;
        boolean z0;
        android.os.Message r2;

        r0 := @this: android.app.Dialog;

        r1 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.os.Message;

        specialinvoke r0.<android.app.Dialog: void <init>(android.content.Context)>(r1);

        r0.<android.app.Dialog: boolean mCancelable> = z0;

        r0.<android.app.Dialog: android.os.Message mCancelMessage> = r2;

        return;
    }

    private android.content.ComponentName getAssociatedActivity()
    {
        android.app.Dialog r0;
        android.app.Activity r1;
        android.content.Context r2;
        android.content.ComponentName $r3;
        boolean $z0, $z1;
        android.content.ContextWrapper $r4;

        r0 := @this: android.app.Dialog;

        r1 = r0.<android.app.Dialog: android.app.Activity mOwnerActivity>;

        r2 = virtualinvoke r0.<android.app.Dialog: android.content.Context getContext()>();

     label1:
        if r1 != null goto label5;

        if r2 == null goto label5;

        $z0 = r2 instanceof android.app.Activity;

        if $z0 == 0 goto label2;

        r1 = (android.app.Activity) r2;

        goto label1;

     label2:
        $z1 = r2 instanceof android.content.ContextWrapper;

        if $z1 == 0 goto label4;

        $r4 = (android.content.ContextWrapper) r2;

        r2 = virtualinvoke $r4.<android.content.ContextWrapper: android.content.Context getBaseContext()>();

     label3:
        goto label1;

     label4:
        r2 = null;

        goto label3;

     label5:
        if r1 != null goto label6;

        return null;

     label6:
        $r3 = virtualinvoke r1.<android.app.Activity: android.content.ComponentName getComponentName()>();

        return $r3;
    }

    private void sendDismissMessage()
    {
        android.app.Dialog r0;
        android.os.Message $r1, $r2, $r3;

        r0 := @this: android.app.Dialog;

        $r1 = r0.<android.app.Dialog: android.os.Message mDismissMessage>;

        if $r1 == null goto label1;

        $r2 = r0.<android.app.Dialog: android.os.Message mDismissMessage>;

        $r3 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Message)>($r2);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

     label1:
        return;
    }

    private void sendShowMessage()
    {
        android.app.Dialog r0;
        android.os.Message $r1, $r2, $r3;

        r0 := @this: android.app.Dialog;

        $r1 = r0.<android.app.Dialog: android.os.Message mShowMessage>;

        if $r1 == null goto label1;

        $r2 = r0.<android.app.Dialog: android.os.Message mShowMessage>;

        $r3 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Message)>($r2);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

     label1:
        return;
    }

    public void addContentView(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        android.app.Dialog r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams r2;
        android.view.Window $r3;

        r0 := @this: android.app.Dialog;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        $r3 = r0.<android.app.Dialog: android.view.Window mWindow>;

        virtualinvoke $r3.<android.view.Window: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)>(r1, r2);

        return;
    }

    public void cancel()
    {
        android.app.Dialog r0;
        boolean $z0;
        android.os.Message $r1, $r2, $r3;

        r0 := @this: android.app.Dialog;

        $z0 = r0.<android.app.Dialog: boolean mCanceled>;

        if $z0 != 0 goto label1;

        $r1 = r0.<android.app.Dialog: android.os.Message mCancelMessage>;

        if $r1 == null goto label1;

        r0.<android.app.Dialog: boolean mCanceled> = 1;

        $r2 = r0.<android.app.Dialog: android.os.Message mCancelMessage>;

        $r3 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Message)>($r2);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

     label1:
        virtualinvoke r0.<android.app.Dialog: void dismiss()>();

        return;
    }

    public void closeOptionsMenu()
    {
        android.app.Dialog r0;
        android.view.Window $r1;

        r0 := @this: android.app.Dialog;

        $r1 = r0.<android.app.Dialog: android.view.Window mWindow>;

        virtualinvoke $r1.<android.view.Window: void closePanel(int)>(0);

        return;
    }

    public void dismiss()
    {
        android.app.Dialog r0;
        android.os.Looper $r1, $r3;
        android.os.Handler $r2, $r5;
        java.lang.Runnable $r4;

        r0 := @this: android.app.Dialog;

        $r1 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r2 = r0.<android.app.Dialog: android.os.Handler mHandler>;

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Looper getLooper()>();

        if $r1 != $r3 goto label1;

        virtualinvoke r0.<android.app.Dialog: void dismissDialog()>();

        return;

     label1:
        $r5 = r0.<android.app.Dialog: android.os.Handler mHandler>;

        $r4 = r0.<android.app.Dialog: java.lang.Runnable mDismissAction>;

        virtualinvoke $r5.<android.os.Handler: boolean post(java.lang.Runnable)>($r4);

        return;
    }

    void dismissDialog()
    {
        android.app.Dialog r0;
        java.lang.Throwable r1, $r9;
        android.view.View $r2, $r4;
        boolean $z0, $z1;
        android.view.Window $r3, $r7, $r11;
        android.view.WindowManager $r5;
        android.view.ActionMode $r6, $r8, $r10, $r12;

        r0 := @this: android.app.Dialog;

        $r2 = r0.<android.app.Dialog: android.view.View mDecor>;

        if $r2 == null goto label1;

        $z0 = r0.<android.app.Dialog: boolean mShowing>;

        if $z0 != 0 goto label2;

     label1:
        return;

     label2:
        $r3 = r0.<android.app.Dialog: android.view.Window mWindow>;

        $z1 = virtualinvoke $r3.<android.view.Window: boolean isDestroyed()>();

        if $z1 == 0 goto label3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Dialog", "Tried to dismissDialog() but the Dialog\'s window was already destroyed!");

        return;

     label3:
        $r5 = r0.<android.app.Dialog: android.view.WindowManager mWindowManager>;

        $r4 = r0.<android.app.Dialog: android.view.View mDecor>;

        interfaceinvoke $r5.<android.view.WindowManager: void removeViewImmediate(android.view.View)>($r4);

     label4:
        $r6 = r0.<android.app.Dialog: android.view.ActionMode mActionMode>;

        if $r6 == null goto label5;

        $r8 = r0.<android.app.Dialog: android.view.ActionMode mActionMode>;

        virtualinvoke $r8.<android.view.ActionMode: void finish()>();

     label5:
        r0.<android.app.Dialog: android.view.View mDecor> = null;

        $r7 = r0.<android.app.Dialog: android.view.Window mWindow>;

        virtualinvoke $r7.<android.view.Window: void closeAllPanels()>();

        virtualinvoke r0.<android.app.Dialog: void onStop()>();

        r0.<android.app.Dialog: boolean mShowing> = 0;

        specialinvoke r0.<android.app.Dialog: void sendDismissMessage()>();

        return;

     label6:
        $r9 := @caughtexception;

        r1 = $r9;

        $r10 = r0.<android.app.Dialog: android.view.ActionMode mActionMode>;

        if $r10 == null goto label7;

        $r12 = r0.<android.app.Dialog: android.view.ActionMode mActionMode>;

        virtualinvoke $r12.<android.view.ActionMode: void finish()>();

     label7:
        r0.<android.app.Dialog: android.view.View mDecor> = null;

        $r11 = r0.<android.app.Dialog: android.view.Window mWindow>;

        virtualinvoke $r11.<android.view.Window: void closeAllPanels()>();

        virtualinvoke r0.<android.app.Dialog: void onStop()>();

        r0.<android.app.Dialog: boolean mShowing> = 0;

        specialinvoke r0.<android.app.Dialog: void sendDismissMessage()>();

        throw r1;

        catch java.lang.Throwable from label3 to label4 with label6;
    }

    public boolean dispatchGenericMotionEvent(android.view.MotionEvent)
    {
        android.app.Dialog r0;
        android.view.MotionEvent r1;
        android.view.Window $r2;
        boolean $z0, $z1;

        r0 := @this: android.app.Dialog;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<android.app.Dialog: android.view.Window mWindow>;

        $z0 = virtualinvoke $r2.<android.view.Window: boolean superDispatchGenericMotionEvent(android.view.MotionEvent)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = virtualinvoke r0.<android.app.Dialog: boolean onGenericMotionEvent(android.view.MotionEvent)>(r1);

        return $z1;
    }

    public boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        android.app.Dialog r0;
        android.view.KeyEvent r1;
        android.view.KeyEvent$DispatcherState r2;
        android.content.DialogInterface$OnKeyListener $r3, $r7;
        android.view.Window $r4;
        boolean $z0, $z1, $z2;
        android.view.View $r5, $r6;
        int $i0;

        r0 := @this: android.app.Dialog;

        r1 := @parameter0: android.view.KeyEvent;

        $r3 = r0.<android.app.Dialog: android.content.DialogInterface$OnKeyListener mOnKeyListener>;

        if $r3 == null goto label2;

        $r7 = r0.<android.app.Dialog: android.content.DialogInterface$OnKeyListener mOnKeyListener>;

        $i0 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        $z2 = interfaceinvoke $r7.<android.content.DialogInterface$OnKeyListener: boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent)>(r0, $i0, r1);

        if $z2 == 0 goto label2;

     label1:
        return 1;

     label2:
        $r4 = r0.<android.app.Dialog: android.view.Window mWindow>;

        $z0 = virtualinvoke $r4.<android.view.Window: boolean superDispatchKeyEvent(android.view.KeyEvent)>(r1);

        if $z0 != 0 goto label1;

        $r5 = r0.<android.app.Dialog: android.view.View mDecor>;

        if $r5 == null goto label4;

        $r6 = r0.<android.app.Dialog: android.view.View mDecor>;

        r2 = virtualinvoke $r6.<android.view.View: android.view.KeyEvent$DispatcherState getKeyDispatcherState()>();

     label3:
        $z1 = virtualinvoke r1.<android.view.KeyEvent: boolean dispatch(android.view.KeyEvent$Callback,android.view.KeyEvent$DispatcherState,java.lang.Object)>(r0, r2, r0);

        return $z1;

     label4:
        r2 = null;

        goto label3;
    }

    public boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
    {
        android.app.Dialog r0;
        android.view.KeyEvent r1;
        android.view.Window $r2;
        boolean $z0, $z1;
        int $i0;

        r0 := @this: android.app.Dialog;

        r1 := @parameter0: android.view.KeyEvent;

        $r2 = r0.<android.app.Dialog: android.view.Window mWindow>;

        $z0 = virtualinvoke $r2.<android.view.Window: boolean superDispatchKeyShortcutEvent(android.view.KeyEvent)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $i0 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        $z1 = virtualinvoke r0.<android.app.Dialog: boolean onKeyShortcut(int,android.view.KeyEvent)>($i0, r1);

        return $z1;
    }

    void dispatchOnCreate(android.os.Bundle)
    {
        android.app.Dialog r0;
        android.os.Bundle r1;
        boolean $z0;

        r0 := @this: android.app.Dialog;

        r1 := @parameter0: android.os.Bundle;

        $z0 = r0.<android.app.Dialog: boolean mCreated>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<android.app.Dialog: void onCreate(android.os.Bundle)>(r1);

        r0.<android.app.Dialog: boolean mCreated> = 1;

     label1:
        return;
    }

    public boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.app.Dialog r0;
        android.view.accessibility.AccessibilityEvent r1;
        android.view.WindowManager$LayoutParams r2;
        boolean z0;
        java.lang.Class $r3;
        java.lang.String $r4, $r6;
        android.content.Context $r5;
        android.view.Window $r7;
        int $i0, $i1;

        r0 := @this: android.app.Dialog;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r4);

        $r5 = r0.<android.app.Dialog: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setPackageName(java.lang.CharSequence)>($r6);

        $r7 = virtualinvoke r0.<android.app.Dialog: android.view.Window getWindow()>();

        r2 = virtualinvoke $r7.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        $i0 = r2.<android.view.ViewGroup$LayoutParams: int width>;

        if $i0 != -1 goto label2;

        $i1 = r2.<android.view.ViewGroup$LayoutParams: int height>;

        if $i1 != -1 goto label2;

        z0 = 1;

     label1:
        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setFullScreen(boolean)>(z0);

        return 0;

     label2:
        z0 = 0;

        goto label1;
    }

    public boolean dispatchTouchEvent(android.view.MotionEvent)
    {
        android.app.Dialog r0;
        android.view.MotionEvent r1;
        android.view.Window $r2;
        boolean $z0, $z1;

        r0 := @this: android.app.Dialog;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<android.app.Dialog: android.view.Window mWindow>;

        $z0 = virtualinvoke $r2.<android.view.Window: boolean superDispatchTouchEvent(android.view.MotionEvent)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = virtualinvoke r0.<android.app.Dialog: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        return $z1;
    }

    public boolean dispatchTrackballEvent(android.view.MotionEvent)
    {
        android.app.Dialog r0;
        android.view.MotionEvent r1;
        android.view.Window $r2;
        boolean $z0, $z1;

        r0 := @this: android.app.Dialog;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<android.app.Dialog: android.view.Window mWindow>;

        $z0 = virtualinvoke $r2.<android.view.Window: boolean superDispatchTrackballEvent(android.view.MotionEvent)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = virtualinvoke r0.<android.app.Dialog: boolean onTrackballEvent(android.view.MotionEvent)>(r1);

        return $z1;
    }

    public android.view.View findViewById(int)
    {
        android.app.Dialog r0;
        int i0;
        android.view.Window $r1;
        android.view.View $r2;

        r0 := @this: android.app.Dialog;

        i0 := @parameter0: int;

        $r1 = r0.<android.app.Dialog: android.view.Window mWindow>;

        $r2 = virtualinvoke $r1.<android.view.Window: android.view.View findViewById(int)>(i0);

        return $r2;
    }

    public android.app.ActionBar getActionBar()
    {
        android.app.Dialog r0;
        com.android.internal.app.ActionBarImpl $r1;
        android.app.ActionBar r2;

        r0 := @this: android.app.Dialog;

        $r1 = r0.<android.app.Dialog: com.android.internal.app.ActionBarImpl mActionBar>;

        r2 = (android.app.ActionBar) $r1;

        return r2;
    }

    public final android.content.Context getContext()
    {
        android.app.Dialog r0;
        android.content.Context $r1;

        r0 := @this: android.app.Dialog;

        $r1 = r0.<android.app.Dialog: android.content.Context mContext>;

        return $r1;
    }

    public android.view.View getCurrentFocus()
    {
        android.app.Dialog r0;
        android.view.Window $r1, $r2;
        android.view.View $r3;

        r0 := @this: android.app.Dialog;

        $r1 = r0.<android.app.Dialog: android.view.Window mWindow>;

        if $r1 == null goto label1;

        $r2 = r0.<android.app.Dialog: android.view.Window mWindow>;

        $r3 = virtualinvoke $r2.<android.view.Window: android.view.View getCurrentFocus()>();

        return $r3;

     label1:
        return null;
    }

    public android.view.LayoutInflater getLayoutInflater()
    {
        android.app.Dialog r0;
        android.view.Window $r1;
        android.view.LayoutInflater $r2;

        r0 := @this: android.app.Dialog;

        $r1 = virtualinvoke r0.<android.app.Dialog: android.view.Window getWindow()>();

        $r2 = virtualinvoke $r1.<android.view.Window: android.view.LayoutInflater getLayoutInflater()>();

        return $r2;
    }

    public final android.app.Activity getOwnerActivity()
    {
        android.app.Dialog r0;
        android.app.Activity $r1;

        r0 := @this: android.app.Dialog;

        $r1 = r0.<android.app.Dialog: android.app.Activity mOwnerActivity>;

        return $r1;
    }

    public final int getVolumeControlStream()
    {
        android.app.Dialog r0;
        android.view.Window $r1;
        int $i0;

        r0 := @this: android.app.Dialog;

        $r1 = virtualinvoke r0.<android.app.Dialog: android.view.Window getWindow()>();

        $i0 = virtualinvoke $r1.<android.view.Window: int getVolumeControlStream()>();

        return $i0;
    }

    public android.view.Window getWindow()
    {
        android.app.Dialog r0;
        android.view.Window $r1;

        r0 := @this: android.app.Dialog;

        $r1 = r0.<android.app.Dialog: android.view.Window mWindow>;

        return $r1;
    }

    public void hide()
    {
        android.app.Dialog r0;
        android.view.View $r1, $r2;

        r0 := @this: android.app.Dialog;

        $r1 = r0.<android.app.Dialog: android.view.View mDecor>;

        if $r1 == null goto label1;

        $r2 = r0.<android.app.Dialog: android.view.View mDecor>;

        virtualinvoke $r2.<android.view.View: void setVisibility(int)>(8);

     label1:
        return;
    }

    public void invalidateOptionsMenu()
    {
        android.app.Dialog r0;
        android.view.Window $r1;

        r0 := @this: android.app.Dialog;

        $r1 = r0.<android.app.Dialog: android.view.Window mWindow>;

        virtualinvoke $r1.<android.view.Window: void invalidatePanelMenu(int)>(0);

        return;
    }

    public boolean isShowing()
    {
        android.app.Dialog r0;
        boolean $z0;

        r0 := @this: android.app.Dialog;

        $z0 = r0.<android.app.Dialog: boolean mShowing>;

        return $z0;
    }

    public void onActionModeFinished(android.view.ActionMode)
    {
        android.app.Dialog r0;
        android.view.ActionMode r1, $r2;

        r0 := @this: android.app.Dialog;

        r1 := @parameter0: android.view.ActionMode;

        $r2 = r0.<android.app.Dialog: android.view.ActionMode mActionMode>;

        if r1 != $r2 goto label1;

        r0.<android.app.Dialog: android.view.ActionMode mActionMode> = null;

     label1:
        return;
    }

    public void onActionModeStarted(android.view.ActionMode)
    {
        android.app.Dialog r0;
        android.view.ActionMode r1;

        r0 := @this: android.app.Dialog;

        r1 := @parameter0: android.view.ActionMode;

        r0.<android.app.Dialog: android.view.ActionMode mActionMode> = r1;

        return;
    }

    public void onAttachedToWindow()
    {
        android.app.Dialog r0;

        r0 := @this: android.app.Dialog;

        return;
    }

    public void onBackPressed()
    {
        android.app.Dialog r0;
        boolean $z0;

        r0 := @this: android.app.Dialog;

        $z0 = r0.<android.app.Dialog: boolean mCancelable>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.app.Dialog: void cancel()>();

     label1:
        return;
    }

    public void onContentChanged()
    {
        android.app.Dialog r0;

        r0 := @this: android.app.Dialog;

        return;
    }

    public boolean onContextItemSelected(android.view.MenuItem)
    {
        android.app.Dialog r0;
        android.view.MenuItem r1;

        r0 := @this: android.app.Dialog;

        r1 := @parameter0: android.view.MenuItem;

        return 0;
    }

    public void onContextMenuClosed(android.view.Menu)
    {
        android.app.Dialog r0;
        android.view.Menu r1;

        r0 := @this: android.app.Dialog;

        r1 := @parameter0: android.view.Menu;

        return;
    }

    protected void onCreate(android.os.Bundle)
    {
        android.app.Dialog r0;
        android.os.Bundle r1;

        r0 := @this: android.app.Dialog;

        r1 := @parameter0: android.os.Bundle;

        return;
    }

    public void onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu$ContextMenuInfo)
    {
        android.app.Dialog r0;
        android.view.ContextMenu r1;
        android.view.View r2;
        android.view.ContextMenu$ContextMenuInfo r3;

        r0 := @this: android.app.Dialog;

        r1 := @parameter0: android.view.ContextMenu;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.view.ContextMenu$ContextMenuInfo;

        return;
    }

    public boolean onCreateOptionsMenu(android.view.Menu)
    {
        android.app.Dialog r0;
        android.view.Menu r1;

        r0 := @this: android.app.Dialog;

        r1 := @parameter0: android.view.Menu;

        return 1;
    }

    public boolean onCreatePanelMenu(int, android.view.Menu)
    {
        android.app.Dialog r0;
        int i0;
        android.view.Menu r1;
        boolean $z0;

        r0 := @this: android.app.Dialog;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.Menu;

        if i0 != 0 goto label1;

        $z0 = virtualinvoke r0.<android.app.Dialog: boolean onCreateOptionsMenu(android.view.Menu)>(r1);

        return $z0;

     label1:
        return 0;
    }

    public android.view.View onCreatePanelView(int)
    {
        android.app.Dialog r0;
        int i0;

        r0 := @this: android.app.Dialog;

        i0 := @parameter0: int;

        return null;
    }

    public void onDetachedFromWindow()
    {
        android.app.Dialog r0;

        r0 := @this: android.app.Dialog;

        return;
    }

    public boolean onGenericMotionEvent(android.view.MotionEvent)
    {
        android.app.Dialog r0;
        android.view.MotionEvent r1;

        r0 := @this: android.app.Dialog;

        r1 := @parameter0: android.view.MotionEvent;

        return 0;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        android.app.Dialog r0;
        int i0;
        android.view.KeyEvent r1;

        r0 := @this: android.app.Dialog;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        if i0 != 4 goto label1;

        virtualinvoke r1.<android.view.KeyEvent: void startTracking()>();

        return 1;

     label1:
        return 0;
    }

    public boolean onKeyLongPress(int, android.view.KeyEvent)
    {
        android.app.Dialog r0;
        int i0;
        android.view.KeyEvent r1;

        r0 := @this: android.app.Dialog;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        return 0;
    }

    public boolean onKeyMultiple(int, int, android.view.KeyEvent)
    {
        android.app.Dialog r0;
        int i0, i1;
        android.view.KeyEvent r1;

        r0 := @this: android.app.Dialog;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.view.KeyEvent;

        return 0;
    }

    public boolean onKeyShortcut(int, android.view.KeyEvent)
    {
        android.app.Dialog r0;
        int i0;
        android.view.KeyEvent r1;

        r0 := @this: android.app.Dialog;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        return 0;
    }

    public boolean onKeyUp(int, android.view.KeyEvent)
    {
        android.app.Dialog r0;
        int i0;
        android.view.KeyEvent r1;
        boolean $z0, $z1;

        r0 := @this: android.app.Dialog;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        if i0 != 4 goto label1;

        $z0 = virtualinvoke r1.<android.view.KeyEvent: boolean isTracking()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r1.<android.view.KeyEvent: boolean isCanceled()>();

        if $z1 != 0 goto label1;

        virtualinvoke r0.<android.app.Dialog: void onBackPressed()>();

        return 1;

     label1:
        return 0;
    }

    public boolean onMenuItemSelected(int, android.view.MenuItem)
    {
        android.app.Dialog r0;
        int i0;
        android.view.MenuItem r1;

        r0 := @this: android.app.Dialog;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.MenuItem;

        return 0;
    }

    public boolean onMenuOpened(int, android.view.Menu)
    {
        android.app.Dialog r0;
        int i0;
        android.view.Menu r1;
        com.android.internal.app.ActionBarImpl $r2;

        r0 := @this: android.app.Dialog;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.Menu;

        if i0 != 8 goto label1;

        $r2 = r0.<android.app.Dialog: com.android.internal.app.ActionBarImpl mActionBar>;

        virtualinvoke $r2.<com.android.internal.app.ActionBarImpl: void dispatchMenuVisibilityChanged(boolean)>(1);

     label1:
        return 1;
    }

    public boolean onOptionsItemSelected(android.view.MenuItem)
    {
        android.app.Dialog r0;
        android.view.MenuItem r1;

        r0 := @this: android.app.Dialog;

        r1 := @parameter0: android.view.MenuItem;

        return 0;
    }

    public void onOptionsMenuClosed(android.view.Menu)
    {
        android.app.Dialog r0;
        android.view.Menu r1;

        r0 := @this: android.app.Dialog;

        r1 := @parameter0: android.view.Menu;

        return;
    }

    public void onPanelClosed(int, android.view.Menu)
    {
        android.app.Dialog r0;
        int i0;
        android.view.Menu r1;
        com.android.internal.app.ActionBarImpl $r2;

        r0 := @this: android.app.Dialog;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.Menu;

        if i0 != 8 goto label1;

        $r2 = r0.<android.app.Dialog: com.android.internal.app.ActionBarImpl mActionBar>;

        virtualinvoke $r2.<com.android.internal.app.ActionBarImpl: void dispatchMenuVisibilityChanged(boolean)>(0);

     label1:
        return;
    }

    public boolean onPrepareOptionsMenu(android.view.Menu)
    {
        android.app.Dialog r0;
        android.view.Menu r1;

        r0 := @this: android.app.Dialog;

        r1 := @parameter0: android.view.Menu;

        return 1;
    }

    public boolean onPreparePanel(int, android.view.View, android.view.Menu)
    {
        android.app.Dialog r0;
        int i0;
        android.view.View r1;
        android.view.Menu r2;
        boolean $z0, $z1;

        r0 := @this: android.app.Dialog;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.View;

        r2 := @parameter2: android.view.Menu;

        if i0 != 0 goto label1;

        if r2 == null goto label1;

        $z0 = virtualinvoke r0.<android.app.Dialog: boolean onPrepareOptionsMenu(android.view.Menu)>(r2);

        if $z0 == 0 goto label2;

        $z1 = interfaceinvoke r2.<android.view.Menu: boolean hasVisibleItems()>();

        if $z1 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public void onRestoreInstanceState(android.os.Bundle)
    {
        android.app.Dialog r0;
        android.os.Bundle r1, r2;
        android.view.Window $r3;
        boolean $z0;

        r0 := @this: android.app.Dialog;

        r1 := @parameter0: android.os.Bundle;

        r2 = virtualinvoke r1.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>("android:dialogHierarchy");

        if r2 != null goto label2;

     label1:
        return;

     label2:
        virtualinvoke r0.<android.app.Dialog: void dispatchOnCreate(android.os.Bundle)>(r1);

        $r3 = r0.<android.app.Dialog: android.view.Window mWindow>;

        virtualinvoke $r3.<android.view.Window: void restoreHierarchyState(android.os.Bundle)>(r2);

        $z0 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("android:dialogShowing");

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.app.Dialog: void show()>();

        return;
    }

    public android.os.Bundle onSaveInstanceState()
    {
        android.app.Dialog r0;
        android.os.Bundle r1, $r2, $r4;
        boolean $z0, $z1;
        android.view.Window $r3;

        r0 := @this: android.app.Dialog;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        r1 = $r2;

        $z0 = r0.<android.app.Dialog: boolean mShowing>;

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("android:dialogShowing", $z0);

        $z1 = r0.<android.app.Dialog: boolean mCreated>;

        if $z1 == 0 goto label1;

        $r3 = r0.<android.app.Dialog: android.view.Window mWindow>;

        $r4 = virtualinvoke $r3.<android.view.Window: android.os.Bundle saveHierarchyState()>();

        virtualinvoke r1.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>("android:dialogHierarchy", $r4);

     label1:
        return r1;
    }

    public boolean onSearchRequested()
    {
        android.app.Dialog r0;
        android.app.SearchManager r1;
        android.content.ComponentName r2;
        boolean z0;
        android.app.SearchableInfo r3;
        android.content.Context $r4;
        java.lang.Object $r5;

        r0 := @this: android.app.Dialog;

        $r4 = r0.<android.app.Dialog: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("search");

        r1 = (android.app.SearchManager) $r5;

        r2 = specialinvoke r0.<android.app.Dialog: android.content.ComponentName getAssociatedActivity()>();

        z0 = 0;

        if r2 == null goto label1;

        r3 = virtualinvoke r1.<android.app.SearchManager: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)>(r2);

        z0 = 0;

        if r3 == null goto label1;

        virtualinvoke r1.<android.app.SearchManager: void startSearch(java.lang.String,boolean,android.content.ComponentName,android.os.Bundle,boolean)>(null, 0, r2, null, 0);

        virtualinvoke r0.<android.app.Dialog: void dismiss()>();

        z0 = 1;

     label1:
        return z0;
    }

    protected void onStart()
    {
        android.app.Dialog r0;
        com.android.internal.app.ActionBarImpl $r1, $r2;

        r0 := @this: android.app.Dialog;

        $r1 = r0.<android.app.Dialog: com.android.internal.app.ActionBarImpl mActionBar>;

        if $r1 == null goto label1;

        $r2 = r0.<android.app.Dialog: com.android.internal.app.ActionBarImpl mActionBar>;

        virtualinvoke $r2.<com.android.internal.app.ActionBarImpl: void setShowHideAnimationEnabled(boolean)>(1);

     label1:
        return;
    }

    protected void onStop()
    {
        android.app.Dialog r0;
        com.android.internal.app.ActionBarImpl $r1, $r2;

        r0 := @this: android.app.Dialog;

        $r1 = r0.<android.app.Dialog: com.android.internal.app.ActionBarImpl mActionBar>;

        if $r1 == null goto label1;

        $r2 = r0.<android.app.Dialog: com.android.internal.app.ActionBarImpl mActionBar>;

        virtualinvoke $r2.<com.android.internal.app.ActionBarImpl: void setShowHideAnimationEnabled(boolean)>(0);

     label1:
        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.app.Dialog r0;
        android.view.MotionEvent r1;
        boolean $z0, $z1, $z2;
        android.content.Context $r2;
        android.view.Window $r3;

        r0 := @this: android.app.Dialog;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = r0.<android.app.Dialog: boolean mCancelable>;

        if $z0 == 0 goto label1;

        $z1 = r0.<android.app.Dialog: boolean mShowing>;

        if $z1 == 0 goto label1;

        $r3 = r0.<android.app.Dialog: android.view.Window mWindow>;

        $r2 = r0.<android.app.Dialog: android.content.Context mContext>;

        $z2 = virtualinvoke $r3.<android.view.Window: boolean shouldCloseOnTouch(android.content.Context,android.view.MotionEvent)>($r2, r1);

        if $z2 == 0 goto label1;

        virtualinvoke r0.<android.app.Dialog: void cancel()>();

        return 1;

     label1:
        return 0;
    }

    public boolean onTrackballEvent(android.view.MotionEvent)
    {
        android.app.Dialog r0;
        android.view.MotionEvent r1;

        r0 := @this: android.app.Dialog;

        r1 := @parameter0: android.view.MotionEvent;

        return 0;
    }

    public void onWindowAttributesChanged(android.view.WindowManager$LayoutParams)
    {
        android.app.Dialog r0;
        android.view.WindowManager$LayoutParams r1;
        android.view.View $r2, $r3;
        android.view.WindowManager $r4;

        r0 := @this: android.app.Dialog;

        r1 := @parameter0: android.view.WindowManager$LayoutParams;

        $r2 = r0.<android.app.Dialog: android.view.View mDecor>;

        if $r2 == null goto label1;

        $r4 = r0.<android.app.Dialog: android.view.WindowManager mWindowManager>;

        $r3 = r0.<android.app.Dialog: android.view.View mDecor>;

        interfaceinvoke $r4.<android.view.WindowManager: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>($r3, r1);

     label1:
        return;
    }

    public void onWindowFocusChanged(boolean)
    {
        android.app.Dialog r0;
        boolean z0;

        r0 := @this: android.app.Dialog;

        z0 := @parameter0: boolean;

        return;
    }

    public android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback)
    {
        android.app.Dialog r0;
        android.view.ActionMode$Callback r1;
        com.android.internal.app.ActionBarImpl $r2, $r3;
        android.view.ActionMode $r4;

        r0 := @this: android.app.Dialog;

        r1 := @parameter0: android.view.ActionMode$Callback;

        $r2 = r0.<android.app.Dialog: com.android.internal.app.ActionBarImpl mActionBar>;

        if $r2 == null goto label1;

        $r3 = r0.<android.app.Dialog: com.android.internal.app.ActionBarImpl mActionBar>;

        $r4 = virtualinvoke $r3.<com.android.internal.app.ActionBarImpl: android.view.ActionMode startActionMode(android.view.ActionMode$Callback)>(r1);

        return $r4;

     label1:
        return null;
    }

    public void openContextMenu(android.view.View)
    {
        android.app.Dialog r0;
        android.view.View r1;

        r0 := @this: android.app.Dialog;

        r1 := @parameter0: android.view.View;

        virtualinvoke r1.<android.view.View: boolean showContextMenu()>();

        return;
    }

    public void openOptionsMenu()
    {
        android.app.Dialog r0;
        android.view.Window $r1;

        r0 := @this: android.app.Dialog;

        $r1 = r0.<android.app.Dialog: android.view.Window mWindow>;

        virtualinvoke $r1.<android.view.Window: void openPanel(int,android.view.KeyEvent)>(0, null);

        return;
    }

    public void registerForContextMenu(android.view.View)
    {
        android.app.Dialog r0;
        android.view.View r1;

        r0 := @this: android.app.Dialog;

        r1 := @parameter0: android.view.View;

        virtualinvoke r1.<android.view.View: void setOnCreateContextMenuListener(android.view.View$OnCreateContextMenuListener)>(r0);

        return;
    }

    public final boolean requestWindowFeature(int)
    {
        android.app.Dialog r0;
        int i0;
        android.view.Window $r1;
        boolean $z0;

        r0 := @this: android.app.Dialog;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.app.Dialog: android.view.Window getWindow()>();

        $z0 = virtualinvoke $r1.<android.view.Window: boolean requestFeature(int)>(i0);

        return $z0;
    }

    public void setCancelMessage(android.os.Message)
    {
        android.app.Dialog r0;
        android.os.Message r1;

        r0 := @this: android.app.Dialog;

        r1 := @parameter0: android.os.Message;

        r0.<android.app.Dialog: android.os.Message mCancelMessage> = r1;

        return;
    }

    public void setCancelable(boolean)
    {
        android.app.Dialog r0;
        boolean z0;

        r0 := @this: android.app.Dialog;

        z0 := @parameter0: boolean;

        r0.<android.app.Dialog: boolean mCancelable> = z0;

        return;
    }

    public void setCanceledOnTouchOutside(boolean)
    {
        android.app.Dialog r0;
        boolean z0, $z1;
        android.view.Window $r1;

        r0 := @this: android.app.Dialog;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $z1 = r0.<android.app.Dialog: boolean mCancelable>;

        if $z1 != 0 goto label1;

        r0.<android.app.Dialog: boolean mCancelable> = 1;

     label1:
        $r1 = r0.<android.app.Dialog: android.view.Window mWindow>;

        virtualinvoke $r1.<android.view.Window: void setCloseOnTouchOutside(boolean)>(z0);

        return;
    }

    public void setContentView(int)
    {
        android.app.Dialog r0;
        int i0;
        android.view.Window $r1;

        r0 := @this: android.app.Dialog;

        i0 := @parameter0: int;

        $r1 = r0.<android.app.Dialog: android.view.Window mWindow>;

        virtualinvoke $r1.<android.view.Window: void setContentView(int)>(i0);

        return;
    }

    public void setContentView(android.view.View)
    {
        android.app.Dialog r0;
        android.view.View r1;
        android.view.Window $r2;

        r0 := @this: android.app.Dialog;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<android.app.Dialog: android.view.Window mWindow>;

        virtualinvoke $r2.<android.view.Window: void setContentView(android.view.View)>(r1);

        return;
    }

    public void setContentView(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        android.app.Dialog r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams r2;
        android.view.Window $r3;

        r0 := @this: android.app.Dialog;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        $r3 = r0.<android.app.Dialog: android.view.Window mWindow>;

        virtualinvoke $r3.<android.view.Window: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)>(r1, r2);

        return;
    }

    public void setDismissMessage(android.os.Message)
    {
        android.app.Dialog r0;
        android.os.Message r1;

        r0 := @this: android.app.Dialog;

        r1 := @parameter0: android.os.Message;

        r0.<android.app.Dialog: android.os.Message mDismissMessage> = r1;

        return;
    }

    public final void setFeatureDrawable(int, android.graphics.drawable.Drawable)
    {
        android.app.Dialog r0;
        int i0;
        android.graphics.drawable.Drawable r1;
        android.view.Window $r2;

        r0 := @this: android.app.Dialog;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.drawable.Drawable;

        $r2 = virtualinvoke r0.<android.app.Dialog: android.view.Window getWindow()>();

        virtualinvoke $r2.<android.view.Window: void setFeatureDrawable(int,android.graphics.drawable.Drawable)>(i0, r1);

        return;
    }

    public final void setFeatureDrawableAlpha(int, int)
    {
        android.app.Dialog r0;
        int i0, i1;
        android.view.Window $r1;

        r0 := @this: android.app.Dialog;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<android.app.Dialog: android.view.Window getWindow()>();

        virtualinvoke $r1.<android.view.Window: void setFeatureDrawableAlpha(int,int)>(i0, i1);

        return;
    }

    public final void setFeatureDrawableResource(int, int)
    {
        android.app.Dialog r0;
        int i0, i1;
        android.view.Window $r1;

        r0 := @this: android.app.Dialog;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<android.app.Dialog: android.view.Window getWindow()>();

        virtualinvoke $r1.<android.view.Window: void setFeatureDrawableResource(int,int)>(i0, i1);

        return;
    }

    public final void setFeatureDrawableUri(int, android.net.Uri)
    {
        android.app.Dialog r0;
        int i0;
        android.net.Uri r1;
        android.view.Window $r2;

        r0 := @this: android.app.Dialog;

        i0 := @parameter0: int;

        r1 := @parameter1: android.net.Uri;

        $r2 = virtualinvoke r0.<android.app.Dialog: android.view.Window getWindow()>();

        virtualinvoke $r2.<android.view.Window: void setFeatureDrawableUri(int,android.net.Uri)>(i0, r1);

        return;
    }

    public void setOnCancelListener(android.content.DialogInterface$OnCancelListener)
    {
        android.app.Dialog r0;
        android.content.DialogInterface$OnCancelListener r1;
        java.lang.String $r2, $r8, $r11;
        android.os.Handler $r3;
        android.os.Message $r4;
        java.lang.IllegalStateException $r5;
        java.lang.StringBuilder $r6, $r7, $r9, $r10;

        r0 := @this: android.app.Dialog;

        r1 := @parameter0: android.content.DialogInterface$OnCancelListener;

        $r2 = r0.<android.app.Dialog: java.lang.String mCancelAndDismissTaken>;

        if $r2 == null goto label1;

        $r5 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OnCancelListener is already taken by ");

        $r8 = r0.<android.app.Dialog: java.lang.String mCancelAndDismissTaken>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and can not be replaced.");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r5;

     label1:
        if r1 == null goto label2;

        $r3 = r0.<android.app.Dialog: android.os.Handler mListenersHandler>;

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(68, r1);

        r0.<android.app.Dialog: android.os.Message mCancelMessage> = $r4;

        return;

     label2:
        r0.<android.app.Dialog: android.os.Message mCancelMessage> = null;

        return;
    }

    public void setOnDismissListener(android.content.DialogInterface$OnDismissListener)
    {
        android.app.Dialog r0;
        android.content.DialogInterface$OnDismissListener r1;
        java.lang.String $r2, $r8, $r11;
        android.os.Handler $r3;
        android.os.Message $r4;
        java.lang.IllegalStateException $r5;
        java.lang.StringBuilder $r6, $r7, $r9, $r10;

        r0 := @this: android.app.Dialog;

        r1 := @parameter0: android.content.DialogInterface$OnDismissListener;

        $r2 = r0.<android.app.Dialog: java.lang.String mCancelAndDismissTaken>;

        if $r2 == null goto label1;

        $r5 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OnDismissListener is already taken by ");

        $r8 = r0.<android.app.Dialog: java.lang.String mCancelAndDismissTaken>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and can not be replaced.");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r5;

     label1:
        if r1 == null goto label2;

        $r3 = r0.<android.app.Dialog: android.os.Handler mListenersHandler>;

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(67, r1);

        r0.<android.app.Dialog: android.os.Message mDismissMessage> = $r4;

        return;

     label2:
        r0.<android.app.Dialog: android.os.Message mDismissMessage> = null;

        return;
    }

    public void setOnKeyListener(android.content.DialogInterface$OnKeyListener)
    {
        android.app.Dialog r0;
        android.content.DialogInterface$OnKeyListener r1;

        r0 := @this: android.app.Dialog;

        r1 := @parameter0: android.content.DialogInterface$OnKeyListener;

        r0.<android.app.Dialog: android.content.DialogInterface$OnKeyListener mOnKeyListener> = r1;

        return;
    }

    public void setOnShowListener(android.content.DialogInterface$OnShowListener)
    {
        android.app.Dialog r0;
        android.content.DialogInterface$OnShowListener r1;
        android.os.Handler $r2;
        android.os.Message $r3;

        r0 := @this: android.app.Dialog;

        r1 := @parameter0: android.content.DialogInterface$OnShowListener;

        if r1 == null goto label1;

        $r2 = r0.<android.app.Dialog: android.os.Handler mListenersHandler>;

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(69, r1);

        r0.<android.app.Dialog: android.os.Message mShowMessage> = $r3;

        return;

     label1:
        r0.<android.app.Dialog: android.os.Message mShowMessage> = null;

        return;
    }

    public final void setOwnerActivity(android.app.Activity)
    {
        android.app.Dialog r0;
        android.app.Activity r1, $r3;
        android.view.Window $r2;
        int $i0;

        r0 := @this: android.app.Dialog;

        r1 := @parameter0: android.app.Activity;

        r0.<android.app.Dialog: android.app.Activity mOwnerActivity> = r1;

        $r2 = virtualinvoke r0.<android.app.Dialog: android.view.Window getWindow()>();

        $r3 = r0.<android.app.Dialog: android.app.Activity mOwnerActivity>;

        $i0 = virtualinvoke $r3.<android.app.Activity: int getVolumeControlStream()>();

        virtualinvoke $r2.<android.view.Window: void setVolumeControlStream(int)>($i0);

        return;
    }

    public void setTitle(int)
    {
        android.app.Dialog r0;
        int i0;
        android.content.Context $r1;
        java.lang.CharSequence $r2;

        r0 := @this: android.app.Dialog;

        i0 := @parameter0: int;

        $r1 = r0.<android.app.Dialog: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.CharSequence getText(int)>(i0);

        virtualinvoke r0.<android.app.Dialog: void setTitle(java.lang.CharSequence)>($r2);

        return;
    }

    public void setTitle(java.lang.CharSequence)
    {
        android.app.Dialog r0;
        java.lang.CharSequence r1;
        android.view.Window $r2, $r3;
        android.view.WindowManager$LayoutParams $r4;

        r0 := @this: android.app.Dialog;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<android.app.Dialog: android.view.Window mWindow>;

        virtualinvoke $r2.<android.view.Window: void setTitle(java.lang.CharSequence)>(r1);

        $r3 = r0.<android.app.Dialog: android.view.Window mWindow>;

        $r4 = virtualinvoke $r3.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        virtualinvoke $r4.<android.view.WindowManager$LayoutParams: void setTitle(java.lang.CharSequence)>(r1);

        return;
    }

    public final void setVolumeControlStream(int)
    {
        android.app.Dialog r0;
        int i0;
        android.view.Window $r1;

        r0 := @this: android.app.Dialog;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.app.Dialog: android.view.Window getWindow()>();

        virtualinvoke $r1.<android.view.Window: void setVolumeControlStream(int)>(i0);

        return;
    }

    public void show()
    {
        android.app.Dialog r0;
        android.view.WindowManager$LayoutParams r1, r2, $r10;
        java.lang.Throwable r3, $r20;
        android.content.pm.ApplicationInfo r4;
        boolean $z0, $z1, $z2, $z3;
        android.view.Window $r5, $r8, $r12, $r14, $r16, $r17, $r19;
        android.view.View $r6, $r9, $r18, $r21;
        com.android.internal.app.ActionBarImpl $r7, $r15;
        int $i0, $i1, $i2, $i4, $i5, $i6;
        android.view.WindowManager $r11;
        android.content.Context $r13;

        r0 := @this: android.app.Dialog;

        $z0 = r0.<android.app.Dialog: boolean mShowing>;

        if $z0 == 0 goto label3;

        $r18 = r0.<android.app.Dialog: android.view.View mDecor>;

        if $r18 == null goto label2;

        $r17 = r0.<android.app.Dialog: android.view.Window mWindow>;

        $z3 = virtualinvoke $r17.<android.view.Window: boolean hasFeature(int)>(8);

        if $z3 == 0 goto label1;

        $r19 = r0.<android.app.Dialog: android.view.Window mWindow>;

        virtualinvoke $r19.<android.view.Window: void invalidatePanelMenu(int)>(8);

     label1:
        $r21 = r0.<android.app.Dialog: android.view.View mDecor>;

        virtualinvoke $r21.<android.view.View: void setVisibility(int)>(0);

     label2:
        return;

     label3:
        r0.<android.app.Dialog: boolean mCanceled> = 0;

        $z1 = r0.<android.app.Dialog: boolean mCreated>;

        if $z1 != 0 goto label4;

        virtualinvoke r0.<android.app.Dialog: void dispatchOnCreate(android.os.Bundle)>(null);

     label4:
        virtualinvoke r0.<android.app.Dialog: void onStart()>();

        $r5 = r0.<android.app.Dialog: android.view.Window mWindow>;

        $r6 = virtualinvoke $r5.<android.view.Window: android.view.View getDecorView()>();

        r0.<android.app.Dialog: android.view.View mDecor> = $r6;

        $r7 = r0.<android.app.Dialog: com.android.internal.app.ActionBarImpl mActionBar>;

        if $r7 != null goto label5;

        $r12 = r0.<android.app.Dialog: android.view.Window mWindow>;

        $z2 = virtualinvoke $r12.<android.view.Window: boolean hasFeature(int)>(8);

        if $z2 == 0 goto label5;

        $r13 = r0.<android.app.Dialog: android.content.Context mContext>;

        r4 = virtualinvoke $r13.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $r14 = r0.<android.app.Dialog: android.view.Window mWindow>;

        $i5 = r4.<android.content.pm.ApplicationInfo: int icon>;

        virtualinvoke $r14.<android.view.Window: void setDefaultIcon(int)>($i5);

        $r16 = r0.<android.app.Dialog: android.view.Window mWindow>;

        $i6 = r4.<android.content.pm.ApplicationInfo: int logo>;

        virtualinvoke $r16.<android.view.Window: void setDefaultLogo(int)>($i6);

        $r15 = new com.android.internal.app.ActionBarImpl;

        specialinvoke $r15.<com.android.internal.app.ActionBarImpl: void <init>(android.app.Dialog)>(r0);

        r0.<android.app.Dialog: com.android.internal.app.ActionBarImpl mActionBar> = $r15;

     label5:
        $r8 = r0.<android.app.Dialog: android.view.Window mWindow>;

        r1 = virtualinvoke $r8.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        $i0 = r1.<android.view.WindowManager$LayoutParams: int softInputMode>;

        $i1 = 256 & $i0;

        if $i1 != 0 goto label6;

        $r10 = new android.view.WindowManager$LayoutParams;

        specialinvoke $r10.<android.view.WindowManager$LayoutParams: void <init>()>();

        r2 = $r10;

        virtualinvoke r2.<android.view.WindowManager$LayoutParams: int copyFrom(android.view.WindowManager$LayoutParams)>(r1);

        $i2 = r2.<android.view.WindowManager$LayoutParams: int softInputMode>;

        $i4 = 256 | $i2;

        r2.<android.view.WindowManager$LayoutParams: int softInputMode> = $i4;

        r1 = r2;

     label6:
        $r11 = r0.<android.app.Dialog: android.view.WindowManager mWindowManager>;

        $r9 = r0.<android.app.Dialog: android.view.View mDecor>;

        interfaceinvoke $r11.<android.view.WindowManager: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r9, r1);

        r0.<android.app.Dialog: boolean mShowing> = 1;

        specialinvoke r0.<android.app.Dialog: void sendShowMessage()>();

     label7:
        return;

     label8:
        $r20 := @caughtexception;

        r3 = $r20;

        throw r3;

        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public boolean takeCancelAndDismissListeners(java.lang.String, android.content.DialogInterface$OnCancelListener, android.content.DialogInterface$OnDismissListener)
    {
        android.app.Dialog r0;
        java.lang.String r1, $r4;
        android.content.DialogInterface$OnCancelListener r2;
        android.content.DialogInterface$OnDismissListener r3;
        android.os.Message $r5, $r6;

        r0 := @this: android.app.Dialog;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.DialogInterface$OnCancelListener;

        r3 := @parameter2: android.content.DialogInterface$OnDismissListener;

        $r4 = r0.<android.app.Dialog: java.lang.String mCancelAndDismissTaken>;

        if $r4 == null goto label2;

        r0.<android.app.Dialog: java.lang.String mCancelAndDismissTaken> = null;

     label1:
        virtualinvoke r0.<android.app.Dialog: void setOnCancelListener(android.content.DialogInterface$OnCancelListener)>(r2);

        virtualinvoke r0.<android.app.Dialog: void setOnDismissListener(android.content.DialogInterface$OnDismissListener)>(r3);

        r0.<android.app.Dialog: java.lang.String mCancelAndDismissTaken> = r1;

        return 1;

     label2:
        $r5 = r0.<android.app.Dialog: android.os.Message mCancelMessage>;

        if $r5 != null goto label3;

        $r6 = r0.<android.app.Dialog: android.os.Message mDismissMessage>;

        if $r6 == null goto label1;

     label3:
        return 0;
    }

    public void takeKeyEvents(boolean)
    {
        android.app.Dialog r0;
        boolean z0;
        android.view.Window $r1;

        r0 := @this: android.app.Dialog;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.app.Dialog: android.view.Window mWindow>;

        virtualinvoke $r1.<android.view.Window: void takeKeyEvents(boolean)>(z0);

        return;
    }

    public void unregisterForContextMenu(android.view.View)
    {
        android.app.Dialog r0;
        android.view.View r1;

        r0 := @this: android.app.Dialog;

        r1 := @parameter0: android.view.View;

        virtualinvoke r1.<android.view.View: void setOnCreateContextMenuListener(android.view.View$OnCreateContextMenuListener)>(null);

        return;
    }

    public static void <clinit>()
    {
        <android.app.Dialog: java.lang.String TAG> = "Dialog";

        <android.app.Dialog: int SHOW> = 69;

        <android.app.Dialog: int DISMISS> = 67;

        <android.app.Dialog: java.lang.String DIALOG_SHOWING_TAG> = "android:dialogShowing";

        <android.app.Dialog: java.lang.String DIALOG_HIERARCHY_TAG> = "android:dialogHierarchy";

        <android.app.Dialog: int CANCEL> = 68;

        return;
    }
}
