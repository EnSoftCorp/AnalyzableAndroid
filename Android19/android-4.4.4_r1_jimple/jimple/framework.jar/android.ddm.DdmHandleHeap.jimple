public class android.ddm.DdmHandleHeap extends org.apache.harmony.dalvik.ddmc.ChunkHandler
{
    public static final int CHUNK_HPDS;
    public static final int CHUNK_HPDU;
    public static final int CHUNK_HPGC;
    public static final int CHUNK_HPIF;
    public static final int CHUNK_HPSG;
    public static final int CHUNK_NHSG;
    public static final int CHUNK_REAE;
    public static final int CHUNK_REAL;
    public static final int CHUNK_REAQ;
    private static android.ddm.DdmHandleHeap mInstance;

    static void <clinit>()
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.ddm.DdmHandleHeap $r0;

        $i0 = staticinvoke <android.ddm.DdmHandleHeap: int type(java.lang.String)>("HPIF");

        <android.ddm.DdmHandleHeap: int CHUNK_HPIF> = $i0;

        $i1 = staticinvoke <android.ddm.DdmHandleHeap: int type(java.lang.String)>("HPSG");

        <android.ddm.DdmHandleHeap: int CHUNK_HPSG> = $i1;

        $i2 = staticinvoke <android.ddm.DdmHandleHeap: int type(java.lang.String)>("HPDU");

        <android.ddm.DdmHandleHeap: int CHUNK_HPDU> = $i2;

        $i3 = staticinvoke <android.ddm.DdmHandleHeap: int type(java.lang.String)>("HPDS");

        <android.ddm.DdmHandleHeap: int CHUNK_HPDS> = $i3;

        $i4 = staticinvoke <android.ddm.DdmHandleHeap: int type(java.lang.String)>("NHSG");

        <android.ddm.DdmHandleHeap: int CHUNK_NHSG> = $i4;

        $i5 = staticinvoke <android.ddm.DdmHandleHeap: int type(java.lang.String)>("HPGC");

        <android.ddm.DdmHandleHeap: int CHUNK_HPGC> = $i5;

        $i6 = staticinvoke <android.ddm.DdmHandleHeap: int type(java.lang.String)>("REAE");

        <android.ddm.DdmHandleHeap: int CHUNK_REAE> = $i6;

        $i7 = staticinvoke <android.ddm.DdmHandleHeap: int type(java.lang.String)>("REAQ");

        <android.ddm.DdmHandleHeap: int CHUNK_REAQ> = $i7;

        $i8 = staticinvoke <android.ddm.DdmHandleHeap: int type(java.lang.String)>("REAL");

        <android.ddm.DdmHandleHeap: int CHUNK_REAL> = $i8;

        $r0 = new android.ddm.DdmHandleHeap;

        specialinvoke $r0.<android.ddm.DdmHandleHeap: void <init>()>();

        <android.ddm.DdmHandleHeap: android.ddm.DdmHandleHeap mInstance> = $r0;

        return;
    }

    private void <init>()
    {
        android.ddm.DdmHandleHeap r0;

        r0 := @this: android.ddm.DdmHandleHeap;

        specialinvoke r0.<org.apache.harmony.dalvik.ddmc.ChunkHandler: void <init>()>();

        return;
    }

    private org.apache.harmony.dalvik.ddmc.Chunk handleHPDS(org.apache.harmony.dalvik.ddmc.Chunk)
    {
        android.ddm.DdmHandleHeap r0;
        org.apache.harmony.dalvik.ddmc.Chunk r1, $r6;
        java.lang.String r2, $r10;
        java.lang.RuntimeException r3, $r7;
        java.lang.StringBuilder $r8, $r9, $r11;
        java.lang.UnsupportedOperationException $r12;

        r0 := @this: android.ddm.DdmHandleHeap;

        r1 := @parameter0: org.apache.harmony.dalvik.ddmc.Chunk;

        staticinvoke <android.ddm.DdmHandleHeap: java.nio.ByteBuffer wrapChunk(org.apache.harmony.dalvik.ddmc.Chunk)>(r1);

        r2 = null;

     label1:
        staticinvoke <android.os.Debug: void dumpHprofDataDdms()>();

     label2:
        if r2 == null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ddm-heap", r2);

        $r6 = staticinvoke <android.ddm.DdmHandleHeap: org.apache.harmony.dalvik.ddmc.Chunk createFailChunk(int,java.lang.String)>(1, r2);

        return $r6;

     label3:
        $r12 := @caughtexception;

        r2 = "hprof dumps not supported in this VM";

        goto label2;

     label4:
        $r7 := @caughtexception;

        r3 = $r7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception: ");

        $r10 = virtualinvoke r3.<java.lang.RuntimeException: java.lang.String getMessage()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label5:
        return null;

        catch java.lang.UnsupportedOperationException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label4;
    }

    private org.apache.harmony.dalvik.ddmc.Chunk handleHPDU(org.apache.harmony.dalvik.ddmc.Chunk)
    {
        android.ddm.DdmHandleHeap r0;
        org.apache.harmony.dalvik.ddmc.Chunk r1, $r9;
        java.nio.ByteBuffer r2;
        java.lang.String r3;
        byte b0;
        byte[] r5, $r8;
        int $i1, $i2, $i3;
        java.lang.UnsupportedOperationException $r10;
        java.io.IOException $r11;
        java.lang.RuntimeException $r12;

        r0 := @this: android.ddm.DdmHandleHeap;

        r1 := @parameter0: org.apache.harmony.dalvik.ddmc.Chunk;

        r2 = staticinvoke <android.ddm.DdmHandleHeap: java.nio.ByteBuffer wrapChunk(org.apache.harmony.dalvik.ddmc.Chunk)>(r1);

        $i1 = virtualinvoke r2.<java.nio.ByteBuffer: int getInt()>();

        r3 = staticinvoke <android.ddm.DdmHandleHeap: java.lang.String getString(java.nio.ByteBuffer,int)>(r2, $i1);

     label1:
        staticinvoke <android.os.Debug: void dumpHprofData(java.lang.String)>(r3);

     label2:
        b0 = 0;

     label3:
        $r8 = newarray (byte)[1];

        $r8[0] = b0;

        r5 = $r8;

        $r9 = new org.apache.harmony.dalvik.ddmc.Chunk;

        $i3 = <android.ddm.DdmHandleHeap: int CHUNK_HPDU>;

        $i2 = lengthof r5;

        specialinvoke $r9.<org.apache.harmony.dalvik.ddmc.Chunk: void <init>(int,byte[],int,int)>($i3, r5, 0, $i2);

        return $r9;

     label4:
        $r10 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ddm-heap", "hprof dumps not supported in this VM");

        b0 = -1;

        goto label3;

     label5:
        $r11 := @caughtexception;

        b0 = -1;

        goto label3;

     label6:
        $r12 := @caughtexception;

        b0 = -1;

        goto label3;

        catch java.lang.UnsupportedOperationException from label1 to label2 with label4;
        catch java.io.IOException from label1 to label2 with label5;
        catch java.lang.RuntimeException from label1 to label2 with label6;
    }

    private org.apache.harmony.dalvik.ddmc.Chunk handleHPGC(org.apache.harmony.dalvik.ddmc.Chunk)
    {
        android.ddm.DdmHandleHeap r0;
        org.apache.harmony.dalvik.ddmc.Chunk r1;

        r0 := @this: android.ddm.DdmHandleHeap;

        r1 := @parameter0: org.apache.harmony.dalvik.ddmc.Chunk;

        staticinvoke <java.lang.System: void gc()>();

        return null;
    }

    private org.apache.harmony.dalvik.ddmc.Chunk handleHPIF(org.apache.harmony.dalvik.ddmc.Chunk)
    {
        android.ddm.DdmHandleHeap r0;
        org.apache.harmony.dalvik.ddmc.Chunk r1, $r3;
        java.nio.ByteBuffer $r2;
        byte $b0;
        boolean $z0;

        r0 := @this: android.ddm.DdmHandleHeap;

        r1 := @parameter0: org.apache.harmony.dalvik.ddmc.Chunk;

        $r2 = staticinvoke <android.ddm.DdmHandleHeap: java.nio.ByteBuffer wrapChunk(org.apache.harmony.dalvik.ddmc.Chunk)>(r1);

        $b0 = virtualinvoke $r2.<java.nio.ByteBuffer: byte get()>();

        $z0 = staticinvoke <org.apache.harmony.dalvik.ddmc.DdmVmInternal: boolean heapInfoNotify(int)>($b0);

        if $z0 != 0 goto label1;

        $r3 = staticinvoke <android.ddm.DdmHandleHeap: org.apache.harmony.dalvik.ddmc.Chunk createFailChunk(int,java.lang.String)>(1, "Unsupported HPIF what");

        return $r3;

     label1:
        return null;
    }

    private org.apache.harmony.dalvik.ddmc.Chunk handleHPSGNHSG(org.apache.harmony.dalvik.ddmc.Chunk, boolean)
    {
        android.ddm.DdmHandleHeap r0;
        org.apache.harmony.dalvik.ddmc.Chunk r1, $r3;
        boolean z0, $z1;
        java.nio.ByteBuffer r2;
        byte $b0, $b1;

        r0 := @this: android.ddm.DdmHandleHeap;

        r1 := @parameter0: org.apache.harmony.dalvik.ddmc.Chunk;

        z0 := @parameter1: boolean;

        r2 = staticinvoke <android.ddm.DdmHandleHeap: java.nio.ByteBuffer wrapChunk(org.apache.harmony.dalvik.ddmc.Chunk)>(r1);

        $b0 = virtualinvoke r2.<java.nio.ByteBuffer: byte get()>();

        $b1 = virtualinvoke r2.<java.nio.ByteBuffer: byte get()>();

        $z1 = staticinvoke <org.apache.harmony.dalvik.ddmc.DdmVmInternal: boolean heapSegmentNotify(int,int,boolean)>($b0, $b1, z0);

        if $z1 != 0 goto label1;

        $r3 = staticinvoke <android.ddm.DdmHandleHeap: org.apache.harmony.dalvik.ddmc.Chunk createFailChunk(int,java.lang.String)>(1, "Unsupported HPSG what/when");

        return $r3;

     label1:
        return null;
    }

    private org.apache.harmony.dalvik.ddmc.Chunk handleREAE(org.apache.harmony.dalvik.ddmc.Chunk)
    {
        android.ddm.DdmHandleHeap r0;
        org.apache.harmony.dalvik.ddmc.Chunk r1;
        boolean z0;
        java.nio.ByteBuffer $r2;
        byte $b0;

        r0 := @this: android.ddm.DdmHandleHeap;

        r1 := @parameter0: org.apache.harmony.dalvik.ddmc.Chunk;

        $r2 = staticinvoke <android.ddm.DdmHandleHeap: java.nio.ByteBuffer wrapChunk(org.apache.harmony.dalvik.ddmc.Chunk)>(r1);

        $b0 = virtualinvoke $r2.<java.nio.ByteBuffer: byte get()>();

        if $b0 == 0 goto label2;

        z0 = 1;

     label1:
        staticinvoke <org.apache.harmony.dalvik.ddmc.DdmVmInternal: void enableRecentAllocations(boolean)>(z0);

        return null;

     label2:
        z0 = 0;

        goto label1;
    }

    private org.apache.harmony.dalvik.ddmc.Chunk handleREAL(org.apache.harmony.dalvik.ddmc.Chunk)
    {
        android.ddm.DdmHandleHeap r0;
        org.apache.harmony.dalvik.ddmc.Chunk r1, $r3;
        byte[] r2;
        int $i0, $i1;

        r0 := @this: android.ddm.DdmHandleHeap;

        r1 := @parameter0: org.apache.harmony.dalvik.ddmc.Chunk;

        r2 = staticinvoke <org.apache.harmony.dalvik.ddmc.DdmVmInternal: byte[] getRecentAllocations()>();

        $r3 = new org.apache.harmony.dalvik.ddmc.Chunk;

        $i1 = <android.ddm.DdmHandleHeap: int CHUNK_REAL>;

        $i0 = lengthof r2;

        specialinvoke $r3.<org.apache.harmony.dalvik.ddmc.Chunk: void <init>(int,byte[],int,int)>($i1, r2, 0, $i0);

        return $r3;
    }

    private org.apache.harmony.dalvik.ddmc.Chunk handleREAQ(org.apache.harmony.dalvik.ddmc.Chunk)
    {
        android.ddm.DdmHandleHeap r0;
        org.apache.harmony.dalvik.ddmc.Chunk r1, $r3;
        byte b0;
        byte[] r2;
        boolean $z0;
        int $i1, $i2;

        r0 := @this: android.ddm.DdmHandleHeap;

        r1 := @parameter0: org.apache.harmony.dalvik.ddmc.Chunk;

        b0 = 1;

        r2 = newarray (byte)[1];

        $z0 = staticinvoke <org.apache.harmony.dalvik.ddmc.DdmVmInternal: boolean getRecentAllocationStatus()>();

        if $z0 == 0 goto label2;

     label1:
        r2[0] = b0;

        $r3 = new org.apache.harmony.dalvik.ddmc.Chunk;

        $i2 = <android.ddm.DdmHandleHeap: int CHUNK_REAQ>;

        $i1 = lengthof r2;

        specialinvoke $r3.<org.apache.harmony.dalvik.ddmc.Chunk: void <init>(int,byte[],int,int)>($i2, r2, 0, $i1);

        return $r3;

     label2:
        b0 = 0;

        goto label1;
    }

    public static void register()
    {
        android.ddm.DdmHandleHeap $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        $i0 = <android.ddm.DdmHandleHeap: int CHUNK_HPIF>;

        $r0 = <android.ddm.DdmHandleHeap: android.ddm.DdmHandleHeap mInstance>;

        staticinvoke <org.apache.harmony.dalvik.ddmc.DdmServer: void registerHandler(int,org.apache.harmony.dalvik.ddmc.ChunkHandler)>($i0, $r0);

        $i1 = <android.ddm.DdmHandleHeap: int CHUNK_HPSG>;

        $r1 = <android.ddm.DdmHandleHeap: android.ddm.DdmHandleHeap mInstance>;

        staticinvoke <org.apache.harmony.dalvik.ddmc.DdmServer: void registerHandler(int,org.apache.harmony.dalvik.ddmc.ChunkHandler)>($i1, $r1);

        $i2 = <android.ddm.DdmHandleHeap: int CHUNK_HPDU>;

        $r2 = <android.ddm.DdmHandleHeap: android.ddm.DdmHandleHeap mInstance>;

        staticinvoke <org.apache.harmony.dalvik.ddmc.DdmServer: void registerHandler(int,org.apache.harmony.dalvik.ddmc.ChunkHandler)>($i2, $r2);

        $i3 = <android.ddm.DdmHandleHeap: int CHUNK_HPDS>;

        $r3 = <android.ddm.DdmHandleHeap: android.ddm.DdmHandleHeap mInstance>;

        staticinvoke <org.apache.harmony.dalvik.ddmc.DdmServer: void registerHandler(int,org.apache.harmony.dalvik.ddmc.ChunkHandler)>($i3, $r3);

        $i4 = <android.ddm.DdmHandleHeap: int CHUNK_NHSG>;

        $r4 = <android.ddm.DdmHandleHeap: android.ddm.DdmHandleHeap mInstance>;

        staticinvoke <org.apache.harmony.dalvik.ddmc.DdmServer: void registerHandler(int,org.apache.harmony.dalvik.ddmc.ChunkHandler)>($i4, $r4);

        $i5 = <android.ddm.DdmHandleHeap: int CHUNK_HPGC>;

        $r5 = <android.ddm.DdmHandleHeap: android.ddm.DdmHandleHeap mInstance>;

        staticinvoke <org.apache.harmony.dalvik.ddmc.DdmServer: void registerHandler(int,org.apache.harmony.dalvik.ddmc.ChunkHandler)>($i5, $r5);

        $i6 = <android.ddm.DdmHandleHeap: int CHUNK_REAE>;

        $r6 = <android.ddm.DdmHandleHeap: android.ddm.DdmHandleHeap mInstance>;

        staticinvoke <org.apache.harmony.dalvik.ddmc.DdmServer: void registerHandler(int,org.apache.harmony.dalvik.ddmc.ChunkHandler)>($i6, $r6);

        $i7 = <android.ddm.DdmHandleHeap: int CHUNK_REAQ>;

        $r7 = <android.ddm.DdmHandleHeap: android.ddm.DdmHandleHeap mInstance>;

        staticinvoke <org.apache.harmony.dalvik.ddmc.DdmServer: void registerHandler(int,org.apache.harmony.dalvik.ddmc.ChunkHandler)>($i7, $r7);

        $i8 = <android.ddm.DdmHandleHeap: int CHUNK_REAL>;

        $r8 = <android.ddm.DdmHandleHeap: android.ddm.DdmHandleHeap mInstance>;

        staticinvoke <org.apache.harmony.dalvik.ddmc.DdmServer: void registerHandler(int,org.apache.harmony.dalvik.ddmc.ChunkHandler)>($i8, $r8);

        return;
    }

    public void connected()
    {
        android.ddm.DdmHandleHeap r0;

        r0 := @this: android.ddm.DdmHandleHeap;

        return;
    }

    public void disconnected()
    {
        android.ddm.DdmHandleHeap r0;

        r0 := @this: android.ddm.DdmHandleHeap;

        return;
    }

    public org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)
    {
        android.ddm.DdmHandleHeap r0;
        org.apache.harmony.dalvik.ddmc.Chunk r1, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.RuntimeException $r2;
        java.lang.StringBuilder $r3, $r4, $r7;
        java.lang.String $r5, $r6;

        r0 := @this: android.ddm.DdmHandleHeap;

        r1 := @parameter0: org.apache.harmony.dalvik.ddmc.Chunk;

        i0 = r1.<org.apache.harmony.dalvik.ddmc.Chunk: int type>;

        $i1 = <android.ddm.DdmHandleHeap: int CHUNK_HPIF>;

        if i0 != $i1 goto label1;

        $r16 = specialinvoke r0.<android.ddm.DdmHandleHeap: org.apache.harmony.dalvik.ddmc.Chunk handleHPIF(org.apache.harmony.dalvik.ddmc.Chunk)>(r1);

        return $r16;

     label1:
        $i2 = <android.ddm.DdmHandleHeap: int CHUNK_HPSG>;

        if i0 != $i2 goto label2;

        $r14 = specialinvoke r0.<android.ddm.DdmHandleHeap: org.apache.harmony.dalvik.ddmc.Chunk handleHPSGNHSG(org.apache.harmony.dalvik.ddmc.Chunk,boolean)>(r1, 0);

        return $r14;

     label2:
        $i3 = <android.ddm.DdmHandleHeap: int CHUNK_HPDU>;

        if i0 != $i3 goto label3;

        $r15 = specialinvoke r0.<android.ddm.DdmHandleHeap: org.apache.harmony.dalvik.ddmc.Chunk handleHPDU(org.apache.harmony.dalvik.ddmc.Chunk)>(r1);

        return $r15;

     label3:
        $i4 = <android.ddm.DdmHandleHeap: int CHUNK_HPDS>;

        if i0 != $i4 goto label4;

        $r12 = specialinvoke r0.<android.ddm.DdmHandleHeap: org.apache.harmony.dalvik.ddmc.Chunk handleHPDS(org.apache.harmony.dalvik.ddmc.Chunk)>(r1);

        return $r12;

     label4:
        $i5 = <android.ddm.DdmHandleHeap: int CHUNK_NHSG>;

        if i0 != $i5 goto label5;

        $r13 = specialinvoke r0.<android.ddm.DdmHandleHeap: org.apache.harmony.dalvik.ddmc.Chunk handleHPSGNHSG(org.apache.harmony.dalvik.ddmc.Chunk,boolean)>(r1, 1);

        return $r13;

     label5:
        $i6 = <android.ddm.DdmHandleHeap: int CHUNK_HPGC>;

        if i0 != $i6 goto label6;

        $r10 = specialinvoke r0.<android.ddm.DdmHandleHeap: org.apache.harmony.dalvik.ddmc.Chunk handleHPGC(org.apache.harmony.dalvik.ddmc.Chunk)>(r1);

        return $r10;

     label6:
        $i7 = <android.ddm.DdmHandleHeap: int CHUNK_REAE>;

        if i0 != $i7 goto label7;

        $r11 = specialinvoke r0.<android.ddm.DdmHandleHeap: org.apache.harmony.dalvik.ddmc.Chunk handleREAE(org.apache.harmony.dalvik.ddmc.Chunk)>(r1);

        return $r11;

     label7:
        $i8 = <android.ddm.DdmHandleHeap: int CHUNK_REAQ>;

        if i0 != $i8 goto label8;

        $r8 = specialinvoke r0.<android.ddm.DdmHandleHeap: org.apache.harmony.dalvik.ddmc.Chunk handleREAQ(org.apache.harmony.dalvik.ddmc.Chunk)>(r1);

        return $r8;

     label8:
        $i9 = <android.ddm.DdmHandleHeap: int CHUNK_REAL>;

        if i0 != $i9 goto label9;

        $r9 = specialinvoke r0.<android.ddm.DdmHandleHeap: org.apache.harmony.dalvik.ddmc.Chunk handleREAL(org.apache.harmony.dalvik.ddmc.Chunk)>(r1);

        return $r9;

     label9:
        $r2 = new java.lang.RuntimeException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown packet ");

        $r5 = staticinvoke <org.apache.harmony.dalvik.ddmc.ChunkHandler: java.lang.String name(int)>(i0);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r2;
    }
}
