public class android.speech.tts.TtsEngines extends java.lang.Object
{
    private static final boolean DBG;
    private static final java.lang.String LOCALE_DELIMITER;
    private static final java.lang.String TAG;
    private static final java.lang.String XML_TAG_NAME;
    private final android.content.Context mContext;

    public void <init>(android.content.Context)
    {
        android.speech.tts.TtsEngines r0;
        android.content.Context r1;

        r0 := @this: android.speech.tts.TtsEngines;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.speech.tts.TtsEngines: android.content.Context mContext> = r1;

        return;
    }

    private android.speech.tts.TextToSpeech$EngineInfo getEngineInfo(android.content.pm.ResolveInfo, android.content.pm.PackageManager)
    {
        android.speech.tts.TtsEngines r0;
        android.content.pm.ResolveInfo r1;
        android.content.pm.PackageManager r2;
        android.content.pm.ServiceInfo r3;
        android.speech.tts.TextToSpeech$EngineInfo r4, $r7;
        java.lang.CharSequence r5;
        java.lang.String r6, $r8;
        boolean $z0, $z1;
        int $i0, $i1;

        r0 := @this: android.speech.tts.TtsEngines;

        r1 := @parameter0: android.content.pm.ResolveInfo;

        r2 := @parameter1: android.content.pm.PackageManager;

        r3 = r1.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        if r3 == null goto label3;

        $r7 = new android.speech.tts.TextToSpeech$EngineInfo;

        specialinvoke $r7.<android.speech.tts.TextToSpeech$EngineInfo: void <init>()>();

        r4 = $r7;

        $r8 = r3.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        r4.<android.speech.tts.TextToSpeech$EngineInfo: java.lang.String name> = $r8;

        r5 = virtualinvoke r3.<android.content.pm.ServiceInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>(r2);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r5);

        if $z0 == 0 goto label2;

        r6 = r4.<android.speech.tts.TextToSpeech$EngineInfo: java.lang.String name>;

     label1:
        r4.<android.speech.tts.TextToSpeech$EngineInfo: java.lang.String label> = r6;

        $i0 = virtualinvoke r3.<android.content.pm.ServiceInfo: int getIconResource()>();

        r4.<android.speech.tts.TextToSpeech$EngineInfo: int icon> = $i0;

        $i1 = r1.<android.content.pm.ResolveInfo: int priority>;

        r4.<android.speech.tts.TextToSpeech$EngineInfo: int priority> = $i1;

        $z1 = specialinvoke r0.<android.speech.tts.TtsEngines: boolean isSystemEngine(android.content.pm.ServiceInfo)>(r3);

        r4.<android.speech.tts.TextToSpeech$EngineInfo: boolean system> = $z1;

        return r4;

     label2:
        r6 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();

        goto label1;

     label3:
        return null;
    }

    private java.lang.String getV1Locale()
    {
        android.speech.tts.TtsEngines r0;
        android.content.ContentResolver r1;
        java.lang.String r2, r3, r4, r5, $r14;
        android.content.Context $r6;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r15;

        r0 := @this: android.speech.tts.TtsEngines;

        $r6 = r0.<android.speech.tts.TtsEngines: android.content.Context mContext>;

        r1 = virtualinvoke $r6.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r2 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>(r1, "tts_default_lang");

        r3 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>(r1, "tts_default_country");

        r4 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>(r1, "tts_default_variant");

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label2;

        r5 = virtualinvoke r0.<android.speech.tts.TtsEngines: java.lang.String getDefaultLocale()>();

     label1:
        return r5;

     label2:
        r5 = r2;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z1 != 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r4);

        if $z2 != 0 goto label1;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;
    }

    private boolean isSystemEngine(android.content.pm.ServiceInfo)
    {
        android.speech.tts.TtsEngines r0;
        android.content.pm.ServiceInfo r1;
        android.content.pm.ApplicationInfo r2;
        int $i0, $i1;

        r0 := @this: android.speech.tts.TtsEngines;

        r1 := @parameter0: android.content.pm.ServiceInfo;

        r2 = r1.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        if r2 == null goto label1;

        $i0 = r2.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = 1 & $i0;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static java.lang.String parseEnginePrefFromList(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r3, $r4, $r5;
        java.lang.String[] r2;
        int i0, i1, i2, $i3;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 == 0 goto label2;

     label1:
        return null;

     label2:
        r2 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        i0 = lengthof r2;

        i1 = 0;

     label3:
        if i1 >= i0 goto label1;

        r3 = r2[i1];

        i2 = virtualinvoke r3.<java.lang.String: int indexOf(int)>(58);

        if i2 <= 0 goto label4;

        $r4 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, i2);

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label4;

        $i3 = i2 + 1;

        $r5 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>($i3);

        return $r5;

     label4:
        i1 = i1 + 1;

        goto label3;
    }

    public static java.lang.String[] parseLocalePref(java.lang.String)
    {
        java.lang.String r0;
        java.lang.String[] r1, r2, $r3;
        boolean $z0;
        int $i0;

        r0 := @parameter0: java.lang.String;

        $r3 = newarray (java.lang.String)[3];

        $r3[0] = "";

        $r3[1] = "";

        $r3[2] = "";

        r1 = $r3;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 != 0 goto label1;

        r2 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("-");

        $i0 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r1, 0, $i0);

     label1:
        return r1;
    }

    private java.lang.String settingsActivityFromServiceInfo(android.content.pm.ServiceInfo, android.content.pm.PackageManager)
    {
        android.speech.tts.TtsEngines r0;
        android.content.pm.ServiceInfo r1;
        android.content.pm.PackageManager r2;
        android.content.res.XmlResourceParser r3;
        java.lang.Throwable r4, $r46;
        java.io.IOException r5, $r39;
        org.xmlpull.v1.XmlPullParserException r6, $r26;
        java.lang.String r8, $r12, $r13, $r20, $r21, $r28, $r33, $r40, $r45;
        android.content.res.Resources r9;
        int i0;
        android.content.res.TypedArray r10;
        android.content.pm.ApplicationInfo $r11;
        android.util.AttributeSet $r14;
        boolean $z0;
        int[] $r15;
        java.lang.StringBuilder $r17, $r18, $r19, $r22, $r23, $r24, $r29, $r30, $r31, $r34, $r35, $r36, $r41, $r42, $r43, $r44, r47, r48, r49, r50, r51;
        android.content.pm.PackageManager$NameNotFoundException $r32;
        org.xmlpull.v1.XmlPullParser r52;

        r0 := @this: android.speech.tts.TtsEngines;

        r1 := @parameter0: android.content.pm.ServiceInfo;

        r2 := @parameter1: android.content.pm.PackageManager;

        r3 = null;

     label01:
        r3 = virtualinvoke r1.<android.content.pm.ServiceInfo: android.content.res.XmlResourceParser loadXmlMetaData(android.content.pm.PackageManager,java.lang.String)>(r2, "android.speech.tts");

     label02:
        if r3 != null goto label07;

     label03:
        r47 = new java.lang.StringBuilder;

        specialinvoke r47.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No meta-data found for :");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TtsEngines", $r28);

     label04:
        if r3 == null goto label05;

        interfaceinvoke r3.<android.content.res.XmlResourceParser: void close()>();

     label05:
        r8 = null;

     label06:
        return r8;

     label07:
        $r11 = r1.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        r9 = virtualinvoke r2.<android.content.pm.PackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>($r11);

     label08:
        i0 = interfaceinvoke r3.<android.content.res.XmlResourceParser: int next()>();

     label09:
        if i0 == 1 goto label15;

        if i0 != 2 goto label08;

     label10:
        $r13 = "tts-engine";

        $r12 = interfaceinvoke r3.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z0 != 0 goto label13;

        r48 = new java.lang.StringBuilder;

        specialinvoke r48.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uses unknown tag :");

        $r21 = interfaceinvoke r3.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TtsEngines", $r20);

     label11:
        if r3 == null goto label12;

        interfaceinvoke r3.<android.content.res.XmlResourceParser: void close()>();

     label12:
        return null;

     label13:
        r52 = (org.xmlpull.v1.XmlPullParser) r3;

        $r14 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r52);

        $r15 = <com.android.internal.R$styleable: int[] TextToSpeechEngine>;

        r10 = virtualinvoke r9.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($r14, $r15);

        r8 = virtualinvoke r10.<android.content.res.TypedArray: java.lang.String getString(int)>(0);

        virtualinvoke r10.<android.content.res.TypedArray: void recycle()>();

     label14:
        if r3 == null goto label06;

        interfaceinvoke r3.<android.content.res.XmlResourceParser: void close()>();

        return r8;

     label15:
        if r3 == null goto label16;

        interfaceinvoke r3.<android.content.res.XmlResourceParser: void close()>();

     label16:
        return null;

     label17:
        $r32 := @caughtexception;

     label18:
        r49 = new java.lang.StringBuilder;

        specialinvoke r49.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not load resources for : ");

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r40 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TtsEngines", $r40);

     label19:
        if r3 == null goto label20;

        interfaceinvoke r3.<android.content.res.XmlResourceParser: void close()>();

     label20:
        return null;

     label21:
        $r26 := @caughtexception;

        r6 = $r26;

     label22:
        r50 = new java.lang.StringBuilder;

        specialinvoke r50.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error parsing metadata for ");

        $r29 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TtsEngines", $r33);

     label23:
        if r3 == null goto label24;

        interfaceinvoke r3.<android.content.res.XmlResourceParser: void close()>();

     label24:
        return null;

     label25:
        $r39 := @caughtexception;

        r5 = $r39;

     label26:
        r51 = new java.lang.StringBuilder;

        specialinvoke r51.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error parsing metadata for ");

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r44 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TtsEngines", $r45);

     label27:
        if r3 == null goto label28;

        interfaceinvoke r3.<android.content.res.XmlResourceParser: void close()>();

     label28:
        return null;

     label29:
        $r46 := @caughtexception;

        r4 = $r46;

        if r3 == null goto label30;

        interfaceinvoke r3.<android.content.res.XmlResourceParser: void close()>();

     label30:
        throw r4;

        catch android.content.pm.PackageManager$NameNotFoundException from label01 to label02 with label17;
        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label21;
        catch java.io.IOException from label01 to label02 with label25;
        catch java.lang.Throwable from label01 to label02 with label29;
        catch android.content.pm.PackageManager$NameNotFoundException from label03 to label04 with label17;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label21;
        catch java.io.IOException from label03 to label04 with label25;
        catch java.lang.Throwable from label03 to label04 with label29;
        catch android.content.pm.PackageManager$NameNotFoundException from label07 to label08 with label17;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label08 with label21;
        catch java.io.IOException from label07 to label08 with label25;
        catch java.lang.Throwable from label07 to label08 with label29;
        catch android.content.pm.PackageManager$NameNotFoundException from label08 to label09 with label17;
        catch org.xmlpull.v1.XmlPullParserException from label08 to label09 with label21;
        catch java.io.IOException from label08 to label09 with label25;
        catch java.lang.Throwable from label08 to label09 with label29;
        catch android.content.pm.PackageManager$NameNotFoundException from label10 to label11 with label17;
        catch org.xmlpull.v1.XmlPullParserException from label10 to label11 with label21;
        catch java.io.IOException from label10 to label11 with label25;
        catch java.lang.Throwable from label10 to label11 with label29;
        catch android.content.pm.PackageManager$NameNotFoundException from label13 to label14 with label17;
        catch org.xmlpull.v1.XmlPullParserException from label13 to label14 with label21;
        catch java.io.IOException from label13 to label14 with label25;
        catch java.lang.Throwable from label13 to label14 with label29;
        catch java.lang.Throwable from label18 to label19 with label29;
        catch java.lang.Throwable from label22 to label23 with label29;
        catch java.lang.Throwable from label26 to label27 with label29;
    }

    private java.lang.String updateValueInCommaSeparatedList(java.lang.String, java.lang.String, java.lang.String)
    {
        android.speech.tts.TtsEngines r0;
        java.lang.String r1, r2, r3, r6, $r8, $r13;
        java.lang.StringBuilder r4, $r7, $r9, $r12, $r17, $r18, $r19, $r21;
        java.lang.String[] r5;
        boolean z0, z1, $z2, $z3;
        int i0, i1, i2;

        r0 := @this: android.speech.tts.TtsEngines;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        r4 = $r7;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z2 == 0 goto label02;

        $r19 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

     label01:
        $r8 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;

     label02:
        r5 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        z0 = 1;

        z1 = 0;

        i0 = lengthof r5;

        i1 = 0;

     label03:
        if i1 >= i0 goto label10;

        r6 = r5[i1];

        i2 = virtualinvoke r6.<java.lang.String: int indexOf(int)>(58);

        if i2 <= 0 goto label05;

        $r13 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int,int)>(0, i2);

        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z3 == 0 goto label07;

        if z0 == 0 goto label06;

        z0 = 0;

     label04:
        z1 = 1;

        $r18 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

     label05:
        i1 = i1 + 1;

        goto label03;

     label06:
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        goto label04;

     label07:
        if z0 == 0 goto label09;

        z0 = 0;

     label08:
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        goto label05;

     label09:
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        goto label08;

     label10:
        if z1 != 0 goto label01;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $r9 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        goto label01;
    }

    public java.lang.String getDefaultEngine()
    {
        android.speech.tts.TtsEngines r0;
        java.lang.String r1, $r4;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        boolean $z0;

        r0 := @this: android.speech.tts.TtsEngines;

        $r2 = r0.<android.speech.tts.TtsEngines: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r1 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r3, "tts_default_synth");

        $z0 = virtualinvoke r0.<android.speech.tts.TtsEngines: boolean isEngineInstalled(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        return r1;

     label1:
        $r4 = virtualinvoke r0.<android.speech.tts.TtsEngines: java.lang.String getHighestRankedEngineName()>();

        return $r4;
    }

    public java.lang.String getDefaultLocale()
    {
        android.speech.tts.TtsEngines r0;
        java.util.Locale r1;
        java.lang.String r3, r4, $r5, $r9, $r11, $r14;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r6, $r7, $r8, $r10, $r12, $r13, $r15, $r16;
        java.util.MissingResourceException $r17;

        r0 := @this: android.speech.tts.TtsEngines;

        r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

     label1:
        r3 = virtualinvoke r1.<java.util.Locale: java.lang.String getISO3Language()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z0 == 0 goto label3;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TtsEngines", "Default locale is empty.");

     label2:
        return "";

     label3:
        $r5 = virtualinvoke r1.<java.util.Locale: java.lang.String getISO3Country()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r5);

        if $z1 != 0 goto label6;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r9 = virtualinvoke r1.<java.util.Locale: java.lang.String getISO3Country()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        r3 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = virtualinvoke r1.<java.util.Locale: java.lang.String getVariant()>();

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r11);

        if $z2 != 0 goto label6;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r14 = virtualinvoke r1.<java.util.Locale: java.lang.String getVariant()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        r4 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        return r4;

     label5:
        $r17 := @caughtexception;

        r3 = "eng-usa";

     label6:
        return r3;

        catch java.util.MissingResourceException from label1 to label2 with label5;
        catch java.util.MissingResourceException from label3 to label4 with label5;
    }

    public android.speech.tts.TextToSpeech$EngineInfo getEngineInfo(java.lang.String)
    {
        android.speech.tts.TtsEngines r0;
        java.lang.String r1;
        android.content.pm.PackageManager r2;
        android.content.Intent r3, $r6;
        java.util.List r4;
        android.content.Context $r5;
        int $i0;
        java.lang.Object $r8;
        android.content.pm.ResolveInfo $r9;
        android.speech.tts.TextToSpeech$EngineInfo $r10;

        r0 := @this: android.speech.tts.TtsEngines;

        r1 := @parameter0: java.lang.String;

        $r5 = r0.<android.speech.tts.TtsEngines: android.content.Context mContext>;

        r2 = virtualinvoke $r5.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r6 = new android.content.Intent;

        specialinvoke $r6.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.TTS_SERVICE");

        r3 = $r6;

        virtualinvoke r3.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r1);

        r4 = virtualinvoke r2.<android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>(r3, 65536);

        if r4 == null goto label1;

        $i0 = interfaceinvoke r4.<java.util.List: int size()>();

        if $i0 != 1 goto label1;

        $r8 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(0);

        $r9 = (android.content.pm.ResolveInfo) $r8;

        $r10 = specialinvoke r0.<android.speech.tts.TtsEngines: android.speech.tts.TextToSpeech$EngineInfo getEngineInfo(android.content.pm.ResolveInfo,android.content.pm.PackageManager)>($r9, r2);

        return $r10;

     label1:
        return null;
    }

    public java.util.List getEngines()
    {
        android.speech.tts.TtsEngines r0;
        android.content.pm.PackageManager r1;
        java.util.List r2, $r12;
        java.util.ArrayList r3, $r8;
        java.util.Iterator r4;
        android.speech.tts.TextToSpeech$EngineInfo r5;
        android.content.Context $r6;
        android.content.Intent $r7;
        int $i0;
        boolean $z0;
        android.speech.tts.TtsEngines$EngineInfoComparator $r9;
        java.lang.Object $r10;
        android.content.pm.ResolveInfo $r11;

        r0 := @this: android.speech.tts.TtsEngines;

        $r6 = r0.<android.speech.tts.TtsEngines: android.content.Context mContext>;

        r1 = virtualinvoke $r6.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.TTS_SERVICE");

        r2 = virtualinvoke r1.<android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>($r7, 65536);

        if r2 != null goto label1;

        $r12 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r12;

     label1:
        $r8 = new java.util.ArrayList;

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i0);

        r3 = $r8;

        r4 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (android.content.pm.ResolveInfo) $r10;

        r5 = specialinvoke r0.<android.speech.tts.TtsEngines: android.speech.tts.TextToSpeech$EngineInfo getEngineInfo(android.content.pm.ResolveInfo,android.content.pm.PackageManager)>($r11, r1);

        if r5 == null goto label2;

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r5);

        goto label2;

     label3:
        $r9 = <android.speech.tts.TtsEngines$EngineInfoComparator: android.speech.tts.TtsEngines$EngineInfoComparator INSTANCE>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r3, $r9);

        return r3;
    }

    public java.lang.String getHighestRankedEngineName()
    {
        android.speech.tts.TtsEngines r0;
        java.util.List r1;
        int $i0;
        java.lang.Object $r2, $r4;
        android.speech.tts.TextToSpeech$EngineInfo $r3, $r5;
        boolean $z0;
        java.lang.String $r6;

        r0 := @this: android.speech.tts.TtsEngines;

        r1 = virtualinvoke r0.<android.speech.tts.TtsEngines: java.util.List getEngines()>();

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 <= 0 goto label1;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (android.speech.tts.TextToSpeech$EngineInfo) $r2;

        $z0 = $r3.<android.speech.tts.TextToSpeech$EngineInfo: boolean system>;

        if $z0 == 0 goto label1;

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (android.speech.tts.TextToSpeech$EngineInfo) $r4;

        $r6 = $r5.<android.speech.tts.TextToSpeech$EngineInfo: java.lang.String name>;

        return $r6;

     label1:
        return null;
    }

    public java.lang.String getLocalePrefForEngine(java.lang.String)
    {
        android.speech.tts.TtsEngines r0;
        java.lang.String r1, r2, $r5;
        android.content.Context $r3;
        android.content.ContentResolver $r4;
        boolean $z0;

        r0 := @this: android.speech.tts.TtsEngines;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<android.speech.tts.TtsEngines: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r5 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r4, "tts_default_locale");

        r2 = staticinvoke <android.speech.tts.TtsEngines: java.lang.String parseEnginePrefFromList(java.lang.String,java.lang.String)>($r5, r1);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label1;

        r2 = specialinvoke r0.<android.speech.tts.TtsEngines: java.lang.String getV1Locale()>();

     label1:
        return r2;
    }

    public android.content.Intent getSettingsIntent(java.lang.String)
    {
        android.speech.tts.TtsEngines r0;
        java.lang.String r1, r6;
        android.content.pm.PackageManager r2;
        android.content.Intent r3, r7, $r9, $r14;
        java.util.List r4;
        android.content.pm.ServiceInfo r5;
        android.content.Context $r8;
        int $i0;
        java.lang.Object $r11;
        android.content.pm.ResolveInfo $r12;

        r0 := @this: android.speech.tts.TtsEngines;

        r1 := @parameter0: java.lang.String;

        $r8 = r0.<android.speech.tts.TtsEngines: android.content.Context mContext>;

        r2 = virtualinvoke $r8.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r9 = new android.content.Intent;

        specialinvoke $r9.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.TTS_SERVICE");

        r3 = $r9;

        virtualinvoke r3.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r1);

        r4 = virtualinvoke r2.<android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>(r3, 65664);

        if r4 == null goto label1;

        $i0 = interfaceinvoke r4.<java.util.List: int size()>();

        if $i0 != 1 goto label1;

        $r11 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(0);

        $r12 = (android.content.pm.ResolveInfo) $r11;

        r5 = $r12.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        if r5 == null goto label1;

        r6 = specialinvoke r0.<android.speech.tts.TtsEngines: java.lang.String settingsActivityFromServiceInfo(android.content.pm.ServiceInfo,android.content.pm.PackageManager)>(r5, r2);

        if r6 == null goto label1;

        $r14 = new android.content.Intent;

        specialinvoke $r14.<android.content.Intent: void <init>()>();

        r7 = $r14;

        virtualinvoke r7.<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>(r1, r6);

        return r7;

     label1:
        return null;
    }

    public boolean isEngineInstalled(java.lang.String)
    {
        android.speech.tts.TtsEngines r0;
        java.lang.String r1;
        android.speech.tts.TextToSpeech$EngineInfo $r2;

        r0 := @this: android.speech.tts.TtsEngines;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label2;

     label1:
        return 0;

     label2:
        $r2 = virtualinvoke r0.<android.speech.tts.TtsEngines: android.speech.tts.TextToSpeech$EngineInfo getEngineInfo(java.lang.String)>(r1);

        if $r2 == null goto label1;

        return 1;
    }

    public void updateLocalePrefForEngine(java.lang.String, java.lang.String)
    {
        android.speech.tts.TtsEngines r0;
        java.lang.String r1, r2, r4, $r7, $r10;
        java.lang.Throwable r3, $r11;
        android.content.Context $r5, $r8;
        android.content.ContentResolver $r6, $r9;

        r0 := @this: android.speech.tts.TtsEngines;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        entermonitor r0;

     label1:
        $r5 = r0.<android.speech.tts.TtsEngines: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r7 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r6, "tts_default_locale");

        r4 = specialinvoke r0.<android.speech.tts.TtsEngines: java.lang.String updateValueInCommaSeparatedList(java.lang.String,java.lang.String,java.lang.String)>($r7, r1, r2);

        $r8 = r0.<android.speech.tts.TtsEngines: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r10 = virtualinvoke r4.<java.lang.String: java.lang.String toString()>();

        staticinvoke <android.provider.Settings$Secure: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>($r9, "tts_default_locale", $r10);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r11 := @caughtexception;

        r3 = $r11;

        exitmonitor r0;

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.speech.tts.TtsEngines: java.lang.String XML_TAG_NAME> = "tts-engine";

        <android.speech.tts.TtsEngines: java.lang.String TAG> = "TtsEngines";

        <android.speech.tts.TtsEngines: java.lang.String LOCALE_DELIMITER> = "-";

        <android.speech.tts.TtsEngines: boolean DBG> = 0;

        return;
    }
}
