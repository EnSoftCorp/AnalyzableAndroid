public class android.animation.PropertyValuesHolder extends java.lang.Object implements java.lang.Cloneable
{
    private static java.lang.Class[] DOUBLE_VARIANTS;
    private static java.lang.Class[] FLOAT_VARIANTS;
    private static java.lang.Class[] INTEGER_VARIANTS;
    private static final android.animation.TypeEvaluator sFloatEvaluator;
    private static final java.util.HashMap sGetterPropertyMap;
    private static final android.animation.TypeEvaluator sIntEvaluator;
    private static final java.util.HashMap sSetterPropertyMap;
    private java.lang.Object mAnimatedValue;
    private android.animation.TypeEvaluator mEvaluator;
    private java.lang.reflect.Method mGetter;
    android.animation.KeyframeSet mKeyframeSet;
    protected android.util.Property mProperty;
    final java.util.concurrent.locks.ReentrantReadWriteLock mPropertyMapLock;
    java.lang.String mPropertyName;
    java.lang.reflect.Method mSetter;
    final java.lang.Object[] mTmpValueArray;
    java.lang.Class mValueType;

    static void <clinit>()
    {
        java.lang.Class[] r0, r1, r2;
        android.animation.IntEvaluator $r3;
        android.animation.FloatEvaluator $r4;
        java.lang.Class $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        java.util.HashMap $r14, $r15;

        $r3 = new android.animation.IntEvaluator;

        specialinvoke $r3.<android.animation.IntEvaluator: void <init>()>();

        <android.animation.PropertyValuesHolder: android.animation.TypeEvaluator sIntEvaluator> = $r3;

        $r4 = new android.animation.FloatEvaluator;

        specialinvoke $r4.<android.animation.FloatEvaluator: void <init>()>();

        <android.animation.PropertyValuesHolder: android.animation.TypeEvaluator sFloatEvaluator> = $r4;

        r0 = newarray (java.lang.Class)[6];

        $r5 = <java.lang.Float: java.lang.Class TYPE>;

        r0[0] = $r5;

        r0[1] = class "java/lang/Float";

        $r6 = <java.lang.Double: java.lang.Class TYPE>;

        r0[2] = $r6;

        $r7 = <java.lang.Integer: java.lang.Class TYPE>;

        r0[3] = $r7;

        r0[4] = class "java/lang/Double";

        r0[5] = class "java/lang/Integer";

        <android.animation.PropertyValuesHolder: java.lang.Class[] FLOAT_VARIANTS> = r0;

        r1 = newarray (java.lang.Class)[6];

        $r8 = <java.lang.Integer: java.lang.Class TYPE>;

        r1[0] = $r8;

        r1[1] = class "java/lang/Integer";

        $r9 = <java.lang.Float: java.lang.Class TYPE>;

        r1[2] = $r9;

        $r10 = <java.lang.Double: java.lang.Class TYPE>;

        r1[3] = $r10;

        r1[4] = class "java/lang/Float";

        r1[5] = class "java/lang/Double";

        <android.animation.PropertyValuesHolder: java.lang.Class[] INTEGER_VARIANTS> = r1;

        r2 = newarray (java.lang.Class)[6];

        $r11 = <java.lang.Double: java.lang.Class TYPE>;

        r2[0] = $r11;

        r2[1] = class "java/lang/Double";

        $r12 = <java.lang.Float: java.lang.Class TYPE>;

        r2[2] = $r12;

        $r13 = <java.lang.Integer: java.lang.Class TYPE>;

        r2[3] = $r13;

        r2[4] = class "java/lang/Float";

        r2[5] = class "java/lang/Integer";

        <android.animation.PropertyValuesHolder: java.lang.Class[] DOUBLE_VARIANTS> = r2;

        $r14 = new java.util.HashMap;

        specialinvoke $r14.<java.util.HashMap: void <init>()>();

        <android.animation.PropertyValuesHolder: java.util.HashMap sSetterPropertyMap> = $r14;

        $r15 = new java.util.HashMap;

        specialinvoke $r15.<java.util.HashMap: void <init>()>();

        <android.animation.PropertyValuesHolder: java.util.HashMap sGetterPropertyMap> = $r15;

        return;
    }

    private void <init>(android.util.Property)
    {
        android.animation.PropertyValuesHolder r0;
        android.util.Property r1;
        java.util.concurrent.locks.ReentrantReadWriteLock $r2;
        java.lang.Object[] $r3;
        java.lang.String $r4;

        r0 := @this: android.animation.PropertyValuesHolder;

        r1 := @parameter0: android.util.Property;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.animation.PropertyValuesHolder: java.lang.reflect.Method mSetter> = null;

        r0.<android.animation.PropertyValuesHolder: java.lang.reflect.Method mGetter> = null;

        r0.<android.animation.PropertyValuesHolder: android.animation.KeyframeSet mKeyframeSet> = null;

        $r2 = new java.util.concurrent.locks.ReentrantReadWriteLock;

        specialinvoke $r2.<java.util.concurrent.locks.ReentrantReadWriteLock: void <init>()>();

        r0.<android.animation.PropertyValuesHolder: java.util.concurrent.locks.ReentrantReadWriteLock mPropertyMapLock> = $r2;

        $r3 = newarray (java.lang.Object)[1];

        r0.<android.animation.PropertyValuesHolder: java.lang.Object[] mTmpValueArray> = $r3;

        r0.<android.animation.PropertyValuesHolder: android.util.Property mProperty> = r1;

        if r1 == null goto label1;

        $r4 = virtualinvoke r1.<android.util.Property: java.lang.String getName()>();

        r0.<android.animation.PropertyValuesHolder: java.lang.String mPropertyName> = $r4;

     label1:
        return;
    }

    void <init>(android.util.Property, android.animation.PropertyValuesHolder$1)
    {
        android.animation.PropertyValuesHolder r0;
        android.util.Property r1;
        android.animation.PropertyValuesHolder$1 r2;

        r0 := @this: android.animation.PropertyValuesHolder;

        r1 := @parameter0: android.util.Property;

        r2 := @parameter1: android.animation.PropertyValuesHolder$1;

        specialinvoke r0.<android.animation.PropertyValuesHolder: void <init>(android.util.Property)>(r1);

        return;
    }

    private void <init>(java.lang.String)
    {
        android.animation.PropertyValuesHolder r0;
        java.lang.String r1;
        java.util.concurrent.locks.ReentrantReadWriteLock $r2;
        java.lang.Object[] $r3;

        r0 := @this: android.animation.PropertyValuesHolder;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.animation.PropertyValuesHolder: java.lang.reflect.Method mSetter> = null;

        r0.<android.animation.PropertyValuesHolder: java.lang.reflect.Method mGetter> = null;

        r0.<android.animation.PropertyValuesHolder: android.animation.KeyframeSet mKeyframeSet> = null;

        $r2 = new java.util.concurrent.locks.ReentrantReadWriteLock;

        specialinvoke $r2.<java.util.concurrent.locks.ReentrantReadWriteLock: void <init>()>();

        r0.<android.animation.PropertyValuesHolder: java.util.concurrent.locks.ReentrantReadWriteLock mPropertyMapLock> = $r2;

        $r3 = newarray (java.lang.Object)[1];

        r0.<android.animation.PropertyValuesHolder: java.lang.Object[] mTmpValueArray> = $r3;

        r0.<android.animation.PropertyValuesHolder: java.lang.String mPropertyName> = r1;

        return;
    }

    void <init>(java.lang.String, android.animation.PropertyValuesHolder$1)
    {
        android.animation.PropertyValuesHolder r0;
        java.lang.String r1;
        android.animation.PropertyValuesHolder$1 r2;

        r0 := @this: android.animation.PropertyValuesHolder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.animation.PropertyValuesHolder$1;

        specialinvoke r0.<android.animation.PropertyValuesHolder: void <init>(java.lang.String)>(r1);

        return;
    }

    static void access$200(java.lang.Object, int, int)
    {
        java.lang.Object r0;
        int i0, i1;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        staticinvoke <android.animation.PropertyValuesHolder: void nCallIntMethod(java.lang.Object,int,int)>(r0, i0, i1);

        return;
    }

    static int access$300(java.lang.Class, java.lang.String)
    {
        java.lang.Class r0;
        java.lang.String r1;
        int $i0;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

        $i0 = staticinvoke <android.animation.PropertyValuesHolder: int nGetIntMethod(java.lang.Class,java.lang.String)>(r0, r1);

        return $i0;
    }

    static void access$400(java.lang.Object, int, float)
    {
        java.lang.Object r0;
        int i0;
        float f0;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        f0 := @parameter2: float;

        staticinvoke <android.animation.PropertyValuesHolder: void nCallFloatMethod(java.lang.Object,int,float)>(r0, i0, f0);

        return;
    }

    static int access$500(java.lang.Class, java.lang.String)
    {
        java.lang.Class r0;
        java.lang.String r1;
        int $i0;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

        $i0 = staticinvoke <android.animation.PropertyValuesHolder: int nGetFloatMethod(java.lang.Class,java.lang.String)>(r0, r1);

        return $i0;
    }

    static java.lang.String getMethodName(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2, $r7;
        char c0, $c2;
        int $i1;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r1 == null goto label1;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i1 != 0 goto label2;

     label1:
        return r0;

     label2:
        $c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        c0 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c2);

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    private java.lang.reflect.Method getPropertyFunction(java.lang.Class, java.lang.String, java.lang.Class)
    {
        android.animation.PropertyValuesHolder r0;
        java.lang.Class r1, r3, r9, $r14, $r15, $r16, $r18, $r26;
        java.lang.String r2, r5, $r13, $r20, $r21, $r28;
        java.lang.reflect.Method r4, r12, r31;
        java.lang.Class[] r6, r7, r8;
        int i0, i1;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r17, $r19, $r22, $r23, $r24, $r25, $r27;
        java.lang.NoSuchMethodException $r29, $r30;

        r0 := @this: android.animation.PropertyValuesHolder;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Class;

        r4 = null;

        $r13 = r0.<android.animation.PropertyValuesHolder: java.lang.String mPropertyName>;

        r5 = staticinvoke <android.animation.PropertyValuesHolder: java.lang.String getMethodName(java.lang.String,java.lang.String)>(r2, $r13);

        if r3 != null goto label05;

     label01:
        r12 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r5, null);

     label02:
        r4 = r12;

     label03:
        if r4 != null goto label04;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Method ");

        $r21 = r0.<android.animation.PropertyValuesHolder: java.lang.String mPropertyName>;

        $r20 = staticinvoke <android.animation.PropertyValuesHolder: java.lang.String getMethodName(java.lang.String,java.lang.String)>(r2, $r21);

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("() with type ");

        $r26 = r0.<android.animation.PropertyValuesHolder: java.lang.Class mValueType>;

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);

        $r24 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found on target class ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PropertyValuesHolder", $r28);

     label04:
        return r4;

     label05:
        r6 = newarray (java.lang.Class)[1];

        $r14 = r0.<android.animation.PropertyValuesHolder: java.lang.Class mValueType>;

        $z0 = virtualinvoke $r14.<java.lang.Object: boolean equals(java.lang.Object)>(class "java/lang/Float");

        if $z0 == 0 goto label10;

        r7 = <android.animation.PropertyValuesHolder: java.lang.Class[] FLOAT_VARIANTS>;

     label06:
        r8 = r7;

        i0 = lengthof r8;

        i1 = 0;

     label07:
        if i1 >= i0 goto label03;

        r9 = r8[i1];

        r6[0] = r9;

     label08:
        r31 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r5, r6);

        r0.<android.animation.PropertyValuesHolder: java.lang.Class mValueType> = r9;

     label09:
        return r31;

     label10:
        $r15 = r0.<android.animation.PropertyValuesHolder: java.lang.Class mValueType>;

        $z1 = virtualinvoke $r15.<java.lang.Object: boolean equals(java.lang.Object)>(class "java/lang/Integer");

        if $z1 == 0 goto label11;

        r7 = <android.animation.PropertyValuesHolder: java.lang.Class[] INTEGER_VARIANTS>;

        goto label06;

     label11:
        $r16 = r0.<android.animation.PropertyValuesHolder: java.lang.Class mValueType>;

        $z2 = virtualinvoke $r16.<java.lang.Object: boolean equals(java.lang.Object)>(class "java/lang/Double");

        if $z2 == 0 goto label12;

        r7 = <android.animation.PropertyValuesHolder: java.lang.Class[] DOUBLE_VARIANTS>;

        goto label06;

     label12:
        r7 = newarray (java.lang.Class)[1];

        $r18 = r0.<android.animation.PropertyValuesHolder: java.lang.Class mValueType>;

        r7[0] = $r18;

        goto label06;

     label13:
        $r30 := @caughtexception;

        i1 = i1 + 1;

        goto label07;

     label14:
        $r29 := @caughtexception;

        r4 = null;

        goto label03;

        catch java.lang.NoSuchMethodException from label01 to label02 with label14;
        catch java.lang.NoSuchMethodException from label08 to label09 with label13;
    }

    private static native void nCallFloatMethod(java.lang.Object, int, float);

    private static native void nCallIntMethod(java.lang.Object, int, int);

    private static native int nGetFloatMethod(java.lang.Class, java.lang.String);

    private static native int nGetIntMethod(java.lang.Class, java.lang.String);

    public static transient android.animation.PropertyValuesHolder ofFloat(android.util.Property, float[])
    {
        android.util.Property r0;
        float[] r1;
        android.animation.PropertyValuesHolder$FloatPropertyValuesHolder $r2;

        r0 := @parameter0: android.util.Property;

        r1 := @parameter1: float[];

        $r2 = new android.animation.PropertyValuesHolder$FloatPropertyValuesHolder;

        specialinvoke $r2.<android.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void <init>(android.util.Property,float[])>(r0, r1);

        return $r2;
    }

    public static transient android.animation.PropertyValuesHolder ofFloat(java.lang.String, float[])
    {
        java.lang.String r0;
        float[] r1;
        android.animation.PropertyValuesHolder$FloatPropertyValuesHolder $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: float[];

        $r2 = new android.animation.PropertyValuesHolder$FloatPropertyValuesHolder;

        specialinvoke $r2.<android.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void <init>(java.lang.String,float[])>(r0, r1);

        return $r2;
    }

    public static transient android.animation.PropertyValuesHolder ofInt(android.util.Property, int[])
    {
        android.util.Property r0;
        int[] r1;
        android.animation.PropertyValuesHolder$IntPropertyValuesHolder $r2;

        r0 := @parameter0: android.util.Property;

        r1 := @parameter1: int[];

        $r2 = new android.animation.PropertyValuesHolder$IntPropertyValuesHolder;

        specialinvoke $r2.<android.animation.PropertyValuesHolder$IntPropertyValuesHolder: void <init>(android.util.Property,int[])>(r0, r1);

        return $r2;
    }

    public static transient android.animation.PropertyValuesHolder ofInt(java.lang.String, int[])
    {
        java.lang.String r0;
        int[] r1;
        android.animation.PropertyValuesHolder$IntPropertyValuesHolder $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: int[];

        $r2 = new android.animation.PropertyValuesHolder$IntPropertyValuesHolder;

        specialinvoke $r2.<android.animation.PropertyValuesHolder$IntPropertyValuesHolder: void <init>(java.lang.String,int[])>(r0, r1);

        return $r2;
    }

    public static transient android.animation.PropertyValuesHolder ofKeyframe(android.util.Property, android.animation.Keyframe[])
    {
        android.util.Property r0;
        android.animation.Keyframe[] r1;
        android.animation.KeyframeSet r2;
        android.animation.PropertyValuesHolder r3, $r4;
        boolean $z0, $z1;
        android.animation.Keyframe $r5;
        java.lang.Class $r6;
        android.animation.PropertyValuesHolder$FloatPropertyValuesHolder $r7;
        android.animation.FloatKeyframeSet $r8;
        android.animation.PropertyValuesHolder$IntPropertyValuesHolder $r9;
        android.animation.IntKeyframeSet $r10;

        r0 := @parameter0: android.util.Property;

        r1 := @parameter1: android.animation.Keyframe[];

        r2 = staticinvoke <android.animation.KeyframeSet: android.animation.KeyframeSet ofKeyframe(android.animation.Keyframe[])>(r1);

        $z0 = r2 instanceof android.animation.IntKeyframeSet;

        if $z0 == 0 goto label1;

        $r9 = new android.animation.PropertyValuesHolder$IntPropertyValuesHolder;

        $r10 = (android.animation.IntKeyframeSet) r2;

        specialinvoke $r9.<android.animation.PropertyValuesHolder$IntPropertyValuesHolder: void <init>(android.util.Property,android.animation.IntKeyframeSet)>(r0, $r10);

        return $r9;

     label1:
        $z1 = r2 instanceof android.animation.FloatKeyframeSet;

        if $z1 == 0 goto label2;

        $r7 = new android.animation.PropertyValuesHolder$FloatPropertyValuesHolder;

        $r8 = (android.animation.FloatKeyframeSet) r2;

        specialinvoke $r7.<android.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void <init>(android.util.Property,android.animation.FloatKeyframeSet)>(r0, $r8);

        return $r7;

     label2:
        $r4 = new android.animation.PropertyValuesHolder;

        specialinvoke $r4.<android.animation.PropertyValuesHolder: void <init>(android.util.Property)>(r0);

        r3 = $r4;

        r3.<android.animation.PropertyValuesHolder: android.animation.KeyframeSet mKeyframeSet> = r2;

        $r5 = r1[0];

        $r6 = virtualinvoke $r5.<android.animation.Keyframe: java.lang.Class getType()>();

        r3.<android.animation.PropertyValuesHolder: java.lang.Class mValueType> = $r6;

        return r3;
    }

    public static transient android.animation.PropertyValuesHolder ofKeyframe(java.lang.String, android.animation.Keyframe[])
    {
        java.lang.String r0;
        android.animation.Keyframe[] r1;
        android.animation.KeyframeSet r2;
        android.animation.PropertyValuesHolder r3, $r4;
        boolean $z0, $z1;
        android.animation.Keyframe $r5;
        java.lang.Class $r6;
        android.animation.PropertyValuesHolder$FloatPropertyValuesHolder $r7;
        android.animation.FloatKeyframeSet $r8;
        android.animation.PropertyValuesHolder$IntPropertyValuesHolder $r9;
        android.animation.IntKeyframeSet $r10;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.animation.Keyframe[];

        r2 = staticinvoke <android.animation.KeyframeSet: android.animation.KeyframeSet ofKeyframe(android.animation.Keyframe[])>(r1);

        $z0 = r2 instanceof android.animation.IntKeyframeSet;

        if $z0 == 0 goto label1;

        $r9 = new android.animation.PropertyValuesHolder$IntPropertyValuesHolder;

        $r10 = (android.animation.IntKeyframeSet) r2;

        specialinvoke $r9.<android.animation.PropertyValuesHolder$IntPropertyValuesHolder: void <init>(java.lang.String,android.animation.IntKeyframeSet)>(r0, $r10);

        return $r9;

     label1:
        $z1 = r2 instanceof android.animation.FloatKeyframeSet;

        if $z1 == 0 goto label2;

        $r7 = new android.animation.PropertyValuesHolder$FloatPropertyValuesHolder;

        $r8 = (android.animation.FloatKeyframeSet) r2;

        specialinvoke $r7.<android.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void <init>(java.lang.String,android.animation.FloatKeyframeSet)>(r0, $r8);

        return $r7;

     label2:
        $r4 = new android.animation.PropertyValuesHolder;

        specialinvoke $r4.<android.animation.PropertyValuesHolder: void <init>(java.lang.String)>(r0);

        r3 = $r4;

        r3.<android.animation.PropertyValuesHolder: android.animation.KeyframeSet mKeyframeSet> = r2;

        $r5 = r1[0];

        $r6 = virtualinvoke $r5.<android.animation.Keyframe: java.lang.Class getType()>();

        r3.<android.animation.PropertyValuesHolder: java.lang.Class mValueType> = $r6;

        return r3;
    }

    public static transient android.animation.PropertyValuesHolder ofObject(android.util.Property, android.animation.TypeEvaluator, java.lang.Object[])
    {
        android.util.Property r0;
        android.animation.TypeEvaluator r1;
        java.lang.Object[] r2;
        android.animation.PropertyValuesHolder r3, $r4;

        r0 := @parameter0: android.util.Property;

        r1 := @parameter1: android.animation.TypeEvaluator;

        r2 := @parameter2: java.lang.Object[];

        $r4 = new android.animation.PropertyValuesHolder;

        specialinvoke $r4.<android.animation.PropertyValuesHolder: void <init>(android.util.Property)>(r0);

        r3 = $r4;

        virtualinvoke r3.<android.animation.PropertyValuesHolder: void setObjectValues(java.lang.Object[])>(r2);

        virtualinvoke r3.<android.animation.PropertyValuesHolder: void setEvaluator(android.animation.TypeEvaluator)>(r1);

        return r3;
    }

    public static transient android.animation.PropertyValuesHolder ofObject(java.lang.String, android.animation.TypeEvaluator, java.lang.Object[])
    {
        java.lang.String r0;
        android.animation.TypeEvaluator r1;
        java.lang.Object[] r2;
        android.animation.PropertyValuesHolder r3, $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.animation.TypeEvaluator;

        r2 := @parameter2: java.lang.Object[];

        $r4 = new android.animation.PropertyValuesHolder;

        specialinvoke $r4.<android.animation.PropertyValuesHolder: void <init>(java.lang.String)>(r0);

        r3 = $r4;

        virtualinvoke r3.<android.animation.PropertyValuesHolder: void setObjectValues(java.lang.Object[])>(r2);

        virtualinvoke r3.<android.animation.PropertyValuesHolder: void setEvaluator(android.animation.TypeEvaluator)>(r1);

        return r3;
    }

    private void setupGetter(java.lang.Class)
    {
        android.animation.PropertyValuesHolder r0;
        java.lang.Class r1;
        java.util.HashMap $r2;
        java.lang.reflect.Method $r3;

        r0 := @this: android.animation.PropertyValuesHolder;

        r1 := @parameter0: java.lang.Class;

        $r2 = <android.animation.PropertyValuesHolder: java.util.HashMap sGetterPropertyMap>;

        $r3 = specialinvoke r0.<android.animation.PropertyValuesHolder: java.lang.reflect.Method setupSetterOrGetter(java.lang.Class,java.util.HashMap,java.lang.String,java.lang.Class)>(r1, $r2, "get", null);

        r0.<android.animation.PropertyValuesHolder: java.lang.reflect.Method mGetter> = $r3;

        return;
    }

    private java.lang.reflect.Method setupSetterOrGetter(java.lang.Class, java.util.HashMap, java.lang.String, java.lang.Class)
    {
        android.animation.PropertyValuesHolder r0;
        java.lang.Class r1, r4;
        java.util.HashMap r2, r6, $r16;
        java.lang.String r3, $r13, $r18;
        java.lang.Throwable r5, $r20;
        java.lang.reflect.Method r7;
        java.util.concurrent.locks.ReentrantReadWriteLock $r8, $r11, $r19;
        java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock $r9, $r12, $r21;
        java.lang.Object $r10, $r17;

        r0 := @this: android.animation.PropertyValuesHolder;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.util.HashMap;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Class;

     label01:
        $r8 = r0.<android.animation.PropertyValuesHolder: java.util.concurrent.locks.ReentrantReadWriteLock mPropertyMapLock>;

        $r9 = virtualinvoke $r8.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock()>();

        virtualinvoke $r9.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void lock()>();

        $r10 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r6 = (java.util.HashMap) $r10;

     label02:
        r7 = null;

        if r6 == null goto label04;

     label03:
        $r18 = r0.<android.animation.PropertyValuesHolder: java.lang.String mPropertyName>;

        $r17 = virtualinvoke r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r18);

        r7 = (java.lang.reflect.Method) $r17;

     label04:
        if r7 != null goto label09;

     label05:
        r7 = specialinvoke r0.<android.animation.PropertyValuesHolder: java.lang.reflect.Method getPropertyFunction(java.lang.Class,java.lang.String,java.lang.Class)>(r1, r3, r4);

     label06:
        if r6 != null goto label08;

     label07:
        $r16 = new java.util.HashMap;

        specialinvoke $r16.<java.util.HashMap: void <init>()>();

        r6 = $r16;

        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r6);

     label08:
        $r13 = r0.<android.animation.PropertyValuesHolder: java.lang.String mPropertyName>;

        virtualinvoke r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, r7);

     label09:
        $r11 = r0.<android.animation.PropertyValuesHolder: java.util.concurrent.locks.ReentrantReadWriteLock mPropertyMapLock>;

        $r12 = virtualinvoke $r11.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock()>();

        virtualinvoke $r12.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void unlock()>();

        return r7;

     label10:
        $r20 := @caughtexception;

        r5 = $r20;

        $r19 = r0.<android.animation.PropertyValuesHolder: java.util.concurrent.locks.ReentrantReadWriteLock mPropertyMapLock>;

        $r21 = virtualinvoke $r19.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock()>();

        virtualinvoke $r21.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void unlock()>();

        throw r5;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    private void setupValue(java.lang.Object, android.animation.Keyframe)
    {
        android.animation.PropertyValuesHolder r0;
        java.lang.Object r1, $r9, $r13;
        android.animation.Keyframe r2;
        java.lang.IllegalAccessException r3, $r16;
        java.lang.reflect.InvocationTargetException r4, $r14;
        android.util.Property $r5, $r12;
        java.lang.reflect.Method $r6, $r8, $r11;
        java.lang.Object[] $r7;
        java.lang.Class $r10;
        java.lang.String $r15, $r17;

        r0 := @this: android.animation.PropertyValuesHolder;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: android.animation.Keyframe;

        $r5 = r0.<android.animation.PropertyValuesHolder: android.util.Property mProperty>;

        if $r5 == null goto label1;

        $r12 = r0.<android.animation.PropertyValuesHolder: android.util.Property mProperty>;

        $r13 = virtualinvoke $r12.<android.util.Property: java.lang.Object get(java.lang.Object)>(r1);

        virtualinvoke r2.<android.animation.Keyframe: void setValue(java.lang.Object)>($r13);

     label1:
        $r6 = r0.<android.animation.PropertyValuesHolder: java.lang.reflect.Method mGetter>;

        if $r6 != null goto label3;

        $r10 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        specialinvoke r0.<android.animation.PropertyValuesHolder: void setupGetter(java.lang.Class)>($r10);

        $r11 = r0.<android.animation.PropertyValuesHolder: java.lang.reflect.Method mGetter>;

        if $r11 != null goto label3;

     label2:
        return;

     label3:
        $r8 = r0.<android.animation.PropertyValuesHolder: java.lang.reflect.Method mGetter>;

        $r7 = newarray (java.lang.Object)[0];

        $r9 = virtualinvoke $r8.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r7);

        virtualinvoke r2.<android.animation.Keyframe: void setValue(java.lang.Object)>($r9);

     label4:
        return;

     label5:
        $r14 := @caughtexception;

        r4 = $r14;

        $r15 = virtualinvoke r4.<java.lang.reflect.InvocationTargetException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PropertyValuesHolder", $r15);

        return;

     label6:
        $r16 := @caughtexception;

        r3 = $r16;

        $r17 = virtualinvoke r3.<java.lang.IllegalAccessException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PropertyValuesHolder", $r17);

        return;

        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label5;
        catch java.lang.IllegalAccessException from label1 to label2 with label6;
        catch java.lang.reflect.InvocationTargetException from label3 to label4 with label5;
        catch java.lang.IllegalAccessException from label3 to label4 with label6;
    }

    void calculateValue(float)
    {
        android.animation.PropertyValuesHolder r0;
        float f0;
        android.animation.KeyframeSet $r1;
        java.lang.Object $r2;

        r0 := @this: android.animation.PropertyValuesHolder;

        f0 := @parameter0: float;

        $r1 = r0.<android.animation.PropertyValuesHolder: android.animation.KeyframeSet mKeyframeSet>;

        $r2 = virtualinvoke $r1.<android.animation.KeyframeSet: java.lang.Object getValue(float)>(f0);

        r0.<android.animation.PropertyValuesHolder: java.lang.Object mAnimatedValue> = $r2;

        return;
    }

    public android.animation.PropertyValuesHolder clone()
    {
        android.animation.PropertyValuesHolder r0, r2;
        java.lang.Object $r3;
        java.lang.String $r4;
        android.util.Property $r5;
        android.animation.KeyframeSet $r6, $r7;
        android.animation.TypeEvaluator $r8;
        java.lang.CloneNotSupportedException $r9;

        r0 := @this: android.animation.PropertyValuesHolder;

     label1:
        $r3 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r2 = (android.animation.PropertyValuesHolder) $r3;

        $r4 = r0.<android.animation.PropertyValuesHolder: java.lang.String mPropertyName>;

        r2.<android.animation.PropertyValuesHolder: java.lang.String mPropertyName> = $r4;

        $r5 = r0.<android.animation.PropertyValuesHolder: android.util.Property mProperty>;

        r2.<android.animation.PropertyValuesHolder: android.util.Property mProperty> = $r5;

        $r6 = r0.<android.animation.PropertyValuesHolder: android.animation.KeyframeSet mKeyframeSet>;

        $r7 = virtualinvoke $r6.<android.animation.KeyframeSet: android.animation.KeyframeSet clone()>();

        r2.<android.animation.PropertyValuesHolder: android.animation.KeyframeSet mKeyframeSet> = $r7;

        $r8 = r0.<android.animation.PropertyValuesHolder: android.animation.TypeEvaluator mEvaluator>;

        r2.<android.animation.PropertyValuesHolder: android.animation.TypeEvaluator mEvaluator> = $r8;

     label2:
        return r2;

     label3:
        $r9 := @caughtexception;

        return null;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        android.animation.PropertyValuesHolder r0, $r1;

        r0 := @this: android.animation.PropertyValuesHolder;

        $r1 = virtualinvoke r0.<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>();

        return $r1;
    }

    java.lang.Object getAnimatedValue()
    {
        android.animation.PropertyValuesHolder r0;
        java.lang.Object $r1;

        r0 := @this: android.animation.PropertyValuesHolder;

        $r1 = r0.<android.animation.PropertyValuesHolder: java.lang.Object mAnimatedValue>;

        return $r1;
    }

    public java.lang.String getPropertyName()
    {
        android.animation.PropertyValuesHolder r0;
        java.lang.String $r1;

        r0 := @this: android.animation.PropertyValuesHolder;

        $r1 = r0.<android.animation.PropertyValuesHolder: java.lang.String mPropertyName>;

        return $r1;
    }

    void init()
    {
        android.animation.PropertyValuesHolder r0;
        android.animation.TypeEvaluator r1, $r2, $r3, $r4;
        android.animation.KeyframeSet $r5;
        java.lang.Class $r6, $r7;

        r0 := @this: android.animation.PropertyValuesHolder;

        $r2 = r0.<android.animation.PropertyValuesHolder: android.animation.TypeEvaluator mEvaluator>;

        if $r2 != null goto label2;

        $r6 = r0.<android.animation.PropertyValuesHolder: java.lang.Class mValueType>;

        if $r6 != class "java/lang/Integer" goto label4;

        r1 = <android.animation.PropertyValuesHolder: android.animation.TypeEvaluator sIntEvaluator>;

     label1:
        r0.<android.animation.PropertyValuesHolder: android.animation.TypeEvaluator mEvaluator> = r1;

     label2:
        $r3 = r0.<android.animation.PropertyValuesHolder: android.animation.TypeEvaluator mEvaluator>;

        if $r3 == null goto label3;

        $r5 = r0.<android.animation.PropertyValuesHolder: android.animation.KeyframeSet mKeyframeSet>;

        $r4 = r0.<android.animation.PropertyValuesHolder: android.animation.TypeEvaluator mEvaluator>;

        virtualinvoke $r5.<android.animation.KeyframeSet: void setEvaluator(android.animation.TypeEvaluator)>($r4);

     label3:
        return;

     label4:
        $r7 = r0.<android.animation.PropertyValuesHolder: java.lang.Class mValueType>;

        if $r7 != class "java/lang/Float" goto label5;

        r1 = <android.animation.PropertyValuesHolder: android.animation.TypeEvaluator sFloatEvaluator>;

        goto label1;

     label5:
        r1 = null;

        goto label1;
    }

    void setAnimatedValue(java.lang.Object)
    {
        android.animation.PropertyValuesHolder r0;
        java.lang.Object r1, $r7, $r12;
        java.lang.IllegalAccessException r2, $r13;
        java.lang.reflect.InvocationTargetException r3, $r15;
        android.util.Property $r4, $r11;
        java.lang.reflect.Method $r5, $r9;
        java.lang.Object[] $r6, $r8;
        java.lang.String $r14, $r16;

        r0 := @this: android.animation.PropertyValuesHolder;

        r1 := @parameter0: java.lang.Object;

        $r4 = r0.<android.animation.PropertyValuesHolder: android.util.Property mProperty>;

        if $r4 == null goto label1;

        $r11 = r0.<android.animation.PropertyValuesHolder: android.util.Property mProperty>;

        $r12 = virtualinvoke r0.<android.animation.PropertyValuesHolder: java.lang.Object getAnimatedValue()>();

        virtualinvoke $r11.<android.util.Property: void set(java.lang.Object,java.lang.Object)>(r1, $r12);

     label1:
        $r5 = r0.<android.animation.PropertyValuesHolder: java.lang.reflect.Method mSetter>;

        if $r5 == null goto label3;

     label2:
        $r6 = r0.<android.animation.PropertyValuesHolder: java.lang.Object[] mTmpValueArray>;

        $r7 = virtualinvoke r0.<android.animation.PropertyValuesHolder: java.lang.Object getAnimatedValue()>();

        $r6[0] = $r7;

        $r9 = r0.<android.animation.PropertyValuesHolder: java.lang.reflect.Method mSetter>;

        $r8 = r0.<android.animation.PropertyValuesHolder: java.lang.Object[] mTmpValueArray>;

        virtualinvoke $r9.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r8);

     label3:
        return;

     label4:
        $r15 := @caughtexception;

        r3 = $r15;

        $r16 = virtualinvoke r3.<java.lang.reflect.InvocationTargetException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PropertyValuesHolder", $r16);

        return;

     label5:
        $r13 := @caughtexception;

        r2 = $r13;

        $r14 = virtualinvoke r2.<java.lang.IllegalAccessException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PropertyValuesHolder", $r14);

        return;

        catch java.lang.reflect.InvocationTargetException from label2 to label3 with label4;
        catch java.lang.IllegalAccessException from label2 to label3 with label5;
    }

    public void setEvaluator(android.animation.TypeEvaluator)
    {
        android.animation.PropertyValuesHolder r0;
        android.animation.TypeEvaluator r1;
        android.animation.KeyframeSet $r2;

        r0 := @this: android.animation.PropertyValuesHolder;

        r1 := @parameter0: android.animation.TypeEvaluator;

        r0.<android.animation.PropertyValuesHolder: android.animation.TypeEvaluator mEvaluator> = r1;

        $r2 = r0.<android.animation.PropertyValuesHolder: android.animation.KeyframeSet mKeyframeSet>;

        virtualinvoke $r2.<android.animation.KeyframeSet: void setEvaluator(android.animation.TypeEvaluator)>(r1);

        return;
    }

    public transient void setFloatValues(float[])
    {
        android.animation.PropertyValuesHolder r0;
        float[] r1;
        java.lang.Class $r2;
        android.animation.KeyframeSet $r3;

        r0 := @this: android.animation.PropertyValuesHolder;

        r1 := @parameter0: float[];

        $r2 = <java.lang.Float: java.lang.Class TYPE>;

        r0.<android.animation.PropertyValuesHolder: java.lang.Class mValueType> = $r2;

        $r3 = staticinvoke <android.animation.KeyframeSet: android.animation.KeyframeSet ofFloat(float[])>(r1);

        r0.<android.animation.PropertyValuesHolder: android.animation.KeyframeSet mKeyframeSet> = $r3;

        return;
    }

    public transient void setIntValues(int[])
    {
        android.animation.PropertyValuesHolder r0;
        int[] r1;
        java.lang.Class $r2;
        android.animation.KeyframeSet $r3;

        r0 := @this: android.animation.PropertyValuesHolder;

        r1 := @parameter0: int[];

        $r2 = <java.lang.Integer: java.lang.Class TYPE>;

        r0.<android.animation.PropertyValuesHolder: java.lang.Class mValueType> = $r2;

        $r3 = staticinvoke <android.animation.KeyframeSet: android.animation.KeyframeSet ofInt(int[])>(r1);

        r0.<android.animation.PropertyValuesHolder: android.animation.KeyframeSet mKeyframeSet> = $r3;

        return;
    }

    public transient void setKeyframes(android.animation.Keyframe[])
    {
        android.animation.PropertyValuesHolder r0;
        android.animation.Keyframe[] r1, r2;
        int i0, i1, $i2;
        android.animation.Keyframe $r3, $r6;
        java.lang.Class $r4;
        android.animation.KeyframeSet $r5;

        r0 := @this: android.animation.PropertyValuesHolder;

        r1 := @parameter0: android.animation.Keyframe[];

        i0 = lengthof r1;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(i0, 2);

        r2 = newarray (android.animation.Keyframe)[$i2];

        $r3 = r1[0];

        $r4 = virtualinvoke $r3.<android.animation.Keyframe: java.lang.Class getType()>();

        r0.<android.animation.PropertyValuesHolder: java.lang.Class mValueType> = $r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r6 = r1[i1];

        r2[i1] = $r6;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r5 = new android.animation.KeyframeSet;

        specialinvoke $r5.<android.animation.KeyframeSet: void <init>(android.animation.Keyframe[])>(r2);

        r0.<android.animation.PropertyValuesHolder: android.animation.KeyframeSet mKeyframeSet> = $r5;

        return;
    }

    public transient void setObjectValues(java.lang.Object[])
    {
        android.animation.PropertyValuesHolder r0;
        java.lang.Object[] r1;
        java.lang.Object $r2;
        java.lang.Class $r3;
        android.animation.KeyframeSet $r4;

        r0 := @this: android.animation.PropertyValuesHolder;

        r1 := @parameter0: java.lang.Object[];

        $r2 = r1[0];

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        r0.<android.animation.PropertyValuesHolder: java.lang.Class mValueType> = $r3;

        $r4 = staticinvoke <android.animation.KeyframeSet: android.animation.KeyframeSet ofObject(java.lang.Object[])>(r1);

        r0.<android.animation.PropertyValuesHolder: android.animation.KeyframeSet mKeyframeSet> = $r4;

        return;
    }

    public void setProperty(android.util.Property)
    {
        android.animation.PropertyValuesHolder r0;
        android.util.Property r1;

        r0 := @this: android.animation.PropertyValuesHolder;

        r1 := @parameter0: android.util.Property;

        r0.<android.animation.PropertyValuesHolder: android.util.Property mProperty> = r1;

        return;
    }

    public void setPropertyName(java.lang.String)
    {
        android.animation.PropertyValuesHolder r0;
        java.lang.String r1;

        r0 := @this: android.animation.PropertyValuesHolder;

        r1 := @parameter0: java.lang.String;

        r0.<android.animation.PropertyValuesHolder: java.lang.String mPropertyName> = r1;

        return;
    }

    void setupEndValue(java.lang.Object)
    {
        android.animation.PropertyValuesHolder r0;
        java.lang.Object r1, $r6;
        android.animation.KeyframeSet $r2, $r3;
        java.util.ArrayList $r4, $r5;
        int $i0, $i1;
        android.animation.Keyframe $r7;

        r0 := @this: android.animation.PropertyValuesHolder;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<android.animation.PropertyValuesHolder: android.animation.KeyframeSet mKeyframeSet>;

        $r5 = $r2.<android.animation.KeyframeSet: java.util.ArrayList mKeyframes>;

        $r3 = r0.<android.animation.PropertyValuesHolder: android.animation.KeyframeSet mKeyframeSet>;

        $r4 = $r3.<android.animation.KeyframeSet: java.util.ArrayList mKeyframes>;

        $i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $i1 = -1 + $i0;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r7 = (android.animation.Keyframe) $r6;

        specialinvoke r0.<android.animation.PropertyValuesHolder: void setupValue(java.lang.Object,android.animation.Keyframe)>(r1, $r7);

        return;
    }

    void setupSetter(java.lang.Class)
    {
        android.animation.PropertyValuesHolder r0;
        java.lang.Class r1, $r2;
        java.util.HashMap $r3;
        java.lang.reflect.Method $r4;

        r0 := @this: android.animation.PropertyValuesHolder;

        r1 := @parameter0: java.lang.Class;

        $r3 = <android.animation.PropertyValuesHolder: java.util.HashMap sSetterPropertyMap>;

        $r2 = r0.<android.animation.PropertyValuesHolder: java.lang.Class mValueType>;

        $r4 = specialinvoke r0.<android.animation.PropertyValuesHolder: java.lang.reflect.Method setupSetterOrGetter(java.lang.Class,java.util.HashMap,java.lang.String,java.lang.Class)>(r1, $r3, "set", $r2);

        r0.<android.animation.PropertyValuesHolder: java.lang.reflect.Method mSetter> = $r4;

        return;
    }

    void setupSetterAndGetter(java.lang.Object)
    {
        android.animation.PropertyValuesHolder r0;
        java.lang.Object r1, $r14, $r19, $r24, $r28;
        java.lang.Class r2;
        java.util.Iterator r3, r8;
        android.animation.Keyframe r4, r9;
        java.lang.IllegalAccessException r5, $r38;
        java.lang.reflect.InvocationTargetException r6, $r36;
        android.util.Property $r10, $r21, $r27, $r29;
        android.animation.KeyframeSet $r11, $r23;
        java.lang.reflect.Method $r12, $r15, $r16, $r18;
        java.util.ArrayList $r13, $r22;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object[] $r17;
        java.lang.ClassCastException $r25;
        java.lang.StringBuilder $r26, $r31, $r32, $r33, $r34, $r35;
        java.lang.String $r30, $r37, $r39, $r40;

        r0 := @this: android.animation.PropertyValuesHolder;

        r1 := @parameter0: java.lang.Object;

        $r10 = r0.<android.animation.PropertyValuesHolder: android.util.Property mProperty>;

        if $r10 == null goto label05;

     label01:
        $r21 = r0.<android.animation.PropertyValuesHolder: android.util.Property mProperty>;

        virtualinvoke $r21.<android.util.Property: java.lang.Object get(java.lang.Object)>(r1);

        $r23 = r0.<android.animation.PropertyValuesHolder: android.animation.KeyframeSet mKeyframeSet>;

        $r22 = $r23.<android.animation.KeyframeSet: java.util.ArrayList mKeyframes>;

        r8 = virtualinvoke $r22.<java.util.ArrayList: java.util.Iterator iterator()>();

     label02:
        $z3 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label08;

        $r24 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r9 = (android.animation.Keyframe) $r24;

        $z2 = virtualinvoke r9.<android.animation.Keyframe: boolean hasValue()>();

        if $z2 != 0 goto label02;

        $r27 = r0.<android.animation.PropertyValuesHolder: android.util.Property mProperty>;

        $r28 = virtualinvoke $r27.<android.util.Property: java.lang.Object get(java.lang.Object)>(r1);

        virtualinvoke r9.<android.animation.Keyframe: void setValue(java.lang.Object)>($r28);

     label03:
        goto label02;

     label04:
        $r25 := @caughtexception;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No such property (");

        $r29 = r0.<android.animation.PropertyValuesHolder: android.util.Property mProperty>;

        $r30 = virtualinvoke $r29.<android.util.Property: java.lang.String getName()>();

        $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") on target object ");

        $r32 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Trying reflection instead");

        $r37 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PropertyValuesHolder", $r37);

        r0.<android.animation.PropertyValuesHolder: android.util.Property mProperty> = null;

     label05:
        r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = r0.<android.animation.PropertyValuesHolder: java.lang.reflect.Method mSetter>;

        if $r12 != null goto label06;

        virtualinvoke r0.<android.animation.PropertyValuesHolder: void setupSetter(java.lang.Class)>(r2);

     label06:
        $r11 = r0.<android.animation.PropertyValuesHolder: android.animation.KeyframeSet mKeyframeSet>;

        $r13 = $r11.<android.animation.KeyframeSet: java.util.ArrayList mKeyframes>;

        r3 = virtualinvoke $r13.<java.util.ArrayList: java.util.Iterator iterator()>();

     label07:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r14 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.animation.Keyframe) $r14;

        $z1 = virtualinvoke r4.<android.animation.Keyframe: boolean hasValue()>();

        if $z1 != 0 goto label07;

        $r15 = r0.<android.animation.PropertyValuesHolder: java.lang.reflect.Method mGetter>;

        if $r15 != null goto label09;

        specialinvoke r0.<android.animation.PropertyValuesHolder: void setupGetter(java.lang.Class)>(r2);

        $r18 = r0.<android.animation.PropertyValuesHolder: java.lang.reflect.Method mGetter>;

        if $r18 != null goto label09;

     label08:
        return;

     label09:
        $r16 = r0.<android.animation.PropertyValuesHolder: java.lang.reflect.Method mGetter>;

        $r17 = newarray (java.lang.Object)[0];

        $r19 = virtualinvoke $r16.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r17);

        virtualinvoke r4.<android.animation.Keyframe: void setValue(java.lang.Object)>($r19);

     label10:
        goto label07;

     label11:
        $r36 := @caughtexception;

        r6 = $r36;

        $r39 = virtualinvoke r6.<java.lang.reflect.InvocationTargetException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PropertyValuesHolder", $r39);

        goto label07;

     label12:
        $r38 := @caughtexception;

        r5 = $r38;

        $r40 = virtualinvoke r5.<java.lang.IllegalAccessException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PropertyValuesHolder", $r40);

        goto label07;

        catch java.lang.ClassCastException from label01 to label02 with label04;
        catch java.lang.ClassCastException from label02 to label03 with label04;
        catch java.lang.reflect.InvocationTargetException from label09 to label10 with label11;
        catch java.lang.IllegalAccessException from label09 to label10 with label12;
    }

    void setupStartValue(java.lang.Object)
    {
        android.animation.PropertyValuesHolder r0;
        java.lang.Object r1, $r4;
        android.animation.KeyframeSet $r2;
        java.util.ArrayList $r3;
        android.animation.Keyframe $r5;

        r0 := @this: android.animation.PropertyValuesHolder;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<android.animation.PropertyValuesHolder: android.animation.KeyframeSet mKeyframeSet>;

        $r3 = $r2.<android.animation.KeyframeSet: java.util.ArrayList mKeyframes>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r5 = (android.animation.Keyframe) $r4;

        specialinvoke r0.<android.animation.PropertyValuesHolder: void setupValue(java.lang.Object,android.animation.Keyframe)>(r1, $r5);

        return;
    }

    public java.lang.String toString()
    {
        android.animation.PropertyValuesHolder r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r7;
        java.lang.String $r2, $r6, $r8;
        android.animation.KeyframeSet $r5;

        r0 := @this: android.animation.PropertyValuesHolder;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<android.animation.PropertyValuesHolder: java.lang.String mPropertyName>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r5 = r0.<android.animation.PropertyValuesHolder: android.animation.KeyframeSet mKeyframeSet>;

        $r6 = virtualinvoke $r5.<android.animation.KeyframeSet: java.lang.String toString()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }
}
