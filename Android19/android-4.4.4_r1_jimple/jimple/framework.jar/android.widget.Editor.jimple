public class android.widget.Editor extends java.lang.Object
{
    static final int BLINK;
    static final boolean DEBUG_UNDO;
    private static int DRAG_SHADOW_MAX_TEXT_LENGTH;
    static final int EXTRACT_NOTHING;
    static final int EXTRACT_UNKNOWN;
    private static final java.lang.String TAG;
    private static final float[] TEMP_POSITION;
    android.widget.Editor$Blink mBlink;
    android.widget.Editor$CorrectionHighlighter mCorrectionHighlighter;
    boolean mCreatedWithASelection;
    int mCursorCount;
    final android.graphics.drawable.Drawable[] mCursorDrawable;
    boolean mCursorVisible;
    android.view.ActionMode$Callback mCustomSelectionActionModeCallback;
    boolean mDiscardNextActionUp;
    java.lang.CharSequence mError;
    android.widget.Editor$ErrorPopup mErrorPopup;
    boolean mErrorWasChanged;
    boolean mFrozenWithFocus;
    boolean mIgnoreActionUpEvent;
    boolean mInBatchEditControllers;
    android.widget.Editor$InputContentType mInputContentType;
    android.widget.Editor$InputMethodState mInputMethodState;
    int mInputType;
    boolean mInsertionControllerEnabled;
    android.widget.Editor$InsertionPointCursorController mInsertionPointCursorController;
    android.text.method.KeyListener mKeyListener;
    float mLastDownPositionX;
    float mLastDownPositionY;
    private android.widget.Editor$PositionListener mPositionListener;
    boolean mPreserveDetachedSelection;
    boolean mSelectAllOnFocus;
    private android.graphics.drawable.Drawable mSelectHandleCenter;
    private android.graphics.drawable.Drawable mSelectHandleLeft;
    private android.graphics.drawable.Drawable mSelectHandleRight;
    android.view.ActionMode mSelectionActionMode;
    boolean mSelectionControllerEnabled;
    android.widget.Editor$SelectionModifierCursorController mSelectionModifierCursorController;
    boolean mSelectionMoved;
    long mShowCursor;
    boolean mShowErrorAfterAttach;
    boolean mShowSoftInputOnFocus;
    java.lang.Runnable mShowSuggestionRunnable;
    private android.widget.Editor$SpanController mSpanController;
    android.widget.SpellChecker mSpellChecker;
    android.text.style.SuggestionRangeSpan mSuggestionRangeSpan;
    android.widget.Editor$SuggestionsPopupWindow mSuggestionsPopupWindow;
    private android.graphics.Rect mTempRect;
    boolean mTemporaryDetach;
    android.view.DisplayList[] mTextDisplayLists;
    boolean mTextIsSelectable;
    private android.widget.TextView mTextView;
    boolean mTouchFocusSelected;
    android.text.InputFilter mUndoInputFilter;
    android.content.UndoManager mUndoManager;
    android.content.UndoOwner mUndoOwner;
    android.text.method.WordIterator mWordIterator;

    static void <clinit>()
    {
        float[] $r0;

        <android.widget.Editor: java.lang.String TAG> = "Editor";

        <android.widget.Editor: int EXTRACT_UNKNOWN> = -1;

        <android.widget.Editor: int EXTRACT_NOTHING> = -2;

        <android.widget.Editor: boolean DEBUG_UNDO> = 0;

        <android.widget.Editor: int BLINK> = 500;

        $r0 = newarray (float)[2];

        <android.widget.Editor: float[] TEMP_POSITION> = $r0;

        <android.widget.Editor: int DRAG_SHADOW_MAX_TEXT_LENGTH> = 20;

        return;
    }

    void <init>(android.widget.TextView)
    {
        android.widget.Editor r0;
        android.widget.TextView r1;
        android.graphics.drawable.Drawable[] $r2;

        r0 := @this: android.widget.Editor;

        r1 := @parameter0: android.widget.TextView;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.widget.Editor: int mInputType> = 0;

        r0.<android.widget.Editor: boolean mCursorVisible> = 1;

        r0.<android.widget.Editor: boolean mShowSoftInputOnFocus> = 1;

        $r2 = newarray (android.graphics.drawable.Drawable)[2];

        r0.<android.widget.Editor: android.graphics.drawable.Drawable[] mCursorDrawable> = $r2;

        r0.<android.widget.Editor: android.widget.TextView mTextView> = r1;

        return;
    }

    static boolean access$1200(android.widget.Editor)
    {
        android.widget.Editor r0;
        boolean $z0;

        r0 := @parameter0: android.widget.Editor;

        $z0 = specialinvoke r0.<android.widget.Editor: boolean extractedTextModeWillBeStarted()>();

        return $z0;
    }

    static android.widget.Editor$PositionListener access$1300(android.widget.Editor)
    {
        android.widget.Editor r0;
        android.widget.Editor$PositionListener $r1;

        r0 := @parameter0: android.widget.Editor;

        $r1 = specialinvoke r0.<android.widget.Editor: android.widget.Editor$PositionListener getPositionListener()>();

        return $r1;
    }

    static boolean access$1400(android.widget.Editor, int)
    {
        android.widget.Editor r0;
        int i0;
        boolean $z0;

        r0 := @parameter0: android.widget.Editor;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<android.widget.Editor: boolean isOffsetVisible(int)>(i0);

        return $z0;
    }

    static android.graphics.Rect access$2200(android.widget.Editor)
    {
        android.widget.Editor r0;
        android.graphics.Rect $r1;

        r0 := @parameter0: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.graphics.Rect mTempRect>;

        return $r1;
    }

    static android.graphics.Rect access$2202(android.widget.Editor, android.graphics.Rect)
    {
        android.widget.Editor r0;
        android.graphics.Rect r1;

        r0 := @parameter0: android.widget.Editor;

        r1 := @parameter1: android.graphics.Rect;

        r0.<android.widget.Editor: android.graphics.Rect mTempRect> = r1;

        return r1;
    }

    static void access$2300(android.widget.Editor, int, int, boolean)
    {
        android.widget.Editor r0;
        int i0, i1;
        boolean z0;

        r0 := @parameter0: android.widget.Editor;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        specialinvoke r0.<android.widget.Editor: void updateSpellCheckSpans(int,int,boolean)>(i0, i1, z0);

        return;
    }

    static boolean access$2400(android.widget.Editor)
    {
        android.widget.Editor r0;
        boolean $z0;

        r0 := @parameter0: android.widget.Editor;

        $z0 = specialinvoke r0.<android.widget.Editor: boolean isCursorInsideSuggestionSpan()>();

        return $z0;
    }

    static boolean access$2600(android.widget.Editor, int, int)
    {
        android.widget.Editor r0;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: android.widget.Editor;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = specialinvoke r0.<android.widget.Editor: boolean isPositionVisible(int,int)>(i0, i1);

        return $z0;
    }

    static android.graphics.drawable.Drawable access$2700(android.widget.Editor)
    {
        android.widget.Editor r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @parameter0: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.graphics.drawable.Drawable mSelectHandleCenter>;

        return $r1;
    }

    static android.graphics.drawable.Drawable access$2702(android.widget.Editor, android.graphics.drawable.Drawable)
    {
        android.widget.Editor r0;
        android.graphics.drawable.Drawable r1;

        r0 := @parameter0: android.widget.Editor;

        r1 := @parameter1: android.graphics.drawable.Drawable;

        r0.<android.widget.Editor: android.graphics.drawable.Drawable mSelectHandleCenter> = r1;

        return r1;
    }

    static void access$2800(android.widget.Editor)
    {
        android.widget.Editor r0;

        r0 := @parameter0: android.widget.Editor;

        specialinvoke r0.<android.widget.Editor: void hideInsertionPointCursorController()>();

        return;
    }

    static android.graphics.drawable.Drawable access$2900(android.widget.Editor)
    {
        android.widget.Editor r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @parameter0: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.graphics.drawable.Drawable mSelectHandleLeft>;

        return $r1;
    }

    static android.graphics.drawable.Drawable access$2902(android.widget.Editor, android.graphics.drawable.Drawable)
    {
        android.widget.Editor r0;
        android.graphics.drawable.Drawable r1;

        r0 := @parameter0: android.widget.Editor;

        r1 := @parameter1: android.graphics.drawable.Drawable;

        r0.<android.widget.Editor: android.graphics.drawable.Drawable mSelectHandleLeft> = r1;

        return r1;
    }

    static android.graphics.drawable.Drawable access$3000(android.widget.Editor)
    {
        android.widget.Editor r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @parameter0: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.graphics.drawable.Drawable mSelectHandleRight>;

        return $r1;
    }

    static android.graphics.drawable.Drawable access$3002(android.widget.Editor, android.graphics.drawable.Drawable)
    {
        android.widget.Editor r0;
        android.graphics.drawable.Drawable r1;

        r0 := @parameter0: android.widget.Editor;

        r1 := @parameter1: android.graphics.drawable.Drawable;

        r0.<android.widget.Editor: android.graphics.drawable.Drawable mSelectHandleRight> = r1;

        return r1;
    }

    static boolean access$3100(android.widget.Editor, float, float)
    {
        android.widget.Editor r0;
        float f0, f1;
        boolean $z0;

        r0 := @parameter0: android.widget.Editor;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        $z0 = specialinvoke r0.<android.widget.Editor: boolean isPositionOnText(float,float)>(f0, f1);

        return $z0;
    }

    static boolean access$500(android.widget.Editor)
    {
        android.widget.Editor r0;
        boolean $z0;

        r0 := @parameter0: android.widget.Editor;

        $z0 = specialinvoke r0.<android.widget.Editor: boolean shouldBlink()>();

        return $z0;
    }

    static android.widget.TextView access$600(android.widget.Editor)
    {
        android.widget.Editor r0;
        android.widget.TextView $r1;

        r0 := @parameter0: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        return $r1;
    }

    static void access$700(android.widget.Editor)
    {
        android.widget.Editor r0;

        r0 := @parameter0: android.widget.Editor;

        specialinvoke r0.<android.widget.Editor: void sendUpdateSelection()>();

        return;
    }

    private boolean canSelectText()
    {
        android.widget.Editor r0;
        boolean $z0;
        android.widget.TextView $r1;
        java.lang.CharSequence $r2;
        int $i0;

        r0 := @this: android.widget.Editor;

        $z0 = virtualinvoke r0.<android.widget.Editor: boolean hasSelectionController()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r2 = virtualinvoke $r1.<android.widget.TextView: java.lang.CharSequence getText()>();

        $i0 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void chooseSize(android.widget.PopupWindow, java.lang.CharSequence, android.widget.TextView)
    {
        android.widget.Editor r0;
        android.widget.PopupWindow r1;
        java.lang.CharSequence r2;
        android.widget.TextView r3, $r5;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        android.text.StaticLayout r4, $r7;
        float f0, $f1;
        android.content.res.Resources $r6;
        android.text.Layout$Alignment $r8;
        android.text.TextPaint $r9;
        double $d0, $d1;

        r0 := @this: android.widget.Editor;

        r1 := @parameter0: android.widget.PopupWindow;

        r2 := @parameter1: java.lang.CharSequence;

        r3 := @parameter2: android.widget.TextView;

        $i4 = virtualinvoke r3.<android.widget.TextView: int getPaddingLeft()>();

        $i5 = virtualinvoke r3.<android.widget.TextView: int getPaddingRight()>();

        i0 = $i4 + $i5;

        $i6 = virtualinvoke r3.<android.widget.TextView: int getPaddingTop()>();

        $i7 = virtualinvoke r3.<android.widget.TextView: int getPaddingBottom()>();

        i1 = $i6 + $i7;

        $r5 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r6 = virtualinvoke $r5.<android.widget.TextView: android.content.res.Resources getResources()>();

        i2 = virtualinvoke $r6.<android.content.res.Resources: int getDimensionPixelSize(int)>(17104974);

        $r7 = new android.text.StaticLayout;

        $r9 = virtualinvoke r3.<android.widget.TextView: android.text.TextPaint getPaint()>();

        $r8 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;

        specialinvoke $r7.<android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)>(r2, $r9, i2, $r8, 1.0F, 0.0F, 1);

        r4 = $r7;

        f0 = 0.0F;

        i3 = 0;

     label1:
        $i8 = virtualinvoke r4.<android.text.Layout: int getLineCount()>();

        if i3 >= $i8 goto label2;

        $f1 = virtualinvoke r4.<android.text.Layout: float getLineWidth(int)>(i3);

        f0 = staticinvoke <java.lang.Math: float max(float,float)>(f0, $f1);

        i3 = i3 + 1;

        goto label1;

     label2:
        $d0 = (double) f0;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i9 = (int) $d1;

        $i11 = i0 + $i9;

        virtualinvoke r1.<android.widget.PopupWindow: void setWidth(int)>($i11);

        $i10 = virtualinvoke r4.<android.text.Layout: int getHeight()>();

        $i12 = i1 + $i10;

        virtualinvoke r1.<android.widget.PopupWindow: void setHeight(int)>($i12);

        return;
    }

    private void downgradeEasyCorrectionSpans()
    {
        android.widget.Editor r0;
        java.lang.CharSequence r1;
        android.text.Spannable r2;
        android.text.style.SuggestionSpan[] r3;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        android.widget.TextView $r4;
        boolean $z0;
        java.lang.Object[] $r5;
        android.text.style.SuggestionSpan $r6, $r7;

        r0 := @this: android.widget.Editor;

        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        r1 = virtualinvoke $r4.<android.widget.TextView: java.lang.CharSequence getText()>();

        $z0 = r1 instanceof android.text.Spannable;

        if $z0 == 0 goto label3;

        r2 = (android.text.Spannable) r1;

        $i3 = interfaceinvoke r2.<android.text.Spannable: int length()>();

        $r5 = interfaceinvoke r2.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i3, class "android/text/style/SuggestionSpan");

        r3 = (android.text.style.SuggestionSpan[]) $r5;

        i0 = 0;

     label1:
        $i4 = lengthof r3;

        if i0 >= $i4 goto label3;

        $r6 = r3[i0];

        i1 = virtualinvoke $r6.<android.text.style.SuggestionSpan: int getFlags()>();

        $i6 = i1 & 1;

        if $i6 == 0 goto label2;

        $i5 = i1 & 2;

        if $i5 != 0 goto label2;

        i2 = i1 & -2;

        $r7 = r3[i0];

        virtualinvoke $r7.<android.text.style.SuggestionSpan: void setFlags(int)>(i2);

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return;
    }

    private void drawCursor(android.graphics.Canvas, int)
    {
        android.widget.Editor r0;
        android.graphics.Canvas r1;
        int i0, i1, $i2, $i3;
        boolean z0;
        float $f0, $f1;
        android.graphics.drawable.Drawable[] $r2;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.widget.Editor;

        r1 := @parameter0: android.graphics.Canvas;

        i0 := @parameter1: int;

        if i0 == 0 goto label4;

        z0 = 1;

     label1:
        if z0 == 0 goto label2;

        $f1 = (float) i0;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>(0.0F, $f1);

     label2:
        i1 = 0;

     label3:
        $i2 = r0.<android.widget.Editor: int mCursorCount>;

        if i1 >= $i2 goto label5;

        $r2 = r0.<android.widget.Editor: android.graphics.drawable.Drawable[] mCursorDrawable>;

        $r3 = $r2[i1];

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        i1 = i1 + 1;

        goto label3;

     label4:
        z0 = 0;

        goto label1;

     label5:
        if z0 == 0 goto label6;

        $i3 = neg i0;

        $f0 = (float) $i3;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>(0.0F, $f0);

     label6:
        return;
    }

    private void drawHardwareAccelerated(android.graphics.Canvas, android.text.Layout, android.graphics.Path, android.graphics.Paint, int)
    {
        android.widget.Editor r0;
        android.graphics.Canvas r1;
        android.text.Layout r2;
        android.graphics.Path r3;
        android.graphics.Paint r4;
        int i0, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, $i17, $i19, $i20, $i21, $i22;
        long l1;
        android.text.DynamicLayout r5;
        int[] r6, r7;
        android.view.DisplayList r8;
        boolean z0, z1, z2, $z3, $z4;
        float f0, f1, f2, f3, f4, f5, $f6;
        android.view.HardwareCanvas r9, $r16;
        java.lang.Throwable r10, $r21;
        android.view.DisplayList[] r11, $r12, $r13, $r20;
        android.widget.TextView $r14, $r15, $r17;
        android.view.HardwareRenderer $r18;
        java.lang.StringBuilder $r19, $r22, $r23;
        java.lang.String $r24;

        r0 := @this: android.widget.Editor;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: android.text.Layout;

        r3 := @parameter2: android.graphics.Path;

        r4 := @parameter3: android.graphics.Paint;

        i0 := @parameter4: int;

        l1 = virtualinvoke r2.<android.text.Layout: long getLineRangeForDraw(android.graphics.Canvas)>(r1);

        i2 = staticinvoke <android.text.TextUtils: int unpackRangeStartFromLong(long)>(l1);

        i3 = staticinvoke <android.text.TextUtils: int unpackRangeEndFromLong(long)>(l1);

        if i3 >= 0 goto label01;

        return;

     label01:
        virtualinvoke r2.<android.text.Layout: void drawBackground(android.graphics.Canvas,android.graphics.Path,android.graphics.Paint,int,int,int)>(r1, r3, r4, i0, i2, i3);

        $z3 = r2 instanceof android.text.DynamicLayout;

        if $z3 == 0 goto label21;

        $r12 = r0.<android.widget.Editor: android.view.DisplayList[] mTextDisplayLists>;

        if $r12 != null goto label02;

        $i22 = staticinvoke <com.android.internal.util.ArrayUtils: int idealObjectArraySize(int)>(0);

        $r20 = newarray (android.view.DisplayList)[$i22];

        r0.<android.widget.Editor: android.view.DisplayList[] mTextDisplayLists> = $r20;

     label02:
        r5 = (android.text.DynamicLayout) r2;

        r6 = virtualinvoke r5.<android.text.DynamicLayout: int[] getBlockEndLines()>();

        r7 = virtualinvoke r5.<android.text.DynamicLayout: int[] getBlockIndices()>();

        i4 = virtualinvoke r5.<android.text.DynamicLayout: int getNumberOfBlocks()>();

        i5 = virtualinvoke r5.<android.text.DynamicLayout: int getIndexFirstChangedBlock()>();

        i6 = -1;

        i8 = 0;

        i7 = 0;

     label03:
        if i7 >= i4 goto label20;

        i10 = r6[i7];

        i9 = r7[i7];

        if i9 != -1 goto label10;

        z0 = 1;

     label04:
        if z0 == 0 goto label05;

        i9 = specialinvoke r0.<android.widget.Editor: int getAvailableDisplayListIndex(int[],int,int)>(r7, i4, i8);

        r7[i7] = i9;

        i8 = i9 + 1;

     label05:
        $r13 = r0.<android.widget.Editor: android.view.DisplayList[] mTextDisplayLists>;

        r8 = $r13[i9];

        if r8 != null goto label11;

        r11 = r0.<android.widget.Editor: android.view.DisplayList[] mTextDisplayLists>;

        $r17 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r18 = virtualinvoke $r17.<android.widget.TextView: android.view.HardwareRenderer getHardwareRenderer()>();

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Text ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        r8 = virtualinvoke $r18.<android.view.HardwareRenderer: android.view.DisplayList createDisplayList(java.lang.String)>($r24);

        r11[i9] = r8;

     label06:
        $z4 = virtualinvoke r8.<android.view.DisplayList: boolean isValid()>();

        if $z4 != 0 goto label12;

        z1 = 1;

     label07:
        if i7 >= i5 goto label08;

        if z1 == 0 goto label18;

     label08:
        i11 = i6 + 1;

        i13 = virtualinvoke r2.<android.text.Layout: int getLineTop(int)>(i11);

        i12 = virtualinvoke r2.<android.text.Layout: int getLineBottom(int)>(i10);

        $r15 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i14 = virtualinvoke $r15.<android.widget.TextView: int getWidth()>();

        $r14 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        z2 = virtualinvoke $r14.<android.widget.TextView: boolean getHorizontallyScrolling()>();

        i15 = 0;

        if z2 == 0 goto label14;

        f1 = 3.4028235E38F;

        f2 = 1.4E-45F;

        i16 = i11;

     label09:
        if i16 > i10 goto label13;

        f5 = virtualinvoke r2.<android.text.Layout: float getLineLeft(int)>(i16);

        f1 = staticinvoke <java.lang.Math: float min(float,float)>(f1, f5);

        f4 = virtualinvoke r2.<android.text.Layout: float getLineRight(int)>(i16);

        f2 = staticinvoke <java.lang.Math: float max(float,float)>(f2, f4);

        i16 = i16 + 1;

        goto label09;

     label10:
        z0 = 0;

        goto label04;

     label11:
        if z0 == 0 goto label06;

        virtualinvoke r8.<android.view.DisplayList: void clear()>();

        goto label06;

     label12:
        z1 = 0;

        goto label07;

     label13:
        i15 = (int) f1;

        $f6 = 0.5F + f2;

        i14 = (int) $f6;

     label14:
        if z1 == 0 goto label17;

        $i21 = i14 - i15;

        $i17 = i12 - i13;

        r9 = virtualinvoke r8.<android.view.DisplayList: android.view.HardwareCanvas start(int,int)>($i21, $i17);

        $i20 = neg i15;

        f0 = (float) $i20;

        $i19 = neg i13;

        f3 = (float) $i19;

     label15:
        virtualinvoke r9.<android.view.HardwareCanvas: void translate(float,float)>(f0, f3);

        virtualinvoke r2.<android.text.Layout: void drawText(android.graphics.Canvas,int,int)>(r9, i11, i10);

     label16:
        virtualinvoke r8.<android.view.DisplayList: void end()>();

        virtualinvoke r8.<android.view.DisplayList: void setClipToBounds(boolean)>(0);

     label17:
        virtualinvoke r8.<android.view.DisplayList: void setLeftTopRightBottom(int,int,int,int)>(i15, i13, i14, i12);

     label18:
        $r16 = (android.view.HardwareCanvas) r1;

        virtualinvoke $r16.<android.view.HardwareCanvas: int drawDisplayList(android.view.DisplayList,android.graphics.Rect,int)>(r8, null, 0);

        i6 = i10;

        i7 = i7 + 1;

        goto label03;

     label19:
        $r21 := @caughtexception;

        r10 = $r21;

        virtualinvoke r8.<android.view.DisplayList: void end()>();

        virtualinvoke r8.<android.view.DisplayList: void setClipToBounds(boolean)>(0);

        throw r10;

     label20:
        virtualinvoke r5.<android.text.DynamicLayout: void setIndexFirstChangedBlock(int)>(i4);

        return;

     label21:
        virtualinvoke r2.<android.text.Layout: void drawText(android.graphics.Canvas,int,int)>(r1, i2, i3);

        return;

        catch java.lang.Throwable from label15 to label16 with label19;
    }

    private boolean extractTextInternal(android.view.inputmethod.ExtractedTextRequest, int, int, int, android.view.inputmethod.ExtractedText)
    {
        android.widget.Editor r0;
        android.view.inputmethod.ExtractedTextRequest r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        android.view.inputmethod.ExtractedText r2;
        java.lang.CharSequence r3, $r10;
        boolean z0, $z1, $z2;
        android.text.Spanned r4;
        java.lang.Object[] r5;
        android.widget.TextView $r6, $r7, $r8, $r9;
        java.lang.String $r11;
        java.lang.Object $r12, $r13;

        r0 := @this: android.widget.Editor;

        r1 := @parameter0: android.view.inputmethod.ExtractedTextRequest;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: android.view.inputmethod.ExtractedText;

        $r6 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        r3 = virtualinvoke $r6.<android.widget.TextView: java.lang.CharSequence getText()>();

        z0 = 0;

        if r3 == null goto label05;

        if i0 == -2 goto label14;

        i3 = interfaceinvoke r3.<java.lang.CharSequence: int length()>();

        if i0 >= 0 goto label06;

        r2.<android.view.inputmethod.ExtractedText: int partialEndOffset> = -1;

        r2.<android.view.inputmethod.ExtractedText: int partialStartOffset> = -1;

        i0 = 0;

        i4 = i3;

     label01:
        $i15 = r1.<android.view.inputmethod.ExtractedTextRequest: int flags>;

        $i17 = 1 & $i15;

        if $i17 == 0 goto label13;

        $r10 = interfaceinvoke r3.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(i0, i4);

        r2.<android.view.inputmethod.ExtractedText: java.lang.CharSequence text> = $r10;

     label02:
        r2.<android.view.inputmethod.ExtractedText: int flags> = 0;

        $i8 = staticinvoke <android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence,int)>(r3, 2048);

        if $i8 == 0 goto label03;

        $i14 = r2.<android.view.inputmethod.ExtractedText: int flags>;

        $i13 = 2 | $i14;

        r2.<android.view.inputmethod.ExtractedText: int flags> = $i13;

     label03:
        $r7 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z1 = virtualinvoke $r7.<android.widget.TextView: boolean isSingleLine()>();

        if $z1 == 0 goto label04;

        $i12 = r2.<android.view.inputmethod.ExtractedText: int flags>;

        $i11 = 1 | $i12;

        r2.<android.view.inputmethod.ExtractedText: int flags> = $i11;

     label04:
        r2.<android.view.inputmethod.ExtractedText: int startOffset> = 0;

        $r8 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i9 = virtualinvoke $r8.<android.widget.TextView: int getSelectionStart()>();

        r2.<android.view.inputmethod.ExtractedText: int selectionStart> = $i9;

        $r9 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i10 = virtualinvoke $r9.<android.widget.TextView: int getSelectionEnd()>();

        r2.<android.view.inputmethod.ExtractedText: int selectionEnd> = $i10;

        z0 = 1;

     label05:
        return z0;

     label06:
        i4 = i1 + i2;

        $z2 = r3 instanceof android.text.Spanned;

        if $z2 == 0 goto label09;

        r4 = (android.text.Spanned) r3;

        r5 = interfaceinvoke r4.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i0, i4, class "android/text/ParcelableSpan");

        i5 = lengthof r5;

     label07:
        if i5 <= 0 goto label09;

        i5 = i5 + -1;

        $r13 = r5[i5];

        i6 = interfaceinvoke r4.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r13);

        if i6 >= i0 goto label08;

        i0 = i6;

     label08:
        $r12 = r5[i5];

        i7 = interfaceinvoke r4.<android.text.Spanned: int getSpanEnd(java.lang.Object)>($r12);

        if i7 <= i4 goto label07;

        i4 = i7;

        goto label07;

     label09:
        r2.<android.view.inputmethod.ExtractedText: int partialStartOffset> = i0;

        $i16 = i4 - i2;

        r2.<android.view.inputmethod.ExtractedText: int partialEndOffset> = $i16;

        if i0 <= i3 goto label11;

        i0 = i3;

     label10:
        if i4 <= i3 goto label12;

        i4 = i3;

        goto label01;

     label11:
        if i0 >= 0 goto label10;

        i0 = 0;

        goto label10;

     label12:
        if i4 >= 0 goto label01;

        i4 = 0;

        goto label01;

     label13:
        $r11 = staticinvoke <android.text.TextUtils: java.lang.String substring(java.lang.CharSequence,int,int)>(r3, i0, i4);

        r2.<android.view.inputmethod.ExtractedText: java.lang.CharSequence text> = $r11;

        goto label02;

     label14:
        r2.<android.view.inputmethod.ExtractedText: int partialStartOffset> = 0;

        r2.<android.view.inputmethod.ExtractedText: int partialEndOffset> = 0;

        r2.<android.view.inputmethod.ExtractedText: java.lang.CharSequence text> = "";

        goto label02;
    }

    private boolean extractedTextModeWillBeStarted()
    {
        android.widget.Editor r0;
        boolean z0, z1, z2;
        android.view.inputmethod.InputMethodManager r1;
        android.widget.TextView $r2;

        r0 := @this: android.widget.Editor;

        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        z0 = $r2 instanceof android.inputmethodservice.ExtractEditText;

        z1 = 0;

        if z0 != 0 goto label1;

        r1 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        z1 = 0;

        if r1 == null goto label1;

        z2 = virtualinvoke r1.<android.view.inputmethod.InputMethodManager: boolean isFullscreenMode()>();

        z1 = 0;

        if z2 == 0 goto label1;

        z1 = 1;

     label1:
        return z1;
    }

    private int getAvailableDisplayListIndex(int[], int, int)
    {
        android.widget.Editor r0;
        int[] r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7;
        android.view.DisplayList[] r2, $r3, $r4;
        boolean z0;

        r0 := @this: android.widget.Editor;

        r1 := @parameter0: int[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = r0.<android.widget.Editor: android.view.DisplayList[] mTextDisplayLists>;

        i2 = lengthof $r3;

        i3 = i1;

     label1:
        if i3 >= i2 goto label5;

        i4 = 0;

     label2:
        z0 = 0;

        if i4 >= i0 goto label3;

        $i7 = r1[i4];

        if $i7 != i3 goto label4;

        z0 = 1;

     label3:
        if z0 == 0 goto label6;

        i3 = i3 + 1;

        goto label1;

     label4:
        i4 = i4 + 1;

        goto label2;

     label5:
        $i5 = i2 + 1;

        $i6 = staticinvoke <com.android.internal.util.ArrayUtils: int idealIntArraySize(int)>($i5);

        r2 = newarray (android.view.DisplayList)[$i6];

        $r4 = r0.<android.widget.Editor: android.view.DisplayList[] mTextDisplayLists>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r2, 0, i2);

        r0.<android.widget.Editor: android.view.DisplayList[] mTextDisplayLists> = r2;

        i3 = i2;

     label6:
        return i3;
    }

    private long getCharRange(int)
    {
        android.widget.Editor r0;
        int i0, i1, $i3, $i4, $i5, $i7, $i9, $i10, $i13, $i15, $i17, $i18;
        char c2, $c11, $c16, $c20;
        android.widget.TextView $r1, $r3, $r5, $r8, $r9;
        java.lang.CharSequence $r2, $r4, $r6, $r7, $r10;
        long $l6, $l8, $l12, $l14, $l19;
        boolean $z0, $z1;

        r0 := @this: android.widget.Editor;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r2 = virtualinvoke $r1.<android.widget.TextView: java.lang.CharSequence getText()>();

        i1 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

        $i3 = i0 + 1;

        if $i3 >= i1 goto label1;

        $r8 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r7 = virtualinvoke $r8.<android.widget.TextView: java.lang.CharSequence getText()>();

        $c16 = interfaceinvoke $r7.<java.lang.CharSequence: char charAt(int)>(i0);

        $r9 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r10 = virtualinvoke $r9.<android.widget.TextView: java.lang.CharSequence getText()>();

        $i17 = i0 + 1;

        $c20 = interfaceinvoke $r10.<java.lang.CharSequence: char charAt(int)>($i17);

        $z1 = staticinvoke <java.lang.Character: boolean isSurrogatePair(char,char)>($c16, $c20);

        if $z1 == 0 goto label1;

        $i18 = i0 + 2;

        $l19 = staticinvoke <android.text.TextUtils: long packRangeInLong(int,int)>(i0, $i18);

        return $l19;

     label1:
        if i0 >= i1 goto label2;

        $i15 = i0 + 1;

        $l14 = staticinvoke <android.text.TextUtils: long packRangeInLong(int,int)>(i0, $i15);

        return $l14;

     label2:
        $i4 = i0 - 2;

        if $i4 < 0 goto label3;

        $r3 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r4 = virtualinvoke $r3.<android.widget.TextView: java.lang.CharSequence getText()>();

        $i9 = i0 - 1;

        c2 = interfaceinvoke $r4.<java.lang.CharSequence: char charAt(int)>($i9);

        $r5 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r6 = virtualinvoke $r5.<android.widget.TextView: java.lang.CharSequence getText()>();

        $i10 = i0 - 2;

        $c11 = interfaceinvoke $r6.<java.lang.CharSequence: char charAt(int)>($i10);

        $z0 = staticinvoke <java.lang.Character: boolean isSurrogatePair(char,char)>($c11, c2);

        if $z0 == 0 goto label3;

        $i13 = i0 - 2;

        $l12 = staticinvoke <android.text.TextUtils: long packRangeInLong(int,int)>($i13, i0);

        return $l12;

     label3:
        $i5 = i0 - 1;

        if $i5 < 0 goto label4;

        $i7 = i0 - 1;

        $l8 = staticinvoke <android.text.TextUtils: long packRangeInLong(int,int)>($i7, i0);

        return $l8;

     label4:
        $l6 = staticinvoke <android.text.TextUtils: long packRangeInLong(int,int)>(i0, i0);

        return $l6;
    }

    private int getErrorX()
    {
        android.widget.Editor r0;
        float f0, $f1, $f2, $f3, $f4;
        android.widget.TextView$Drawables r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        android.widget.TextView $r2, $r5, $r6, $r7, $r9, $r10;
        android.content.res.Resources $r3;
        android.util.DisplayMetrics $r4;
        android.widget.Editor$ErrorPopup $r8;

        r0 := @this: android.widget.Editor;

        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r3 = virtualinvoke $r2.<android.widget.TextView: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        f0 = $r4.<android.util.DisplayMetrics: float density>;

        $r5 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        r1 = $r5.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r6 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i2 = virtualinvoke $r6.<android.widget.TextView: int getLayoutDirection()>();

        tableswitch($i2)
        {
            case 1: goto label3;
            default: goto label1;
        };

     label1:
        i1 = 0;

        if r1 == null goto label2;

        i1 = r1.<android.widget.TextView$Drawables: int mDrawableSizeRight>;

     label2:
        $i3 = neg i1;

        $i5 = $i3 / 2;

        $f1 = 25.0F * f0;

        $f2 = 0.5F + $f1;

        $i4 = (int) $f2;

        $i6 = $i5 + $i4;

        $r7 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i7 = virtualinvoke $r7.<android.widget.TextView: int getWidth()>();

        $r8 = r0.<android.widget.Editor: android.widget.Editor$ErrorPopup mErrorPopup>;

        $i8 = virtualinvoke $r8.<android.widget.Editor$ErrorPopup: int getWidth()>();

        $i10 = $i7 - $i8;

        $r9 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i9 = virtualinvoke $r9.<android.widget.TextView: int getPaddingRight()>();

        $i12 = $i10 - $i9;

        $i11 = $i6 + $i12;

        return $i11;

     label3:
        i0 = 0;

        if r1 == null goto label4;

        i0 = r1.<android.widget.TextView$Drawables: int mDrawableSizeLeft>;

     label4:
        $i13 = i0 / 2;

        $f4 = 25.0F * f0;

        $f3 = 0.5F + $f4;

        $i14 = (int) $f3;

        $i15 = $i13 - $i14;

        $r10 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i16 = virtualinvoke $r10.<android.widget.TextView: int getPaddingLeft()>();

        $i17 = $i15 + $i16;

        return $i17;
    }

    private int getErrorY()
    {
        android.widget.Editor r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        android.widget.TextView$Drawables r1;
        float f0, $f1, $f2;
        android.widget.TextView $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r10;
        android.content.res.Resources $r8;
        android.util.DisplayMetrics $r11;

        r0 := @this: android.widget.Editor;

        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i0 = virtualinvoke $r2.<android.widget.TextView: int getCompoundPaddingTop()>();

        $r3 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i4 = virtualinvoke $r3.<android.widget.TextView: int getBottom()>();

        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i5 = virtualinvoke $r4.<android.widget.TextView: int getTop()>();

        $i6 = $i4 - $i5;

        $r5 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i7 = virtualinvoke $r5.<android.widget.TextView: int getCompoundPaddingBottom()>();

        $i8 = $i6 - $i7;

        i1 = $i8 - i0;

        $r6 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        r1 = $r6.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r7 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i9 = virtualinvoke $r7.<android.widget.TextView: int getLayoutDirection()>();

        tableswitch($i9)
        {
            case 1: goto label3;
            default: goto label1;
        };

     label1:
        i2 = 0;

        if r1 == null goto label2;

        i2 = r1.<android.widget.TextView$Drawables: int mDrawableHeightRight>;

     label2:
        $i11 = i1 - i2;

        $i10 = $i11 / 2;

        i3 = i0 + $i10;

        $r9 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r8 = virtualinvoke $r9.<android.widget.TextView: android.content.res.Resources getResources()>();

        $r11 = virtualinvoke $r8.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        f0 = $r11.<android.util.DisplayMetrics: float density>;

        $i13 = i3 + i2;

        $r10 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i12 = virtualinvoke $r10.<android.widget.TextView: int getHeight()>();

        $i14 = $i13 - $i12;

        $f2 = 2.0F * f0;

        $f1 = 0.5F + $f2;

        $i15 = (int) $f1;

        $i16 = $i14 - $i15;

        return $i16;

     label3:
        i2 = 0;

        if r1 == null goto label4;

        i2 = r1.<android.widget.TextView$Drawables: int mDrawableHeightLeft>;

     label4:
        goto label2;
    }

    private int getLastTapPosition()
    {
        android.widget.Editor r0;
        int i0, $i1;
        android.widget.Editor$SelectionModifierCursorController $r1, $r2;
        android.widget.TextView $r3, $r5;
        java.lang.CharSequence $r4, $r6;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController mSelectionModifierCursorController>;

        if $r1 == null goto label2;

        $r2 = r0.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController mSelectionModifierCursorController>;

        i0 = virtualinvoke $r2.<android.widget.Editor$SelectionModifierCursorController: int getMinTouchOffset()>();

        if i0 < 0 goto label2;

        $r3 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r4 = virtualinvoke $r3.<android.widget.TextView: java.lang.CharSequence getText()>();

        $i1 = interfaceinvoke $r4.<java.lang.CharSequence: int length()>();

        if i0 <= $i1 goto label1;

        $r5 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r6 = virtualinvoke $r5.<android.widget.TextView: java.lang.CharSequence getText()>();

        i0 = interfaceinvoke $r6.<java.lang.CharSequence: int length()>();

     label1:
        return i0;

     label2:
        return -1;
    }

    private long getLastTouchOffsets()
    {
        android.widget.Editor r0;
        android.widget.Editor$SelectionModifierCursorController r1;
        int $i0, $i1;
        long $l2;

        r0 := @this: android.widget.Editor;

        r1 = virtualinvoke r0.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController getSelectionController()>();

        $i0 = virtualinvoke r1.<android.widget.Editor$SelectionModifierCursorController: int getMinTouchOffset()>();

        $i1 = virtualinvoke r1.<android.widget.Editor$SelectionModifierCursorController: int getMaxTouchOffset()>();

        $l2 = staticinvoke <android.text.TextUtils: long packRangeInLong(int,int)>($i0, $i1);

        return $l2;
    }

    private android.widget.Editor$PositionListener getPositionListener()
    {
        android.widget.Editor r0;
        android.widget.Editor$PositionListener $r1, $r2, $r3;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.widget.Editor$PositionListener mPositionListener>;

        if $r1 != null goto label1;

        $r3 = new android.widget.Editor$PositionListener;

        specialinvoke $r3.<android.widget.Editor$PositionListener: void <init>(android.widget.Editor,android.widget.Editor$1)>(r0, null);

        r0.<android.widget.Editor: android.widget.Editor$PositionListener mPositionListener> = $r3;

     label1:
        $r2 = r0.<android.widget.Editor: android.widget.Editor$PositionListener mPositionListener>;

        return $r2;
    }

    private float getPrimaryHorizontal(android.text.Layout, android.text.Layout, int, boolean)
    {
        android.widget.Editor r0;
        android.text.Layout r1, r2;
        int i0;
        boolean z0, $z1, $z2;
        java.lang.CharSequence $r3, $r4;
        float $f0, $f1;

        r0 := @this: android.widget.Editor;

        r1 := @parameter0: android.text.Layout;

        r2 := @parameter1: android.text.Layout;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        $r3 = virtualinvoke r1.<android.text.Layout: java.lang.CharSequence getText()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z1 == 0 goto label1;

        if r2 == null goto label1;

        $r4 = virtualinvoke r2.<android.text.Layout: java.lang.CharSequence getText()>();

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

        if $z2 != 0 goto label1;

        $f1 = virtualinvoke r2.<android.text.Layout: float getPrimaryHorizontal(int,boolean)>(i0, z0);

        return $f1;

     label1:
        $f0 = virtualinvoke r1.<android.text.Layout: float getPrimaryHorizontal(int,boolean)>(i0, z0);

        return $f0;
    }

    private android.view.View$DragShadowBuilder getTextThumbnailBuilder(java.lang.CharSequence)
    {
        android.widget.Editor r0;
        java.lang.CharSequence r1;
        android.widget.TextView r2, $r3, $r6, $r8;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.content.Context $r4, $r9;
        android.view.View $r5;
        android.content.res.ColorStateList $r7;
        android.view.ViewGroup$LayoutParams $r10;
        android.view.View$DragShadowBuilder $r11;
        java.lang.IllegalArgumentException $r12;

        r0 := @this: android.widget.Editor;

        r1 := @parameter0: java.lang.CharSequence;

        $r3 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r4 = virtualinvoke $r3.<android.widget.TextView: android.content.Context getContext()>();

        $r5 = staticinvoke <android.view.View: android.view.View inflate(android.content.Context,int,android.view.ViewGroup)>($r4, 17367209, null);

        r2 = (android.widget.TextView) $r5;

        if r2 != null goto label1;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unable to inflate text drag thumbnail");

        throw $r12;

     label1:
        $i1 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        $i2 = <android.widget.Editor: int DRAG_SHADOW_MAX_TEXT_LENGTH>;

        if $i1 <= $i2 goto label2;

        $i5 = <android.widget.Editor: int DRAG_SHADOW_MAX_TEXT_LENGTH>;

        r1 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(0, $i5);

     label2:
        virtualinvoke r2.<android.widget.TextView: void setText(java.lang.CharSequence)>(r1);

        $r6 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r7 = virtualinvoke $r6.<android.widget.TextView: android.content.res.ColorStateList getTextColors()>();

        virtualinvoke r2.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>($r7);

        $r8 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r9 = virtualinvoke $r8.<android.widget.TextView: android.content.Context getContext()>();

        virtualinvoke r2.<android.widget.TextView: void setTextAppearance(android.content.Context,int)>($r9, 16);

        virtualinvoke r2.<android.widget.TextView: void setGravity(int)>(17);

        $r10 = new android.view.ViewGroup$LayoutParams;

        specialinvoke $r10.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>(-2, -2);

        virtualinvoke r2.<android.widget.TextView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r10);

        i0 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);

        virtualinvoke r2.<android.widget.TextView: void measure(int,int)>(i0, i0);

        $i3 = virtualinvoke r2.<android.widget.TextView: int getMeasuredWidth()>();

        $i4 = virtualinvoke r2.<android.widget.TextView: int getMeasuredHeight()>();

        virtualinvoke r2.<android.widget.TextView: void layout(int,int,int,int)>(0, 0, $i3, $i4);

        virtualinvoke r2.<android.widget.TextView: void invalidate()>();

        $r11 = new android.view.View$DragShadowBuilder;

        specialinvoke $r11.<android.view.View$DragShadowBuilder: void <init>(android.view.View)>(r2);

        return $r11;
    }

    private boolean hasPasswordTransformationMethod()
    {
        android.widget.Editor r0;
        android.widget.TextView $r1;
        android.text.method.TransformationMethod $r2;
        boolean $z0;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r2 = virtualinvoke $r1.<android.widget.TextView: android.text.method.TransformationMethod getTransformationMethod()>();

        $z0 = $r2 instanceof android.text.method.PasswordTransformationMethod;

        return $z0;
    }

    private void hideCursorControllers()
    {
        android.widget.Editor r0;
        android.widget.Editor$SuggestionsPopupWindow $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.widget.Editor$SuggestionsPopupWindow mSuggestionsPopupWindow>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.Editor: android.widget.Editor$SuggestionsPopupWindow mSuggestionsPopupWindow>;

        $z0 = virtualinvoke $r2.<android.widget.Editor$SuggestionsPopupWindow: boolean isShowingUp()>();

        if $z0 != 0 goto label1;

        $r3 = r0.<android.widget.Editor: android.widget.Editor$SuggestionsPopupWindow mSuggestionsPopupWindow>;

        virtualinvoke $r3.<android.widget.Editor$SuggestionsPopupWindow: void hide()>();

     label1:
        specialinvoke r0.<android.widget.Editor: void hideInsertionPointCursorController()>();

        virtualinvoke r0.<android.widget.Editor: void stopSelectionActionMode()>();

        return;
    }

    private void hideError()
    {
        android.widget.Editor r0;
        android.widget.Editor$ErrorPopup $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.widget.Editor$ErrorPopup mErrorPopup>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.Editor: android.widget.Editor$ErrorPopup mErrorPopup>;

        $z0 = virtualinvoke $r2.<android.widget.Editor$ErrorPopup: boolean isShowing()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<android.widget.Editor: android.widget.Editor$ErrorPopup mErrorPopup>;

        virtualinvoke $r3.<android.widget.Editor$ErrorPopup: void dismiss()>();

     label1:
        r0.<android.widget.Editor: boolean mShowErrorAfterAttach> = 0;

        return;
    }

    private void hideInsertionPointCursorController()
    {
        android.widget.Editor r0;
        android.widget.Editor$InsertionPointCursorController $r1, $r2;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.widget.Editor$InsertionPointCursorController mInsertionPointCursorController>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.Editor: android.widget.Editor$InsertionPointCursorController mInsertionPointCursorController>;

        virtualinvoke $r2.<android.widget.Editor$InsertionPointCursorController: void hide()>();

     label1:
        return;
    }

    private void hideSpanControllers()
    {
        android.widget.Editor r0;
        android.widget.Editor$SpanController $r1, $r2;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.widget.Editor$SpanController mSpanController>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.Editor: android.widget.Editor$SpanController mSpanController>;

        virtualinvoke $r2.<android.widget.Editor$SpanController: void hide()>();

     label1:
        return;
    }

    private boolean isCursorInsideEasyCorrectionSpan()
    {
        android.widget.Editor r0;
        android.text.style.SuggestionSpan[] r1;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.widget.TextView $r2, $r4, $r6;
        java.lang.CharSequence $r3;
        android.text.Spannable $r5;
        java.lang.Object[] $r7;
        android.text.style.SuggestionSpan $r8;

        r0 := @this: android.widget.Editor;

        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r3 = virtualinvoke $r2.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r5 = (android.text.Spannable) $r3;

        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i1 = virtualinvoke $r4.<android.widget.TextView: int getSelectionStart()>();

        $r6 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i2 = virtualinvoke $r6.<android.widget.TextView: int getSelectionEnd()>();

        $r7 = interfaceinvoke $r5.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i1, $i2, class "android/text/style/SuggestionSpan");

        r1 = (android.text.style.SuggestionSpan[]) $r7;

        i0 = 0;

     label1:
        $i3 = lengthof r1;

        if i0 >= $i3 goto label3;

        $r8 = r1[i0];

        $i4 = virtualinvoke $r8.<android.text.style.SuggestionSpan: int getFlags()>();

        $i5 = 1 & $i4;

        if $i5 == 0 goto label2;

        return 1;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return 0;
    }

    private boolean isCursorInsideSuggestionSpan()
    {
        android.widget.Editor r0;
        java.lang.CharSequence r1;
        android.widget.TextView $r2, $r3, $r5;
        boolean $z0;
        android.text.Spannable $r4;
        int $i0, $i1, $i2;
        java.lang.Object[] $r6;
        android.text.style.SuggestionSpan[] $r7;

        r0 := @this: android.widget.Editor;

        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        r1 = virtualinvoke $r2.<android.widget.TextView: java.lang.CharSequence getText()>();

        $z0 = r1 instanceof android.text.Spannable;

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $r4 = (android.text.Spannable) r1;

        $r3 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i0 = virtualinvoke $r3.<android.widget.TextView: int getSelectionStart()>();

        $r5 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i1 = virtualinvoke $r5.<android.widget.TextView: int getSelectionEnd()>();

        $r6 = interfaceinvoke $r4.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i0, $i1, class "android/text/style/SuggestionSpan");

        $r7 = (android.text.style.SuggestionSpan[]) $r6;

        $i2 = lengthof $r7;

        if $i2 <= 0 goto label1;

        return 1;
    }

    private boolean isOffsetVisible(int)
    {
        android.widget.Editor r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.text.Layout r1;
        android.widget.TextView $r2, $r3, $r4;
        float $f0;
        boolean $z0;

        r0 := @this: android.widget.Editor;

        i0 := @parameter0: int;

        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        r1 = virtualinvoke $r2.<android.widget.TextView: android.text.Layout getLayout()>();

        if r1 != null goto label1;

        return 0;

     label1:
        $i2 = virtualinvoke r1.<android.text.Layout: int getLineForOffset(int)>(i0);

        i1 = virtualinvoke r1.<android.text.Layout: int getLineBottom(int)>($i2);

        $f0 = virtualinvoke r1.<android.text.Layout: float getPrimaryHorizontal(int)>(i0);

        $i3 = (int) $f0;

        $r3 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i4 = virtualinvoke $r3.<android.widget.TextView: int viewportToContentHorizontalOffset()>();

        $i5 = $i3 + $i4;

        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i6 = virtualinvoke $r4.<android.widget.TextView: int viewportToContentVerticalOffset()>();

        $i7 = i1 + $i6;

        $z0 = specialinvoke r0.<android.widget.Editor: boolean isPositionVisible(int,int)>($i5, $i7);

        return $z0;
    }

    private boolean isPositionOnText(float, float)
    {
        android.widget.Editor r0;
        float f0, f1, f2, $f3, $f4;
        android.text.Layout r1;
        int i0;
        android.widget.TextView $r2, $r3, $r4;
        byte $b1, $b2;

        r0 := @this: android.widget.Editor;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        r1 = virtualinvoke $r2.<android.widget.TextView: android.text.Layout getLayout()>();

        if r1 != null goto label2;

     label1:
        return 0;

     label2:
        $r3 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i0 = virtualinvoke $r3.<android.widget.TextView: int getLineAtCoordinate(float)>(f1);

        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        f2 = virtualinvoke $r4.<android.widget.TextView: float convertToLocalHorizontalCoordinate(float)>(f0);

        $f3 = virtualinvoke r1.<android.text.Layout: float getLineLeft(int)>(i0);

        $b1 = f2 cmpg $f3;

        if $b1 < 0 goto label1;

        $f4 = virtualinvoke r1.<android.text.Layout: float getLineRight(int)>(i0);

        $b2 = f2 cmpl $f4;

        if $b2 > 0 goto label1;

        return 1;
    }

    private boolean isPositionVisible(int, int)
    {
        android.widget.Editor r0;
        int i0, i1, $i4, $i6, $i8, $i9, $i10, $i11;
        float[] r1, r3;
        java.lang.Throwable r2, $r9;
        android.view.View r4;
        android.view.ViewParent r5;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19;
        android.widget.TextView $r6;
        byte $b2, $b3, $b5, $b7;
        boolean $z0, $z1;
        android.graphics.Matrix $r7, $r8;

        r0 := @this: android.widget.Editor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = <android.widget.Editor: float[] TEMP_POSITION>;

        entermonitor r1;

     label01:
        r3 = <android.widget.Editor: float[] TEMP_POSITION>;

        $f0 = (float) i0;

        r3[0] = $f0;

        $f1 = (float) i1;

        r3[1] = $f1;

        r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

     label02:
        if r4 == null goto label10;

     label03:
        $r6 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        if r4 == $r6 goto label04;

        $f14 = r3[0];

        $i10 = virtualinvoke r4.<android.view.View: int getScrollX()>();

        $f16 = (float) $i10;

        $f17 = $f14 - $f16;

        r3[0] = $f17;

        $f15 = r3[1];

        $i11 = virtualinvoke r4.<android.view.View: int getScrollY()>();

        $f19 = (float) $i11;

        $f18 = $f15 - $f19;

        r3[1] = $f18;

     label04:
        $f2 = r3[0];

        $b2 = $f2 cmpg 0.0F;

        if $b2 < 0 goto label05;

        $f3 = r3[1];

        $b3 = $f3 cmpg 0.0F;

        if $b3 < 0 goto label05;

        $f4 = r3[0];

        $i4 = virtualinvoke r4.<android.view.View: int getWidth()>();

        $f5 = (float) $i4;

        $b5 = $f4 cmpl $f5;

        if $b5 > 0 goto label05;

        $f6 = r3[1];

        $i6 = virtualinvoke r4.<android.view.View: int getHeight()>();

        $f7 = (float) $i6;

        $b7 = $f6 cmpl $f7;

        if $b7 <= 0 goto label07;

     label05:
        exitmonitor r1;

     label06:
        return 0;

     label07:
        $r7 = virtualinvoke r4.<android.view.View: android.graphics.Matrix getMatrix()>();

        $z0 = virtualinvoke $r7.<android.graphics.Matrix: boolean isIdentity()>();

        if $z0 != 0 goto label08;

        $r8 = virtualinvoke r4.<android.view.View: android.graphics.Matrix getMatrix()>();

        virtualinvoke $r8.<android.graphics.Matrix: void mapPoints(float[])>(r3);

     label08:
        $f8 = r3[0];

        $i8 = virtualinvoke r4.<android.view.View: int getLeft()>();

        $f9 = (float) $i8;

        $f11 = $f8 + $f9;

        r3[0] = $f11;

        $f10 = r3[1];

        $i9 = virtualinvoke r4.<android.view.View: int getTop()>();

        $f12 = (float) $i9;

        $f13 = $f10 + $f12;

        r3[1] = $f13;

        r5 = virtualinvoke r4.<android.view.View: android.view.ViewParent getParent()>();

        $z1 = r5 instanceof android.view.View;

        if $z1 == 0 goto label15;

        r4 = (android.view.View) r5;

     label09:
        goto label02;

     label10:
        exitmonitor r1;

     label11:
        return 1;

     label12:
        $r9 := @caughtexception;

        r2 = $r9;

     label13:
        exitmonitor r1;

     label14:
        throw r2;

     label15:
        r4 = null;

        goto label02;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    private void resumeBlink()
    {
        android.widget.Editor r0;
        android.widget.Editor$Blink $r1, $r2;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.widget.Editor$Blink mBlink>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.Editor: android.widget.Editor$Blink mBlink>;

        virtualinvoke $r2.<android.widget.Editor$Blink: void uncancel()>();

        virtualinvoke r0.<android.widget.Editor: void makeBlink()>();

     label1:
        return;
    }

    private boolean selectCurrentWord()
    {
        android.widget.Editor r0;
        int i0, i1, i2, i4, i5, i6, i7, $i9, $i10, $i11;
        long l3, l8;
        android.text.style.URLSpan[] r1;
        android.text.method.WordIterator r2;
        android.text.style.URLSpan r3;
        boolean $z0, $z1, $z2, $z3;
        android.widget.TextView $r4, $r5, $r7, $r8, $r11, $r14, $r16, $r17, $r22, $r24;
        java.lang.CharSequence $r6, $r9, $r10, $r15, $r18, $r19, $r21;
        android.text.Spanned $r12, $r23, $r25;
        java.lang.Object[] $r13;
        android.text.Spannable $r20;

        r0 := @this: android.widget.Editor;

        $z0 = specialinvoke r0.<android.widget.Editor: boolean canSelectText()>();

        if $z0 != 0 goto label01;

        return 0;

     label01:
        $z1 = specialinvoke r0.<android.widget.Editor: boolean hasPasswordTransformationMethod()>();

        if $z1 == 0 goto label02;

        $r24 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z3 = virtualinvoke $r24.<android.widget.TextView: boolean selectAllText()>();

        return $z3;

     label02:
        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i0 = virtualinvoke $r4.<android.widget.TextView: int getInputType()>();

        i1 = i0 & 15;

        i2 = i0 & 4080;

        if i1 == 2 goto label03;

        if i1 == 3 goto label03;

        if i1 == 4 goto label03;

        if i2 == 16 goto label03;

        if i2 == 32 goto label03;

        if i2 == 208 goto label03;

        if i2 != 176 goto label04;

     label03:
        $r5 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z2 = virtualinvoke $r5.<android.widget.TextView: boolean selectAllText()>();

        return $z2;

     label04:
        l3 = specialinvoke r0.<android.widget.Editor: long getLastTouchOffsets()>();

        i4 = staticinvoke <android.text.TextUtils: int unpackRangeStartFromLong(long)>(l3);

        i5 = staticinvoke <android.text.TextUtils: int unpackRangeEndFromLong(long)>(l3);

        if i4 < 0 goto label05;

        $r7 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r6 = virtualinvoke $r7.<android.widget.TextView: java.lang.CharSequence getText()>();

        $i9 = interfaceinvoke $r6.<java.lang.CharSequence: int length()>();

        if i4 < $i9 goto label06;

     label05:
        return 0;

     label06:
        if i5 < 0 goto label07;

        $r8 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r9 = virtualinvoke $r8.<android.widget.TextView: java.lang.CharSequence getText()>();

        $i10 = interfaceinvoke $r9.<java.lang.CharSequence: int length()>();

        if i5 < $i10 goto label08;

     label07:
        return 0;

     label08:
        $r11 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r10 = virtualinvoke $r11.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r12 = (android.text.Spanned) $r10;

        $r13 = interfaceinvoke $r12.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i4, i5, class "android/text/style/URLSpan");

        r1 = (android.text.style.URLSpan[]) $r13;

        $i11 = lengthof r1;

        if $i11 < 1 goto label10;

        r3 = r1[0];

        $r17 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r18 = virtualinvoke $r17.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r23 = (android.text.Spanned) $r18;

        i6 = interfaceinvoke $r23.<android.text.Spanned: int getSpanStart(java.lang.Object)>(r3);

        $r22 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r21 = virtualinvoke $r22.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r25 = (android.text.Spanned) $r21;

        i7 = interfaceinvoke $r25.<android.text.Spanned: int getSpanEnd(java.lang.Object)>(r3);

     label09:
        $r16 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r19 = virtualinvoke $r16.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r20 = (android.text.Spannable) $r19;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>($r20, i6, i7);

        if i7 <= i6 goto label12;

        return 1;

     label10:
        r2 = virtualinvoke r0.<android.widget.Editor: android.text.method.WordIterator getWordIterator()>();

        $r14 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r15 = virtualinvoke $r14.<android.widget.TextView: java.lang.CharSequence getText()>();

        virtualinvoke r2.<android.text.method.WordIterator: void setCharSequence(java.lang.CharSequence,int,int)>($r15, i4, i5);

        i6 = virtualinvoke r2.<android.text.method.WordIterator: int getBeginning(int)>(i4);

        i7 = virtualinvoke r2.<android.text.method.WordIterator: int getEnd(int)>(i5);

        if i6 == -1 goto label11;

        if i7 == -1 goto label11;

        if i6 != i7 goto label09;

     label11:
        l8 = specialinvoke r0.<android.widget.Editor: long getCharRange(int)>(i4);

        i6 = staticinvoke <android.text.TextUtils: int unpackRangeStartFromLong(long)>(l8);

        i7 = staticinvoke <android.text.TextUtils: int unpackRangeEndFromLong(long)>(l8);

        goto label09;

     label12:
        return 0;
    }

    private void sendUpdateSelection()
    {
        android.widget.Editor r0;
        android.view.inputmethod.InputMethodManager r1;
        int i0, i1, i2, i3, $i4;
        android.text.Spannable r2;
        android.widget.Editor$InputMethodState $r3, $r4;
        android.widget.TextView $r5, $r6, $r7, $r9, $r10;
        boolean $z0;
        java.lang.CharSequence $r8, $r11;

        r0 := @this: android.widget.Editor;

        $r3 = r0.<android.widget.Editor: android.widget.Editor$InputMethodState mInputMethodState>;

        if $r3 == null goto label2;

        $r4 = r0.<android.widget.Editor: android.widget.Editor$InputMethodState mInputMethodState>;

        $i4 = $r4.<android.widget.Editor$InputMethodState: int mBatchEditNesting>;

        if $i4 > 0 goto label2;

        r1 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        if r1 == null goto label2;

        $r5 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i0 = virtualinvoke $r5.<android.widget.TextView: int getSelectionStart()>();

        $r6 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i1 = virtualinvoke $r6.<android.widget.TextView: int getSelectionEnd()>();

        i2 = -1;

        i3 = -1;

        $r7 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r8 = virtualinvoke $r7.<android.widget.TextView: java.lang.CharSequence getText()>();

        $z0 = $r8 instanceof android.text.Spannable;

        if $z0 == 0 goto label1;

        $r9 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r11 = virtualinvoke $r9.<android.widget.TextView: java.lang.CharSequence getText()>();

        r2 = (android.text.Spannable) $r11;

        i2 = staticinvoke <com.android.internal.widget.EditableInputConnection: int getComposingSpanStart(android.text.Spannable)>(r2);

        i3 = staticinvoke <com.android.internal.widget.EditableInputConnection: int getComposingSpanEnd(android.text.Spannable)>(r2);

     label1:
        $r10 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke r1.<android.view.inputmethod.InputMethodManager: void updateSelection(android.view.View,int,int,int,int)>($r10, i0, i1, i2, i3);

     label2:
        return;
    }

    private void setErrorIcon(android.graphics.drawable.Drawable)
    {
        android.widget.Editor r0;
        android.graphics.drawable.Drawable r1;
        android.widget.TextView$Drawables r2, $r9;
        android.widget.TextView r3, $r4, $r5, $r6, $r7, $r8, $r10;
        android.content.Context $r11;

        r0 := @this: android.widget.Editor;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        r2 = $r4.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r2 != null goto label1;

        r3 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r9 = new android.widget.TextView$Drawables;

        $r10 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r11 = virtualinvoke $r10.<android.widget.TextView: android.content.Context getContext()>();

        specialinvoke $r9.<android.widget.TextView$Drawables: void <init>(android.content.Context)>($r11);

        r2 = $r9;

        r3.<android.widget.TextView: android.widget.TextView$Drawables mDrawables> = r2;

     label1:
        $r5 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke r2.<android.widget.TextView$Drawables: void setErrorDrawable(android.graphics.drawable.Drawable,android.widget.TextView)>(r1, $r5);

        $r6 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke $r6.<android.widget.TextView: void resetResolvedDrawables()>();

        $r7 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke $r7.<android.widget.TextView: void invalidate()>();

        $r8 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke $r8.<android.widget.TextView: void requestLayout()>();

        return;
    }

    private boolean shouldBlink()
    {
        android.widget.Editor r0;
        int i0, i1;
        boolean $z0, $z1;
        android.widget.TextView $r1, $r2, $r3;

        r0 := @this: android.widget.Editor;

        $z0 = virtualinvoke r0.<android.widget.Editor: boolean isCursorVisible()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z1 = virtualinvoke $r1.<android.widget.TextView: boolean isFocused()>();

        if $z1 != 0 goto label2;

     label1:
        return 0;

     label2:
        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i0 = virtualinvoke $r2.<android.widget.TextView: int getSelectionStart()>();

        if i0 < 0 goto label1;

        $r3 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i1 = virtualinvoke $r3.<android.widget.TextView: int getSelectionEnd()>();

        if i1 < 0 goto label1;

        if i0 != i1 goto label1;

        return 1;
    }

    private void showError()
    {
        android.widget.Editor r0;
        android.widget.TextView r1, r2, $r3, $r12, $r15, $r18;
        float f0, $f1, $f2, $f3, $f4;
        android.os.IBinder $r4;
        android.widget.Editor$ErrorPopup $r5, $r6, $r9, $r11, $r13, $r14, $r22, $r23, $r24;
        android.view.View $r7, $r19;
        java.lang.CharSequence $r8, $r10;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        android.view.LayoutInflater $r16;
        android.content.Context $r17;
        android.util.DisplayMetrics $r20;
        android.content.res.Resources $r21;

        r0 := @this: android.widget.Editor;

        $r3 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r4 = virtualinvoke $r3.<android.widget.TextView: android.os.IBinder getWindowToken()>();

        if $r4 != null goto label1;

        r0.<android.widget.Editor: boolean mShowErrorAfterAttach> = 1;

        return;

     label1:
        $r5 = r0.<android.widget.Editor: android.widget.Editor$ErrorPopup mErrorPopup>;

        if $r5 != null goto label2;

        $r15 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r17 = virtualinvoke $r15.<android.widget.TextView: android.content.Context getContext()>();

        $r16 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r17);

        $r19 = virtualinvoke $r16.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(17367217, null);

        r2 = (android.widget.TextView) $r19;

        $r18 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r21 = virtualinvoke $r18.<android.widget.TextView: android.content.res.Resources getResources()>();

        $r20 = virtualinvoke $r21.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        f0 = $r20.<android.util.DisplayMetrics: float density>;

        $r22 = new android.widget.Editor$ErrorPopup;

        $f1 = 200.0F * f0;

        $f3 = 0.5F + $f1;

        $i3 = (int) $f3;

        $f2 = 50.0F * f0;

        $f4 = 0.5F + $f2;

        $i2 = (int) $f4;

        specialinvoke $r22.<android.widget.Editor$ErrorPopup: void <init>(android.widget.TextView,int,int)>(r2, $i3, $i2);

        r0.<android.widget.Editor: android.widget.Editor$ErrorPopup mErrorPopup> = $r22;

        $r24 = r0.<android.widget.Editor: android.widget.Editor$ErrorPopup mErrorPopup>;

        virtualinvoke $r24.<android.widget.Editor$ErrorPopup: void setFocusable(boolean)>(0);

        $r23 = r0.<android.widget.Editor: android.widget.Editor$ErrorPopup mErrorPopup>;

        virtualinvoke $r23.<android.widget.Editor$ErrorPopup: void setInputMethodMode(int)>(1);

     label2:
        $r6 = r0.<android.widget.Editor: android.widget.Editor$ErrorPopup mErrorPopup>;

        $r7 = virtualinvoke $r6.<android.widget.Editor$ErrorPopup: android.view.View getContentView()>();

        r1 = (android.widget.TextView) $r7;

        $r9 = r0.<android.widget.Editor: android.widget.Editor$ErrorPopup mErrorPopup>;

        $r8 = r0.<android.widget.Editor: java.lang.CharSequence mError>;

        specialinvoke r0.<android.widget.Editor: void chooseSize(android.widget.PopupWindow,java.lang.CharSequence,android.widget.TextView)>($r9, $r8, r1);

        $r10 = r0.<android.widget.Editor: java.lang.CharSequence mError>;

        virtualinvoke r1.<android.widget.TextView: void setText(java.lang.CharSequence)>($r10);

        $r11 = r0.<android.widget.Editor: android.widget.Editor$ErrorPopup mErrorPopup>;

        $r12 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i0 = specialinvoke r0.<android.widget.Editor: int getErrorX()>();

        $i1 = specialinvoke r0.<android.widget.Editor: int getErrorY()>();

        virtualinvoke $r11.<android.widget.Editor$ErrorPopup: void showAsDropDown(android.view.View,int,int)>($r12, $i0, $i1);

        $r13 = r0.<android.widget.Editor: android.widget.Editor$ErrorPopup mErrorPopup>;

        $r14 = r0.<android.widget.Editor: android.widget.Editor$ErrorPopup mErrorPopup>;

        $z0 = virtualinvoke $r14.<android.widget.Editor$ErrorPopup: boolean isAboveAnchor()>();

        virtualinvoke $r13.<android.widget.Editor$ErrorPopup: void fixDirection(boolean)>($z0);

        return;
    }

    private void suspendBlink()
    {
        android.widget.Editor r0;
        android.widget.Editor$Blink $r1, $r2;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.widget.Editor$Blink mBlink>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.Editor: android.widget.Editor$Blink mBlink>;

        virtualinvoke $r2.<android.widget.Editor$Blink: void cancel()>();

     label1:
        return;
    }

    private boolean touchPositionIsInSelection()
    {
        android.widget.Editor r0;
        int i0, i1, i2, i3, i4;
        android.widget.Editor$SelectionModifierCursorController r1;
        boolean z0;
        android.widget.TextView $r2, $r3, $r4;
        android.text.Spannable $r5;
        java.lang.CharSequence $r6;

        r0 := @this: android.widget.Editor;

        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i0 = virtualinvoke $r2.<android.widget.TextView: int getSelectionStart()>();

        $r3 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i1 = virtualinvoke $r3.<android.widget.TextView: int getSelectionEnd()>();

        if i0 != i1 goto label1;

        return 0;

     label1:
        if i0 <= i1 goto label2;

        i4 = i0;

        i0 = i1;

        i1 = i4;

        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r6 = virtualinvoke $r4.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r5 = (android.text.Spannable) $r6;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>($r5, i0, i1);

     label2:
        r1 = virtualinvoke r0.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController getSelectionController()>();

        i2 = virtualinvoke r1.<android.widget.Editor$SelectionModifierCursorController: int getMinTouchOffset()>();

        i3 = virtualinvoke r1.<android.widget.Editor$SelectionModifierCursorController: int getMaxTouchOffset()>();

        if i2 < i0 goto label4;

        if i3 >= i1 goto label4;

        z0 = 1;

     label3:
        return z0;

     label4:
        z0 = 0;

        goto label3;
    }

    private void updateCursorPosition(int, int, int, float)
    {
        android.widget.Editor r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        float f0, $f1, $f2;
        android.graphics.drawable.Drawable[] $r1, $r4, $r7, $r10, $r14;
        android.graphics.drawable.Drawable $r2, $r6, $r8, $r13, $r18;
        android.graphics.Rect $r3, $r5, $r9, $r11, $r12, $r16;
        android.content.res.Resources $r15;
        android.widget.TextView $r17, $r19;

        r0 := @this: android.widget.Editor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        f0 := @parameter3: float;

        $r1 = r0.<android.widget.Editor: android.graphics.drawable.Drawable[] mCursorDrawable>;

        $r2 = $r1[i0];

        if $r2 != null goto label1;

        $r14 = r0.<android.widget.Editor: android.graphics.drawable.Drawable[] mCursorDrawable>;

        $r17 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r15 = virtualinvoke $r17.<android.widget.TextView: android.content.res.Resources getResources()>();

        $r19 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i12 = $r19.<android.widget.TextView: int mCursorDrawableRes>;

        $r18 = virtualinvoke $r15.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>($i12);

        $r14[i0] = $r18;

     label1:
        $r3 = r0.<android.widget.Editor: android.graphics.Rect mTempRect>;

        if $r3 != null goto label2;

        $r16 = new android.graphics.Rect;

        specialinvoke $r16.<android.graphics.Rect: void <init>()>();

        r0.<android.widget.Editor: android.graphics.Rect mTempRect> = $r16;

     label2:
        $r4 = r0.<android.widget.Editor: android.graphics.drawable.Drawable[] mCursorDrawable>;

        $r6 = $r4[i0];

        $r5 = r0.<android.widget.Editor: android.graphics.Rect mTempRect>;

        virtualinvoke $r6.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r5);

        $r7 = r0.<android.widget.Editor: android.graphics.drawable.Drawable[] mCursorDrawable>;

        $r8 = $r7[i0];

        i3 = virtualinvoke $r8.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $f2 = f0 - 0.5F;

        $f1 = staticinvoke <java.lang.Math: float max(float,float)>(0.5F, $f2);

        $i6 = (int) $f1;

        $r9 = r0.<android.widget.Editor: android.graphics.Rect mTempRect>;

        $i5 = $r9.<android.graphics.Rect: int left>;

        i4 = $i6 - $i5;

        $r10 = r0.<android.widget.Editor: android.graphics.drawable.Drawable[] mCursorDrawable>;

        $r13 = $r10[i0];

        $r11 = r0.<android.widget.Editor: android.graphics.Rect mTempRect>;

        $i7 = $r11.<android.graphics.Rect: int top>;

        $i11 = i1 - $i7;

        $i9 = i4 + i3;

        $r12 = r0.<android.widget.Editor: android.graphics.Rect mTempRect>;

        $i8 = $r12.<android.graphics.Rect: int bottom>;

        $i10 = i2 + $i8;

        virtualinvoke $r13.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(i4, $i11, $i9, $i10);

        return;
    }

    private void updateSpellCheckSpans(int, int, boolean)
    {
        android.widget.Editor r0;
        int i0, i1;
        boolean z0, $z1, $z2, $z3;
        android.widget.TextView $r1, $r2, $r3, $r4, $r5, $r10;
        android.widget.SpellChecker $r6, $r7, $r8, $r9;

        r0 := @this: android.widget.Editor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r1 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke $r1.<android.widget.TextView: void removeAdjacentSuggestionSpans(int)>(i0);

        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke $r2.<android.widget.TextView: void removeAdjacentSuggestionSpans(int)>(i1);

        $r3 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z1 = virtualinvoke $r3.<android.widget.TextView: boolean isTextEditable()>();

        if $z1 == 0 goto label2;

        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z2 = virtualinvoke $r4.<android.widget.TextView: boolean isSuggestionsEnabled()>();

        if $z2 == 0 goto label2;

        $r5 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z3 = $r5 instanceof android.inputmethodservice.ExtractEditText;

        if $z3 != 0 goto label2;

        $r6 = r0.<android.widget.Editor: android.widget.SpellChecker mSpellChecker>;

        if $r6 != null goto label1;

        if z0 == 0 goto label1;

        $r9 = new android.widget.SpellChecker;

        $r10 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        specialinvoke $r9.<android.widget.SpellChecker: void <init>(android.widget.TextView)>($r10);

        r0.<android.widget.Editor: android.widget.SpellChecker mSpellChecker> = $r9;

     label1:
        $r7 = r0.<android.widget.Editor: android.widget.SpellChecker mSpellChecker>;

        if $r7 == null goto label2;

        $r8 = r0.<android.widget.Editor: android.widget.SpellChecker mSpellChecker>;

        virtualinvoke $r8.<android.widget.SpellChecker: void spellCheck(int,int)>(i0, i1);

     label2:
        return;
    }

    public void addSpanWatchers(android.text.Spannable)
    {
        android.widget.Editor r0;
        android.text.Spannable r1;
        int i0;
        android.text.method.KeyListener $r2, $r6;
        android.widget.Editor$SpanController $r3, $r4, $r5;

        r0 := @this: android.widget.Editor;

        r1 := @parameter0: android.text.Spannable;

        i0 = interfaceinvoke r1.<android.text.Spannable: int length()>();

        $r2 = r0.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        if $r2 == null goto label1;

        $r6 = r0.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        interfaceinvoke r1.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r6, 0, i0, 18);

     label1:
        $r3 = r0.<android.widget.Editor: android.widget.Editor$SpanController mSpanController>;

        if $r3 != null goto label2;

        $r5 = new android.widget.Editor$SpanController;

        specialinvoke $r5.<android.widget.Editor$SpanController: void <init>(android.widget.Editor)>(r0);

        r0.<android.widget.Editor: android.widget.Editor$SpanController mSpanController> = $r5;

     label2:
        $r4 = r0.<android.widget.Editor: android.widget.Editor$SpanController mSpanController>;

        interfaceinvoke r1.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r4, 0, i0, 18);

        return;
    }

    void adjustInputType(boolean, boolean, boolean, boolean)
    {
        android.widget.Editor r0;
        boolean z0, z1, z2, z3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;

        r0 := @this: android.widget.Editor;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        z3 := @parameter3: boolean;

        $i0 = r0.<android.widget.Editor: int mInputType>;

        $i1 = 15 & $i0;

        if $i1 != 1 goto label4;

        if z0 != 0 goto label1;

        if z1 == 0 goto label2;

     label1:
        $i7 = r0.<android.widget.Editor: int mInputType>;

        $i8 = -4081 & $i7;

        $i9 = 128 | $i8;

        r0.<android.widget.Editor: int mInputType> = $i9;

     label2:
        if z2 == 0 goto label3;

        $i10 = r0.<android.widget.Editor: int mInputType>;

        $i12 = -4081 & $i10;

        $i11 = 224 | $i12;

        r0.<android.widget.Editor: int mInputType> = $i11;

     label3:
        return;

     label4:
        $i2 = r0.<android.widget.Editor: int mInputType>;

        $i3 = 15 & $i2;

        if $i3 != 2 goto label3;

        if z3 == 0 goto label3;

        $i4 = r0.<android.widget.Editor: int mInputType>;

        $i5 = -4081 & $i4;

        $i6 = 16 | $i5;

        r0.<android.widget.Editor: int mInputType> = $i6;

        return;
    }

    boolean areSuggestionsShown()
    {
        android.widget.Editor r0;
        android.widget.Editor$SuggestionsPopupWindow $r1, $r2;
        boolean $z0;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.widget.Editor$SuggestionsPopupWindow mSuggestionsPopupWindow>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.Editor: android.widget.Editor$SuggestionsPopupWindow mSuggestionsPopupWindow>;

        $z0 = virtualinvoke $r2.<android.widget.Editor$SuggestionsPopupWindow: boolean isShowing()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void beginBatchEdit()
    {
        android.widget.Editor r0;
        android.widget.Editor$InputMethodState r1;
        int i0, $i1, $i2;
        boolean $z0;
        android.widget.TextView $r2, $r3;
        java.lang.CharSequence $r4;

        r0 := @this: android.widget.Editor;

        r0.<android.widget.Editor: boolean mInBatchEditControllers> = 1;

        r1 = r0.<android.widget.Editor: android.widget.Editor$InputMethodState mInputMethodState>;

        if r1 == null goto label2;

        $i1 = r1.<android.widget.Editor$InputMethodState: int mBatchEditNesting>;

        i0 = 1 + $i1;

        r1.<android.widget.Editor$InputMethodState: int mBatchEditNesting> = i0;

        if i0 != 1 goto label2;

        r1.<android.widget.Editor$InputMethodState: boolean mCursorChanged> = 0;

        r1.<android.widget.Editor$InputMethodState: int mChangedDelta> = 0;

        $z0 = r1.<android.widget.Editor$InputMethodState: boolean mContentChanged>;

        if $z0 == 0 goto label3;

        r1.<android.widget.Editor$InputMethodState: int mChangedStart> = 0;

        $r3 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r4 = virtualinvoke $r3.<android.widget.TextView: java.lang.CharSequence getText()>();

        $i2 = interfaceinvoke $r4.<java.lang.CharSequence: int length()>();

        r1.<android.widget.Editor$InputMethodState: int mChangedEnd> = $i2;

     label1:
        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke $r2.<android.widget.TextView: void onBeginBatchEdit()>();

     label2:
        return;

     label3:
        r1.<android.widget.Editor$InputMethodState: int mChangedStart> = -1;

        r1.<android.widget.Editor$InputMethodState: int mChangedEnd> = -1;

        r1.<android.widget.Editor$InputMethodState: boolean mContentChanged> = 0;

        goto label1;
    }

    void createInputContentTypeIfNeeded()
    {
        android.widget.Editor r0;
        android.widget.Editor$InputContentType $r1, $r2;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        if $r1 != null goto label1;

        $r2 = new android.widget.Editor$InputContentType;

        specialinvoke $r2.<android.widget.Editor$InputContentType: void <init>()>();

        r0.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType> = $r2;

     label1:
        return;
    }

    void createInputMethodStateIfNeeded()
    {
        android.widget.Editor r0;
        android.widget.Editor$InputMethodState $r1, $r2;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.widget.Editor$InputMethodState mInputMethodState>;

        if $r1 != null goto label1;

        $r2 = new android.widget.Editor$InputMethodState;

        specialinvoke $r2.<android.widget.Editor$InputMethodState: void <init>()>();

        r0.<android.widget.Editor: android.widget.Editor$InputMethodState mInputMethodState> = $r2;

     label1:
        return;
    }

    public void endBatchEdit()
    {
        android.widget.Editor r0;
        android.widget.Editor$InputMethodState r1;
        int i0, $i1;

        r0 := @this: android.widget.Editor;

        r0.<android.widget.Editor: boolean mInBatchEditControllers> = 0;

        r1 = r0.<android.widget.Editor: android.widget.Editor$InputMethodState mInputMethodState>;

        if r1 == null goto label1;

        $i1 = r1.<android.widget.Editor$InputMethodState: int mBatchEditNesting>;

        i0 = -1 + $i1;

        r1.<android.widget.Editor$InputMethodState: int mBatchEditNesting> = i0;

        if i0 != 0 goto label1;

        virtualinvoke r0.<android.widget.Editor: void finishBatchEdit(android.widget.Editor$InputMethodState)>(r1);

     label1:
        return;
    }

    void ensureEndedBatchEdit()
    {
        android.widget.Editor r0;
        android.widget.Editor$InputMethodState r1;
        int $i0;

        r0 := @this: android.widget.Editor;

        r1 = r0.<android.widget.Editor: android.widget.Editor$InputMethodState mInputMethodState>;

        if r1 == null goto label1;

        $i0 = r1.<android.widget.Editor$InputMethodState: int mBatchEditNesting>;

        if $i0 == 0 goto label1;

        r1.<android.widget.Editor$InputMethodState: int mBatchEditNesting> = 0;

        virtualinvoke r0.<android.widget.Editor: void finishBatchEdit(android.widget.Editor$InputMethodState)>(r1);

     label1:
        return;
    }

    boolean extractText(android.view.inputmethod.ExtractedTextRequest, android.view.inputmethod.ExtractedText)
    {
        android.widget.Editor r0;
        android.view.inputmethod.ExtractedTextRequest r1;
        android.view.inputmethod.ExtractedText r2;
        boolean $z0;

        r0 := @this: android.widget.Editor;

        r1 := @parameter0: android.view.inputmethod.ExtractedTextRequest;

        r2 := @parameter1: android.view.inputmethod.ExtractedText;

        $z0 = specialinvoke r0.<android.widget.Editor: boolean extractTextInternal(android.view.inputmethod.ExtractedTextRequest,int,int,int,android.view.inputmethod.ExtractedText)>(r1, -1, -1, -1, r2);

        return $z0;
    }

    void finishBatchEdit(android.widget.Editor$InputMethodState)
    {
        android.widget.Editor r0;
        android.widget.Editor$InputMethodState r1;
        android.widget.TextView $r2, $r3, $r4;
        boolean $z0, $z2, $z3;

        r0 := @this: android.widget.Editor;

        r1 := @parameter0: android.widget.Editor$InputMethodState;

        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke $r2.<android.widget.TextView: void onEndBatchEdit()>();

        $z0 = r1.<android.widget.Editor$InputMethodState: boolean mContentChanged>;

        if $z0 != 0 goto label1;

        $z2 = r1.<android.widget.Editor$InputMethodState: boolean mSelectionModeChanged>;

        if $z2 == 0 goto label3;

     label1:
        $r3 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke $r3.<android.widget.TextView: void updateAfterEdit()>();

        virtualinvoke r0.<android.widget.Editor: boolean reportExtractedText()>();

     label2:
        specialinvoke r0.<android.widget.Editor: void sendUpdateSelection()>();

        return;

     label3:
        $z3 = r1.<android.widget.Editor$InputMethodState: boolean mCursorChanged>;

        if $z3 == 0 goto label2;

        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke $r4.<android.widget.TextView: void invalidateCursor()>();

        goto label2;
    }

    android.widget.Editor$InsertionPointCursorController getInsertionController()
    {
        android.widget.Editor r0;
        boolean $z0;
        android.widget.Editor$InsertionPointCursorController $r1, $r2, $r3, $r6;
        android.widget.TextView $r4;
        android.view.ViewTreeObserver $r5;

        r0 := @this: android.widget.Editor;

        $z0 = r0.<android.widget.Editor: boolean mInsertionControllerEnabled>;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = r0.<android.widget.Editor: android.widget.Editor$InsertionPointCursorController mInsertionPointCursorController>;

        if $r1 != null goto label2;

        $r3 = new android.widget.Editor$InsertionPointCursorController;

        specialinvoke $r3.<android.widget.Editor$InsertionPointCursorController: void <init>(android.widget.Editor,android.widget.Editor$1)>(r0, null);

        r0.<android.widget.Editor: android.widget.Editor$InsertionPointCursorController mInsertionPointCursorController> = $r3;

        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r5 = virtualinvoke $r4.<android.widget.TextView: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r6 = r0.<android.widget.Editor: android.widget.Editor$InsertionPointCursorController mInsertionPointCursorController>;

        virtualinvoke $r5.<android.view.ViewTreeObserver: void addOnTouchModeChangeListener(android.view.ViewTreeObserver$OnTouchModeChangeListener)>($r6);

     label2:
        $r2 = r0.<android.widget.Editor: android.widget.Editor$InsertionPointCursorController mInsertionPointCursorController>;

        return $r2;
    }

    android.widget.Editor$SelectionModifierCursorController getSelectionController()
    {
        android.widget.Editor r0;
        boolean $z0;
        android.widget.Editor$SelectionModifierCursorController $r1, $r2, $r3, $r6;
        android.widget.TextView $r4;
        android.view.ViewTreeObserver $r5;

        r0 := @this: android.widget.Editor;

        $z0 = r0.<android.widget.Editor: boolean mSelectionControllerEnabled>;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = r0.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController mSelectionModifierCursorController>;

        if $r1 != null goto label2;

        $r3 = new android.widget.Editor$SelectionModifierCursorController;

        specialinvoke $r3.<android.widget.Editor$SelectionModifierCursorController: void <init>(android.widget.Editor)>(r0);

        r0.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController mSelectionModifierCursorController> = $r3;

        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r5 = virtualinvoke $r4.<android.widget.TextView: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r6 = r0.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController mSelectionModifierCursorController>;

        virtualinvoke $r5.<android.view.ViewTreeObserver: void addOnTouchModeChangeListener(android.view.ViewTreeObserver$OnTouchModeChangeListener)>($r6);

     label2:
        $r2 = r0.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController mSelectionModifierCursorController>;

        return $r2;
    }

    public android.text.method.WordIterator getWordIterator()
    {
        android.widget.Editor r0;
        android.text.method.WordIterator $r1, $r2, $r3;
        android.widget.TextView $r4;
        java.util.Locale $r5;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.text.method.WordIterator mWordIterator>;

        if $r1 != null goto label1;

        $r3 = new android.text.method.WordIterator;

        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r5 = virtualinvoke $r4.<android.widget.TextView: java.util.Locale getTextServicesLocale()>();

        specialinvoke $r3.<android.text.method.WordIterator: void <init>(java.util.Locale)>($r5);

        r0.<android.widget.Editor: android.text.method.WordIterator mWordIterator> = $r3;

     label1:
        $r2 = r0.<android.widget.Editor: android.text.method.WordIterator mWordIterator>;

        return $r2;
    }

    boolean hasInsertionController()
    {
        android.widget.Editor r0;
        boolean $z0;

        r0 := @this: android.widget.Editor;

        $z0 = r0.<android.widget.Editor: boolean mInsertionControllerEnabled>;

        return $z0;
    }

    boolean hasSelectionController()
    {
        android.widget.Editor r0;
        boolean $z0;

        r0 := @this: android.widget.Editor;

        $z0 = r0.<android.widget.Editor: boolean mSelectionControllerEnabled>;

        return $z0;
    }

    void hideControllers()
    {
        android.widget.Editor r0;

        r0 := @this: android.widget.Editor;

        specialinvoke r0.<android.widget.Editor: void hideCursorControllers()>();

        specialinvoke r0.<android.widget.Editor: void hideSpanControllers()>();

        return;
    }

    void invalidateTextDisplayList()
    {
        android.widget.Editor r0;
        int i0, $i1;
        android.view.DisplayList[] $r1, $r2, $r3, $r5;
        android.view.DisplayList $r4, $r6;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.view.DisplayList[] mTextDisplayLists>;

        if $r1 == null goto label3;

        i0 = 0;

     label1:
        $r2 = r0.<android.widget.Editor: android.view.DisplayList[] mTextDisplayLists>;

        $i1 = lengthof $r2;

        if i0 >= $i1 goto label3;

        $r3 = r0.<android.widget.Editor: android.view.DisplayList[] mTextDisplayLists>;

        $r4 = $r3[i0];

        if $r4 == null goto label2;

        $r5 = r0.<android.widget.Editor: android.view.DisplayList[] mTextDisplayLists>;

        $r6 = $r5[i0];

        virtualinvoke $r6.<android.view.DisplayList: void clear()>();

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return;
    }

    void invalidateTextDisplayList(android.text.Layout, int, int)
    {
        android.widget.Editor r0;
        android.text.Layout r1;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8;
        android.text.DynamicLayout r2;
        int[] r3, r4;
        android.view.DisplayList[] $r5, $r7;
        boolean $z0;
        android.view.DisplayList $r6;

        r0 := @this: android.widget.Editor;

        r1 := @parameter0: android.text.Layout;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r5 = r0.<android.widget.Editor: android.view.DisplayList[] mTextDisplayLists>;

        if $r5 == null goto label4;

        $z0 = r1 instanceof android.text.DynamicLayout;

        if $z0 == 0 goto label4;

        i2 = virtualinvoke r1.<android.text.Layout: int getLineForOffset(int)>(i0);

        i3 = virtualinvoke r1.<android.text.Layout: int getLineForOffset(int)>(i1);

        r2 = (android.text.DynamicLayout) r1;

        r3 = virtualinvoke r2.<android.text.DynamicLayout: int[] getBlockEndLines()>();

        r4 = virtualinvoke r2.<android.text.DynamicLayout: int[] getBlockIndices()>();

        i4 = virtualinvoke r2.<android.text.DynamicLayout: int getNumberOfBlocks()>();

        i5 = 0;

     label1:
        if i5 >= i4 goto label2;

        $i8 = r3[i5];

        if $i8 < i2 goto label5;

     label2:
        if i5 >= i4 goto label4;

        i6 = r4[i5];

        if i6 == -1 goto label3;

        $r7 = r0.<android.widget.Editor: android.view.DisplayList[] mTextDisplayLists>;

        $r6 = $r7[i6];

        virtualinvoke $r6.<android.view.DisplayList: void clear()>();

     label3:
        $i7 = r3[i5];

        if $i7 < i3 goto label6;

     label4:
        return;

     label5:
        i5 = i5 + 1;

        goto label1;

     label6:
        i5 = i5 + 1;

        goto label2;
    }

    boolean isCursorVisible()
    {
        android.widget.Editor r0;
        boolean $z0, $z1;
        android.widget.TextView $r1;

        r0 := @this: android.widget.Editor;

        $z0 = r0.<android.widget.Editor: boolean mCursorVisible>;

        if $z0 == 0 goto label1;

        $r1 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z1 = virtualinvoke $r1.<android.widget.TextView: boolean isTextEditable()>();

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    void makeBlink()
    {
        android.widget.Editor r0;
        boolean $z0;
        android.widget.Editor$Blink $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        long $l0, $l1, $l2;

        r0 := @this: android.widget.Editor;

        $z0 = specialinvoke r0.<android.widget.Editor: boolean shouldBlink()>();

        if $z0 == 0 goto label3;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<android.widget.Editor: long mShowCursor> = $l0;

        $r4 = r0.<android.widget.Editor: android.widget.Editor$Blink mBlink>;

        if $r4 != null goto label1;

        $r9 = new android.widget.Editor$Blink;

        specialinvoke $r9.<android.widget.Editor$Blink: void <init>(android.widget.Editor,android.widget.Editor$1)>(r0, null);

        r0.<android.widget.Editor: android.widget.Editor$Blink mBlink> = $r9;

     label1:
        $r6 = r0.<android.widget.Editor: android.widget.Editor$Blink mBlink>;

        $r5 = r0.<android.widget.Editor: android.widget.Editor$Blink mBlink>;

        virtualinvoke $r6.<android.widget.Editor$Blink: void removeCallbacks(java.lang.Runnable)>($r5);

        $r8 = r0.<android.widget.Editor: android.widget.Editor$Blink mBlink>;

        $r7 = r0.<android.widget.Editor: android.widget.Editor$Blink mBlink>;

        $l1 = r0.<android.widget.Editor: long mShowCursor>;

        $l2 = 500L + $l1;

        virtualinvoke $r8.<android.widget.Editor$Blink: boolean postAtTime(java.lang.Runnable,long)>($r7, $l2);

     label2:
        return;

     label3:
        $r1 = r0.<android.widget.Editor: android.widget.Editor$Blink mBlink>;

        if $r1 == null goto label2;

        $r3 = r0.<android.widget.Editor: android.widget.Editor$Blink mBlink>;

        $r2 = r0.<android.widget.Editor: android.widget.Editor$Blink mBlink>;

        virtualinvoke $r3.<android.widget.Editor$Blink: void removeCallbacks(java.lang.Runnable)>($r2);

        return;
    }

    void onAttachedToWindow()
    {
        android.widget.Editor r0;
        android.view.ViewTreeObserver r1;
        boolean $z0, $z1;
        android.widget.TextView $r2, $r5, $r7, $r8, $r9, $r10;
        android.widget.Editor$InsertionPointCursorController $r3, $r12;
        android.widget.Editor$SelectionModifierCursorController $r4, $r11, $r13;
        java.lang.CharSequence $r6;
        int $i0, $i1, $i2;

        r0 := @this: android.widget.Editor;

        $z0 = r0.<android.widget.Editor: boolean mShowErrorAfterAttach>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<android.widget.Editor: void showError()>();

        r0.<android.widget.Editor: boolean mShowErrorAfterAttach> = 0;

     label1:
        r0.<android.widget.Editor: boolean mTemporaryDetach> = 0;

        $r2 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        r1 = virtualinvoke $r2.<android.widget.TextView: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r3 = r0.<android.widget.Editor: android.widget.Editor$InsertionPointCursorController mInsertionPointCursorController>;

        if $r3 == null goto label2;

        $r12 = r0.<android.widget.Editor: android.widget.Editor$InsertionPointCursorController mInsertionPointCursorController>;

        virtualinvoke r1.<android.view.ViewTreeObserver: void addOnTouchModeChangeListener(android.view.ViewTreeObserver$OnTouchModeChangeListener)>($r12);

     label2:
        $r4 = r0.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController mSelectionModifierCursorController>;

        if $r4 == null goto label3;

        $r11 = r0.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController mSelectionModifierCursorController>;

        virtualinvoke $r11.<android.widget.Editor$SelectionModifierCursorController: void resetTouchOffsets()>();

        $r13 = r0.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController mSelectionModifierCursorController>;

        virtualinvoke r1.<android.view.ViewTreeObserver: void addOnTouchModeChangeListener(android.view.ViewTreeObserver$OnTouchModeChangeListener)>($r13);

     label3:
        $r5 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r6 = virtualinvoke $r5.<android.widget.TextView: java.lang.CharSequence getText()>();

        $i0 = interfaceinvoke $r6.<java.lang.CharSequence: int length()>();

        specialinvoke r0.<android.widget.Editor: void updateSpellCheckSpans(int,int,boolean)>(0, $i0, 1);

        $r7 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z1 = virtualinvoke $r7.<android.widget.TextView: boolean hasTransientState()>();

        if $z1 == 0 goto label4;

        $r8 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i1 = virtualinvoke $r8.<android.widget.TextView: int getSelectionStart()>();

        $r9 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i2 = virtualinvoke $r9.<android.widget.TextView: int getSelectionEnd()>();

        if $i1 == $i2 goto label4;

        $r10 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke $r10.<android.widget.TextView: void setHasTransientState(boolean)>(0);

        virtualinvoke r0.<android.widget.Editor: boolean startSelectionActionMode()>();

     label4:
        return;
    }

    public void onCommitCorrection(android.view.inputmethod.CorrectionInfo)
    {
        android.widget.Editor r0;
        android.view.inputmethod.CorrectionInfo r1;
        android.widget.Editor$CorrectionHighlighter $r2, $r3, $r4, $r5;

        r0 := @this: android.widget.Editor;

        r1 := @parameter0: android.view.inputmethod.CorrectionInfo;

        $r2 = r0.<android.widget.Editor: android.widget.Editor$CorrectionHighlighter mCorrectionHighlighter>;

        if $r2 != null goto label2;

        $r5 = new android.widget.Editor$CorrectionHighlighter;

        specialinvoke $r5.<android.widget.Editor$CorrectionHighlighter: void <init>(android.widget.Editor)>(r0);

        r0.<android.widget.Editor: android.widget.Editor$CorrectionHighlighter mCorrectionHighlighter> = $r5;

     label1:
        $r4 = r0.<android.widget.Editor: android.widget.Editor$CorrectionHighlighter mCorrectionHighlighter>;

        virtualinvoke $r4.<android.widget.Editor$CorrectionHighlighter: void highlight(android.view.inputmethod.CorrectionInfo)>(r1);

        return;

     label2:
        $r3 = r0.<android.widget.Editor: android.widget.Editor$CorrectionHighlighter mCorrectionHighlighter>;

        staticinvoke <android.widget.Editor$CorrectionHighlighter: void access$300(android.widget.Editor$CorrectionHighlighter,boolean)>($r3, 0);

        goto label1;
    }

    void onDetachedFromWindow()
    {
        android.widget.Editor r0;
        java.lang.CharSequence $r1;
        android.widget.Editor$Blink $r2, $r12, $r13;
        android.widget.Editor$InsertionPointCursorController $r3, $r11;
        android.widget.Editor$SelectionModifierCursorController $r4, $r10;
        java.lang.Runnable $r5, $r8;
        android.widget.SpellChecker $r6, $r7;
        android.widget.TextView $r9;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: java.lang.CharSequence mError>;

        if $r1 == null goto label1;

        specialinvoke r0.<android.widget.Editor: void hideError()>();

     label1:
        $r2 = r0.<android.widget.Editor: android.widget.Editor$Blink mBlink>;

        if $r2 == null goto label2;

        $r13 = r0.<android.widget.Editor: android.widget.Editor$Blink mBlink>;

        $r12 = r0.<android.widget.Editor: android.widget.Editor$Blink mBlink>;

        virtualinvoke $r13.<android.widget.Editor$Blink: void removeCallbacks(java.lang.Runnable)>($r12);

     label2:
        $r3 = r0.<android.widget.Editor: android.widget.Editor$InsertionPointCursorController mInsertionPointCursorController>;

        if $r3 == null goto label3;

        $r11 = r0.<android.widget.Editor: android.widget.Editor$InsertionPointCursorController mInsertionPointCursorController>;

        virtualinvoke $r11.<android.widget.Editor$InsertionPointCursorController: void onDetached()>();

     label3:
        $r4 = r0.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController mSelectionModifierCursorController>;

        if $r4 == null goto label4;

        $r10 = r0.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController mSelectionModifierCursorController>;

        virtualinvoke $r10.<android.widget.Editor$SelectionModifierCursorController: void onDetached()>();

     label4:
        $r5 = r0.<android.widget.Editor: java.lang.Runnable mShowSuggestionRunnable>;

        if $r5 == null goto label5;

        $r9 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r8 = r0.<android.widget.Editor: java.lang.Runnable mShowSuggestionRunnable>;

        virtualinvoke $r9.<android.widget.TextView: boolean removeCallbacks(java.lang.Runnable)>($r8);

     label5:
        virtualinvoke r0.<android.widget.Editor: void invalidateTextDisplayList()>();

        $r6 = r0.<android.widget.Editor: android.widget.SpellChecker mSpellChecker>;

        if $r6 == null goto label6;

        $r7 = r0.<android.widget.Editor: android.widget.SpellChecker mSpellChecker>;

        virtualinvoke $r7.<android.widget.SpellChecker: void closeSession()>();

        r0.<android.widget.Editor: android.widget.SpellChecker mSpellChecker> = null;

     label6:
        r0.<android.widget.Editor: boolean mPreserveDetachedSelection> = 1;

        virtualinvoke r0.<android.widget.Editor: void hideControllers()>();

        r0.<android.widget.Editor: boolean mPreserveDetachedSelection> = 0;

        r0.<android.widget.Editor: boolean mTemporaryDetach> = 0;

        return;
    }

    void onDraw(android.graphics.Canvas, android.text.Layout, android.graphics.Path, android.graphics.Paint, int)
    {
        android.widget.Editor r0;
        android.graphics.Canvas r1;
        android.text.Layout r2;
        android.graphics.Path r3;
        android.graphics.Paint r4;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        android.widget.Editor$InputMethodState r5;
        android.view.inputmethod.InputMethodManager r6;
        android.graphics.RectF r7, $r20, $r22, $r23, $r24, $r25, $r26;
        float[] r8, $r17, $r18, $r19, $r21;
        android.widget.TextView $r9, $r10, $r11, $r14, $r15, $r32;
        android.widget.Editor$CorrectionHighlighter $r12, $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z6;
        android.graphics.Matrix $r16;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        android.graphics.Rect $r27, $r28, $r29, $r30, $r31;

        r0 := @this: android.widget.Editor;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: android.text.Layout;

        r3 := @parameter2: android.graphics.Path;

        r4 := @parameter3: android.graphics.Paint;

        i0 := @parameter4: int;

        $r9 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i1 = virtualinvoke $r9.<android.widget.TextView: int getSelectionStart()>();

        $r10 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i2 = virtualinvoke $r10.<android.widget.TextView: int getSelectionEnd()>();

        r5 = r0.<android.widget.Editor: android.widget.Editor$InputMethodState mInputMethodState>;

        if r5 == null goto label3;

        $i4 = r5.<android.widget.Editor$InputMethodState: int mBatchEditNesting>;

        if $i4 != 0 goto label3;

        r6 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        if r6 == null goto label3;

        $r14 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z2 = virtualinvoke r6.<android.view.inputmethod.InputMethodManager: boolean isActive(android.view.View)>($r14);

        if $z2 == 0 goto label2;

        $z4 = r5.<android.widget.Editor$InputMethodState: boolean mContentChanged>;

        if $z4 != 0 goto label1;

        $z6 = r5.<android.widget.Editor$InputMethodState: boolean mSelectionModeChanged>;

        if $z6 == 0 goto label2;

     label1:
        virtualinvoke r0.<android.widget.Editor: boolean reportExtractedText()>();

     label2:
        $r15 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z3 = virtualinvoke r6.<android.view.inputmethod.InputMethodManager: boolean isWatchingCursor(android.view.View)>($r15);

        if $z3 == 0 goto label3;

        if r3 == null goto label3;

        r7 = r5.<android.widget.Editor$InputMethodState: android.graphics.RectF mTmpRectF>;

        virtualinvoke r3.<android.graphics.Path: void computeBounds(android.graphics.RectF,boolean)>(r7, 1);

        r8 = r5.<android.widget.Editor$InputMethodState: float[] mTmpOffset>;

        $r17 = r5.<android.widget.Editor$InputMethodState: float[] mTmpOffset>;

        $r17[1] = 0.0F;

        r8[0] = 0.0F;

        $r16 = virtualinvoke r1.<android.graphics.Canvas: android.graphics.Matrix getMatrix()>();

        $r19 = r5.<android.widget.Editor$InputMethodState: float[] mTmpOffset>;

        virtualinvoke $r16.<android.graphics.Matrix: void mapPoints(float[])>($r19);

        $r20 = r5.<android.widget.Editor$InputMethodState: android.graphics.RectF mTmpRectF>;

        $r18 = r5.<android.widget.Editor$InputMethodState: float[] mTmpOffset>;

        $f0 = $r18[0];

        $r21 = r5.<android.widget.Editor$InputMethodState: float[] mTmpOffset>;

        $f1 = $r21[1];

        virtualinvoke $r20.<android.graphics.RectF: void offset(float,float)>($f0, $f1);

        $r23 = r5.<android.widget.Editor$InputMethodState: android.graphics.RectF mTmpRectF>;

        $f3 = (float) i0;

        virtualinvoke $r23.<android.graphics.RectF: void offset(float,float)>(0.0F, $f3);

        $r28 = r5.<android.widget.Editor$InputMethodState: android.graphics.Rect mCursorRectInWindow>;

        $r22 = r5.<android.widget.Editor$InputMethodState: android.graphics.RectF mTmpRectF>;

        $f2 = $r22.<android.graphics.RectF: float left>;

        $d0 = (double) $f2;

        $d1 = 0.5 + $d0;

        $i7 = (int) $d1;

        $r24 = r5.<android.widget.Editor$InputMethodState: android.graphics.RectF mTmpRectF>;

        $f4 = $r24.<android.graphics.RectF: float top>;

        $d2 = (double) $f4;

        $d3 = 0.5 + $d2;

        $i8 = (int) $d3;

        $r25 = r5.<android.widget.Editor$InputMethodState: android.graphics.RectF mTmpRectF>;

        $f5 = $r25.<android.graphics.RectF: float right>;

        $d5 = (double) $f5;

        $d4 = 0.5 + $d5;

        $i5 = (int) $d4;

        $r26 = r5.<android.widget.Editor$InputMethodState: android.graphics.RectF mTmpRectF>;

        $f6 = $r26.<android.graphics.RectF: float bottom>;

        $d7 = (double) $f6;

        $d6 = 0.5 + $d7;

        $i6 = (int) $d6;

        virtualinvoke $r28.<android.graphics.Rect: void set(int,int,int,int)>($i7, $i8, $i5, $i6);

        $r32 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r27 = r5.<android.widget.Editor$InputMethodState: android.graphics.Rect mCursorRectInWindow>;

        $i12 = $r27.<android.graphics.Rect: int left>;

        $r31 = r5.<android.widget.Editor$InputMethodState: android.graphics.Rect mCursorRectInWindow>;

        $i11 = $r31.<android.graphics.Rect: int top>;

        $r30 = r5.<android.widget.Editor$InputMethodState: android.graphics.Rect mCursorRectInWindow>;

        $i10 = $r30.<android.graphics.Rect: int right>;

        $r29 = r5.<android.widget.Editor$InputMethodState: android.graphics.Rect mCursorRectInWindow>;

        $i9 = $r29.<android.graphics.Rect: int bottom>;

        virtualinvoke r6.<android.view.inputmethod.InputMethodManager: void updateCursor(android.view.View,int,int,int,int)>($r32, $i12, $i11, $i10, $i9);

     label3:
        $r12 = r0.<android.widget.Editor: android.widget.Editor$CorrectionHighlighter mCorrectionHighlighter>;

        if $r12 == null goto label4;

        $r13 = r0.<android.widget.Editor: android.widget.Editor$CorrectionHighlighter mCorrectionHighlighter>;

        virtualinvoke $r13.<android.widget.Editor$CorrectionHighlighter: void draw(android.graphics.Canvas,int)>(r1, i0);

     label4:
        if r3 == null goto label5;

        if i1 != i2 goto label5;

        $i3 = r0.<android.widget.Editor: int mCursorCount>;

        if $i3 <= 0 goto label5;

        specialinvoke r0.<android.widget.Editor: void drawCursor(android.graphics.Canvas,int)>(r1, i0);

        r3 = null;

     label5:
        $r11 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z1 = virtualinvoke $r11.<android.widget.TextView: boolean canHaveDisplayList()>();

        if $z1 == 0 goto label6;

        $z0 = virtualinvoke r1.<android.graphics.Canvas: boolean isHardwareAccelerated()>();

        if $z0 == 0 goto label6;

        specialinvoke r0.<android.widget.Editor: void drawHardwareAccelerated(android.graphics.Canvas,android.text.Layout,android.graphics.Path,android.graphics.Paint,int)>(r1, r2, r3, r4, i0);

        return;

     label6:
        virtualinvoke r2.<android.text.Layout: void draw(android.graphics.Canvas,android.graphics.Path,android.graphics.Paint,int)>(r1, r3, r4, i0);

        return;
    }

    void onDrop(android.view.DragEvent)
    {
        android.widget.Editor r0;
        android.view.DragEvent r1;
        java.lang.StringBuilder r2, $r7;
        android.content.ClipData r3;
        int i0, i1, i2, i3, i5, i6, i7, i8, i9, i10, i11, $i12, $i13, $i14, $i15, $i18, $i19, $i20, $i21;
        java.lang.Object r4;
        boolean z0, z1, $z2, $z3;
        android.widget.Editor$DragLocalState r5;
        long l4;
        java.lang.CharSequence r6, $r9, $r12, $r18, $r20, $r24;
        android.widget.TextView $r8, $r10, $r11, $r14, $r15, $r16, $r17, $r19, $r21, $r22, $r23, $r26, $r28;
        float $f0, $f1;
        android.text.Spannable $r13;
        char $c16, $c17;
        android.content.ClipData$Item $r27;
        android.content.Context $r29;

        r0 := @this: android.widget.Editor;

        r1 := @parameter0: android.view.DragEvent;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("");

        r2 = $r7;

        r3 = virtualinvoke r1.<android.view.DragEvent: android.content.ClipData getClipData()>();

        i0 = virtualinvoke r3.<android.content.ClipData: int getItemCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r27 = virtualinvoke r3.<android.content.ClipData: android.content.ClipData$Item getItemAt(int)>(i1);

        $r28 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r29 = virtualinvoke $r28.<android.widget.TextView: android.content.Context getContext()>();

        $r24 = virtualinvoke $r27.<android.content.ClipData$Item: java.lang.CharSequence coerceToStyledText(android.content.Context)>($r29);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r24);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r8 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $f1 = virtualinvoke r1.<android.view.DragEvent: float getX()>();

        $f0 = virtualinvoke r1.<android.view.DragEvent: float getY()>();

        i2 = virtualinvoke $r8.<android.widget.TextView: int getOffsetForPosition(float,float)>($f1, $f0);

        r4 = virtualinvoke r1.<android.view.DragEvent: java.lang.Object getLocalState()>();

        z0 = r4 instanceof android.widget.Editor$DragLocalState;

        r5 = null;

        if z0 == 0 goto label3;

        r5 = (android.widget.Editor$DragLocalState) r4;

     label3:
        if r5 == null goto label6;

        $r26 = r5.<android.widget.Editor$DragLocalState: android.widget.TextView sourceTextView>;

        $r23 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        if $r26 != $r23 goto label6;

        z1 = 1;

     label4:
        if z1 == 0 goto label7;

        $i20 = r5.<android.widget.Editor$DragLocalState: int start>;

        if i2 < $i20 goto label7;

        $i19 = r5.<android.widget.Editor$DragLocalState: int end>;

        if i2 >= $i19 goto label7;

     label5:
        return;

     label6:
        z1 = 0;

        goto label4;

     label7:
        $r10 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r9 = virtualinvoke $r10.<android.widget.TextView: java.lang.CharSequence getText()>();

        i3 = interfaceinvoke $r9.<java.lang.CharSequence: int length()>();

        $r11 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        l4 = virtualinvoke $r11.<android.widget.TextView: long prepareSpacesAroundPaste(int,int,java.lang.CharSequence)>(i2, i2, r2);

        i5 = staticinvoke <android.text.TextUtils: int unpackRangeStartFromLong(long)>(l4);

        i6 = staticinvoke <android.text.TextUtils: int unpackRangeEndFromLong(long)>(l4);

        $r14 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r12 = virtualinvoke $r14.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r13 = (android.text.Spannable) $r12;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int)>($r13, i6);

        $r15 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke $r15.<android.widget.TextView: void replaceText_internal(int,int,java.lang.CharSequence)>(i5, i6, r2);

        if z1 == 0 goto label5;

        i8 = r5.<android.widget.Editor$DragLocalState: int start>;

        i7 = r5.<android.widget.Editor$DragLocalState: int end>;

        if i6 > i8 goto label8;

        $r21 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r20 = virtualinvoke $r21.<android.widget.TextView: java.lang.CharSequence getText()>();

        $i21 = interfaceinvoke $r20.<java.lang.CharSequence: int length()>();

        i11 = $i21 - i3;

        i8 = i8 + i11;

        i7 = i7 + i11;

     label8:
        $r16 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke $r16.<android.widget.TextView: void deleteText_internal(int,int)>(i8, i7);

        $i12 = i8 - 1;

        i10 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i12);

        $r17 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r18 = virtualinvoke $r17.<android.widget.TextView: java.lang.CharSequence getText()>();

        $i13 = interfaceinvoke $r18.<java.lang.CharSequence: int length()>();

        $i14 = i8 + 1;

        i9 = staticinvoke <java.lang.Math: int min(int,int)>($i13, $i14);

        $i15 = i10 + 1;

        if i9 <= $i15 goto label5;

        $r19 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        r6 = virtualinvoke $r19.<android.widget.TextView: java.lang.CharSequence getTransformedText(int,int)>(i10, i9);

        $c17 = interfaceinvoke r6.<java.lang.CharSequence: char charAt(int)>(0);

        $z3 = staticinvoke <java.lang.Character: boolean isSpaceChar(char)>($c17);

        if $z3 == 0 goto label5;

        $c16 = interfaceinvoke r6.<java.lang.CharSequence: char charAt(int)>(1);

        $z2 = staticinvoke <java.lang.Character: boolean isSpaceChar(char)>($c16);

        if $z2 == 0 goto label5;

        $r22 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i18 = i10 + 1;

        virtualinvoke $r22.<android.widget.TextView: void deleteText_internal(int,int)>(i10, $i18);

        return;
    }

    void onFocusChanged(boolean, int)
    {
        android.widget.Editor r0;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z12, $z13;
        int i0, i1, i2, i3, i4, i5, $i7;
        android.text.method.MovementMethod r1;
        long $l6;
        java.lang.CharSequence $r2, $r9, $r17, $r20, $r24, $r28, $r29;
        android.widget.TextView $r3, $r4, $r7, $r8, $r10, $r11, $r13, $r14, $r15, $r16, $r18, $r19, $r22, $r25, $r26, $r30;
        android.widget.Editor$SelectionModifierCursorController $r5, $r6;
        android.text.Spannable $r12, $r21, $r23, $r27;

        r0 := @this: android.widget.Editor;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        $l6 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<android.widget.Editor: long mShowCursor> = $l6;

        virtualinvoke r0.<android.widget.Editor: void ensureEndedBatchEdit()>();

        if z0 == 0 goto label14;

        $r11 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i3 = virtualinvoke $r11.<android.widget.TextView: int getSelectionStart()>();

        $r13 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i4 = virtualinvoke $r13.<android.widget.TextView: int getSelectionEnd()>();

        $z6 = r0.<android.widget.Editor: boolean mSelectAllOnFocus>;

        if $z6 == 0 goto label12;

        if i3 != 0 goto label12;

        $r30 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r29 = virtualinvoke $r30.<android.widget.TextView: java.lang.CharSequence getText()>();

        $i7 = interfaceinvoke $r29.<java.lang.CharSequence: int length()>();

        if i4 != $i7 goto label12;

        z1 = 1;

     label01:
        $z7 = r0.<android.widget.Editor: boolean mFrozenWithFocus>;

        if $z7 == 0 goto label13;

        $r26 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z13 = virtualinvoke $r26.<android.widget.TextView: boolean hasSelection()>();

        if $z13 == 0 goto label13;

        if z1 != 0 goto label13;

        z2 = 1;

     label02:
        r0.<android.widget.Editor: boolean mCreatedWithASelection> = z2;

        $z8 = r0.<android.widget.Editor: boolean mFrozenWithFocus>;

        if $z8 == 0 goto label03;

        if i3 < 0 goto label03;

        if i4 >= 0 goto label09;

     label03:
        i5 = specialinvoke r0.<android.widget.Editor: int getLastTapPosition()>();

        if i5 < 0 goto label04;

        $r22 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r28 = virtualinvoke $r22.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r27 = (android.text.Spannable) $r28;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int)>($r27, i5);

     label04:
        $r14 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        r1 = virtualinvoke $r14.<android.widget.TextView: android.text.method.MovementMethod getMovementMethod()>();

        if r1 == null goto label05;

        $r25 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r19 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r24 = virtualinvoke $r19.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r23 = (android.text.Spannable) $r24;

        interfaceinvoke r1.<android.text.method.MovementMethod: void onTakeFocus(android.widget.TextView,android.text.Spannable,int)>($r25, $r23, i0);

     label05:
        $r15 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z9 = $r15 instanceof android.inputmethodservice.ExtractEditText;

        if $z9 != 0 goto label06;

        $z12 = r0.<android.widget.Editor: boolean mSelectionMoved>;

        if $z12 == 0 goto label07;

     label06:
        if i3 < 0 goto label07;

        if i4 < 0 goto label07;

        $r16 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r20 = virtualinvoke $r16.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r21 = (android.text.Spannable) $r20;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>($r21, i3, i4);

     label07:
        $z10 = r0.<android.widget.Editor: boolean mSelectAllOnFocus>;

        if $z10 == 0 goto label08;

        $r18 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke $r18.<android.widget.TextView: boolean selectAllText()>();

     label08:
        r0.<android.widget.Editor: boolean mTouchFocusSelected> = 1;

     label09:
        r0.<android.widget.Editor: boolean mFrozenWithFocus> = 0;

        r0.<android.widget.Editor: boolean mSelectionMoved> = 0;

        $r17 = r0.<android.widget.Editor: java.lang.CharSequence mError>;

        if $r17 == null goto label10;

        specialinvoke r0.<android.widget.Editor: void showError()>();

     label10:
        virtualinvoke r0.<android.widget.Editor: void makeBlink()>();

     label11:
        return;

     label12:
        z1 = 0;

        goto label01;

     label13:
        z2 = 0;

        goto label02;

     label14:
        $r2 = r0.<android.widget.Editor: java.lang.CharSequence mError>;

        if $r2 == null goto label15;

        specialinvoke r0.<android.widget.Editor: void hideError()>();

     label15:
        $r3 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke $r3.<android.widget.TextView: void onEndBatchEdit()>();

        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z3 = $r4 instanceof android.inputmethodservice.ExtractEditText;

        if $z3 == 0 goto label17;

        $r7 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i1 = virtualinvoke $r7.<android.widget.TextView: int getSelectionStart()>();

        $r8 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i2 = virtualinvoke $r8.<android.widget.TextView: int getSelectionEnd()>();

        virtualinvoke r0.<android.widget.Editor: void hideControllers()>();

        $r10 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r9 = virtualinvoke $r10.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r12 = (android.text.Spannable) $r9;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>($r12, i1, i2);

     label16:
        $r6 = r0.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController mSelectionModifierCursorController>;

        if $r6 == null goto label11;

        $r5 = r0.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController mSelectionModifierCursorController>;

        virtualinvoke $r5.<android.widget.Editor$SelectionModifierCursorController: void resetTouchOffsets()>();

        return;

     label17:
        $z5 = r0.<android.widget.Editor: boolean mTemporaryDetach>;

        if $z5 == 0 goto label18;

        r0.<android.widget.Editor: boolean mPreserveDetachedSelection> = 1;

     label18:
        virtualinvoke r0.<android.widget.Editor: void hideControllers()>();

        $z4 = r0.<android.widget.Editor: boolean mTemporaryDetach>;

        if $z4 == 0 goto label19;

        r0.<android.widget.Editor: boolean mPreserveDetachedSelection> = 0;

     label19:
        specialinvoke r0.<android.widget.Editor: void downgradeEasyCorrectionSpans()>();

        goto label16;
    }

    void onLocaleChanged()
    {
        android.widget.Editor r0;

        r0 := @this: android.widget.Editor;

        r0.<android.widget.Editor: android.text.method.WordIterator mWordIterator> = null;

        return;
    }

    void onScreenStateChanged(int)
    {
        android.widget.Editor r0;
        int i0;

        r0 := @this: android.widget.Editor;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        return;

     label2:
        specialinvoke r0.<android.widget.Editor: void resumeBlink()>();

        return;

     label3:
        specialinvoke r0.<android.widget.Editor: void suspendBlink()>();

        return;
    }

    void onScrollChanged()
    {
        android.widget.Editor r0;
        android.widget.Editor$PositionListener $r1, $r2;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.widget.Editor$PositionListener mPositionListener>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.Editor: android.widget.Editor$PositionListener mPositionListener>;

        virtualinvoke $r2.<android.widget.Editor$PositionListener: void onScrollChanged()>();

     label1:
        return;
    }

    void onTouchEvent(android.view.MotionEvent)
    {
        android.widget.Editor r0;
        android.view.MotionEvent r1;
        boolean $z0;
        java.lang.Runnable $r2, $r3;
        int $i0;
        float $f0, $f1;
        android.widget.TextView $r4;
        android.widget.Editor$SelectionModifierCursorController $r5;

        r0 := @this: android.widget.Editor;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = virtualinvoke r0.<android.widget.Editor: boolean hasSelectionController()>();

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r0.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController getSelectionController()>();

        virtualinvoke $r5.<android.widget.Editor$SelectionModifierCursorController: void onTouchEvent(android.view.MotionEvent)>(r1);

     label1:
        $r2 = r0.<android.widget.Editor: java.lang.Runnable mShowSuggestionRunnable>;

        if $r2 == null goto label2;

        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r3 = r0.<android.widget.Editor: java.lang.Runnable mShowSuggestionRunnable>;

        virtualinvoke $r4.<android.widget.TextView: boolean removeCallbacks(java.lang.Runnable)>($r3);

        r0.<android.widget.Editor: java.lang.Runnable mShowSuggestionRunnable> = null;

     label2:
        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        if $i0 != 0 goto label3;

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        r0.<android.widget.Editor: float mLastDownPositionX> = $f0;

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        r0.<android.widget.Editor: float mLastDownPositionY> = $f1;

        r0.<android.widget.Editor: boolean mTouchFocusSelected> = 0;

        r0.<android.widget.Editor: boolean mIgnoreActionUpEvent> = 0;

     label3:
        return;
    }

    void onTouchUpEvent(android.view.MotionEvent)
    {
        android.widget.Editor r0;
        android.view.MotionEvent r1;
        boolean z0, $z1, $z2, $z3, $z4, $z6;
        java.lang.CharSequence r2;
        int i0, $i1, $i3;
        android.widget.TextView $r3, $r4, $r10, $r12;
        float $f0, $f1;
        android.text.Spannable $r5;
        android.widget.SpellChecker $r6, $r11;
        android.widget.Editor$1 $r7;
        android.widget.Editor$InsertionPointCursorController $r8;
        java.lang.Runnable $r9;
        long $l2;

        r0 := @this: android.widget.Editor;

        r1 := @parameter0: android.view.MotionEvent;

        $z1 = r0.<android.widget.Editor: boolean mSelectAllOnFocus>;

        if $z1 == 0 goto label4;

        $r12 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z6 = virtualinvoke $r12.<android.widget.TextView: boolean didTouchFocusSelect()>();

        if $z6 == 0 goto label4;

        z0 = 1;

     label1:
        virtualinvoke r0.<android.widget.Editor: void hideControllers()>();

        $r3 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        r2 = virtualinvoke $r3.<android.widget.TextView: java.lang.CharSequence getText()>();

        if z0 != 0 goto label3;

        $i1 = interfaceinvoke r2.<java.lang.CharSequence: int length()>();

        if $i1 <= 0 goto label3;

        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        i0 = virtualinvoke $r4.<android.widget.TextView: int getOffsetForPosition(float,float)>($f0, $f1);

        $r5 = (android.text.Spannable) r2;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int)>($r5, i0);

        $r6 = r0.<android.widget.Editor: android.widget.SpellChecker mSpellChecker>;

        if $r6 == null goto label2;

        $r11 = r0.<android.widget.Editor: android.widget.SpellChecker mSpellChecker>;

        virtualinvoke $r11.<android.widget.SpellChecker: void onSelectionChanged()>();

     label2:
        $z2 = specialinvoke r0.<android.widget.Editor: boolean extractedTextModeWillBeStarted()>();

        if $z2 != 0 goto label3;

        $z4 = specialinvoke r0.<android.widget.Editor: boolean isCursorInsideEasyCorrectionSpan()>();

        if $z4 == 0 goto label5;

        $r7 = new android.widget.Editor$1;

        specialinvoke $r7.<android.widget.Editor$1: void <init>(android.widget.Editor)>(r0);

        r0.<android.widget.Editor: java.lang.Runnable mShowSuggestionRunnable> = $r7;

        $r10 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r9 = r0.<android.widget.Editor: java.lang.Runnable mShowSuggestionRunnable>;

        $i3 = staticinvoke <android.view.ViewConfiguration: int getDoubleTapTimeout()>();

        $l2 = (long) $i3;

        virtualinvoke $r10.<android.widget.TextView: boolean postDelayed(java.lang.Runnable,long)>($r9, $l2);

     label3:
        return;

     label4:
        z0 = 0;

        goto label1;

     label5:
        $z3 = virtualinvoke r0.<android.widget.Editor: boolean hasInsertionController()>();

        if $z3 == 0 goto label3;

        $r8 = virtualinvoke r0.<android.widget.Editor: android.widget.Editor$InsertionPointCursorController getInsertionController()>();

        virtualinvoke $r8.<android.widget.Editor$InsertionPointCursorController: void show()>();

        return;
    }

    void onWindowFocusChanged(boolean)
    {
        android.widget.Editor r0;
        boolean z0;
        android.widget.Editor$Blink $r1, $r6, $r7, $r8;
        android.widget.Editor$InputContentType $r2, $r5;
        android.widget.Editor$SuggestionsPopupWindow $r3, $r4;

        r0 := @this: android.widget.Editor;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label2;

        $r7 = r0.<android.widget.Editor: android.widget.Editor$Blink mBlink>;

        if $r7 == null goto label1;

        $r8 = r0.<android.widget.Editor: android.widget.Editor$Blink mBlink>;

        virtualinvoke $r8.<android.widget.Editor$Blink: void uncancel()>();

        virtualinvoke r0.<android.widget.Editor: void makeBlink()>();

     label1:
        return;

     label2:
        $r1 = r0.<android.widget.Editor: android.widget.Editor$Blink mBlink>;

        if $r1 == null goto label3;

        $r6 = r0.<android.widget.Editor: android.widget.Editor$Blink mBlink>;

        virtualinvoke $r6.<android.widget.Editor$Blink: void cancel()>();

     label3:
        $r2 = r0.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        if $r2 == null goto label4;

        $r5 = r0.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r5.<android.widget.Editor$InputContentType: boolean enterDown> = 0;

     label4:
        virtualinvoke r0.<android.widget.Editor: void hideControllers()>();

        $r3 = r0.<android.widget.Editor: android.widget.Editor$SuggestionsPopupWindow mSuggestionsPopupWindow>;

        if $r3 == null goto label5;

        $r4 = r0.<android.widget.Editor: android.widget.Editor$SuggestionsPopupWindow mSuggestionsPopupWindow>;

        virtualinvoke $r4.<android.widget.Editor$SuggestionsPopupWindow: void onParentLostFocus()>();

     label5:
        virtualinvoke r0.<android.widget.Editor: void ensureEndedBatchEdit()>();

        return;
    }

    public boolean performLongClick(boolean)
    {
        android.widget.Editor r0;
        boolean z0, $z1, $z4, $z5;
        int i0, i1, i2;
        java.lang.CharSequence r1, $r18;
        android.content.ClipData r2;
        android.widget.Editor$DragLocalState r3, $r10;
        android.view.ActionMode $r4;
        android.widget.Editor$SelectionModifierCursorController $r5, $r6;
        android.widget.TextView $r7, $r8, $r9, $r11, $r12, $r14, $r17;
        android.view.View$DragShadowBuilder $r13;
        float $f0, $f1, $f2, $f3;
        android.text.Spannable $r15;
        android.widget.Editor$InsertionPointCursorController $r16;

        r0 := @this: android.widget.Editor;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label1;

        $f0 = r0.<android.widget.Editor: float mLastDownPositionX>;

        $f1 = r0.<android.widget.Editor: float mLastDownPositionY>;

        $z5 = specialinvoke r0.<android.widget.Editor: boolean isPositionOnText(float,float)>($f0, $f1);

        if $z5 != 0 goto label1;

        $z4 = r0.<android.widget.Editor: boolean mInsertionControllerEnabled>;

        if $z4 == 0 goto label1;

        $r14 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $f3 = r0.<android.widget.Editor: float mLastDownPositionX>;

        $f2 = r0.<android.widget.Editor: float mLastDownPositionY>;

        i2 = virtualinvoke $r14.<android.widget.TextView: int getOffsetForPosition(float,float)>($f3, $f2);

        virtualinvoke r0.<android.widget.Editor: void stopSelectionActionMode()>();

        $r17 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r18 = virtualinvoke $r17.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r15 = (android.text.Spannable) $r18;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int)>($r15, i2);

        $r16 = virtualinvoke r0.<android.widget.Editor: android.widget.Editor$InsertionPointCursorController getInsertionController()>();

        virtualinvoke $r16.<android.widget.Editor$InsertionPointCursorController: void showWithActionPopup()>();

        z0 = 1;

     label1:
        if z0 != 0 goto label3;

        $r4 = r0.<android.widget.Editor: android.view.ActionMode mSelectionActionMode>;

        if $r4 == null goto label3;

        $z1 = specialinvoke r0.<android.widget.Editor: boolean touchPositionIsInSelection()>();

        if $z1 == 0 goto label5;

        $r7 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i0 = virtualinvoke $r7.<android.widget.TextView: int getSelectionStart()>();

        $r8 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i1 = virtualinvoke $r8.<android.widget.TextView: int getSelectionEnd()>();

        $r9 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        r1 = virtualinvoke $r9.<android.widget.TextView: java.lang.CharSequence getTransformedText(int,int)>(i0, i1);

        r2 = staticinvoke <android.content.ClipData: android.content.ClipData newPlainText(java.lang.CharSequence,java.lang.CharSequence)>(null, r1);

        $r10 = new android.widget.Editor$DragLocalState;

        $r12 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        specialinvoke $r10.<android.widget.Editor$DragLocalState: void <init>(android.widget.TextView,int,int)>($r12, i0, i1);

        r3 = $r10;

        $r11 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r13 = specialinvoke r0.<android.widget.Editor: android.view.View$DragShadowBuilder getTextThumbnailBuilder(java.lang.CharSequence)>(r1);

        virtualinvoke $r11.<android.widget.TextView: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>(r2, $r13, r3, 0);

        virtualinvoke r0.<android.widget.Editor: void stopSelectionActionMode()>();

     label2:
        z0 = 1;

     label3:
        if z0 != 0 goto label4;

        z0 = virtualinvoke r0.<android.widget.Editor: boolean startSelectionActionMode()>();

     label4:
        return z0;

     label5:
        $r5 = virtualinvoke r0.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController getSelectionController()>();

        virtualinvoke $r5.<android.widget.Editor$SelectionModifierCursorController: void hide()>();

        specialinvoke r0.<android.widget.Editor: boolean selectCurrentWord()>();

        $r6 = virtualinvoke r0.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController getSelectionController()>();

        virtualinvoke $r6.<android.widget.Editor$SelectionModifierCursorController: void show()>();

        goto label2;
    }

    void prepareCursorControllers()
    {
        android.widget.Editor r0;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8;
        android.view.ViewGroup$LayoutParams r1;
        android.view.WindowManager$LayoutParams r2;
        android.widget.TextView $r3, $r8, $r11;
        android.view.View $r4;
        android.widget.Editor$SelectionModifierCursorController $r5, $r6;
        android.widget.Editor$InsertionPointCursorController $r7, $r9;
        android.text.Layout $r10;
        int $i0, $i1;

        r0 := @this: android.widget.Editor;

        z0 = 1;

        $r3 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r4 = virtualinvoke $r3.<android.widget.TextView: android.view.View getRootView()>();

        r1 = virtualinvoke $r4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        z1 = r1 instanceof android.view.WindowManager$LayoutParams;

        z2 = 0;

        if z1 == 0 goto label02;

        r2 = (android.view.WindowManager$LayoutParams) r1;

        $i1 = r2.<android.view.WindowManager$LayoutParams: int type>;

        if $i1 < 1000 goto label01;

        $i0 = r2.<android.view.WindowManager$LayoutParams: int type>;

        if $i0 <= 1999 goto label08;

     label01:
        z2 = 1;

     label02:
        if z2 == 0 goto label09;

        $r11 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r10 = virtualinvoke $r11.<android.widget.TextView: android.text.Layout getLayout()>();

        if $r10 == null goto label09;

        z3 = 1;

     label03:
        if z3 == 0 goto label10;

        $z7 = virtualinvoke r0.<android.widget.Editor: boolean isCursorVisible()>();

        if $z7 == 0 goto label10;

        z4 = 1;

     label04:
        r0.<android.widget.Editor: boolean mInsertionControllerEnabled> = z4;

        if z3 == 0 goto label11;

        $r8 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z8 = virtualinvoke $r8.<android.widget.TextView: boolean textCanBeSelected()>();

        if $z8 == 0 goto label11;

     label05:
        r0.<android.widget.Editor: boolean mSelectionControllerEnabled> = z0;

        $z5 = r0.<android.widget.Editor: boolean mInsertionControllerEnabled>;

        if $z5 != 0 goto label06;

        specialinvoke r0.<android.widget.Editor: void hideInsertionPointCursorController()>();

        $r7 = r0.<android.widget.Editor: android.widget.Editor$InsertionPointCursorController mInsertionPointCursorController>;

        if $r7 == null goto label06;

        $r9 = r0.<android.widget.Editor: android.widget.Editor$InsertionPointCursorController mInsertionPointCursorController>;

        virtualinvoke $r9.<android.widget.Editor$InsertionPointCursorController: void onDetached()>();

        r0.<android.widget.Editor: android.widget.Editor$InsertionPointCursorController mInsertionPointCursorController> = null;

     label06:
        $z6 = r0.<android.widget.Editor: boolean mSelectionControllerEnabled>;

        if $z6 != 0 goto label07;

        virtualinvoke r0.<android.widget.Editor: void stopSelectionActionMode()>();

        $r5 = r0.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController mSelectionModifierCursorController>;

        if $r5 == null goto label07;

        $r6 = r0.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController mSelectionModifierCursorController>;

        virtualinvoke $r6.<android.widget.Editor$SelectionModifierCursorController: void onDetached()>();

        r0.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController mSelectionModifierCursorController> = null;

     label07:
        return;

     label08:
        z2 = 0;

        goto label02;

     label09:
        z3 = 0;

        goto label03;

     label10:
        z4 = 0;

        goto label04;

     label11:
        z0 = 0;

        goto label05;
    }

    boolean reportExtractedText()
    {
        android.widget.Editor r0;
        android.widget.Editor$InputMethodState r1;
        boolean z0, $z1, $z2;
        android.view.inputmethod.ExtractedTextRequest r2;
        android.view.inputmethod.InputMethodManager r3;
        int $i0, $i1, $i2, $i3, $i4;
        android.view.inputmethod.ExtractedText $r4, $r5;
        android.widget.TextView $r6;

        r0 := @this: android.widget.Editor;

        r1 = r0.<android.widget.Editor: android.widget.Editor$InputMethodState mInputMethodState>;

        if r1 == null goto label3;

        z0 = r1.<android.widget.Editor$InputMethodState: boolean mContentChanged>;

        if z0 != 0 goto label1;

        $z2 = r1.<android.widget.Editor$InputMethodState: boolean mSelectionModeChanged>;

        if $z2 == 0 goto label3;

     label1:
        r1.<android.widget.Editor$InputMethodState: boolean mContentChanged> = 0;

        r1.<android.widget.Editor$InputMethodState: boolean mSelectionModeChanged> = 0;

        r2 = r1.<android.widget.Editor$InputMethodState: android.view.inputmethod.ExtractedTextRequest mExtractedTextRequest>;

        if r2 == null goto label3;

        r3 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        if r3 == null goto label3;

        $i0 = r1.<android.widget.Editor$InputMethodState: int mChangedStart>;

        if $i0 >= 0 goto label2;

        if z0 != 0 goto label2;

        r1.<android.widget.Editor$InputMethodState: int mChangedStart> = -2;

     label2:
        $i3 = r1.<android.widget.Editor$InputMethodState: int mChangedStart>;

        $i2 = r1.<android.widget.Editor$InputMethodState: int mChangedEnd>;

        $i1 = r1.<android.widget.Editor$InputMethodState: int mChangedDelta>;

        $r4 = r1.<android.widget.Editor$InputMethodState: android.view.inputmethod.ExtractedText mExtractedText>;

        $z1 = specialinvoke r0.<android.widget.Editor: boolean extractTextInternal(android.view.inputmethod.ExtractedTextRequest,int,int,int,android.view.inputmethod.ExtractedText)>(r2, $i3, $i2, $i1, $r4);

        if $z1 == 0 goto label3;

        $r6 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i4 = r2.<android.view.inputmethod.ExtractedTextRequest: int token>;

        $r5 = r1.<android.widget.Editor$InputMethodState: android.view.inputmethod.ExtractedText mExtractedText>;

        virtualinvoke r3.<android.view.inputmethod.InputMethodManager: void updateExtractedText(android.view.View,int,android.view.inputmethod.ExtractedText)>($r6, $i4, $r5);

        r1.<android.widget.Editor$InputMethodState: int mChangedStart> = -1;

        r1.<android.widget.Editor$InputMethodState: int mChangedEnd> = -1;

        r1.<android.widget.Editor$InputMethodState: int mChangedDelta> = 0;

        r1.<android.widget.Editor$InputMethodState: boolean mContentChanged> = 0;

        return 1;

     label3:
        return 0;
    }

    void sendOnTextChanged(int, int)
    {
        android.widget.Editor r0;
        int i0, i1, $i2;

        r0 := @this: android.widget.Editor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i0 + i1;

        specialinvoke r0.<android.widget.Editor: void updateSpellCheckSpans(int,int,boolean)>(i0, $i2, 0);

        specialinvoke r0.<android.widget.Editor: void hideCursorControllers()>();

        return;
    }

    public void setError(java.lang.CharSequence, android.graphics.drawable.Drawable)
    {
        android.widget.Editor r0;
        java.lang.CharSequence r1, $r3, $r4;
        android.graphics.drawable.Drawable r2;
        android.widget.TextView $r5;
        boolean $z0, $z1;
        android.widget.Editor$ErrorPopup $r6, $r7, $r8;

        r0 := @this: android.widget.Editor;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: android.graphics.drawable.Drawable;

        $r3 = staticinvoke <android.text.TextUtils: java.lang.CharSequence stringOrSpannedString(java.lang.CharSequence)>(r1);

        r0.<android.widget.Editor: java.lang.CharSequence mError> = $r3;

        r0.<android.widget.Editor: boolean mErrorWasChanged> = 1;

        $r4 = r0.<android.widget.Editor: java.lang.CharSequence mError>;

        if $r4 != null goto label4;

        specialinvoke r0.<android.widget.Editor: void setErrorIcon(android.graphics.drawable.Drawable)>(null);

        $r6 = r0.<android.widget.Editor: android.widget.Editor$ErrorPopup mErrorPopup>;

        if $r6 == null goto label2;

        $r7 = r0.<android.widget.Editor: android.widget.Editor$ErrorPopup mErrorPopup>;

        $z1 = virtualinvoke $r7.<android.widget.Editor$ErrorPopup: boolean isShowing()>();

        if $z1 == 0 goto label1;

        $r8 = r0.<android.widget.Editor: android.widget.Editor$ErrorPopup mErrorPopup>;

        virtualinvoke $r8.<android.widget.Editor$ErrorPopup: void dismiss()>();

     label1:
        r0.<android.widget.Editor: android.widget.Editor$ErrorPopup mErrorPopup> = null;

     label2:
        r0.<android.widget.Editor: boolean mShowErrorAfterAttach> = 0;

     label3:
        return;

     label4:
        specialinvoke r0.<android.widget.Editor: void setErrorIcon(android.graphics.drawable.Drawable)>(r2);

        $r5 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z0 = virtualinvoke $r5.<android.widget.TextView: boolean isFocused()>();

        if $z0 == 0 goto label3;

        specialinvoke r0.<android.widget.Editor: void showError()>();

        return;
    }

    void setFrame()
    {
        android.widget.Editor r0;
        android.widget.TextView r1, $r8;
        android.widget.Editor$ErrorPopup $r2, $r3, $r6, $r7, $r9, $r10;
        android.view.View $r4;
        java.lang.CharSequence $r5;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.widget.Editor;

        $r2 = r0.<android.widget.Editor: android.widget.Editor$ErrorPopup mErrorPopup>;

        if $r2 == null goto label1;

        $r3 = r0.<android.widget.Editor: android.widget.Editor$ErrorPopup mErrorPopup>;

        $r4 = virtualinvoke $r3.<android.widget.Editor$ErrorPopup: android.view.View getContentView()>();

        r1 = (android.widget.TextView) $r4;

        $r6 = r0.<android.widget.Editor: android.widget.Editor$ErrorPopup mErrorPopup>;

        $r5 = r0.<android.widget.Editor: java.lang.CharSequence mError>;

        specialinvoke r0.<android.widget.Editor: void chooseSize(android.widget.PopupWindow,java.lang.CharSequence,android.widget.TextView)>($r6, $r5, r1);

        $r7 = r0.<android.widget.Editor: android.widget.Editor$ErrorPopup mErrorPopup>;

        $r8 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i0 = specialinvoke r0.<android.widget.Editor: int getErrorX()>();

        $i1 = specialinvoke r0.<android.widget.Editor: int getErrorY()>();

        $r9 = r0.<android.widget.Editor: android.widget.Editor$ErrorPopup mErrorPopup>;

        $i2 = virtualinvoke $r9.<android.widget.Editor$ErrorPopup: int getWidth()>();

        $r10 = r0.<android.widget.Editor: android.widget.Editor$ErrorPopup mErrorPopup>;

        $i3 = virtualinvoke $r10.<android.widget.Editor$ErrorPopup: int getHeight()>();

        virtualinvoke $r7.<android.widget.Editor$ErrorPopup: void update(android.view.View,int,int,int,int)>($r8, $i0, $i1, $i2, $i3);

     label1:
        return;
    }

    void showSuggestions()
    {
        android.widget.Editor r0;
        android.widget.Editor$SuggestionsPopupWindow $r1, $r2, $r3;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.widget.Editor$SuggestionsPopupWindow mSuggestionsPopupWindow>;

        if $r1 != null goto label1;

        $r3 = new android.widget.Editor$SuggestionsPopupWindow;

        specialinvoke $r3.<android.widget.Editor$SuggestionsPopupWindow: void <init>(android.widget.Editor)>(r0);

        r0.<android.widget.Editor: android.widget.Editor$SuggestionsPopupWindow mSuggestionsPopupWindow> = $r3;

     label1:
        virtualinvoke r0.<android.widget.Editor: void hideControllers()>();

        $r2 = r0.<android.widget.Editor: android.widget.Editor$SuggestionsPopupWindow mSuggestionsPopupWindow>;

        virtualinvoke $r2.<android.widget.Editor$SuggestionsPopupWindow: void show()>();

        return;
    }

    boolean startSelectionActionMode()
    {
        android.widget.Editor r0;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z8;
        android.widget.Editor$SelectionActionModeCallback r1, $r9;
        android.view.inputmethod.InputMethodManager r2;
        android.view.ActionMode $r3, $r6, $r10;
        android.widget.TextView $r4, $r5, $r7, $r8, $r11;

        r0 := @this: android.widget.Editor;

        $r3 = r0.<android.widget.Editor: android.view.ActionMode mSelectionActionMode>;

        if $r3 == null goto label2;

        z1 = 0;

     label1:
        return z1;

     label2:
        $z2 = specialinvoke r0.<android.widget.Editor: boolean canSelectText()>();

        if $z2 == 0 goto label3;

        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z3 = virtualinvoke $r4.<android.widget.TextView: boolean requestFocus()>();

        if $z3 != 0 goto label4;

     label3:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TextView", "TextView does not support text selection. Action mode cancelled.");

        return 0;

     label4:
        $r5 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z4 = virtualinvoke $r5.<android.widget.TextView: boolean hasSelection()>();

        if $z4 != 0 goto label5;

        $z8 = specialinvoke r0.<android.widget.Editor: boolean selectCurrentWord()>();

        if $z8 != 0 goto label5;

        return 0;

     label5:
        z0 = specialinvoke r0.<android.widget.Editor: boolean extractedTextModeWillBeStarted()>();

        if z0 != 0 goto label6;

        $r9 = new android.widget.Editor$SelectionActionModeCallback;

        specialinvoke $r9.<android.widget.Editor$SelectionActionModeCallback: void <init>(android.widget.Editor,android.widget.Editor$1)>(r0, null);

        r1 = $r9;

        $r11 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $r10 = virtualinvoke $r11.<android.widget.TextView: android.view.ActionMode startActionMode(android.view.ActionMode$Callback)>(r1);

        r0.<android.widget.Editor: android.view.ActionMode mSelectionActionMode> = $r10;

     label6:
        $r6 = r0.<android.widget.Editor: android.view.ActionMode mSelectionActionMode>;

        if $r6 != null goto label7;

        if z0 == 0 goto label9;

     label7:
        z1 = 1;

     label8:
        if z1 == 0 goto label1;

        $r7 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $z6 = virtualinvoke $r7.<android.widget.TextView: boolean isTextSelectable()>();

        if $z6 != 0 goto label1;

        $z5 = r0.<android.widget.Editor: boolean mShowSoftInputOnFocus>;

        if $z5 == 0 goto label1;

        r2 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        if r2 == null goto label1;

        $r8 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        virtualinvoke r2.<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int,android.os.ResultReceiver)>($r8, 0, null);

        return z1;

     label9:
        z1 = 0;

        goto label8;
    }

    protected void stopSelectionActionMode()
    {
        android.widget.Editor r0;
        android.view.ActionMode $r1, $r2;

        r0 := @this: android.widget.Editor;

        $r1 = r0.<android.widget.Editor: android.view.ActionMode mSelectionActionMode>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.Editor: android.view.ActionMode mSelectionActionMode>;

        virtualinvoke $r2.<android.view.ActionMode: void finish()>();

     label1:
        return;
    }

    void updateCursorsPositions()
    {
        android.widget.Editor r0;
        android.text.Layout r1, r2;
        int i0, i1, i2, i3, i5, $i6, $i7, $i8, $i9, $i10;
        byte b4;
        boolean z0, $z1;
        android.widget.TextView $r3, $r4, $r5, $r6;
        float $f0, $f1;

        r0 := @this: android.widget.Editor;

        $r3 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        $i6 = $r3.<android.widget.TextView: int mCursorDrawableRes>;

        if $i6 != 0 goto label2;

        r0.<android.widget.Editor: int mCursorCount> = 0;

     label1:
        return;

     label2:
        $r4 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        r1 = virtualinvoke $r4.<android.widget.TextView: android.text.Layout getLayout()>();

        $r5 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        r2 = virtualinvoke $r5.<android.widget.TextView: android.text.Layout getHintLayout()>();

        $r6 = r0.<android.widget.Editor: android.widget.TextView mTextView>;

        i0 = virtualinvoke $r6.<android.widget.TextView: int getSelectionStart()>();

        i1 = virtualinvoke r1.<android.text.Layout: int getLineForOffset(int)>(i0);

        i2 = virtualinvoke r1.<android.text.Layout: int getLineTop(int)>(i1);

        $i7 = i1 + 1;

        i3 = virtualinvoke r1.<android.text.Layout: int getLineTop(int)>($i7);

        $z1 = virtualinvoke r1.<android.text.Layout: boolean isLevelBoundary(int)>(i0);

        if $z1 == 0 goto label5;

        b4 = 2;

     label3:
        r0.<android.widget.Editor: int mCursorCount> = b4;

        i5 = i3;

        $i8 = r0.<android.widget.Editor: int mCursorCount>;

        if $i8 != 2 goto label4;

        $i10 = i2 + i3;

        i5 = $i10 >> 1;

     label4:
        z0 = virtualinvoke r1.<android.text.Layout: boolean shouldClampCursor(int)>(i1);

        $f0 = specialinvoke r0.<android.widget.Editor: float getPrimaryHorizontal(android.text.Layout,android.text.Layout,int,boolean)>(r1, r2, i0, z0);

        specialinvoke r0.<android.widget.Editor: void updateCursorPosition(int,int,int,float)>(0, i2, i5, $f0);

        $i9 = r0.<android.widget.Editor: int mCursorCount>;

        if $i9 != 2 goto label1;

        $f1 = virtualinvoke r1.<android.text.Layout: float getSecondaryHorizontal(int,boolean)>(i0, z0);

        specialinvoke r0.<android.widget.Editor: void updateCursorPosition(int,int,int,float)>(1, i5, i3, $f1);

        return;

     label5:
        b4 = 1;

        goto label3;
    }
}
