public class android.view.animation.GridLayoutAnimationController extends android.view.animation.LayoutAnimationController
{
    public static final int DIRECTION_BOTTOM_TO_TOP;
    public static final int DIRECTION_HORIZONTAL_MASK;
    public static final int DIRECTION_LEFT_TO_RIGHT;
    public static final int DIRECTION_RIGHT_TO_LEFT;
    public static final int DIRECTION_TOP_TO_BOTTOM;
    public static final int DIRECTION_VERTICAL_MASK;
    public static final int PRIORITY_COLUMN;
    public static final int PRIORITY_NONE;
    public static final int PRIORITY_ROW;
    private float mColumnDelay;
    private int mDirection;
    private int mDirectionPriority;
    private float mRowDelay;

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.view.animation.GridLayoutAnimationController r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.content.res.TypedArray r3;
        int[] $r4;
        android.util.TypedValue $r5, $r7;
        android.view.animation.Animation$Description $r6, $r8;
        float $f0, $f1;
        int $i0, $i1;

        r0 := @this: android.view.animation.GridLayoutAnimationController;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.view.animation.LayoutAnimationController: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        $r4 = <com.android.internal.R$styleable: int[] GridLayoutAnimation>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r2, $r4);

        $r5 = virtualinvoke r3.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(0);

        $r6 = staticinvoke <android.view.animation.Animation$Description: android.view.animation.Animation$Description parseValue(android.util.TypedValue)>($r5);

        $f0 = $r6.<android.view.animation.Animation$Description: float value>;

        r0.<android.view.animation.GridLayoutAnimationController: float mColumnDelay> = $f0;

        $r7 = virtualinvoke r3.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(1);

        $r8 = staticinvoke <android.view.animation.Animation$Description: android.view.animation.Animation$Description parseValue(android.util.TypedValue)>($r7);

        $f1 = $r8.<android.view.animation.Animation$Description: float value>;

        r0.<android.view.animation.GridLayoutAnimationController: float mRowDelay> = $f1;

        $i0 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(2, 0);

        r0.<android.view.animation.GridLayoutAnimationController: int mDirection> = $i0;

        $i1 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(3, 0);

        r0.<android.view.animation.GridLayoutAnimationController: int mDirectionPriority> = $i1;

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    public void <init>(android.view.animation.Animation)
    {
        android.view.animation.GridLayoutAnimationController r0;
        android.view.animation.Animation r1;

        r0 := @this: android.view.animation.GridLayoutAnimationController;

        r1 := @parameter0: android.view.animation.Animation;

        specialinvoke r0.<android.view.animation.GridLayoutAnimationController: void <init>(android.view.animation.Animation,float,float)>(r1, 0.5F, 0.5F);

        return;
    }

    public void <init>(android.view.animation.Animation, float, float)
    {
        android.view.animation.GridLayoutAnimationController r0;
        android.view.animation.Animation r1;
        float f0, f1;

        r0 := @this: android.view.animation.GridLayoutAnimationController;

        r1 := @parameter0: android.view.animation.Animation;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        specialinvoke r0.<android.view.animation.LayoutAnimationController: void <init>(android.view.animation.Animation)>(r1);

        r0.<android.view.animation.GridLayoutAnimationController: float mColumnDelay> = f0;

        r0.<android.view.animation.GridLayoutAnimationController: float mRowDelay> = f1;

        return;
    }

    private int getTransformedColumnIndex(android.view.animation.GridLayoutAnimationController$AnimationParameters)
    {
        android.view.animation.GridLayoutAnimationController r0;
        android.view.animation.GridLayoutAnimationController$AnimationParameters r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.util.Random $r2, $r3, $r4;
        float $f0, $f1, $f2;

        r0 := @this: android.view.animation.GridLayoutAnimationController;

        r1 := @parameter0: android.view.animation.GridLayoutAnimationController$AnimationParameters;

        $i1 = virtualinvoke r0.<android.view.animation.GridLayoutAnimationController: int getOrder()>();

        tableswitch($i1)
        {
            case 1: goto label4;
            case 2: goto label5;
            default: goto label1;
        };

     label1:
        i0 = r1.<android.view.animation.GridLayoutAnimationController$AnimationParameters: int column>;

     label2:
        $i2 = r0.<android.view.animation.GridLayoutAnimationController: int mDirection>;

        $i3 = 1 & $i2;

        if $i3 != 1 goto label3;

        $i4 = r1.<android.view.animation.GridLayoutAnimationController$AnimationParameters: int columnsCount>;

        $i5 = -1 + $i4;

        i0 = $i5 - i0;

     label3:
        return i0;

     label4:
        $i7 = r1.<android.view.animation.GridLayoutAnimationController$AnimationParameters: int columnsCount>;

        $i8 = -1 + $i7;

        $i9 = r1.<android.view.animation.GridLayoutAnimationController$AnimationParameters: int column>;

        i0 = $i8 - $i9;

        goto label2;

     label5:
        $r2 = r0.<android.view.animation.GridLayoutAnimationController: java.util.Random mRandomizer>;

        if $r2 != null goto label6;

        $r4 = new java.util.Random;

        specialinvoke $r4.<java.util.Random: void <init>()>();

        r0.<android.view.animation.GridLayoutAnimationController: java.util.Random mRandomizer> = $r4;

     label6:
        $i6 = r1.<android.view.animation.GridLayoutAnimationController$AnimationParameters: int columnsCount>;

        $f0 = (float) $i6;

        $r3 = r0.<android.view.animation.GridLayoutAnimationController: java.util.Random mRandomizer>;

        $f1 = virtualinvoke $r3.<java.util.Random: float nextFloat()>();

        $f2 = $f0 * $f1;

        i0 = (int) $f2;

        goto label2;
    }

    private int getTransformedRowIndex(android.view.animation.GridLayoutAnimationController$AnimationParameters)
    {
        android.view.animation.GridLayoutAnimationController r0;
        android.view.animation.GridLayoutAnimationController$AnimationParameters r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.util.Random $r2, $r3, $r4;
        float $f0, $f1, $f2;

        r0 := @this: android.view.animation.GridLayoutAnimationController;

        r1 := @parameter0: android.view.animation.GridLayoutAnimationController$AnimationParameters;

        $i1 = virtualinvoke r0.<android.view.animation.GridLayoutAnimationController: int getOrder()>();

        tableswitch($i1)
        {
            case 1: goto label4;
            case 2: goto label5;
            default: goto label1;
        };

     label1:
        i0 = r1.<android.view.animation.GridLayoutAnimationController$AnimationParameters: int row>;

     label2:
        $i2 = r0.<android.view.animation.GridLayoutAnimationController: int mDirection>;

        $i3 = 2 & $i2;

        if $i3 != 2 goto label3;

        $i4 = r1.<android.view.animation.GridLayoutAnimationController$AnimationParameters: int rowsCount>;

        $i5 = -1 + $i4;

        i0 = $i5 - i0;

     label3:
        return i0;

     label4:
        $i7 = r1.<android.view.animation.GridLayoutAnimationController$AnimationParameters: int rowsCount>;

        $i8 = -1 + $i7;

        $i9 = r1.<android.view.animation.GridLayoutAnimationController$AnimationParameters: int row>;

        i0 = $i8 - $i9;

        goto label2;

     label5:
        $r2 = r0.<android.view.animation.GridLayoutAnimationController: java.util.Random mRandomizer>;

        if $r2 != null goto label6;

        $r4 = new java.util.Random;

        specialinvoke $r4.<java.util.Random: void <init>()>();

        r0.<android.view.animation.GridLayoutAnimationController: java.util.Random mRandomizer> = $r4;

     label6:
        $i6 = r1.<android.view.animation.GridLayoutAnimationController$AnimationParameters: int rowsCount>;

        $f0 = (float) $i6;

        $r3 = r0.<android.view.animation.GridLayoutAnimationController: java.util.Random mRandomizer>;

        $f1 = virtualinvoke $r3.<java.util.Random: float nextFloat()>();

        $f2 = $f0 * $f1;

        i0 = (int) $f2;

        goto label2;
    }

    public float getColumnDelay()
    {
        android.view.animation.GridLayoutAnimationController r0;
        float $f0;

        r0 := @this: android.view.animation.GridLayoutAnimationController;

        $f0 = r0.<android.view.animation.GridLayoutAnimationController: float mColumnDelay>;

        return $f0;
    }

    protected long getDelayForView(android.view.View)
    {
        android.view.animation.GridLayoutAnimationController r0;
        android.view.View r1;
        android.view.animation.GridLayoutAnimationController$AnimationParameters r2;
        int i0, i1, i2, i3, $i6, $i7, $i9, $i10, $i11;
        long l4, l5, $l8;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37;
        android.view.ViewGroup$LayoutParams $r3;
        android.view.animation.LayoutAnimationController$AnimationParameters $r4;
        android.view.animation.Animation $r5;
        android.view.animation.Interpolator $r6, $r7;
        android.view.animation.LinearInterpolator $r8;

        r0 := @this: android.view.animation.GridLayoutAnimationController;

        r1 := @parameter0: android.view.View;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = $r3.<android.view.ViewGroup$LayoutParams: android.view.animation.LayoutAnimationController$AnimationParameters layoutAnimationParameters>;

        r2 = (android.view.animation.GridLayoutAnimationController$AnimationParameters) $r4;

        if r2 != null goto label1;

        return 0L;

     label1:
        i0 = specialinvoke r0.<android.view.animation.GridLayoutAnimationController: int getTransformedColumnIndex(android.view.animation.GridLayoutAnimationController$AnimationParameters)>(r2);

        i1 = specialinvoke r0.<android.view.animation.GridLayoutAnimationController: int getTransformedRowIndex(android.view.animation.GridLayoutAnimationController$AnimationParameters)>(r2);

        i2 = r2.<android.view.animation.GridLayoutAnimationController$AnimationParameters: int rowsCount>;

        i3 = r2.<android.view.animation.GridLayoutAnimationController$AnimationParameters: int columnsCount>;

        $r5 = r0.<android.view.animation.GridLayoutAnimationController: android.view.animation.Animation mAnimation>;

        l4 = virtualinvoke $r5.<android.view.animation.Animation: long getDuration()>();

        $f6 = r0.<android.view.animation.GridLayoutAnimationController: float mColumnDelay>;

        $f4 = (float) l4;

        f0 = $f6 * $f4;

        $f7 = r0.<android.view.animation.GridLayoutAnimationController: float mRowDelay>;

        $f5 = (float) l4;

        f1 = $f7 * $f5;

        $r6 = r0.<android.view.animation.GridLayoutAnimationController: android.view.animation.Interpolator mInterpolator>;

        if $r6 != null goto label2;

        $r8 = new android.view.animation.LinearInterpolator;

        specialinvoke $r8.<android.view.animation.LinearInterpolator: void <init>()>();

        r0.<android.view.animation.GridLayoutAnimationController: android.view.animation.Interpolator mInterpolator> = $r8;

     label2:
        $i6 = r0.<android.view.animation.GridLayoutAnimationController: int mDirectionPriority>;

        tableswitch($i6)
        {
            case 1: goto label5;
            case 2: goto label6;
            default: goto label3;
        };

     label3:
        $f8 = (float) i0;

        $f12 = f0 * $f8;

        $f10 = (float) i1;

        $f9 = f1 * $f10;

        $f11 = $f12 + $f9;

        l5 = (long) $f11;

        $f15 = (float) i3;

        $f14 = f0 * $f15;

        $f16 = (float) i2;

        $f13 = f1 * $f16;

        f2 = $f14 + $f13;

     label4:
        $f19 = (float) l5;

        f3 = $f19 / f2;

        $r7 = r0.<android.view.animation.GridLayoutAnimationController: android.view.animation.Interpolator mInterpolator>;

        $f17 = interfaceinvoke $r7.<android.view.animation.Interpolator: float getInterpolation(float)>(f3);

        $f18 = f2 * $f17;

        $l8 = (long) $f18;

        return $l8;

     label5:
        $f31 = (float) i1;

        $f34 = f1 * $f31;

        $i10 = i0 * i2;

        $f30 = (float) $i10;

        $f29 = f1 * $f30;

        $f33 = $f34 + $f29;

        l5 = (long) $f33;

        $f32 = (float) i2;

        $f35 = f1 * $f32;

        $i11 = i3 * i2;

        $f37 = (float) $i11;

        $f36 = f1 * $f37;

        f2 = $f35 + $f36;

        goto label4;

     label6:
        $f21 = (float) i0;

        $f25 = f0 * $f21;

        $i7 = i1 * i3;

        $f20 = (float) $i7;

        $f24 = f0 * $f20;

        $f22 = $f25 + $f24;

        l5 = (long) $f22;

        $f23 = (float) i3;

        $f26 = f0 * $f23;

        $i9 = i2 * i3;

        $f28 = (float) $i9;

        $f27 = f0 * $f28;

        f2 = $f26 + $f27;

        goto label4;
    }

    public int getDirection()
    {
        android.view.animation.GridLayoutAnimationController r0;
        int $i0;

        r0 := @this: android.view.animation.GridLayoutAnimationController;

        $i0 = r0.<android.view.animation.GridLayoutAnimationController: int mDirection>;

        return $i0;
    }

    public int getDirectionPriority()
    {
        android.view.animation.GridLayoutAnimationController r0;
        int $i0;

        r0 := @this: android.view.animation.GridLayoutAnimationController;

        $i0 = r0.<android.view.animation.GridLayoutAnimationController: int mDirectionPriority>;

        return $i0;
    }

    public float getRowDelay()
    {
        android.view.animation.GridLayoutAnimationController r0;
        float $f0;

        r0 := @this: android.view.animation.GridLayoutAnimationController;

        $f0 = r0.<android.view.animation.GridLayoutAnimationController: float mRowDelay>;

        return $f0;
    }

    public void setColumnDelay(float)
    {
        android.view.animation.GridLayoutAnimationController r0;
        float f0;

        r0 := @this: android.view.animation.GridLayoutAnimationController;

        f0 := @parameter0: float;

        r0.<android.view.animation.GridLayoutAnimationController: float mColumnDelay> = f0;

        return;
    }

    public void setDirection(int)
    {
        android.view.animation.GridLayoutAnimationController r0;
        int i0;

        r0 := @this: android.view.animation.GridLayoutAnimationController;

        i0 := @parameter0: int;

        r0.<android.view.animation.GridLayoutAnimationController: int mDirection> = i0;

        return;
    }

    public void setDirectionPriority(int)
    {
        android.view.animation.GridLayoutAnimationController r0;
        int i0;

        r0 := @this: android.view.animation.GridLayoutAnimationController;

        i0 := @parameter0: int;

        r0.<android.view.animation.GridLayoutAnimationController: int mDirectionPriority> = i0;

        return;
    }

    public void setRowDelay(float)
    {
        android.view.animation.GridLayoutAnimationController r0;
        float f0;

        r0 := @this: android.view.animation.GridLayoutAnimationController;

        f0 := @parameter0: float;

        r0.<android.view.animation.GridLayoutAnimationController: float mRowDelay> = f0;

        return;
    }

    public boolean willOverlap()
    {
        android.view.animation.GridLayoutAnimationController r0;
        float $f0, $f1;
        byte $b0, $b1;

        r0 := @this: android.view.animation.GridLayoutAnimationController;

        $f0 = r0.<android.view.animation.GridLayoutAnimationController: float mColumnDelay>;

        $b0 = $f0 cmpg 1.0F;

        if $b0 < 0 goto label1;

        $f1 = r0.<android.view.animation.GridLayoutAnimationController: float mRowDelay>;

        $b1 = $f1 cmpg 1.0F;

        if $b1 >= 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public static void <clinit>()
    {
        <android.view.animation.GridLayoutAnimationController: int PRIORITY_ROW> = 2;

        <android.view.animation.GridLayoutAnimationController: int PRIORITY_NONE> = 0;

        <android.view.animation.GridLayoutAnimationController: int PRIORITY_COLUMN> = 1;

        <android.view.animation.GridLayoutAnimationController: int DIRECTION_VERTICAL_MASK> = 2;

        <android.view.animation.GridLayoutAnimationController: int DIRECTION_TOP_TO_BOTTOM> = 0;

        <android.view.animation.GridLayoutAnimationController: int DIRECTION_RIGHT_TO_LEFT> = 1;

        <android.view.animation.GridLayoutAnimationController: int DIRECTION_LEFT_TO_RIGHT> = 0;

        <android.view.animation.GridLayoutAnimationController: int DIRECTION_HORIZONTAL_MASK> = 1;

        <android.view.animation.GridLayoutAnimationController: int DIRECTION_BOTTOM_TO_TOP> = 2;

        return;
    }
}
