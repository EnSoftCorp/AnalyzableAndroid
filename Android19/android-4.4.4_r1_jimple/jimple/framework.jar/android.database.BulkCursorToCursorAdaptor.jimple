public final class android.database.BulkCursorToCursorAdaptor extends android.database.AbstractWindowedCursor
{
    private static final java.lang.String TAG;
    private android.database.IBulkCursor mBulkCursor;
    private java.lang.String[] mColumns;
    private int mCount;
    private android.database.AbstractCursor$SelfContentObserver mObserverBridge;
    private boolean mWantsAllOnMoveCalls;

    public void <init>()
    {
        android.database.BulkCursorToCursorAdaptor r0;
        android.database.AbstractCursor$SelfContentObserver $r1;

        r0 := @this: android.database.BulkCursorToCursorAdaptor;

        specialinvoke r0.<android.database.AbstractWindowedCursor: void <init>()>();

        $r1 = new android.database.AbstractCursor$SelfContentObserver;

        specialinvoke $r1.<android.database.AbstractCursor$SelfContentObserver: void <init>(android.database.AbstractCursor)>(r0);

        r0.<android.database.BulkCursorToCursorAdaptor: android.database.AbstractCursor$SelfContentObserver mObserverBridge> = $r1;

        return;
    }

    private void throwIfCursorIsClosed()
    {
        android.database.BulkCursorToCursorAdaptor r0;
        android.database.IBulkCursor $r1;
        android.database.StaleDataException $r2;

        r0 := @this: android.database.BulkCursorToCursorAdaptor;

        $r1 = r0.<android.database.BulkCursorToCursorAdaptor: android.database.IBulkCursor mBulkCursor>;

        if $r1 != null goto label1;

        $r2 = new android.database.StaleDataException;

        specialinvoke $r2.<android.database.StaleDataException: void <init>(java.lang.String)>("Attempted to access a cursor after it has been closed.");

        throw $r2;

     label1:
        return;
    }

    public void close()
    {
        android.database.BulkCursorToCursorAdaptor r0;
        java.lang.Throwable r1, $r5;
        android.database.IBulkCursor $r3, $r4;
        android.os.RemoteException $r6;

        r0 := @this: android.database.BulkCursorToCursorAdaptor;

        specialinvoke r0.<android.database.AbstractWindowedCursor: void close()>();

        $r3 = r0.<android.database.BulkCursorToCursorAdaptor: android.database.IBulkCursor mBulkCursor>;

        if $r3 == null goto label3;

     label1:
        $r4 = r0.<android.database.BulkCursorToCursorAdaptor: android.database.IBulkCursor mBulkCursor>;

        interfaceinvoke $r4.<android.database.IBulkCursor: void close()>();

     label2:
        r0.<android.database.BulkCursorToCursorAdaptor: android.database.IBulkCursor mBulkCursor> = null;

     label3:
        return;

     label4:
        $r6 := @caughtexception;

     label5:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BulkCursor", "Remote process exception when closing");

     label6:
        r0.<android.database.BulkCursorToCursorAdaptor: android.database.IBulkCursor mBulkCursor> = null;

        return;

     label7:
        $r5 := @caughtexception;

        r1 = $r5;

        r0.<android.database.BulkCursorToCursorAdaptor: android.database.IBulkCursor mBulkCursor> = null;

        throw r1;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public void deactivate()
    {
        android.database.BulkCursorToCursorAdaptor r0;
        android.database.IBulkCursor $r2, $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.database.BulkCursorToCursorAdaptor;

        specialinvoke r0.<android.database.AbstractWindowedCursor: void deactivate()>();

        $r2 = r0.<android.database.BulkCursorToCursorAdaptor: android.database.IBulkCursor mBulkCursor>;

        if $r2 == null goto label2;

     label1:
        $r3 = r0.<android.database.BulkCursorToCursorAdaptor: android.database.IBulkCursor mBulkCursor>;

        interfaceinvoke $r3.<android.database.IBulkCursor: void deactivate()>();

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BulkCursor", "Remote process exception when deactivating");

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.String[] getColumnNames()
    {
        android.database.BulkCursorToCursorAdaptor r0;
        java.lang.String[] $r1;

        r0 := @this: android.database.BulkCursorToCursorAdaptor;

        specialinvoke r0.<android.database.BulkCursorToCursorAdaptor: void throwIfCursorIsClosed()>();

        $r1 = r0.<android.database.BulkCursorToCursorAdaptor: java.lang.String[] mColumns>;

        return $r1;
    }

    public int getCount()
    {
        android.database.BulkCursorToCursorAdaptor r0;
        int $i0;

        r0 := @this: android.database.BulkCursorToCursorAdaptor;

        specialinvoke r0.<android.database.BulkCursorToCursorAdaptor: void throwIfCursorIsClosed()>();

        $i0 = r0.<android.database.BulkCursorToCursorAdaptor: int mCount>;

        return $i0;
    }

    public android.os.Bundle getExtras()
    {
        android.database.BulkCursorToCursorAdaptor r0;
        android.os.RemoteException r1, $r4;
        android.os.Bundle r2;
        android.database.IBulkCursor $r3;
        java.lang.RuntimeException $r5;

        r0 := @this: android.database.BulkCursorToCursorAdaptor;

        specialinvoke r0.<android.database.BulkCursorToCursorAdaptor: void throwIfCursorIsClosed()>();

     label1:
        $r3 = r0.<android.database.BulkCursorToCursorAdaptor: android.database.IBulkCursor mBulkCursor>;

        r2 = interfaceinvoke $r3.<android.database.IBulkCursor: android.os.Bundle getExtras()>();

     label2:
        return r2;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.database.IContentObserver getObserver()
    {
        android.database.BulkCursorToCursorAdaptor r0;
        android.database.AbstractCursor$SelfContentObserver $r1;
        android.database.IContentObserver $r2;

        r0 := @this: android.database.BulkCursorToCursorAdaptor;

        $r1 = r0.<android.database.BulkCursorToCursorAdaptor: android.database.AbstractCursor$SelfContentObserver mObserverBridge>;

        $r2 = virtualinvoke $r1.<android.database.AbstractCursor$SelfContentObserver: android.database.IContentObserver getContentObserver()>();

        return $r2;
    }

    public void initialize(android.database.BulkCursorDescriptor)
    {
        android.database.BulkCursorToCursorAdaptor r0;
        android.database.BulkCursorDescriptor r1;
        android.database.IBulkCursor $r2;
        java.lang.String[] $r3, $r4;
        int $i0, $i1;
        boolean $z0;
        android.database.CursorWindow $r5, $r6;

        r0 := @this: android.database.BulkCursorToCursorAdaptor;

        r1 := @parameter0: android.database.BulkCursorDescriptor;

        $r2 = r1.<android.database.BulkCursorDescriptor: android.database.IBulkCursor cursor>;

        r0.<android.database.BulkCursorToCursorAdaptor: android.database.IBulkCursor mBulkCursor> = $r2;

        $r3 = r1.<android.database.BulkCursorDescriptor: java.lang.String[] columnNames>;

        r0.<android.database.BulkCursorToCursorAdaptor: java.lang.String[] mColumns> = $r3;

        $r4 = r0.<android.database.BulkCursorToCursorAdaptor: java.lang.String[] mColumns>;

        $i0 = staticinvoke <android.database.DatabaseUtils: int findRowIdColumnIndex(java.lang.String[])>($r4);

        r0.<android.database.BulkCursorToCursorAdaptor: int mRowIdColumnIndex> = $i0;

        $z0 = r1.<android.database.BulkCursorDescriptor: boolean wantsAllOnMoveCalls>;

        r0.<android.database.BulkCursorToCursorAdaptor: boolean mWantsAllOnMoveCalls> = $z0;

        $i1 = r1.<android.database.BulkCursorDescriptor: int count>;

        r0.<android.database.BulkCursorToCursorAdaptor: int mCount> = $i1;

        $r5 = r1.<android.database.BulkCursorDescriptor: android.database.CursorWindow window>;

        if $r5 == null goto label1;

        $r6 = r1.<android.database.BulkCursorDescriptor: android.database.CursorWindow window>;

        virtualinvoke r0.<android.database.BulkCursorToCursorAdaptor: void setWindow(android.database.CursorWindow)>($r6);

     label1:
        return;
    }

    public boolean onMove(int, int)
    {
        android.database.BulkCursorToCursorAdaptor r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        android.database.CursorWindow $r2, $r4, $r5, $r6, $r7, $r8;
        android.database.IBulkCursor $r3, $r10;
        boolean $z0;
        android.os.RemoteException $r9;

        r0 := @this: android.database.BulkCursorToCursorAdaptor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.database.BulkCursorToCursorAdaptor: void throwIfCursorIsClosed()>();

     label1:
        $r2 = r0.<android.database.BulkCursorToCursorAdaptor: android.database.CursorWindow mWindow>;

        if $r2 == null goto label2;

        $r6 = r0.<android.database.BulkCursorToCursorAdaptor: android.database.CursorWindow mWindow>;

        $i2 = virtualinvoke $r6.<android.database.CursorWindow: int getStartPosition()>();

        if i1 < $i2 goto label2;

        $r7 = r0.<android.database.BulkCursorToCursorAdaptor: android.database.CursorWindow mWindow>;

        $i3 = virtualinvoke $r7.<android.database.CursorWindow: int getStartPosition()>();

        $r8 = r0.<android.database.BulkCursorToCursorAdaptor: android.database.CursorWindow mWindow>;

        $i4 = virtualinvoke $r8.<android.database.CursorWindow: int getNumRows()>();

        $i5 = $i3 + $i4;

        if i1 < $i5 goto label4;

     label2:
        $r3 = r0.<android.database.BulkCursorToCursorAdaptor: android.database.IBulkCursor mBulkCursor>;

        $r4 = interfaceinvoke $r3.<android.database.IBulkCursor: android.database.CursorWindow getWindow(int)>(i1);

        virtualinvoke r0.<android.database.BulkCursorToCursorAdaptor: void setWindow(android.database.CursorWindow)>($r4);

     label3:
        $r5 = r0.<android.database.BulkCursorToCursorAdaptor: android.database.CursorWindow mWindow>;

        if $r5 != null goto label7;

        return 0;

     label4:
        $z0 = r0.<android.database.BulkCursorToCursorAdaptor: boolean mWantsAllOnMoveCalls>;

        if $z0 == 0 goto label3;

        $r10 = r0.<android.database.BulkCursorToCursorAdaptor: android.database.IBulkCursor mBulkCursor>;

        interfaceinvoke $r10.<android.database.IBulkCursor: void onMove(int)>(i1);

     label5:
        goto label3;

     label6:
        $r9 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BulkCursor", "Unable to get window because the remote process is dead");

        return 0;

     label7:
        return 1;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label2 to label3 with label6;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public boolean requery()
    {
        android.database.BulkCursorToCursorAdaptor r0;
        java.lang.Exception r1, $r4;
        android.database.IBulkCursor $r2;
        android.database.IContentObserver $r3;
        int $i0, $i1;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.String $r7, $r9;

        r0 := @this: android.database.BulkCursorToCursorAdaptor;

        specialinvoke r0.<android.database.BulkCursorToCursorAdaptor: void throwIfCursorIsClosed()>();

     label1:
        $r2 = r0.<android.database.BulkCursorToCursorAdaptor: android.database.IBulkCursor mBulkCursor>;

        $r3 = virtualinvoke r0.<android.database.BulkCursorToCursorAdaptor: android.database.IContentObserver getObserver()>();

        $i0 = interfaceinvoke $r2.<android.database.IBulkCursor: int requery(android.database.IContentObserver)>($r3);

        r0.<android.database.BulkCursorToCursorAdaptor: int mCount> = $i0;

        $i1 = r0.<android.database.BulkCursorToCursorAdaptor: int mCount>;

        if $i1 == -1 goto label3;

        r0.<android.database.BulkCursorToCursorAdaptor: int mPos> = -1;

        virtualinvoke r0.<android.database.BulkCursorToCursorAdaptor: void closeWindow()>();

        specialinvoke r0.<android.database.AbstractWindowedCursor: boolean requery()>();

     label2:
        return 1;

     label3:
        virtualinvoke r0.<android.database.BulkCursorToCursorAdaptor: void deactivate()>();

     label4:
        return 0;

     label5:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to requery because the remote process exception ");

        $r7 = virtualinvoke r1.<java.lang.Exception: java.lang.String getMessage()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BulkCursor", $r9);

        virtualinvoke r0.<android.database.BulkCursorToCursorAdaptor: void deactivate()>();

        return 0;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public android.os.Bundle respond(android.os.Bundle)
    {
        android.database.BulkCursorToCursorAdaptor r0;
        android.os.Bundle r1, r3, $r6;
        android.os.RemoteException r2, $r5;
        android.database.IBulkCursor $r4;

        r0 := @this: android.database.BulkCursorToCursorAdaptor;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.database.BulkCursorToCursorAdaptor: void throwIfCursorIsClosed()>();

     label1:
        $r4 = r0.<android.database.BulkCursorToCursorAdaptor: android.database.IBulkCursor mBulkCursor>;

        r3 = interfaceinvoke $r4.<android.database.IBulkCursor: android.os.Bundle respond(android.os.Bundle)>(r1);

     label2:
        return r3;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("BulkCursor", "respond() threw RemoteException, returning an empty bundle.", r2);

        $r6 = <android.os.Bundle: android.os.Bundle EMPTY>;

        return $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.database.BulkCursorToCursorAdaptor: java.lang.String TAG> = "BulkCursor";

        return;
    }
}
