public class android.net.wifi.WifiMonitor extends java.lang.Object
{
    public static final int AP_STA_CONNECTED_EVENT;
    private static final java.lang.String AP_STA_CONNECTED_STR;
    public static final int AP_STA_DISCONNECTED_EVENT;
    private static final java.lang.String AP_STA_DISCONNECTED_STR;
    public static final int ASSOCIATION_REJECTION_EVENT;
    private static final int ASSOC_REJECT;
    private static final java.lang.String ASSOC_REJECT_STR;
    public static final int AUTHENTICATION_FAILURE_EVENT;
    private static final int BASE;
    private static final int CONFIG_AUTH_FAILURE;
    private static final int CONFIG_MULTIPLE_PBC_DETECTED;
    private static final int CONNECTED;
    private static final java.lang.String CONNECTED_STR;
    private static final boolean DBG;
    private static final int DISCONNECTED;
    private static final java.lang.String DISCONNECTED_STR;
    public static final int DRIVER_HUNG_EVENT;
    private static final int DRIVER_STATE;
    private static final java.lang.String DRIVER_STATE_STR;
    private static final java.lang.String EAP_AUTH_FAILURE_STR;
    private static final int EAP_FAILURE;
    private static final java.lang.String EAP_FAILURE_STR;
    private static final int EVENT_PREFIX_LEN_STR;
    private static final java.lang.String EVENT_PREFIX_STR;
    private static final java.lang.String HOST_AP_EVENT_PREFIX_STR;
    private static final int LINK_SPEED;
    private static final java.lang.String LINK_SPEED_STR;
    private static final int MAX_RECV_ERRORS;
    private static final java.lang.String MONITOR_SOCKET_CLOSED_STR;
    public static final int NETWORK_CONNECTION_EVENT;
    public static final int NETWORK_DISCONNECTION_EVENT;
    public static final int P2P_DEVICE_FOUND_EVENT;
    private static final java.lang.String P2P_DEVICE_FOUND_STR;
    public static final int P2P_DEVICE_LOST_EVENT;
    private static final java.lang.String P2P_DEVICE_LOST_STR;
    private static final java.lang.String P2P_EVENT_PREFIX_STR;
    public static final int P2P_FIND_STOPPED_EVENT;
    private static final java.lang.String P2P_FIND_STOPPED_STR;
    public static final int P2P_GO_NEGOTIATION_FAILURE_EVENT;
    public static final int P2P_GO_NEGOTIATION_REQUEST_EVENT;
    public static final int P2P_GO_NEGOTIATION_SUCCESS_EVENT;
    private static final java.lang.String P2P_GO_NEG_FAILURE_STR;
    private static final java.lang.String P2P_GO_NEG_REQUEST_STR;
    private static final java.lang.String P2P_GO_NEG_SUCCESS_STR;
    public static final int P2P_GROUP_FORMATION_FAILURE_EVENT;
    private static final java.lang.String P2P_GROUP_FORMATION_FAILURE_STR;
    public static final int P2P_GROUP_FORMATION_SUCCESS_EVENT;
    private static final java.lang.String P2P_GROUP_FORMATION_SUCCESS_STR;
    public static final int P2P_GROUP_REMOVED_EVENT;
    private static final java.lang.String P2P_GROUP_REMOVED_STR;
    public static final int P2P_GROUP_STARTED_EVENT;
    private static final java.lang.String P2P_GROUP_STARTED_STR;
    public static final int P2P_INVITATION_RECEIVED_EVENT;
    private static final java.lang.String P2P_INVITATION_RECEIVED_STR;
    public static final int P2P_INVITATION_RESULT_EVENT;
    private static final java.lang.String P2P_INVITATION_RESULT_STR;
    public static final int P2P_PROV_DISC_ENTER_PIN_EVENT;
    private static final java.lang.String P2P_PROV_DISC_ENTER_PIN_STR;
    public static final int P2P_PROV_DISC_FAILURE_EVENT;
    private static final java.lang.String P2P_PROV_DISC_FAILURE_STR;
    public static final int P2P_PROV_DISC_PBC_REQ_EVENT;
    private static final java.lang.String P2P_PROV_DISC_PBC_REQ_STR;
    public static final int P2P_PROV_DISC_PBC_RSP_EVENT;
    private static final java.lang.String P2P_PROV_DISC_PBC_RSP_STR;
    public static final int P2P_PROV_DISC_SHOW_PIN_EVENT;
    private static final java.lang.String P2P_PROV_DISC_SHOW_PIN_STR;
    public static final int P2P_SERV_DISC_RESP_EVENT;
    private static final java.lang.String P2P_SERV_DISC_RESP_STR;
    private static final java.lang.String PASSWORD_MAY_BE_INCORRECT_STR;
    private static final int REASON_TKIP_ONLY_PROHIBITED;
    private static final int REASON_WEP_PROHIBITED;
    private static final int SCAN_RESULTS;
    public static final int SCAN_RESULTS_EVENT;
    private static final java.lang.String SCAN_RESULTS_STR;
    private static final int STATE_CHANGE;
    private static final java.lang.String STATE_CHANGE_STR;
    public static final int SUPPLICANT_STATE_CHANGE_EVENT;
    public static final int SUP_CONNECTION_EVENT;
    public static final int SUP_DISCONNECTION_EVENT;
    private static final java.lang.String TAG;
    private static final int TERMINATING;
    private static final java.lang.String TERMINATING_STR;
    private static final int UNKNOWN;
    private static final java.lang.String WPA_EVENT_PREFIX_STR;
    private static final java.lang.String WPA_RECV_ERROR_STR;
    public static final int WPS_FAIL_EVENT;
    private static final java.lang.String WPS_FAIL_PATTERN;
    private static final java.lang.String WPS_FAIL_STR;
    public static final int WPS_OVERLAP_EVENT;
    private static final java.lang.String WPS_OVERLAP_STR;
    public static final int WPS_SUCCESS_EVENT;
    private static final java.lang.String WPS_SUCCESS_STR;
    public static final int WPS_TIMEOUT_EVENT;
    private static final java.lang.String WPS_TIMEOUT_STR;
    private static java.util.regex.Pattern mConnectedEventPattern;
    private final java.lang.String mInterfaceName;
    private boolean mMonitoring;
    private final android.net.wifi.WifiNative mWifiNative;
    private final com.android.internal.util.StateMachine mWifiStateMachine;

    static void <clinit>()
    {
        java.lang.String $r0;
        int $i0;
        java.util.regex.Pattern $r1;

        <android.net.wifi.WifiMonitor: java.lang.String WPS_TIMEOUT_STR> = "WPS-TIMEOUT";

        <android.net.wifi.WifiMonitor: int WPS_TIMEOUT_EVENT> = 147467;

        <android.net.wifi.WifiMonitor: java.lang.String WPS_SUCCESS_STR> = "WPS-SUCCESS";

        <android.net.wifi.WifiMonitor: int WPS_SUCCESS_EVENT> = 147464;

        <android.net.wifi.WifiMonitor: java.lang.String WPS_OVERLAP_STR> = "WPS-OVERLAP-DETECTED";

        <android.net.wifi.WifiMonitor: int WPS_OVERLAP_EVENT> = 147466;

        <android.net.wifi.WifiMonitor: java.lang.String WPS_FAIL_STR> = "WPS-FAIL";

        <android.net.wifi.WifiMonitor: java.lang.String WPS_FAIL_PATTERN> = "WPS-FAIL msg=\\d+(?: config_error=(\\d+))?(?: reason=(\\d+))?";

        <android.net.wifi.WifiMonitor: int WPS_FAIL_EVENT> = 147465;

        <android.net.wifi.WifiMonitor: java.lang.String WPA_RECV_ERROR_STR> = "recv error";

        <android.net.wifi.WifiMonitor: java.lang.String WPA_EVENT_PREFIX_STR> = "WPA:";

        <android.net.wifi.WifiMonitor: int UNKNOWN> = 10;

        <android.net.wifi.WifiMonitor: java.lang.String TERMINATING_STR> = "TERMINATING";

        <android.net.wifi.WifiMonitor: int TERMINATING> = 6;

        <android.net.wifi.WifiMonitor: java.lang.String TAG> = "WifiMonitor";

        <android.net.wifi.WifiMonitor: int SUP_DISCONNECTION_EVENT> = 147458;

        <android.net.wifi.WifiMonitor: int SUP_CONNECTION_EVENT> = 147457;

        <android.net.wifi.WifiMonitor: int SUPPLICANT_STATE_CHANGE_EVENT> = 147462;

        <android.net.wifi.WifiMonitor: java.lang.String STATE_CHANGE_STR> = "STATE-CHANGE";

        <android.net.wifi.WifiMonitor: int STATE_CHANGE> = 3;

        <android.net.wifi.WifiMonitor: java.lang.String SCAN_RESULTS_STR> = "SCAN-RESULTS";

        <android.net.wifi.WifiMonitor: int SCAN_RESULTS_EVENT> = 147461;

        <android.net.wifi.WifiMonitor: int SCAN_RESULTS> = 4;

        <android.net.wifi.WifiMonitor: int REASON_WEP_PROHIBITED> = 2;

        <android.net.wifi.WifiMonitor: int REASON_TKIP_ONLY_PROHIBITED> = 1;

        <android.net.wifi.WifiMonitor: java.lang.String PASSWORD_MAY_BE_INCORRECT_STR> = "pre-shared key may be incorrect";

        <android.net.wifi.WifiMonitor: java.lang.String P2P_SERV_DISC_RESP_STR> = "P2P-SERV-DISC-RESP";

        <android.net.wifi.WifiMonitor: int P2P_SERV_DISC_RESP_EVENT> = 147494;

        <android.net.wifi.WifiMonitor: java.lang.String P2P_PROV_DISC_SHOW_PIN_STR> = "P2P-PROV-DISC-SHOW-PIN";

        <android.net.wifi.WifiMonitor: int P2P_PROV_DISC_SHOW_PIN_EVENT> = 147492;

        <android.net.wifi.WifiMonitor: java.lang.String P2P_PROV_DISC_PBC_RSP_STR> = "P2P-PROV-DISC-PBC-RESP";

        <android.net.wifi.WifiMonitor: int P2P_PROV_DISC_PBC_RSP_EVENT> = 147490;

        <android.net.wifi.WifiMonitor: java.lang.String P2P_PROV_DISC_PBC_REQ_STR> = "P2P-PROV-DISC-PBC-REQ";

        <android.net.wifi.WifiMonitor: int P2P_PROV_DISC_PBC_REQ_EVENT> = 147489;

        <android.net.wifi.WifiMonitor: java.lang.String P2P_PROV_DISC_FAILURE_STR> = "P2P-PROV-DISC-FAILURE";

        <android.net.wifi.WifiMonitor: int P2P_PROV_DISC_FAILURE_EVENT> = 147495;

        <android.net.wifi.WifiMonitor: java.lang.String P2P_PROV_DISC_ENTER_PIN_STR> = "P2P-PROV-DISC-ENTER-PIN";

        <android.net.wifi.WifiMonitor: int P2P_PROV_DISC_ENTER_PIN_EVENT> = 147491;

        <android.net.wifi.WifiMonitor: java.lang.String P2P_INVITATION_RESULT_STR> = "P2P-INVITATION-RESULT";

        <android.net.wifi.WifiMonitor: int P2P_INVITATION_RESULT_EVENT> = 147488;

        <android.net.wifi.WifiMonitor: java.lang.String P2P_INVITATION_RECEIVED_STR> = "P2P-INVITATION-RECEIVED";

        <android.net.wifi.WifiMonitor: int P2P_INVITATION_RECEIVED_EVENT> = 147487;

        <android.net.wifi.WifiMonitor: java.lang.String P2P_GROUP_STARTED_STR> = "P2P-GROUP-STARTED";

        <android.net.wifi.WifiMonitor: int P2P_GROUP_STARTED_EVENT> = 147485;

        <android.net.wifi.WifiMonitor: java.lang.String P2P_GROUP_REMOVED_STR> = "P2P-GROUP-REMOVED";

        <android.net.wifi.WifiMonitor: int P2P_GROUP_REMOVED_EVENT> = 147486;

        <android.net.wifi.WifiMonitor: java.lang.String P2P_GROUP_FORMATION_SUCCESS_STR> = "P2P-GROUP-FORMATION-SUCCESS";

        <android.net.wifi.WifiMonitor: int P2P_GROUP_FORMATION_SUCCESS_EVENT> = 147483;

        <android.net.wifi.WifiMonitor: java.lang.String P2P_GROUP_FORMATION_FAILURE_STR> = "P2P-GROUP-FORMATION-FAILURE";

        <android.net.wifi.WifiMonitor: int P2P_GROUP_FORMATION_FAILURE_EVENT> = 147484;

        <android.net.wifi.WifiMonitor: java.lang.String P2P_GO_NEG_SUCCESS_STR> = "P2P-GO-NEG-SUCCESS";

        <android.net.wifi.WifiMonitor: java.lang.String P2P_GO_NEG_REQUEST_STR> = "P2P-GO-NEG-REQUEST";

        <android.net.wifi.WifiMonitor: java.lang.String P2P_GO_NEG_FAILURE_STR> = "P2P-GO-NEG-FAILURE";

        <android.net.wifi.WifiMonitor: int P2P_GO_NEGOTIATION_SUCCESS_EVENT> = 147481;

        <android.net.wifi.WifiMonitor: int P2P_GO_NEGOTIATION_REQUEST_EVENT> = 147479;

        <android.net.wifi.WifiMonitor: int P2P_GO_NEGOTIATION_FAILURE_EVENT> = 147482;

        <android.net.wifi.WifiMonitor: java.lang.String P2P_FIND_STOPPED_STR> = "P2P-FIND-STOPPED";

        <android.net.wifi.WifiMonitor: int P2P_FIND_STOPPED_EVENT> = 147493;

        <android.net.wifi.WifiMonitor: java.lang.String P2P_EVENT_PREFIX_STR> = "P2P";

        <android.net.wifi.WifiMonitor: java.lang.String P2P_DEVICE_LOST_STR> = "P2P-DEVICE-LOST";

        <android.net.wifi.WifiMonitor: int P2P_DEVICE_LOST_EVENT> = 147478;

        <android.net.wifi.WifiMonitor: java.lang.String P2P_DEVICE_FOUND_STR> = "P2P-DEVICE-FOUND";

        <android.net.wifi.WifiMonitor: int P2P_DEVICE_FOUND_EVENT> = 147477;

        <android.net.wifi.WifiMonitor: int NETWORK_DISCONNECTION_EVENT> = 147460;

        <android.net.wifi.WifiMonitor: int NETWORK_CONNECTION_EVENT> = 147459;

        <android.net.wifi.WifiMonitor: java.lang.String MONITOR_SOCKET_CLOSED_STR> = "connection closed";

        <android.net.wifi.WifiMonitor: int MAX_RECV_ERRORS> = 10;

        <android.net.wifi.WifiMonitor: java.lang.String LINK_SPEED_STR> = "LINK-SPEED";

        <android.net.wifi.WifiMonitor: int LINK_SPEED> = 5;

        <android.net.wifi.WifiMonitor: java.lang.String HOST_AP_EVENT_PREFIX_STR> = "AP";

        <android.net.wifi.WifiMonitor: java.lang.String EVENT_PREFIX_STR> = "CTRL-EVENT-";

        <android.net.wifi.WifiMonitor: java.lang.String EAP_FAILURE_STR> = "EAP-FAILURE";

        <android.net.wifi.WifiMonitor: int EAP_FAILURE> = 8;

        <android.net.wifi.WifiMonitor: java.lang.String EAP_AUTH_FAILURE_STR> = "EAP authentication failed";

        <android.net.wifi.WifiMonitor: java.lang.String DRIVER_STATE_STR> = "DRIVER-STATE";

        <android.net.wifi.WifiMonitor: int DRIVER_STATE> = 7;

        <android.net.wifi.WifiMonitor: int DRIVER_HUNG_EVENT> = 147468;

        <android.net.wifi.WifiMonitor: java.lang.String DISCONNECTED_STR> = "DISCONNECTED";

        <android.net.wifi.WifiMonitor: int DISCONNECTED> = 2;

        <android.net.wifi.WifiMonitor: boolean DBG> = 0;

        <android.net.wifi.WifiMonitor: java.lang.String CONNECTED_STR> = "CONNECTED";

        <android.net.wifi.WifiMonitor: int CONNECTED> = 1;

        <android.net.wifi.WifiMonitor: int CONFIG_MULTIPLE_PBC_DETECTED> = 12;

        <android.net.wifi.WifiMonitor: int CONFIG_AUTH_FAILURE> = 18;

        <android.net.wifi.WifiMonitor: int BASE> = 147456;

        <android.net.wifi.WifiMonitor: int AUTHENTICATION_FAILURE_EVENT> = 147463;

        <android.net.wifi.WifiMonitor: java.lang.String ASSOC_REJECT_STR> = "ASSOC-REJECT";

        <android.net.wifi.WifiMonitor: int ASSOC_REJECT> = 9;

        <android.net.wifi.WifiMonitor: int ASSOCIATION_REJECTION_EVENT> = 147499;

        <android.net.wifi.WifiMonitor: java.lang.String AP_STA_DISCONNECTED_STR> = "AP-STA-DISCONNECTED";

        <android.net.wifi.WifiMonitor: int AP_STA_DISCONNECTED_EVENT> = 147497;

        <android.net.wifi.WifiMonitor: java.lang.String AP_STA_CONNECTED_STR> = "AP-STA-CONNECTED";

        <android.net.wifi.WifiMonitor: int AP_STA_CONNECTED_EVENT> = 147498;

        $r0 = "CTRL-EVENT-";

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        <android.net.wifi.WifiMonitor: int EVENT_PREFIX_LEN_STR> = $i0;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("((?:[0-9a-f]{2}:){5}[0-9a-f]{2}) .* \\[id=([0-9]+) ");

        <android.net.wifi.WifiMonitor: java.util.regex.Pattern mConnectedEventPattern> = $r1;

        return;
    }

    public void <init>(com.android.internal.util.StateMachine, android.net.wifi.WifiNative)
    {
        android.net.wifi.WifiMonitor r0;
        com.android.internal.util.StateMachine r1;
        android.net.wifi.WifiNative r2;
        java.lang.String $r3, $r5;
        android.net.wifi.WifiMonitor$WifiMonitorSingleton $r4;

        r0 := @this: android.net.wifi.WifiMonitor;

        r1 := @parameter0: com.android.internal.util.StateMachine;

        r2 := @parameter1: android.net.wifi.WifiNative;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.wifi.WifiMonitor: android.net.wifi.WifiNative mWifiNative> = r2;

        $r3 = r2.<android.net.wifi.WifiNative: java.lang.String mInterfaceName>;

        r0.<android.net.wifi.WifiMonitor: java.lang.String mInterfaceName> = $r3;

        r0.<android.net.wifi.WifiMonitor: com.android.internal.util.StateMachine mWifiStateMachine> = r1;

        r0.<android.net.wifi.WifiMonitor: boolean mMonitoring> = 0;

        $r4 = staticinvoke <android.net.wifi.WifiMonitor$WifiMonitorSingleton: android.net.wifi.WifiMonitor$WifiMonitorSingleton getMonitor()>();

        $r5 = r0.<android.net.wifi.WifiMonitor: java.lang.String mInterfaceName>;

        virtualinvoke $r4.<android.net.wifi.WifiMonitor$WifiMonitorSingleton: void registerInterfaceMonitor(java.lang.String,android.net.wifi.WifiMonitor)>($r5, r0);

        return;
    }

    static boolean access$000(android.net.wifi.WifiMonitor)
    {
        android.net.wifi.WifiMonitor r0;
        boolean $z0;

        r0 := @parameter0: android.net.wifi.WifiMonitor;

        $z0 = r0.<android.net.wifi.WifiMonitor: boolean mMonitoring>;

        return $z0;
    }

    static boolean access$002(android.net.wifi.WifiMonitor, boolean)
    {
        android.net.wifi.WifiMonitor r0;
        boolean z0;

        r0 := @parameter0: android.net.wifi.WifiMonitor;

        z0 := @parameter1: boolean;

        r0.<android.net.wifi.WifiMonitor: boolean mMonitoring> = z0;

        return z0;
    }

    static com.android.internal.util.StateMachine access$100(android.net.wifi.WifiMonitor)
    {
        android.net.wifi.WifiMonitor r0;
        com.android.internal.util.StateMachine $r1;

        r0 := @parameter0: android.net.wifi.WifiMonitor;

        $r1 = r0.<android.net.wifi.WifiMonitor: com.android.internal.util.StateMachine mWifiStateMachine>;

        return $r1;
    }

    static android.net.wifi.WifiNative access$200(android.net.wifi.WifiMonitor)
    {
        android.net.wifi.WifiMonitor r0;
        android.net.wifi.WifiNative $r1;

        r0 := @parameter0: android.net.wifi.WifiMonitor;

        $r1 = r0.<android.net.wifi.WifiMonitor: android.net.wifi.WifiNative mWifiNative>;

        return $r1;
    }

    static int access$600()
    {
        int $i0;

        $i0 = <android.net.wifi.WifiMonitor: int EVENT_PREFIX_LEN_STR>;

        return $i0;
    }

    static java.util.regex.Pattern access$700()
    {
        java.util.regex.Pattern $r0;

        $r0 = <android.net.wifi.WifiMonitor: java.util.regex.Pattern mConnectedEventPattern>;

        return $r0;
    }

    public void killSupplicant(boolean)
    {
        android.net.wifi.WifiMonitor r0;
        boolean z0;
        android.net.wifi.WifiMonitor$WifiMonitorSingleton $r1;

        r0 := @this: android.net.wifi.WifiMonitor;

        z0 := @parameter0: boolean;

        $r1 = staticinvoke <android.net.wifi.WifiMonitor$WifiMonitorSingleton: android.net.wifi.WifiMonitor$WifiMonitorSingleton getMonitor()>();

        virtualinvoke $r1.<android.net.wifi.WifiMonitor$WifiMonitorSingleton: void killSupplicant(boolean)>(z0);

        return;
    }

    public void startMonitoring()
    {
        android.net.wifi.WifiMonitor r0;
        android.net.wifi.WifiMonitor$WifiMonitorSingleton $r1;
        java.lang.String $r2;

        r0 := @this: android.net.wifi.WifiMonitor;

        $r1 = staticinvoke <android.net.wifi.WifiMonitor$WifiMonitorSingleton: android.net.wifi.WifiMonitor$WifiMonitorSingleton getMonitor()>();

        $r2 = r0.<android.net.wifi.WifiMonitor: java.lang.String mInterfaceName>;

        virtualinvoke $r1.<android.net.wifi.WifiMonitor$WifiMonitorSingleton: void startMonitoring(java.lang.String)>($r2);

        return;
    }

    public void stopMonitoring()
    {
        android.net.wifi.WifiMonitor r0;
        android.net.wifi.WifiMonitor$WifiMonitorSingleton $r1;
        java.lang.String $r2;

        r0 := @this: android.net.wifi.WifiMonitor;

        $r1 = staticinvoke <android.net.wifi.WifiMonitor$WifiMonitorSingleton: android.net.wifi.WifiMonitor$WifiMonitorSingleton getMonitor()>();

        $r2 = r0.<android.net.wifi.WifiMonitor: java.lang.String mInterfaceName>;

        virtualinvoke $r1.<android.net.wifi.WifiMonitor$WifiMonitorSingleton: void stopMonitoring(java.lang.String)>($r2);

        return;
    }

    public void stopSupplicant()
    {
        android.net.wifi.WifiMonitor r0;
        android.net.wifi.WifiMonitor$WifiMonitorSingleton $r1;

        r0 := @this: android.net.wifi.WifiMonitor;

        $r1 = staticinvoke <android.net.wifi.WifiMonitor$WifiMonitorSingleton: android.net.wifi.WifiMonitor$WifiMonitorSingleton getMonitor()>();

        virtualinvoke $r1.<android.net.wifi.WifiMonitor$WifiMonitorSingleton: void stopSupplicant()>();

        return;
    }
}
