public abstract class gov.nist.javax.sip.message.MessageObject extends gov.nist.core.GenericObject
{

    protected void <init>()
    {
        gov.nist.javax.sip.message.MessageObject r0;

        r0 := @this: gov.nist.javax.sip.message.MessageObject;

        specialinvoke r0.<gov.nist.core.GenericObject: void <init>()>();

        return;
    }

    public java.lang.String dbgPrint(int)
    {
        gov.nist.javax.sip.message.MessageObject r0;
        int i0, i1;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.message.MessageObject;

        i0 := @parameter0: int;

        i1 = r0.<gov.nist.javax.sip.message.MessageObject: int indentation>;

        r0.<gov.nist.javax.sip.message.MessageObject: int indentation> = i0;

        r1 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        r0.<gov.nist.javax.sip.message.MessageObject: int indentation> = i1;

        return r1;
    }

    public void dbgPrint()
    {
        gov.nist.javax.sip.message.MessageObject r0;

        r0 := @this: gov.nist.javax.sip.message.MessageObject;

        specialinvoke r0.<gov.nist.core.GenericObject: void dbgPrint()>();

        return;
    }

    public java.lang.String debugDump()
    {
        gov.nist.javax.sip.message.MessageObject r0;
        java.lang.Class r1, r4, $r14, $r15, $r25;
        java.lang.reflect.Field[] r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i16, $i19;
        java.lang.reflect.Field r3;
        java.lang.String r5, r7, $r8, $r9, $r13, $r19, $r23, $r26, $r29, $r30, $r36, $r38, $r43;
        java.lang.StringBuilder $r10, $r11, $r12, $r16, $r18, $r22, $r27, $r28, $r31, $r40, $r41, $r42;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r17, $r20, $r21, $r24, $r32, $r33, $r34, $r35;
        gov.nist.core.GenericObjectList $r37;
        gov.nist.core.GenericObject $r39;
        float $f0;
        double $d0;
        long $l12;
        char $c17;
        short $s18;
        java.lang.IllegalAccessException $r44;

        r0 := @this: gov.nist.javax.sip.message.MessageObject;

        r0.<gov.nist.javax.sip.message.MessageObject: java.lang.String stringRepresentation> = "";

        r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(java.lang.String)>($r8);

        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(java.lang.String)>("{");

        r2 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        i0 = 0;

     label01:
        $i1 = lengthof r2;

        if i0 >= $i1 goto label34;

        r3 = r2[i0];

        $i2 = virtualinvoke r3.<java.lang.reflect.Field: int getModifiers()>();

        if $i2 != 2 goto label03;

     label02:
        i0 = i0 + 1;

        goto label01;

     label03:
        r4 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Class getType()>();

        r5 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.String getName()>();

        $i3 = virtualinvoke r5.<java.lang.String: int compareTo(java.lang.String)>("stringRepresentation");

        if $i3 == 0 goto label02;

        $i4 = virtualinvoke r5.<java.lang.String: int compareTo(java.lang.String)>("indentation");

        if $i4 == 0 goto label02;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(java.lang.String)>($r13);

     label04:
        $z0 = virtualinvoke r4.<java.lang.Class: boolean isPrimitive()>();

        if $z0 == 0 goto label18;

        r7 = virtualinvoke r4.<java.lang.Class: java.lang.String toString()>();

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r43 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(java.lang.String)>($r43);

        $i11 = virtualinvoke r7.<java.lang.String: int compareTo(java.lang.String)>("int");

        if $i11 != 0 goto label06;

        $i19 = virtualinvoke r3.<java.lang.reflect.Field: int getInt(java.lang.Object)>(r0);

        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(int)>($i19);

     label05:
        goto label02;

     label06:
        $i10 = virtualinvoke r7.<java.lang.String: int compareTo(java.lang.String)>("short");

        if $i10 != 0 goto label08;

        $s18 = virtualinvoke r3.<java.lang.reflect.Field: short getShort(java.lang.Object)>(r0);

        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(short)>($s18);

     label07:
        goto label02;

     label08:
        $i9 = virtualinvoke r7.<java.lang.String: int compareTo(java.lang.String)>("char");

        if $i9 != 0 goto label10;

        $c17 = virtualinvoke r3.<java.lang.reflect.Field: char getChar(java.lang.Object)>(r0);

        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(char)>($c17);

     label09:
        goto label02;

     label10:
        $i13 = virtualinvoke r7.<java.lang.String: int compareTo(java.lang.String)>("long");

        if $i13 != 0 goto label12;

        $l12 = virtualinvoke r3.<java.lang.reflect.Field: long getLong(java.lang.Object)>(r0);

        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(long)>($l12);

     label11:
        goto label02;

     label12:
        $i14 = virtualinvoke r7.<java.lang.String: int compareTo(java.lang.String)>("boolean");

        if $i14 != 0 goto label14;

        $z3 = virtualinvoke r3.<java.lang.reflect.Field: boolean getBoolean(java.lang.Object)>(r0);

        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(boolean)>($z3);

     label13:
        goto label02;

     label14:
        $i15 = virtualinvoke r7.<java.lang.String: int compareTo(java.lang.String)>("double");

        if $i15 != 0 goto label16;

        $d0 = virtualinvoke r3.<java.lang.reflect.Field: double getDouble(java.lang.Object)>(r0);

        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(double)>($d0);

     label15:
        goto label02;

     label16:
        $i16 = virtualinvoke r7.<java.lang.String: int compareTo(java.lang.String)>("float");

        if $i16 != 0 goto label02;

        $f0 = virtualinvoke r3.<java.lang.reflect.Field: float getFloat(java.lang.Object)>(r0);

        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(float)>($f0);

     label17:
        goto label02;

     label18:
        $r14 = class "gov/nist/core/GenericObject";

        $z1 = virtualinvoke $r14.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r4);

        if $z1 == 0 goto label22;

        $r35 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        if $r35 == null goto label20;

        $r34 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        $r39 = (gov.nist.core.GenericObject) $r34;

        $i8 = r0.<gov.nist.javax.sip.message.MessageObject: int indentation>;

        $i7 = 1 + $i8;

        $r38 = virtualinvoke $r39.<gov.nist.core.GenericObject: java.lang.String debugDump(int)>($i7);

        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(java.lang.String)>($r38);

     label19:
        goto label02;

     label20:
        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(java.lang.String)>("<null>");

     label21:
        goto label02;

     label22:
        $r15 = class "gov/nist/core/GenericObjectList";

        $z2 = virtualinvoke $r15.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r4);

        if $z2 == 0 goto label26;

        $r32 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        if $r32 == null goto label24;

        $r33 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        $r37 = (gov.nist.core.GenericObjectList) $r33;

        $i5 = r0.<gov.nist.javax.sip.message.MessageObject: int indentation>;

        $i6 = 1 + $i5;

        $r36 = virtualinvoke $r37.<gov.nist.core.GenericObjectList: java.lang.String debugDump(int)>($i6);

        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(java.lang.String)>($r36);

     label23:
        goto label02;

     label24:
        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(java.lang.String)>("<null>");

     label25:
        goto label02;

     label26:
        $r17 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        if $r17 == null goto label30;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        $r25 = virtualinvoke $r24.<java.lang.Object: java.lang.Class getClass()>();

        $r30 = virtualinvoke $r25.<java.lang.Class: java.lang.String getName()>();

        $r31 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r28 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(java.lang.String)>($r29);

     label27:
        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(java.lang.String)>("{");

        $r20 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        if $r20 == null goto label32;

        $r21 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        $r26 = virtualinvoke $r21.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(java.lang.String)>($r26);

     label28:
        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(java.lang.String)>("}");

     label29:
        goto label02;

     label30:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke r4.<java.lang.Class: java.lang.String getName()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(java.lang.String)>($r23);

     label31:
        goto label27;

     label32:
        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(java.lang.String)>("<null>");

     label33:
        goto label28;

     label34:
        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(java.lang.String)>("}");

        $r9 = r0.<gov.nist.javax.sip.message.MessageObject: java.lang.String stringRepresentation>;

        return $r9;

     label35:
        $r44 := @caughtexception;

        goto label02;

        catch java.lang.IllegalAccessException from label04 to label05 with label35;
        catch java.lang.IllegalAccessException from label06 to label07 with label35;
        catch java.lang.IllegalAccessException from label08 to label09 with label35;
        catch java.lang.IllegalAccessException from label10 to label11 with label35;
        catch java.lang.IllegalAccessException from label12 to label13 with label35;
        catch java.lang.IllegalAccessException from label14 to label15 with label35;
        catch java.lang.IllegalAccessException from label16 to label17 with label35;
        catch java.lang.IllegalAccessException from label18 to label19 with label35;
        catch java.lang.IllegalAccessException from label20 to label21 with label35;
        catch java.lang.IllegalAccessException from label22 to label23 with label35;
        catch java.lang.IllegalAccessException from label24 to label25 with label35;
        catch java.lang.IllegalAccessException from label26 to label27 with label35;
        catch java.lang.IllegalAccessException from label27 to label28 with label35;
        catch java.lang.IllegalAccessException from label28 to label29 with label35;
        catch java.lang.IllegalAccessException from label30 to label31 with label35;
        catch java.lang.IllegalAccessException from label32 to label33 with label35;
    }

    public abstract java.lang.String encode();
}
