final class org.apache.xml.serializer.WriterToUTF8Buffered extends java.io.Writer implements org.apache.xml.serializer.WriterChain
{
    private static final int BYTES_MAX;
    private static final int CHARS_MAX;
    private int count;
    private final char[] m_inputChars;
    private final java.io.OutputStream m_os;
    private final byte[] m_outputBytes;

    public void <init>(java.io.OutputStream)
    {
        org.apache.xml.serializer.WriterToUTF8Buffered r0;
        java.io.OutputStream r1;
        byte[] $r2;
        char[] $r3;

        r0 := @this: org.apache.xml.serializer.WriterToUTF8Buffered;

        r1 := @parameter0: java.io.OutputStream;

        specialinvoke r0.<java.io.Writer: void <init>()>();

        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: java.io.OutputStream m_os> = r1;

        $r2 = newarray (byte)[16387];

        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: byte[] m_outputBytes> = $r2;

        $r3 = newarray (char)[5463];

        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: char[] m_inputChars> = $r3;

        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count> = 0;

        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.xml.serializer.WriterToUTF8Buffered r0;
        java.io.OutputStream $r1;

        r0 := @this: org.apache.xml.serializer.WriterToUTF8Buffered;

        virtualinvoke r0.<org.apache.xml.serializer.WriterToUTF8Buffered: void flushBuffer()>();

        $r1 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: java.io.OutputStream m_os>;

        virtualinvoke $r1.<java.io.OutputStream: void close()>();

        return;
    }

    public void flush() throws java.io.IOException
    {
        org.apache.xml.serializer.WriterToUTF8Buffered r0;
        java.io.OutputStream $r1;

        r0 := @this: org.apache.xml.serializer.WriterToUTF8Buffered;

        virtualinvoke r0.<org.apache.xml.serializer.WriterToUTF8Buffered: void flushBuffer()>();

        $r1 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: java.io.OutputStream m_os>;

        virtualinvoke $r1.<java.io.OutputStream: void flush()>();

        return;
    }

    public void flushBuffer() throws java.io.IOException
    {
        org.apache.xml.serializer.WriterToUTF8Buffered r0;
        int $i0, $i1;
        byte[] $r1;
        java.io.OutputStream $r2;

        r0 := @this: org.apache.xml.serializer.WriterToUTF8Buffered;

        $i0 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        if $i0 <= 0 goto label1;

        $r2 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: java.io.OutputStream m_os>;

        $r1 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: byte[] m_outputBytes>;

        $i1 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, $i1);

        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count> = 0;

     label1:
        return;
    }

    public java.io.OutputStream getOutputStream()
    {
        org.apache.xml.serializer.WriterToUTF8Buffered r0;
        java.io.OutputStream $r1;

        r0 := @this: org.apache.xml.serializer.WriterToUTF8Buffered;

        $r1 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: java.io.OutputStream m_os>;

        return $r1;
    }

    public java.io.Writer getWriter()
    {
        org.apache.xml.serializer.WriterToUTF8Buffered r0;

        r0 := @this: org.apache.xml.serializer.WriterToUTF8Buffered;

        return null;
    }

    public void write(int) throws java.io.IOException
    {
        org.apache.xml.serializer.WriterToUTF8Buffered r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, $i11, $i12, $i13, $i14, $i15, $i17, $i18, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i28, $i29, $i30, $i32, $i33, $i34, $i36, $i37, $i38, $i40, $i41, $i42, $i44, $i45, $i46, $i48, $i50, $i52;
        byte[] r1, r2, r3, r4, r5, r6, r7, r8, r9, r10;
        byte $b16, $b19, $b27, $b31, $b35, $b39, $b43, $b47, $b49, $b51;

        r0 := @this: org.apache.xml.serializer.WriterToUTF8Buffered;

        i0 := @parameter0: int;

        $i12 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        if $i12 < 16384 goto label1;

        virtualinvoke r0.<org.apache.xml.serializer.WriterToUTF8Buffered: void flushBuffer()>();

     label1:
        if i0 >= 128 goto label2;

        r10 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: byte[] m_outputBytes>;

        i10 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        $i50 = i10 + 1;

        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count> = $i50;

        $b49 = (byte) i0;

        r10[i10] = $b49;

        return;

     label2:
        if i0 >= 2048 goto label3;

        r8 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: byte[] m_outputBytes>;

        i8 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        $i42 = i8 + 1;

        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count> = $i42;

        $i41 = i0 >> 6;

        $i48 = 192 + $i41;

        $b47 = (byte) $i48;

        r8[i8] = $b47;

        r9 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: byte[] m_outputBytes>;

        i9 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        $i46 = i9 + 1;

        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count> = $i46;

        $i45 = i0 & 63;

        $i52 = 128 + $i45;

        $b51 = (byte) $i52;

        r9[i9] = $b51;

        return;

     label3:
        if i0 >= 65536 goto label4;

        r5 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: byte[] m_outputBytes>;

        i5 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        $i32 = i5 + 1;

        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count> = $i32;

        $i29 = i0 >> 12;

        $i30 = 224 + $i29;

        $b35 = (byte) $i30;

        r5[i5] = $b35;

        r6 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: byte[] m_outputBytes>;

        i6 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        $i36 = i6 + 1;

        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count> = $i36;

        $i33 = i0 >> 6;

        $i34 = 63 & $i33;

        $i40 = 128 + $i34;

        $b39 = (byte) $i40;

        r6[i6] = $b39;

        r7 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: byte[] m_outputBytes>;

        i7 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        $i38 = i7 + 1;

        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count> = $i38;

        $i37 = i0 & 63;

        $i44 = 128 + $i37;

        $b43 = (byte) $i44;

        r7[i7] = $b43;

        return;

     label4:
        r1 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: byte[] m_outputBytes>;

        i1 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        $i11 = i1 + 1;

        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count> = $i11;

        $i14 = i0 >> 18;

        $i13 = 240 + $i14;

        $b16 = (byte) $i13;

        r1[i1] = $b16;

        r2 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: byte[] m_outputBytes>;

        i2 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        $i15 = i2 + 1;

        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count> = $i15;

        $i18 = i0 >> 12;

        $i17 = 63 & $i18;

        $i20 = 128 + $i17;

        $b19 = (byte) $i20;

        r2[i2] = $b19;

        r3 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: byte[] m_outputBytes>;

        i3 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        $i23 = i3 + 1;

        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count> = $i23;

        $i24 = i0 >> 6;

        $i21 = 63 & $i24;

        $i22 = 128 + $i21;

        $b27 = (byte) $i22;

        r3[i3] = $b27;

        r4 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: byte[] m_outputBytes>;

        i4 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        $i28 = i4 + 1;

        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count> = $i28;

        $i25 = i0 & 63;

        $i26 = 128 + $i25;

        $b31 = (byte) $i26;

        r4[i4] = $b31;

        return;
    }

    public void write(java.lang.String) throws java.io.IOException
    {
        org.apache.xml.serializer.WriterToUTF8Buffered r0;
        java.lang.String r1;
        int i0, i1, i2, i3, i4, i6, i7, i8, i10, i11, i12, i13, i14, i15, i16, i18, i19, i20, i21, i22, i23, $i25, $i26, $i27, $i30, $i35, $i37, $i38, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i51, $i52, $i61, $i62, $i65, $i67, $i68;
        char[] r2, $r4, $r5, $r6, $r7;
        byte[] r3;
        char c5, c9, c17, c24, $c29, $c32, $c33, $c36, $c48, $c53, $c54, $c56, $c57, $c64;
        byte $b28, $b31, $b34, $b39, $b49, $b50, $b55, $b58, $b59, $b60, $b63;
        long $l66, $l69, $l70, $l71, $l72;

        r0 := @this: org.apache.xml.serializer.WriterToUTF8Buffered;

        r1 := @parameter0: java.lang.String;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        i1 = i0 * 3;

        $i26 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        $i25 = 16384 - $i26;

        if i1 < $i25 goto label05;

        virtualinvoke r0.<org.apache.xml.serializer.WriterToUTF8Buffered: void flushBuffer()>();

        if i1 <= 16384 goto label05;

        i19 = i0 / 5461;

        $i61 = i0 % 5461;

        if $i61 <= 0 goto label04;

        i18 = i19 + 1;

     label01:
        i21 = 0;

        i20 = 1;

     label02:
        if i20 > i18 goto label13;

        i23 = i21;

        $l70 = (long) i0;

        $l69 = (long) i20;

        $l72 = $l70 * $l69;

        $l71 = (long) i18;

        $l66 = $l72 / $l71;

        $i67 = (int) $l66;

        i21 = 0 + $i67;

        $r5 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: char[] m_inputChars>;

        virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(i23, i21, $r5, 0);

        i22 = i21 - i23;

        $r7 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: char[] m_inputChars>;

        $i68 = i22 - 1;

        c24 = $r7[$i68];

        if c24 < 55296 goto label03;

        if c24 > 56319 goto label03;

        i21 = i21 + -1;

        i22 = i22 + -1;

        if i20 != i18 goto label03;

     label03:
        $r6 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: char[] m_inputChars>;

        virtualinvoke r0.<org.apache.xml.serializer.WriterToUTF8Buffered: void write(char[],int,int)>($r6, 0, i22);

        i20 = i20 + 1;

        goto label02;

     label04:
        i18 = i19;

        goto label01;

     label05:
        $r4 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: char[] m_inputChars>;

        virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(0, i0, $r4, 0);

        r2 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: char[] m_inputChars>;

        r3 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: byte[] m_outputBytes>;

        i2 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        i3 = 0;

        i4 = i2;

     label06:
        if i3 >= i0 goto label07;

        c17 = r2[i3];

        if c17 >= 128 goto label07;

        i16 = i4 + 1;

        $b60 = (byte) c17;

        r3[i4] = $b60;

        i3 = i3 + 1;

        i4 = i16;

        goto label06;

     label07:
        if i3 >= i0 goto label12;

        c5 = r2[i3];

        if c5 >= 128 goto label09;

        i8 = i4 + 1;

        $b59 = (byte) c5;

        r3[i4] = $b59;

     label08:
        i3 = i3 + 1;

        i4 = i8;

        goto label07;

     label09:
        if c5 >= 2048 goto label10;

        i15 = i4 + 1;

        $c54 = c5 >> 6;

        $i62 = 192 + $c54;

        $b63 = (byte) $i62;

        r3[i4] = $b63;

        i14 = i15 + 1;

        $c64 = c5 & 63;

        $i65 = 128 + $c64;

        $b58 = (byte) $i65;

        r3[i15] = $b58;

        i8 = i14;

        goto label08;

     label10:
        if c5 < 55296 goto label11;

        if c5 > 56319 goto label11;

        i3 = i3 + 1;

        c9 = r2[i3];

        i10 = i4 + 1;

        $i35 = c5 + 64;

        $i40 = $i35 >> 8;

        $i41 = 240 & $i40;

        $i38 = 240 | $i41;

        $b39 = (byte) $i38;

        r3[i4] = $b39;

        i11 = i10 + 1;

        $i45 = c5 + 64;

        $i44 = $i45 >> 2;

        $i43 = 63 & $i44;

        $i42 = 128 | $i43;

        $b49 = (byte) $i42;

        r3[i10] = $b49;

        i13 = i11 + 1;

        $c48 = c9 >> 6;

        $c53 = 15 & $c48;

        $i47 = c5 << 4;

        $i46 = 48 & $i47;

        $i52 = $c53 + $i46;

        $i51 = 128 | $i52;

        $b50 = (byte) $i51;

        r3[i11] = $b50;

        i12 = i13 + 1;

        $c57 = c9 & 63;

        $c56 = 128 | $c57;

        $b55 = (byte) $c56;

        r3[i13] = $b55;

        i8 = i12;

        goto label08;

     label11:
        i6 = i4 + 1;

        $c29 = c5 >> 12;

        $i27 = 224 + $c29;

        $b28 = (byte) $i27;

        r3[i4] = $b28;

        i7 = i6 + 1;

        $c32 = c5 >> 6;

        $c33 = 63 & $c32;

        $i30 = 128 + $c33;

        $b31 = (byte) $i30;

        r3[i6] = $b31;

        i8 = i7 + 1;

        $c36 = c5 & 63;

        $i37 = 128 + $c36;

        $b34 = (byte) $i37;

        r3[i7] = $b34;

        goto label08;

     label12:
        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count> = i4;

     label13:
        return;
    }

    public void write(char[], int, int) throws java.io.IOException
    {
        org.apache.xml.serializer.WriterToUTF8Buffered r0;
        char[] r1;
        int i0, i1, i2, i3, i4, i5, i6, i8, i9, i10, i12, i13, i14, i15, i16, i18, i19, i20, i21, i22, i23, i24, $i25, $i28, $i31, $i34, $i35, $i37, $i38, $i40, $i41, $i42, $i43, $i47, $i48, $i49, $i51, $i52, $i56, $i58, $i62, $i66, $i69, $i70, $i72, $i76, $i77;
        byte[] r2;
        char c7, c11, c17, c26, $c27, $c29, $c30, $c33, $c45, $c50, $c53, $c54, $c59, $c65, $c71;
        byte $b32, $b36, $b39, $b44, $b46, $b55, $b57, $b60, $b61, $b67, $b68;
        long $l63, $l64, $l73, $l74, $l75;

        r0 := @this: org.apache.xml.serializer.WriterToUTF8Buffered;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = i1 * 3;

        $i25 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        $i28 = 16384 - $i25;

        if i2 < $i28 goto label06;

        virtualinvoke r0.<org.apache.xml.serializer.WriterToUTF8Buffered: void flushBuffer()>();

        if i2 <= 16384 goto label06;

        i19 = i1 / 5461;

        $i62 = i1 % 5461;

        if $i62 <= 0 goto label04;

        i22 = i19 + 1;

     label01:
        i21 = i0;

        i24 = 1;

     label02:
        if i24 > i22 goto label14;

        i23 = i21;

        $l64 = (long) i1;

        $l63 = (long) i24;

        $l74 = $l64 * $l63;

        $l73 = (long) i22;

        $l75 = $l74 / $l73;

        $i76 = (int) $l75;

        i21 = i0 + $i76;

        $i69 = i21 - 1;

        c26 = r1[$i69];

        $i70 = i21 - 1;

        $c71 = r1[$i70];

        if c26 < 55296 goto label03;

        if c26 > 56319 goto label03;

        $i77 = i0 + i1;

        if i21 >= $i77 goto label05;

        i21 = i21 + 1;

     label03:
        $i72 = i21 - i23;

        virtualinvoke r0.<org.apache.xml.serializer.WriterToUTF8Buffered: void write(char[],int,int)>(r1, i23, $i72);

        i24 = i24 + 1;

        goto label02;

     label04:
        i22 = i19;

        goto label01;

     label05:
        i21 = i21 + -1;

        goto label03;

     label06:
        i3 = i1 + i0;

        r2 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: byte[] m_outputBytes>;

        i4 = r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count>;

        i5 = i0;

        i6 = i4;

     label07:
        if i5 >= i3 goto label08;

        c17 = r1[i5];

        if c17 >= 128 goto label08;

        i20 = i6 + 1;

        $b61 = (byte) c17;

        r2[i6] = $b61;

        i5 = i5 + 1;

        i6 = i20;

        goto label07;

     label08:
        if i5 >= i3 goto label13;

        c7 = r1[i5];

        if c7 >= 128 goto label10;

        i10 = i6 + 1;

        $b68 = (byte) c7;

        r2[i6] = $b68;

     label09:
        i5 = i5 + 1;

        i6 = i10;

        goto label08;

     label10:
        if c7 >= 2048 goto label11;

        i15 = i6 + 1;

        $c59 = c7 >> 6;

        $i58 = 192 + $c59;

        $b57 = (byte) $i58;

        r2[i6] = $b57;

        i18 = i15 + 1;

        $c65 = c7 & 63;

        $i66 = 128 + $c65;

        $b67 = (byte) $i66;

        r2[i15] = $b67;

        i10 = i18;

        goto label09;

     label11:
        if c7 < 55296 goto label12;

        if c7 > 56319 goto label12;

        i5 = i5 + 1;

        c11 = r1[i5];

        i12 = i6 + 1;

        $i40 = c7 + 64;

        $i37 = $i40 >> 8;

        $i38 = 240 & $i37;

        $i43 = 240 | $i38;

        $b44 = (byte) $i43;

        r2[i6] = $b44;

        i14 = i12 + 1;

        $i41 = c7 + 64;

        $i42 = $i41 >> 2;

        $i48 = 63 & $i42;

        $i47 = 128 | $i48;

        $b46 = (byte) $i47;

        r2[i12] = $b46;

        i13 = i14 + 1;

        $c45 = c11 >> 6;

        $c50 = 15 & $c45;

        $i52 = c7 << 4;

        $i51 = 48 & $i52;

        $i49 = $c50 + $i51;

        $i56 = 128 | $i49;

        $b55 = (byte) $i56;

        r2[i14] = $b55;

        i16 = i13 + 1;

        $c54 = c11 & 63;

        $c53 = 128 | $c54;

        $b60 = (byte) $c53;

        r2[i13] = $b60;

        i10 = i16;

        goto label09;

     label12:
        i8 = i6 + 1;

        $c27 = c7 >> 12;

        $i31 = 224 + $c27;

        $b32 = (byte) $i31;

        r2[i6] = $b32;

        i9 = i8 + 1;

        $c29 = c7 >> 6;

        $c30 = 63 & $c29;

        $i35 = 128 + $c30;

        $b36 = (byte) $i35;

        r2[i8] = $b36;

        i10 = i9 + 1;

        $c33 = c7 & 63;

        $i34 = 128 + $c33;

        $b39 = (byte) $i34;

        r2[i9] = $b39;

        goto label09;

     label13:
        r0.<org.apache.xml.serializer.WriterToUTF8Buffered: int count> = i6;

     label14:
        return;
    }

    public static void <clinit>()
    {
        <org.apache.xml.serializer.WriterToUTF8Buffered: int CHARS_MAX> = 5461;

        <org.apache.xml.serializer.WriterToUTF8Buffered: int BYTES_MAX> = 16384;

        return;
    }
}
