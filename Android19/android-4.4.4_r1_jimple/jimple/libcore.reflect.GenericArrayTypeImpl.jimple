public final class libcore.reflect.GenericArrayTypeImpl extends java.lang.Object implements java.lang.reflect.GenericArrayType
{
    private final java.lang.reflect.Type componentType;

    public void <init>(java.lang.reflect.Type)
    {
        libcore.reflect.GenericArrayTypeImpl r0;
        java.lang.reflect.Type r1;

        r0 := @this: libcore.reflect.GenericArrayTypeImpl;

        r1 := @parameter0: java.lang.reflect.Type;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<libcore.reflect.GenericArrayTypeImpl: java.lang.reflect.Type componentType> = r1;

        return;
    }

    public java.lang.reflect.Type getGenericComponentType()
    {
        libcore.reflect.GenericArrayTypeImpl r0;
        java.lang.reflect.Type r2, $r3, $r6;
        libcore.reflect.ParameterizedTypeImpl $r4;
        java.lang.ClassCastException $r5;

        r0 := @this: libcore.reflect.GenericArrayTypeImpl;

     label1:
        $r3 = r0.<libcore.reflect.GenericArrayTypeImpl: java.lang.reflect.Type componentType>;

        $r4 = (libcore.reflect.ParameterizedTypeImpl) $r3;

        r2 = virtualinvoke $r4.<libcore.reflect.ParameterizedTypeImpl: java.lang.reflect.Type getResolvedType()>();

     label2:
        return r2;

     label3:
        $r5 := @caughtexception;

        $r6 = r0.<libcore.reflect.GenericArrayTypeImpl: java.lang.reflect.Type componentType>;

        return $r6;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public java.lang.String toString()
    {
        libcore.reflect.GenericArrayTypeImpl r0;
        java.lang.StringBuilder $r1, $r4, $r5;
        java.lang.reflect.Type $r2;
        java.lang.String $r3, $r6;

        r0 := @this: libcore.reflect.GenericArrayTypeImpl;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<libcore.reflect.GenericArrayTypeImpl: java.lang.reflect.Type componentType>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[]");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }
}
