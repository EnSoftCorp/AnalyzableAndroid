class com.android.org.chromium.media.MediaDrmBridge extends java.lang.Object
{
    static final boolean $assertionsDisabled;
    private android.os.Handler mHandler;
    private android.media.MediaCrypto mMediaCrypto;
    private java.nio.ByteBuffer mMediaCryptoSession;
    private android.media.MediaDrm mMediaDrm;
    private long mNativeMediaDrmBridge;
    private java.util.ArrayDeque mPendingCreateSessionDataQueue;
    private boolean mProvisioningPending;
    private boolean mResetDeviceCredentialsPending;
    private java.util.UUID mSchemeUUID;
    private java.util.HashMap mSessionIds;
    private java.util.HashMap mSessionMimeTypes;
    private boolean mSingleSessionMode;

    static void <clinit>()
    {
        boolean z0, $z1;
        java.lang.Class $r0;

        $r0 = class "com/android/org/chromium/media/MediaDrmBridge";

        $z1 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z1 != 0 goto label2;

        z0 = 1;

     label1:
        <com.android.org.chromium.media.MediaDrmBridge: boolean $assertionsDisabled> = z0;

        return;

     label2:
        z0 = 0;

        goto label1;
    }

    private void <init>(java.util.UUID, java.lang.String, long, boolean) throws android.media.UnsupportedSchemeException
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        java.util.UUID r1;
        java.lang.String r2, r3, $r18;
        long l0;
        boolean z0, $z1, $z2;
        android.media.MediaDrm $r10, $r11, $r12, $r19, $r20, r21;
        java.lang.StringBuilder $r14, $r15, $r16, $r17, r27;
        android.os.Handler r22;
        java.util.HashMap r23, r24;
        java.util.ArrayDeque r25;
        com.android.org.chromium.media.MediaDrmBridge$MediaDrmListener r26;
        android.media.MediaDrm$OnEventListener r28;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        r1 := @parameter0: java.util.UUID;

        r2 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        z0 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.UUID mSchemeUUID> = r1;

        r21 = new android.media.MediaDrm;

        specialinvoke r21.<android.media.MediaDrm: void <init>(java.util.UUID)>(r1);

        r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm> = r21;

        r0.<com.android.org.chromium.media.MediaDrmBridge: long mNativeMediaDrmBridge> = l0;

        r22 = new android.os.Handler;

        specialinvoke r22.<android.os.Handler: void <init>()>();

        r0.<com.android.org.chromium.media.MediaDrmBridge: android.os.Handler mHandler> = r22;

        r0.<com.android.org.chromium.media.MediaDrmBridge: boolean mSingleSessionMode> = z0;

        r23 = new java.util.HashMap;

        specialinvoke r23.<java.util.HashMap: void <init>()>();

        r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionIds> = r23;

        r24 = new java.util.HashMap;

        specialinvoke r24.<java.util.HashMap: void <init>()>();

        r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionMimeTypes> = r24;

        r25 = new java.util.ArrayDeque;

        specialinvoke r25.<java.util.ArrayDeque: void <init>()>();

        r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.ArrayDeque mPendingCreateSessionDataQueue> = r25;

        r0.<com.android.org.chromium.media.MediaDrmBridge: boolean mResetDeviceCredentialsPending> = 0;

        r0.<com.android.org.chromium.media.MediaDrmBridge: boolean mProvisioningPending> = 0;

        $r10 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        r26 = new com.android.org.chromium.media.MediaDrmBridge$MediaDrmListener;

        specialinvoke r26.<com.android.org.chromium.media.MediaDrmBridge$MediaDrmListener: void <init>(com.android.org.chromium.media.MediaDrmBridge,com.android.org.chromium.media.MediaDrmBridge$1)>(r0, null);

        r28 = (android.media.MediaDrm$OnEventListener) r26;

        virtualinvoke $r10.<android.media.MediaDrm: void setOnEventListener(android.media.MediaDrm$OnEventListener)>(r28);

        $r11 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        virtualinvoke $r11.<android.media.MediaDrm: void setPropertyString(java.lang.String,java.lang.String)>("privacyMode", "enable");

        $z1 = r0.<com.android.org.chromium.media.MediaDrmBridge: boolean mSingleSessionMode>;

        if $z1 != 0 goto label1;

        $r20 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        virtualinvoke $r20.<android.media.MediaDrm: void setPropertyString(java.lang.String,java.lang.String)>("sessionSharing", "enable");

     label1:
        $r12 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        r3 = virtualinvoke $r12.<android.media.MediaDrm: java.lang.String getPropertyString(java.lang.String)>("securityLevel");

        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Security level: current ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", new ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaDrmBridge", $r18);

        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z2 != 0 goto label2;

        $r19 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        virtualinvoke $r19.<android.media.MediaDrm: void setPropertyString(java.lang.String,java.lang.String)>("securityLevel", r2);

     label2:
        return;
    }

    static void access$1000(com.android.org.chromium.media.MediaDrmBridge, long, int)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        long l0;
        int i1;

        r0 := @parameter0: com.android.org.chromium.media.MediaDrmBridge;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void nativeOnSessionClosed(long,int)>(l0, i1);

        return;
    }

    static void access$1100(com.android.org.chromium.media.MediaDrmBridge, long, int)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        long l0;
        int i1;

        r0 := @parameter0: com.android.org.chromium.media.MediaDrmBridge;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void nativeOnSessionError(long,int)>(l0, i1);

        return;
    }

    static boolean access$1200(com.android.org.chromium.media.MediaDrmBridge, java.nio.ByteBuffer)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        java.nio.ByteBuffer r1;
        boolean $z0;

        r0 := @parameter0: com.android.org.chromium.media.MediaDrmBridge;

        r1 := @parameter1: java.nio.ByteBuffer;

        $z0 = specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: boolean sessionExists(java.nio.ByteBuffer)>(r1);

        return $z0;
    }

    static java.util.HashMap access$1300(com.android.org.chromium.media.MediaDrmBridge)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        java.util.HashMap $r1;

        r0 := @parameter0: com.android.org.chromium.media.MediaDrmBridge;

        $r1 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionIds>;

        return $r1;
    }

    static boolean access$1400(com.android.org.chromium.media.MediaDrmBridge)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        boolean $z0;

        r0 := @parameter0: com.android.org.chromium.media.MediaDrmBridge;

        $z0 = r0.<com.android.org.chromium.media.MediaDrmBridge: boolean mProvisioningPending>;

        return $z0;
    }

    static java.util.HashMap access$1500(com.android.org.chromium.media.MediaDrmBridge)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        java.util.HashMap $r1;

        r0 := @parameter0: com.android.org.chromium.media.MediaDrmBridge;

        $r1 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionMimeTypes>;

        return $r1;
    }

    static android.media.MediaDrm$KeyRequest access$1600(com.android.org.chromium.media.MediaDrmBridge, java.nio.ByteBuffer, byte[], java.lang.String) throws android.media.NotProvisionedException
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        java.nio.ByteBuffer r1;
        byte[] r2;
        java.lang.String r3;
        android.media.MediaDrm$KeyRequest $r4;

        r0 := @parameter0: com.android.org.chromium.media.MediaDrmBridge;

        r1 := @parameter1: java.nio.ByteBuffer;

        r2 := @parameter2: byte[];

        r3 := @parameter3: java.lang.String;

        $r4 = specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm$KeyRequest getKeyRequest(java.nio.ByteBuffer,byte[],java.lang.String)>(r1, r2, r3);

        return $r4;
    }

    static void access$1700(com.android.org.chromium.media.MediaDrmBridge)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;

        r0 := @parameter0: com.android.org.chromium.media.MediaDrmBridge;

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void startProvisioning()>();

        return;
    }

    static void access$1800(com.android.org.chromium.media.MediaDrmBridge, int, android.media.MediaDrm$KeyRequest)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        int i0;
        android.media.MediaDrm$KeyRequest r1;

        r0 := @parameter0: com.android.org.chromium.media.MediaDrmBridge;

        i0 := @parameter1: int;

        r1 := @parameter2: android.media.MediaDrm$KeyRequest;

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void onSessionMessage(int,android.media.MediaDrm$KeyRequest)>(i0, r1);

        return;
    }

    static void access$1900(com.android.org.chromium.media.MediaDrmBridge, int)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        int i0;

        r0 := @parameter0: com.android.org.chromium.media.MediaDrmBridge;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void onSessionError(int)>(i0);

        return;
    }

    static void access$2000(com.android.org.chromium.media.MediaDrmBridge, byte[])
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        byte[] r1;

        r0 := @parameter0: com.android.org.chromium.media.MediaDrmBridge;

        r1 := @parameter1: byte[];

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void onProvisionResponse(byte[])>(r1);

        return;
    }

    static void access$500(com.android.org.chromium.media.MediaDrmBridge)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;

        r0 := @parameter0: com.android.org.chromium.media.MediaDrmBridge;

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void processPendingCreateSessionData()>();

        return;
    }

    static long access$600(com.android.org.chromium.media.MediaDrmBridge)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        long $l0;

        r0 := @parameter0: com.android.org.chromium.media.MediaDrmBridge;

        $l0 = r0.<com.android.org.chromium.media.MediaDrmBridge: long mNativeMediaDrmBridge>;

        return $l0;
    }

    static void access$700(com.android.org.chromium.media.MediaDrmBridge, long, int, java.lang.String)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        long l0;
        int i1;
        java.lang.String r1;

        r0 := @parameter0: com.android.org.chromium.media.MediaDrmBridge;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void nativeOnSessionCreated(long,int,java.lang.String)>(l0, i1, r1);

        return;
    }

    static void access$800(com.android.org.chromium.media.MediaDrmBridge, long, int, byte[], java.lang.String)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        long l0;
        int i1;
        byte[] r1;
        java.lang.String r2;

        r0 := @parameter0: com.android.org.chromium.media.MediaDrmBridge;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        r1 := @parameter3: byte[];

        r2 := @parameter4: java.lang.String;

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void nativeOnSessionMessage(long,int,byte[],java.lang.String)>(l0, i1, r1, r2);

        return;
    }

    static void access$900(com.android.org.chromium.media.MediaDrmBridge, long, int)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        long l0;
        int i1;

        r0 := @parameter0: com.android.org.chromium.media.MediaDrmBridge;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void nativeOnSessionReady(long,int)>(l0, i1);

        return;
    }

    private void closeSession(java.nio.ByteBuffer)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        java.nio.ByteBuffer r1;
        boolean $z0;
        android.media.MediaDrm $r2, $r4;
        byte[] $r3;
        java.lang.AssertionError $r5;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        r1 := @parameter0: java.nio.ByteBuffer;

        $z0 = <com.android.org.chromium.media.MediaDrmBridge: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r4 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        if $r4 != null goto label1;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label1:
        $r2 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        $r3 = virtualinvoke r1.<java.nio.ByteBuffer: byte[] array()>();

        virtualinvoke $r2.<android.media.MediaDrm: void closeSession(byte[])>($r3);

        return;
    }

    private static com.android.org.chromium.media.MediaDrmBridge create(byte[], java.lang.String, int)
    {
        byte[] r0;
        java.lang.String r1, r4, $r9, $r13;
        int i0;
        java.util.UUID r2;
        boolean z0, z1, $z2;
        java.lang.StringBuilder r3, $r11, $r12, r18;
        com.android.org.chromium.media.MediaDrmBridge r5, r19;
        java.lang.IllegalStateException r6, $r16;
        java.lang.IllegalArgumentException r7, $r15;
        android.media.UnsupportedSchemeException r8, $r17;
        long $l2;
        java.lang.Throwable r20;

        r0 := @parameter0: byte[];

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 = staticinvoke <com.android.org.chromium.media.MediaDrmBridge: java.util.UUID getUUIDFromBytes(byte[])>(r0);

        if r2 == null goto label01;

        $z2 = staticinvoke <android.media.MediaDrm: boolean isCryptoSchemeSupported(java.util.UUID)>(r2);

        if $z2 != 0 goto label02;

     label01:
        return null;

     label02:
        $r9 = <android.os.Build$VERSION: java.lang.String RELEASE>;

        z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("4.4");

        z1 = 0;

        if z0 == 0 goto label03;

        z1 = 1;

     label03:
        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        r3 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MediaDrmBridge uses ");

        if z1 == 0 goto label08;

        r4 = "single";

     label04:
        $r12 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-session mode.");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaDrmBridge", $r13);

     label05:
        r19 = new com.android.org.chromium.media.MediaDrmBridge;

        $l2 = (long) i0;

        specialinvoke r19.<com.android.org.chromium.media.MediaDrmBridge: void <init>(java.util.UUID,java.lang.String,long,boolean)>(r2, r1, $l2, z1);

        r5 = r19;

     label06:
        return r5;

     label07:
        $r17 := @caughtexception;

        r8 = $r17;

        r20 = (java.lang.Throwable) r8;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaDrmBridge", "Unsupported DRM scheme", r20);

        return null;

     label08:
        r4 = "multiple";

        goto label04;

     label09:
        $r15 := @caughtexception;

        r7 = $r15;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaDrmBridge", "Failed to create MediaDrmBridge", r7);

        return null;

     label10:
        $r16 := @caughtexception;

        r6 = $r16;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaDrmBridge", "Failed to create MediaDrmBridge", r6);

        return null;

        catch android.media.UnsupportedSchemeException from label05 to label06 with label07;
        catch java.lang.IllegalArgumentException from label05 to label06 with label09;
        catch java.lang.IllegalStateException from label05 to label06 with label10;
    }

    private boolean createMediaCrypto() throws android.media.NotProvisionedException
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        android.media.MediaCryptoException r1, $r25;
        byte[] r2;
        android.media.MediaDrm $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.nio.ByteBuffer $r4, $r5, $r8, $r12, $r15, $r21;
        java.lang.StringBuilder $r7, $r10, r30;
        java.lang.String $r9;
        java.util.UUID $r11, $r13;
        java.util.HashMap $r16;
        java.lang.Integer $r18;
        long $l4;
        android.media.MediaCrypto $r20, $r23, r31;
        java.lang.AssertionError r27, r28, r29, r32;
        java.lang.Throwable r33;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        $r3 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        if $r3 != null goto label01;

        return 0;

     label01:
        $z0 = <com.android.org.chromium.media.MediaDrmBridge: boolean $assertionsDisabled>;

        if $z0 != 0 goto label02;

        $z5 = r0.<com.android.org.chromium.media.MediaDrmBridge: boolean mProvisioningPending>;

        if $z5 == 0 goto label02;

        r27 = new java.lang.AssertionError;

        specialinvoke r27.<java.lang.AssertionError: void <init>()>();

        throw r27;

     label02:
        $z1 = <com.android.org.chromium.media.MediaDrmBridge: boolean $assertionsDisabled>;

        if $z1 != 0 goto label03;

        $r21 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.nio.ByteBuffer mMediaCryptoSession>;

        if $r21 == null goto label03;

        r28 = new java.lang.AssertionError;

        specialinvoke r28.<java.lang.AssertionError: void <init>()>();

        throw r28;

     label03:
        $z2 = <com.android.org.chromium.media.MediaDrmBridge: boolean $assertionsDisabled>;

        if $z2 != 0 goto label04;

        $r23 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaCrypto mMediaCrypto>;

        if $r23 == null goto label04;

        r29 = new java.lang.AssertionError;

        specialinvoke r29.<java.lang.AssertionError: void <init>()>();

        throw r29;

     label04:
        $r4 = specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: java.nio.ByteBuffer openSession()>();

        r0.<com.android.org.chromium.media.MediaDrmBridge: java.nio.ByteBuffer mMediaCryptoSession> = $r4;

        $r5 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.nio.ByteBuffer mMediaCryptoSession>;

        if $r5 != null goto label05;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaDrmBridge", "Cannot create MediaCrypto Session.");

        return 0;

     label05:
        r30 = new java.lang.StringBuilder;

        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MediaCrypto Session created: ");

        $r8 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.nio.ByteBuffer mMediaCryptoSession>;

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaDrmBridge", $r9);

     label06:
        $r11 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.UUID mSchemeUUID>;

        $z3 = staticinvoke <android.media.MediaCrypto: boolean isCryptoSchemeSupported(java.util.UUID)>($r11);

        if $z3 == 0 goto label11;

        $r12 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.nio.ByteBuffer mMediaCryptoSession>;

        r2 = virtualinvoke $r12.<java.nio.ByteBuffer: byte[] array()>();

        r31 = new android.media.MediaCrypto;

        $r13 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.UUID mSchemeUUID>;

        specialinvoke r31.<android.media.MediaCrypto: void <init>(java.util.UUID,byte[])>($r13, r2);

        r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaCrypto mMediaCrypto> = r31;

        $z4 = <com.android.org.chromium.media.MediaDrmBridge: boolean $assertionsDisabled>;

        if $z4 != 0 goto label09;

        $r20 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaCrypto mMediaCrypto>;

        if $r20 != null goto label09;

        r32 = new java.lang.AssertionError;

        specialinvoke r32.<java.lang.AssertionError: void <init>()>();

        throw r32;

     label07:
        $r25 := @caughtexception;

        r1 = $r25;

        r33 = (java.lang.Throwable) r1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaDrmBridge", "Cannot create MediaCrypto", r33);

     label08:
        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void release()>();

        return 0;

     label09:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaDrmBridge", "MediaCrypto successfully created!");

        $r16 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionIds>;

        $r15 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.nio.ByteBuffer mMediaCryptoSession>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke $r16.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r18);

        $l4 = r0.<com.android.org.chromium.media.MediaDrmBridge: long mNativeMediaDrmBridge>;

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void nativeOnMediaCryptoReady(long)>($l4);

     label10:
        return 1;

     label11:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaDrmBridge", "Cannot create MediaCrypto for unsupported scheme.");

     label12:
        goto label08;

        catch android.media.MediaCryptoException from label06 to label07 with label07;
        catch android.media.MediaCryptoException from label09 to label10 with label07;
        catch android.media.MediaCryptoException from label11 to label12 with label07;
    }

    private void createSession(int, byte[], java.lang.String)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        int i0;
        byte[] r1;
        java.lang.String r2, $r10, $r14, $r21, $r24;
        android.media.NotProvisionedException r3, $r31;
        android.media.MediaCrypto r4, r5, $r33;
        boolean z0, z1, z2, z3, z4, z5, $z6, $z7, $z8, $z9, z10;
        java.lang.Object r6, $r25;
        android.media.MediaDrm$KeyRequest r7;
        android.media.MediaDrm $r8;
        java.util.HashMap $r9, $r12, $r20, $r22, $r26, $r27;
        java.lang.Integer $r11;
        java.lang.StringBuilder $r13, $r16, $r17, $r18, $r19, r39;
        java.nio.ByteBuffer $r28, r34;
        java.lang.AssertionError r35, r36, r37, r38;
        java.lang.Throwable r40;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        r2 := @parameter2: java.lang.String;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaDrmBridge", "createSession()");

        $r8 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        if $r8 != null goto label01;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaDrmBridge", "createSession() called when MediaDrm is null.");

        return;

     label01:
        $z6 = r0.<com.android.org.chromium.media.MediaDrmBridge: boolean mProvisioningPending>;

        if $z6 == 0 goto label03;

        $z9 = <com.android.org.chromium.media.MediaDrmBridge: boolean $assertionsDisabled>;

        if $z9 != 0 goto label02;

        $r33 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaCrypto mMediaCrypto>;

        if $r33 == null goto label02;

        r35 = new java.lang.AssertionError;

        specialinvoke r35.<java.lang.AssertionError: void <init>()>();

        throw r35;

     label02:
        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void savePendingCreateSessionData(int,byte[],java.lang.String)>(i0, r1, r2);

        return;

     label03:
        r4 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaCrypto mMediaCrypto>;

     label04:
        r34 = null;

        z10 = 0;

        if r4 != null goto label11;

     label05:
        z0 = specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: boolean createMediaCrypto()>();

     label06:
        r34 = null;

        z10 = 0;

        if z0 != 0 goto label11;

     label07:
        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void onSessionError(int)>(i0);

     label08:
        return;

     label09:
        $r31 := @caughtexception;

        r3 = $r31;

        r40 = (java.lang.Throwable) r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaDrmBridge", "Device not provisioned", r40);

        if z10 == 0 goto label10;

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void closeSession(java.nio.ByteBuffer)>(r34);

     label10:
        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void savePendingCreateSessionData(int,byte[],java.lang.String)>(i0, r1, r2);

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void startProvisioning()>();

        return;

     label11:
        z1 = <com.android.org.chromium.media.MediaDrmBridge: boolean $assertionsDisabled>;

     label12:
        if z1 != 0 goto label16;

     label13:
        r5 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaCrypto mMediaCrypto>;

     label14:
        r34 = null;

        z10 = 0;

        if r5 != null goto label16;

     label15:
        r36 = new java.lang.AssertionError;

        specialinvoke r36.<java.lang.AssertionError: void <init>()>();

        throw r36;

     label16:
        z2 = <com.android.org.chromium.media.MediaDrmBridge: boolean $assertionsDisabled>;

     label17:
        r34 = null;

        z10 = 0;

        if z2 != 0 goto label21;

     label18:
        $r27 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionIds>;

        $r28 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.nio.ByteBuffer mMediaCryptoSession>;

        z3 = virtualinvoke $r27.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r28);

     label19:
        r34 = null;

        z10 = 0;

        if z3 != 0 goto label21;

     label20:
        r37 = new java.lang.AssertionError;

        specialinvoke r37.<java.lang.AssertionError: void <init>()>();

        throw r37;

     label21:
        z4 = r0.<com.android.org.chromium.media.MediaDrmBridge: boolean mSingleSessionMode>;

     label22:
        r34 = null;

        z10 = 0;

        if z4 == 0 goto label29;

     label23:
        r34 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.nio.ByteBuffer mMediaCryptoSession>;

        $r22 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionMimeTypes>;

        r6 = virtualinvoke $r22.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r34);

     label24:
        z10 = 0;

        if r6 == null goto label35;

     label25:
        $r26 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionMimeTypes>;

        $r25 = virtualinvoke $r26.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r34);

        $r24 = (java.lang.String) $r25;

        z5 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>(r2);

     label26:
        z10 = 0;

        if z5 != 0 goto label35;

     label27:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaDrmBridge", "Only one mime type is supported in single session mode.");

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void onSessionError(int)>(i0);

     label28:
        return;

     label29:
        r34 = specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: java.nio.ByteBuffer openSession()>();

     label30:
        if r34 != null goto label33;

     label31:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaDrmBridge", "Cannot open session in createSession().");

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void onSessionError(int)>(i0);

     label32:
        return;

     label33:
        z10 = 1;

     label34:
        $z7 = <com.android.org.chromium.media.MediaDrmBridge: boolean $assertionsDisabled>;

        if $z7 != 0 goto label35;

        $r20 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionIds>;

        $z8 = virtualinvoke $r20.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r34);

        if $z8 == 0 goto label35;

        r38 = new java.lang.AssertionError;

        specialinvoke r38.<java.lang.AssertionError: void <init>()>();

        throw r38;

     label35:
        r7 = specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm$KeyRequest getKeyRequest(java.nio.ByteBuffer,byte[],java.lang.String)>(r34, r1, r2);

     label36:
        if r7 != null goto label40;

        if z10 == 0 goto label38;

     label37:
        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void closeSession(java.nio.ByteBuffer)>(r34);

     label38:
        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void onSessionError(int)>(i0);

     label39:
        return;

     label40:
        $r10 = specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: java.lang.String getWebSessionId(java.nio.ByteBuffer)>(r34);

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void onSessionCreated(int,java.lang.String)>(i0, $r10);

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void onSessionMessage(int,android.media.MediaDrm$KeyRequest)>(i0, r7);

     label41:
        if z10 == 0 goto label43;

     label42:
        r39 = new java.lang.StringBuilder;

        specialinvoke r39.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("createSession(): Session ");

        $r14 = specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: java.lang.String getWebSessionId(java.nio.ByteBuffer)>(r34);

        $r18 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r16 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") created.");

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaDrmBridge", $r21);

     label43:
        $r9 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionIds>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r34, $r11);

        $r12 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionMimeTypes>;

        virtualinvoke $r12.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r34, r2);

     label44:
        return;

        catch android.media.NotProvisionedException from label03 to label04 with label09;
        catch android.media.NotProvisionedException from label05 to label06 with label09;
        catch android.media.NotProvisionedException from label07 to label08 with label09;
        catch android.media.NotProvisionedException from label11 to label12 with label09;
        catch android.media.NotProvisionedException from label13 to label14 with label09;
        catch android.media.NotProvisionedException from label15 to label16 with label09;
        catch android.media.NotProvisionedException from label16 to label17 with label09;
        catch android.media.NotProvisionedException from label18 to label19 with label09;
        catch android.media.NotProvisionedException from label20 to label21 with label09;
        catch android.media.NotProvisionedException from label21 to label22 with label09;
        catch android.media.NotProvisionedException from label23 to label24 with label09;
        catch android.media.NotProvisionedException from label25 to label26 with label09;
        catch android.media.NotProvisionedException from label27 to label28 with label09;
        catch android.media.NotProvisionedException from label29 to label30 with label09;
        catch android.media.NotProvisionedException from label31 to label32 with label09;
        catch android.media.NotProvisionedException from label34 to label35 with label09;
        catch android.media.NotProvisionedException from label35 to label36 with label09;
        catch android.media.NotProvisionedException from label37 to label38 with label09;
        catch android.media.NotProvisionedException from label38 to label39 with label09;
        catch android.media.NotProvisionedException from label40 to label41 with label09;
        catch android.media.NotProvisionedException from label42 to label43 with label09;
        catch android.media.NotProvisionedException from label43 to label44 with label09;
    }

    private android.media.MediaDrm$KeyRequest getKeyRequest(java.nio.ByteBuffer, byte[], java.lang.String) throws android.media.NotProvisionedException
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        java.nio.ByteBuffer r1;
        byte[] r2, $r9;
        java.lang.String r3, r6, $r13;
        java.util.HashMap r4, $r7;
        android.media.MediaDrm$KeyRequest r5;
        boolean $z0, $z1, $z2, $z3;
        android.media.MediaDrm $r8, $r17;
        java.lang.StringBuilder $r10, $r11, $r12, $r14;
        android.media.MediaCrypto $r15;
        java.lang.AssertionError $r16, $r18, $r19;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        r1 := @parameter0: java.nio.ByteBuffer;

        r2 := @parameter1: byte[];

        r3 := @parameter2: java.lang.String;

        $z0 = <com.android.org.chromium.media.MediaDrmBridge: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r17 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        if $r17 != null goto label1;

        $r19 = new java.lang.AssertionError;

        specialinvoke $r19.<java.lang.AssertionError: void <init>()>();

        throw $r19;

     label1:
        $z1 = <com.android.org.chromium.media.MediaDrmBridge: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $r15 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaCrypto mMediaCrypto>;

        if $r15 != null goto label2;

        $r18 = new java.lang.AssertionError;

        specialinvoke $r18.<java.lang.AssertionError: void <init>()>();

        throw $r18;

     label2:
        $z2 = <com.android.org.chromium.media.MediaDrmBridge: boolean $assertionsDisabled>;

        if $z2 != 0 goto label3;

        $z3 = r0.<com.android.org.chromium.media.MediaDrmBridge: boolean mProvisioningPending>;

        if $z3 == 0 goto label3;

        $r16 = new java.lang.AssertionError;

        specialinvoke $r16.<java.lang.AssertionError: void <init>()>();

        throw $r16;

     label3:
        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r4 = $r7;

        $r8 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        $r9 = virtualinvoke r1.<java.nio.ByteBuffer: byte[] array()>();

        r5 = virtualinvoke $r8.<android.media.MediaDrm: android.media.MediaDrm$KeyRequest getKeyRequest(byte[],byte[],java.lang.String,int,java.util.HashMap)>($r9, r2, r3, 1, r4);

        if r5 == null goto label5;

        r6 = "successed";

     label4:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getKeyRequest ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaDrmBridge", $r13);

        return r5;

     label5:
        r6 = "failed";

        goto label4;
    }

    private android.media.MediaCrypto getMediaCrypto()
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        android.media.MediaCrypto $r1;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        $r1 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaCrypto mMediaCrypto>;

        return $r1;
    }

    private java.lang.String getSecurityLevel()
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        android.media.MediaDrm $r1, $r2;
        java.lang.String $r3;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        $r1 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        if $r1 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaDrmBridge", "getSecurityLevel() called when MediaDrm is null.");

        return null;

     label1:
        $r2 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        $r3 = virtualinvoke $r2.<android.media.MediaDrm: java.lang.String getPropertyString(java.lang.String)>("securityLevel");

        return $r3;
    }

    private java.nio.ByteBuffer getSession(int)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        int i0, $i1;
        java.util.Iterator r1;
        java.nio.ByteBuffer r2;
        java.util.HashMap $r3, $r6;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5, $r7;
        java.lang.Integer $r8;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionIds>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.util.Set keySet()>();

        r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.nio.ByteBuffer) $r5;

        $r6 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionIds>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        $r8 = (java.lang.Integer) $r7;

        $i1 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        if $i1 != i0 goto label1;

        return r2;

     label2:
        return null;
    }

    private static java.util.UUID getUUIDFromBytes(byte[])
    {
        byte[] r0;
        long l0, l1, $l7, $l8, $l11, $l12;
        int i2, i3, $i4;
        java.util.UUID $r1;
        byte $b5, $b9;
        short $s6, $s10;

        r0 := @parameter0: byte[];

        $i4 = lengthof r0;

        if $i4 == 16 goto label1;

        return null;

     label1:
        l0 = 0L;

        l1 = 0L;

        i2 = 0;

     label2:
        if i2 >= 8 goto label3;

        $l12 = l0 << 8;

        $b9 = r0[i2];

        $s10 = 255 & $b9;

        $l11 = (long) $s10;

        l0 = $l12 | $l11;

        i2 = i2 + 1;

        goto label2;

     label3:
        i3 = 8;

     label4:
        if i3 >= 16 goto label5;

        $l8 = l1 << 8;

        $b5 = r0[i3];

        $s6 = 255 & $b5;

        $l7 = (long) $s6;

        l1 = $l8 | $l7;

        i3 = i3 + 1;

        goto label4;

     label5:
        $r1 = new java.util.UUID;

        specialinvoke $r1.<java.util.UUID: void <init>(long,long)>(l0, l1);

        return $r1;
    }

    private java.lang.String getWebSessionId(java.nio.ByteBuffer)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        java.nio.ByteBuffer r1;
        java.lang.String r2, $r5;
        java.lang.NullPointerException r3, $r7;
        java.io.UnsupportedEncodingException r4, $r8;
        byte[] $r6;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        r1 := @parameter0: java.nio.ByteBuffer;

     label1:
        $r5 = new java.lang.String;

        $r6 = virtualinvoke r1.<java.nio.ByteBuffer: byte[] array()>();

        specialinvoke $r5.<java.lang.String: void <init>(byte[],java.lang.String)>($r6, "UTF-8");

        r2 = $r5;

     label2:
        return r2;

     label3:
        $r8 := @caughtexception;

        r4 = $r8;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaDrmBridge", "getWebSessionId failed", r4);

        return null;

     label4:
        $r7 := @caughtexception;

        r3 = $r7;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaDrmBridge", "getWebSessionId failed", r3);

        return null;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    private static boolean isCryptoSchemeSupported(byte[], java.lang.String)
    {
        byte[] r0;
        java.lang.String r1;
        java.util.UUID $r2;
        boolean $z0;

        r0 := @parameter0: byte[];

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.android.org.chromium.media.MediaDrmBridge: java.util.UUID getUUIDFromBytes(byte[])>(r0);

        $z0 = staticinvoke <android.media.MediaDrm: boolean isCryptoSchemeSupported(java.util.UUID)>($r2);

        return $z0;
    }

    private native void nativeOnMediaCryptoReady(long);

    private native void nativeOnResetDeviceCredentialsCompleted(long, boolean);

    private native void nativeOnSessionClosed(long, int);

    private native void nativeOnSessionCreated(long, int, java.lang.String);

    private native void nativeOnSessionError(long, int);

    private native void nativeOnSessionMessage(long, int, byte[], java.lang.String);

    private native void nativeOnSessionReady(long, int);

    private void onProvisionResponse(byte[])
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        byte[] r1;
        boolean z0, $z1, $z2, $z3;
        android.media.MediaDrm $r2;
        long $l1;
        java.lang.AssertionError $r3;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        r1 := @parameter0: byte[];

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaDrmBridge", "onProvisionResponse()");

        $z1 = <com.android.org.chromium.media.MediaDrmBridge: boolean $assertionsDisabled>;

        if $z1 != 0 goto label1;

        $z3 = r0.<com.android.org.chromium.media.MediaDrmBridge: boolean mProvisioningPending>;

        if $z3 != 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        r0.<com.android.org.chromium.media.MediaDrmBridge: boolean mProvisioningPending> = 0;

        $r2 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        if $r2 != null goto label3;

     label2:
        return;

     label3:
        z0 = virtualinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: boolean provideProvisionResponse(byte[])>(r1);

        $z2 = r0.<com.android.org.chromium.media.MediaDrmBridge: boolean mResetDeviceCredentialsPending>;

        if $z2 == 0 goto label4;

        $l1 = r0.<com.android.org.chromium.media.MediaDrmBridge: long mNativeMediaDrmBridge>;

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void nativeOnResetDeviceCredentialsCompleted(long,boolean)>($l1, z0);

        r0.<com.android.org.chromium.media.MediaDrmBridge: boolean mResetDeviceCredentialsPending> = 0;

     label4:
        if z0 == 0 goto label2;

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void resumePendingOperations()>();

        return;
    }

    private void onSessionClosed(int)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        int i0;
        com.android.org.chromium.media.MediaDrmBridge$5 $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.os.Handler mHandler>;

        $r1 = new com.android.org.chromium.media.MediaDrmBridge$5;

        specialinvoke $r1.<com.android.org.chromium.media.MediaDrmBridge$5: void <init>(com.android.org.chromium.media.MediaDrmBridge,int)>(r0, i0);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    private void onSessionCreated(int, java.lang.String)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        int i0;
        java.lang.String r1;
        com.android.org.chromium.media.MediaDrmBridge$2 $r2;
        android.os.Handler $r3;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.os.Handler mHandler>;

        $r2 = new com.android.org.chromium.media.MediaDrmBridge$2;

        specialinvoke $r2.<com.android.org.chromium.media.MediaDrmBridge$2: void <init>(com.android.org.chromium.media.MediaDrmBridge,int,java.lang.String)>(r0, i0, r1);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    private void onSessionError(int)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        int i0;
        com.android.org.chromium.media.MediaDrmBridge$6 $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.os.Handler mHandler>;

        $r1 = new com.android.org.chromium.media.MediaDrmBridge$6;

        specialinvoke $r1.<com.android.org.chromium.media.MediaDrmBridge$6: void <init>(com.android.org.chromium.media.MediaDrmBridge,int)>(r0, i0);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    private void onSessionMessage(int, android.media.MediaDrm$KeyRequest)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        int i0;
        android.media.MediaDrm$KeyRequest r1;
        com.android.org.chromium.media.MediaDrmBridge$3 $r2;
        android.os.Handler $r3;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.MediaDrm$KeyRequest;

        $r3 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.os.Handler mHandler>;

        $r2 = new com.android.org.chromium.media.MediaDrmBridge$3;

        specialinvoke $r2.<com.android.org.chromium.media.MediaDrmBridge$3: void <init>(com.android.org.chromium.media.MediaDrmBridge,int,android.media.MediaDrm$KeyRequest)>(r0, i0, r1);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    private void onSessionReady(int)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        int i0;
        com.android.org.chromium.media.MediaDrmBridge$4 $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.os.Handler mHandler>;

        $r1 = new com.android.org.chromium.media.MediaDrmBridge$4;

        specialinvoke $r1.<com.android.org.chromium.media.MediaDrmBridge$4: void <init>(com.android.org.chromium.media.MediaDrmBridge,int)>(r0, i0);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    private java.nio.ByteBuffer openSession() throws android.media.NotProvisionedException
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        java.lang.RuntimeException r1, $r9;
        java.nio.ByteBuffer r2;
        boolean $z0;
        android.media.MediaDrm $r3, $r7;
        byte[] $r4, $r6;
        java.lang.Object $r5;
        java.lang.AssertionError $r8;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        $z0 = <com.android.org.chromium.media.MediaDrmBridge: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r7 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        if $r7 != null goto label1;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label1:
        $r3 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        $r4 = virtualinvoke $r3.<android.media.MediaDrm: byte[] openSession()>();

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Object clone()>();

        $r6 = (byte[]) $r5;

        r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r6);

     label2:
        return r2;

     label3:
        $r9 := @caughtexception;

        r1 = $r9;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaDrmBridge", "Cannot open a new session", r1);

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void release()>();

        return null;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    private void processPendingCreateSessionData()
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        com.android.org.chromium.media.MediaDrmBridge$PendingCreateSessionData r1;
        boolean $z0, $z1, $z2;
        android.media.MediaDrm $r2, $r8;
        java.util.ArrayDeque $r3, $r4;
        java.lang.Object $r5;
        int $i1;
        byte[] $r6;
        java.lang.String $r7;
        java.lang.AssertionError $r9;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaDrmBridge", "processPendingCreateSessionData()");

        $z0 = <com.android.org.chromium.media.MediaDrmBridge: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r8 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        if $r8 != null goto label1;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label1:
        $r2 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        if $r2 == null goto label2;

        $z1 = r0.<com.android.org.chromium.media.MediaDrmBridge: boolean mProvisioningPending>;

        if $z1 != 0 goto label2;

        $r3 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.ArrayDeque mPendingCreateSessionDataQueue>;

        $z2 = virtualinvoke $r3.<java.util.ArrayDeque: boolean isEmpty()>();

        if $z2 != 0 goto label2;

        $r4 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.ArrayDeque mPendingCreateSessionDataQueue>;

        $r5 = virtualinvoke $r4.<java.util.ArrayDeque: java.lang.Object poll()>();

        r1 = (com.android.org.chromium.media.MediaDrmBridge$PendingCreateSessionData) $r5;

        $i1 = staticinvoke <com.android.org.chromium.media.MediaDrmBridge$PendingCreateSessionData: int access$200(com.android.org.chromium.media.MediaDrmBridge$PendingCreateSessionData)>(r1);

        $r6 = staticinvoke <com.android.org.chromium.media.MediaDrmBridge$PendingCreateSessionData: byte[] access$300(com.android.org.chromium.media.MediaDrmBridge$PendingCreateSessionData)>(r1);

        $r7 = staticinvoke <com.android.org.chromium.media.MediaDrmBridge$PendingCreateSessionData: java.lang.String access$400(com.android.org.chromium.media.MediaDrmBridge$PendingCreateSessionData)>(r1);

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void createSession(int,byte[],java.lang.String)>($i1, $r6, $r7);

        goto label1;

     label2:
        return;
    }

    private void release()
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        java.util.Iterator r1;
        java.util.ArrayDeque $r2;
        java.util.HashMap $r3, $r5, $r6;
        java.util.Set $r4;
        boolean $z0;
        android.media.MediaCrypto $r7, $r10;
        android.media.MediaDrm $r8, $r9;
        java.lang.Object $r11;
        java.nio.ByteBuffer $r12;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        $r2 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.ArrayDeque mPendingCreateSessionDataQueue>;

        virtualinvoke $r2.<java.util.ArrayDeque: void clear()>();

        r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.ArrayDeque mPendingCreateSessionDataQueue> = null;

        $r3 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionIds>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.util.Set keySet()>();

        r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r11 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (java.nio.ByteBuffer) $r11;

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void closeSession(java.nio.ByteBuffer)>($r12);

        goto label1;

     label2:
        $r5 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionIds>;

        virtualinvoke $r5.<java.util.HashMap: void clear()>();

        r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionIds> = null;

        $r6 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionMimeTypes>;

        virtualinvoke $r6.<java.util.HashMap: void clear()>();

        r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionMimeTypes> = null;

        r0.<com.android.org.chromium.media.MediaDrmBridge: java.nio.ByteBuffer mMediaCryptoSession> = null;

        $r7 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaCrypto mMediaCrypto>;

        if $r7 == null goto label3;

        $r10 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaCrypto mMediaCrypto>;

        virtualinvoke $r10.<android.media.MediaCrypto: void release()>();

        r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaCrypto mMediaCrypto> = null;

     label3:
        $r8 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        if $r8 == null goto label4;

        $r9 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        virtualinvoke $r9.<android.media.MediaDrm: void release()>();

        r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm> = null;

     label4:
        return;
    }

    private void releaseSession(int)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        int i0;
        java.nio.ByteBuffer r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r9, $r10, $r11, $r12;
        java.lang.String $r5, $r13;
        android.media.MediaDrm $r6, $r7;
        byte[] $r8;
        boolean $z0;
        java.util.HashMap $r15;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        i0 := @parameter0: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("releaseSession(): ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaDrmBridge", $r5);

        $r6 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        if $r6 != null goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaDrmBridge", "releaseSession() called when MediaDrm is null.");

     label1:
        return;

     label2:
        r1 = specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: java.nio.ByteBuffer getSession(int)>(i0);

        if r1 != null goto label3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaDrmBridge", "Invalid sessionId in releaseSession.");

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void onSessionError(int)>(i0);

        return;

     label3:
        $r7 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        $r8 = virtualinvoke r1.<java.nio.ByteBuffer: byte[] array()>();

        virtualinvoke $r7.<android.media.MediaDrm: void removeKeys(byte[])>($r8);

        $z0 = r0.<com.android.org.chromium.media.MediaDrmBridge: boolean mSingleSessionMode>;

        if $z0 != 0 goto label1;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Session ");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("closed.");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaDrmBridge", $r13);

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void closeSession(java.nio.ByteBuffer)>(r1);

        $r15 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionIds>;

        virtualinvoke $r15.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void onSessionClosed(int)>(i0);

        return;
    }

    private void resetDeviceCredentials()
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        android.media.MediaDrm$ProvisionRequest r1;
        com.android.org.chromium.media.MediaDrmBridge$PostRequestTask r2, $r5;
        java.lang.String[] r3;
        android.media.MediaDrm $r4;
        byte[] $r6;
        java.lang.String $r7;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        r0.<com.android.org.chromium.media.MediaDrmBridge: boolean mResetDeviceCredentialsPending> = 1;

        $r4 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        r1 = virtualinvoke $r4.<android.media.MediaDrm: android.media.MediaDrm$ProvisionRequest getProvisionRequest()>();

        $r5 = new com.android.org.chromium.media.MediaDrmBridge$PostRequestTask;

        $r6 = virtualinvoke r1.<android.media.MediaDrm$ProvisionRequest: byte[] getData()>();

        specialinvoke $r5.<com.android.org.chromium.media.MediaDrmBridge$PostRequestTask: void <init>(com.android.org.chromium.media.MediaDrmBridge,byte[])>(r0, $r6);

        r2 = $r5;

        r3 = newarray (java.lang.String)[1];

        $r7 = virtualinvoke r1.<android.media.MediaDrm$ProvisionRequest: java.lang.String getDefaultUrl()>();

        r3[0] = $r7;

        virtualinvoke r2.<com.android.org.chromium.media.MediaDrmBridge$PostRequestTask: android.os.AsyncTask execute(java.lang.Object[])>(r3);

        return;
    }

    private void resumePendingOperations()
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        com.android.org.chromium.media.MediaDrmBridge$1 $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        $r2 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.os.Handler mHandler>;

        $r1 = new com.android.org.chromium.media.MediaDrmBridge$1;

        specialinvoke $r1.<com.android.org.chromium.media.MediaDrmBridge$1: void <init>(com.android.org.chromium.media.MediaDrmBridge)>(r0);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    private void savePendingCreateSessionData(int, byte[], java.lang.String)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        int i0;
        byte[] r1;
        java.lang.String r2;
        com.android.org.chromium.media.MediaDrmBridge$PendingCreateSessionData $r3;
        java.util.ArrayDeque $r4;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        r2 := @parameter2: java.lang.String;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaDrmBridge", "savePendingCreateSessionData()");

        $r4 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.ArrayDeque mPendingCreateSessionDataQueue>;

        $r3 = new com.android.org.chromium.media.MediaDrmBridge$PendingCreateSessionData;

        specialinvoke $r3.<com.android.org.chromium.media.MediaDrmBridge$PendingCreateSessionData: void <init>(int,byte[],java.lang.String,com.android.org.chromium.media.MediaDrmBridge$1)>(i0, r1, r2, null);

        virtualinvoke $r4.<java.util.ArrayDeque: boolean offer(java.lang.Object)>($r3);

        return;
    }

    private boolean sessionExists(java.nio.ByteBuffer)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        java.nio.ByteBuffer r1, $r2, $r3, $r5, $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.util.HashMap $r4, $r7, $r9;
        java.lang.AssertionError $r8, $r10;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        r1 := @parameter0: java.nio.ByteBuffer;

        $r2 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.nio.ByteBuffer mMediaCryptoSession>;

        if $r2 != null goto label3;

        $z6 = <com.android.org.chromium.media.MediaDrmBridge: boolean $assertionsDisabled>;

        if $z6 != 0 goto label1;

        $r9 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionIds>;

        $z7 = virtualinvoke $r9.<java.util.HashMap: boolean isEmpty()>();

        if $z7 != 0 goto label1;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label1:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaDrmBridge", "Session doesn\'t exist because media crypto session is not created.");

     label2:
        return 0;

     label3:
        $z0 = <com.android.org.chromium.media.MediaDrmBridge: boolean $assertionsDisabled>;

        if $z0 != 0 goto label4;

        $r7 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionIds>;

        $r6 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.nio.ByteBuffer mMediaCryptoSession>;

        $z5 = virtualinvoke $r7.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r6);

        if $z5 != 0 goto label4;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label4:
        $z1 = r0.<com.android.org.chromium.media.MediaDrmBridge: boolean mSingleSessionMode>;

        if $z1 == 0 goto label5;

        $r5 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.nio.ByteBuffer mMediaCryptoSession>;

        $z4 = virtualinvoke $r5.<java.nio.ByteBuffer: boolean equals(java.lang.Object)>(r1);

        return $z4;

     label5:
        $r3 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.nio.ByteBuffer mMediaCryptoSession>;

        $z2 = virtualinvoke r1.<java.nio.ByteBuffer: boolean equals(java.lang.Object)>($r3);

        if $z2 != 0 goto label2;

        $r4 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionIds>;

        $z3 = virtualinvoke $r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z3 == 0 goto label2;

        return 1;
    }

    private void startProvisioning()
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        android.media.MediaDrm$ProvisionRequest r1;
        com.android.org.chromium.media.MediaDrmBridge$PostRequestTask r2, $r5;
        java.lang.String[] r3;
        boolean $z0, $z1, $z2;
        android.media.MediaDrm $r4, $r9;
        byte[] $r6;
        java.lang.String $r7;
        java.lang.AssertionError $r10, $r11;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaDrmBridge", "startProvisioning");

        $z0 = <com.android.org.chromium.media.MediaDrmBridge: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r9 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        if $r9 != null goto label1;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label1:
        $z1 = <com.android.org.chromium.media.MediaDrmBridge: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $z2 = r0.<com.android.org.chromium.media.MediaDrmBridge: boolean mProvisioningPending>;

        if $z2 == 0 goto label2;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label2:
        r0.<com.android.org.chromium.media.MediaDrmBridge: boolean mProvisioningPending> = 1;

        $r4 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        r1 = virtualinvoke $r4.<android.media.MediaDrm: android.media.MediaDrm$ProvisionRequest getProvisionRequest()>();

        $r5 = new com.android.org.chromium.media.MediaDrmBridge$PostRequestTask;

        $r6 = virtualinvoke r1.<android.media.MediaDrm$ProvisionRequest: byte[] getData()>();

        specialinvoke $r5.<com.android.org.chromium.media.MediaDrmBridge$PostRequestTask: void <init>(com.android.org.chromium.media.MediaDrmBridge,byte[])>(r0, $r6);

        r2 = $r5;

        r3 = newarray (java.lang.String)[1];

        $r7 = virtualinvoke r1.<android.media.MediaDrm$ProvisionRequest: java.lang.String getDefaultUrl()>();

        r3[0] = $r7;

        virtualinvoke r2.<com.android.org.chromium.media.MediaDrmBridge$PostRequestTask: android.os.AsyncTask execute(java.lang.Object[])>(r3);

        return;
    }

    private void updateSession(int, byte[])
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        int i0;
        byte[] r1, $r13;
        java.nio.ByteBuffer r2;
        android.media.DeniedByServerException r3, $r19;
        java.lang.IllegalStateException r4, $r20;
        android.media.NotProvisionedException r5, $r18;
        java.lang.StringBuilder $r7, $r8, $r15, $r16, r21, r22;
        java.lang.String $r9, $r17;
        android.media.MediaDrm $r10, $r11;
        boolean $z0;
        java.lang.Throwable r23, r24;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateSession(): ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaDrmBridge", $r9);

        $r10 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        if $r10 != null goto label01;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaDrmBridge", "updateSession() called when MediaDrm is null.");

        return;

     label01:
        r2 = specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: java.nio.ByteBuffer getSession(int)>(i0);

        $z0 = specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: boolean sessionExists(java.nio.ByteBuffer)>(r2);

        if $z0 != 0 goto label02;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaDrmBridge", "Invalid session in updateSession.");

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void onSessionError(int)>(i0);

        return;

     label02:
        $r11 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        $r13 = virtualinvoke r2.<java.nio.ByteBuffer: byte[] array()>();

        virtualinvoke $r11.<android.media.MediaDrm: byte[] provideKeyResponse(byte[],byte[])>($r13, r1);

     label03:
        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void onSessionReady(int)>(i0);

        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Key successfully added for session ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaDrmBridge", $r17);

     label04:
        return;

     label05:
        $r18 := @caughtexception;

        r5 = $r18;

        r23 = (java.lang.Throwable) r5;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaDrmBridge", "failed to provide key response", r23);

     label06:
        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void onSessionError(int)>(i0);

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void release()>();

        return;

     label07:
        $r20 := @caughtexception;

        r4 = $r20;

     label08:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaDrmBridge", "Exception intentionally caught when calling provideKeyResponse()", r4);

     label09:
        goto label03;

     label10:
        $r19 := @caughtexception;

        r3 = $r19;

        r24 = (java.lang.Throwable) r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaDrmBridge", "failed to provide key response", r24);

        goto label06;

        catch java.lang.IllegalStateException from label02 to label03 with label07;
        catch android.media.NotProvisionedException from label02 to label03 with label05;
        catch android.media.DeniedByServerException from label02 to label03 with label10;
        catch android.media.NotProvisionedException from label03 to label04 with label05;
        catch android.media.DeniedByServerException from label03 to label04 with label10;
        catch android.media.NotProvisionedException from label08 to label09 with label05;
        catch android.media.DeniedByServerException from label08 to label09 with label10;
    }

    boolean provideProvisionResponse(byte[])
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        byte[] r1;
        java.lang.IllegalStateException r2, $r6;
        android.media.DeniedByServerException r3, $r5;
        int $i1;
        android.media.MediaDrm $r4;
        java.lang.Throwable r7;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        r1 := @parameter0: byte[];

        if r1 == null goto label1;

        $i1 = lengthof r1;

        if $i1 != 0 goto label2;

     label1:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaDrmBridge", "Invalid provision response.");

        return 0;

     label2:
        $r4 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        virtualinvoke $r4.<android.media.MediaDrm: void provideProvisionResponse(byte[])>(r1);

     label3:
        return 1;

     label4:
        $r5 := @caughtexception;

        r3 = $r5;

        r7 = (java.lang.Throwable) r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaDrmBridge", "failed to provide provision response", r7);

        return 0;

     label5:
        $r6 := @caughtexception;

        r2 = $r6;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaDrmBridge", "failed to provide provision response", r2);

        return 0;

        catch android.media.DeniedByServerException from label2 to label3 with label4;
        catch java.lang.IllegalStateException from label2 to label3 with label5;
    }
}
