class com.android.org.chromium.media.AudioManagerAndroid extends java.lang.Object
{
    private static final java.lang.String[] DEVICE_NAMES;
    private static final java.lang.Integer[] VALID_DEVICES;
    private java.lang.Integer mAudioDeviceState;
    private boolean[] mAudioDevices;
    private final android.media.AudioManager mAudioManager;
    private final android.content.ContentResolver mContentResolver;
    private final android.content.Context mContext;
    private boolean mHasBluetoothPermission;
    private boolean mIsInitialized;
    private final java.lang.Object mLock;
    private final long mNativeAudioManagerAndroid;
    private boolean mSavedIsMicrophoneMute;
    private boolean mSavedIsSpeakerphoneOn;
    private com.android.org.chromium.media.AudioManagerAndroid$SettingsObserver mSettingsObserver;
    private final java.lang.Object mSettingsObserverLock;
    private com.android.org.chromium.media.AudioManagerAndroid$SettingsObserverThread mSettingsObserverThread;
    private android.content.BroadcastReceiver mWiredHeadsetReceiver;

    static void <clinit>()
    {
        java.lang.Integer[] r0;
        java.lang.String[] $r1;
        java.lang.Integer $r2, $r3, $r4, $r5;

        $r1 = newarray (java.lang.String)[4];

        $r1[0] = "Speakerphone";

        $r1[1] = "Wired headset";

        $r1[2] = "Headset earpiece";

        $r1[3] = "Bluetooth headset";

        <com.android.org.chromium.media.AudioManagerAndroid: java.lang.String[] DEVICE_NAMES> = $r1;

        r0 = newarray (java.lang.Integer)[4];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        r0[0] = $r2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        r0[1] = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        r0[2] = $r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        r0[3] = $r5;

        <com.android.org.chromium.media.AudioManagerAndroid: java.lang.Integer[] VALID_DEVICES> = r0;

        return;
    }

    private void <init>(android.content.Context, long)
    {
        com.android.org.chromium.media.AudioManagerAndroid r0;
        android.content.Context r1, $r6, $r9;
        long l0;
        java.lang.Integer $r2;
        java.lang.Object $r3, $r5, $r7;
        boolean[] $r4;
        android.media.AudioManager $r8;
        android.content.ContentResolver $r10;

        r0 := @this: com.android.org.chromium.media.AudioManagerAndroid;

        r1 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.org.chromium.media.AudioManagerAndroid: boolean mHasBluetoothPermission> = 0;

        r0.<com.android.org.chromium.media.AudioManagerAndroid: boolean mIsInitialized> = 0;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        r0.<com.android.org.chromium.media.AudioManagerAndroid: java.lang.Integer mAudioDeviceState> = $r2;

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<com.android.org.chromium.media.AudioManagerAndroid: java.lang.Object mLock> = $r3;

        $r4 = newarray (boolean)[4];

        r0.<com.android.org.chromium.media.AudioManagerAndroid: boolean[] mAudioDevices> = $r4;

        r0.<com.android.org.chromium.media.AudioManagerAndroid: com.android.org.chromium.media.AudioManagerAndroid$SettingsObserver mSettingsObserver> = null;

        r0.<com.android.org.chromium.media.AudioManagerAndroid: com.android.org.chromium.media.AudioManagerAndroid$SettingsObserverThread mSettingsObserverThread> = null;

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        r0.<com.android.org.chromium.media.AudioManagerAndroid: java.lang.Object mSettingsObserverLock> = $r5;

        r0.<com.android.org.chromium.media.AudioManagerAndroid: android.content.Context mContext> = r1;

        r0.<com.android.org.chromium.media.AudioManagerAndroid: long mNativeAudioManagerAndroid> = l0;

        $r6 = r0.<com.android.org.chromium.media.AudioManagerAndroid: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("audio");

        $r8 = (android.media.AudioManager) $r7;

        r0.<com.android.org.chromium.media.AudioManagerAndroid: android.media.AudioManager mAudioManager> = $r8;

        $r9 = r0.<com.android.org.chromium.media.AudioManagerAndroid: android.content.Context mContext>;

        $r10 = virtualinvoke $r9.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r0.<com.android.org.chromium.media.AudioManagerAndroid: android.content.ContentResolver mContentResolver> = $r10;

        return;
    }

    static void access$100(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <com.android.org.chromium.media.AudioManagerAndroid: void logd(java.lang.String)>(r0);

        return;
    }

    static long access$1000(com.android.org.chromium.media.AudioManagerAndroid)
    {
        com.android.org.chromium.media.AudioManagerAndroid r0;
        long $l0;

        r0 := @parameter0: com.android.org.chromium.media.AudioManagerAndroid;

        $l0 = r0.<com.android.org.chromium.media.AudioManagerAndroid: long mNativeAudioManagerAndroid>;

        return $l0;
    }

    static void access$1100(com.android.org.chromium.media.AudioManagerAndroid, long, boolean)
    {
        com.android.org.chromium.media.AudioManagerAndroid r0;
        long l0;
        boolean z0;

        r0 := @parameter0: com.android.org.chromium.media.AudioManagerAndroid;

        l0 := @parameter1: long;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.org.chromium.media.AudioManagerAndroid: void nativeSetMute(long,boolean)>(l0, z0);

        return;
    }

    static java.lang.Object access$1200(com.android.org.chromium.media.AudioManagerAndroid)
    {
        com.android.org.chromium.media.AudioManagerAndroid r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.org.chromium.media.AudioManagerAndroid;

        $r1 = r0.<com.android.org.chromium.media.AudioManagerAndroid: java.lang.Object mSettingsObserverLock>;

        return $r1;
    }

    static com.android.org.chromium.media.AudioManagerAndroid$SettingsObserver access$1302(com.android.org.chromium.media.AudioManagerAndroid, com.android.org.chromium.media.AudioManagerAndroid$SettingsObserver)
    {
        com.android.org.chromium.media.AudioManagerAndroid r0;
        com.android.org.chromium.media.AudioManagerAndroid$SettingsObserver r1;

        r0 := @parameter0: com.android.org.chromium.media.AudioManagerAndroid;

        r1 := @parameter1: com.android.org.chromium.media.AudioManagerAndroid$SettingsObserver;

        r0.<com.android.org.chromium.media.AudioManagerAndroid: com.android.org.chromium.media.AudioManagerAndroid$SettingsObserver mSettingsObserver> = r1;

        return r1;
    }

    static java.lang.Object access$200(com.android.org.chromium.media.AudioManagerAndroid)
    {
        com.android.org.chromium.media.AudioManagerAndroid r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.org.chromium.media.AudioManagerAndroid;

        $r1 = r0.<com.android.org.chromium.media.AudioManagerAndroid: java.lang.Object mLock>;

        return $r1;
    }

    static boolean[] access$300(com.android.org.chromium.media.AudioManagerAndroid)
    {
        com.android.org.chromium.media.AudioManagerAndroid r0;
        boolean[] $r1;

        r0 := @parameter0: com.android.org.chromium.media.AudioManagerAndroid;

        $r1 = r0.<com.android.org.chromium.media.AudioManagerAndroid: boolean[] mAudioDevices>;

        return $r1;
    }

    static boolean access$400(com.android.org.chromium.media.AudioManagerAndroid)
    {
        com.android.org.chromium.media.AudioManagerAndroid r0;
        boolean $z0;

        r0 := @parameter0: com.android.org.chromium.media.AudioManagerAndroid;

        $z0 = specialinvoke r0.<com.android.org.chromium.media.AudioManagerAndroid: boolean hasEarpiece()>();

        return $z0;
    }

    static java.lang.Integer access$500(com.android.org.chromium.media.AudioManagerAndroid)
    {
        com.android.org.chromium.media.AudioManagerAndroid r0;
        java.lang.Integer $r1;

        r0 := @parameter0: com.android.org.chromium.media.AudioManagerAndroid;

        $r1 = r0.<com.android.org.chromium.media.AudioManagerAndroid: java.lang.Integer mAudioDeviceState>;

        return $r1;
    }

    static void access$600(com.android.org.chromium.media.AudioManagerAndroid)
    {
        com.android.org.chromium.media.AudioManagerAndroid r0;

        r0 := @parameter0: com.android.org.chromium.media.AudioManagerAndroid;

        specialinvoke r0.<com.android.org.chromium.media.AudioManagerAndroid: void reportUpdate()>();

        return;
    }

    static void access$700(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <com.android.org.chromium.media.AudioManagerAndroid: void loge(java.lang.String)>(r0);

        return;
    }

    static android.content.ContentResolver access$800(com.android.org.chromium.media.AudioManagerAndroid)
    {
        com.android.org.chromium.media.AudioManagerAndroid r0;
        android.content.ContentResolver $r1;

        r0 := @parameter0: com.android.org.chromium.media.AudioManagerAndroid;

        $r1 = r0.<com.android.org.chromium.media.AudioManagerAndroid: android.content.ContentResolver mContentResolver>;

        return $r1;
    }

    static android.media.AudioManager access$900(com.android.org.chromium.media.AudioManagerAndroid)
    {
        com.android.org.chromium.media.AudioManagerAndroid r0;
        android.media.AudioManager $r1;

        r0 := @parameter0: com.android.org.chromium.media.AudioManagerAndroid;

        $r1 = r0.<com.android.org.chromium.media.AudioManagerAndroid: android.media.AudioManager mAudioManager>;

        return $r1;
    }

    private static com.android.org.chromium.media.AudioManagerAndroid createAudioManagerAndroid(android.content.Context, long)
    {
        android.content.Context r0;
        long l0;
        com.android.org.chromium.media.AudioManagerAndroid $r1;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        $r1 = new com.android.org.chromium.media.AudioManagerAndroid;

        specialinvoke $r1.<com.android.org.chromium.media.AudioManagerAndroid: void <init>(android.content.Context,long)>(r0, l0);

        return $r1;
    }

    private int getAudioLowLatencyOutputFrameSize()
    {
        com.android.org.chromium.media.AudioManagerAndroid r0;
        java.lang.String r1;
        android.media.AudioManager $r2;
        int $i0;

        r0 := @this: com.android.org.chromium.media.AudioManagerAndroid;

        $r2 = r0.<com.android.org.chromium.media.AudioManagerAndroid: android.media.AudioManager mAudioManager>;

        r1 = virtualinvoke $r2.<android.media.AudioManager: java.lang.String getProperty(java.lang.String)>("android.media.property.OUTPUT_FRAMES_PER_BUFFER");

        if r1 != null goto label1;

        return 256;

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

        return $i0;
    }

    private static int getMinInputFrameSize(int, int)
    {
        int i0, i1, $i3, $i4, $i5;
        byte b2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 != 1 goto label2;

        b2 = 16;

     label1:
        $i3 = staticinvoke <android.media.AudioRecord: int getMinBufferSize(int,int,int)>(i0, b2, 2);

        $i4 = $i3 / 2;

        $i5 = $i4 / i1;

        return $i5;

     label2:
        if i1 != 2 goto label3;

        b2 = 12;

        goto label1;

     label3:
        return -1;
    }

    private static int getMinOutputFrameSize(int, int)
    {
        int i0, i1, $i3, $i4, $i5;
        byte b2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 != 1 goto label2;

        b2 = 4;

     label1:
        $i3 = staticinvoke <android.media.AudioTrack: int getMinBufferSize(int,int,int)>(i0, b2, 2);

        $i4 = $i3 / 2;

        $i5 = $i4 / i1;

        return $i5;

     label2:
        if i1 != 2 goto label3;

        b2 = 12;

        goto label1;

     label3:
        return -1;
    }

    private int getNativeOutputSampleRate()
    {
        com.android.org.chromium.media.AudioManagerAndroid r0;
        java.lang.String r1;
        int $i0, $i1;
        android.media.AudioManager $r2;

        r0 := @this: com.android.org.chromium.media.AudioManagerAndroid;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 17 goto label1;

        $r2 = r0.<com.android.org.chromium.media.AudioManagerAndroid: android.media.AudioManager mAudioManager>;

        r1 = virtualinvoke $r2.<android.media.AudioManager: java.lang.String getProperty(java.lang.String)>("android.media.property.OUTPUT_SAMPLE_RATE");

        if r1 != null goto label2;

     label1:
        return 44100;

     label2:
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

        return $i1;
    }

    private int getNumOfAudioDevicesWithLock()
    {
        com.android.org.chromium.media.AudioManagerAndroid r0;
        int i0, i1;
        boolean[] $r1;
        boolean $z0;

        r0 := @this: com.android.org.chromium.media.AudioManagerAndroid;

        i0 = 0;

        i1 = 0;

     label1:
        if i1 >= 4 goto label3;

        $r1 = r0.<com.android.org.chromium.media.AudioManagerAndroid: boolean[] mAudioDevices>;

        $z0 = $r1[i1];

        if $z0 == 0 goto label2;

        i0 = i0 + 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return i0;
    }

    private boolean hasEarpiece()
    {
        com.android.org.chromium.media.AudioManagerAndroid r0;
        android.content.Context $r1;
        android.content.pm.PackageManager $r2;
        boolean $z0;

        r0 := @this: com.android.org.chromium.media.AudioManagerAndroid;

        $r1 = r0.<com.android.org.chromium.media.AudioManagerAndroid: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $z0 = virtualinvoke $r2.<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>("android.hardware.telephony");

        return $z0;
    }

    private void initBluetooth()
    {
        com.android.org.chromium.media.AudioManagerAndroid r0;
        boolean z0, $z1;
        android.bluetooth.BluetoothAdapter r1;
        java.lang.Object r2, $r6;
        java.lang.Throwable r3, $r9;
        android.content.Context $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4;
        android.bluetooth.BluetoothManager $r7;
        boolean[] $r8;

        r0 := @this: com.android.org.chromium.media.AudioManagerAndroid;

        $r4 = r0.<com.android.org.chromium.media.AudioManagerAndroid: android.content.Context mContext>;

        $i0 = staticinvoke <android.os.Process: int myPid()>();

        $i1 = staticinvoke <android.os.Process: int myUid()>();

        $i2 = virtualinvoke $r4.<android.content.Context: int checkPermission(java.lang.String,int,int)>("android.permission.BLUETOOTH", $i0, $i1);

        if $i2 != 0 goto label03;

        z0 = 1;

     label01:
        r0.<com.android.org.chromium.media.AudioManagerAndroid: boolean mHasBluetoothPermission> = z0;

        $z1 = r0.<com.android.org.chromium.media.AudioManagerAndroid: boolean mHasBluetoothPermission>;

        if $z1 != 0 goto label04;

        staticinvoke <com.android.org.chromium.media.AudioManagerAndroid: void loge(java.lang.String)>("BLUETOOTH permission is missing!");

     label02:
        return;

     label03:
        z0 = 0;

        goto label01;

     label04:
        $i3 = <android.os.Build$VERSION: int SDK_INT>;

        if $i3 > 17 goto label08;

        r1 = staticinvoke <android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>();

     label05:
        if r1 == null goto label02;

        $i4 = virtualinvoke r1.<android.bluetooth.BluetoothAdapter: int getProfileConnectionState(int)>(1);

        if 2 != $i4 goto label02;

        r2 = r0.<com.android.org.chromium.media.AudioManagerAndroid: java.lang.Object mLock>;

        entermonitor r2;

     label06:
        $r8 = r0.<com.android.org.chromium.media.AudioManagerAndroid: boolean[] mAudioDevices>;

        $r8[3] = 1;

        exitmonitor r2;

     label07:
        virtualinvoke r0.<com.android.org.chromium.media.AudioManagerAndroid: void setAudioDevice(int)>(3);

        return;

     label08:
        $r5 = r0.<com.android.org.chromium.media.AudioManagerAndroid: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("bluetooth");

        $r7 = (android.bluetooth.BluetoothManager) $r6;

        r1 = virtualinvoke $r7.<android.bluetooth.BluetoothManager: android.bluetooth.BluetoothAdapter getAdapter()>();

        goto label05;

     label09:
        $r9 := @caughtexception;

        r3 = $r9;

     label10:
        exitmonitor r2;

     label11:
        throw r3;

        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    private boolean isAudioLowLatencySupported()
    {
        com.android.org.chromium.media.AudioManagerAndroid r0;
        android.content.Context $r1;
        android.content.pm.PackageManager $r2;
        boolean $z0;

        r0 := @this: com.android.org.chromium.media.AudioManagerAndroid;

        $r1 = r0.<com.android.org.chromium.media.AudioManagerAndroid: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $z0 = virtualinvoke $r2.<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>("android.hardware.audio.low_latency");

        return $z0;
    }

    private void logDeviceInfo()
    {
        com.android.org.chromium.media.AudioManagerAndroid r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7, $r8, $r10, $r11, $r13, $r14, $r15;
        java.lang.String $r3, $r6, $r9, $r12, $r16, $r17;

        r0 := @this: com.android.org.chromium.media.AudioManagerAndroid;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Manufacturer:");

        $r3 = <android.os.Build: java.lang.String MANUFACTURER>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Board: ");

        $r6 = <android.os.Build: java.lang.String BOARD>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Device: ");

        $r9 = <android.os.Build: java.lang.String DEVICE>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Model: ");

        $r12 = <android.os.Build: java.lang.String MODEL>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" PRODUCT: ");

        $r16 = <android.os.Build: java.lang.String PRODUCT>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("AudioManagerAndroid", $r17);

        return;
    }

    private static void logd(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AudioManagerAndroid", r0);

        return;
    }

    private static void loge(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AudioManagerAndroid", r0);

        return;
    }

    private native void nativeSetMute(long, boolean);

    private void registerForWiredHeadsetIntentBroadcast()
    {
        com.android.org.chromium.media.AudioManagerAndroid r0;
        android.content.IntentFilter r1, $r2;
        com.android.org.chromium.media.AudioManagerAndroid$1 $r3;
        android.content.BroadcastReceiver $r4;
        android.content.Context $r5;

        r0 := @this: com.android.org.chromium.media.AudioManagerAndroid;

        $r2 = new android.content.IntentFilter;

        specialinvoke $r2.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.HEADSET_PLUG");

        r1 = $r2;

        $r3 = new com.android.org.chromium.media.AudioManagerAndroid$1;

        specialinvoke $r3.<com.android.org.chromium.media.AudioManagerAndroid$1: void <init>(com.android.org.chromium.media.AudioManagerAndroid)>(r0);

        r0.<com.android.org.chromium.media.AudioManagerAndroid: android.content.BroadcastReceiver mWiredHeadsetReceiver> = $r3;

        $r5 = r0.<com.android.org.chromium.media.AudioManagerAndroid: android.content.Context mContext>;

        $r4 = r0.<com.android.org.chromium.media.AudioManagerAndroid: android.content.BroadcastReceiver mWiredHeadsetReceiver>;

        virtualinvoke $r5.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r4, r1);

        return;
    }

    private void reportUpdate()
    {
        com.android.org.chromium.media.AudioManagerAndroid r0;
        java.lang.Object r1;
        java.util.ArrayList r2, $r4;
        int i0;
        java.lang.Throwable r3, $r15;
        java.lang.StringBuilder $r5, $r6, $r8, $r9, $r10;
        java.lang.Integer $r7;
        java.lang.String $r11, $r14;
        boolean[] $r12;
        java.lang.String[] $r13;
        boolean $z0;

        r0 := @this: com.android.org.chromium.media.AudioManagerAndroid;

        r1 = r0.<com.android.org.chromium.media.AudioManagerAndroid: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r2 = $r4;

     label02:
        i0 = 0;

     label03:
        if i0 >= 4 goto label06;

     label04:
        $r12 = r0.<com.android.org.chromium.media.AudioManagerAndroid: boolean[] mAudioDevices>;

        $z0 = $r12[i0];

        if $z0 == 0 goto label11;

        $r13 = <com.android.org.chromium.media.AudioManagerAndroid: java.lang.String[] DEVICE_NAMES>;

        $r14 = $r13[i0];

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r14);

     label05:
        goto label11;

     label06:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("reportUpdate: state=");

        $r7 = r0.<com.android.org.chromium.media.AudioManagerAndroid: java.lang.Integer mAudioDeviceState>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", devices=");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.org.chromium.media.AudioManagerAndroid: void logd(java.lang.String)>($r11);

        exitmonitor r1;

     label07:
        return;

     label08:
        $r15 := @caughtexception;

        r3 = $r15;

     label09:
        exitmonitor r1;

     label10:
        throw r3;

     label11:
        i0 = i0 + 1;

        goto label03;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public static boolean shouldUseAcousticEchoCanceler()
    {
        int $i0;
        boolean $z0, $z1, $z2;
        java.lang.String $r0, $r1;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 16 goto label2;

        $z0 = staticinvoke <android.media.audiofx.AcousticEchoCanceler: boolean isAvailable()>();

        if $z0 == 0 goto label2;

        $r0 = <android.os.Build: java.lang.String MODEL>;

        $z1 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("Nexus 5");

        if $z1 != 0 goto label1;

        $r1 = <android.os.Build: java.lang.String MODEL>;

        $z2 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("Nexus 7");

        if $z2 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    private void unregisterForWiredHeadsetIntentBroadcast()
    {
        com.android.org.chromium.media.AudioManagerAndroid r0;
        android.content.BroadcastReceiver $r1;
        android.content.Context $r2;

        r0 := @this: com.android.org.chromium.media.AudioManagerAndroid;

        $r2 = r0.<com.android.org.chromium.media.AudioManagerAndroid: android.content.Context mContext>;

        $r1 = r0.<com.android.org.chromium.media.AudioManagerAndroid: android.content.BroadcastReceiver mWiredHeadsetReceiver>;

        virtualinvoke $r2.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r1);

        r0.<com.android.org.chromium.media.AudioManagerAndroid: android.content.BroadcastReceiver mWiredHeadsetReceiver> = null;

        return;
    }

    public void close()
    {
        com.android.org.chromium.media.AudioManagerAndroid r0;
        boolean $z0, $z1, $z2;
        com.android.org.chromium.media.AudioManagerAndroid$SettingsObserverThread $r1;
        com.android.org.chromium.media.AudioManagerAndroid$SettingsObserver $r2, $r3;
        android.content.ContentResolver $r4;

        r0 := @this: com.android.org.chromium.media.AudioManagerAndroid;

        $z0 = r0.<com.android.org.chromium.media.AudioManagerAndroid: boolean mIsInitialized>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<com.android.org.chromium.media.AudioManagerAndroid: com.android.org.chromium.media.AudioManagerAndroid$SettingsObserverThread mSettingsObserverThread>;

        if $r1 == null goto label2;

        r0.<com.android.org.chromium.media.AudioManagerAndroid: com.android.org.chromium.media.AudioManagerAndroid$SettingsObserverThread mSettingsObserverThread> = null;

     label2:
        $r2 = r0.<com.android.org.chromium.media.AudioManagerAndroid: com.android.org.chromium.media.AudioManagerAndroid$SettingsObserver mSettingsObserver>;

        if $r2 == null goto label3;

        $r4 = r0.<com.android.org.chromium.media.AudioManagerAndroid: android.content.ContentResolver mContentResolver>;

        $r3 = r0.<com.android.org.chromium.media.AudioManagerAndroid: com.android.org.chromium.media.AudioManagerAndroid$SettingsObserver mSettingsObserver>;

        virtualinvoke $r4.<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>($r3);

        r0.<com.android.org.chromium.media.AudioManagerAndroid: com.android.org.chromium.media.AudioManagerAndroid$SettingsObserver mSettingsObserver> = null;

     label3:
        specialinvoke r0.<com.android.org.chromium.media.AudioManagerAndroid: void unregisterForWiredHeadsetIntentBroadcast()>();

        $z1 = r0.<com.android.org.chromium.media.AudioManagerAndroid: boolean mSavedIsMicrophoneMute>;

        virtualinvoke r0.<com.android.org.chromium.media.AudioManagerAndroid: void setMicrophoneMute(boolean)>($z1);

        $z2 = r0.<com.android.org.chromium.media.AudioManagerAndroid: boolean mSavedIsSpeakerphoneOn>;

        virtualinvoke r0.<com.android.org.chromium.media.AudioManagerAndroid: void setSpeakerphoneOn(boolean)>($z2);

        r0.<com.android.org.chromium.media.AudioManagerAndroid: boolean mIsInitialized> = 0;

        return;
    }

    public com.android.org.chromium.media.AudioManagerAndroid$AudioDeviceName[] getAudioInputDeviceNames()
    {
        com.android.org.chromium.media.AudioManagerAndroid r0;
        int i0, i1, $i2;
        java.lang.Object r1;
        java.util.ArrayList r2, $r5;
        java.lang.Throwable r3, $r16;
        com.android.org.chromium.media.AudioManagerAndroid$AudioDeviceName[] r4;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9, $r12, $r14;
        boolean[] $r10;
        com.android.org.chromium.media.AudioManagerAndroid$AudioDeviceName $r11;
        boolean $z0;
        java.lang.String[] $r13, $r15;

        r0 := @this: com.android.org.chromium.media.AudioManagerAndroid;

        i0 = 0;

        r1 = r0.<com.android.org.chromium.media.AudioManagerAndroid: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r2 = $r5;

        $i2 = specialinvoke r0.<com.android.org.chromium.media.AudioManagerAndroid: int getNumOfAudioDevicesWithLock()>();

        r4 = newarray (com.android.org.chromium.media.AudioManagerAndroid$AudioDeviceName)[$i2];

     label02:
        i1 = 0;

     label03:
        if i1 >= 4 goto label06;

     label04:
        $r10 = r0.<com.android.org.chromium.media.AudioManagerAndroid: boolean[] mAudioDevices>;

        $z0 = $r10[i1];

        if $z0 == 0 goto label11;

        $r11 = new com.android.org.chromium.media.AudioManagerAndroid$AudioDeviceName;

        $r13 = <com.android.org.chromium.media.AudioManagerAndroid: java.lang.String[] DEVICE_NAMES>;

        $r12 = $r13[i1];

        specialinvoke $r11.<com.android.org.chromium.media.AudioManagerAndroid$AudioDeviceName: void <init>(int,java.lang.String,com.android.org.chromium.media.AudioManagerAndroid$1)>(i1, $r12, null);

        r4[i0] = $r11;

        $r15 = <com.android.org.chromium.media.AudioManagerAndroid: java.lang.String[] DEVICE_NAMES>;

        $r14 = $r15[i1];

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r14);

     label05:
        i0 = i0 + 1;

        goto label11;

     label06:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getAudioInputDeviceNames: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.org.chromium.media.AudioManagerAndroid: void logd(java.lang.String)>($r9);

        exitmonitor r1;

     label07:
        return r4;

     label08:
        $r16 := @caughtexception;

        r3 = $r16;

     label09:
        exitmonitor r1;

     label10:
        throw r3;

     label11:
        i1 = i1 + 1;

        goto label03;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void init()
    {
        com.android.org.chromium.media.AudioManagerAndroid r0;
        java.lang.Object r1, r3, r5, $r13;
        int i0;
        java.lang.Throwable r2, r4, r7, $r16, $r17, $r20;
        java.lang.InterruptedException r6, $r18;
        boolean $z0, $z1, $z2, $z3;
        android.media.AudioManager $r8, $r9;
        boolean[] $r10, $r14, $r15;
        com.android.org.chromium.media.AudioManagerAndroid$SettingsObserverThread $r11, $r12;
        java.lang.StringBuilder $r19, $r22, $r23;
        java.lang.String $r21, $r24;

        r0 := @this: com.android.org.chromium.media.AudioManagerAndroid;

        $z0 = r0.<com.android.org.chromium.media.AudioManagerAndroid: boolean mIsInitialized>;

        if $z0 == 0 goto label01;

        return;

     label01:
        r1 = r0.<com.android.org.chromium.media.AudioManagerAndroid: java.lang.Object mLock>;

        entermonitor r1;

        i0 = 0;

     label02:
        if i0 >= 4 goto label05;

     label03:
        $r14 = r0.<com.android.org.chromium.media.AudioManagerAndroid: boolean[] mAudioDevices>;

        $r14[i0] = 0;

     label04:
        i0 = i0 + 1;

        goto label02;

     label05:
        exitmonitor r1;

     label06:
        $r8 = r0.<com.android.org.chromium.media.AudioManagerAndroid: android.media.AudioManager mAudioManager>;

        $z1 = virtualinvoke $r8.<android.media.AudioManager: boolean isSpeakerphoneOn()>();

        r0.<com.android.org.chromium.media.AudioManagerAndroid: boolean mSavedIsSpeakerphoneOn> = $z1;

        $r9 = r0.<com.android.org.chromium.media.AudioManagerAndroid: android.media.AudioManager mAudioManager>;

        $z2 = virtualinvoke $r9.<android.media.AudioManager: boolean isMicrophoneMute()>();

        r0.<com.android.org.chromium.media.AudioManagerAndroid: boolean mSavedIsMicrophoneMute> = $z2;

        r3 = r0.<com.android.org.chromium.media.AudioManagerAndroid: java.lang.Object mLock>;

        entermonitor r3;

     label07:
        $z3 = specialinvoke r0.<com.android.org.chromium.media.AudioManagerAndroid: boolean hasEarpiece()>();

        if $z3 == 0 goto label08;

        $r15 = r0.<com.android.org.chromium.media.AudioManagerAndroid: boolean[] mAudioDevices>;

        $r15[2] = 1;

     label08:
        $r10 = r0.<com.android.org.chromium.media.AudioManagerAndroid: boolean[] mAudioDevices>;

        $r10[0] = 1;

        exitmonitor r3;

     label09:
        specialinvoke r0.<com.android.org.chromium.media.AudioManagerAndroid: void registerForWiredHeadsetIntentBroadcast()>();

        specialinvoke r0.<com.android.org.chromium.media.AudioManagerAndroid: void initBluetooth()>();

        r0.<com.android.org.chromium.media.AudioManagerAndroid: boolean mIsInitialized> = 1;

        $r11 = new com.android.org.chromium.media.AudioManagerAndroid$SettingsObserverThread;

        specialinvoke $r11.<com.android.org.chromium.media.AudioManagerAndroid$SettingsObserverThread: void <init>(com.android.org.chromium.media.AudioManagerAndroid)>(r0);

        r0.<com.android.org.chromium.media.AudioManagerAndroid: com.android.org.chromium.media.AudioManagerAndroid$SettingsObserverThread mSettingsObserverThread> = $r11;

        r5 = r0.<com.android.org.chromium.media.AudioManagerAndroid: java.lang.Object mSettingsObserverLock>;

        entermonitor r5;

     label10:
        $r12 = r0.<com.android.org.chromium.media.AudioManagerAndroid: com.android.org.chromium.media.AudioManagerAndroid$SettingsObserverThread mSettingsObserverThread>;

        virtualinvoke $r12.<com.android.org.chromium.media.AudioManagerAndroid$SettingsObserverThread: void start()>();

        $r13 = r0.<com.android.org.chromium.media.AudioManagerAndroid: java.lang.Object mSettingsObserverLock>;

        virtualinvoke $r13.<java.lang.Object: void wait()>();

     label11:
        exitmonitor r5;

     label12:
        return;

     label13:
        $r20 := @caughtexception;

        r7 = $r20;

     label14:
        exitmonitor r5;

     label15:
        throw r7;

     label16:
        $r17 := @caughtexception;

        r2 = $r17;

     label17:
        exitmonitor r1;

     label18:
        throw r2;

     label19:
        $r16 := @caughtexception;

        r4 = $r16;

     label20:
        exitmonitor r3;

     label21:
        throw r4;

     label22:
        $r18 := @caughtexception;

        r6 = $r18;

     label23:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unregisterHeadsetReceiver exception: ");

        $r21 = virtualinvoke r6.<java.lang.InterruptedException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AudioManagerAndroid", $r24);

     label24:
        goto label11;

        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label07 to label08 with label19;
        catch java.lang.Throwable from label08 to label09 with label19;
        catch java.lang.InterruptedException from label10 to label11 with label22;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.lang.Throwable from label17 to label18 with label16;
        catch java.lang.Throwable from label20 to label21 with label19;
        catch java.lang.Throwable from label23 to label24 with label13;
    }

    public void setAudioDevice(int)
    {
        com.android.org.chromium.media.AudioManagerAndroid r0;
        int i0;
        java.lang.Integer $r1, $r2, $r3;

        r0 := @this: com.android.org.chromium.media.AudioManagerAndroid;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label3;
            case 1: goto label4;
            case 2: goto label5;
            case 3: goto label2;
            default: goto label1;
        };

     label1:
        staticinvoke <com.android.org.chromium.media.AudioManagerAndroid: void loge(java.lang.String)>("Invalid audio device selection!");

     label2:
        specialinvoke r0.<com.android.org.chromium.media.AudioManagerAndroid: void reportUpdate()>();

        return;

     label3:
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        r0.<com.android.org.chromium.media.AudioManagerAndroid: java.lang.Integer mAudioDeviceState> = $r3;

        virtualinvoke r0.<com.android.org.chromium.media.AudioManagerAndroid: void setSpeakerphoneOn(boolean)>(1);

        goto label2;

     label4:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        r0.<com.android.org.chromium.media.AudioManagerAndroid: java.lang.Integer mAudioDeviceState> = $r2;

        virtualinvoke r0.<com.android.org.chromium.media.AudioManagerAndroid: void setSpeakerphoneOn(boolean)>(0);

        goto label2;

     label5:
        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        r0.<com.android.org.chromium.media.AudioManagerAndroid: java.lang.Integer mAudioDeviceState> = $r1;

        virtualinvoke r0.<com.android.org.chromium.media.AudioManagerAndroid: void setSpeakerphoneOn(boolean)>(0);

        goto label2;
    }

    public void setDevice(java.lang.String)
    {
        com.android.org.chromium.media.AudioManagerAndroid r0;
        java.lang.String r1, $r12;
        java.lang.Object r2, $r8;
        java.lang.Throwable r3, $r14;
        boolean[] r4, $r7;
        java.util.List r5;
        java.lang.Integer r6;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r9, $r10, $r11;
        java.lang.Integer[] $r13;
        int $i0;

        r0 := @this: com.android.org.chromium.media.AudioManagerAndroid;

        r1 := @parameter0: java.lang.String;

        r2 = r0.<com.android.org.chromium.media.AudioManagerAndroid: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        $r7 = r0.<com.android.org.chromium.media.AudioManagerAndroid: boolean[] mAudioDevices>;

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.Object clone()>();

        r4 = (boolean[]) $r8;

        exitmonitor r2;

     label2:
        $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label8;

        staticinvoke <com.android.org.chromium.media.AudioManagerAndroid: void logd(java.lang.String)>("setDevice: default");

        $z2 = r4[3];

        if $z2 == 0 goto label6;

        virtualinvoke r0.<com.android.org.chromium.media.AudioManagerAndroid: void setAudioDevice(int)>(3);

        return;

     label3:
        $r14 := @caughtexception;

        r3 = $r14;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

     label6:
        $z3 = r4[1];

        if $z3 == 0 goto label7;

        virtualinvoke r0.<com.android.org.chromium.media.AudioManagerAndroid: void setAudioDevice(int)>(1);

        return;

     label7:
        virtualinvoke r0.<com.android.org.chromium.media.AudioManagerAndroid: void setAudioDevice(int)>(0);

        return;

     label8:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setDevice: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.org.chromium.media.AudioManagerAndroid: void logd(java.lang.String)>($r12);

        $r13 = <com.android.org.chromium.media.AudioManagerAndroid: java.lang.Integer[] VALID_DEVICES>;

        r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r13);

        r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(r1);

        $z1 = interfaceinvoke r5.<java.util.List: boolean contains(java.lang.Object)>(r6);

        if $z1 == 0 goto label9;

        $i0 = virtualinvoke r6.<java.lang.Integer: int intValue()>();

        virtualinvoke r0.<com.android.org.chromium.media.AudioManagerAndroid: void setAudioDevice(int)>($i0);

        return;

     label9:
        staticinvoke <com.android.org.chromium.media.AudioManagerAndroid: void loge(java.lang.String)>("Invalid device ID!");

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setMicrophoneMute(boolean)
    {
        com.android.org.chromium.media.AudioManagerAndroid r0;
        boolean z0, $z1;
        android.media.AudioManager $r1, $r2;

        r0 := @this: com.android.org.chromium.media.AudioManagerAndroid;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.org.chromium.media.AudioManagerAndroid: android.media.AudioManager mAudioManager>;

        $z1 = virtualinvoke $r1.<android.media.AudioManager: boolean isMicrophoneMute()>();

        if $z1 != z0 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.org.chromium.media.AudioManagerAndroid: android.media.AudioManager mAudioManager>;

        virtualinvoke $r2.<android.media.AudioManager: void setMicrophoneMute(boolean)>(z0);

        return;
    }

    public void setMode(int)
    {
        com.android.org.chromium.media.AudioManagerAndroid r0;
        int i0;
        java.lang.SecurityException r1, $r3;
        android.media.AudioManager $r2;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r6, $r8;

        r0 := @this: com.android.org.chromium.media.AudioManagerAndroid;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<com.android.org.chromium.media.AudioManagerAndroid: android.media.AudioManager mAudioManager>;

        virtualinvoke $r2.<android.media.AudioManager: void setMode(int)>(i0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setMode exception: ");

        $r6 = virtualinvoke r1.<java.lang.SecurityException: java.lang.String getMessage()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AudioManagerAndroid", $r8);

        specialinvoke r0.<com.android.org.chromium.media.AudioManagerAndroid: void logDeviceInfo()>();

        return;

        catch java.lang.SecurityException from label1 to label2 with label3;
    }

    public void setSpeakerphoneOn(boolean)
    {
        com.android.org.chromium.media.AudioManagerAndroid r0;
        boolean z0, $z1;
        android.media.AudioManager $r1, $r2;

        r0 := @this: com.android.org.chromium.media.AudioManagerAndroid;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.org.chromium.media.AudioManagerAndroid: android.media.AudioManager mAudioManager>;

        $z1 = virtualinvoke $r1.<android.media.AudioManager: boolean isSpeakerphoneOn()>();

        if $z1 != z0 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.org.chromium.media.AudioManagerAndroid: android.media.AudioManager mAudioManager>;

        virtualinvoke $r2.<android.media.AudioManager: void setSpeakerphoneOn(boolean)>(z0);

        return;
    }
}
