class com.android.org.chromium.ui.gl.SurfaceTextureListener extends java.lang.Object implements android.graphics.SurfaceTexture$OnFrameAvailableListener
{
    static final boolean $assertionsDisabled;
    private final long mNativeSurfaceTextureListener;

    static void <clinit>()
    {
        boolean z0, $z1;
        java.lang.Class $r0;

        $r0 = class "com/android/org/chromium/ui/gl/SurfaceTextureListener";

        $z1 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z1 != 0 goto label2;

        z0 = 1;

     label1:
        <com.android.org.chromium.ui.gl.SurfaceTextureListener: boolean $assertionsDisabled> = z0;

        return;

     label2:
        z0 = 0;

        goto label1;
    }

    void <init>(long)
    {
        com.android.org.chromium.ui.gl.SurfaceTextureListener r0;
        long l0;
        boolean $z0;
        byte $b1;
        java.lang.AssertionError $r1;

        r0 := @this: com.android.org.chromium.ui.gl.SurfaceTextureListener;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = <com.android.org.chromium.ui.gl.SurfaceTextureListener: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $b1 = l0 cmp 0L;

        if $b1 != 0 goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        r0.<com.android.org.chromium.ui.gl.SurfaceTextureListener: long mNativeSurfaceTextureListener> = l0;

        return;
    }

    private native void nativeDestroy(long);

    private native void nativeFrameAvailable(long);

    protected void finalize() throws java.lang.Throwable
    {
        com.android.org.chromium.ui.gl.SurfaceTextureListener r0;
        java.lang.Throwable r1, $r2;
        long $l0;

        r0 := @this: com.android.org.chromium.ui.gl.SurfaceTextureListener;

     label1:
        $l0 = r0.<com.android.org.chromium.ui.gl.SurfaceTextureListener: long mNativeSurfaceTextureListener>;

        specialinvoke r0.<com.android.org.chromium.ui.gl.SurfaceTextureListener: void nativeDestroy(long)>($l0);

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void onFrameAvailable(android.graphics.SurfaceTexture)
    {
        com.android.org.chromium.ui.gl.SurfaceTextureListener r0;
        android.graphics.SurfaceTexture r1;
        long $l0;

        r0 := @this: com.android.org.chromium.ui.gl.SurfaceTextureListener;

        r1 := @parameter0: android.graphics.SurfaceTexture;

        $l0 = r0.<com.android.org.chromium.ui.gl.SurfaceTextureListener: long mNativeSurfaceTextureListener>;

        specialinvoke r0.<com.android.org.chromium.ui.gl.SurfaceTextureListener: void nativeFrameAvailable(long)>($l0);

        return;
    }
}
