public class com.android.org.chromium.content.browser.accessibility.AccessibilityInjector extends com.android.org.chromium.content.browser.WebContentsObserverAndroid
{
    private android.view.accessibility.AccessibilityManager mAccessibilityManager;
    private final java.lang.String mAccessibilityScreenReaderUrl;
    protected com.android.org.chromium.content.browser.ContentViewCore mContentViewCore;
    private final boolean mHasVibratePermission;
    protected boolean mInjectedScriptEnabled;
    protected boolean mScriptInjected;
    private com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$TextToSpeechWrapper mTextToSpeech;
    private com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$VibratorWrapper mVibrator;

    protected void <init>(com.android.org.chromium.content.browser.ContentViewCore)
    {
        com.android.org.chromium.content.browser.accessibility.AccessibilityInjector r0;
        com.android.org.chromium.content.browser.ContentViewCore r1, $r4;
        boolean z0;
        com.android.org.chromium.base.CommandLine $r2;
        java.lang.String $r3;
        android.content.Context $r5;
        int $i0;

        r0 := @this: com.android.org.chromium.content.browser.accessibility.AccessibilityInjector;

        r1 := @parameter0: com.android.org.chromium.content.browser.ContentViewCore;

        specialinvoke r0.<com.android.org.chromium.content.browser.WebContentsObserverAndroid: void <init>(com.android.org.chromium.content.browser.ContentViewCore)>(r1);

        r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore> = r1;

        $r2 = staticinvoke <com.android.org.chromium.base.CommandLine: com.android.org.chromium.base.CommandLine getInstance()>();

        $r3 = virtualinvoke $r2.<com.android.org.chromium.base.CommandLine: java.lang.String getSwitchValue(java.lang.String,java.lang.String)>("accessibility-js-url", "https://ssl.gstatic.com/accessibility/javascript/android/chromeandroidvox.js");

        r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: java.lang.String mAccessibilityScreenReaderUrl> = $r3;

        $r4 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        $r5 = virtualinvoke $r4.<com.android.org.chromium.content.browser.ContentViewCore: android.content.Context getContext()>();

        $i0 = virtualinvoke $r5.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.VIBRATE");

        if $i0 != 0 goto label2;

        z0 = 1;

     label1:
        r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: boolean mHasVibratePermission> = z0;

        return;

     label2:
        z0 = 0;

        goto label1;
    }

    private android.view.accessibility.AccessibilityManager getAccessibilityManager()
    {
        com.android.org.chromium.content.browser.accessibility.AccessibilityInjector r0;
        android.view.accessibility.AccessibilityManager $r1, $r2, $r6;
        com.android.org.chromium.content.browser.ContentViewCore $r3;
        android.content.Context $r4;
        java.lang.Object $r5;

        r0 := @this: com.android.org.chromium.content.browser.accessibility.AccessibilityInjector;

        $r1 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: android.view.accessibility.AccessibilityManager mAccessibilityManager>;

        if $r1 != null goto label1;

        $r3 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        $r4 = virtualinvoke $r3.<com.android.org.chromium.content.browser.ContentViewCore: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("accessibility");

        $r6 = (android.view.accessibility.AccessibilityManager) $r5;

        r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: android.view.accessibility.AccessibilityManager mAccessibilityManager> = $r6;

     label1:
        $r2 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: android.view.accessibility.AccessibilityManager mAccessibilityManager>;

        return $r2;
    }

    private int getAxsUrlParameterValue()
    {
        com.android.org.chromium.content.browser.accessibility.AccessibilityInjector r0;
        java.util.Iterator r4;
        org.apache.http.NameValuePair r5;
        int i0;
        com.android.org.chromium.content.browser.ContentViewCore $r6, $r9;
        java.lang.String $r7, $r10, $r13, $r14, $r15;
        java.net.URI $r8;
        java.util.List $r11;
        boolean $z0, $z1;
        java.lang.Object $r12;
        java.lang.NumberFormatException $r16;
        java.net.URISyntaxException $r17;
        java.lang.IllegalArgumentException $r18;

        r0 := @this: com.android.org.chromium.content.browser.accessibility.AccessibilityInjector;

        $r6 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        $r7 = virtualinvoke $r6.<com.android.org.chromium.content.browser.ContentViewCore: java.lang.String getUrl()>();

        if $r7 != null goto label1;

        return -1;

     label1:
        $r8 = new java.net.URI;

        $r9 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        $r10 = virtualinvoke $r9.<com.android.org.chromium.content.browser.ContentViewCore: java.lang.String getUrl()>();

        specialinvoke $r8.<java.net.URI: void <init>(java.lang.String)>($r10);

        $r11 = staticinvoke <org.apache.http.client.utils.URLEncodedUtils: java.util.List parse(java.net.URI,java.lang.String)>($r8, null);

        r4 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.http.NameValuePair) $r12;

        $r14 = "axs";

        $r13 = interfaceinvoke r5.<org.apache.http.NameValuePair: java.lang.String getName()>();

        $z1 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z1 == 0 goto label2;

        $r15 = interfaceinvoke r5.<org.apache.http.NameValuePair: java.lang.String getValue()>();

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r15);

     label3:
        return i0;

     label4:
        $r18 := @caughtexception;

     label5:
        return -1;

     label6:
        $r16 := @caughtexception;

        goto label5;

     label7:
        $r17 := @caughtexception;

        goto label5;

        catch java.net.URISyntaxException from label1 to label2 with label7;
        catch java.lang.NumberFormatException from label1 to label2 with label6;
        catch java.lang.IllegalArgumentException from label1 to label2 with label4;
        catch java.net.URISyntaxException from label2 to label3 with label7;
        catch java.lang.NumberFormatException from label2 to label3 with label6;
        catch java.lang.IllegalArgumentException from label2 to label3 with label4;
    }

    private java.lang.String getScreenReaderInjectingJs()
    {
        com.android.org.chromium.content.browser.accessibility.AccessibilityInjector r0;
        java.lang.Object[] r1;
        java.lang.String $r2, $r3;

        r0 := @this: com.android.org.chromium.content.browser.accessibility.AccessibilityInjector;

        r1 = newarray (java.lang.Object)[1];

        $r2 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: java.lang.String mAccessibilityScreenReaderUrl>;

        r1[0] = $r2;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("(function() {    var chooser = document.createElement(\'script\');    chooser.type = \'text/javascript\';    chooser.src = \'%1s\';    document.getElementsByTagName(\'head\')[0].appendChild(chooser);  })();", r1);

        return $r3;
    }

    public static com.android.org.chromium.content.browser.accessibility.AccessibilityInjector newInstance(com.android.org.chromium.content.browser.ContentViewCore)
    {
        com.android.org.chromium.content.browser.ContentViewCore r0;
        int $i0;
        com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector $r1;
        com.android.org.chromium.content.browser.accessibility.AccessibilityInjector $r2;

        r0 := @parameter0: com.android.org.chromium.content.browser.ContentViewCore;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 16 goto label1;

        $r2 = new com.android.org.chromium.content.browser.accessibility.AccessibilityInjector;

        specialinvoke $r2.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: void <init>(com.android.org.chromium.content.browser.ContentViewCore)>(r0);

        return $r2;

     label1:
        $r1 = new com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector;

        specialinvoke $r1.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector: void <init>(com.android.org.chromium.content.browser.ContentViewCore)>(r0);

        return $r1;
    }

    public boolean accessibilityIsAvailable()
    {
        com.android.org.chromium.content.browser.accessibility.AccessibilityInjector r0;
        int i0;
        android.view.accessibility.AccessibilityManager $r2, $r7;
        boolean $z0, $z1;
        com.android.org.chromium.content.browser.ContentViewCore $r3, $r5;
        com.android.org.chromium.content.browser.ContentSettings $r4, $r6;
        java.util.List $r8;
        java.lang.NullPointerException $r9;

        r0 := @this: com.android.org.chromium.content.browser.accessibility.AccessibilityInjector;

        $r2 = specialinvoke r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: android.view.accessibility.AccessibilityManager getAccessibilityManager()>();

        $z0 = virtualinvoke $r2.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        $r4 = virtualinvoke $r3.<com.android.org.chromium.content.browser.ContentViewCore: com.android.org.chromium.content.browser.ContentSettings getContentSettings()>();

        if $r4 == null goto label1;

        $r5 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        $r6 = virtualinvoke $r5.<com.android.org.chromium.content.browser.ContentViewCore: com.android.org.chromium.content.browser.ContentSettings getContentSettings()>();

        $z1 = virtualinvoke $r6.<com.android.org.chromium.content.browser.ContentSettings: boolean getJavaScriptEnabled()>();

        if $z1 != 0 goto label2;

     label1:
        return 0;

     label2:
        $r7 = specialinvoke r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: android.view.accessibility.AccessibilityManager getAccessibilityManager()>();

        $r8 = virtualinvoke $r7.<android.view.accessibility.AccessibilityManager: java.util.List getEnabledAccessibilityServiceList(int)>(33);

        i0 = interfaceinvoke $r8.<java.util.List: int size()>();

     label3:
        if i0 <= 0 goto label1;

        return 1;

     label4:
        $r9 := @caughtexception;

        return 0;

        catch java.lang.NullPointerException from label2 to label3 with label4;
    }

    protected void addAccessibilityApis()
    {
        com.android.org.chromium.content.browser.accessibility.AccessibilityInjector r0;
        android.content.Context r1;
        com.android.org.chromium.content.browser.ContentViewCore $r2, $r7, $r9, $r12;
        com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$TextToSpeechWrapper $r3, $r8, $r11;
        com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$VibratorWrapper $r4, $r5, $r6;
        boolean $z0;
        android.view.ViewGroup $r10;

        r0 := @this: com.android.org.chromium.content.browser.accessibility.AccessibilityInjector;

        $r2 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        r1 = virtualinvoke $r2.<com.android.org.chromium.content.browser.ContentViewCore: android.content.Context getContext()>();

        if r1 == null goto label2;

        $r3 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$TextToSpeechWrapper mTextToSpeech>;

        if $r3 != null goto label1;

        $r8 = new com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$TextToSpeechWrapper;

        $r9 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        $r10 = virtualinvoke $r9.<com.android.org.chromium.content.browser.ContentViewCore: android.view.ViewGroup getContainerView()>();

        specialinvoke $r8.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$TextToSpeechWrapper: void <init>(android.view.View,android.content.Context)>($r10, r1);

        r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$TextToSpeechWrapper mTextToSpeech> = $r8;

        $r12 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        $r11 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$TextToSpeechWrapper mTextToSpeech>;

        virtualinvoke $r12.<com.android.org.chromium.content.browser.ContentViewCore: void addJavascriptInterface(java.lang.Object,java.lang.String)>($r11, "accessibility");

     label1:
        $r4 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$VibratorWrapper mVibrator>;

        if $r4 != null goto label2;

        $z0 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: boolean mHasVibratePermission>;

        if $z0 == 0 goto label2;

        $r5 = new com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$VibratorWrapper;

        specialinvoke $r5.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$VibratorWrapper: void <init>(android.content.Context)>(r1);

        r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$VibratorWrapper mVibrator> = $r5;

        $r7 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        $r6 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$VibratorWrapper mVibrator>;

        virtualinvoke $r7.<com.android.org.chromium.content.browser.ContentViewCore: void addJavascriptInterface(java.lang.Object,java.lang.String)>($r6, "accessibility2");

     label2:
        return;
    }

    public void addOrRemoveAccessibilityApisIfNecessary()
    {
        com.android.org.chromium.content.browser.accessibility.AccessibilityInjector r0;
        boolean $z0;

        r0 := @this: com.android.org.chromium.content.browser.accessibility.AccessibilityInjector;

        $z0 = virtualinvoke r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: boolean accessibilityIsAvailable()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: void addAccessibilityApis()>();

        return;

     label1:
        virtualinvoke r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: void removeAccessibilityApis()>();

        return;
    }

    public void didStartLoading(java.lang.String)
    {
        com.android.org.chromium.content.browser.accessibility.AccessibilityInjector r0;
        java.lang.String r1;

        r0 := @this: com.android.org.chromium.content.browser.accessibility.AccessibilityInjector;

        r1 := @parameter0: java.lang.String;

        r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: boolean mScriptInjected> = 0;

        return;
    }

    public void didStopLoading(java.lang.String)
    {
        com.android.org.chromium.content.browser.accessibility.AccessibilityInjector r0;
        java.lang.String r1;

        r0 := @this: com.android.org.chromium.content.browser.accessibility.AccessibilityInjector;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: void injectAccessibilityScriptIntoPage()>();

        return;
    }

    public void injectAccessibilityScriptIntoPage()
    {
        com.android.org.chromium.content.browser.accessibility.AccessibilityInjector r0;
        java.lang.String r1;
        boolean $z0, $z1, $z2;
        int $i0;
        com.android.org.chromium.content.browser.ContentViewCore $r2, $r3, $r4;

        r0 := @this: com.android.org.chromium.content.browser.accessibility.AccessibilityInjector;

        $z0 = virtualinvoke r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: boolean accessibilityIsAvailable()>();

        if $z0 != 0 goto label2;

     label1:
        return;

     label2:
        $i0 = specialinvoke r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: int getAxsUrlParameterValue()>();

        if $i0 != -1 goto label1;

        r1 = specialinvoke r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: java.lang.String getScreenReaderInjectingJs()>();

        $r2 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        $z1 = virtualinvoke $r2.<com.android.org.chromium.content.browser.ContentViewCore: boolean isDeviceAccessibilityScriptInjectionEnabled()>();

        if $z1 == 0 goto label1;

        if r1 == null goto label1;

        $r3 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        $z2 = virtualinvoke $r3.<com.android.org.chromium.content.browser.ContentViewCore: boolean isAlive()>();

        if $z2 == 0 goto label1;

        virtualinvoke r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: void addOrRemoveAccessibilityApisIfNecessary()>();

        $r4 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        virtualinvoke $r4.<com.android.org.chromium.content.browser.ContentViewCore: void evaluateJavaScript(java.lang.String,com.android.org.chromium.content.browser.ContentViewCore$JavaScriptCallback)>(r1, null);

        r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: boolean mInjectedScriptEnabled> = 1;

        r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: boolean mScriptInjected> = 1;

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        com.android.org.chromium.content.browser.accessibility.AccessibilityInjector r0;
        android.view.accessibility.AccessibilityNodeInfo r1;

        r0 := @this: com.android.org.chromium.content.browser.accessibility.AccessibilityInjector;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        return;
    }

    public void onPageLostFocus()
    {
        com.android.org.chromium.content.browser.accessibility.AccessibilityInjector r0;
        com.android.org.chromium.content.browser.ContentViewCore $r1;
        boolean $z0;
        com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$TextToSpeechWrapper $r2, $r5;
        com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$VibratorWrapper $r3, $r4;

        r0 := @this: com.android.org.chromium.content.browser.accessibility.AccessibilityInjector;

        $r1 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        $z0 = virtualinvoke $r1.<com.android.org.chromium.content.browser.ContentViewCore: boolean isAlive()>();

        if $z0 == 0 goto label2;

        $r2 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$TextToSpeechWrapper mTextToSpeech>;

        if $r2 == null goto label1;

        $r5 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$TextToSpeechWrapper mTextToSpeech>;

        virtualinvoke $r5.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$TextToSpeechWrapper: int stop()>();

     label1:
        $r3 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$VibratorWrapper mVibrator>;

        if $r3 == null goto label2;

        $r4 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$VibratorWrapper mVibrator>;

        virtualinvoke $r4.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$VibratorWrapper: void cancel()>();

     label2:
        return;
    }

    public boolean performAccessibilityAction(int, android.os.Bundle)
    {
        com.android.org.chromium.content.browser.accessibility.AccessibilityInjector r0;
        int i0;
        android.os.Bundle r1;

        r0 := @this: com.android.org.chromium.content.browser.accessibility.AccessibilityInjector;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        return 0;
    }

    protected void removeAccessibilityApis()
    {
        com.android.org.chromium.content.browser.accessibility.AccessibilityInjector r0;
        com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$TextToSpeechWrapper $r1, $r6, $r7;
        com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$VibratorWrapper $r2, $r4;
        com.android.org.chromium.content.browser.ContentViewCore $r3, $r5;

        r0 := @this: com.android.org.chromium.content.browser.accessibility.AccessibilityInjector;

        $r1 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$TextToSpeechWrapper mTextToSpeech>;

        if $r1 == null goto label1;

        $r5 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        virtualinvoke $r5.<com.android.org.chromium.content.browser.ContentViewCore: void removeJavascriptInterface(java.lang.String)>("accessibility");

        $r6 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$TextToSpeechWrapper mTextToSpeech>;

        virtualinvoke $r6.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$TextToSpeechWrapper: int stop()>();

        $r7 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$TextToSpeechWrapper mTextToSpeech>;

        virtualinvoke $r7.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$TextToSpeechWrapper: void shutdownInternal()>();

        r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$TextToSpeechWrapper mTextToSpeech> = null;

     label1:
        $r2 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$VibratorWrapper mVibrator>;

        if $r2 == null goto label2;

        $r3 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        virtualinvoke $r3.<com.android.org.chromium.content.browser.ContentViewCore: void removeJavascriptInterface(java.lang.String)>("accessibility2");

        $r4 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$VibratorWrapper mVibrator>;

        virtualinvoke $r4.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$VibratorWrapper: void cancel()>();

        r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$VibratorWrapper mVibrator> = null;

     label2:
        return;
    }

    public void setScriptEnabled(boolean)
    {
        com.android.org.chromium.content.browser.accessibility.AccessibilityInjector r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.Object[] r1;
        java.lang.String r2, $r4;
        com.android.org.chromium.content.browser.ContentViewCore $r3, $r5;

        r0 := @this: com.android.org.chromium.content.browser.accessibility.AccessibilityInjector;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $z6 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: boolean mScriptInjected>;

        if $z6 != 0 goto label1;

        virtualinvoke r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: void injectAccessibilityScriptIntoPage()>();

     label1:
        $z1 = virtualinvoke r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: boolean accessibilityIsAvailable()>();

        if $z1 == 0 goto label2;

        $z2 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: boolean mInjectedScriptEnabled>;

        if $z2 != z0 goto label3;

     label2:
        return;

     label3:
        r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: boolean mInjectedScriptEnabled> = z0;

        $r3 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        $z3 = virtualinvoke $r3.<com.android.org.chromium.content.browser.ContentViewCore: boolean isAlive()>();

        if $z3 == 0 goto label2;

        r1 = newarray (java.lang.Object)[1];

        $z4 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: boolean mInjectedScriptEnabled>;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z4);

        r1[0] = $r4;

        r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("(function() {    if (typeof cvox !== \'undefined\') {        cvox.ChromeVox.host.activateOrDeactivateChromeVox(%1s);    }  })();", r1);

        $r5 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        virtualinvoke $r5.<com.android.org.chromium.content.browser.ContentViewCore: void evaluateJavaScript(java.lang.String,com.android.org.chromium.content.browser.ContentViewCore$JavaScriptCallback)>(r2, null);

        $z5 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: boolean mInjectedScriptEnabled>;

        if $z5 != 0 goto label2;

        virtualinvoke r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector: void onPageLostFocus()>();

        return;
    }

    public boolean supportsAccessibilityAction(int)
    {
        com.android.org.chromium.content.browser.accessibility.AccessibilityInjector r0;
        int i0;

        r0 := @this: com.android.org.chromium.content.browser.accessibility.AccessibilityInjector;

        i0 := @parameter0: int;

        return 0;
    }
}
