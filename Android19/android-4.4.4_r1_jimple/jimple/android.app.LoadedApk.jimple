public final class android.app.LoadedApk extends java.lang.Object
{
    static final boolean $assertionsDisabled;
    private static final java.lang.String TAG;
    private final android.app.ActivityThread mActivityThread;
    private final java.lang.String mAppDir;
    private android.app.Application mApplication;
    private android.content.pm.ApplicationInfo mApplicationInfo;
    private final java.lang.ClassLoader mBaseClassLoader;
    private java.lang.ClassLoader mClassLoader;
    int mClientCount;
    private final java.lang.String mDataDir;
    private final java.io.File mDataDirFile;
    private final android.view.DisplayAdjustments mDisplayAdjustments;
    private final boolean mIncludeCode;
    private final java.lang.String mLibDir;
    final java.lang.String mPackageName;
    private final android.util.ArrayMap mReceivers;
    private final java.lang.String mResDir;
    android.content.res.Resources mResources;
    private final boolean mSecurityViolation;
    private final android.util.ArrayMap mServices;
    private final java.lang.String[] mSharedLibraries;
    private final android.util.ArrayMap mUnboundServices;
    private final android.util.ArrayMap mUnregisteredReceivers;

    static void <clinit>()
    {
        boolean z0, $z1;
        java.lang.Class $r0;

        <android.app.LoadedApk: java.lang.String TAG> = "LoadedApk";

        $r0 = class "android/app/LoadedApk";

        $z1 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z1 != 0 goto label2;

        z0 = 1;

     label1:
        <android.app.LoadedApk: boolean $assertionsDisabled> = z0;

        return;

     label2:
        z0 = 0;

        goto label1;

        return;
    }

    void <init>(android.app.ActivityThread)
    {
        android.app.LoadedApk r0;
        android.app.ActivityThread r1;
        android.view.DisplayAdjustments $r2;
        android.util.ArrayMap $r3, $r4, $r5, $r6;
        android.content.pm.ApplicationInfo $r7, $r8;
        java.lang.ClassLoader $r9;
        android.content.res.Resources $r10;

        r0 := @this: android.app.LoadedApk;

        r1 := @parameter0: android.app.ActivityThread;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.view.DisplayAdjustments;

        specialinvoke $r2.<android.view.DisplayAdjustments: void <init>()>();

        r0.<android.app.LoadedApk: android.view.DisplayAdjustments mDisplayAdjustments> = $r2;

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.LoadedApk: android.util.ArrayMap mReceivers> = $r3;

        $r4 = new android.util.ArrayMap;

        specialinvoke $r4.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.LoadedApk: android.util.ArrayMap mUnregisteredReceivers> = $r4;

        $r5 = new android.util.ArrayMap;

        specialinvoke $r5.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.LoadedApk: android.util.ArrayMap mServices> = $r5;

        $r6 = new android.util.ArrayMap;

        specialinvoke $r6.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.LoadedApk: android.util.ArrayMap mUnboundServices> = $r6;

        r0.<android.app.LoadedApk: int mClientCount> = 0;

        r0.<android.app.LoadedApk: android.app.ActivityThread mActivityThread> = r1;

        $r7 = new android.content.pm.ApplicationInfo;

        specialinvoke $r7.<android.content.pm.ApplicationInfo: void <init>()>();

        r0.<android.app.LoadedApk: android.content.pm.ApplicationInfo mApplicationInfo> = $r7;

        $r8 = r0.<android.app.LoadedApk: android.content.pm.ApplicationInfo mApplicationInfo>;

        $r8.<android.content.pm.ApplicationInfo: java.lang.String packageName> = "android";

        r0.<android.app.LoadedApk: java.lang.String mPackageName> = "android";

        r0.<android.app.LoadedApk: java.lang.String mAppDir> = null;

        r0.<android.app.LoadedApk: java.lang.String mResDir> = null;

        r0.<android.app.LoadedApk: java.lang.String[] mSharedLibraries> = null;

        r0.<android.app.LoadedApk: java.lang.String mDataDir> = null;

        r0.<android.app.LoadedApk: java.io.File mDataDirFile> = null;

        r0.<android.app.LoadedApk: java.lang.String mLibDir> = null;

        r0.<android.app.LoadedApk: java.lang.ClassLoader mBaseClassLoader> = null;

        r0.<android.app.LoadedApk: boolean mSecurityViolation> = 0;

        r0.<android.app.LoadedApk: boolean mIncludeCode> = 1;

        $r9 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();

        r0.<android.app.LoadedApk: java.lang.ClassLoader mClassLoader> = $r9;

        $r10 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        r0.<android.app.LoadedApk: android.content.res.Resources mResources> = $r10;

        return;
    }

    public void <init>(android.app.ActivityThread, android.content.pm.ApplicationInfo, android.content.res.CompatibilityInfo, java.lang.ClassLoader, boolean, boolean)
    {
        android.app.LoadedApk r0;
        android.app.ActivityThread r1;
        android.content.pm.ApplicationInfo r2;
        android.content.res.CompatibilityInfo r3;
        java.lang.ClassLoader r4;
        boolean z0, z1, $z2, $z3;
        int i0, $i1, $i2, $i3;
        java.lang.String r5, $r12, $r13, $r15, $r16, $r18, $r19, $r21, $r22;
        java.io.File r6, $r20;
        android.view.DisplayAdjustments $r7, $r17;
        android.util.ArrayMap $r8, $r9, $r10, $r11;
        java.lang.String[] $r14;

        r0 := @this: android.app.LoadedApk;

        r1 := @parameter0: android.app.ActivityThread;

        r2 := @parameter1: android.content.pm.ApplicationInfo;

        r3 := @parameter2: android.content.res.CompatibilityInfo;

        r4 := @parameter3: java.lang.ClassLoader;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r7 = new android.view.DisplayAdjustments;

        specialinvoke $r7.<android.view.DisplayAdjustments: void <init>()>();

        r0.<android.app.LoadedApk: android.view.DisplayAdjustments mDisplayAdjustments> = $r7;

        $r8 = new android.util.ArrayMap;

        specialinvoke $r8.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.LoadedApk: android.util.ArrayMap mReceivers> = $r8;

        $r9 = new android.util.ArrayMap;

        specialinvoke $r9.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.LoadedApk: android.util.ArrayMap mUnregisteredReceivers> = $r9;

        $r10 = new android.util.ArrayMap;

        specialinvoke $r10.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.LoadedApk: android.util.ArrayMap mServices> = $r10;

        $r11 = new android.util.ArrayMap;

        specialinvoke $r11.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.LoadedApk: android.util.ArrayMap mUnboundServices> = $r11;

        r0.<android.app.LoadedApk: int mClientCount> = 0;

        r0.<android.app.LoadedApk: android.app.ActivityThread mActivityThread> = r1;

        r0.<android.app.LoadedApk: android.content.pm.ApplicationInfo mApplicationInfo> = r2;

        $r12 = r2.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        r0.<android.app.LoadedApk: java.lang.String mPackageName> = $r12;

        $r13 = r2.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        r0.<android.app.LoadedApk: java.lang.String mAppDir> = $r13;

        i0 = staticinvoke <android.os.Process: int myUid()>();

        $i2 = r2.<android.content.pm.ApplicationInfo: int uid>;

        if $i2 != i0 goto label4;

        r5 = r2.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

     label1:
        r0.<android.app.LoadedApk: java.lang.String mResDir> = r5;

        $i1 = r2.<android.content.pm.ApplicationInfo: int uid>;

        $z2 = staticinvoke <android.os.UserHandle: boolean isSameUser(int,int)>($i1, i0);

        if $z2 != 0 goto label2;

        $z3 = staticinvoke <android.os.Process: boolean isIsolated()>();

        if $z3 != 0 goto label2;

        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $r22 = r0.<android.app.LoadedApk: java.lang.String mPackageName>;

        $r21 = staticinvoke <android.content.pm.PackageManager: java.lang.String getDataDirForUser(int,java.lang.String)>($i3, $r22);

        r2.<android.content.pm.ApplicationInfo: java.lang.String dataDir> = $r21;

     label2:
        $r14 = r2.<android.content.pm.ApplicationInfo: java.lang.String[] sharedLibraryFiles>;

        r0.<android.app.LoadedApk: java.lang.String[] mSharedLibraries> = $r14;

        $r16 = r2.<android.content.pm.ApplicationInfo: java.lang.String dataDir>;

        r0.<android.app.LoadedApk: java.lang.String mDataDir> = $r16;

        $r15 = r0.<android.app.LoadedApk: java.lang.String mDataDir>;

        if $r15 == null goto label5;

        $r20 = new java.io.File;

        $r19 = r0.<android.app.LoadedApk: java.lang.String mDataDir>;

        specialinvoke $r20.<java.io.File: void <init>(java.lang.String)>($r19);

        r6 = $r20;

     label3:
        r0.<android.app.LoadedApk: java.io.File mDataDirFile> = r6;

        $r18 = r2.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryDir>;

        r0.<android.app.LoadedApk: java.lang.String mLibDir> = $r18;

        r0.<android.app.LoadedApk: java.lang.ClassLoader mBaseClassLoader> = r4;

        r0.<android.app.LoadedApk: boolean mSecurityViolation> = z0;

        r0.<android.app.LoadedApk: boolean mIncludeCode> = z1;

        $r17 = r0.<android.app.LoadedApk: android.view.DisplayAdjustments mDisplayAdjustments>;

        virtualinvoke $r17.<android.view.DisplayAdjustments: void setCompatibilityInfo(android.content.res.CompatibilityInfo)>(r3);

        return;

     label4:
        r5 = r2.<android.content.pm.ApplicationInfo: java.lang.String publicSourceDir>;

        goto label1;

     label5:
        r6 = null;

        goto label3;
    }

    private static java.lang.String combineLibs(java.lang.String[], java.lang.String[])
    {
        java.lang.String[] r0, r1;
        java.lang.StringBuilder r2, $r5;
        boolean z0, z1, $z2;
        int i0, i1, i2, i3;
        java.lang.String r3, r4, $r6;

        r0 := @parameter0: java.lang.String[];

        r1 := @parameter1: java.lang.String[];

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(int)>(300);

        r2 = $r5;

        z0 = 1;

        if r0 == null goto label04;

        i2 = lengthof r0;

        i3 = 0;

     label01:
        if i3 >= i2 goto label04;

        r4 = r0[i3];

        if z0 == 0 goto label03;

        z0 = 0;

     label02:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        i3 = i3 + 1;

        goto label01;

     label03:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        goto label02;

     label04:
        if z0 != 0 goto label08;

        z1 = 1;

     label05:
        if r1 == null goto label12;

        i0 = lengthof r1;

        i1 = 0;

     label06:
        if i1 >= i0 goto label12;

        r3 = r1[i1];

        if z1 == 0 goto label09;

        $z2 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)>(r0, r3);

        if $z2 == 0 goto label09;

     label07:
        i1 = i1 + 1;

        goto label06;

     label08:
        z1 = 0;

        goto label05;

     label09:
        if z0 == 0 goto label11;

        z0 = 0;

     label10:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        goto label07;

     label11:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        goto label10;

     label12:
        $r6 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    private static java.lang.String[] getLibrariesFor(java.lang.String)
    {
        java.lang.String r0;
        android.os.RemoteException r1, $r5;
        android.content.pm.ApplicationInfo r2;
        android.content.pm.IPackageManager $r3;
        int $i0;
        java.lang.String[] $r4;
        java.lang.AssertionError $r6;

        r0 := @parameter0: java.lang.String;

     label1:
        $r3 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        r2 = interfaceinvoke $r3.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>(r0, 1024, $i0);

     label2:
        if r2 != null goto label4;

        return null;

     label3:
        $r5 := @caughtexception;

        r1 = $r5;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>(r1);

        throw $r6;

     label4:
        $r4 = r2.<android.content.pm.ApplicationInfo: java.lang.String[] sharedLibraryFiles>;

        return $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void initializeJavaContextClassLoader()
    {
        android.app.LoadedApk r0;
        android.content.pm.IPackageManager r1;
        android.os.RemoteException r2, $r21;
        android.content.pm.PackageInfo r3;
        boolean z0, z1, z2, $z3;
        java.lang.ClassLoader r4;
        java.lang.String $r5, $r6, $r11, $r12, $r17, $r18, $r25, $r26;
        int $i0;
        android.content.pm.ApplicationInfo $r7, $r9;
        java.lang.Thread $r8;
        android.app.LoadedApk$WarningContextClassLoader $r10;
        java.lang.IllegalStateException $r13, $r20;
        java.lang.StringBuilder $r14, $r15, $r16, $r19, $r22, $r23, $r24, $r27;

        r0 := @this: android.app.LoadedApk;

        r1 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

     label01:
        $r5 = r0.<android.app.LoadedApk: java.lang.String mPackageName>;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        r3 = interfaceinvoke r1.<android.content.pm.IPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>($r5, 0, $i0);

     label02:
        if r3 != null goto label04;

        $r13 = new java.lang.IllegalStateException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to get package info for ");

        $r17 = r0.<android.app.LoadedApk: java.lang.String mPackageName>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; is package not installed?");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r18);

        throw $r13;

     label03:
        $r21 := @caughtexception;

        r2 = $r21;

        $r20 = new java.lang.IllegalStateException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to get package info for ");

        $r26 = r0.<android.app.LoadedApk: java.lang.String mPackageName>;

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r24 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; is system dying?");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r25, r2);

        throw $r20;

     label04:
        $r6 = r3.<android.content.pm.PackageInfo: java.lang.String sharedUserId>;

        if $r6 == null goto label10;

        z0 = 1;

     label05:
        $r7 = r3.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        if $r7 == null goto label11;

        $r11 = r0.<android.app.LoadedApk: java.lang.String mPackageName>;

        $r9 = r3.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r12 = $r9.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $z3 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z3 != 0 goto label11;

        z1 = 1;

     label06:
        if z0 != 0 goto label07;

        if z1 == 0 goto label12;

     label07:
        z2 = 1;

     label08:
        if z2 == 0 goto label13;

        $r10 = new android.app.LoadedApk$WarningContextClassLoader;

        specialinvoke $r10.<android.app.LoadedApk$WarningContextClassLoader: void <init>(android.app.LoadedApk$1)>(null);

        r4 = $r10;

     label09:
        $r8 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r8.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>(r4);

        return;

     label10:
        z0 = 0;

        goto label05;

     label11:
        z1 = 0;

        goto label06;

     label12:
        z2 = 0;

        goto label08;

     label13:
        r4 = r0.<android.app.LoadedApk: java.lang.ClassLoader mClassLoader>;

        goto label09;

        catch android.os.RemoteException from label01 to label02 with label03;
    }

    public android.content.IIntentReceiver forgetReceiverDispatcher(android.content.Context, android.content.BroadcastReceiver)
    {
        android.app.LoadedApk r0;
        android.content.Context r1;
        android.content.BroadcastReceiver r2;
        android.util.ArrayMap r3, r5, r8, r10, $r13, $r14, $r40, $r41, $r42, $r47;
        java.lang.Throwable r4, $r45;
        android.app.LoadedApk$ReceiverDispatcher r6, r12;
        android.content.IIntentReceiver r7;
        java.lang.IllegalArgumentException r9, $r16, $r32, $r38;
        java.lang.RuntimeException r11;
        java.lang.Object $r15, $r17, $r27, $r34, $r39;
        java.lang.StringBuilder $r18, $r19, $r21, $r22, $r24, $r25, $r28, $r29, $r30, $r31, $r35, $r36;
        java.lang.String $r20, $r26, $r33;
        java.lang.IllegalStateException $r23;
        boolean $z0;
        int $i0;

        r0 := @this: android.app.LoadedApk;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.BroadcastReceiver;

        r3 = r0.<android.app.LoadedApk: android.util.ArrayMap mReceivers>;

        entermonitor r3;

     label01:
        $r13 = r0.<android.app.LoadedApk: android.util.ArrayMap mReceivers>;

        $r15 = virtualinvoke $r13.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (android.util.ArrayMap) $r15;

     label02:
        if r5 == null goto label12;

     label03:
        $r34 = virtualinvoke r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        r6 = (android.app.LoadedApk$ReceiverDispatcher) $r34;

     label04:
        if r6 == null goto label12;

     label05:
        virtualinvoke r5.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r2);

        $i0 = virtualinvoke r5.<android.util.ArrayMap: int size()>();

        if $i0 != 0 goto label06;

        $r47 = r0.<android.app.LoadedApk: android.util.ArrayMap mReceivers>;

        virtualinvoke $r47.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

     label06:
        $z0 = virtualinvoke r2.<android.content.BroadcastReceiver: boolean getDebugUnregister()>();

        if $z0 == 0 goto label10;

        $r40 = r0.<android.app.LoadedApk: android.util.ArrayMap mUnregisteredReceivers>;

        $r39 = virtualinvoke $r40.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r8 = (android.util.ArrayMap) $r39;

     label07:
        if r8 != null goto label09;

     label08:
        $r42 = new android.util.ArrayMap;

        specialinvoke $r42.<android.util.ArrayMap: void <init>()>();

        r8 = $r42;

        $r41 = r0.<android.app.LoadedApk: android.util.ArrayMap mUnregisteredReceivers>;

        virtualinvoke $r41.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r8);

     label09:
        $r38 = new java.lang.IllegalArgumentException;

        specialinvoke $r38.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Originally unregistered here:");

        r9 = $r38;

        virtualinvoke r9.<java.lang.RuntimeException: java.lang.Throwable fillInStackTrace()>();

        virtualinvoke r6.<android.app.LoadedApk$ReceiverDispatcher: void setUnregisterLocation(java.lang.RuntimeException)>(r9);

        virtualinvoke r8.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r6);

     label10:
        r6.<android.app.LoadedApk$ReceiverDispatcher: boolean mForgotten> = 1;

        r7 = virtualinvoke r6.<android.app.LoadedApk$ReceiverDispatcher: android.content.IIntentReceiver getIIntentReceiver()>();

        exitmonitor r3;

     label11:
        return r7;

     label12:
        $r14 = r0.<android.app.LoadedApk: android.util.ArrayMap mUnregisteredReceivers>;

        $r17 = virtualinvoke $r14.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r10 = (android.util.ArrayMap) $r17;

     label13:
        if r10 == null goto label20;

     label14:
        $r27 = virtualinvoke r10.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        r12 = (android.app.LoadedApk$ReceiverDispatcher) $r27;

     label15:
        if r12 == null goto label20;

     label16:
        r11 = virtualinvoke r12.<android.app.LoadedApk$ReceiverDispatcher: java.lang.RuntimeException getUnregisterLocation()>();

        $r32 = new java.lang.IllegalArgumentException;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unregistering Receiver ");

        $r35 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that was already unregistered");

        $r33 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r33, r11);

        throw $r32;

     label17:
        $r45 := @caughtexception;

        r4 = $r45;

     label18:
        exitmonitor r3;

     label19:
        throw r4;

     label20:
        if r1 != null goto label22;

     label21:
        $r23 = new java.lang.IllegalStateException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unbinding Receiver ");

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from Context that is no longer in use: ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r26 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r26);

        throw $r23;

     label22:
        $r16 = new java.lang.IllegalArgumentException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Receiver not registered: ");

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20);

     label23:
        throw $r16;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Throwable from label06 to label07 with label17;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.lang.Throwable from label14 to label15 with label17;
        catch java.lang.Throwable from label16 to label17 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
        catch java.lang.Throwable from label21 to label22 with label17;
        catch java.lang.Throwable from label22 to label23 with label17;
    }

    public final android.app.IServiceConnection forgetServiceDispatcher(android.content.Context, android.content.ServiceConnection)
    {
        android.app.LoadedApk r0;
        android.content.Context r1;
        android.content.ServiceConnection r2;
        android.util.ArrayMap r3, r5, r8, r10, $r13, $r14, $r38, $r43, $r45, $r46;
        java.lang.Throwable r4, $r47;
        android.app.LoadedApk$ServiceDispatcher r6, r12;
        android.app.IServiceConnection r7;
        java.lang.IllegalArgumentException r9, $r16, $r32, $r41;
        java.lang.RuntimeException r11;
        java.lang.Object $r15, $r17, $r27, $r34, $r42;
        java.lang.StringBuilder $r18, $r19, $r21, $r22, $r24, $r25, $r28, $r29, $r30, $r31, $r35, $r36;
        java.lang.String $r20, $r26, $r33;
        java.lang.IllegalStateException $r23;
        int $i0, $i1, $i2;

        r0 := @this: android.app.LoadedApk;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.ServiceConnection;

        r3 = r0.<android.app.LoadedApk: android.util.ArrayMap mServices>;

        entermonitor r3;

     label01:
        $r13 = r0.<android.app.LoadedApk: android.util.ArrayMap mServices>;

        $r15 = virtualinvoke $r13.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (android.util.ArrayMap) $r15;

     label02:
        if r5 == null goto label12;

     label03:
        $r34 = virtualinvoke r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        r6 = (android.app.LoadedApk$ServiceDispatcher) $r34;

     label04:
        if r6 == null goto label12;

     label05:
        virtualinvoke r5.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r2);

        virtualinvoke r6.<android.app.LoadedApk$ServiceDispatcher: void doForget()>();

        $i1 = virtualinvoke r5.<android.util.ArrayMap: int size()>();

        if $i1 != 0 goto label06;

        $r43 = r0.<android.app.LoadedApk: android.util.ArrayMap mServices>;

        virtualinvoke $r43.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

     label06:
        $i0 = virtualinvoke r6.<android.app.LoadedApk$ServiceDispatcher: int getFlags()>();

        $i2 = 2 & $i0;

        if $i2 == 0 goto label10;

        $r38 = r0.<android.app.LoadedApk: android.util.ArrayMap mUnboundServices>;

        $r42 = virtualinvoke $r38.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r8 = (android.util.ArrayMap) $r42;

     label07:
        if r8 != null goto label09;

     label08:
        $r46 = new android.util.ArrayMap;

        specialinvoke $r46.<android.util.ArrayMap: void <init>()>();

        r8 = $r46;

        $r45 = r0.<android.app.LoadedApk: android.util.ArrayMap mUnboundServices>;

        virtualinvoke $r45.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r8);

     label09:
        $r41 = new java.lang.IllegalArgumentException;

        specialinvoke $r41.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Originally unbound here:");

        r9 = $r41;

        virtualinvoke r9.<java.lang.RuntimeException: java.lang.Throwable fillInStackTrace()>();

        virtualinvoke r6.<android.app.LoadedApk$ServiceDispatcher: void setUnbindLocation(java.lang.RuntimeException)>(r9);

        virtualinvoke r8.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r6);

     label10:
        r7 = virtualinvoke r6.<android.app.LoadedApk$ServiceDispatcher: android.app.IServiceConnection getIServiceConnection()>();

        exitmonitor r3;

     label11:
        return r7;

     label12:
        $r14 = r0.<android.app.LoadedApk: android.util.ArrayMap mUnboundServices>;

        $r17 = virtualinvoke $r14.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r10 = (android.util.ArrayMap) $r17;

     label13:
        if r10 == null goto label20;

     label14:
        $r27 = virtualinvoke r10.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        r12 = (android.app.LoadedApk$ServiceDispatcher) $r27;

     label15:
        if r12 == null goto label20;

     label16:
        r11 = virtualinvoke r12.<android.app.LoadedApk$ServiceDispatcher: java.lang.RuntimeException getUnbindLocation()>();

        $r32 = new java.lang.IllegalArgumentException;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unbinding Service ");

        $r35 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that was already unbound");

        $r33 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r33, r11);

        throw $r32;

     label17:
        $r47 := @caughtexception;

        r4 = $r47;

     label18:
        exitmonitor r3;

     label19:
        throw r4;

     label20:
        if r1 != null goto label22;

     label21:
        $r23 = new java.lang.IllegalStateException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unbinding Service ");

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from Context that is no longer in use: ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r26 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r26);

        throw $r23;

     label22:
        $r16 = new java.lang.IllegalArgumentException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service not registered: ");

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20);

     label23:
        throw $r16;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Throwable from label06 to label07 with label17;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.lang.Throwable from label14 to label15 with label17;
        catch java.lang.Throwable from label16 to label17 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
        catch java.lang.Throwable from label21 to label22 with label17;
        catch java.lang.Throwable from label22 to label23 with label17;
    }

    public java.lang.String getAppDir()
    {
        android.app.LoadedApk r0;
        java.lang.String $r1;

        r0 := @this: android.app.LoadedApk;

        $r1 = r0.<android.app.LoadedApk: java.lang.String mAppDir>;

        return $r1;
    }

    android.app.Application getApplication()
    {
        android.app.LoadedApk r0;
        android.app.Application $r1;

        r0 := @this: android.app.LoadedApk;

        $r1 = r0.<android.app.LoadedApk: android.app.Application mApplication>;

        return $r1;
    }

    public android.content.pm.ApplicationInfo getApplicationInfo()
    {
        android.app.LoadedApk r0;
        android.content.pm.ApplicationInfo $r1;

        r0 := @this: android.app.LoadedApk;

        $r1 = r0.<android.app.LoadedApk: android.content.pm.ApplicationInfo mApplicationInfo>;

        return $r1;
    }

    public android.content.res.AssetManager getAssets(android.app.ActivityThread)
    {
        android.app.LoadedApk r0;
        android.app.ActivityThread r1;
        android.content.res.Resources $r2;
        android.content.res.AssetManager $r3;

        r0 := @this: android.app.LoadedApk;

        r1 := @parameter0: android.app.ActivityThread;

        $r2 = virtualinvoke r0.<android.app.LoadedApk: android.content.res.Resources getResources(android.app.ActivityThread)>(r1);

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.AssetManager getAssets()>();

        return $r3;
    }

    public java.lang.ClassLoader getClassLoader()
    {
        android.app.LoadedApk r0;
        java.lang.Throwable r1, $r43;
        java.lang.ClassLoader r2, r12, $r13, $r14, $r15, $r16, $r41, $r42;
        java.lang.String r3, r4, r5, r6, r7, r8, r9, $r17, $r22, $r37, $r40;
        boolean z0, z1, $z2, $z3, $z4;
        java.lang.String[] r10, $r32, $r36;
        android.os.StrictMode$ThreadPolicy r11;
        android.app.ActivityThread $r18, $r19, $r20, $r21, $r23;
        java.lang.StringBuilder $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r33, $r34, $r35, $r39;
        android.app.ApplicationLoaders $r38;

        r0 := @this: android.app.LoadedApk;

        entermonitor r0;

     label01:
        $r13 = r0.<android.app.LoadedApk: java.lang.ClassLoader mClassLoader>;

        if $r13 == null goto label03;

        r12 = r0.<android.app.LoadedApk: java.lang.ClassLoader mClassLoader>;

        exitmonitor r0;

     label02:
        return r12;

     label03:
        $z2 = r0.<android.app.LoadedApk: boolean mIncludeCode>;

        if $z2 == 0 goto label17;

        $r17 = r0.<android.app.LoadedApk: java.lang.String mPackageName>;

        $z3 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>("android");

        if $z3 != 0 goto label17;

        r3 = r0.<android.app.LoadedApk: java.lang.String mAppDir>;

        r4 = r0.<android.app.LoadedApk: java.lang.String mLibDir>;

        $r19 = r0.<android.app.LoadedApk: android.app.ActivityThread mActivityThread>;

        r5 = $r19.<android.app.ActivityThread: java.lang.String mInstrumentationAppDir>;

        $r18 = r0.<android.app.LoadedApk: android.app.ActivityThread mActivityThread>;

        r6 = $r18.<android.app.ActivityThread: java.lang.String mInstrumentationAppLibraryDir>;

        $r21 = r0.<android.app.LoadedApk: android.app.ActivityThread mActivityThread>;

        r7 = $r21.<android.app.ActivityThread: java.lang.String mInstrumentationAppPackage>;

        $r20 = r0.<android.app.LoadedApk: android.app.ActivityThread mActivityThread>;

        r8 = $r20.<android.app.ActivityThread: java.lang.String mInstrumentedAppDir>;

        $r23 = r0.<android.app.LoadedApk: android.app.ActivityThread mActivityThread>;

        r9 = $r23.<android.app.ActivityThread: java.lang.String mInstrumentedAppLibraryDir>;

        $r22 = r0.<android.app.LoadedApk: java.lang.String mAppDir>;

        $z4 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z4 != 0 goto label05;

        $r40 = r0.<android.app.LoadedApk: java.lang.String mAppDir>;

        z1 = virtualinvoke $r40.<java.lang.String: boolean equals(java.lang.Object)>(r8);

     label04:
        r10 = null;

        if z1 == 0 goto label08;

     label05:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r25 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        r3 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r28 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        r4 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        z0 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>(r5);

     label06:
        r10 = null;

        if z0 != 0 goto label08;

     label07:
        r10 = staticinvoke <android.app.LoadedApk: java.lang.String[] getLibrariesFor(java.lang.String)>(r7);

     label08:
        $r32 = r0.<android.app.LoadedApk: java.lang.String[] mSharedLibraries>;

        if $r32 != null goto label10;

     label09:
        if r10 == null goto label11;

     label10:
        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r36 = r0.<android.app.LoadedApk: java.lang.String[] mSharedLibraries>;

        $r37 = staticinvoke <android.app.LoadedApk: java.lang.String combineLibs(java.lang.String[],java.lang.String[])>($r36, r10);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r39 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        r3 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

     label11:
        r11 = staticinvoke <android.os.StrictMode: android.os.StrictMode$ThreadPolicy allowThreadDiskReads()>();

        $r38 = staticinvoke <android.app.ApplicationLoaders: android.app.ApplicationLoaders getDefault()>();

        $r42 = r0.<android.app.LoadedApk: java.lang.ClassLoader mBaseClassLoader>;

        $r41 = virtualinvoke $r38.<android.app.ApplicationLoaders: java.lang.ClassLoader getClassLoader(java.lang.String,java.lang.String,java.lang.ClassLoader)>(r3, r4, $r42);

        r0.<android.app.LoadedApk: java.lang.ClassLoader mClassLoader> = $r41;

        specialinvoke r0.<android.app.LoadedApk: void initializeJavaContextClassLoader()>();

        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r11);

     label12:
        r2 = r0.<android.app.LoadedApk: java.lang.ClassLoader mClassLoader>;

        exitmonitor r0;

     label13:
        return r2;

     label14:
        $r43 := @caughtexception;

        r1 = $r43;

     label15:
        exitmonitor r0;

     label16:
        throw r1;

     label17:
        $r15 = r0.<android.app.LoadedApk: java.lang.ClassLoader mBaseClassLoader>;

        if $r15 != null goto label19;

        $r16 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();

        r0.<android.app.LoadedApk: java.lang.ClassLoader mClassLoader> = $r16;

     label18:
        goto label12;

     label19:
        $r14 = r0.<android.app.LoadedApk: java.lang.ClassLoader mBaseClassLoader>;

        r0.<android.app.LoadedApk: java.lang.ClassLoader mClassLoader> = $r14;

     label20:
        goto label12;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label11 to label12 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
        catch java.lang.Throwable from label17 to label18 with label14;
        catch java.lang.Throwable from label19 to label20 with label14;
    }

    public android.content.res.CompatibilityInfo getCompatibilityInfo()
    {
        android.app.LoadedApk r0;
        android.view.DisplayAdjustments $r1;
        android.content.res.CompatibilityInfo $r2;

        r0 := @this: android.app.LoadedApk;

        $r1 = r0.<android.app.LoadedApk: android.view.DisplayAdjustments mDisplayAdjustments>;

        $r2 = virtualinvoke $r1.<android.view.DisplayAdjustments: android.content.res.CompatibilityInfo getCompatibilityInfo()>();

        return $r2;
    }

    public java.lang.String getDataDir()
    {
        android.app.LoadedApk r0;
        java.lang.String $r1;

        r0 := @this: android.app.LoadedApk;

        $r1 = r0.<android.app.LoadedApk: java.lang.String mDataDir>;

        return $r1;
    }

    public java.io.File getDataDirFile()
    {
        android.app.LoadedApk r0;
        java.io.File $r1;

        r0 := @this: android.app.LoadedApk;

        $r1 = r0.<android.app.LoadedApk: java.io.File mDataDirFile>;

        return $r1;
    }

    public java.lang.String getLibDir()
    {
        android.app.LoadedApk r0;
        java.lang.String $r1;

        r0 := @this: android.app.LoadedApk;

        $r1 = r0.<android.app.LoadedApk: java.lang.String mLibDir>;

        return $r1;
    }

    public java.lang.String getPackageName()
    {
        android.app.LoadedApk r0;
        java.lang.String $r1;

        r0 := @this: android.app.LoadedApk;

        $r1 = r0.<android.app.LoadedApk: java.lang.String mPackageName>;

        return $r1;
    }

    public android.content.IIntentReceiver getReceiverDispatcher(android.content.BroadcastReceiver, android.content.Context, android.os.Handler, android.app.Instrumentation, boolean)
    {
        android.app.LoadedApk r0;
        android.content.BroadcastReceiver r1;
        android.content.Context r2;
        android.os.Handler r3;
        android.app.Instrumentation r4;
        boolean z0;
        android.util.ArrayMap r5, r6, r7, r12, $r15, $r18, $r20;
        android.app.LoadedApk$ReceiverDispatcher r8, r10, r13, $r14;
        java.lang.Throwable r9, $r21, $r23, $r24;
        android.content.IIntentReceiver r11;
        java.lang.Object $r19, $r22;

        r0 := @this: android.app.LoadedApk;

        r1 := @parameter0: android.content.BroadcastReceiver;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: android.os.Handler;

        r4 := @parameter3: android.app.Instrumentation;

        z0 := @parameter4: boolean;

        r5 = r0.<android.app.LoadedApk: android.util.ArrayMap mReceivers>;

        entermonitor r5;

        r6 = null;

        if z0 == 0 goto label22;

     label01:
        $r20 = r0.<android.app.LoadedApk: android.util.ArrayMap mReceivers>;

        $r19 = virtualinvoke $r20.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        r6 = (android.util.ArrayMap) $r19;

     label02:
        if r6 == null goto label22;

     label03:
        $r22 = virtualinvoke r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r13 = (android.app.LoadedApk$ReceiverDispatcher) $r22;

     label04:
        r7 = r6;

        r8 = r13;

     label05:
        if r8 != null goto label13;

     label06:
        $r14 = new android.app.LoadedApk$ReceiverDispatcher;

        specialinvoke $r14.<android.app.LoadedApk$ReceiverDispatcher: void <init>(android.content.BroadcastReceiver,android.content.Context,android.os.Handler,android.app.Instrumentation,boolean)>(r1, r2, r3, r4, z0);

        r10 = $r14;

     label07:
        if z0 == 0 goto label21;

        if r7 != null goto label20;

     label08:
        $r15 = new android.util.ArrayMap;

        specialinvoke $r15.<android.util.ArrayMap: void <init>()>();

        r12 = $r15;

     label09:
        $r18 = r0.<android.app.LoadedApk: android.util.ArrayMap mReceivers>;

        virtualinvoke $r18.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r12);

     label10:
        virtualinvoke r12.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r10);

     label11:
        r10.<android.app.LoadedApk$ReceiverDispatcher: boolean mForgotten> = 0;

        r11 = virtualinvoke r10.<android.app.LoadedApk$ReceiverDispatcher: android.content.IIntentReceiver getIIntentReceiver()>();

        exitmonitor r5;

     label12:
        return r11;

     label13:
        virtualinvoke r8.<android.app.LoadedApk$ReceiverDispatcher: void validate(android.content.Context,android.os.Handler)>(r2, r3);

     label14:
        r10 = r8;

        goto label11;

     label15:
        $r23 := @caughtexception;

        r9 = $r23;

     label16:
        exitmonitor r5;

     label17:
        throw r9;

     label18:
        $r21 := @caughtexception;

        r9 = $r21;

        goto label16;

     label19:
        $r24 := @caughtexception;

        r9 = $r24;

        goto label16;

     label20:
        r12 = r7;

        goto label10;

     label21:
        goto label11;

     label22:
        r7 = r6;

        r8 = null;

        goto label05;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label06 to label07 with label18;
        catch java.lang.Throwable from label08 to label09 with label19;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label18;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    public java.lang.String getResDir()
    {
        android.app.LoadedApk r0;
        java.lang.String $r1;

        r0 := @this: android.app.LoadedApk;

        $r1 = r0.<android.app.LoadedApk: java.lang.String mResDir>;

        return $r1;
    }

    public android.content.res.Resources getResources(android.app.ActivityThread)
    {
        android.app.LoadedApk r0;
        android.app.ActivityThread r1;
        android.content.res.Resources $r2, $r3, $r5;
        java.lang.String $r4;

        r0 := @this: android.app.LoadedApk;

        r1 := @parameter0: android.app.ActivityThread;

        $r2 = r0.<android.app.LoadedApk: android.content.res.Resources mResources>;

        if $r2 != null goto label1;

        $r4 = r0.<android.app.LoadedApk: java.lang.String mResDir>;

        $r5 = virtualinvoke r1.<android.app.ActivityThread: android.content.res.Resources getTopLevelResources(java.lang.String,int,android.content.res.Configuration,android.app.LoadedApk)>($r4, 0, null, r0);

        r0.<android.app.LoadedApk: android.content.res.Resources mResources> = $r5;

     label1:
        $r3 = r0.<android.app.LoadedApk: android.content.res.Resources mResources>;

        return $r3;
    }

    public final android.app.IServiceConnection getServiceDispatcher(android.content.ServiceConnection, android.content.Context, android.os.Handler, int)
    {
        android.app.LoadedApk r0;
        android.content.ServiceConnection r1;
        android.content.Context r2;
        android.os.Handler r3;
        int i0;
        android.util.ArrayMap r4, r6, $r11, $r15, $r16;
        java.lang.Throwable r5, $r19, $r20;
        android.app.LoadedApk$ServiceDispatcher r7, r8, r9, $r14;
        android.app.IServiceConnection r10;
        java.lang.Object $r12, $r17;

        r0 := @this: android.app.LoadedApk;

        r1 := @parameter0: android.content.ServiceConnection;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: android.os.Handler;

        i0 := @parameter3: int;

        r4 = r0.<android.app.LoadedApk: android.util.ArrayMap mServices>;

        entermonitor r4;

     label01:
        $r11 = r0.<android.app.LoadedApk: android.util.ArrayMap mServices>;

        $r12 = virtualinvoke $r11.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        r6 = (android.util.ArrayMap) $r12;

     label02:
        if r6 == null goto label18;

     label03:
        $r17 = virtualinvoke r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r7 = (android.app.LoadedApk$ServiceDispatcher) $r17;

     label04:
        r8 = r7;

     label05:
        if r8 != null goto label12;

     label06:
        $r14 = new android.app.LoadedApk$ServiceDispatcher;

        specialinvoke $r14.<android.app.LoadedApk$ServiceDispatcher: void <init>(android.content.ServiceConnection,android.content.Context,android.os.Handler,int)>(r1, r2, r3, i0);

        r9 = $r14;

     label07:
        if r6 != null goto label09;

     label08:
        $r16 = new android.util.ArrayMap;

        specialinvoke $r16.<android.util.ArrayMap: void <init>()>();

        r6 = $r16;

        $r15 = r0.<android.app.LoadedApk: android.util.ArrayMap mServices>;

        virtualinvoke $r15.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r6);

     label09:
        virtualinvoke r6.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r9);

     label10:
        r10 = virtualinvoke r9.<android.app.LoadedApk$ServiceDispatcher: android.app.IServiceConnection getIServiceConnection()>();

        exitmonitor r4;

     label11:
        return r10;

     label12:
        virtualinvoke r8.<android.app.LoadedApk$ServiceDispatcher: void validate(android.content.Context,android.os.Handler)>(r2, r3);

     label13:
        r9 = r8;

        goto label10;

     label14:
        $r19 := @caughtexception;

        r5 = $r19;

     label15:
        exitmonitor r4;

     label16:
        throw r5;

     label17:
        $r20 := @caughtexception;

        r5 = $r20;

        goto label15;

     label18:
        r8 = null;

        goto label05;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label06 to label07 with label17;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    void installSystemApplicationInfo(android.content.pm.ApplicationInfo)
    {
        android.app.LoadedApk r0;
        android.content.pm.ApplicationInfo r1;
        boolean $z0, $z1;
        java.lang.String $r2;
        java.lang.AssertionError $r3;

        r0 := @this: android.app.LoadedApk;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        $z0 = <android.app.LoadedApk: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r2 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("android");

        if $z1 != 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        r0.<android.app.LoadedApk: android.content.pm.ApplicationInfo mApplicationInfo> = r1;

        return;
    }

    public boolean isSecurityViolation()
    {
        android.app.LoadedApk r0;
        boolean $z0;

        r0 := @this: android.app.LoadedApk;

        $z0 = r0.<android.app.LoadedApk: boolean mSecurityViolation>;

        return $z0;
    }

    public android.app.Application makeApplication(boolean, android.app.Instrumentation)
    {
        android.app.LoadedApk r0;
        boolean z0, $z2, $z3;
        android.app.Instrumentation r1, $r12, $r26;
        android.app.Application r2, $r8;
        java.lang.String r3, $r19, $r24, $r27, $r32, $r36;
        java.lang.Exception r4, r5, $r15, $r28;
        java.lang.ClassLoader r6;
        android.app.ContextImpl r7;
        android.content.pm.ApplicationInfo $r9;
        android.app.ActivityThread $r10, $r11, $r14, $r25;
        java.util.ArrayList $r13;
        java.lang.RuntimeException $r16, $r31;
        java.lang.StringBuilder $r17, $r18, $r21, $r22, $r23, $r29, $r30, $r33, $r34, $r35;
        java.lang.Class $r20;

        r0 := @this: android.app.LoadedApk;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.app.Instrumentation;

        $r8 = r0.<android.app.LoadedApk: android.app.Application mApplication>;

        if $r8 == null goto label2;

        r2 = r0.<android.app.LoadedApk: android.app.Application mApplication>;

     label1:
        return r2;

     label2:
        r2 = null;

        $r9 = r0.<android.app.LoadedApk: android.content.pm.ApplicationInfo mApplicationInfo>;

        r3 = $r9.<android.content.pm.ApplicationInfo: java.lang.String className>;

        if z0 != 0 goto label3;

        if r3 != null goto label4;

     label3:
        r3 = "android.app.Application";

     label4:
        r6 = virtualinvoke r0.<android.app.LoadedApk: java.lang.ClassLoader getClassLoader()>();

        $r10 = r0.<android.app.LoadedApk: android.app.ActivityThread mActivityThread>;

        r7 = staticinvoke <android.app.ContextImpl: android.app.ContextImpl createAppContext(android.app.ActivityThread,android.app.LoadedApk)>($r10, r0);

        $r11 = r0.<android.app.LoadedApk: android.app.ActivityThread mActivityThread>;

        $r12 = $r11.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        r2 = virtualinvoke $r12.<android.app.Instrumentation: android.app.Application newApplication(java.lang.ClassLoader,java.lang.String,android.content.Context)>(r6, r3, r7);

        virtualinvoke r7.<android.app.ContextImpl: void setOuterContext(android.content.Context)>(r2);

     label5:
        $r14 = r0.<android.app.LoadedApk: android.app.ActivityThread mActivityThread>;

        $r13 = $r14.<android.app.ActivityThread: java.util.ArrayList mAllApplications>;

        virtualinvoke $r13.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        r0.<android.app.LoadedApk: android.app.Application mApplication> = r2;

        if r1 == null goto label1;

     label6:
        virtualinvoke r1.<android.app.Instrumentation: void callApplicationOnCreate(android.app.Application)>(r2);

     label7:
        return r2;

     label8:
        $r15 := @caughtexception;

        r5 = $r15;

        $z2 = virtualinvoke r1.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>(r2, r5);

        if $z2 != 0 goto label1;

        $r16 = new java.lang.RuntimeException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create application ");

        $r20 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r19 = virtualinvoke $r20.<java.lang.Class: java.lang.String getName()>();

        $r22 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r24 = virtualinvoke r5.<java.lang.Exception: java.lang.String toString()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r27, r5);

        throw $r16;

     label9:
        $r28 := @caughtexception;

        r4 = $r28;

        $r25 = r0.<android.app.LoadedApk: android.app.ActivityThread mActivityThread>;

        $r26 = $r25.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $z3 = virtualinvoke $r26.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>(r2, r4);

        if $z3 != 0 goto label5;

        $r31 = new java.lang.RuntimeException;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to instantiate application ");

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r32 = virtualinvoke r4.<java.lang.Exception: java.lang.String toString()>();

        $r33 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r36 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r31.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r36, r4);

        throw $r31;

        catch java.lang.Exception from label4 to label5 with label9;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    public void removeContextRegistrations(android.content.Context, java.lang.String, java.lang.String)
    {
        android.app.LoadedApk r0;
        android.content.Context r1;
        java.lang.String r2, r3, $r31, $r35, $r47, $r55;
        boolean z0;
        android.util.ArrayMap r4, r5, $r12, $r13, $r15, $r17;
        int i0, i1, $i2, $i4;
        android.app.LoadedApk$ServiceDispatcher r6;
        android.app.ServiceConnectionLeaked r7, $r20, $r32;
        android.app.IntentReceiverLeaked r9, $r36, $r46;
        android.app.LoadedApk$ReceiverDispatcher r10;
        java.lang.Object $r14, $r18, $r21, $r37;
        java.lang.StringBuilder $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r38, $r39, $r40, $r41, $r42, $r43, $r45, $r48, $r49;
        android.content.ServiceConnection $r29;
        java.lang.StackTraceElement[] $r30, $r54;
        android.app.IActivityManager $r33, $r50;
        android.app.IServiceConnection $r34;
        android.content.BroadcastReceiver $r44;
        android.content.IIntentReceiver $r51;
        android.os.RemoteException $r52, $r53;

        r0 := @this: android.app.LoadedApk;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        z0 = staticinvoke <android.os.StrictMode: boolean vmRegistrationLeaksEnabled()>();

        $r12 = r0.<android.app.LoadedApk: android.util.ArrayMap mReceivers>;

        $r14 = virtualinvoke $r12.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

        r4 = (android.util.ArrayMap) $r14;

        if r4 == null goto label04;

        i1 = 0;

     label01:
        $i4 = virtualinvoke r4.<android.util.ArrayMap: int size()>();

        if i1 >= $i4 goto label04;

        $r37 = virtualinvoke r4.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        r10 = (android.app.LoadedApk$ReceiverDispatcher) $r37;

        $r36 = new android.app.IntentReceiverLeaked;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r45 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has leaked IntentReceiver ");

        $r44 = virtualinvoke r10.<android.app.LoadedApk$ReceiverDispatcher: android.content.BroadcastReceiver getIntentReceiver()>();

        $r43 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r44);

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that was ");

        $r49 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("originally registered here. Are you missing a ");

        $r48 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("call to unregisterReceiver()?");

        $r47 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r36.<android.app.IntentReceiverLeaked: void <init>(java.lang.String)>($r47);

        r9 = $r36;

        $r46 = virtualinvoke r10.<android.app.LoadedApk$ReceiverDispatcher: android.app.IntentReceiverLeaked getLocation()>();

        $r54 = virtualinvoke $r46.<android.app.IntentReceiverLeaked: java.lang.StackTraceElement[] getStackTrace()>();

        virtualinvoke r9.<android.app.IntentReceiverLeaked: void setStackTrace(java.lang.StackTraceElement[])>($r54);

        $r55 = virtualinvoke r9.<android.app.IntentReceiverLeaked: java.lang.String getMessage()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityThread", $r55, r9);

        if z0 == 0 goto label02;

        staticinvoke <android.os.StrictMode: void onIntentReceiverLeaked(java.lang.Throwable)>(r9);

     label02:
        $r50 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r51 = virtualinvoke r10.<android.app.LoadedApk$ReceiverDispatcher: android.content.IIntentReceiver getIIntentReceiver()>();

        interfaceinvoke $r50.<android.app.IActivityManager: void unregisterReceiver(android.content.IIntentReceiver)>($r51);

     label03:
        i1 = i1 + 1;

        goto label01;

     label04:
        $r13 = r0.<android.app.LoadedApk: android.util.ArrayMap mUnregisteredReceivers>;

        virtualinvoke $r13.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

        $r15 = r0.<android.app.LoadedApk: android.util.ArrayMap mServices>;

        $r18 = virtualinvoke $r15.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

        r5 = (android.util.ArrayMap) $r18;

        if r5 == null goto label08;

        i0 = 0;

     label05:
        $i2 = virtualinvoke r5.<android.util.ArrayMap: int size()>();

        if i0 >= $i2 goto label08;

        $r21 = virtualinvoke r5.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i0);

        r6 = (android.app.LoadedApk$ServiceDispatcher) $r21;

        $r20 = new android.app.ServiceConnectionLeaked;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r22 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r28 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has leaked ServiceConnection ");

        $r29 = virtualinvoke r6.<android.app.LoadedApk$ServiceDispatcher: android.content.ServiceConnection getServiceConnection()>();

        $r26 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that was originally bound here");

        $r31 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<android.app.ServiceConnectionLeaked: void <init>(java.lang.String)>($r31);

        r7 = $r20;

        $r32 = virtualinvoke r6.<android.app.LoadedApk$ServiceDispatcher: android.app.ServiceConnectionLeaked getLocation()>();

        $r30 = virtualinvoke $r32.<android.app.ServiceConnectionLeaked: java.lang.StackTraceElement[] getStackTrace()>();

        virtualinvoke r7.<android.app.ServiceConnectionLeaked: void setStackTrace(java.lang.StackTraceElement[])>($r30);

        $r35 = virtualinvoke r7.<android.app.ServiceConnectionLeaked: java.lang.String getMessage()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityThread", $r35, r7);

        if z0 == 0 goto label06;

        staticinvoke <android.os.StrictMode: void onServiceConnectionLeaked(java.lang.Throwable)>(r7);

     label06:
        $r33 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r34 = virtualinvoke r6.<android.app.LoadedApk$ServiceDispatcher: android.app.IServiceConnection getIServiceConnection()>();

        interfaceinvoke $r33.<android.app.IActivityManager: boolean unbindService(android.app.IServiceConnection)>($r34);

     label07:
        virtualinvoke r6.<android.app.LoadedApk$ServiceDispatcher: void doForget()>();

        i0 = i0 + 1;

        goto label05;

     label08:
        $r17 = r0.<android.app.LoadedApk: android.util.ArrayMap mUnboundServices>;

        virtualinvoke $r17.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

        return;

     label09:
        $r53 := @caughtexception;

        goto label07;

     label10:
        $r52 := @caughtexception;

        goto label03;

        catch android.os.RemoteException from label02 to label03 with label10;
        catch android.os.RemoteException from label06 to label07 with label09;
    }

    public void setCompatibilityInfo(android.content.res.CompatibilityInfo)
    {
        android.app.LoadedApk r0;
        android.content.res.CompatibilityInfo r1;
        android.view.DisplayAdjustments $r2;

        r0 := @this: android.app.LoadedApk;

        r1 := @parameter0: android.content.res.CompatibilityInfo;

        $r2 = r0.<android.app.LoadedApk: android.view.DisplayAdjustments mDisplayAdjustments>;

        virtualinvoke $r2.<android.view.DisplayAdjustments: void setCompatibilityInfo(android.content.res.CompatibilityInfo)>(r1);

        return;
    }
}
