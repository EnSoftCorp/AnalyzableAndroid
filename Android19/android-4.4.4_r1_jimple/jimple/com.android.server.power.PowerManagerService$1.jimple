class com.android.server.power.PowerManagerService$1 extends java.lang.Object implements com.android.server.power.DisplayPowerController$Callbacks
{
    final com.android.server.power.PowerManagerService this$0;

    void <init>(com.android.server.power.PowerManagerService)
    {
        com.android.server.power.PowerManagerService$1 r0;
        com.android.server.power.PowerManagerService r1;

        r0 := @this: com.android.server.power.PowerManagerService$1;

        r1 := @parameter0: com.android.server.power.PowerManagerService;

        r0.<com.android.server.power.PowerManagerService$1: com.android.server.power.PowerManagerService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onProximityNegative()
    {
        com.android.server.power.PowerManagerService$1 r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r8;
        com.android.server.power.PowerManagerService $r3, $r4, $r5, $r6, $r7;
        long $l1;

        r0 := @this: com.android.server.power.PowerManagerService$1;

        $r3 = r0.<com.android.server.power.PowerManagerService$1: com.android.server.power.PowerManagerService this$0>;

        r1 = staticinvoke <com.android.server.power.PowerManagerService: java.lang.Object access$700(com.android.server.power.PowerManagerService)>($r3);

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.power.PowerManagerService$1: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: boolean access$1002(com.android.server.power.PowerManagerService,boolean)>($r4, 0);

        $r5 = r0.<com.android.server.power.PowerManagerService$1: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: int access$876(com.android.server.power.PowerManagerService,int)>($r5, 512);

        $r6 = r0.<com.android.server.power.PowerManagerService$1: com.android.server.power.PowerManagerService this$0>;

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        staticinvoke <com.android.server.power.PowerManagerService: boolean access$1100(com.android.server.power.PowerManagerService,long,int,int,int)>($r6, $l1, 0, 0, 1000);

        $r7 = r0.<com.android.server.power.PowerManagerService$1: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$900(com.android.server.power.PowerManagerService)>($r7);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onProximityPositive()
    {
        com.android.server.power.PowerManagerService$1 r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r7;
        com.android.server.power.PowerManagerService $r3, $r4, $r5, $r6;

        r0 := @this: com.android.server.power.PowerManagerService$1;

        $r3 = r0.<com.android.server.power.PowerManagerService$1: com.android.server.power.PowerManagerService this$0>;

        r1 = staticinvoke <com.android.server.power.PowerManagerService: java.lang.Object access$700(com.android.server.power.PowerManagerService)>($r3);

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.power.PowerManagerService$1: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: boolean access$1002(com.android.server.power.PowerManagerService,boolean)>($r4, 1);

        $r5 = r0.<com.android.server.power.PowerManagerService$1: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: int access$876(com.android.server.power.PowerManagerService,int)>($r5, 512);

        $r6 = r0.<com.android.server.power.PowerManagerService$1: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$900(com.android.server.power.PowerManagerService)>($r6);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onStateChanged()
    {
        com.android.server.power.PowerManagerService$1 r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r6;
        com.android.server.power.PowerManagerService $r3, $r4, $r5;

        r0 := @this: com.android.server.power.PowerManagerService$1;

        $r3 = r0.<com.android.server.power.PowerManagerService$1: com.android.server.power.PowerManagerService this$0>;

        r1 = staticinvoke <com.android.server.power.PowerManagerService: java.lang.Object access$700(com.android.server.power.PowerManagerService)>($r3);

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.power.PowerManagerService$1: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: int access$876(com.android.server.power.PowerManagerService,int)>($r4, 8);

        $r5 = r0.<com.android.server.power.PowerManagerService$1: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$900(com.android.server.power.PowerManagerService)>($r5);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
