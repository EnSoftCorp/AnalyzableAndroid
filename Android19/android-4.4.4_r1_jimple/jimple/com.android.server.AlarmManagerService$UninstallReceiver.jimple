class com.android.server.AlarmManagerService$UninstallReceiver extends android.content.BroadcastReceiver
{
    final com.android.server.AlarmManagerService this$0;

    public void <init>(com.android.server.AlarmManagerService)
    {
        com.android.server.AlarmManagerService$UninstallReceiver r0;
        com.android.server.AlarmManagerService r1;
        android.content.IntentFilter r2, r3, $r4, $r7;
        android.content.Context $r5, $r8;

        r0 := @this: com.android.server.AlarmManagerService$UninstallReceiver;

        r1 := @parameter0: com.android.server.AlarmManagerService;

        r0.<com.android.server.AlarmManagerService$UninstallReceiver: com.android.server.AlarmManagerService this$0> = r1;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        $r4 = new android.content.IntentFilter;

        specialinvoke $r4.<android.content.IntentFilter: void <init>()>();

        r2 = $r4;

        virtualinvoke r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_REMOVED");

        virtualinvoke r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_RESTARTED");

        virtualinvoke r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.QUERY_PACKAGE_RESTART");

        virtualinvoke r2.<android.content.IntentFilter: void addDataScheme(java.lang.String)>("package");

        $r5 = staticinvoke <com.android.server.AlarmManagerService: android.content.Context access$600(com.android.server.AlarmManagerService)>(r1);

        virtualinvoke $r5.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>(r0, r2);

        $r7 = new android.content.IntentFilter;

        specialinvoke $r7.<android.content.IntentFilter: void <init>()>();

        r3 = $r7;

        virtualinvoke r3.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE");

        virtualinvoke r3.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_STOPPED");

        $r8 = staticinvoke <com.android.server.AlarmManagerService: android.content.Context access$600(com.android.server.AlarmManagerService)>(r1);

        virtualinvoke $r8.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>(r0, r3);

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        com.android.server.AlarmManagerService$UninstallReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;
        java.lang.Object r3;
        java.lang.Throwable r4, $r25;
        java.lang.String r5, r8, r10, r13, $r14, $r15, $r16, $r17;
        android.net.Uri r6;
        java.lang.String[] r7, r9, r11, $r20;
        int i0, i1, i2, i3, i4, $i5;
        com.android.server.AlarmManagerService $r12, $r18, $r19, $r23, $r24;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.HashMap $r21;

        r0 := @this: com.android.server.AlarmManagerService$UninstallReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        $r12 = r0.<com.android.server.AlarmManagerService$UninstallReceiver: com.android.server.AlarmManagerService this$0>;

        r3 = staticinvoke <com.android.server.AlarmManagerService: java.lang.Object access$700(com.android.server.AlarmManagerService)>($r12);

        entermonitor r3;

     label01:
        r5 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();

        $r14 = "android.intent.action.QUERY_PACKAGE_RESTART";

        $z0 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z0 == 0 goto label11;

        r11 = virtualinvoke r2.<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)>("android.intent.extra.PACKAGES");

        i4 = lengthof r11;

     label02:
        i3 = 0;

     label03:
        if i3 >= i4 goto label06;

     label04:
        r13 = r11[i3];

        $r24 = r0.<com.android.server.AlarmManagerService$UninstallReceiver: com.android.server.AlarmManagerService this$0>;

        $z5 = virtualinvoke $r24.<com.android.server.AlarmManagerService: boolean lookForPackageLocked(java.lang.String)>(r13);

        if $z5 == 0 goto label34;

        virtualinvoke r0.<com.android.server.AlarmManagerService$UninstallReceiver: void setResultCode(int)>(-1);

        exitmonitor r3;

     label05:
        return;

     label06:
        exitmonitor r3;

     label07:
        return;

     label08:
        $r25 := @caughtexception;

        r4 = $r25;

     label09:
        exitmonitor r3;

     label10:
        throw r4;

     label11:
        $r15 = "android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE";

        $z1 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z1 == 0 goto label20;

        r7 = virtualinvoke r2.<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)>("android.intent.extra.changed_package_list");

     label12:
        if r7 == null goto label32;

     label13:
        $i5 = lengthof r7;

        if $i5 <= 0 goto label32;

     label14:
        r9 = r7;

     label15:
        i0 = lengthof r9;

     label16:
        i1 = 0;

     label17:
        if i1 >= i0 goto label32;

     label18:
        r10 = r9[i1];

        $r18 = r0.<com.android.server.AlarmManagerService$UninstallReceiver: com.android.server.AlarmManagerService this$0>;

        virtualinvoke $r18.<com.android.server.AlarmManagerService: void removeLocked(java.lang.String)>(r10);

        $r19 = r0.<com.android.server.AlarmManagerService$UninstallReceiver: com.android.server.AlarmManagerService this$0>;

        $r21 = staticinvoke <com.android.server.AlarmManagerService: java.util.HashMap access$1800(com.android.server.AlarmManagerService)>($r19);

        virtualinvoke $r21.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r10);

     label19:
        i1 = i1 + 1;

        goto label17;

     label20:
        $r16 = "android.intent.action.USER_STOPPED";

        $z2 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z2 == 0 goto label24;

        i2 = virtualinvoke r2.<android.content.Intent: int getIntExtra(java.lang.String,int)>("android.intent.extra.user_handle", -1);

     label21:
        r7 = null;

        if i2 < 0 goto label12;

     label22:
        $r23 = r0.<com.android.server.AlarmManagerService$UninstallReceiver: com.android.server.AlarmManagerService this$0>;

        virtualinvoke $r23.<com.android.server.AlarmManagerService: void removeUserLocked(int)>(i2);

     label23:
        r7 = null;

        goto label12;

     label24:
        $r17 = "android.intent.action.PACKAGE_REMOVED";

        $z3 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z3 == 0 goto label26;

        $z4 = virtualinvoke r2.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>("android.intent.extra.REPLACING", 0);

        if $z4 == 0 goto label26;

        exitmonitor r3;

     label25:
        return;

     label26:
        r6 = virtualinvoke r2.<android.content.Intent: android.net.Uri getData()>();

     label27:
        r7 = null;

        if r6 == null goto label12;

     label28:
        r8 = virtualinvoke r6.<android.net.Uri: java.lang.String getSchemeSpecificPart()>();

     label29:
        r7 = null;

        if r8 == null goto label12;

     label30:
        $r20 = newarray (java.lang.String)[1];

        $r20[0] = r8;

        r7 = $r20;

     label31:
        goto label12;

     label32:
        exitmonitor r3;

     label33:
        return;

     label34:
        i3 = i3 + 1;

        goto label03;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label11 to label12 with label08;
        catch java.lang.Throwable from label13 to label14 with label08;
        catch java.lang.Throwable from label15 to label16 with label08;
        catch java.lang.Throwable from label18 to label19 with label08;
        catch java.lang.Throwable from label20 to label21 with label08;
        catch java.lang.Throwable from label22 to label23 with label08;
        catch java.lang.Throwable from label24 to label25 with label08;
        catch java.lang.Throwable from label26 to label27 with label08;
        catch java.lang.Throwable from label28 to label29 with label08;
        catch java.lang.Throwable from label30 to label31 with label08;
        catch java.lang.Throwable from label32 to label33 with label08;
    }
}
