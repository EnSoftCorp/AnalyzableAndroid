public class org.apache.xalan.transformer.ClonerToResultTree extends java.lang.Object
{

    public void <init>()
    {
        org.apache.xalan.transformer.ClonerToResultTree r0;

        r0 := @this: org.apache.xalan.transformer.ClonerToResultTree;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void cloneToResultTree(int, int, org.apache.xml.dtm.DTM, org.apache.xml.serializer.SerializationHandler, boolean) throws javax.xml.transform.TransformerException
    {
        int i0, i1;
        org.apache.xml.dtm.DTM r0;
        org.apache.xml.serializer.SerializationHandler r1;
        boolean z0;
        org.xml.sax.SAXException r2, $r17;
        java.lang.String r3, $r7, $r9, $r11, $r12, $r13, $r14, $r15;
        javax.xml.transform.TransformerException $r4, $r16;
        java.lang.StringBuilder $r5, $r6, $r8;
        org.apache.xml.utils.XMLString $r10;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: org.apache.xml.dtm.DTM;

        r1 := @parameter3: org.apache.xml.serializer.SerializationHandler;

        z0 := @parameter4: boolean;

        tableswitch(i1)
        {
            case 1: goto label05;
            case 2: goto label13;
            case 3: goto label03;
            case 4: goto label11;
            case 5: goto label19;
            case 6: goto label01;
            case 7: goto label21;
            case 8: goto label17;
            case 9: goto label22;
            case 10: goto label01;
            case 11: goto label22;
            case 12: goto label01;
            case 13: goto label15;
            default: goto label01;
        };

     label01:
        $r4 = new javax.xml.transform.TransformerException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t clone node: ");

        $r7 = interfaceinvoke r0.<org.apache.xml.dtm.DTM: java.lang.String getNodeName(int)>(i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<javax.xml.transform.TransformerException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label02:
        $r17 := @caughtexception;

        r2 = $r17;

        $r16 = new javax.xml.transform.TransformerException;

        specialinvoke $r16.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r2);

        throw $r16;

     label03:
        interfaceinvoke r0.<org.apache.xml.dtm.DTM: void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)>(i0, r1, 0);

     label04:
        return;

     label05:
        r3 = interfaceinvoke r0.<org.apache.xml.dtm.DTM: java.lang.String getNamespaceURI(int)>(i0);

     label06:
        if r3 != null goto label07;

        r3 = "";

     label07:
        $r15 = interfaceinvoke r0.<org.apache.xml.dtm.DTM: java.lang.String getLocalName(int)>(i0);

        $r14 = interfaceinvoke r0.<org.apache.xml.dtm.DTM: java.lang.String getNodeNameX(int)>(i0);

        interfaceinvoke r1.<org.apache.xml.serializer.SerializationHandler: void startElement(java.lang.String,java.lang.String,java.lang.String)>(r3, $r15, $r14);

     label08:
        if z0 == 0 goto label22;

     label09:
        staticinvoke <org.apache.xalan.serialize.SerializerUtils: void addAttributes(org.apache.xml.serializer.SerializationHandler,int)>(r1, i0);

        staticinvoke <org.apache.xalan.serialize.SerializerUtils: void processNSDecls(org.apache.xml.serializer.SerializationHandler,int,int,org.apache.xml.dtm.DTM)>(r1, i0, i1, r0);

     label10:
        return;

     label11:
        interfaceinvoke r1.<org.apache.xml.serializer.SerializationHandler: void startCDATA()>();

        interfaceinvoke r0.<org.apache.xml.dtm.DTM: void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)>(i0, r1, 0);

        interfaceinvoke r1.<org.apache.xml.serializer.SerializationHandler: void endCDATA()>();

     label12:
        return;

     label13:
        staticinvoke <org.apache.xalan.serialize.SerializerUtils: void addAttribute(org.apache.xml.serializer.SerializationHandler,int)>(r1, i0);

     label14:
        return;

     label15:
        staticinvoke <org.apache.xalan.serialize.SerializerUtils: void processNSDecls(org.apache.xml.serializer.SerializationHandler,int,int,org.apache.xml.dtm.DTM)>(r1, i0, 13, r0);

     label16:
        return;

     label17:
        $r10 = interfaceinvoke r0.<org.apache.xml.dtm.DTM: org.apache.xml.utils.XMLString getStringValue(int)>(i0);

        interfaceinvoke $r10.<org.apache.xml.utils.XMLString: void dispatchAsComment(org.xml.sax.ext.LexicalHandler)>(r1);

     label18:
        return;

     label19:
        $r13 = interfaceinvoke r0.<org.apache.xml.dtm.DTM: java.lang.String getNodeNameX(int)>(i0);

        interfaceinvoke r1.<org.apache.xml.serializer.SerializationHandler: void entityReference(java.lang.String)>($r13);

     label20:
        return;

     label21:
        $r11 = interfaceinvoke r0.<org.apache.xml.dtm.DTM: java.lang.String getNodeNameX(int)>(i0);

        $r12 = interfaceinvoke r0.<org.apache.xml.dtm.DTM: java.lang.String getNodeValue(int)>(i0);

        interfaceinvoke r1.<org.apache.xml.serializer.SerializationHandler: void processingInstruction(java.lang.String,java.lang.String)>($r11, $r12);

     label22:
        return;

        catch org.xml.sax.SAXException from label01 to label02 with label02;
        catch org.xml.sax.SAXException from label03 to label04 with label02;
        catch org.xml.sax.SAXException from label05 to label06 with label02;
        catch org.xml.sax.SAXException from label07 to label08 with label02;
        catch org.xml.sax.SAXException from label09 to label10 with label02;
        catch org.xml.sax.SAXException from label11 to label12 with label02;
        catch org.xml.sax.SAXException from label13 to label14 with label02;
        catch org.xml.sax.SAXException from label15 to label16 with label02;
        catch org.xml.sax.SAXException from label17 to label18 with label02;
        catch org.xml.sax.SAXException from label19 to label20 with label02;
        catch org.xml.sax.SAXException from label21 to label22 with label02;
    }
}
