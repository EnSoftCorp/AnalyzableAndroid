public class com.android.org.conscrypt.ConnectionStateSSLv3 extends com.android.org.conscrypt.ConnectionState
{
    private final byte[] mac_material_part;
    private final byte[] mac_read_secret;
    private final byte[] mac_write_secret;
    private final java.security.MessageDigest messageDigest;
    private final byte[] pad_1;
    private final byte[] pad_2;

    protected void <init>(com.android.org.conscrypt.SSLSessionImpl)
    {
        com.android.org.conscrypt.ConnectionStateSSLv3 r0;
        com.android.org.conscrypt.SSLSessionImpl r1;
        java.lang.Exception r2, $r116;
        com.android.org.conscrypt.CipherSuite r3;
        boolean z0, z1, $z2, $z3;
        int i0, i1, i2, i3, $i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38;
        java.lang.String r4, r5, $r50, $r81, $r84, $r88, $r90, $r97, $r102, $r106, $r110;
        byte[] r6, r7, r8, r9, r10, r11, r12, r13, r18, $r26, $r28, $r31, $r40, $r41, $r42, $r44, $r60, $r70, $r78;
        java.security.MessageDigest r14, $r30;
        javax.crypto.spec.IvParameterSpec r15, r16, $r68, $r72, $r77, $r79;
        javax.crypto.Cipher r17, r19, r21, r23, $r33, $r34;
        javax.crypto.spec.SecretKeySpec r20, r22, r24, r25, $r29, $r35, $r36, $r43;
        com.android.org.conscrypt.Logger$Stream $r27, $r32, $r45, $r46, $r47, $r49, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r69, $r71, $r73, $r75, $r76, $r83, $r86, $r92, $r99, $r108, $r113;
        javax.crypto.NullCipher $r37, $r38;
        java.lang.StringBuilder $r39, $r48, $r51, $r74, $r80, $r82, $r85, $r87, $r89, $r91, $r93, $r94, $r95, $r96, $r98, $r100, $r101, $r103, $r104, $r105, $r107, $r109, $r111, $r112;
        javax.net.ssl.SSLProtocolException $r114;
        com.android.org.conscrypt.AlertException $r115;

        r0 := @this: com.android.org.conscrypt.ConnectionStateSSLv3;

        r1 := @parameter0: com.android.org.conscrypt.SSLSessionImpl;

        specialinvoke r0.<com.android.org.conscrypt.ConnectionState: void <init>()>();

        $r26 = newarray (byte)[3];

        r0.<com.android.org.conscrypt.ConnectionStateSSLv3: byte[] mac_material_part> = $r26;

     label01:
        r3 = r1.<com.android.org.conscrypt.SSLSessionImpl: com.android.org.conscrypt.CipherSuite cipherSuite>;

        z0 = virtualinvoke r3.<com.android.org.conscrypt.CipherSuite: boolean isExportable()>();

        $i4 = virtualinvoke r3.<com.android.org.conscrypt.CipherSuite: int getMACLength()>();

        r0.<com.android.org.conscrypt.ConnectionStateSSLv3: int hash_size> = $i4;

     label02:
        if z0 == 0 goto label23;

     label03:
        i0 = r3.<com.android.org.conscrypt.CipherSuite: int keyMaterial>;

     label04:
        i1 = r3.<com.android.org.conscrypt.CipherSuite: int ivSize>;

        $i6 = virtualinvoke r3.<com.android.org.conscrypt.CipherSuite: int getBlockSize()>();

        r0.<com.android.org.conscrypt.ConnectionStateSSLv3: int block_size> = $i6;

        r4 = virtualinvoke r3.<com.android.org.conscrypt.CipherSuite: java.lang.String getBulkEncryptionAlgorithm()>();

        r5 = virtualinvoke r3.<com.android.org.conscrypt.CipherSuite: java.lang.String getHashName()>();

        $r27 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: com.android.org.conscrypt.Logger$Stream logger>;

        if $r27 == null goto label05;

        $r75 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r75.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>("ConnectionStateSSLv3.create:");

        $r73 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: com.android.org.conscrypt.Logger$Stream logger>;

        $r74 = new java.lang.StringBuilder;

        specialinvoke $r74.<java.lang.StringBuilder: void <init>()>();

        $r89 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  cipher suite name: ");

        $r88 = virtualinvoke r1.<com.android.org.conscrypt.SSLSessionImpl: java.lang.String getCipherSuite()>();

        $r91 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r88);

        $r90 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r73.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>($r90);

        $r92 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: com.android.org.conscrypt.Logger$Stream logger>;

        $r93 = new java.lang.StringBuilder;

        specialinvoke $r93.<java.lang.StringBuilder: void <init>()>();

        $r95 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  encryption alg name: ");

        $r94 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r81 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r92.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>($r81);

        $r83 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: com.android.org.conscrypt.Logger$Stream logger>;

        $r80 = new java.lang.StringBuilder;

        specialinvoke $r80.<java.lang.StringBuilder: void <init>()>();

        $r82 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  hash alg name: ");

        $r85 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r84 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r83.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>($r84);

        $r86 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: com.android.org.conscrypt.Logger$Stream logger>;

        $r87 = new java.lang.StringBuilder;

        specialinvoke $r87.<java.lang.StringBuilder: void <init>()>();

        $r104 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  hash size: ");

        $i37 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: int hash_size>;

        $r105 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i37);

        $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r86.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>($r106);

        $r108 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: com.android.org.conscrypt.Logger$Stream logger>;

        $r107 = new java.lang.StringBuilder;

        specialinvoke $r107.<java.lang.StringBuilder: void <init>()>();

        $r109 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  block size: ");

        $i38 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: int block_size>;

        $r96 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i38);

        $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r108.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>($r97);

        $r99 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: com.android.org.conscrypt.Logger$Stream logger>;

        $r98 = new java.lang.StringBuilder;

        specialinvoke $r98.<java.lang.StringBuilder: void <init>()>();

        $r100 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  IV size:");

        $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r99.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>($r102);

        $r113 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: com.android.org.conscrypt.Logger$Stream logger>;

        $r103 = new java.lang.StringBuilder;

        specialinvoke $r103.<java.lang.StringBuilder: void <init>()>();

        $r112 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  key size: ");

        $r111 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r110 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r113.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>($r110);

     label05:
        r6 = r1.<com.android.org.conscrypt.SSLSessionImpl: byte[] clientRandom>;

        r7 = r1.<com.android.org.conscrypt.SSLSessionImpl: byte[] serverRandom>;

        $i9 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: int hash_size>;

        $i7 = 2 * $i9;

        $i10 = i0 * 2;

        $i13 = $i7 + $i10;

        $i8 = i1 * 2;

        $i14 = $i13 + $i8;

        r8 = newarray (byte)[$i14];

        $i12 = lengthof r6;

        $i11 = lengthof r7;

        $i18 = $i12 + $i11;

        r9 = newarray (byte)[$i18];

        $i17 = lengthof r7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r7, 0, r9, 0, $i17);

        $i15 = lengthof r7;

        $i16 = lengthof r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r6, 0, r9, $i15, $i16);

        $r28 = r1.<com.android.org.conscrypt.SSLSessionImpl: byte[] master_secret>;

        staticinvoke <com.android.org.conscrypt.PRF: void computePRF_SSLv3(byte[],byte[],byte[])>(r8, $r28, r9);

        $i20 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: int hash_size>;

        r10 = newarray (byte)[$i20];

        $i19 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: int hash_size>;

        r11 = newarray (byte)[$i19];

        r12 = newarray (byte)[i0];

        r13 = newarray (byte)[i0];

        $z2 = r1.<com.android.org.conscrypt.SSLSessionImpl: boolean isServer>;

        if $z2 != 0 goto label42;

     label06:
        z1 = 1;

     label07:
        $i24 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: int hash_size>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r8, 0, r10, 0, $i24);

        $i22 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: int hash_size>;

        $i23 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: int hash_size>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r8, $i22, r11, 0, $i23);

        $i21 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: int hash_size>;

        $i28 = 2 * $i21;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r8, $i28, r12, 0, i0);

        $i27 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: int hash_size>;

        $i26 = 2 * $i27;

        $i25 = i0 + $i26;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r8, $i25, r13, 0, i0);

     label08:
        if z0 == 0 goto label25;

     label09:
        $r71 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: com.android.org.conscrypt.Logger$Stream logger>;

        if $r71 == null goto label10;

        $r76 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r76.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>("ConnectionStateSSLv3: is_exportable");

     label10:
        r14 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        virtualinvoke r14.<java.security.MessageDigest: void update(byte[])>(r12);

        virtualinvoke r14.<java.security.MessageDigest: void update(byte[])>(r6);

        virtualinvoke r14.<java.security.MessageDigest: void update(byte[])>(r7);

        r12 = virtualinvoke r14.<java.security.MessageDigest: byte[] digest()>();

        virtualinvoke r14.<java.security.MessageDigest: void update(byte[])>(r13);

        virtualinvoke r14.<java.security.MessageDigest: void update(byte[])>(r7);

        virtualinvoke r14.<java.security.MessageDigest: void update(byte[])>(r6);

        r13 = virtualinvoke r14.<java.security.MessageDigest: byte[] digest()>();

        i0 = r3.<com.android.org.conscrypt.CipherSuite: int expandedKeyMaterial>;

        i2 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: int block_size>;

     label11:
        r16 = null;

        r15 = null;

        if i2 == 0 goto label13;

     label12:
        virtualinvoke r14.<java.security.MessageDigest: void update(byte[])>(r6);

        virtualinvoke r14.<java.security.MessageDigest: void update(byte[])>(r7);

        $r79 = new javax.crypto.spec.IvParameterSpec;

        $r78 = virtualinvoke r14.<java.security.MessageDigest: byte[] digest()>();

        specialinvoke $r79.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r78, 0, i1);

        r16 = $r79;

        virtualinvoke r14.<java.security.MessageDigest: void update(byte[])>(r7);

        virtualinvoke r14.<java.security.MessageDigest: void update(byte[])>(r6);

        r18 = virtualinvoke r14.<java.security.MessageDigest: byte[] digest()>();

        $r77 = new javax.crypto.spec.IvParameterSpec;

        specialinvoke $r77.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>(r18, 0, i1);

        r15 = $r77;

     label13:
        $r32 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: com.android.org.conscrypt.Logger$Stream logger>;

        if $r32 == null goto label16;

        $r49 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: com.android.org.conscrypt.Logger$Stream logger>;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("is exportable: ");

        $r51 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r50 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r49.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>($r50);

        $r45 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r45.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>("master_secret");

        $r47 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: com.android.org.conscrypt.Logger$Stream logger>;

        $r44 = r1.<com.android.org.conscrypt.SSLSessionImpl: byte[] master_secret>;

        virtualinvoke $r47.<com.android.org.conscrypt.Logger$Stream: void print(byte[])>($r44);

        $r46 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r46.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>("client_random");

        $r57 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r57.<com.android.org.conscrypt.Logger$Stream: void print(byte[])>(r6);

        $r56 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r56.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>("server_random");

        $r59 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r59.<com.android.org.conscrypt.Logger$Stream: void print(byte[])>(r7);

        $r58 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r58.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>("client_mac_secret");

        $r53 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r53.<com.android.org.conscrypt.Logger$Stream: void print(byte[])>(r10);

        $r52 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r52.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>("server_mac_secret");

        $r55 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r55.<com.android.org.conscrypt.Logger$Stream: void print(byte[])>(r11);

        $r54 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r54.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>("client_key");

        $r66 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r66.<com.android.org.conscrypt.Logger$Stream: void print(byte[],int,int)>(r12, 0, i0);

        $r67 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r67.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>("server_key");

        $r64 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r64.<com.android.org.conscrypt.Logger$Stream: void print(byte[],int,int)>(r13, 0, i0);

     label14:
        if r16 == null goto label29;

     label15:
        $r62 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r62.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>("client_iv");

        $r63 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: com.android.org.conscrypt.Logger$Stream logger>;

        $r60 = virtualinvoke r16.<javax.crypto.spec.IvParameterSpec: byte[] getIV()>();

        virtualinvoke $r63.<com.android.org.conscrypt.Logger$Stream: void print(byte[])>($r60);

        $r61 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r61.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>("server_iv");

        $r69 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: com.android.org.conscrypt.Logger$Stream logger>;

        $r70 = virtualinvoke r15.<javax.crypto.spec.IvParameterSpec: byte[] getIV()>();

        virtualinvoke $r69.<com.android.org.conscrypt.Logger$Stream: void print(byte[])>($r70);

     label16:
        if r4 != null goto label32;

     label17:
        $r37 = new javax.crypto.NullCipher;

        specialinvoke $r37.<javax.crypto.NullCipher: void <init>()>();

        r0.<com.android.org.conscrypt.ConnectionStateSSLv3: javax.crypto.Cipher encCipher> = $r37;

        $r38 = new javax.crypto.NullCipher;

        specialinvoke $r38.<javax.crypto.NullCipher: void <init>()>();

        r0.<com.android.org.conscrypt.ConnectionStateSSLv3: javax.crypto.Cipher decCipher> = $r38;

     label18:
        $r30 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r5);

        r0.<com.android.org.conscrypt.ConnectionStateSSLv3: java.security.MessageDigest messageDigest> = $r30;

     label19:
        if z1 == 0 goto label38;

     label20:
        r0.<com.android.org.conscrypt.ConnectionStateSSLv3: byte[] mac_write_secret> = r10;

        r0.<com.android.org.conscrypt.ConnectionStateSSLv3: byte[] mac_read_secret> = r11;

     label21:
        $z3 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("MD5");

        if $z3 == 0 goto label40;

        $r41 = <com.android.org.conscrypt.SSLv3Constants: byte[] MD5pad1>;

        r0.<com.android.org.conscrypt.ConnectionStateSSLv3: byte[] pad_1> = $r41;

        $r42 = <com.android.org.conscrypt.SSLv3Constants: byte[] MD5pad2>;

        r0.<com.android.org.conscrypt.ConnectionStateSSLv3: byte[] pad_2> = $r42;

     label22:
        return;

     label23:
        i0 = r3.<com.android.org.conscrypt.CipherSuite: int expandedKeyMaterial>;

     label24:
        goto label04;

     label25:
        i3 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: int block_size>;

     label26:
        r16 = null;

        r15 = null;

        if i3 == 0 goto label13;

     label27:
        $r68 = new javax.crypto.spec.IvParameterSpec;

        $i33 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: int hash_size>;

        $i32 = 2 * $i33;

        $i31 = i0 * 2;

        $i29 = $i32 + $i31;

        specialinvoke $r68.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>(r8, $i29, i1);

        r16 = $r68;

        $i30 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: int hash_size>;

        $i35 = 2 * $i30;

        $i36 = i0 * 2;

        $i34 = $i35 + $i36;

        i5 = i1 + $i34;

        $r72 = new javax.crypto.spec.IvParameterSpec;

        specialinvoke $r72.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>(r8, i5, i1);

        r15 = $r72;

     label28:
        goto label13;

     label29:
        $r65 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r65.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>("no IV.");

     label30:
        goto label16;

     label31:
        $r116 := @caughtexception;

        r2 = $r116;

        virtualinvoke r2.<java.lang.Exception: void printStackTrace()>();

        $r115 = new com.android.org.conscrypt.AlertException;

        $r114 = new javax.net.ssl.SSLProtocolException;

        specialinvoke $r114.<javax.net.ssl.SSLProtocolException: void <init>(java.lang.String)>("Error during computation of security parameters");

        specialinvoke $r115.<com.android.org.conscrypt.AlertException: void <init>(byte,javax.net.ssl.SSLException)>(80, $r114);

        throw $r115;

     label32:
        $r33 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r4);

        r0.<com.android.org.conscrypt.ConnectionStateSSLv3: javax.crypto.Cipher encCipher> = $r33;

        $r34 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r4);

        r0.<com.android.org.conscrypt.ConnectionStateSSLv3: javax.crypto.Cipher decCipher> = $r34;

     label33:
        if z1 == 0 goto label36;

     label34:
        r17 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: javax.crypto.Cipher encCipher>;

        $r43 = new javax.crypto.spec.SecretKeySpec;

        specialinvoke $r43.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>(r12, 0, i0, r4);

        r20 = $r43;

        virtualinvoke r17.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, r20, r16);

        r19 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: javax.crypto.Cipher decCipher>;

        $r36 = new javax.crypto.spec.SecretKeySpec;

        specialinvoke $r36.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>(r13, 0, i0, r4);

        r22 = $r36;

        virtualinvoke r19.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, r22, r15);

     label35:
        goto label18;

     label36:
        r21 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: javax.crypto.Cipher encCipher>;

        $r35 = new javax.crypto.spec.SecretKeySpec;

        specialinvoke $r35.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>(r13, 0, i0, r4);

        r24 = $r35;

        virtualinvoke r21.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, r24, r15);

        r23 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: javax.crypto.Cipher decCipher>;

        $r29 = new javax.crypto.spec.SecretKeySpec;

        specialinvoke $r29.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>(r12, 0, i0, r4);

        r25 = $r29;

        virtualinvoke r23.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, r25, r16);

     label37:
        goto label18;

     label38:
        r0.<com.android.org.conscrypt.ConnectionStateSSLv3: byte[] mac_write_secret> = r11;

        r0.<com.android.org.conscrypt.ConnectionStateSSLv3: byte[] mac_read_secret> = r10;

     label39:
        goto label21;

     label40:
        $r31 = <com.android.org.conscrypt.SSLv3Constants: byte[] SHApad1>;

        r0.<com.android.org.conscrypt.ConnectionStateSSLv3: byte[] pad_1> = $r31;

        $r40 = <com.android.org.conscrypt.SSLv3Constants: byte[] SHApad2>;

        r0.<com.android.org.conscrypt.ConnectionStateSSLv3: byte[] pad_2> = $r40;

     label41:
        return;

     label42:
        z1 = 0;

        goto label07;

        catch java.lang.Exception from label01 to label02 with label31;
        catch java.lang.Exception from label03 to label04 with label31;
        catch java.lang.Exception from label04 to label05 with label31;
        catch java.lang.Exception from label05 to label06 with label31;
        catch java.lang.Exception from label07 to label08 with label31;
        catch java.lang.Exception from label09 to label10 with label31;
        catch java.lang.Exception from label10 to label11 with label31;
        catch java.lang.Exception from label12 to label13 with label31;
        catch java.lang.Exception from label13 to label14 with label31;
        catch java.lang.Exception from label15 to label16 with label31;
        catch java.lang.Exception from label17 to label18 with label31;
        catch java.lang.Exception from label18 to label19 with label31;
        catch java.lang.Exception from label20 to label21 with label31;
        catch java.lang.Exception from label21 to label22 with label31;
        catch java.lang.Exception from label23 to label24 with label31;
        catch java.lang.Exception from label25 to label26 with label31;
        catch java.lang.Exception from label27 to label28 with label31;
        catch java.lang.Exception from label29 to label30 with label31;
        catch java.lang.Exception from label32 to label33 with label31;
        catch java.lang.Exception from label34 to label35 with label31;
        catch java.lang.Exception from label36 to label37 with label31;
        catch java.lang.Exception from label38 to label39 with label31;
        catch java.lang.Exception from label40 to label41 with label31;
    }

    protected byte[] decrypt(byte, byte[], int, int)
    {
        com.android.org.conscrypt.ConnectionStateSSLv3 r0;
        byte b0, $b13, $b16, $b21, $b22, $b30, $b35;
        byte[] r1, r2, r3, r4, r5, $r7, $r8, $r9, $r11, $r13, $r14, $r16, $r20, $r22, $r27;
        int i1, i2, i3, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i15, $i17, $i18, $i19, $i20, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i31, $i32, $i33, $i34;
        short s4, $s36;
        javax.crypto.Cipher $r6;
        java.security.MessageDigest $r10, $r12, $r15, $r17, $r18, $r19, $r21, $r23, $r25, $r26;
        com.android.org.conscrypt.Logger$Stream $r24, $r29, $r30, $r32, $r33;
        com.android.org.conscrypt.AlertException $r28, $r35;
        javax.net.ssl.SSLProtocolException $r31, $r34;

        r0 := @this: com.android.org.conscrypt.ConnectionStateSSLv3;

        b0 := @parameter0: byte;

        r1 := @parameter1: byte[];

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r6 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: javax.crypto.Cipher decCipher>;

        r2 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] update(byte[],int,int)>(r1, i1, i2);

        $i6 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: int block_size>;

        if $i6 == 0 goto label7;

        $i25 = lengthof r2;

        $i24 = -1 + $i25;

        $b30 = r2[$i24];

        s4 = 255 & $b30;

        i5 = 0;

     label1:
        if i5 >= s4 goto label3;

        $i28 = lengthof r2;

        $i29 = -2 + $i28;

        $i34 = $i29 - i5;

        $b35 = r2[$i34];

        $s36 = 255 & $b35;

        if $s36 == s4 goto label2;

        $r35 = new com.android.org.conscrypt.AlertException;

        $r34 = new javax.net.ssl.SSLProtocolException;

        specialinvoke $r34.<javax.net.ssl.SSLProtocolException: void <init>(java.lang.String)>("Received message has bad padding");

        specialinvoke $r35.<com.android.org.conscrypt.AlertException: void <init>(byte,javax.net.ssl.SSLException)>(21, $r34);

        throw $r35;

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        $i32 = lengthof r2;

        $i31 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: int hash_size>;

        $i33 = $i32 - $i31;

        $i26 = $i33 - s4;

        $i27 = -1 + $i26;

        r3 = newarray (byte)[$i27];

     label4:
        $r7 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: byte[] mac_material_part>;

        $r7[0] = b0;

        $r8 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: byte[] mac_material_part>;

        $i10 = lengthof r3;

        $i12 = 65280 & $i10;

        $i11 = $i12 >> 8;

        $b13 = (byte) $i11;

        $r8[1] = $b13;

        $r9 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: byte[] mac_material_part>;

        $i15 = lengthof r3;

        $i14 = 255 & $i15;

        $b16 = (byte) $i14;

        $r9[2] = $b16;

        $r10 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: java.security.MessageDigest messageDigest>;

        $r11 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: byte[] mac_read_secret>;

        virtualinvoke $r10.<java.security.MessageDigest: void update(byte[])>($r11);

        $r12 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: java.security.MessageDigest messageDigest>;

        $r13 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: byte[] pad_1>;

        virtualinvoke $r12.<java.security.MessageDigest: void update(byte[])>($r13);

        $r17 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: java.security.MessageDigest messageDigest>;

        $r16 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: byte[] read_seq_num>;

        virtualinvoke $r17.<java.security.MessageDigest: void update(byte[])>($r16);

        $r15 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: java.security.MessageDigest messageDigest>;

        $r14 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: byte[] mac_material_part>;

        virtualinvoke $r15.<java.security.MessageDigest: void update(byte[])>($r14);

        $r19 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: java.security.MessageDigest messageDigest>;

        $i17 = lengthof r3;

        virtualinvoke $r19.<java.security.MessageDigest: void update(byte[],int,int)>(r2, 0, $i17);

        $r18 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: java.security.MessageDigest messageDigest>;

        r4 = virtualinvoke $r18.<java.security.MessageDigest: byte[] digest()>();

        $r23 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: java.security.MessageDigest messageDigest>;

        $r22 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: byte[] mac_read_secret>;

        virtualinvoke $r23.<java.security.MessageDigest: void update(byte[])>($r22);

        $r21 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: java.security.MessageDigest messageDigest>;

        $r20 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: byte[] pad_2>;

        virtualinvoke $r21.<java.security.MessageDigest: void update(byte[])>($r20);

        $r25 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: java.security.MessageDigest messageDigest>;

        virtualinvoke $r25.<java.security.MessageDigest: void update(byte[])>(r4);

        $r26 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: java.security.MessageDigest messageDigest>;

        r5 = virtualinvoke $r26.<java.security.MessageDigest: byte[] digest()>();

        $r24 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: com.android.org.conscrypt.Logger$Stream logger>;

        if $r24 == null goto label5;

        $r30 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r30.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>("Decrypted:");

        $r29 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r29.<com.android.org.conscrypt.Logger$Stream: void print(byte[])>(r2);

        $r33 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r33.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>("Expected mac value:");

        $r32 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r32.<com.android.org.conscrypt.Logger$Stream: void print(byte[])>(r5);

     label5:
        i3 = 0;

     label6:
        $i20 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: int hash_size>;

        if i3 >= $i20 goto label9;

        $b21 = r5[i3];

        $i18 = lengthof r3;

        $i23 = i3 + $i18;

        $b22 = r2[$i23];

        if $b21 == $b22 goto label8;

        $r28 = new com.android.org.conscrypt.AlertException;

        $r31 = new javax.net.ssl.SSLProtocolException;

        specialinvoke $r31.<javax.net.ssl.SSLProtocolException: void <init>(java.lang.String)>("Bad record MAC");

        specialinvoke $r28.<com.android.org.conscrypt.AlertException: void <init>(byte,javax.net.ssl.SSLException)>(20, $r31);

        throw $r28;

     label7:
        $i9 = lengthof r2;

        $i7 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: int hash_size>;

        $i8 = $i9 - $i7;

        r3 = newarray (byte)[$i8];

        goto label4;

     label8:
        i3 = i3 + 1;

        goto label6;

     label9:
        $i19 = lengthof r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r3, 0, $i19);

        $r27 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: byte[] read_seq_num>;

        staticinvoke <com.android.org.conscrypt.ConnectionStateSSLv3: void incSequenceNumber(byte[])>($r27);

        return r3;
    }

    protected byte[] encrypt(byte, byte[], int, int)
    {
        com.android.org.conscrypt.ConnectionStateSSLv3 r0;
        byte b0, $b10, $b11, $b21;
        byte[] r1, r3, r4, r5, $r9, $r10, $r11, $r12, $r13, $r15, $r20, $r21, $r26, $r29, $r32;
        int i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i12, $i13, $i14, $i15, $i16, $i17, $i19, $i20, $i22;
        java.security.GeneralSecurityException r2, $r40;
        com.android.org.conscrypt.Logger$Stream r6, $r28, $r39;
        java.lang.StringBuilder r7, $r31, $r35, $r36, $r37, $r38, $r43;
        java.lang.String r8, $r34;
        java.security.MessageDigest $r14, $r16, $r17, $r18, $r19, $r22, $r23, $r24, $r25, $r27;
        javax.crypto.Cipher $r30, $r33;
        com.android.org.conscrypt.AlertException $r41;
        javax.net.ssl.SSLProtocolException $r42;

        r0 := @this: com.android.org.conscrypt.ConnectionStateSSLv3;

        b0 := @parameter0: byte;

        r1 := @parameter1: byte[];

        i1 := @parameter2: int;

        i2 := @parameter3: int;

     label01:
        $i6 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: int hash_size>;

        i3 = i2 + $i6;

        i4 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: int block_size>;

     label02:
        i5 = 0;

        if i4 != 0 goto label08;

     label03:
        $i7 = i3 + i5;

        r3 = newarray (byte)[$i7];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i1, r3, 0, i2);

        $r9 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: byte[] mac_material_part>;

        $r9[0] = b0;

        $r10 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: byte[] mac_material_part>;

        $i9 = 65280 & i2;

        $i8 = $i9 >> 8;

        $b10 = (byte) $i8;

        $r10[1] = $b10;

        $r12 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: byte[] mac_material_part>;

        $i12 = i2 & 255;

        $b11 = (byte) $i12;

        $r12[2] = $b11;

        $r14 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: java.security.MessageDigest messageDigest>;

        $r11 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: byte[] mac_write_secret>;

        virtualinvoke $r14.<java.security.MessageDigest: void update(byte[])>($r11);

        $r16 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: java.security.MessageDigest messageDigest>;

        $r13 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: byte[] pad_1>;

        virtualinvoke $r16.<java.security.MessageDigest: void update(byte[])>($r13);

        $r19 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: java.security.MessageDigest messageDigest>;

        $r15 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: byte[] write_seq_num>;

        virtualinvoke $r19.<java.security.MessageDigest: void update(byte[])>($r15);

        $r17 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: java.security.MessageDigest messageDigest>;

        $r20 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: byte[] mac_material_part>;

        virtualinvoke $r17.<java.security.MessageDigest: void update(byte[])>($r20);

        $r18 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: java.security.MessageDigest messageDigest>;

        virtualinvoke $r18.<java.security.MessageDigest: void update(byte[],int,int)>(r1, i1, i2);

        $r23 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: java.security.MessageDigest messageDigest>;

        r4 = virtualinvoke $r23.<java.security.MessageDigest: byte[] digest()>();

        $r22 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: java.security.MessageDigest messageDigest>;

        $r21 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: byte[] mac_write_secret>;

        virtualinvoke $r22.<java.security.MessageDigest: void update(byte[])>($r21);

        $r27 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: java.security.MessageDigest messageDigest>;

        $r26 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: byte[] pad_2>;

        virtualinvoke $r27.<java.security.MessageDigest: void update(byte[])>($r26);

        $r24 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: java.security.MessageDigest messageDigest>;

        virtualinvoke $r24.<java.security.MessageDigest: void update(byte[])>(r4);

        $r25 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: java.security.MessageDigest messageDigest>;

        $r29 = virtualinvoke $r25.<java.security.MessageDigest: byte[] digest()>();

        $i14 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: int hash_size>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r29, 0, r3, i2, $i14);

        $i13 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: int block_size>;

        if $i13 == 0 goto label04;

        $i20 = i3 - 1;

        $i22 = lengthof r3;

        $b21 = (byte) i5;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>(r3, $i20, $i22, $b21);

     label04:
        $r28 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: com.android.org.conscrypt.Logger$Stream logger>;

        if $r28 == null goto label06;

        r6 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: com.android.org.conscrypt.Logger$Stream logger>;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        r7 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SSLRecordProtocol.encrypt: ");

        $i19 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: int block_size>;

        if $i19 == 0 goto label11;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GenericBlockCipher with padding[");

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r43 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]:");

        r8 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

     label05:
        $r35 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>($r34);

        $r39 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r39.<com.android.org.conscrypt.Logger$Stream: void print(byte[])>(r3);

     label06:
        $r30 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: javax.crypto.Cipher encCipher>;

        $i17 = lengthof r3;

        $i16 = virtualinvoke $r30.<javax.crypto.Cipher: int getOutputSize(int)>($i17);

        r5 = newarray (byte)[$i16];

        $r33 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: javax.crypto.Cipher encCipher>;

        $i15 = lengthof r3;

        virtualinvoke $r33.<javax.crypto.Cipher: int update(byte[],int,int,byte[])>(r3, 0, $i15, r5);

        $r32 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: byte[] write_seq_num>;

        staticinvoke <com.android.org.conscrypt.ConnectionStateSSLv3: void incSequenceNumber(byte[])>($r32);

     label07:
        return r5;

     label08:
        i3 = i3 + 1;

     label09:
        i5 = virtualinvoke r0.<com.android.org.conscrypt.ConnectionStateSSLv3: int getPaddingSize(int)>(i3);

     label10:
        goto label03;

     label11:
        r8 = "GenericStreamCipher:";

        goto label05;

     label12:
        $r40 := @caughtexception;

        r2 = $r40;

        virtualinvoke r2.<java.security.GeneralSecurityException: void printStackTrace()>();

        $r41 = new com.android.org.conscrypt.AlertException;

        $r42 = new javax.net.ssl.SSLProtocolException;

        specialinvoke $r42.<javax.net.ssl.SSLProtocolException: void <init>(java.lang.String)>("Error during the encryption");

        specialinvoke $r41.<com.android.org.conscrypt.AlertException: void <init>(byte,javax.net.ssl.SSLException)>(80, $r42);

        throw $r41;

        catch java.security.GeneralSecurityException from label01 to label02 with label12;
        catch java.security.GeneralSecurityException from label03 to label04 with label12;
        catch java.security.GeneralSecurityException from label04 to label05 with label12;
        catch java.security.GeneralSecurityException from label05 to label06 with label12;
        catch java.security.GeneralSecurityException from label06 to label07 with label12;
        catch java.security.GeneralSecurityException from label09 to label10 with label12;
    }

    protected void shutdown()
    {
        com.android.org.conscrypt.ConnectionStateSSLv3 r0;
        byte[] $r1, $r2;

        r0 := @this: com.android.org.conscrypt.ConnectionStateSSLv3;

        $r1 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: byte[] mac_write_secret>;

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>($r1, 0);

        $r2 = r0.<com.android.org.conscrypt.ConnectionStateSSLv3: byte[] mac_read_secret>;

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>($r2, 0);

        specialinvoke r0.<com.android.org.conscrypt.ConnectionState: void shutdown()>();

        return;
    }
}
