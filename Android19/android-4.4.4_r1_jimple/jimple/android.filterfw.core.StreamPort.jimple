public class android.filterfw.core.StreamPort extends android.filterfw.core.InputPort
{
    private android.filterfw.core.Frame mFrame;
    private boolean mPersistent;

    public void <init>(android.filterfw.core.Filter, java.lang.String)
    {
        android.filterfw.core.StreamPort r0;
        android.filterfw.core.Filter r1;
        java.lang.String r2;

        r0 := @this: android.filterfw.core.StreamPort;

        r1 := @parameter0: android.filterfw.core.Filter;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<android.filterfw.core.InputPort: void <init>(android.filterfw.core.Filter,java.lang.String)>(r1, r2);

        return;
    }

    protected void assignFrame(android.filterfw.core.Frame, boolean)
    {
        android.filterfw.core.StreamPort r0;
        android.filterfw.core.Frame r1, $r3, $r4, $r5, $r12, $r14;
        boolean z0;
        java.lang.Throwable r2, $r15;
        java.lang.RuntimeException $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;
        java.lang.String $r11;

        r0 := @this: android.filterfw.core.StreamPort;

        r1 := @parameter0: android.filterfw.core.Frame;

        z0 := @parameter1: boolean;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.filterfw.core.StreamPort: void assertPortIsOpen()>();

        virtualinvoke r0.<android.filterfw.core.StreamPort: void checkFrameType(android.filterfw.core.Frame,boolean)>(r1, z0);

     label2:
        if z0 == 0 goto label6;

     label3:
        $r12 = r0.<android.filterfw.core.StreamPort: android.filterfw.core.Frame mFrame>;

        if $r12 == null goto label4;

        $r14 = r0.<android.filterfw.core.StreamPort: android.filterfw.core.Frame mFrame>;

        virtualinvoke $r14.<android.filterfw.core.Frame: android.filterfw.core.Frame release()>();

     label4:
        $r4 = virtualinvoke r1.<android.filterfw.core.Frame: android.filterfw.core.Frame retain()>();

        r0.<android.filterfw.core.StreamPort: android.filterfw.core.Frame mFrame> = $r4;

        $r5 = r0.<android.filterfw.core.StreamPort: android.filterfw.core.Frame mFrame>;

        virtualinvoke $r5.<android.filterfw.core.Frame: void markReadOnly()>();

        r0.<android.filterfw.core.StreamPort: boolean mPersistent> = z0;

     label5:
        exitmonitor r0;

        return;

     label6:
        $r3 = r0.<android.filterfw.core.StreamPort: android.filterfw.core.Frame mFrame>;

        if $r3 == null goto label4;

        $r6 = new java.lang.RuntimeException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempting to push more than one frame on port: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label7:
        $r15 := @caughtexception;

        r2 = $r15;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label6 to label7 with label7;
    }

    public void clear()
    {
        android.filterfw.core.StreamPort r0;
        android.filterfw.core.Frame $r1, $r2;

        r0 := @this: android.filterfw.core.StreamPort;

        $r1 = r0.<android.filterfw.core.StreamPort: android.filterfw.core.Frame mFrame>;

        if $r1 == null goto label1;

        $r2 = r0.<android.filterfw.core.StreamPort: android.filterfw.core.Frame mFrame>;

        virtualinvoke $r2.<android.filterfw.core.Frame: android.filterfw.core.Frame release()>();

        r0.<android.filterfw.core.StreamPort: android.filterfw.core.Frame mFrame> = null;

     label1:
        return;
    }

    public boolean hasFrame()
    {
        android.filterfw.core.StreamPort r0;
        java.lang.Throwable r1, $r3;
        android.filterfw.core.Frame r2;
        boolean z0;

        r0 := @this: android.filterfw.core.StreamPort;

        entermonitor r0;

     label1:
        r2 = r0.<android.filterfw.core.StreamPort: android.filterfw.core.Frame mFrame>;

     label2:
        if r2 == null goto label4;

        z0 = 1;

     label3:
        exitmonitor r0;

        return z0;

     label4:
        z0 = 0;

        goto label3;

     label5:
        $r3 := @caughtexception;

        r1 = $r3;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label5;
    }

    public android.filterfw.core.Frame pullFrame()
    {
        android.filterfw.core.StreamPort r0;
        java.lang.Throwable r1, $r12;
        android.filterfw.core.Frame r2, $r3, $r4;
        boolean $z0;
        java.lang.RuntimeException $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;
        java.lang.String $r11;

        r0 := @this: android.filterfw.core.StreamPort;

        entermonitor r0;

     label1:
        $r3 = r0.<android.filterfw.core.StreamPort: android.filterfw.core.Frame mFrame>;

        if $r3 != null goto label3;

        $r6 = new java.lang.RuntimeException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No frame available to pull on port: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label2:
        $r12 := @caughtexception;

        r1 = $r12;

        exitmonitor r0;

        throw r1;

     label3:
        r2 = r0.<android.filterfw.core.StreamPort: android.filterfw.core.Frame mFrame>;

        $z0 = r0.<android.filterfw.core.StreamPort: boolean mPersistent>;

        if $z0 == 0 goto label5;

        $r4 = r0.<android.filterfw.core.StreamPort: android.filterfw.core.Frame mFrame>;

        virtualinvoke $r4.<android.filterfw.core.Frame: android.filterfw.core.Frame retain()>();

     label4:
        exitmonitor r0;

        return r2;

     label5:
        r0.<android.filterfw.core.StreamPort: android.filterfw.core.Frame mFrame> = null;

     label6:
        goto label4;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.Throwable from label5 to label6 with label2;
    }

    public void pushFrame(android.filterfw.core.Frame)
    {
        android.filterfw.core.StreamPort r0;
        android.filterfw.core.Frame r1;

        r0 := @this: android.filterfw.core.StreamPort;

        r1 := @parameter0: android.filterfw.core.Frame;

        virtualinvoke r0.<android.filterfw.core.StreamPort: void assignFrame(android.filterfw.core.Frame,boolean)>(r1, 0);

        return;
    }

    public void setFrame(android.filterfw.core.Frame)
    {
        android.filterfw.core.StreamPort r0;
        android.filterfw.core.Frame r1;

        r0 := @this: android.filterfw.core.StreamPort;

        r1 := @parameter0: android.filterfw.core.Frame;

        virtualinvoke r0.<android.filterfw.core.StreamPort: void assignFrame(android.filterfw.core.Frame,boolean)>(r1, 1);

        return;
    }

    public java.lang.String toString()
    {
        android.filterfw.core.StreamPort r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String $r3, $r5;

        r0 := @this: android.filterfw.core.StreamPort;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("input ");

        $r3 = specialinvoke r0.<android.filterfw.core.InputPort: java.lang.String toString()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public void transfer(android.filterfw.core.FilterContext)
    {
        android.filterfw.core.StreamPort r0;
        android.filterfw.core.FilterContext r1;
        java.lang.Throwable r2, $r5;
        android.filterfw.core.Frame $r3, $r4;

        r0 := @this: android.filterfw.core.StreamPort;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        entermonitor r0;

     label1:
        $r3 = r0.<android.filterfw.core.StreamPort: android.filterfw.core.Frame mFrame>;

        if $r3 == null goto label2;

        $r4 = r0.<android.filterfw.core.StreamPort: android.filterfw.core.Frame mFrame>;

        virtualinvoke r0.<android.filterfw.core.StreamPort: void checkFrameManager(android.filterfw.core.Frame,android.filterfw.core.FilterContext)>($r4, r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
