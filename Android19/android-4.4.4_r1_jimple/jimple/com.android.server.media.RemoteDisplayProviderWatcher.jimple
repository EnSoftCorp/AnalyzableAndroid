public final class com.android.server.media.RemoteDisplayProviderWatcher extends java.lang.Object
{
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    private final com.android.server.media.RemoteDisplayProviderWatcher$Callback mCallback;
    private final android.content.Context mContext;
    private final android.os.Handler mHandler;
    private final android.content.pm.PackageManager mPackageManager;
    private final java.util.ArrayList mProviders;
    private boolean mRunning;
    private final android.content.BroadcastReceiver mScanPackagesReceiver;
    private final java.lang.Runnable mScanPackagesRunnable;
    private final int mUserId;

    static void <clinit>()
    {
        boolean $z0;

        <com.android.server.media.RemoteDisplayProviderWatcher: java.lang.String TAG> = "RemoteDisplayProvider";

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("RemoteDisplayProvider", 3);

        <com.android.server.media.RemoteDisplayProviderWatcher: boolean DEBUG> = $z0;

        return;
    }

    public void <init>(android.content.Context, com.android.server.media.RemoteDisplayProviderWatcher$Callback, android.os.Handler, int)
    {
        com.android.server.media.RemoteDisplayProviderWatcher r0;
        android.content.Context r1;
        com.android.server.media.RemoteDisplayProviderWatcher$Callback r2;
        android.os.Handler r3;
        int i0;
        java.util.ArrayList $r4;
        com.android.server.media.RemoteDisplayProviderWatcher$1 $r5;
        com.android.server.media.RemoteDisplayProviderWatcher$2 $r6;
        android.content.pm.PackageManager $r7;

        r0 := @this: com.android.server.media.RemoteDisplayProviderWatcher;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.media.RemoteDisplayProviderWatcher$Callback;

        r3 := @parameter2: android.os.Handler;

        i0 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.media.RemoteDisplayProviderWatcher: java.util.ArrayList mProviders> = $r4;

        $r5 = new com.android.server.media.RemoteDisplayProviderWatcher$1;

        specialinvoke $r5.<com.android.server.media.RemoteDisplayProviderWatcher$1: void <init>(com.android.server.media.RemoteDisplayProviderWatcher)>(r0);

        r0.<com.android.server.media.RemoteDisplayProviderWatcher: android.content.BroadcastReceiver mScanPackagesReceiver> = $r5;

        $r6 = new com.android.server.media.RemoteDisplayProviderWatcher$2;

        specialinvoke $r6.<com.android.server.media.RemoteDisplayProviderWatcher$2: void <init>(com.android.server.media.RemoteDisplayProviderWatcher)>(r0);

        r0.<com.android.server.media.RemoteDisplayProviderWatcher: java.lang.Runnable mScanPackagesRunnable> = $r6;

        r0.<com.android.server.media.RemoteDisplayProviderWatcher: android.content.Context mContext> = r1;

        r0.<com.android.server.media.RemoteDisplayProviderWatcher: com.android.server.media.RemoteDisplayProviderWatcher$Callback mCallback> = r2;

        r0.<com.android.server.media.RemoteDisplayProviderWatcher: android.os.Handler mHandler> = r3;

        r0.<com.android.server.media.RemoteDisplayProviderWatcher: int mUserId> = i0;

        $r7 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r0.<com.android.server.media.RemoteDisplayProviderWatcher: android.content.pm.PackageManager mPackageManager> = $r7;

        return;
    }

    static boolean access$000()
    {
        boolean $z0;

        $z0 = <com.android.server.media.RemoteDisplayProviderWatcher: boolean DEBUG>;

        return $z0;
    }

    static void access$100(com.android.server.media.RemoteDisplayProviderWatcher)
    {
        com.android.server.media.RemoteDisplayProviderWatcher r0;

        r0 := @parameter0: com.android.server.media.RemoteDisplayProviderWatcher;

        specialinvoke r0.<com.android.server.media.RemoteDisplayProviderWatcher: void scanPackages()>();

        return;
    }

    private int findProvider(java.lang.String, java.lang.String)
    {
        com.android.server.media.RemoteDisplayProviderWatcher r0;
        java.lang.String r1, r2;
        int i0, i1;
        java.util.ArrayList $r3, $r4;
        java.lang.Object $r5;
        com.android.server.media.RemoteDisplayProviderProxy $r6;
        boolean $z0;

        r0 := @this: com.android.server.media.RemoteDisplayProviderWatcher;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.server.media.RemoteDisplayProviderWatcher: java.util.ArrayList mProviders>;

        i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r4 = r0.<com.android.server.media.RemoteDisplayProviderWatcher: java.util.ArrayList mProviders>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r6 = (com.android.server.media.RemoteDisplayProviderProxy) $r5;

        $z0 = virtualinvoke $r6.<com.android.server.media.RemoteDisplayProviderProxy: boolean hasComponentName(java.lang.String,java.lang.String)>(r1, r2);

        if $z0 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return -1;
    }

    private boolean hasCaptureVideoPermission(java.lang.String)
    {
        com.android.server.media.RemoteDisplayProviderWatcher r0;
        java.lang.String r1;
        android.content.pm.PackageManager $r2, $r3;
        int $i0, $i1;

        r0 := @this: com.android.server.media.RemoteDisplayProviderWatcher;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.media.RemoteDisplayProviderWatcher: android.content.pm.PackageManager mPackageManager>;

        $i0 = virtualinvoke $r2.<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>("android.permission.CAPTURE_VIDEO_OUTPUT", r1);

        if $i0 != 0 goto label2;

     label1:
        return 1;

     label2:
        $r3 = r0.<com.android.server.media.RemoteDisplayProviderWatcher: android.content.pm.PackageManager mPackageManager>;

        $i1 = virtualinvoke $r3.<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>("android.permission.CAPTURE_SECURE_VIDEO_OUTPUT", r1);

        if $i1 == 0 goto label1;

        return 0;
    }

    private void scanPackages()
    {
        com.android.server.media.RemoteDisplayProviderWatcher r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8;
        android.content.Intent r1, $r9;
        java.util.Iterator r2;
        com.android.server.media.RemoteDisplayProviderProxy r3, r5, r7, $r26;
        android.content.pm.ServiceInfo r4;
        java.util.ArrayList r6, r8, $r12, $r13, $r14, $r17, $r21;
        boolean $z0, $z1, $z3;
        java.util.List $r10;
        android.content.pm.PackageManager $r11;
        com.android.server.media.RemoteDisplayProviderWatcher$Callback $r15, $r28;
        java.lang.Object $r16, $r19, $r22;
        java.lang.String $r18, $r23, $r24, $r25;
        android.content.pm.ResolveInfo $r20;
        android.content.ComponentName $r27;
        android.content.Context $r29;

        r0 := @this: com.android.server.media.RemoteDisplayProviderWatcher;

        $z0 = r0.<com.android.server.media.RemoteDisplayProviderWatcher: boolean mRunning>;

        if $z0 != 0 goto label2;

     label1:
        return;

     label2:
        i0 = 0;

        $r9 = new android.content.Intent;

        specialinvoke $r9.<android.content.Intent: void <init>(java.lang.String)>("com.android.media.remotedisplay.RemoteDisplayProvider");

        r1 = $r9;

        $r11 = r0.<com.android.server.media.RemoteDisplayProviderWatcher: android.content.pm.PackageManager mPackageManager>;

        $i5 = r0.<com.android.server.media.RemoteDisplayProviderWatcher: int mUserId>;

        $r10 = virtualinvoke $r11.<android.content.pm.PackageManager: java.util.List queryIntentServicesAsUser(android.content.Intent,int,int)>(r1, 0, $i5);

        r2 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r19 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r20 = (android.content.pm.ResolveInfo) $r19;

        r4 = $r20.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        if r4 == null goto label3;

        $z3 = specialinvoke r0.<com.android.server.media.RemoteDisplayProviderWatcher: boolean verifyServiceTrusted(android.content.pm.ServiceInfo)>(r4);

        if $z3 == 0 goto label3;

        $r23 = r4.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r18 = r4.<android.content.pm.ServiceInfo: java.lang.String name>;

        i2 = specialinvoke r0.<com.android.server.media.RemoteDisplayProviderWatcher: int findProvider(java.lang.String,java.lang.String)>($r23, $r18);

        if i2 >= 0 goto label4;

        $r26 = new com.android.server.media.RemoteDisplayProviderProxy;

        $r29 = r0.<com.android.server.media.RemoteDisplayProviderWatcher: android.content.Context mContext>;

        $r27 = new android.content.ComponentName;

        $r25 = r4.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r24 = r4.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke $r27.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r25, $r24);

        $i8 = r0.<com.android.server.media.RemoteDisplayProviderWatcher: int mUserId>;

        specialinvoke $r26.<com.android.server.media.RemoteDisplayProviderProxy: void <init>(android.content.Context,android.content.ComponentName,int)>($r29, $r27, $i8);

        r5 = $r26;

        virtualinvoke r5.<com.android.server.media.RemoteDisplayProviderProxy: void start()>();

        r6 = r0.<com.android.server.media.RemoteDisplayProviderWatcher: java.util.ArrayList mProviders>;

        i3 = i0 + 1;

        virtualinvoke r6.<java.util.ArrayList: void add(int,java.lang.Object)>(i0, r5);

        $r28 = r0.<com.android.server.media.RemoteDisplayProviderWatcher: com.android.server.media.RemoteDisplayProviderWatcher$Callback mCallback>;

        interfaceinvoke $r28.<com.android.server.media.RemoteDisplayProviderWatcher$Callback: void addProvider(com.android.server.media.RemoteDisplayProviderProxy)>(r5);

        i0 = i3;

        goto label3;

     label4:
        if i2 < i0 goto label3;

        $r21 = r0.<com.android.server.media.RemoteDisplayProviderWatcher: java.util.ArrayList mProviders>;

        $r22 = virtualinvoke $r21.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r7 = (com.android.server.media.RemoteDisplayProviderProxy) $r22;

        virtualinvoke r7.<com.android.server.media.RemoteDisplayProviderProxy: void start()>();

        virtualinvoke r7.<com.android.server.media.RemoteDisplayProviderProxy: void rebindIfDisconnected()>();

        r8 = r0.<com.android.server.media.RemoteDisplayProviderWatcher: java.util.ArrayList mProviders>;

        i4 = i0 + 1;

        staticinvoke <java.util.Collections: void swap(java.util.List,int,int)>(r8, i2, i0);

        i0 = i4;

        goto label3;

     label5:
        $r12 = r0.<com.android.server.media.RemoteDisplayProviderWatcher: java.util.ArrayList mProviders>;

        $i6 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

        if i0 >= $i6 goto label1;

        $r13 = r0.<com.android.server.media.RemoteDisplayProviderWatcher: java.util.ArrayList mProviders>;

        $i7 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

        i1 = -1 + $i7;

     label6:
        if i1 < i0 goto label1;

        $r14 = r0.<com.android.server.media.RemoteDisplayProviderWatcher: java.util.ArrayList mProviders>;

        $r16 = virtualinvoke $r14.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (com.android.server.media.RemoteDisplayProviderProxy) $r16;

        $r15 = r0.<com.android.server.media.RemoteDisplayProviderWatcher: com.android.server.media.RemoteDisplayProviderWatcher$Callback mCallback>;

        interfaceinvoke $r15.<com.android.server.media.RemoteDisplayProviderWatcher$Callback: void removeProvider(com.android.server.media.RemoteDisplayProviderProxy)>(r3);

        $r17 = r0.<com.android.server.media.RemoteDisplayProviderWatcher: java.util.ArrayList mProviders>;

        virtualinvoke $r17.<java.util.ArrayList: boolean remove(java.lang.Object)>(r3);

        virtualinvoke r3.<com.android.server.media.RemoteDisplayProviderProxy: void stop()>();

        i1 = i1 + -1;

        goto label6;
    }

    private boolean verifyServiceTrusted(android.content.pm.ServiceInfo)
    {
        com.android.server.media.RemoteDisplayProviderWatcher r0;
        android.content.pm.ServiceInfo r1;
        java.lang.String $r2, $r5, $r8, $r10, $r11, $r12, $r16, $r17, $r19;
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r9, $r13, $r14, $r15, $r18, $r20;
        boolean $z0, $z1;

        r0 := @this: com.android.server.media.RemoteDisplayProviderWatcher;

        r1 := @parameter0: android.content.pm.ServiceInfo;

        $r2 = r1.<android.content.pm.ServiceInfo: java.lang.String permission>;

        if $r2 == null goto label1;

        $r11 = r1.<android.content.pm.ServiceInfo: java.lang.String permission>;

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("android.permission.BIND_REMOTE_DISPLAY");

        if $z0 != 0 goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring remote display provider service because it did not require the BIND_REMOTE_DISPLAY permission in its manifest: ");

        $r5 = r1.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r8 = r1.<android.content.pm.ServiceInfo: java.lang.String name>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("RemoteDisplayProvider", $r10);

        return 0;

     label2:
        $r12 = r1.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $z1 = specialinvoke r0.<com.android.server.media.RemoteDisplayProviderWatcher: boolean hasCaptureVideoPermission(java.lang.String)>($r12);

        if $z1 != 0 goto label3;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring remote display provider service because it does not have the CAPTURE_VIDEO_OUTPUT or CAPTURE_SECURE_VIDEO_OUTPUT permission: ");

        $r16 = r1.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r17 = r1.<android.content.pm.ServiceInfo: java.lang.String name>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("RemoteDisplayProvider", $r19);

        return 0;

     label3:
        return 1;
    }

    public void dump(java.io.PrintWriter, java.lang.String)
    {
        com.android.server.media.RemoteDisplayProviderWatcher r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r6, $r11, $r17, $r21;
        java.lang.StringBuilder $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r16, $r18, $r19, $r22;
        int $i0, $i1;
        boolean $z0;
        java.util.ArrayList $r20;

        r0 := @this: com.android.server.media.RemoteDisplayProviderWatcher;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Watcher");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r6);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mUserId=");

        $i0 = r0.<com.android.server.media.RemoteDisplayProviderWatcher: int mUserId>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r11);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mRunning=");

        $z0 = r0.<com.android.server.media.RemoteDisplayProviderWatcher: boolean mRunning>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r17);

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mProviders.size()=");

        $r20 = r0.<com.android.server.media.RemoteDisplayProviderWatcher: java.util.ArrayList mProviders>;

        $i1 = virtualinvoke $r20.<java.util.ArrayList: int size()>();

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r21);

        return;
    }

    public void start()
    {
        com.android.server.media.RemoteDisplayProviderWatcher r0;
        android.content.IntentFilter r1, $r2;
        boolean $z0;
        android.os.UserHandle $r3;
        int $i0;
        android.content.Context $r4;
        android.content.BroadcastReceiver $r5;
        android.os.Handler $r6, $r9;
        java.lang.Runnable $r8;

        r0 := @this: com.android.server.media.RemoteDisplayProviderWatcher;

        $z0 = r0.<com.android.server.media.RemoteDisplayProviderWatcher: boolean mRunning>;

        if $z0 != 0 goto label1;

        r0.<com.android.server.media.RemoteDisplayProviderWatcher: boolean mRunning> = 1;

        $r2 = new android.content.IntentFilter;

        specialinvoke $r2.<android.content.IntentFilter: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_ADDED");

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_REMOVED");

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_CHANGED");

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_REPLACED");

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_RESTARTED");

        virtualinvoke r1.<android.content.IntentFilter: void addDataScheme(java.lang.String)>("package");

        $r4 = r0.<com.android.server.media.RemoteDisplayProviderWatcher: android.content.Context mContext>;

        $r5 = r0.<com.android.server.media.RemoteDisplayProviderWatcher: android.content.BroadcastReceiver mScanPackagesReceiver>;

        $r3 = new android.os.UserHandle;

        $i0 = r0.<com.android.server.media.RemoteDisplayProviderWatcher: int mUserId>;

        specialinvoke $r3.<android.os.UserHandle: void <init>(int)>($i0);

        $r6 = r0.<com.android.server.media.RemoteDisplayProviderWatcher: android.os.Handler mHandler>;

        virtualinvoke $r4.<android.content.Context: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r5, $r3, r1, null, $r6);

        $r9 = r0.<com.android.server.media.RemoteDisplayProviderWatcher: android.os.Handler mHandler>;

        $r8 = r0.<com.android.server.media.RemoteDisplayProviderWatcher: java.lang.Runnable mScanPackagesRunnable>;

        virtualinvoke $r9.<android.os.Handler: boolean post(java.lang.Runnable)>($r8);

     label1:
        return;
    }

    public void stop()
    {
        com.android.server.media.RemoteDisplayProviderWatcher r0;
        int i0, $i1;
        boolean $z0;
        android.content.BroadcastReceiver $r1;
        android.content.Context $r2;
        java.lang.Runnable $r3;
        android.os.Handler $r4;
        java.util.ArrayList $r5, $r6;
        java.lang.Object $r7;
        com.android.server.media.RemoteDisplayProviderProxy $r8;

        r0 := @this: com.android.server.media.RemoteDisplayProviderWatcher;

        $z0 = r0.<com.android.server.media.RemoteDisplayProviderWatcher: boolean mRunning>;

        if $z0 == 0 goto label2;

        r0.<com.android.server.media.RemoteDisplayProviderWatcher: boolean mRunning> = 0;

        $r2 = r0.<com.android.server.media.RemoteDisplayProviderWatcher: android.content.Context mContext>;

        $r1 = r0.<com.android.server.media.RemoteDisplayProviderWatcher: android.content.BroadcastReceiver mScanPackagesReceiver>;

        virtualinvoke $r2.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r1);

        $r4 = r0.<com.android.server.media.RemoteDisplayProviderWatcher: android.os.Handler mHandler>;

        $r3 = r0.<com.android.server.media.RemoteDisplayProviderWatcher: java.lang.Runnable mScanPackagesRunnable>;

        virtualinvoke $r4.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r3);

        $r5 = r0.<com.android.server.media.RemoteDisplayProviderWatcher: java.util.ArrayList mProviders>;

        $i1 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i0 = -1 + $i1;

     label1:
        if i0 < 0 goto label2;

        $r6 = r0.<com.android.server.media.RemoteDisplayProviderWatcher: java.util.ArrayList mProviders>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r8 = (com.android.server.media.RemoteDisplayProviderProxy) $r7;

        virtualinvoke $r8.<com.android.server.media.RemoteDisplayProviderProxy: void stop()>();

        i0 = i0 + -1;

        goto label1;

     label2:
        return;
    }
}
