class com.android.uiautomator.core.QueryController extends java.lang.Object
{
    private static final boolean DEBUG;
    private static final java.lang.String LOG_TAG;
    private static final boolean VERBOSE;
    private java.lang.String mLastActivityName;
    private java.lang.String mLastTraversedText;
    private final java.lang.Object mLock;
    private int mLogIndent;
    private int mLogParentIndent;
    private int mPatternCounter;
    private int mPatternIndexer;
    private final com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0, $z1;

        $r0 = class "com/android/uiautomator/core/QueryController";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG> = $r1;

        $r2 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>($r2, 3);

        <com.android.uiautomator.core.QueryController: boolean DEBUG> = $z0;

        $r3 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>($r3, 2);

        <com.android.uiautomator.core.QueryController: boolean VERBOSE> = $z1;

        return;
    }

    public void <init>(com.android.uiautomator.core.UiAutomatorBridge)
    {
        com.android.uiautomator.core.QueryController r0;
        com.android.uiautomator.core.UiAutomatorBridge r1;
        java.lang.Object $r2;
        com.android.uiautomator.core.QueryController$1 $r3;

        r0 := @this: com.android.uiautomator.core.QueryController;

        r1 := @parameter0: com.android.uiautomator.core.UiAutomatorBridge;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.uiautomator.core.QueryController: java.lang.Object mLock> = $r2;

        r0.<com.android.uiautomator.core.QueryController: java.lang.String mLastActivityName> = null;

        r0.<com.android.uiautomator.core.QueryController: int mPatternCounter> = 0;

        r0.<com.android.uiautomator.core.QueryController: int mPatternIndexer> = 0;

        r0.<com.android.uiautomator.core.QueryController: int mLogIndent> = 0;

        r0.<com.android.uiautomator.core.QueryController: int mLogParentIndent> = 0;

        r0.<com.android.uiautomator.core.QueryController: java.lang.String mLastTraversedText> = "";

        r0.<com.android.uiautomator.core.QueryController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge> = r1;

        $r3 = new com.android.uiautomator.core.QueryController$1;

        specialinvoke $r3.<com.android.uiautomator.core.QueryController$1: void <init>(com.android.uiautomator.core.QueryController)>(r0);

        virtualinvoke r1.<com.android.uiautomator.core.UiAutomatorBridge: void setOnAccessibilityEventListener(android.app.UiAutomation$OnAccessibilityEventListener)>($r3);

        return;
    }

    static java.lang.Object access$000(com.android.uiautomator.core.QueryController)
    {
        com.android.uiautomator.core.QueryController r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.uiautomator.core.QueryController;

        $r1 = r0.<com.android.uiautomator.core.QueryController: java.lang.Object mLock>;

        return $r1;
    }

    static java.lang.String access$102(com.android.uiautomator.core.QueryController, java.lang.String)
    {
        com.android.uiautomator.core.QueryController r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.uiautomator.core.QueryController;

        r1 := @parameter1: java.lang.String;

        r0.<com.android.uiautomator.core.QueryController: java.lang.String mLastActivityName> = r1;

        return r1;
    }

    static java.lang.String access$200(com.android.uiautomator.core.QueryController)
    {
        com.android.uiautomator.core.QueryController r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.uiautomator.core.QueryController;

        $r1 = r0.<com.android.uiautomator.core.QueryController: java.lang.String mLastTraversedText>;

        return $r1;
    }

    static java.lang.String access$202(com.android.uiautomator.core.QueryController, java.lang.String)
    {
        com.android.uiautomator.core.QueryController r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.uiautomator.core.QueryController;

        r1 := @parameter1: java.lang.String;

        r0.<com.android.uiautomator.core.QueryController: java.lang.String mLastTraversedText> = r1;

        return r1;
    }

    static boolean access$300()
    {
        boolean $z0;

        $z0 = <com.android.uiautomator.core.QueryController: boolean DEBUG>;

        return $z0;
    }

    static java.lang.String access$400()
    {
        java.lang.String $r0;

        $r0 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        return $r0;
    }

    private android.view.accessibility.AccessibilityNodeInfo findNodePatternRecursive(com.android.uiautomator.core.UiSelector, android.view.accessibility.AccessibilityNodeInfo, int, com.android.uiautomator.core.UiSelector)
    {
        com.android.uiautomator.core.QueryController r0;
        com.android.uiautomator.core.UiSelector r1, r3;
        android.view.accessibility.AccessibilityNodeInfo r2, r4, r5;
        int i0, i1, i2, $i6, $i7, $i8, $i11, $i13, $i14, $i15, $i16, $i17, $i18;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.lang.String r6, r8, r11, r12, r15, r16, $r18, $r19, $r21, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35;
        java.lang.Object[] r7, r9, r10, r13, r14, r17;
        java.lang.Integer $r20, $r22;

        r0 := @this: com.android.uiautomator.core.QueryController;

        r1 := @parameter0: com.android.uiautomator.core.UiSelector;

        r2 := @parameter1: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter2: int;

        r3 := @parameter3: com.android.uiautomator.core.UiSelector;

        $z1 = virtualinvoke r1.<com.android.uiautomator.core.UiSelector: boolean isMatchFor(android.view.accessibility.AccessibilityNodeInfo,int)>(r2, i0);

        if $z1 == 0 goto label04;

        $z6 = virtualinvoke r1.<com.android.uiautomator.core.UiSelector: boolean isLeaf()>();

        if $z6 == 0 goto label08;

        $i13 = r0.<com.android.uiautomator.core.QueryController: int mPatternIndexer>;

        if $i13 != 0 goto label02;

        $z9 = <com.android.uiautomator.core.QueryController: boolean DEBUG>;

        if $z9 == 0 goto label01;

        r16 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        r17 = newarray (java.lang.Object)[1];

        $r35 = virtualinvoke r1.<com.android.uiautomator.core.UiSelector: java.lang.String dumpToString(boolean)>(0);

        r17[0] = $r35;

        $r34 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s", r17);

        $r33 = specialinvoke r0.<com.android.uiautomator.core.QueryController: java.lang.String formatLog(java.lang.String)>($r34);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r16, $r33);

     label01:
        return r2;

     label02:
        $z8 = <com.android.uiautomator.core.QueryController: boolean DEBUG>;

        if $z8 == 0 goto label03;

        r15 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        r14 = newarray (java.lang.Object)[1];

        $r30 = virtualinvoke r1.<com.android.uiautomator.core.UiSelector: java.lang.String dumpToString(boolean)>(0);

        r14[0] = $r30;

        $r31 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s", r14);

        $r32 = specialinvoke r0.<com.android.uiautomator.core.QueryController: java.lang.String formatLog(java.lang.String)>($r31);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r15, $r32);

     label03:
        $i14 = r0.<com.android.uiautomator.core.QueryController: int mPatternCounter>;

        $i15 = 1 + $i14;

        r0.<com.android.uiautomator.core.QueryController: int mPatternCounter> = $i15;

        $i16 = r0.<com.android.uiautomator.core.QueryController: int mPatternIndexer>;

        $i17 = -1 + $i16;

        r0.<com.android.uiautomator.core.QueryController: int mPatternIndexer> = $i17;

        r1 = r3;

        $i18 = r0.<com.android.uiautomator.core.QueryController: int mLogParentIndent>;

        r0.<com.android.uiautomator.core.QueryController: int mLogIndent> = $i18;

     label04:
        i1 = virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: int getChildCount()>();

        z0 = 0;

        i2 = 0;

     label05:
        if i2 >= i1 goto label14;

        r4 = virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getChild(int)>(i2);

        if r4 != null goto label12;

        r8 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        r9 = newarray (java.lang.Object)[2];

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        r9[0] = $r22;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        r9[1] = $r20;

        $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("AccessibilityNodeInfo returned a null child (%d of %d)", r9);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(r8, $r21);

        if z0 != 0 goto label06;

        r11 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        r10 = newarray (java.lang.Object)[1];

        $r23 = virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: java.lang.String toString()>();

        r10[0] = $r23;

        $r24 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("parent = %s", r10);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(r11, $r24);

     label06:
        z0 = 1;

     label07:
        i2 = i2 + 1;

        goto label05;

     label08:
        $z5 = <com.android.uiautomator.core.QueryController: boolean DEBUG>;

        if $z5 == 0 goto label09;

        r12 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        r13 = newarray (java.lang.Object)[1];

        $r27 = virtualinvoke r1.<com.android.uiautomator.core.UiSelector: java.lang.String dumpToString(boolean)>(0);

        r13[0] = $r27;

        $r28 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s", r13);

        $r29 = specialinvoke r0.<com.android.uiautomator.core.QueryController: java.lang.String formatLog(java.lang.String)>($r28);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r12, $r29);

     label09:
        $z4 = virtualinvoke r1.<com.android.uiautomator.core.UiSelector: boolean hasChildSelector()>();

        if $z4 == 0 goto label10;

        $i8 = r0.<com.android.uiautomator.core.QueryController: int mLogIndent>;

        $i11 = 1 + $i8;

        r0.<com.android.uiautomator.core.QueryController: int mLogIndent> = $i11;

        r1 = virtualinvoke r1.<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector getChildSelector()>();

        if r1 != null goto label04;

        $r26 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r26, "Error: A child selector without content");

        return null;

     label10:
        $z7 = virtualinvoke r1.<com.android.uiautomator.core.UiSelector: boolean hasParentSelector()>();

        if $z7 == 0 goto label04;

        $i7 = r0.<com.android.uiautomator.core.QueryController: int mLogIndent>;

        $i6 = 1 + $i7;

        r0.<com.android.uiautomator.core.QueryController: int mLogIndent> = $i6;

        r1 = virtualinvoke r1.<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector getParentSelector()>();

        if r1 != null goto label11;

        $r25 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r25, "Error: A parent selector without content");

        return null;

     label11:
        r2 = virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getParent()>();

        if r2 != null goto label04;

        return null;

     label12:
        $z3 = virtualinvoke r4.<android.view.accessibility.AccessibilityNodeInfo: boolean isVisibleToUser()>();

        if $z3 != 0 goto label13;

        $z2 = <com.android.uiautomator.core.QueryController: boolean DEBUG>;

        if $z2 == 0 goto label07;

        r6 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        r7 = newarray (java.lang.Object)[1];

        $r18 = virtualinvoke r4.<android.view.accessibility.AccessibilityNodeInfo: java.lang.String toString()>();

        r7[0] = $r18;

        $r19 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Skipping invisible child: %s", r7);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r6, $r19);

        goto label07;

     label13:
        r5 = specialinvoke r0.<com.android.uiautomator.core.QueryController: android.view.accessibility.AccessibilityNodeInfo findNodePatternRecursive(com.android.uiautomator.core.UiSelector,android.view.accessibility.AccessibilityNodeInfo,int,com.android.uiautomator.core.UiSelector)>(r1, r4, i2, r3);

        if r5 == null goto label07;

        return r5;

     label14:
        return null;
    }

    private android.view.accessibility.AccessibilityNodeInfo findNodeRegularRecursive(com.android.uiautomator.core.UiSelector, android.view.accessibility.AccessibilityNodeInfo, int)
    {
        com.android.uiautomator.core.QueryController r0;
        com.android.uiautomator.core.UiSelector r1;
        android.view.accessibility.AccessibilityNodeInfo r2, r3, r4;
        int i0, i1, i2, $i6, $i7, $i9, $i10;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.String r5, r7, r9, r12, $r13, $r14, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24;
        java.lang.Object[] r6, r8, r10, r11;
        java.lang.Integer $r15, $r16;

        r0 := @this: com.android.uiautomator.core.QueryController;

        r1 := @parameter0: com.android.uiautomator.core.UiSelector;

        r2 := @parameter1: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter2: int;

        $z1 = virtualinvoke r1.<com.android.uiautomator.core.UiSelector: boolean isMatchFor(android.view.accessibility.AccessibilityNodeInfo,int)>(r2, i0);

        if $z1 == 0 goto label05;

        $z4 = <com.android.uiautomator.core.QueryController: boolean DEBUG>;

        if $z4 == 0 goto label01;

        r12 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        r11 = newarray (java.lang.Object)[1];

        $r23 = virtualinvoke r1.<com.android.uiautomator.core.UiSelector: java.lang.String dumpToString(boolean)>(0);

        r11[0] = $r23;

        $r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s", r11);

        $r24 = specialinvoke r0.<com.android.uiautomator.core.QueryController: java.lang.String formatLog(java.lang.String)>($r22);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r12, $r24);

     label01:
        $z5 = virtualinvoke r1.<com.android.uiautomator.core.UiSelector: boolean isLeaf()>();

        if $z5 == 0 goto label02;

        return r2;

     label02:
        $z6 = virtualinvoke r1.<com.android.uiautomator.core.UiSelector: boolean hasChildSelector()>();

        if $z6 == 0 goto label03;

        $i10 = r0.<com.android.uiautomator.core.QueryController: int mLogIndent>;

        $i9 = 1 + $i10;

        r0.<com.android.uiautomator.core.QueryController: int mLogIndent> = $i9;

        r1 = virtualinvoke r1.<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector getChildSelector()>();

        if r1 != null goto label05;

        $r21 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r21, "Error: A child selector without content");

        return null;

     label03:
        $z7 = virtualinvoke r1.<com.android.uiautomator.core.UiSelector: boolean hasParentSelector()>();

        if $z7 == 0 goto label05;

        $i6 = r0.<com.android.uiautomator.core.QueryController: int mLogIndent>;

        $i7 = 1 + $i6;

        r0.<com.android.uiautomator.core.QueryController: int mLogIndent> = $i7;

        r1 = virtualinvoke r1.<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector getParentSelector()>();

        if r1 != null goto label04;

        $r20 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r20, "Error: A parent selector without content");

        return null;

     label04:
        r2 = virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getParent()>();

        if r2 != null goto label05;

        return null;

     label05:
        i1 = virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: int getChildCount()>();

        z0 = 0;

        i2 = 0;

     label06:
        if i2 >= i1 goto label11;

        r3 = virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getChild(int)>(i2);

        if r3 != null goto label09;

        r7 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        r8 = newarray (java.lang.Object)[2];

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        r8[0] = $r16;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        r8[1] = $r15;

        $r18 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("AccessibilityNodeInfo returned a null child (%d of %d)", r8);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(r7, $r18);

        if z0 != 0 goto label07;

        r9 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        r10 = newarray (java.lang.Object)[1];

        $r17 = virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: java.lang.String toString()>();

        r10[0] = $r17;

        $r19 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("parent = %s", r10);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(r9, $r19);

     label07:
        z0 = 1;

     label08:
        i2 = i2 + 1;

        goto label06;

     label09:
        $z2 = virtualinvoke r3.<android.view.accessibility.AccessibilityNodeInfo: boolean isVisibleToUser()>();

        if $z2 != 0 goto label10;

        $z3 = <com.android.uiautomator.core.QueryController: boolean VERBOSE>;

        if $z3 == 0 goto label08;

        r5 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        r6 = newarray (java.lang.Object)[1];

        $r13 = virtualinvoke r3.<android.view.accessibility.AccessibilityNodeInfo: java.lang.String toString()>();

        r6[0] = $r13;

        $r14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Skipping invisible child: %s", r6);

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>(r5, $r14);

        goto label08;

     label10:
        r4 = specialinvoke r0.<com.android.uiautomator.core.QueryController: android.view.accessibility.AccessibilityNodeInfo findNodeRegularRecursive(com.android.uiautomator.core.UiSelector,android.view.accessibility.AccessibilityNodeInfo,int)>(r1, r3, i2);

        if r4 == null goto label08;

        return r4;

     label11:
        return null;
    }

    private java.lang.String formatLog(java.lang.String)
    {
        com.android.uiautomator.core.QueryController r0;
        java.lang.String r1, $r7, $r9, $r10;
        java.lang.StringBuilder r2, $r5;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.Object[] r3, r4;
        java.lang.Integer $r6, $r11;

        r0 := @this: com.android.uiautomator.core.QueryController;

        r1 := @parameter0: java.lang.String;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        r2 = $r5;

        i0 = 0;

     label1:
        $i1 = r0.<com.android.uiautomator.core.QueryController: int mLogIndent>;

        if i0 >= $i1 goto label2;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". . ");

        i0 = i0 + 1;

        goto label1;

     label2:
        $i2 = r0.<com.android.uiautomator.core.QueryController: int mLogIndent>;

        if $i2 <= 0 goto label4;

        r4 = newarray (java.lang.Object)[2];

        $i4 = r0.<com.android.uiautomator.core.QueryController: int mPatternCounter>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        r4[0] = $r11;

        r4[1] = r1;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(". . [%d]: %s", r4);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

     label3:
        $r9 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;

     label4:
        r3 = newarray (java.lang.Object)[2];

        $i3 = r0.<com.android.uiautomator.core.QueryController: int mPatternCounter>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        r3[0] = $r6;

        r3[1] = r1;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(". . [%d]: %s", r3);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        goto label3;
    }

    private void initializeNewSearch()
    {
        com.android.uiautomator.core.QueryController r0;

        r0 := @this: com.android.uiautomator.core.QueryController;

        r0.<com.android.uiautomator.core.QueryController: int mPatternCounter> = 0;

        r0.<com.android.uiautomator.core.QueryController: int mPatternIndexer> = 0;

        r0.<com.android.uiautomator.core.QueryController: int mLogIndent> = 0;

        r0.<com.android.uiautomator.core.QueryController: int mLogParentIndent> = 0;

        return;
    }

    private android.view.accessibility.AccessibilityNodeInfo translateCompoundSelector(com.android.uiautomator.core.UiSelector, android.view.accessibility.AccessibilityNodeInfo, boolean)
    {
        com.android.uiautomator.core.QueryController r0;
        com.android.uiautomator.core.UiSelector r1, $r14, $r29, $r30, $r31;
        android.view.accessibility.AccessibilityNodeInfo r2, r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.lang.String r4, $r6, $r8, $r11, $r12, $r16, $r18, $r20, $r21, $r23, $r26, $r28;
        java.lang.Object[] r5, $r7;
        java.lang.StringBuilder $r9, $r10, $r13, $r15, $r17, $r19, $r24, $r25, $r27;
        int $i3;
        java.lang.Integer $r22;

        r0 := @this: com.android.uiautomator.core.QueryController;

        r1 := @parameter0: com.android.uiautomator.core.UiSelector;

        r2 := @parameter1: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter2: boolean;

        $z1 = virtualinvoke r1.<com.android.uiautomator.core.UiSelector: boolean hasContainerSelector()>();

        if $z1 == 0 goto label04;

        $r30 = virtualinvoke r1.<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector getContainerSelector()>();

        $z10 = virtualinvoke $r30.<com.android.uiautomator.core.UiSelector: boolean hasContainerSelector()>();

        if $z10 == 0 goto label03;

        $r31 = virtualinvoke r1.<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector getContainerSelector()>();

        r3 = specialinvoke r0.<com.android.uiautomator.core.QueryController: android.view.accessibility.AccessibilityNodeInfo translateCompoundSelector(com.android.uiautomator.core.UiSelector,android.view.accessibility.AccessibilityNodeInfo,boolean)>($r31, r2, 0);

        specialinvoke r0.<com.android.uiautomator.core.QueryController: void initializeNewSearch()>();

     label01:
        if r3 != null goto label05;

        $z9 = <com.android.uiautomator.core.QueryController: boolean DEBUG>;

        if $z9 == 0 goto label02;

        $r23 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Container selector not found: ");

        $r28 = virtualinvoke r1.<com.android.uiautomator.core.UiSelector: java.lang.String dumpToString(boolean)>(0);

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r23, $r26);

     label02:
        return null;

     label03:
        $r29 = virtualinvoke r1.<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector getContainerSelector()>();

        r3 = specialinvoke r0.<com.android.uiautomator.core.QueryController: android.view.accessibility.AccessibilityNodeInfo translateReqularSelector(com.android.uiautomator.core.UiSelector,android.view.accessibility.AccessibilityNodeInfo)>($r29, r2);

        goto label01;

     label04:
        r3 = specialinvoke r0.<com.android.uiautomator.core.QueryController: android.view.accessibility.AccessibilityNodeInfo translateReqularSelector(com.android.uiautomator.core.UiSelector,android.view.accessibility.AccessibilityNodeInfo)>(r1, r2);

        goto label01;

     label05:
        $z2 = virtualinvoke r1.<com.android.uiautomator.core.UiSelector: boolean hasPatternSelector()>();

        if $z2 == 0 goto label07;

        $r14 = virtualinvoke r1.<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector getPatternSelector()>();

        r3 = specialinvoke r0.<com.android.uiautomator.core.QueryController: android.view.accessibility.AccessibilityNodeInfo translatePatternSelector(com.android.uiautomator.core.UiSelector,android.view.accessibility.AccessibilityNodeInfo,boolean)>($r14, r3, z0);

        if z0 == 0 goto label06;

        r4 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        r5 = newarray (java.lang.Object)[2];

        $i3 = r0.<com.android.uiautomator.core.QueryController: int mPatternCounter>;

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        r5[0] = $r22;

        r5[1] = r1;

        $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Counted %d instances of: %s", r5);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(r4, $r21);

        return null;

     label06:
        if r3 != null goto label07;

        $z8 = <com.android.uiautomator.core.QueryController: boolean DEBUG>;

        if $z8 == 0 goto label02;

        $r18 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pattern selector not found: ");

        $r16 = virtualinvoke r1.<com.android.uiautomator.core.UiSelector: java.lang.String dumpToString(boolean)>(0);

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r18, $r20);

        return null;

     label07:
        $z3 = virtualinvoke r1.<com.android.uiautomator.core.UiSelector: boolean hasContainerSelector()>();

        if $z3 != 0 goto label08;

        $z7 = virtualinvoke r1.<com.android.uiautomator.core.UiSelector: boolean hasPatternSelector()>();

        if $z7 == 0 goto label10;

     label08:
        $z4 = virtualinvoke r1.<com.android.uiautomator.core.UiSelector: boolean hasChildSelector()>();

        if $z4 != 0 goto label09;

        $z6 = virtualinvoke r1.<com.android.uiautomator.core.UiSelector: boolean hasParentSelector()>();

        if $z6 == 0 goto label10;

     label09:
        r3 = specialinvoke r0.<com.android.uiautomator.core.QueryController: android.view.accessibility.AccessibilityNodeInfo translateReqularSelector(com.android.uiautomator.core.UiSelector,android.view.accessibility.AccessibilityNodeInfo)>(r1, r3);

     label10:
        if r3 != null goto label11;

        $z5 = <com.android.uiautomator.core.QueryController: boolean DEBUG>;

        if $z5 == 0 goto label02;

        $r11 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Object Not Found for selector ");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r11, $r12);

        return null;

     label11:
        $r6 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = r1;

        $r7[1] = r3;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Matched selector: %s <<==>> [%s]", $r7);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r6, $r8);

        return r3;
    }

    private android.view.accessibility.AccessibilityNodeInfo translatePatternSelector(com.android.uiautomator.core.UiSelector, android.view.accessibility.AccessibilityNodeInfo, boolean)
    {
        com.android.uiautomator.core.QueryController r0;
        com.android.uiautomator.core.UiSelector r1, r3;
        android.view.accessibility.AccessibilityNodeInfo r2, $r5;
        boolean z0, $z1;
        int i0, $i2, $i3;
        java.lang.String $r4, $r6;

        r0 := @this: com.android.uiautomator.core.QueryController;

        r1 := @parameter0: com.android.uiautomator.core.UiSelector;

        r2 := @parameter1: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter2: boolean;

        $z1 = virtualinvoke r1.<com.android.uiautomator.core.UiSelector: boolean hasPatternSelector()>();

        if $z1 == 0 goto label4;

        if z0 == 0 goto label2;

        r0.<com.android.uiautomator.core.QueryController: int mPatternIndexer> = -1;

     label1:
        r3 = virtualinvoke r1.<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector getPatternSelector()>();

        if r3 != null goto label3;

        $r6 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r6, "Pattern portion of the selector is null or not defined");

        return null;

     label2:
        $i2 = virtualinvoke r1.<com.android.uiautomator.core.UiSelector: int getInstance()>();

        r0.<com.android.uiautomator.core.QueryController: int mPatternIndexer> = $i2;

        goto label1;

     label3:
        $i3 = r0.<com.android.uiautomator.core.QueryController: int mLogIndent>;

        i0 = 1 + $i3;

        r0.<com.android.uiautomator.core.QueryController: int mLogIndent> = i0;

        r0.<com.android.uiautomator.core.QueryController: int mLogParentIndent> = i0;

        $r5 = specialinvoke r0.<com.android.uiautomator.core.QueryController: android.view.accessibility.AccessibilityNodeInfo findNodePatternRecursive(com.android.uiautomator.core.UiSelector,android.view.accessibility.AccessibilityNodeInfo,int,com.android.uiautomator.core.UiSelector)>(r3, r2, 0, r3);

        return $r5;

     label4:
        $r4 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r4, "Selector must have a pattern selector defined");

        return null;
    }

    private android.view.accessibility.AccessibilityNodeInfo translateReqularSelector(com.android.uiautomator.core.UiSelector, android.view.accessibility.AccessibilityNodeInfo)
    {
        com.android.uiautomator.core.QueryController r0;
        com.android.uiautomator.core.UiSelector r1;
        android.view.accessibility.AccessibilityNodeInfo r2, $r3;

        r0 := @this: com.android.uiautomator.core.QueryController;

        r1 := @parameter0: com.android.uiautomator.core.UiSelector;

        r2 := @parameter1: android.view.accessibility.AccessibilityNodeInfo;

        $r3 = specialinvoke r0.<com.android.uiautomator.core.QueryController: android.view.accessibility.AccessibilityNodeInfo findNodeRegularRecursive(com.android.uiautomator.core.UiSelector,android.view.accessibility.AccessibilityNodeInfo,int)>(r1, r2, 0);

        return $r3;
    }

    public void clearLastTraversedText()
    {
        com.android.uiautomator.core.QueryController r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r4;
        com.android.uiautomator.core.UiAutomatorBridge $r3;

        r0 := @this: com.android.uiautomator.core.QueryController;

        $r3 = r0.<com.android.uiautomator.core.QueryController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge>;

        virtualinvoke $r3.<com.android.uiautomator.core.UiAutomatorBridge: void waitForIdle()>();

        r1 = r0.<com.android.uiautomator.core.QueryController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<com.android.uiautomator.core.QueryController: java.lang.String mLastTraversedText> = "";

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(com.android.uiautomator.core.UiSelector)
    {
        com.android.uiautomator.core.QueryController r0;
        com.android.uiautomator.core.UiSelector r1;
        android.view.accessibility.AccessibilityNodeInfo $r2;

        r0 := @this: com.android.uiautomator.core.QueryController;

        r1 := @parameter0: com.android.uiautomator.core.UiSelector;

        $r2 = virtualinvoke r0.<com.android.uiautomator.core.QueryController: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(com.android.uiautomator.core.UiSelector,boolean)>(r1, 0);

        return $r2;
    }

    protected android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(com.android.uiautomator.core.UiSelector, boolean)
    {
        com.android.uiautomator.core.QueryController r0;
        com.android.uiautomator.core.UiSelector r1, $r7;
        boolean z0, $z1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r14;
        android.view.accessibility.AccessibilityNodeInfo r4, r5;
        com.android.uiautomator.core.UiAutomatorBridge $r6;
        java.lang.String $r8, $r9, $r13;
        java.lang.StringBuilder $r10, $r11, $r12;

        r0 := @this: com.android.uiautomator.core.QueryController;

        r1 := @parameter0: com.android.uiautomator.core.UiSelector;

        z0 := @parameter1: boolean;

        $r6 = r0.<com.android.uiautomator.core.QueryController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge>;

        virtualinvoke $r6.<com.android.uiautomator.core.UiAutomatorBridge: void waitForIdle()>();

        specialinvoke r0.<com.android.uiautomator.core.QueryController: void initializeNewSearch()>();

        $z1 = <com.android.uiautomator.core.QueryController: boolean DEBUG>;

        if $z1 == 0 goto label01;

        $r9 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Searching: ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r9, $r13);

     label01:
        r2 = r0.<com.android.uiautomator.core.QueryController: java.lang.Object mLock>;

        entermonitor r2;

     label02:
        r4 = virtualinvoke r0.<com.android.uiautomator.core.QueryController: android.view.accessibility.AccessibilityNodeInfo getRootNode()>();

     label03:
        if r4 != null goto label06;

     label04:
        $r8 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r8, "Cannot proceed when root node is null. Aborted search");

        exitmonitor r2;

     label05:
        return null;

     label06:
        $r7 = new com.android.uiautomator.core.UiSelector;

        specialinvoke $r7.<com.android.uiautomator.core.UiSelector: void <init>(com.android.uiautomator.core.UiSelector)>(r1);

        r5 = specialinvoke r0.<com.android.uiautomator.core.QueryController: android.view.accessibility.AccessibilityNodeInfo translateCompoundSelector(com.android.uiautomator.core.UiSelector,android.view.accessibility.AccessibilityNodeInfo,boolean)>($r7, r4, z0);

        exitmonitor r2;

     label07:
        return r5;

     label08:
        $r14 := @caughtexception;

        r3 = $r14;

     label09:
        exitmonitor r2;

     label10:
        throw r3;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public android.view.accessibility.AccessibilityNodeInfo getAccessibilityRootNode()
    {
        com.android.uiautomator.core.QueryController r0;
        com.android.uiautomator.core.UiAutomatorBridge $r1;
        android.view.accessibility.AccessibilityNodeInfo $r2;

        r0 := @this: com.android.uiautomator.core.QueryController;

        $r1 = r0.<com.android.uiautomator.core.QueryController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge>;

        $r2 = virtualinvoke $r1.<com.android.uiautomator.core.UiAutomatorBridge: android.view.accessibility.AccessibilityNodeInfo getRootInActiveWindow()>();

        return $r2;
    }

    public java.lang.String getCurrentActivityName()
    {
        com.android.uiautomator.core.QueryController r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r5;
        java.lang.String r3;
        com.android.uiautomator.core.UiAutomatorBridge $r4;

        r0 := @this: com.android.uiautomator.core.QueryController;

        $r4 = r0.<com.android.uiautomator.core.QueryController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge>;

        virtualinvoke $r4.<com.android.uiautomator.core.UiAutomatorBridge: void waitForIdle()>();

        r1 = r0.<com.android.uiautomator.core.QueryController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r3 = r0.<com.android.uiautomator.core.QueryController: java.lang.String mLastActivityName>;

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.lang.String getCurrentPackageName()
    {
        com.android.uiautomator.core.QueryController r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        com.android.uiautomator.core.UiAutomatorBridge $r2;
        java.lang.CharSequence $r3, $r4;
        java.lang.String $r5;

        r0 := @this: com.android.uiautomator.core.QueryController;

        $r2 = r0.<com.android.uiautomator.core.QueryController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge>;

        virtualinvoke $r2.<com.android.uiautomator.core.UiAutomatorBridge: void waitForIdle()>();

        r1 = virtualinvoke r0.<com.android.uiautomator.core.QueryController: android.view.accessibility.AccessibilityNodeInfo getRootNode()>();

        if r1 != null goto label2;

     label1:
        return null;

     label2:
        $r3 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getPackageName()>();

        if $r3 == null goto label1;

        $r4 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getPackageName()>();

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        return $r5;
    }

    public java.lang.String getLastTraversedText()
    {
        com.android.uiautomator.core.QueryController r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r6;
        java.lang.String r3, $r5;
        com.android.uiautomator.core.UiAutomatorBridge $r4;
        int $i0;

        r0 := @this: com.android.uiautomator.core.QueryController;

        $r4 = r0.<com.android.uiautomator.core.QueryController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge>;

        virtualinvoke $r4.<com.android.uiautomator.core.UiAutomatorBridge: void waitForIdle()>();

        r1 = r0.<com.android.uiautomator.core.QueryController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r5 = r0.<com.android.uiautomator.core.QueryController: java.lang.String mLastTraversedText>;

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i0 <= 0 goto label3;

        r3 = r0.<com.android.uiautomator.core.QueryController: java.lang.String mLastTraversedText>;

        exitmonitor r1;

     label2:
        return r3;

     label3:
        exitmonitor r1;

     label4:
        return null;

     label5:
        $r6 := @caughtexception;

        r2 = $r6;

     label6:
        exitmonitor r1;

     label7:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public int getPatternCount(com.android.uiautomator.core.UiSelector)
    {
        com.android.uiautomator.core.QueryController r0;
        com.android.uiautomator.core.UiSelector r1;
        int $i0;

        r0 := @this: com.android.uiautomator.core.QueryController;

        r1 := @parameter0: com.android.uiautomator.core.UiSelector;

        virtualinvoke r0.<com.android.uiautomator.core.QueryController: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(com.android.uiautomator.core.UiSelector,boolean)>(r1, 1);

        $i0 = r0.<com.android.uiautomator.core.QueryController: int mPatternCounter>;

        return $i0;
    }

    protected android.view.accessibility.AccessibilityNodeInfo getRootNode()
    {
        com.android.uiautomator.core.QueryController r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        int i0;
        com.android.uiautomator.core.UiAutomatorBridge $r2;
        java.lang.String $r3;

        r0 := @this: com.android.uiautomator.core.QueryController;

        r1 = null;

        i0 = 0;

     label1:
        if i0 >= 4 goto label4;

        $r2 = r0.<com.android.uiautomator.core.QueryController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge>;

        r1 = virtualinvoke $r2.<com.android.uiautomator.core.UiAutomatorBridge: android.view.accessibility.AccessibilityNodeInfo getRootInActiveWindow()>();

        if r1 == null goto label2;

        return r1;

     label2:
        if i0 >= 3 goto label3;

        $r3 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r3, "Got null root node from accessibility - Retrying...");

        staticinvoke <android.os.SystemClock: void sleep(long)>(250L);

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        return r1;
    }
}
