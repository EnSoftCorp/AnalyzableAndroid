public class com.android.internal.view.menu.ActionMenuItemView extends android.widget.TextView implements com.android.internal.view.menu.MenuView$ItemView, android.view.View$OnClickListener, android.view.View$OnLongClickListener, com.android.internal.view.menu.ActionMenuView$ActionMenuChildView
{
    private static final int MAX_ICON_SIZE;
    private static final java.lang.String TAG;
    private boolean mAllowTextWithIcon;
    private boolean mExpandedFormat;
    private android.graphics.drawable.Drawable mIcon;
    private com.android.internal.view.menu.MenuItemImpl mItemData;
    private com.android.internal.view.menu.MenuBuilder$ItemInvoker mItemInvoker;
    private int mMaxIconSize;
    private int mMinWidth;
    private int mSavedPaddingLeft;
    private java.lang.CharSequence mTitle;

    public void <init>(android.content.Context)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        android.content.Context r1;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, $i1, $i2;
        android.content.res.Resources r3;
        android.content.res.TypedArray r4;
        boolean $z0;
        int[] $r5;
        android.util.DisplayMetrics $r6;
        float $f0, $f1, $f2;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $z0 = virtualinvoke r3.<android.content.res.Resources: boolean getBoolean(int)>(17891398);

        r0.<com.android.internal.view.menu.ActionMenuItemView: boolean mAllowTextWithIcon> = $z0;

        $r5 = <com.android.internal.R$styleable: int[] ActionMenuItemView>;

        r4 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r5, 0, 0);

        $i1 = virtualinvoke r4.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(0, 0);

        r0.<com.android.internal.view.menu.ActionMenuItemView: int mMinWidth> = $i1;

        virtualinvoke r4.<android.content.res.TypedArray: void recycle()>();

        $r6 = virtualinvoke r3.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = $r6.<android.util.DisplayMetrics: float density>;

        $f1 = 32.0F * $f0;

        $f2 = 0.5F + $f1;

        $i2 = (int) $f2;

        r0.<com.android.internal.view.menu.ActionMenuItemView: int mMaxIconSize> = $i2;

        virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: void setOnClickListener(android.view.View$OnClickListener)>(r0);

        virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: void setOnLongClickListener(android.view.View$OnLongClickListener)>(r0);

        r0.<com.android.internal.view.menu.ActionMenuItemView: int mSavedPaddingLeft> = -1;

        return;
    }

    private void updateTextButtonVisibility()
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        boolean z0, z1, z2, z3, $z4, $z5, $z6;
        java.lang.CharSequence r1, $r2;
        android.graphics.drawable.Drawable $r3;
        com.android.internal.view.menu.MenuItemImpl $r4;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        $r2 = r0.<com.android.internal.view.menu.ActionMenuItemView: java.lang.CharSequence mTitle>;

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z4 != 0 goto label5;

        z0 = 1;

     label1:
        $r3 = r0.<com.android.internal.view.menu.ActionMenuItemView: android.graphics.drawable.Drawable mIcon>;

        if $r3 == null goto label2;

        $r4 = r0.<com.android.internal.view.menu.ActionMenuItemView: com.android.internal.view.menu.MenuItemImpl mItemData>;

        z2 = virtualinvoke $r4.<com.android.internal.view.menu.MenuItemImpl: boolean showsTextAsAction()>();

        z1 = 0;

        if z2 == 0 goto label3;

        $z6 = r0.<com.android.internal.view.menu.ActionMenuItemView: boolean mAllowTextWithIcon>;

        if $z6 != 0 goto label2;

        z3 = r0.<com.android.internal.view.menu.ActionMenuItemView: boolean mExpandedFormat>;

        z1 = 0;

        if z3 == 0 goto label3;

     label2:
        z1 = 1;

     label3:
        $z5 = z0 & z1;

        if $z5 == 0 goto label6;

        r1 = r0.<com.android.internal.view.menu.ActionMenuItemView: java.lang.CharSequence mTitle>;

     label4:
        virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: void setText(java.lang.CharSequence)>(r1);

        return;

     label5:
        z0 = 0;

        goto label1;

     label6:
        r1 = null;

        goto label4;
    }

    public boolean dispatchHoverEvent(android.view.MotionEvent)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        android.view.MotionEvent r1;
        boolean $z0;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: boolean onHoverEvent(android.view.MotionEvent)>(r1);

        return $z0;
    }

    public boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        android.view.accessibility.AccessibilityEvent r1;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        return 1;
    }

    public com.android.internal.view.menu.MenuItemImpl getItemData()
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        com.android.internal.view.menu.MenuItemImpl $r1;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        $r1 = r0.<com.android.internal.view.menu.ActionMenuItemView: com.android.internal.view.menu.MenuItemImpl mItemData>;

        return $r1;
    }

    public boolean hasText()
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        java.lang.CharSequence $r1;
        boolean $z0;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        $r1 = virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: java.lang.CharSequence getText()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void initialize(com.android.internal.view.menu.MenuItemImpl, int)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        com.android.internal.view.menu.MenuItemImpl r1;
        int i0, $i2;
        byte b1;
        android.graphics.drawable.Drawable $r2;
        java.lang.CharSequence $r3;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        r1 := @parameter0: com.android.internal.view.menu.MenuItemImpl;

        i0 := @parameter1: int;

        r0.<com.android.internal.view.menu.ActionMenuItemView: com.android.internal.view.menu.MenuItemImpl mItemData> = r1;

        $r2 = virtualinvoke r1.<com.android.internal.view.menu.MenuItemImpl: android.graphics.drawable.Drawable getIcon()>();

        virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)>($r2);

        $r3 = virtualinvoke r1.<com.android.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitleForItemView(com.android.internal.view.menu.MenuView$ItemView)>(r0);

        virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)>($r3);

        $i2 = virtualinvoke r1.<com.android.internal.view.menu.MenuItemImpl: int getItemId()>();

        virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: void setId(int)>($i2);

        $z0 = virtualinvoke r1.<com.android.internal.view.menu.MenuItemImpl: boolean isVisible()>();

        if $z0 == 0 goto label2;

        b1 = 0;

     label1:
        virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: void setVisibility(int)>(b1);

        $z1 = virtualinvoke r1.<com.android.internal.view.menu.MenuItemImpl: boolean isEnabled()>();

        virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: void setEnabled(boolean)>($z1);

        return;

     label2:
        b1 = 8;

        goto label1;
    }

    public boolean needsDividerAfter()
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        boolean $z0;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        $z0 = virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: boolean hasText()>();

        return $z0;
    }

    public boolean needsDividerBefore()
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        boolean $z0;
        com.android.internal.view.menu.MenuItemImpl $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        $z0 = virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: boolean hasText()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.internal.view.menu.ActionMenuItemView: com.android.internal.view.menu.MenuItemImpl mItemData>;

        $r2 = virtualinvoke $r1.<com.android.internal.view.menu.MenuItemImpl: android.graphics.drawable.Drawable getIcon()>();

        if $r2 != null goto label1;

        return 1;

     label1:
        return 0;
    }

    public void onClick(android.view.View)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        android.view.View r1;
        com.android.internal.view.menu.MenuBuilder$ItemInvoker $r2, $r4;
        com.android.internal.view.menu.MenuItemImpl $r3;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<com.android.internal.view.menu.ActionMenuItemView: com.android.internal.view.menu.MenuBuilder$ItemInvoker mItemInvoker>;

        if $r2 == null goto label1;

        $r4 = r0.<com.android.internal.view.menu.ActionMenuItemView: com.android.internal.view.menu.MenuBuilder$ItemInvoker mItemInvoker>;

        $r3 = r0.<com.android.internal.view.menu.ActionMenuItemView: com.android.internal.view.menu.MenuItemImpl mItemData>;

        interfaceinvoke $r4.<com.android.internal.view.menu.MenuBuilder$ItemInvoker: boolean invokeItem(com.android.internal.view.menu.MenuItemImpl)>($r3);

     label1:
        return;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        android.content.res.Configuration r1;
        android.content.Context $r2;
        android.content.res.Resources $r3;
        boolean $z0;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        r1 := @parameter0: android.content.res.Configuration;

        specialinvoke r0.<android.widget.TextView: void onConfigurationChanged(android.content.res.Configuration)>(r1);

        $r2 = virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $z0 = virtualinvoke $r3.<android.content.res.Resources: boolean getBoolean(int)>(17891398);

        r0.<com.android.internal.view.menu.ActionMenuItemView: boolean mAllowTextWithIcon> = $z0;

        specialinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: void updateTextButtonVisibility()>();

        return;
    }

    public boolean onLongClick(android.view.View)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        android.view.View r1;
        int[] r2;
        android.graphics.Rect r3, $r6;
        android.content.Context r4;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        android.widget.Toast r5;
        boolean $z0;
        android.content.res.Resources $r7;
        com.android.internal.view.menu.MenuItemImpl $r8;
        android.util.DisplayMetrics $r9;
        java.lang.CharSequence $r10;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        r1 := @parameter0: android.view.View;

        $z0 = virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: boolean hasText()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        r2 = newarray (int)[2];

        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<android.graphics.Rect: void <init>()>();

        r3 = $r6;

        virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: void getLocationOnScreen(int[])>(r2);

        virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: void getWindowVisibleDisplayFrame(android.graphics.Rect)>(r3);

        r4 = virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: android.content.Context getContext()>();

        i0 = virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: int getWidth()>();

        i1 = virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: int getHeight()>();

        $i5 = r2[1];

        $i4 = i1 / 2;

        i2 = $i5 + $i4;

        $r7 = virtualinvoke r4.<android.content.Context: android.content.res.Resources getResources()>();

        $r9 = virtualinvoke $r7.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        i3 = $r9.<android.util.DisplayMetrics: int widthPixels>;

        $r8 = r0.<com.android.internal.view.menu.ActionMenuItemView: com.android.internal.view.menu.MenuItemImpl mItemData>;

        $r10 = virtualinvoke $r8.<com.android.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitle()>();

        r5 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>(r4, $r10, 0);

        $i7 = virtualinvoke r3.<android.graphics.Rect: int height()>();

        if i2 >= $i7 goto label3;

        $i6 = r2[0];

        $i8 = i3 - $i6;

        $i9 = i0 / 2;

        $i10 = $i8 - $i9;

        virtualinvoke r5.<android.widget.Toast: void setGravity(int,int,int)>(8388661, $i10, i1);

     label2:
        virtualinvoke r5.<android.widget.Toast: void show()>();

        return 1;

     label3:
        virtualinvoke r5.<android.widget.Toast: void setGravity(int,int,int)>(81, 0, i1);

        goto label2;
    }

    protected void onMeasure(int, int)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22;
        boolean z0;
        android.graphics.drawable.Drawable $r1, $r2;
        android.graphics.Rect $r3;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i6 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);

        if $i6 != -2147483648 goto label1;

        $i22 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i1);

        i1 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i22, 1073741824);

     label1:
        z0 = virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: boolean hasText()>();

        if z0 == 0 goto label2;

        $i17 = r0.<com.android.internal.view.menu.ActionMenuItemView: int mSavedPaddingLeft>;

        if $i17 < 0 goto label2;

        $i19 = r0.<com.android.internal.view.menu.ActionMenuItemView: int mSavedPaddingLeft>;

        $i18 = virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: int getPaddingTop()>();

        $i21 = virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: int getPaddingRight()>();

        $i20 = virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: int getPaddingBottom()>();

        specialinvoke r0.<android.widget.TextView: void setPadding(int,int,int,int)>($i19, $i18, $i21, $i20);

     label2:
        specialinvoke r0.<android.widget.TextView: void onMeasure(int,int)>(i0, i1);

        i2 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        i3 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        i4 = virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: int getMeasuredWidth()>();

        if i2 != -2147483648 goto label6;

        $i15 = r0.<com.android.internal.view.menu.ActionMenuItemView: int mMinWidth>;

        i5 = staticinvoke <java.lang.Math: int min(int,int)>(i3, $i15);

     label3:
        if i2 == 1073741824 goto label4;

        $i13 = r0.<com.android.internal.view.menu.ActionMenuItemView: int mMinWidth>;

        if $i13 <= 0 goto label4;

        if i4 >= i5 goto label4;

        $i16 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i5, 1073741824);

        specialinvoke r0.<android.widget.TextView: void onMeasure(int,int)>($i16, i1);

     label4:
        if z0 != 0 goto label5;

        $r1 = r0.<com.android.internal.view.menu.ActionMenuItemView: android.graphics.drawable.Drawable mIcon>;

        if $r1 == null goto label5;

        $i7 = virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: int getMeasuredWidth()>();

        $r2 = r0.<com.android.internal.view.menu.ActionMenuItemView: android.graphics.drawable.Drawable mIcon>;

        $r3 = virtualinvoke $r2.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        $i8 = virtualinvoke $r3.<android.graphics.Rect: int width()>();

        $i10 = $i7 - $i8;

        $i9 = $i10 / 2;

        $i12 = virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: int getPaddingTop()>();

        $i11 = virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: int getPaddingRight()>();

        $i14 = virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: int getPaddingBottom()>();

        specialinvoke r0.<android.widget.TextView: void setPadding(int,int,int,int)>($i9, $i12, $i11, $i14);

     label5:
        return;

     label6:
        i5 = r0.<com.android.internal.view.menu.ActionMenuItemView: int mMinWidth>;

        goto label3;
    }

    public void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        android.view.accessibility.AccessibilityEvent r1;
        java.lang.CharSequence r2;
        boolean $z0;
        java.util.List $r3;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.widget.TextView: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        r2 = virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: java.lang.CharSequence getContentDescription()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 != 0 goto label1;

        $r3 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

     label1:
        return;
    }

    public boolean prefersCondensedTitle()
    {
        com.android.internal.view.menu.ActionMenuItemView r0;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        return 1;
    }

    public void setCheckable(boolean)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        boolean z0;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        z0 := @parameter0: boolean;

        return;
    }

    public void setChecked(boolean)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        boolean z0;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        z0 := @parameter0: boolean;

        return;
    }

    public void setExpandedFormat(boolean)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        boolean z0, $z1;
        com.android.internal.view.menu.MenuItemImpl $r1, $r2;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.internal.view.menu.ActionMenuItemView: boolean mExpandedFormat>;

        if $z1 == z0 goto label1;

        r0.<com.android.internal.view.menu.ActionMenuItemView: boolean mExpandedFormat> = z0;

        $r1 = r0.<com.android.internal.view.menu.ActionMenuItemView: com.android.internal.view.menu.MenuItemImpl mItemData>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.view.menu.ActionMenuItemView: com.android.internal.view.menu.MenuItemImpl mItemData>;

        virtualinvoke $r2.<com.android.internal.view.menu.MenuItemImpl: void actionFormatChanged()>();

     label1:
        return;
    }

    public void setIcon(android.graphics.drawable.Drawable)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        android.graphics.drawable.Drawable r1;
        int i0, i1, $i2, $i3, $i4, $i5;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r0.<com.android.internal.view.menu.ActionMenuItemView: android.graphics.drawable.Drawable mIcon> = r1;

        if r1 == null goto label3;

        i0 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        i1 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $i2 = r0.<com.android.internal.view.menu.ActionMenuItemView: int mMaxIconSize>;

        if i0 <= $i2 goto label1;

        $i5 = r0.<com.android.internal.view.menu.ActionMenuItemView: int mMaxIconSize>;

        $f6 = (float) $i5;

        $f7 = (float) i0;

        f1 = $f6 / $f7;

        i0 = r0.<com.android.internal.view.menu.ActionMenuItemView: int mMaxIconSize>;

        $f9 = (float) i1;

        $f8 = f1 * $f9;

        i1 = (int) $f8;

     label1:
        $i3 = r0.<com.android.internal.view.menu.ActionMenuItemView: int mMaxIconSize>;

        if i1 <= $i3 goto label2;

        $i4 = r0.<com.android.internal.view.menu.ActionMenuItemView: int mMaxIconSize>;

        $f3 = (float) $i4;

        $f2 = (float) i1;

        f0 = $f3 / $f2;

        i1 = r0.<com.android.internal.view.menu.ActionMenuItemView: int mMaxIconSize>;

        $f4 = (float) i0;

        $f5 = f0 * $f4;

        i0 = (int) $f5;

     label2:
        virtualinvoke r1.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, i0, i1);

     label3:
        virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>(r1, null, null, null);

        specialinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: void updateTextButtonVisibility()>();

        return;
    }

    public void setItemInvoker(com.android.internal.view.menu.MenuBuilder$ItemInvoker)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        com.android.internal.view.menu.MenuBuilder$ItemInvoker r1;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        r1 := @parameter0: com.android.internal.view.menu.MenuBuilder$ItemInvoker;

        r0.<com.android.internal.view.menu.ActionMenuItemView: com.android.internal.view.menu.MenuBuilder$ItemInvoker mItemInvoker> = r1;

        return;
    }

    public void setPadding(int, int, int, int)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        int i0, i1, i2, i3;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r0.<com.android.internal.view.menu.ActionMenuItemView: int mSavedPaddingLeft> = i0;

        specialinvoke r0.<android.widget.TextView: void setPadding(int,int,int,int)>(i0, i1, i2, i3);

        return;
    }

    public void setShortcut(boolean, char)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        boolean z0;
        char c0;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        z0 := @parameter0: boolean;

        c0 := @parameter1: char;

        return;
    }

    public void setTitle(java.lang.CharSequence)
    {
        com.android.internal.view.menu.ActionMenuItemView r0;
        java.lang.CharSequence r1, $r2;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        r1 := @parameter0: java.lang.CharSequence;

        r0.<com.android.internal.view.menu.ActionMenuItemView: java.lang.CharSequence mTitle> = r1;

        $r2 = r0.<com.android.internal.view.menu.ActionMenuItemView: java.lang.CharSequence mTitle>;

        virtualinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: void setContentDescription(java.lang.CharSequence)>($r2);

        specialinvoke r0.<com.android.internal.view.menu.ActionMenuItemView: void updateTextButtonVisibility()>();

        return;
    }

    public boolean showsIcon()
    {
        com.android.internal.view.menu.ActionMenuItemView r0;

        r0 := @this: com.android.internal.view.menu.ActionMenuItemView;

        return 1;
    }

    public static void <clinit>()
    {
        <com.android.internal.view.menu.ActionMenuItemView: java.lang.String TAG> = "ActionMenuItemView";

        <com.android.internal.view.menu.ActionMenuItemView: int MAX_ICON_SIZE> = 32;

        return;
    }
}
