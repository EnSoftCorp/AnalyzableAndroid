public class com.android.org.conscrypt.CertificateRequest extends com.android.org.conscrypt.Message
{
    final javax.security.auth.x500.X500Principal[] certificate_authorities;
    final byte[] certificate_types;
    private byte[][] encoded_principals;
    private java.lang.String[] types;

    public void <init>(com.android.org.conscrypt.HandshakeIODataStream, int) throws java.io.IOException
    {
        com.android.org.conscrypt.CertificateRequest r0;
        com.android.org.conscrypt.HandshakeIODataStream r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.util.ArrayList r2, $r5;
        byte[] $r3, $r4, $r9;
        javax.security.auth.x500.X500Principal[] $r6, $r8;
        java.lang.Object[] $r7;
        javax.security.auth.x500.X500Principal $r10;

        r0 := @this: com.android.org.conscrypt.CertificateRequest;

        r1 := @parameter0: com.android.org.conscrypt.HandshakeIODataStream;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.org.conscrypt.Message: void <init>()>();

        $i4 = virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: int readUint8()>();

        $r3 = newarray (byte)[$i4];

        r0.<com.android.org.conscrypt.CertificateRequest: byte[] certificate_types> = $r3;

        $r4 = r0.<com.android.org.conscrypt.CertificateRequest: byte[] certificate_types>;

        staticinvoke <libcore.io.Streams: void readFully(java.io.InputStream,byte[])>(r1, $r4);

        i1 = virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: int readUint16()>();

        i2 = 0;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r2 = $r5;

     label1:
        if i2 >= i1 goto label2;

        i3 = virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: int readUint16()>();

        $r10 = new javax.security.auth.x500.X500Principal;

        specialinvoke $r10.<javax.security.auth.x500.X500Principal: void <init>(java.io.InputStream)>(r1);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        $i10 = i2 + 2;

        i2 = i3 + $i10;

        goto label1;

     label2:
        $i5 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        $r6 = newarray (javax.security.auth.x500.X500Principal)[$i5];

        $r7 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r6);

        $r8 = (javax.security.auth.x500.X500Principal[]) $r7;

        r0.<com.android.org.conscrypt.CertificateRequest: javax.security.auth.x500.X500Principal[] certificate_authorities> = $r8;

        $r9 = r0.<com.android.org.conscrypt.CertificateRequest: byte[] certificate_types>;

        $i6 = lengthof $r9;

        $i8 = 3 + $i6;

        $i7 = i2 + $i8;

        r0.<com.android.org.conscrypt.CertificateRequest: int length> = $i7;

        $i9 = r0.<com.android.org.conscrypt.CertificateRequest: int length>;

        if $i9 == i0 goto label3;

        virtualinvoke r0.<com.android.org.conscrypt.CertificateRequest: void fatalAlert(byte,java.lang.String)>(50, "DECODE ERROR: incorrect CertificateRequest");

     label3:
        return;
    }

    public void <init>(byte[], java.security.cert.X509Certificate[])
    {
        com.android.org.conscrypt.CertificateRequest r0;
        byte[] r1, $r10, $r12;
        java.security.cert.X509Certificate[] r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        javax.security.auth.x500.X500Principal[] $r3, $r6, $r9;
        byte[][] $r4, $r11, $r13;
        java.security.cert.X509Certificate $r5;
        javax.security.auth.x500.X500Principal $r7, $r8;

        r0 := @this: com.android.org.conscrypt.CertificateRequest;

        r1 := @parameter0: byte[];

        r2 := @parameter1: java.security.cert.X509Certificate[];

        specialinvoke r0.<com.android.org.conscrypt.Message: void <init>()>();

        if r2 != null goto label1;

        virtualinvoke r0.<com.android.org.conscrypt.CertificateRequest: void fatalAlert(byte,java.lang.String)>(80, "CertificateRequest: array of certificate authority certificates is null");

     label1:
        r0.<com.android.org.conscrypt.CertificateRequest: byte[] certificate_types> = r1;

        i0 = 0;

        $i2 = lengthof r2;

        $r3 = newarray (javax.security.auth.x500.X500Principal)[$i2];

        r0.<com.android.org.conscrypt.CertificateRequest: javax.security.auth.x500.X500Principal[] certificate_authorities> = $r3;

        $i3 = lengthof r2;

        $r4 = newarray (byte[])[$i3];

        r0.<com.android.org.conscrypt.CertificateRequest: byte[][] encoded_principals> = $r4;

        i1 = 0;

     label2:
        $i4 = lengthof r2;

        if i1 >= $i4 goto label3;

        $r6 = r0.<com.android.org.conscrypt.CertificateRequest: javax.security.auth.x500.X500Principal[] certificate_authorities>;

        $r5 = r2[i1];

        $r7 = virtualinvoke $r5.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $r6[i1] = $r7;

        $r11 = r0.<com.android.org.conscrypt.CertificateRequest: byte[][] encoded_principals>;

        $r9 = r0.<com.android.org.conscrypt.CertificateRequest: javax.security.auth.x500.X500Principal[] certificate_authorities>;

        $r8 = $r9[i1];

        $r10 = virtualinvoke $r8.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        $r11[i1] = $r10;

        $r13 = r0.<com.android.org.conscrypt.CertificateRequest: byte[][] encoded_principals>;

        $r12 = $r13[i1];

        $i9 = lengthof $r12;

        $i8 = 2 + $i9;

        i0 = i0 + $i8;

        i1 = i1 + 1;

        goto label2;

     label3:
        $i5 = lengthof r1;

        $i6 = 3 + $i5;

        $i7 = i0 + $i6;

        r0.<com.android.org.conscrypt.CertificateRequest: int length> = $i7;

        return;
    }

    public int getType()
    {
        com.android.org.conscrypt.CertificateRequest r0;

        r0 := @this: com.android.org.conscrypt.CertificateRequest;

        return 13;
    }

    public java.lang.String[] getTypesAsString()
    {
        com.android.org.conscrypt.CertificateRequest r0;
        int i0, $i1, $i2;
        java.lang.String r1;
        java.lang.String[] $r2, $r3, $r5, $r6, $r8;
        byte[] $r4, $r7;
        byte $b3;

        r0 := @this: com.android.org.conscrypt.CertificateRequest;

        $r2 = r0.<com.android.org.conscrypt.CertificateRequest: java.lang.String[] types>;

        if $r2 != null goto label3;

        $r4 = r0.<com.android.org.conscrypt.CertificateRequest: byte[] certificate_types>;

        $i1 = lengthof $r4;

        $r5 = newarray (java.lang.String)[$i1];

        r0.<com.android.org.conscrypt.CertificateRequest: java.lang.String[] types> = $r5;

        i0 = 0;

     label1:
        $r6 = r0.<com.android.org.conscrypt.CertificateRequest: java.lang.String[] types>;

        $i2 = lengthof $r6;

        if i0 >= $i2 goto label3;

        $r7 = r0.<com.android.org.conscrypt.CertificateRequest: byte[] certificate_types>;

        $b3 = $r7[i0];

        r1 = staticinvoke <com.android.org.conscrypt.CipherSuite: java.lang.String getClientKeyType(byte)>($b3);

        if r1 != null goto label2;

        virtualinvoke r0.<com.android.org.conscrypt.CertificateRequest: void fatalAlert(byte,java.lang.String)>(50, "DECODE ERROR: incorrect CertificateRequest");

     label2:
        $r8 = r0.<com.android.org.conscrypt.CertificateRequest: java.lang.String[] types>;

        $r8[i0] = r1;

        i0 = i0 + 1;

        goto label1;

     label3:
        $r3 = r0.<com.android.org.conscrypt.CertificateRequest: java.lang.String[] types>;

        return $r3;
    }

    public void send(com.android.org.conscrypt.HandshakeIODataStream)
    {
        com.android.org.conscrypt.CertificateRequest r0;
        com.android.org.conscrypt.HandshakeIODataStream r1;
        int i0, i1, i2, i3, $i4, $i6, $i7, $i9, $i11, $i12, $i13;
        byte[] $r2, $r3, $r6, $r8, $r10, $r12;
        long $l5, $l8, $l10;
        javax.security.auth.x500.X500Principal[] $r4, $r5;
        byte[][] $r7, $r9, $r11;
        byte $b14;

        r0 := @this: com.android.org.conscrypt.CertificateRequest;

        r1 := @parameter0: com.android.org.conscrypt.HandshakeIODataStream;

        $r2 = r0.<com.android.org.conscrypt.CertificateRequest: byte[] certificate_types>;

        $i4 = lengthof $r2;

        $l5 = (long) $i4;

        virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: void writeUint8(long)>($l5);

        i0 = 0;

     label1:
        $r3 = r0.<com.android.org.conscrypt.CertificateRequest: byte[] certificate_types>;

        $i6 = lengthof $r3;

        if i0 >= $i6 goto label2;

        $r12 = r0.<com.android.org.conscrypt.CertificateRequest: byte[] certificate_types>;

        $b14 = $r12[i0];

        virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: void write(byte)>($b14);

        i0 = i0 + 1;

        goto label1;

     label2:
        i1 = 0;

        i2 = 0;

     label3:
        $r4 = r0.<com.android.org.conscrypt.CertificateRequest: javax.security.auth.x500.X500Principal[] certificate_authorities>;

        $i7 = lengthof $r4;

        if i2 >= $i7 goto label4;

        $r11 = r0.<com.android.org.conscrypt.CertificateRequest: byte[][] encoded_principals>;

        $r10 = $r11[i2];

        $i13 = lengthof $r10;

        $i12 = 2 + $i13;

        i1 = i1 + $i12;

        i2 = i2 + 1;

        goto label3;

     label4:
        $l8 = (long) i1;

        virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: void writeUint16(long)>($l8);

        i3 = 0;

     label5:
        $r5 = r0.<com.android.org.conscrypt.CertificateRequest: javax.security.auth.x500.X500Principal[] certificate_authorities>;

        $i9 = lengthof $r5;

        if i3 >= $i9 goto label6;

        $r7 = r0.<com.android.org.conscrypt.CertificateRequest: byte[][] encoded_principals>;

        $r6 = $r7[i3];

        $i11 = lengthof $r6;

        $l10 = (long) $i11;

        virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: void writeUint16(long)>($l10);

        $r9 = r0.<com.android.org.conscrypt.CertificateRequest: byte[][] encoded_principals>;

        $r8 = $r9[i3];

        virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: void write(byte[])>($r8);

        i3 = i3 + 1;

        goto label5;

     label6:
        return;
    }
}
