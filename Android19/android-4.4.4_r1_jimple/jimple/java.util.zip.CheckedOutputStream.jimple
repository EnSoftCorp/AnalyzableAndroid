public class java.util.zip.CheckedOutputStream extends java.io.FilterOutputStream
{
    private final java.util.zip.Checksum check;

    public void <init>(java.io.OutputStream, java.util.zip.Checksum)
    {
        java.util.zip.CheckedOutputStream r0;
        java.io.OutputStream r1;
        java.util.zip.Checksum r2;

        r0 := @this: java.util.zip.CheckedOutputStream;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: java.util.zip.Checksum;

        specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>(r1);

        r0.<java.util.zip.CheckedOutputStream: java.util.zip.Checksum check> = r2;

        return;
    }

    public java.util.zip.Checksum getChecksum()
    {
        java.util.zip.CheckedOutputStream r0;
        java.util.zip.Checksum $r1;

        r0 := @this: java.util.zip.CheckedOutputStream;

        $r1 = r0.<java.util.zip.CheckedOutputStream: java.util.zip.Checksum check>;

        return $r1;
    }

    public void write(int) throws java.io.IOException
    {
        java.util.zip.CheckedOutputStream r0;
        int i0;
        java.io.OutputStream $r1;
        java.util.zip.Checksum $r2;

        r0 := @this: java.util.zip.CheckedOutputStream;

        i0 := @parameter0: int;

        $r1 = r0.<java.util.zip.CheckedOutputStream: java.io.OutputStream out>;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(i0);

        $r2 = r0.<java.util.zip.CheckedOutputStream: java.util.zip.Checksum check>;

        interfaceinvoke $r2.<java.util.zip.Checksum: void update(int)>(i0);

        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        java.util.zip.CheckedOutputStream r0;
        byte[] r1;
        int i0, i1;
        java.io.OutputStream $r2;
        java.util.zip.Checksum $r3;

        r0 := @this: java.util.zip.CheckedOutputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<java.util.zip.CheckedOutputStream: java.io.OutputStream out>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>(r1, i0, i1);

        $r3 = r0.<java.util.zip.CheckedOutputStream: java.util.zip.Checksum check>;

        interfaceinvoke $r3.<java.util.zip.Checksum: void update(byte[],int,int)>(r1, i0, i1);

        return;
    }
}
