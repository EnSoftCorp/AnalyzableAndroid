public class java.io.PushbackInputStream extends java.io.FilterInputStream
{
    protected byte[] buf;
    protected int pos;

    public void <init>(java.io.InputStream)
    {
        java.io.PushbackInputStream r0;
        java.io.InputStream r1;
        byte[] r2;

        r0 := @this: java.io.PushbackInputStream;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.io.FilterInputStream: void <init>(java.io.InputStream)>(r1);

        if r1 != null goto label2;

        r2 = null;

     label1:
        r0.<java.io.PushbackInputStream: byte[] buf> = r2;

        r0.<java.io.PushbackInputStream: int pos> = 1;

        return;

     label2:
        r2 = newarray (byte)[1];

        goto label1;
    }

    public void <init>(java.io.InputStream, int)
    {
        java.io.PushbackInputStream r0;
        java.io.InputStream r1;
        int i0;
        byte[] r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: java.io.PushbackInputStream;

        r1 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        specialinvoke r0.<java.io.FilterInputStream: void <init>(java.io.InputStream)>(r1);

        if i0 > 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("size <= 0");

        throw $r3;

     label1:
        if r1 != null goto label3;

        r2 = null;

     label2:
        r0.<java.io.PushbackInputStream: byte[] buf> = r2;

        r0.<java.io.PushbackInputStream: int pos> = i0;

        return;

     label3:
        r2 = newarray (byte)[i0];

        goto label2;
    }

    private java.io.IOException streamClosed() throws java.io.IOException
    {
        java.io.PushbackInputStream r0;
        java.io.IOException $r1;

        r0 := @this: java.io.PushbackInputStream;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("PushbackInputStream is closed");

        throw $r1;
    }

    public int available() throws java.io.IOException
    {
        java.io.PushbackInputStream r0;
        byte[] $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4;
        java.io.InputStream $r3;
        java.io.IOException $r4;

        r0 := @this: java.io.PushbackInputStream;

        $r1 = r0.<java.io.PushbackInputStream: byte[] buf>;

        if $r1 != null goto label1;

        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>()>();

        throw $r4;

     label1:
        $r2 = r0.<java.io.PushbackInputStream: byte[] buf>;

        $i1 = lengthof $r2;

        $i0 = r0.<java.io.PushbackInputStream: int pos>;

        $i2 = $i1 - $i0;

        $r3 = r0.<java.io.PushbackInputStream: java.io.InputStream in>;

        $i3 = virtualinvoke $r3.<java.io.InputStream: int available()>();

        $i4 = $i2 + $i3;

        return $i4;
    }

    public void close() throws java.io.IOException
    {
        java.io.PushbackInputStream r0;
        java.io.InputStream $r1, $r2;

        r0 := @this: java.io.PushbackInputStream;

        $r1 = r0.<java.io.PushbackInputStream: java.io.InputStream in>;

        if $r1 == null goto label1;

        $r2 = r0.<java.io.PushbackInputStream: java.io.InputStream in>;

        virtualinvoke $r2.<java.io.InputStream: void close()>();

        r0.<java.io.PushbackInputStream: java.io.InputStream in> = null;

        r0.<java.io.PushbackInputStream: byte[] buf> = null;

     label1:
        return;
    }

    public void mark(int)
    {
        java.io.PushbackInputStream r0;
        int i0;

        r0 := @this: java.io.PushbackInputStream;

        i0 := @parameter0: int;

        return;
    }

    public boolean markSupported()
    {
        java.io.PushbackInputStream r0;

        r0 := @this: java.io.PushbackInputStream;

        return 0;
    }

    public int read() throws java.io.IOException
    {
        java.io.PushbackInputStream r0;
        byte[] r1, $r2, $r3;
        int i0, $i1, $i2, $i3, $i4;
        java.io.InputStream $r4;
        byte $b5;
        short $s6;
        java.io.IOException $r5;

        r0 := @this: java.io.PushbackInputStream;

        $r2 = r0.<java.io.PushbackInputStream: byte[] buf>;

        if $r2 != null goto label1;

        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>()>();

        throw $r5;

     label1:
        $i2 = r0.<java.io.PushbackInputStream: int pos>;

        $r3 = r0.<java.io.PushbackInputStream: byte[] buf>;

        $i1 = lengthof $r3;

        if $i2 >= $i1 goto label2;

        r1 = r0.<java.io.PushbackInputStream: byte[] buf>;

        i0 = r0.<java.io.PushbackInputStream: int pos>;

        $i4 = i0 + 1;

        r0.<java.io.PushbackInputStream: int pos> = $i4;

        $b5 = r1[i0];

        $s6 = 255 & $b5;

        return $s6;

     label2:
        $r4 = r0.<java.io.PushbackInputStream: java.io.InputStream in>;

        $i3 = virtualinvoke $r4.<java.io.InputStream: int read()>();

        return $i3;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        java.io.PushbackInputStream r0;
        byte[] r1, $r2, $r3, $r5, $r6, $r7;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        java.io.InputStream $r4;
        java.io.IOException $r8;

        r0 := @this: java.io.PushbackInputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<java.io.PushbackInputStream: byte[] buf>;

        if $r2 != null goto label1;

        $r8 = specialinvoke r0.<java.io.PushbackInputStream: java.io.IOException streamClosed()>();

        throw $r8;

     label1:
        $i8 = lengthof r1;

        staticinvoke <java.util.Arrays: void checkOffsetAndCount(int,int,int)>($i8, i0, i1);

        i2 = i0;

        i3 = r0.<java.io.PushbackInputStream: int pos>;

        $r3 = r0.<java.io.PushbackInputStream: byte[] buf>;

        i4 = lengthof $r3;

        i5 = 0;

        i6 = 0;

        if i3 >= i4 goto label3;

        $r5 = r0.<java.io.PushbackInputStream: byte[] buf>;

        $i11 = lengthof $r5;

        $i12 = r0.<java.io.PushbackInputStream: int pos>;

        $i13 = $i11 - $i12;

        if $i13 < i1 goto label4;

        i6 = i1;

     label2:
        $r7 = r0.<java.io.PushbackInputStream: byte[] buf>;

        $i16 = r0.<java.io.PushbackInputStream: int pos>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, $i16, r1, i2, i6);

        i2 = i2 + i6;

        i5 = 0 + i6;

        $i18 = r0.<java.io.PushbackInputStream: int pos>;

        $i17 = i6 + $i18;

        r0.<java.io.PushbackInputStream: int pos> = $i17;

     label3:
        if i6 != i1 goto label5;

        return i1;

     label4:
        $r6 = r0.<java.io.PushbackInputStream: byte[] buf>;

        $i14 = lengthof $r6;

        $i15 = r0.<java.io.PushbackInputStream: int pos>;

        i6 = $i14 - $i15;

        goto label2;

     label5:
        $r4 = r0.<java.io.PushbackInputStream: java.io.InputStream in>;

        $i9 = i1 - i5;

        i7 = virtualinvoke $r4.<java.io.InputStream: int read(byte[],int,int)>(r1, i2, $i9);

        if i7 <= 0 goto label6;

        $i10 = i7 + i5;

        return $i10;

     label6:
        if i5 != 0 goto label7;

        return i7;

     label7:
        return i5;
    }

    public void reset() throws java.io.IOException
    {
        java.io.PushbackInputStream r0;
        java.io.IOException $r1;

        r0 := @this: java.io.PushbackInputStream;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>()>();

        throw $r1;
    }

    public long skip(long) throws java.io.IOException
    {
        java.io.PushbackInputStream r0;
        long l0, l4, l5, $l7, $l9, $l10, $l11, $l12, $l13, $l14, $l19, $l24;
        int i1, i2, i3, $i15, $i16, $i17, $i20, $i21, $i22, $i23, $i25;
        java.io.InputStream $r1, $r3;
        byte $b6, $b8, $b18;
        byte[] $r2, $r4, $r5;
        java.io.IOException $r6;

        r0 := @this: java.io.PushbackInputStream;

        l0 := @parameter0: long;

        $r1 = r0.<java.io.PushbackInputStream: java.io.InputStream in>;

        if $r1 != null goto label1;

        $r6 = specialinvoke r0.<java.io.PushbackInputStream: java.io.IOException streamClosed()>();

        throw $r6;

     label1:
        $b6 = l0 cmp 0L;

        if $b6 > 0 goto label2;

        return 0L;

     label2:
        i1 = r0.<java.io.PushbackInputStream: int pos>;

        $r2 = r0.<java.io.PushbackInputStream: byte[] buf>;

        i2 = lengthof $r2;

        i3 = 0;

        if i1 >= i2 goto label4;

        l4 = (long) 0;

        $r4 = r0.<java.io.PushbackInputStream: byte[] buf>;

        $i17 = lengthof $r4;

        $i15 = r0.<java.io.PushbackInputStream: int pos>;

        $i16 = $i17 - $i15;

        $l19 = (long) $i16;

        $b18 = l0 cmp $l19;

        if $b18 >= 0 goto label6;

        l5 = l0;

     label3:
        $l24 = l5 + l4;

        i3 = (int) $l24;

        $i25 = r0.<java.io.PushbackInputStream: int pos>;

        $i23 = i3 + $i25;

        r0.<java.io.PushbackInputStream: int pos> = $i23;

     label4:
        $l7 = (long) i3;

        $b8 = $l7 cmp l0;

        if $b8 >= 0 goto label5;

        $l12 = (long) i3;

        $r3 = r0.<java.io.PushbackInputStream: java.io.InputStream in>;

        $l11 = (long) i3;

        $l10 = l0 - $l11;

        $l14 = virtualinvoke $r3.<java.io.InputStream: long skip(long)>($l10);

        $l13 = $l12 + $l14;

        i3 = (int) $l13;

     label5:
        $l9 = (long) i3;

        return $l9;

     label6:
        $r5 = r0.<java.io.PushbackInputStream: byte[] buf>;

        $i22 = lengthof $r5;

        $i20 = r0.<java.io.PushbackInputStream: int pos>;

        $i21 = $i22 - $i20;

        l5 = (long) $i21;

        goto label3;
    }

    public void unread(int) throws java.io.IOException
    {
        java.io.PushbackInputStream r0;
        int i0, i1, $i2, $i3;
        byte[] r1, $r2;
        byte $b4;
        java.io.IOException $r3, $r4;

        r0 := @this: java.io.PushbackInputStream;

        i0 := @parameter0: int;

        $r2 = r0.<java.io.PushbackInputStream: byte[] buf>;

        if $r2 != null goto label1;

        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>()>();

        throw $r4;

     label1:
        $i2 = r0.<java.io.PushbackInputStream: int pos>;

        if $i2 != 0 goto label2;

        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("Pushback buffer full");

        throw $r3;

     label2:
        r1 = r0.<java.io.PushbackInputStream: byte[] buf>;

        $i3 = r0.<java.io.PushbackInputStream: int pos>;

        i1 = -1 + $i3;

        r0.<java.io.PushbackInputStream: int pos> = i1;

        $b4 = (byte) i0;

        r1[i1] = $b4;

        return;
    }

    public void unread(byte[]) throws java.io.IOException
    {
        java.io.PushbackInputStream r0;
        byte[] r1;
        int $i0;

        r0 := @this: java.io.PushbackInputStream;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        virtualinvoke r0.<java.io.PushbackInputStream: void unread(byte[],int,int)>(r1, 0, $i0);

        return;
    }

    public void unread(byte[], int, int) throws java.io.IOException
    {
        java.io.PushbackInputStream r0;
        byte[] r1, $r2, $r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.io.IOException $r4, $r5;

        r0 := @this: java.io.PushbackInputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = r0.<java.io.PushbackInputStream: int pos>;

        if i1 <= $i2 goto label1;

        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("Pushback buffer full");

        throw $r5;

     label1:
        $i3 = lengthof r1;

        staticinvoke <java.util.Arrays: void checkOffsetAndCount(int,int,int)>($i3, i0, i1);

        $r2 = r0.<java.io.PushbackInputStream: byte[] buf>;

        if $r2 != null goto label2;

        $r4 = specialinvoke r0.<java.io.PushbackInputStream: java.io.IOException streamClosed()>();

        throw $r4;

     label2:
        $r3 = r0.<java.io.PushbackInputStream: byte[] buf>;

        $i4 = r0.<java.io.PushbackInputStream: int pos>;

        $i5 = $i4 - i1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, $r3, $i5, i1);

        $i6 = r0.<java.io.PushbackInputStream: int pos>;

        $i7 = $i6 - i1;

        r0.<java.io.PushbackInputStream: int pos> = $i7;

        return;
    }
}
