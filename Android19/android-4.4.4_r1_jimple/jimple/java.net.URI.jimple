public final class java.net.URI extends java.lang.Object implements java.lang.Comparable, java.io.Serializable
{
    static final libcore.net.UriCodec ALL_LEGAL_ENCODER;
    private static final libcore.net.UriCodec ASCII_ONLY;
    static final libcore.net.UriCodec AUTHORITY_ENCODER;
    static final libcore.net.UriCodec FILE_AND_QUERY_ENCODER;
    static final libcore.net.UriCodec PATH_ENCODER;
    static final java.lang.String PUNCTUATION;
    static final java.lang.String UNRESERVED;
    static final libcore.net.UriCodec USER_INFO_ENCODER;
    private static final long serialVersionUID;
    private transient boolean absolute;
    private transient java.lang.String authority;
    private transient java.lang.String fragment;
    private transient int hash;
    private transient java.lang.String host;
    private transient boolean opaque;
    private transient java.lang.String path;
    private transient int port;
    private transient java.lang.String query;
    private transient java.lang.String scheme;
    private transient java.lang.String schemeSpecificPart;
    private transient boolean serverAuthority;
    private java.lang.String string;
    private transient java.lang.String userInfo;

    static void <clinit>()
    {
        java.net.URI$PartEncoder $r0, $r1, $r2, $r3, $r4;
        java.net.URI$1 $r5;

        <java.net.URI: long serialVersionUID> = -6052424284110960213L;

        <java.net.URI: java.lang.String UNRESERVED> = "_-!.~\'()*";

        <java.net.URI: java.lang.String PUNCTUATION> = ",;:$&+=";

        $r0 = new java.net.URI$PartEncoder;

        specialinvoke $r0.<java.net.URI$PartEncoder: void <init>(java.lang.String)>("");

        <java.net.URI: libcore.net.UriCodec USER_INFO_ENCODER> = $r0;

        $r1 = new java.net.URI$PartEncoder;

        specialinvoke $r1.<java.net.URI$PartEncoder: void <init>(java.lang.String)>("/@");

        <java.net.URI: libcore.net.UriCodec PATH_ENCODER> = $r1;

        $r2 = new java.net.URI$PartEncoder;

        specialinvoke $r2.<java.net.URI$PartEncoder: void <init>(java.lang.String)>("@[]");

        <java.net.URI: libcore.net.UriCodec AUTHORITY_ENCODER> = $r2;

        $r3 = new java.net.URI$PartEncoder;

        specialinvoke $r3.<java.net.URI$PartEncoder: void <init>(java.lang.String)>("/@?");

        <java.net.URI: libcore.net.UriCodec FILE_AND_QUERY_ENCODER> = $r3;

        $r4 = new java.net.URI$PartEncoder;

        specialinvoke $r4.<java.net.URI$PartEncoder: void <init>(java.lang.String)>("?/[]@");

        <java.net.URI: libcore.net.UriCodec ALL_LEGAL_ENCODER> = $r4;

        $r5 = new java.net.URI$1;

        specialinvoke $r5.<java.net.URI$1: void <init>()>();

        <java.net.URI: libcore.net.UriCodec ASCII_ONLY> = $r5;

        return;
    }

    private void <init>()
    {
        java.net.URI r0;

        r0 := @this: java.net.URI;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.net.URI: int port> = -1;

        r0.<java.net.URI: boolean serverAuthority> = 0;

        r0.<java.net.URI: int hash> = -1;

        return;
    }

    public void <init>(java.lang.String) throws java.net.URISyntaxException
    {
        java.net.URI r0;
        java.lang.String r1;

        r0 := @this: java.net.URI;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.net.URI: int port> = -1;

        r0.<java.net.URI: boolean serverAuthority> = 0;

        r0.<java.net.URI: int hash> = -1;

        specialinvoke r0.<java.net.URI: void parseURI(java.lang.String,boolean)>(r1, 0);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String) throws java.net.URISyntaxException
    {
        java.net.URI r0;
        java.lang.String r1, r2, r3, $r6;
        java.lang.StringBuilder r4, $r5;
        libcore.net.UriCodec $r8, $r9;

        r0 := @this: java.net.URI;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.net.URI: int port> = -1;

        r0.<java.net.URI: boolean serverAuthority> = 0;

        r0.<java.net.URI: int hash> = -1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        r4 = $r5;

        if r1 == null goto label1;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

     label1:
        if r2 == null goto label2;

        $r9 = <java.net.URI: libcore.net.UriCodec ALL_LEGAL_ENCODER>;

        virtualinvoke $r9.<libcore.net.UriCodec: void appendEncoded(java.lang.StringBuilder,java.lang.String)>(r4, r2);

     label2:
        if r3 == null goto label3;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(35);

        $r8 = <java.net.URI: libcore.net.UriCodec ALL_LEGAL_ENCODER>;

        virtualinvoke $r8.<libcore.net.UriCodec: void appendEncoded(java.lang.StringBuilder,java.lang.String)>(r4, r3);

     label3:
        $r6 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.net.URI: void parseURI(java.lang.String,boolean)>($r6, 0);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String) throws java.net.URISyntaxException
    {
        java.net.URI r0;
        java.lang.String r1, r2, r3, r4, r5, r6, $r10;
        int i0, $i1, $i2, $i3;
        java.lang.StringBuilder r7, $r8, $r19, $r20, $r21, $r22;
        libcore.net.UriCodec $r12, $r14, $r16, $r24;
        java.net.URISyntaxException $r27;
        boolean $z0;
        char $c4;

        r0 := @this: java.net.URI;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: java.lang.String;

        r6 := @parameter6: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.net.URI: int port> = -1;

        r0.<java.net.URI: boolean serverAuthority> = 0;

        r0.<java.net.URI: int hash> = -1;

        if r1 != null goto label01;

        if r2 != null goto label01;

        if r3 != null goto label01;

        if r4 != null goto label01;

        if r5 != null goto label01;

        if r6 != null goto label01;

        r0.<java.net.URI: java.lang.String path> = "";

        return;

     label01:
        if r1 == null goto label02;

        if r4 == null goto label02;

        $z0 = virtualinvoke r4.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label02;

        $c4 = virtualinvoke r4.<java.lang.String: char charAt(int)>(0);

        if $c4 == 47 goto label02;

        $r27 = new java.net.URISyntaxException;

        specialinvoke $r27.<java.net.URISyntaxException: void <init>(java.lang.String,java.lang.String)>(r4, "Relative path");

        throw $r27;

     label02:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        r7 = $r8;

        if r1 == null goto label03;

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

     label03:
        if r2 != null goto label04;

        if r3 != null goto label04;

        if i0 == -1 goto label05;

     label04:
        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("//");

     label05:
        if r2 == null goto label06;

        $r24 = <java.net.URI: libcore.net.UriCodec USER_INFO_ENCODER>;

        virtualinvoke $r24.<libcore.net.UriCodec: void appendEncoded(java.lang.StringBuilder,java.lang.String)>(r7, r2);

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(64);

     label06:
        if r3 == null goto label08;

        $i1 = virtualinvoke r3.<java.lang.String: int indexOf(int)>(58);

        if $i1 == -1 goto label07;

        $i2 = virtualinvoke r3.<java.lang.String: int indexOf(int)>(93);

        if $i2 != -1 goto label07;

        $i3 = virtualinvoke r3.<java.lang.String: int indexOf(int)>(91);

        if $i3 != -1 goto label07;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        r3 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

     label07:
        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

     label08:
        if i0 == -1 goto label09;

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

     label09:
        if r4 == null goto label10;

        $r16 = <java.net.URI: libcore.net.UriCodec PATH_ENCODER>;

        virtualinvoke $r16.<libcore.net.UriCodec: void appendEncoded(java.lang.StringBuilder,java.lang.String)>(r7, r4);

     label10:
        if r5 == null goto label11;

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(63);

        $r14 = <java.net.URI: libcore.net.UriCodec ALL_LEGAL_ENCODER>;

        virtualinvoke $r14.<libcore.net.UriCodec: void appendEncoded(java.lang.StringBuilder,java.lang.String)>(r7, r5);

     label11:
        if r6 == null goto label12;

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(35);

        $r12 = <java.net.URI: libcore.net.UriCodec ALL_LEGAL_ENCODER>;

        virtualinvoke $r12.<libcore.net.UriCodec: void appendEncoded(java.lang.StringBuilder,java.lang.String)>(r7, r6);

     label12:
        $r10 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.net.URI: void parseURI(java.lang.String,boolean)>($r10, 1);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws java.net.URISyntaxException
    {
        java.net.URI r0;
        java.lang.String r1, r2, r3, r4;

        r0 := @this: java.net.URI;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        specialinvoke r0.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>(r1, null, r2, -1, r3, null, r4);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws java.net.URISyntaxException
    {
        java.net.URI r0;
        java.lang.String r1, r2, r3, r4, r5, $r8;
        java.lang.StringBuilder r6, $r7;
        libcore.net.UriCodec $r10, $r12, $r13, $r15;
        char $c0;
        boolean $z0;
        java.net.URISyntaxException $r18;

        r0 := @this: java.net.URI;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.net.URI: int port> = -1;

        r0.<java.net.URI: boolean serverAuthority> = 0;

        r0.<java.net.URI: int hash> = -1;

        if r1 == null goto label1;

        if r3 == null goto label1;

        $z0 = virtualinvoke r3.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $c0 = virtualinvoke r3.<java.lang.String: char charAt(int)>(0);

        if $c0 == 47 goto label1;

        $r18 = new java.net.URISyntaxException;

        specialinvoke $r18.<java.net.URISyntaxException: void <init>(java.lang.String,java.lang.String)>(r3, "Relative path");

        throw $r18;

     label1:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        r6 = $r7;

        if r1 == null goto label2;

        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

     label2:
        if r2 == null goto label3;

        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("//");

        $r15 = <java.net.URI: libcore.net.UriCodec AUTHORITY_ENCODER>;

        virtualinvoke $r15.<libcore.net.UriCodec: void appendEncoded(java.lang.StringBuilder,java.lang.String)>(r6, r2);

     label3:
        if r3 == null goto label4;

        $r13 = <java.net.URI: libcore.net.UriCodec PATH_ENCODER>;

        virtualinvoke $r13.<libcore.net.UriCodec: void appendEncoded(java.lang.StringBuilder,java.lang.String)>(r6, r3);

     label4:
        if r4 == null goto label5;

        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(63);

        $r12 = <java.net.URI: libcore.net.UriCodec ALL_LEGAL_ENCODER>;

        virtualinvoke $r12.<libcore.net.UriCodec: void appendEncoded(java.lang.StringBuilder,java.lang.String)>(r6, r4);

     label5:
        if r5 == null goto label6;

        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(35);

        $r10 = <java.net.URI: libcore.net.UriCodec ALL_LEGAL_ENCODER>;

        virtualinvoke $r10.<libcore.net.UriCodec: void appendEncoded(java.lang.StringBuilder,java.lang.String)>(r6, r5);

     label6:
        $r8 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.net.URI: void parseURI(java.lang.String,boolean)>($r8, 0);

        return;
    }

    private java.lang.String convertHexToLowerCase(java.lang.String)
    {
        java.net.URI r0;
        java.lang.String r1, $r4, $r5, $r7, $r10;
        java.lang.StringBuilder r2, $r3;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.util.Locale $r8;

        r0 := @this: java.net.URI;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("");

        r2 = $r3;

        $i2 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(37);

        if $i2 != -1 goto label1;

        return r1;

     label1:
        i0 = 0;

     label2:
        i1 = virtualinvoke r1.<java.lang.String: int indexOf(int,int)>(37, i0);

        if i1 == -1 goto label3;

        $i3 = i1 + 1;

        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i0, $i3);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $i5 = i1 + 1;

        $i4 = i1 + 3;

        $r7 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i5, $i4);

        $r8 = <java.util.Locale: java.util.Locale US>;

        $r10 = virtualinvoke $r7.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r8);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        i0 = i1 + 3;

        goto label2;

     label3:
        $r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public static java.net.URI create(java.lang.String)
    {
        java.lang.String r0, $r6;
        java.net.URI r1, $r3;
        java.net.URISyntaxException r2, $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @parameter0: java.lang.String;

     label1:
        $r3 = new java.net.URI;

        specialinvoke $r3.<java.net.URI: void <init>(java.lang.String)>(r0);

        r1 = $r3;

     label2:
        return r1;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke r2.<java.net.URISyntaxException: java.lang.String getMessage()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;

        catch java.net.URISyntaxException from label1 to label2 with label3;
    }

    private java.lang.String decode(java.lang.String)
    {
        java.net.URI r0;
        java.lang.String r1, $r2;

        r0 := @this: java.net.URI;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $r2 = staticinvoke <libcore.net.UriCodec: java.lang.String decode(java.lang.String)>(r1);

        return $r2;

     label1:
        return null;
    }

    private java.net.URI duplicate()
    {
        java.net.URI r0, r1, $r2;
        boolean $z0, $z1, $z2;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        int $i0;

        r0 := @this: java.net.URI;

        $r2 = new java.net.URI;

        specialinvoke $r2.<java.net.URI: void <init>()>();

        r1 = $r2;

        $z0 = r0.<java.net.URI: boolean absolute>;

        r1.<java.net.URI: boolean absolute> = $z0;

        $r3 = r0.<java.net.URI: java.lang.String authority>;

        r1.<java.net.URI: java.lang.String authority> = $r3;

        $r4 = r0.<java.net.URI: java.lang.String fragment>;

        r1.<java.net.URI: java.lang.String fragment> = $r4;

        $r5 = r0.<java.net.URI: java.lang.String host>;

        r1.<java.net.URI: java.lang.String host> = $r5;

        $z1 = r0.<java.net.URI: boolean opaque>;

        r1.<java.net.URI: boolean opaque> = $z1;

        $r6 = r0.<java.net.URI: java.lang.String path>;

        r1.<java.net.URI: java.lang.String path> = $r6;

        $i0 = r0.<java.net.URI: int port>;

        r1.<java.net.URI: int port> = $i0;

        $r7 = r0.<java.net.URI: java.lang.String query>;

        r1.<java.net.URI: java.lang.String query> = $r7;

        $r8 = r0.<java.net.URI: java.lang.String scheme>;

        r1.<java.net.URI: java.lang.String scheme> = $r8;

        $r9 = r0.<java.net.URI: java.lang.String schemeSpecificPart>;

        r1.<java.net.URI: java.lang.String schemeSpecificPart> = $r9;

        $r10 = r0.<java.net.URI: java.lang.String userInfo>;

        r1.<java.net.URI: java.lang.String userInfo> = $r10;

        $z2 = r0.<java.net.URI: boolean serverAuthority>;

        r1.<java.net.URI: boolean serverAuthority> = $z2;

        return r1;
    }

    private boolean escapedEquals(java.lang.String, java.lang.String)
    {
        java.net.URI r0;
        java.lang.String r1, r2, $r3, $r4, $r5, $r6, $r7, $r8;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean z0, z1, z2, $z3;

        r0 := @this: java.net.URI;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $i2 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(37);

        $i3 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(37);

        if $i2 == $i3 goto label2;

        z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r2);

     label1:
        return z1;

     label2:
        i0 = 0;

     label3:
        i1 = virtualinvoke r1.<java.lang.String: int indexOf(int,int)>(37, i0);

        if i1 == -1 goto label4;

        $i4 = virtualinvoke r2.<java.lang.String: int indexOf(int,int)>(37, i0);

        if $i4 != i1 goto label4;

        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i0, i1);

        $r6 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(i0, i1);

        z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        z1 = 0;

        if z0 == 0 goto label1;

        $i5 = i1 + 1;

        $i6 = i1 + 3;

        $r7 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i5, $i6);

        $i8 = i1 + 1;

        $i7 = i1 + 3;

        $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>($i8, $i7);

        z2 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r8);

        z1 = 0;

        if z2 == 0 goto label1;

        i0 = i1 + 3;

        goto label3;

     label4:
        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i0);

        $r4 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(i0);

        $z3 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        return $z3;
    }

    public static int getEffectivePort(java.lang.String, int)
    {
        java.lang.String r0, $r1, $r2;
        int i0;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if i0 == -1 goto label1;

        return i0;

     label1:
        $r1 = "http";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z0 == 0 goto label2;

        return 80;

     label2:
        $r2 = "https";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z1 == 0 goto label3;

        return 443;

     label3:
        return -1;
    }

    private java.lang.String getHashString()
    {
        java.net.URI r0;
        java.lang.StringBuilder r1, $r2, $r25, $r26, $r28, $r30, $r32, $r35;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r14, $r15, $r19, $r20, $r21, $r24, $r27, $r29, $r34, $r36, $r40, $r43, $r44;
        boolean $z0;
        java.util.Locale $r22, $r38;
        int $i0, $i1;

        r0 := @this: java.net.URI;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        $r3 = r0.<java.net.URI: java.lang.String scheme>;

        if $r3 == null goto label1;

        $r43 = r0.<java.net.URI: java.lang.String scheme>;

        $r38 = <java.util.Locale: java.util.Locale US>;

        $r44 = virtualinvoke $r43.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r38);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

     label1:
        $z0 = r0.<java.net.URI: boolean opaque>;

        if $z0 == 0 goto label4;

        $r40 = r0.<java.net.URI: java.lang.String schemeSpecificPart>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

     label2:
        $r7 = r0.<java.net.URI: java.lang.String fragment>;

        if $r7 == null goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(35);

        $r11 = r0.<java.net.URI: java.lang.String fragment>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

     label3:
        $r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = specialinvoke r0.<java.net.URI: java.lang.String convertHexToLowerCase(java.lang.String)>($r8);

        return $r9;

     label4:
        $r4 = r0.<java.net.URI: java.lang.String authority>;

        if $r4 == null goto label5;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("//");

        $r20 = r0.<java.net.URI: java.lang.String host>;

        if $r20 != null goto label7;

        $r34 = r0.<java.net.URI: java.lang.String authority>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

     label5:
        $r5 = r0.<java.net.URI: java.lang.String path>;

        if $r5 == null goto label6;

        $r15 = r0.<java.net.URI: java.lang.String path>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

     label6:
        $r6 = r0.<java.net.URI: java.lang.String query>;

        if $r6 == null goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(63);

        $r14 = r0.<java.net.URI: java.lang.String query>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        goto label2;

     label7:
        $r19 = r0.<java.net.URI: java.lang.String userInfo>;

        if $r19 == null goto label8;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r29 = r0.<java.net.URI: java.lang.String userInfo>;

        $r30 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r35 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

     label8:
        $r21 = r0.<java.net.URI: java.lang.String host>;

        $r22 = <java.util.Locale: java.util.Locale US>;

        $r24 = virtualinvoke $r21.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r22);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $i0 = r0.<java.net.URI: int port>;

        if $i0 == -1 goto label5;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $i1 = r0.<java.net.URI: int port>;

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        goto label5;
    }

    private boolean isValidDomainName(java.lang.String)
    {
        java.net.URI r0;
        java.lang.String r1, r3;
        java.lang.String[] r4;
        int i0, i1;
        char c2;
        boolean $z0, $z1, $z2;
        java.net.URISyntaxException $r5;

        r0 := @this: java.net.URI;

        r1 := @parameter0: java.lang.String;

     label1:
        staticinvoke <libcore.net.UriCodec: void validateSimple(java.lang.String,java.lang.String)>(r1, "-.");

     label2:
        r3 = null;

        r4 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.");

        i0 = lengthof r4;

        i1 = 0;

     label3:
        if i1 >= i0 goto label7;

        r3 = r4[i1];

        $z1 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("-");

        if $z1 != 0 goto label4;

        $z2 = virtualinvoke r3.<java.lang.String: boolean endsWith(java.lang.String)>("-");

        if $z2 == 0 goto label6;

     label4:
        return 0;

     label5:
        $r5 := @caughtexception;

        return 0;

     label6:
        i1 = i1 + 1;

        goto label3;

     label7:
        if r3 == null goto label4;

        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label8;

        c2 = virtualinvoke r3.<java.lang.String: char charAt(int)>(0);

        if c2 < 48 goto label8;

        if c2 <= 57 goto label4;

     label8:
        return 1;

        catch java.net.URISyntaxException from label1 to label2 with label5;
    }

    private boolean isValidHost(boolean, java.lang.String) throws java.net.URISyntaxException
    {
        java.net.URI r0;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.String r1;
        int i0, $i1, $i2, $i3, $i4, $i6;
        java.net.URISyntaxException $r3, $r4, $r6, $r7, $r9;
        char $c5;
        java.net.InetAddress $r5;
        java.lang.IllegalArgumentException $r8;

        r0 := @this: java.net.URI;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        $z2 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("[");

        if $z2 == 0 goto label04;

        $z5 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>("]");

        if $z5 != 0 goto label01;

        $r9 = new java.net.URISyntaxException;

        specialinvoke $r9.<java.net.URISyntaxException: void <init>(java.lang.String,java.lang.String,int)>(r1, "Expected a closing square bracket for IPv6 address", 0);

        throw $r9;

     label01:
        $z6 = staticinvoke <java.net.InetAddress: boolean isNumeric(java.lang.String)>(r1);

        if $z6 == 0 goto label03;

     label02:
        return 1;

     label03:
        $r7 = new java.net.URISyntaxException;

        specialinvoke $r7.<java.net.URISyntaxException: void <init>(java.lang.String,java.lang.String)>(r1, "Malformed IPv6 address");

        throw $r7;

     label04:
        $i1 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(91);

        if $i1 != -1 goto label05;

        $i2 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(93);

        if $i2 == -1 goto label06;

     label05:
        $r3 = new java.net.URISyntaxException;

        specialinvoke $r3.<java.net.URISyntaxException: void <init>(java.lang.String,java.lang.String,int)>(r1, "Illegal character in host name", 0);

        throw $r3;

     label06:
        i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int)>(46);

        if i0 < 0 goto label07;

        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        $i4 = -1 + $i3;

        if i0 == $i4 goto label07;

        $i6 = i0 + 1;

        $c5 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i6);

        $z4 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c5);

        if $z4 != 0 goto label09;

     label07:
        $z3 = specialinvoke r0.<java.net.URI: boolean isValidDomainName(java.lang.String)>(r1);

        if $z3 != 0 goto label02;

        if z0 == 0 goto label08;

        $r4 = new java.net.URISyntaxException;

        specialinvoke $r4.<java.net.URISyntaxException: void <init>(java.lang.String,java.lang.String,int)>(r1, "Illegal character in host name", 0);

        throw $r4;

     label08:
        return 0;

     label09:
        $r5 = staticinvoke <java.net.InetAddress: java.net.InetAddress parseNumericAddress(java.lang.String)>(r1);

        z1 = $r5 instanceof java.net.Inet4Address;

     label10:
        if z1 != 0 goto label02;

     label11:
        if z0 == 0 goto label12;

        $r6 = new java.net.URISyntaxException;

        specialinvoke $r6.<java.net.URISyntaxException: void <init>(java.lang.String,java.lang.String,int)>(r1, "Malformed IPv4 address", 0);

        throw $r6;

     label12:
        return 0;

     label13:
        $r8 := @caughtexception;

        goto label11;

        catch java.lang.IllegalArgumentException from label09 to label10 with label13;
    }

    private java.lang.String normalize(java.lang.String, boolean)
    {
        java.net.URI r0;
        java.lang.String r1, r2;
        boolean z0;
        int i0, i1;
        java.lang.StringBuilder $r3, $r4, $r5;

        r0 := @this: java.net.URI;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 = staticinvoke <libcore.net.url.UrlUtils: java.lang.String canonicalizePath(java.lang.String,boolean)>(r1, z0);

        i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(58);

        if i0 == -1 goto label2;

        i1 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(47);

        if i1 == -1 goto label1;

        if i0 >= i1 goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("./");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return r2;
    }

    private void parseAuthority(boolean) throws java.net.URISyntaxException
    {
        java.net.URI r0;
        boolean z0, $z1, $z2;
        java.lang.String r1, r2, r3, $r5, $r6, $r8, $r10, $r11, $r14;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        java.net.URISyntaxException $r7, $r9, $r13;
        java.lang.NumberFormatException $r12;

        r0 := @this: java.net.URI;

        z0 := @parameter0: boolean;

        $r5 = r0.<java.net.URI: java.lang.String authority>;

        if $r5 != null goto label02;

     label01:
        return;

     label02:
        r1 = r0.<java.net.URI: java.lang.String authority>;

        i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(64);

        i1 = 0;

        r2 = null;

        if i0 == -1 goto label03;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $r11 = r0.<java.net.URI: java.lang.String authority>;

        specialinvoke r0.<java.net.URI: void validateUserInfo(java.lang.String,java.lang.String,int)>($r11, r2, 0);

        $i10 = i0 + 1;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i10);

        i1 = i0 + 1;

     label03:
        i2 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int)>(58);

        i3 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(93);

        i4 = -1;

        if i2 == -1 goto label08;

        if i3 >= i2 goto label08;

        r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i2);

        $i7 = virtualinvoke r1.<java.lang.String: int length()>();

        $i6 = -1 + $i7;

        if i2 >= $i6 goto label09;

        i5 = i2 + 1;

     label04:
        $r8 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i5);

        i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);

     label05:
        if i4 >= 0 goto label09;

        if z0 == 0 goto label01;

     label06:
        $r9 = new java.net.URISyntaxException;

        $r10 = r0.<java.net.URI: java.lang.String authority>;

        $i8 = i1 + i2;

        $i9 = 1 + $i8;

        specialinvoke $r9.<java.net.URISyntaxException: void <init>(java.lang.String,java.lang.String,int)>($r10, "Invalid port number", $i9);

        throw $r9;

     label07:
        $r12 := @caughtexception;

        if z0 == 0 goto label01;

        $r13 = new java.net.URISyntaxException;

        $r14 = r0.<java.net.URI: java.lang.String authority>;

        $i11 = i1 + i2;

        $i12 = 1 + $i11;

        specialinvoke $r13.<java.net.URISyntaxException: void <init>(java.lang.String,java.lang.String,int)>($r14, "Invalid port number", $i12);

        throw $r13;

     label08:
        r3 = r1;

     label09:
        $z2 = virtualinvoke r3.<java.lang.String: boolean isEmpty()>();

        if $z2 == 0 goto label10;

        if z0 == 0 goto label01;

        $r7 = new java.net.URISyntaxException;

        $r6 = r0.<java.net.URI: java.lang.String authority>;

        specialinvoke $r7.<java.net.URISyntaxException: void <init>(java.lang.String,java.lang.String,int)>($r6, "Expected host", i1);

        throw $r7;

     label10:
        $z1 = specialinvoke r0.<java.net.URI: boolean isValidHost(boolean,java.lang.String)>(z0, r3);

        if $z1 == 0 goto label01;

        r0.<java.net.URI: java.lang.String userInfo> = r2;

        r0.<java.net.URI: java.lang.String host> = r3;

        r0.<java.net.URI: int port> = i4;

        r0.<java.net.URI: boolean serverAuthority> = 1;

        return;

        catch java.lang.NumberFormatException from label04 to label05 with label07;
        catch java.lang.NumberFormatException from label06 to label07 with label07;
    }

    private void parseURI(java.lang.String, boolean) throws java.net.URISyntaxException
    {
        java.net.URI r0;
        java.lang.String r1, $r2, $r4, $r5, $r7, $r10, $r11, $r14;
        boolean z0, $z1, $z2;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        libcore.net.UriCodec $r3, $r6, $r8, $r13, $r15;
        java.net.URISyntaxException $r9, $r12;

        r0 := @this: java.net.URI;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r0.<java.net.URI: java.lang.String string> = r1;

        $i6 = virtualinvoke r1.<java.lang.String: int length()>();

        i0 = staticinvoke <libcore.net.url.UrlUtils: int findFirstOf(java.lang.String,java.lang.String,int,int)>(r1, "#", 0, $i6);

        $i7 = virtualinvoke r1.<java.lang.String: int length()>();

        if i0 >= $i7 goto label1;

        $r15 = <java.net.URI: libcore.net.UriCodec ALL_LEGAL_ENCODER>;

        $i13 = i0 + 1;

        $i12 = virtualinvoke r1.<java.lang.String: int length()>();

        $r14 = virtualinvoke $r15.<libcore.net.UriCodec: java.lang.String validate(java.lang.String,int,int,java.lang.String)>(r1, $i13, $i12, "fragment");

        r0.<java.net.URI: java.lang.String fragment> = $r14;

     label1:
        i1 = staticinvoke <libcore.net.url.UrlUtils: int findFirstOf(java.lang.String,java.lang.String,int,int)>(r1, ":", 0, i0);

        $i8 = staticinvoke <libcore.net.url.UrlUtils: int findFirstOf(java.lang.String,java.lang.String,int,int)>(r1, "/?#", 0, i0);

        if i1 >= $i8 goto label3;

        r0.<java.net.URI: boolean absolute> = 1;

        $r10 = specialinvoke r0.<java.net.URI: java.lang.String validateScheme(java.lang.String,int)>(r1, i1);

        r0.<java.net.URI: java.lang.String scheme> = $r10;

        i2 = i1 + 1;

        if i2 != i0 goto label2;

        $r12 = new java.net.URISyntaxException;

        specialinvoke $r12.<java.net.URISyntaxException: void <init>(java.lang.String,java.lang.String,int)>(r1, "Scheme-specific part expected", i2);

        throw $r12;

     label2:
        $z2 = virtualinvoke r1.<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>(i2, "/", 0, 1);

        if $z2 != 0 goto label4;

        r0.<java.net.URI: boolean opaque> = 1;

        $r13 = <java.net.URI: libcore.net.UriCodec ALL_LEGAL_ENCODER>;

        $r11 = virtualinvoke $r13.<libcore.net.UriCodec: java.lang.String validate(java.lang.String,int,int,java.lang.String)>(r1, i2, i0, "scheme specific part");

        r0.<java.net.URI: java.lang.String schemeSpecificPart> = $r11;

        return;

     label3:
        r0.<java.net.URI: boolean absolute> = 0;

        i2 = 0;

     label4:
        r0.<java.net.URI: boolean opaque> = 0;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i2, i0);

        r0.<java.net.URI: java.lang.String schemeSpecificPart> = $r2;

        $z1 = virtualinvoke r1.<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>(i2, "//", 0, 2);

        if $z1 == 0 goto label8;

        i5 = i2 + 2;

        i3 = staticinvoke <libcore.net.url.UrlUtils: int findFirstOf(java.lang.String,java.lang.String,int,int)>(r1, "/?", i5, i0);

        $i10 = virtualinvoke r1.<java.lang.String: int length()>();

        if i5 != $i10 goto label5;

        $r9 = new java.net.URISyntaxException;

        $i11 = virtualinvoke r1.<java.lang.String: int length()>();

        specialinvoke $r9.<java.net.URISyntaxException: void <init>(java.lang.String,java.lang.String,int)>(r1, "Authority expected", $i11);

        throw $r9;

     label5:
        if i5 >= i3 goto label6;

        $r8 = <java.net.URI: libcore.net.UriCodec AUTHORITY_ENCODER>;

        $r7 = virtualinvoke $r8.<libcore.net.UriCodec: java.lang.String validate(java.lang.String,int,int,java.lang.String)>(r1, i5, i3, "authority");

        r0.<java.net.URI: java.lang.String authority> = $r7;

     label6:
        i4 = staticinvoke <libcore.net.url.UrlUtils: int findFirstOf(java.lang.String,java.lang.String,int,int)>(r1, "?", i3, i0);

        $r3 = <java.net.URI: libcore.net.UriCodec PATH_ENCODER>;

        $r4 = virtualinvoke $r3.<libcore.net.UriCodec: java.lang.String validate(java.lang.String,int,int,java.lang.String)>(r1, i3, i4, "path");

        r0.<java.net.URI: java.lang.String path> = $r4;

        if i4 >= i0 goto label7;

        $r6 = <java.net.URI: libcore.net.UriCodec ALL_LEGAL_ENCODER>;

        $i9 = i4 + 1;

        $r5 = virtualinvoke $r6.<libcore.net.UriCodec: java.lang.String validate(java.lang.String,int,int,java.lang.String)>(r1, $i9, i0, "query");

        r0.<java.net.URI: java.lang.String query> = $r5;

     label7:
        specialinvoke r0.<java.net.URI: void parseAuthority(boolean)>(z0);

        return;

     label8:
        i3 = i2;

        goto label6;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.net.URI r0;
        java.io.ObjectInputStream r1;
        java.net.URISyntaxException r2, $r4;
        java.lang.String $r3, $r6;
        java.io.IOException $r5;

        r0 := @this: java.net.URI;

        r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();

     label1:
        $r3 = r0.<java.net.URI: java.lang.String string>;

        specialinvoke r0.<java.net.URI: void parseURI(java.lang.String,boolean)>($r3, 0);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = new java.io.IOException;

        $r6 = virtualinvoke r2.<java.net.URISyntaxException: java.lang.String toString()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r6);

        throw $r5;

        catch java.net.URISyntaxException from label1 to label2 with label3;
    }

    private void setSchemeSpecificPart()
    {
        java.net.URI r0;
        java.lang.StringBuilder r1, $r2, $r7, $r8, $r10, $r15, $r17, $r19;
        java.lang.String $r3, $r4, $r5, $r6, $r9, $r11, $r13, $r16, $r18;

        r0 := @this: java.net.URI;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        $r3 = r0.<java.net.URI: java.lang.String authority>;

        if $r3 == null goto label1;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("//");

        $r16 = r0.<java.net.URI: java.lang.String authority>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

     label1:
        $r4 = r0.<java.net.URI: java.lang.String path>;

        if $r4 == null goto label2;

        $r13 = r0.<java.net.URI: java.lang.String path>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

     label2:
        $r5 = r0.<java.net.URI: java.lang.String query>;

        if $r5 == null goto label3;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        $r9 = r0.<java.net.URI: java.lang.String query>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

     label3:
        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<java.net.URI: java.lang.String schemeSpecificPart> = $r6;

        r0.<java.net.URI: java.lang.String string> = null;

        return;
    }

    private java.lang.String validateScheme(java.lang.String, int) throws java.net.URISyntaxException
    {
        java.net.URI r0;
        java.lang.String r1, $r2;
        int i0, i1;
        char $c2;
        boolean $z0;
        java.net.URISyntaxException $r3, $r4;

        r0 := @this: java.net.URI;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if i0 != 0 goto label1;

        $r4 = new java.net.URISyntaxException;

        specialinvoke $r4.<java.net.URISyntaxException: void <init>(java.lang.String,java.lang.String,int)>(r1, "Scheme expected", 0);

        throw $r4;

     label1:
        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);

        $z0 = staticinvoke <libcore.net.url.UrlUtils: boolean isValidSchemeChar(int,char)>(i1, $c2);

        if $z0 != 0 goto label3;

        $r3 = new java.net.URISyntaxException;

        specialinvoke $r3.<java.net.URISyntaxException: void <init>(java.lang.String,java.lang.String,int)>(r1, "Illegal character in scheme", 0);

        throw $r3;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        return $r2;
    }

    private void validateUserInfo(java.lang.String, java.lang.String, int) throws java.net.URISyntaxException
    {
        java.net.URI r0;
        java.lang.String r1, r2;
        int i0, i1, $i3, $i4;
        char c2;
        java.net.URISyntaxException $r3;

        r0 := @this: java.net.URI;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 = 0;

     label1:
        $i3 = virtualinvoke r2.<java.lang.String: int length()>();

        if i1 >= $i3 goto label4;

        c2 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i1);

        if c2 == 93 goto label2;

        if c2 != 91 goto label3;

     label2:
        $r3 = new java.net.URISyntaxException;

        $i4 = i0 + i1;

        specialinvoke $r3.<java.net.URISyntaxException: void <init>(java.lang.String,java.lang.String,int)>(r1, "Illegal character in userInfo", $i4);

        throw $r3;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.net.URI r0;
        java.io.ObjectOutputStream r1;

        r0 := @this: java.net.URI;

        r1 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke r0.<java.net.URI: java.lang.String toString()>();

        virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        return;
    }

    public volatile int compareTo(java.lang.Object)
    {
        java.net.URI r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: java.net.URI;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.net.URI) r1;

        $i0 = virtualinvoke r0.<java.net.URI: int compareTo(java.net.URI)>($r2);

        return $i0;
    }

    public int compareTo(java.net.URI)
    {
        java.net.URI r0, r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this: java.net.URI;

        r1 := @parameter0: java.net.URI;

        $r2 = r0.<java.net.URI: java.lang.String scheme>;

        if $r2 != null goto label02;

        $r46 = r1.<java.net.URI: java.lang.String scheme>;

        if $r46 == null goto label02;

        i0 = -1;

     label01:
        return i0;

     label02:
        $r3 = r0.<java.net.URI: java.lang.String scheme>;

        if $r3 == null goto label03;

        $r45 = r1.<java.net.URI: java.lang.String scheme>;

        if $r45 != null goto label03;

        return 1;

     label03:
        $r4 = r0.<java.net.URI: java.lang.String scheme>;

        if $r4 == null goto label04;

        $r47 = r1.<java.net.URI: java.lang.String scheme>;

        if $r47 == null goto label04;

        $r49 = r0.<java.net.URI: java.lang.String scheme>;

        $r48 = r1.<java.net.URI: java.lang.String scheme>;

        i0 = virtualinvoke $r49.<java.lang.String: int compareToIgnoreCase(java.lang.String)>($r48);

        if i0 != 0 goto label01;

     label04:
        $z0 = r0.<java.net.URI: boolean opaque>;

        if $z0 != 0 goto label05;

        $z5 = r1.<java.net.URI: boolean opaque>;

        if $z5 == 0 goto label05;

        return -1;

     label05:
        $z1 = r0.<java.net.URI: boolean opaque>;

        if $z1 == 0 goto label06;

        $z4 = r1.<java.net.URI: boolean opaque>;

        if $z4 != 0 goto label06;

        return 1;

     label06:
        $z2 = r0.<java.net.URI: boolean opaque>;

        if $z2 == 0 goto label08;

        $z3 = r1.<java.net.URI: boolean opaque>;

        if $z3 == 0 goto label08;

        $r43 = r0.<java.net.URI: java.lang.String schemeSpecificPart>;

        $r44 = r1.<java.net.URI: java.lang.String schemeSpecificPart>;

        i0 = virtualinvoke $r43.<java.lang.String: int compareTo(java.lang.String)>($r44);

        if i0 != 0 goto label01;

     label07:
        $r12 = r0.<java.net.URI: java.lang.String fragment>;

        if $r12 == null goto label18;

        $r19 = r1.<java.net.URI: java.lang.String fragment>;

        if $r19 != null goto label18;

        return 1;

     label08:
        $r5 = r0.<java.net.URI: java.lang.String authority>;

        if $r5 == null goto label09;

        $r40 = r1.<java.net.URI: java.lang.String authority>;

        if $r40 != null goto label09;

        return 1;

     label09:
        $r6 = r0.<java.net.URI: java.lang.String authority>;

        if $r6 != null goto label10;

        $r41 = r1.<java.net.URI: java.lang.String authority>;

        if $r41 == null goto label10;

        return -1;

     label10:
        $r7 = r0.<java.net.URI: java.lang.String authority>;

        if $r7 == null goto label15;

        $r24 = r1.<java.net.URI: java.lang.String authority>;

        if $r24 == null goto label15;

        $r25 = r0.<java.net.URI: java.lang.String host>;

        if $r25 == null goto label14;

        $r28 = r1.<java.net.URI: java.lang.String host>;

        if $r28 == null goto label14;

        $r33 = r0.<java.net.URI: java.lang.String userInfo>;

        if $r33 == null goto label11;

        $r42 = r1.<java.net.URI: java.lang.String userInfo>;

        if $r42 != null goto label11;

        return 1;

     label11:
        $r34 = r0.<java.net.URI: java.lang.String userInfo>;

        if $r34 != null goto label12;

        $r37 = r1.<java.net.URI: java.lang.String userInfo>;

        if $r37 == null goto label12;

        return -1;

     label12:
        $r31 = r0.<java.net.URI: java.lang.String userInfo>;

        if $r31 == null goto label13;

        $r36 = r1.<java.net.URI: java.lang.String userInfo>;

        if $r36 == null goto label13;

        $r38 = r0.<java.net.URI: java.lang.String userInfo>;

        $r39 = r1.<java.net.URI: java.lang.String userInfo>;

        i0 = virtualinvoke $r38.<java.lang.String: int compareTo(java.lang.String)>($r39);

        if i0 != 0 goto label01;

     label13:
        $r35 = r0.<java.net.URI: java.lang.String host>;

        $r32 = r1.<java.net.URI: java.lang.String host>;

        i0 = virtualinvoke $r35.<java.lang.String: int compareToIgnoreCase(java.lang.String)>($r32);

        if i0 != 0 goto label01;

        $i3 = r0.<java.net.URI: int port>;

        $i2 = r1.<java.net.URI: int port>;

        if $i3 == $i2 goto label15;

        $i5 = r0.<java.net.URI: int port>;

        $i6 = r1.<java.net.URI: int port>;

        $i4 = $i5 - $i6;

        return $i4;

     label14:
        $r30 = r0.<java.net.URI: java.lang.String authority>;

        $r29 = r1.<java.net.URI: java.lang.String authority>;

        i0 = virtualinvoke $r30.<java.lang.String: int compareTo(java.lang.String)>($r29);

        if i0 != 0 goto label01;

     label15:
        $r9 = r0.<java.net.URI: java.lang.String path>;

        $r8 = r1.<java.net.URI: java.lang.String path>;

        i0 = virtualinvoke $r9.<java.lang.String: int compareTo(java.lang.String)>($r8);

        if i0 != 0 goto label01;

        $r11 = r0.<java.net.URI: java.lang.String query>;

        if $r11 == null goto label16;

        $r27 = r1.<java.net.URI: java.lang.String query>;

        if $r27 != null goto label16;

        return 1;

     label16:
        $r10 = r0.<java.net.URI: java.lang.String query>;

        if $r10 != null goto label17;

        $r26 = r1.<java.net.URI: java.lang.String query>;

        if $r26 == null goto label17;

        return -1;

     label17:
        $r13 = r0.<java.net.URI: java.lang.String query>;

        if $r13 == null goto label07;

        $r22 = r1.<java.net.URI: java.lang.String query>;

        if $r22 == null goto label07;

        $r23 = r0.<java.net.URI: java.lang.String query>;

        $r21 = r1.<java.net.URI: java.lang.String query>;

        i1 = virtualinvoke $r23.<java.lang.String: int compareTo(java.lang.String)>($r21);

        if i1 == 0 goto label07;

        return i1;

     label18:
        $r15 = r0.<java.net.URI: java.lang.String fragment>;

        if $r15 != null goto label19;

        $r20 = r1.<java.net.URI: java.lang.String fragment>;

        if $r20 == null goto label19;

        return -1;

     label19:
        $r14 = r0.<java.net.URI: java.lang.String fragment>;

        if $r14 == null goto label20;

        $r17 = r1.<java.net.URI: java.lang.String fragment>;

        if $r17 == null goto label20;

        $r18 = r0.<java.net.URI: java.lang.String fragment>;

        $r16 = r1.<java.net.URI: java.lang.String fragment>;

        i0 = virtualinvoke $r18.<java.lang.String: int compareTo(java.lang.String)>($r16);

        if i0 != 0 goto label01;

     label20:
        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        java.net.URI r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54;
        int $i0, $i1;

        r0 := @this: java.net.URI;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof java.net.URI;

        if $z0 != 0 goto label02;

     label01:
        return 0;

     label02:
        r2 = (java.net.URI) r1;

        $r3 = r2.<java.net.URI: java.lang.String fragment>;

        if $r3 != null goto label03;

        $r51 = r0.<java.net.URI: java.lang.String fragment>;

        if $r51 != null goto label01;

     label03:
        $r4 = r2.<java.net.URI: java.lang.String fragment>;

        if $r4 == null goto label04;

        $r50 = r0.<java.net.URI: java.lang.String fragment>;

        if $r50 == null goto label01;

     label04:
        $r5 = r2.<java.net.URI: java.lang.String fragment>;

        if $r5 == null goto label05;

        $r52 = r0.<java.net.URI: java.lang.String fragment>;

        if $r52 == null goto label05;

        $r54 = r2.<java.net.URI: java.lang.String fragment>;

        $r53 = r0.<java.net.URI: java.lang.String fragment>;

        $z12 = specialinvoke r0.<java.net.URI: boolean escapedEquals(java.lang.String,java.lang.String)>($r54, $r53);

        if $z12 == 0 goto label01;

     label05:
        $r6 = r2.<java.net.URI: java.lang.String scheme>;

        if $r6 != null goto label06;

        $r47 = r0.<java.net.URI: java.lang.String scheme>;

        if $r47 != null goto label01;

     label06:
        $r7 = r2.<java.net.URI: java.lang.String scheme>;

        if $r7 == null goto label07;

        $r48 = r0.<java.net.URI: java.lang.String scheme>;

        if $r48 == null goto label01;

     label07:
        $r8 = r2.<java.net.URI: java.lang.String scheme>;

        if $r8 == null goto label08;

        $r45 = r0.<java.net.URI: java.lang.String scheme>;

        if $r45 == null goto label08;

        $r49 = r2.<java.net.URI: java.lang.String scheme>;

        $r44 = r0.<java.net.URI: java.lang.String scheme>;

        $z11 = virtualinvoke $r49.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r44);

        if $z11 == 0 goto label01;

     label08:
        $z1 = r2.<java.net.URI: boolean opaque>;

        if $z1 == 0 goto label09;

        $z9 = r0.<java.net.URI: boolean opaque>;

        if $z9 == 0 goto label09;

        $r46 = r2.<java.net.URI: java.lang.String schemeSpecificPart>;

        $r41 = r0.<java.net.URI: java.lang.String schemeSpecificPart>;

        $z10 = specialinvoke r0.<java.net.URI: boolean escapedEquals(java.lang.String,java.lang.String)>($r46, $r41);

        return $z10;

     label09:
        $z2 = r2.<java.net.URI: boolean opaque>;

        if $z2 != 0 goto label01;

        $z3 = r0.<java.net.URI: boolean opaque>;

        if $z3 != 0 goto label01;

        $r10 = r0.<java.net.URI: java.lang.String path>;

        $r9 = r2.<java.net.URI: java.lang.String path>;

        $z4 = specialinvoke r0.<java.net.URI: boolean escapedEquals(java.lang.String,java.lang.String)>($r10, $r9);

        if $z4 == 0 goto label01;

        $r12 = r2.<java.net.URI: java.lang.String query>;

        if $r12 == null goto label10;

        $r42 = r0.<java.net.URI: java.lang.String query>;

        if $r42 == null goto label01;

     label10:
        $r11 = r2.<java.net.URI: java.lang.String query>;

        if $r11 != null goto label11;

        $r43 = r0.<java.net.URI: java.lang.String query>;

        if $r43 != null goto label01;

     label11:
        $r14 = r2.<java.net.URI: java.lang.String query>;

        if $r14 == null goto label12;

        $r40 = r0.<java.net.URI: java.lang.String query>;

        if $r40 == null goto label12;

        $r38 = r2.<java.net.URI: java.lang.String query>;

        $r39 = r0.<java.net.URI: java.lang.String query>;

        $z8 = specialinvoke r0.<java.net.URI: boolean escapedEquals(java.lang.String,java.lang.String)>($r38, $r39);

        if $z8 == 0 goto label01;

     label12:
        $r13 = r2.<java.net.URI: java.lang.String authority>;

        if $r13 == null goto label13;

        $r35 = r0.<java.net.URI: java.lang.String authority>;

        if $r35 == null goto label01;

     label13:
        $r16 = r2.<java.net.URI: java.lang.String authority>;

        if $r16 != null goto label14;

        $r34 = r0.<java.net.URI: java.lang.String authority>;

        if $r34 != null goto label01;

     label14:
        $r15 = r2.<java.net.URI: java.lang.String authority>;

        if $r15 == null goto label21;

        $r18 = r0.<java.net.URI: java.lang.String authority>;

        if $r18 == null goto label21;

        $r17 = r2.<java.net.URI: java.lang.String host>;

        if $r17 == null goto label15;

        $r37 = r0.<java.net.URI: java.lang.String host>;

        if $r37 == null goto label01;

     label15:
        $r20 = r2.<java.net.URI: java.lang.String host>;

        if $r20 != null goto label16;

        $r36 = r0.<java.net.URI: java.lang.String host>;

        if $r36 != null goto label01;

     label16:
        $r19 = r2.<java.net.URI: java.lang.String host>;

        if $r19 != null goto label17;

        $r32 = r0.<java.net.URI: java.lang.String host>;

        if $r32 != null goto label17;

        $r31 = r2.<java.net.URI: java.lang.String authority>;

        $r33 = r0.<java.net.URI: java.lang.String authority>;

        $z7 = specialinvoke r0.<java.net.URI: boolean escapedEquals(java.lang.String,java.lang.String)>($r31, $r33);

        return $z7;

     label17:
        $r21 = r0.<java.net.URI: java.lang.String host>;

        $r22 = r2.<java.net.URI: java.lang.String host>;

        $z5 = virtualinvoke $r21.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r22);

        if $z5 == 0 goto label01;

        $i1 = r0.<java.net.URI: int port>;

        $i0 = r2.<java.net.URI: int port>;

        if $i1 != $i0 goto label01;

        $r23 = r2.<java.net.URI: java.lang.String userInfo>;

        if $r23 == null goto label18;

        $r29 = r0.<java.net.URI: java.lang.String userInfo>;

        if $r29 == null goto label01;

     label18:
        $r26 = r2.<java.net.URI: java.lang.String userInfo>;

        if $r26 != null goto label19;

        $r28 = r0.<java.net.URI: java.lang.String userInfo>;

        if $r28 != null goto label01;

     label19:
        $r27 = r2.<java.net.URI: java.lang.String userInfo>;

        if $r27 == null goto label20;

        $r24 = r0.<java.net.URI: java.lang.String userInfo>;

        if $r24 == null goto label20;

        $r30 = r0.<java.net.URI: java.lang.String userInfo>;

        $r25 = r2.<java.net.URI: java.lang.String userInfo>;

        $z6 = specialinvoke r0.<java.net.URI: boolean escapedEquals(java.lang.String,java.lang.String)>($r30, $r25);

        return $z6;

     label20:
        return 1;

     label21:
        return 1;
    }

    public java.lang.String getAuthority()
    {
        java.net.URI r0;
        java.lang.String $r1, $r2;

        r0 := @this: java.net.URI;

        $r1 = r0.<java.net.URI: java.lang.String authority>;

        $r2 = specialinvoke r0.<java.net.URI: java.lang.String decode(java.lang.String)>($r1);

        return $r2;
    }

    public int getEffectivePort()
    {
        java.net.URI r0;
        int $i0, $i1;
        java.lang.String $r1;

        r0 := @this: java.net.URI;

        $r1 = r0.<java.net.URI: java.lang.String scheme>;

        $i0 = r0.<java.net.URI: int port>;

        $i1 = staticinvoke <java.net.URI: int getEffectivePort(java.lang.String,int)>($r1, $i0);

        return $i1;
    }

    public java.lang.String getFragment()
    {
        java.net.URI r0;
        java.lang.String $r1, $r2;

        r0 := @this: java.net.URI;

        $r1 = r0.<java.net.URI: java.lang.String fragment>;

        $r2 = specialinvoke r0.<java.net.URI: java.lang.String decode(java.lang.String)>($r1);

        return $r2;
    }

    public java.lang.String getHost()
    {
        java.net.URI r0;
        java.lang.String $r1;

        r0 := @this: java.net.URI;

        $r1 = r0.<java.net.URI: java.lang.String host>;

        return $r1;
    }

    public java.lang.String getPath()
    {
        java.net.URI r0;
        java.lang.String $r1, $r2;

        r0 := @this: java.net.URI;

        $r1 = r0.<java.net.URI: java.lang.String path>;

        $r2 = specialinvoke r0.<java.net.URI: java.lang.String decode(java.lang.String)>($r1);

        return $r2;
    }

    public int getPort()
    {
        java.net.URI r0;
        int $i0;

        r0 := @this: java.net.URI;

        $i0 = r0.<java.net.URI: int port>;

        return $i0;
    }

    public java.lang.String getQuery()
    {
        java.net.URI r0;
        java.lang.String $r1, $r2;

        r0 := @this: java.net.URI;

        $r1 = r0.<java.net.URI: java.lang.String query>;

        $r2 = specialinvoke r0.<java.net.URI: java.lang.String decode(java.lang.String)>($r1);

        return $r2;
    }

    public java.lang.String getRawAuthority()
    {
        java.net.URI r0;
        java.lang.String $r1;

        r0 := @this: java.net.URI;

        $r1 = r0.<java.net.URI: java.lang.String authority>;

        return $r1;
    }

    public java.lang.String getRawFragment()
    {
        java.net.URI r0;
        java.lang.String $r1;

        r0 := @this: java.net.URI;

        $r1 = r0.<java.net.URI: java.lang.String fragment>;

        return $r1;
    }

    public java.lang.String getRawPath()
    {
        java.net.URI r0;
        java.lang.String $r1;

        r0 := @this: java.net.URI;

        $r1 = r0.<java.net.URI: java.lang.String path>;

        return $r1;
    }

    public java.lang.String getRawQuery()
    {
        java.net.URI r0;
        java.lang.String $r1;

        r0 := @this: java.net.URI;

        $r1 = r0.<java.net.URI: java.lang.String query>;

        return $r1;
    }

    public java.lang.String getRawSchemeSpecificPart()
    {
        java.net.URI r0;
        java.lang.String $r1;

        r0 := @this: java.net.URI;

        $r1 = r0.<java.net.URI: java.lang.String schemeSpecificPart>;

        return $r1;
    }

    public java.lang.String getRawUserInfo()
    {
        java.net.URI r0;
        java.lang.String $r1;

        r0 := @this: java.net.URI;

        $r1 = r0.<java.net.URI: java.lang.String userInfo>;

        return $r1;
    }

    public java.lang.String getScheme()
    {
        java.net.URI r0;
        java.lang.String $r1;

        r0 := @this: java.net.URI;

        $r1 = r0.<java.net.URI: java.lang.String scheme>;

        return $r1;
    }

    public java.lang.String getSchemeSpecificPart()
    {
        java.net.URI r0;
        java.lang.String $r1, $r2;

        r0 := @this: java.net.URI;

        $r1 = r0.<java.net.URI: java.lang.String schemeSpecificPart>;

        $r2 = specialinvoke r0.<java.net.URI: java.lang.String decode(java.lang.String)>($r1);

        return $r2;
    }

    public java.lang.String getUserInfo()
    {
        java.net.URI r0;
        java.lang.String $r1, $r2;

        r0 := @this: java.net.URI;

        $r1 = r0.<java.net.URI: java.lang.String userInfo>;

        $r2 = specialinvoke r0.<java.net.URI: java.lang.String decode(java.lang.String)>($r1);

        return $r2;
    }

    public int hashCode()
    {
        java.net.URI r0;
        int $i0, $i1, $i2;
        java.lang.String $r1;

        r0 := @this: java.net.URI;

        $i0 = r0.<java.net.URI: int hash>;

        if $i0 != -1 goto label1;

        $r1 = specialinvoke r0.<java.net.URI: java.lang.String getHashString()>();

        $i2 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        r0.<java.net.URI: int hash> = $i2;

     label1:
        $i1 = r0.<java.net.URI: int hash>;

        return $i1;
    }

    public boolean isAbsolute()
    {
        java.net.URI r0;
        boolean $z0;

        r0 := @this: java.net.URI;

        $z0 = r0.<java.net.URI: boolean absolute>;

        return $z0;
    }

    public boolean isOpaque()
    {
        java.net.URI r0;
        boolean $z0;

        r0 := @this: java.net.URI;

        $z0 = r0.<java.net.URI: boolean opaque>;

        return $z0;
    }

    public java.net.URI normalize()
    {
        java.net.URI r0, r2;
        java.lang.String r1, $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: java.net.URI;

        $z0 = r0.<java.net.URI: boolean opaque>;

        if $z0 == 0 goto label2;

     label1:
        return r0;

     label2:
        $r3 = r0.<java.net.URI: java.lang.String path>;

        r1 = specialinvoke r0.<java.net.URI: java.lang.String normalize(java.lang.String,boolean)>($r3, 0);

        $r4 = r0.<java.net.URI: java.lang.String path>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 != 0 goto label1;

        r2 = specialinvoke r0.<java.net.URI: java.net.URI duplicate()>();

        r2.<java.net.URI: java.lang.String path> = r1;

        specialinvoke r2.<java.net.URI: void setSchemeSpecificPart()>();

        return r2;
    }

    public java.net.URI parseServerAuthority() throws java.net.URISyntaxException
    {
        java.net.URI r0;
        boolean $z0;

        r0 := @this: java.net.URI;

        $z0 = r0.<java.net.URI: boolean serverAuthority>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<java.net.URI: void parseAuthority(boolean)>(1);

     label1:
        return r0;
    }

    public java.net.URI relativize(java.net.URI)
    {
        java.net.URI r0, r1, r4, $r14;
        java.lang.String r2, r3, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r15, $r16, $r17, $r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        int $i0, $i1, $i2;

        r0 := @this: java.net.URI;

        r1 := @parameter0: java.net.URI;

        $z0 = r1.<java.net.URI: boolean opaque>;

        if $z0 != 0 goto label1;

        $z1 = r0.<java.net.URI: boolean opaque>;

        if $z1 == 0 goto label2;

     label1:
        return r1;

     label2:
        $r5 = r0.<java.net.URI: java.lang.String scheme>;

        if $r5 != null goto label6;

        $r18 = r1.<java.net.URI: java.lang.String scheme>;

        if $r18 != null goto label1;

     label3:
        $r8 = r0.<java.net.URI: java.lang.String authority>;

        if $r8 != null goto label7;

        $r17 = r1.<java.net.URI: java.lang.String authority>;

        if $r17 != null goto label1;

     label4:
        $r11 = r0.<java.net.URI: java.lang.String path>;

        r2 = specialinvoke r0.<java.net.URI: java.lang.String normalize(java.lang.String,boolean)>($r11, 0);

        $r12 = r1.<java.net.URI: java.lang.String path>;

        r3 = specialinvoke r0.<java.net.URI: java.lang.String normalize(java.lang.String,boolean)>($r12, 0);

        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z4 != 0 goto label5;

        $i1 = virtualinvoke r2.<java.lang.String: int lastIndexOf(int)>(47);

        $i2 = 1 + $i1;

        r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        $z5 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>(r2);

        if $z5 == 0 goto label1;

     label5:
        $r14 = new java.net.URI;

        specialinvoke $r14.<java.net.URI: void <init>()>();

        r4 = $r14;

        $r13 = r1.<java.net.URI: java.lang.String fragment>;

        r4.<java.net.URI: java.lang.String fragment> = $r13;

        $r15 = r1.<java.net.URI: java.lang.String query>;

        r4.<java.net.URI: java.lang.String query> = $r15;

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        $r16 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>($i0);

        r4.<java.net.URI: java.lang.String path> = $r16;

        specialinvoke r4.<java.net.URI: void setSchemeSpecificPart()>();

        return r4;

     label6:
        $r7 = r0.<java.net.URI: java.lang.String scheme>;

        $r6 = r1.<java.net.URI: java.lang.String scheme>;

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z2 != 0 goto label3;

        return r1;

     label7:
        $r10 = r0.<java.net.URI: java.lang.String authority>;

        $r9 = r1.<java.net.URI: java.lang.String authority>;

        $z3 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z3 != 0 goto label4;

        return r1;
    }

    public java.net.URI resolve(java.lang.String)
    {
        java.net.URI r0, $r2, $r3;
        java.lang.String r1;

        r0 := @this: java.net.URI;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>(r1);

        $r3 = virtualinvoke r0.<java.net.URI: java.net.URI resolve(java.net.URI)>($r2);

        return $r3;
    }

    public java.net.URI resolve(java.net.URI)
    {
        java.net.URI r0, r1, r2, r4, r5;
        int i0, $i1;
        java.lang.String r3, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r16, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.StringBuilder $r14, $r15, $r17;

        r0 := @this: java.net.URI;

        r1 := @parameter0: java.net.URI;

        $z0 = r1.<java.net.URI: boolean absolute>;

        if $z0 != 0 goto label1;

        $z1 = r0.<java.net.URI: boolean opaque>;

        if $z1 == 0 goto label2;

     label1:
        return r1;

     label2:
        $r6 = r1.<java.net.URI: java.lang.String authority>;

        if $r6 == null goto label3;

        r5 = specialinvoke r1.<java.net.URI: java.net.URI duplicate()>();

        $r25 = r0.<java.net.URI: java.lang.String scheme>;

        r5.<java.net.URI: java.lang.String scheme> = $r25;

        $z5 = r0.<java.net.URI: boolean absolute>;

        r5.<java.net.URI: boolean absolute> = $z5;

        return r5;

     label3:
        $r7 = r1.<java.net.URI: java.lang.String path>;

        $z2 = virtualinvoke $r7.<java.lang.String: boolean isEmpty()>();

        if $z2 == 0 goto label4;

        $r23 = r1.<java.net.URI: java.lang.String scheme>;

        if $r23 != null goto label4;

        $r24 = r1.<java.net.URI: java.lang.String query>;

        if $r24 != null goto label4;

        r4 = specialinvoke r0.<java.net.URI: java.net.URI duplicate()>();

        $r22 = r1.<java.net.URI: java.lang.String fragment>;

        r4.<java.net.URI: java.lang.String fragment> = $r22;

        return r4;

     label4:
        r2 = specialinvoke r0.<java.net.URI: java.net.URI duplicate()>();

        $r8 = r1.<java.net.URI: java.lang.String fragment>;

        r2.<java.net.URI: java.lang.String fragment> = $r8;

        $r9 = r1.<java.net.URI: java.lang.String query>;

        r2.<java.net.URI: java.lang.String query> = $r9;

        $r10 = r1.<java.net.URI: java.lang.String path>;

        $z3 = virtualinvoke $r10.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z3 == 0 goto label6;

        r3 = r1.<java.net.URI: java.lang.String path>;

     label5:
        $r19 = r2.<java.net.URI: java.lang.String authority>;

        $r21 = specialinvoke r0.<java.net.URI: java.lang.String normalize(java.lang.String,boolean)>(r3, 1);

        $r20 = staticinvoke <libcore.net.url.UrlUtils: java.lang.String authoritySafePath(java.lang.String,java.lang.String)>($r19, $r21);

        r2.<java.net.URI: java.lang.String path> = $r20;

        specialinvoke r2.<java.net.URI: void setSchemeSpecificPart()>();

        return r2;

     label6:
        $r11 = r1.<java.net.URI: java.lang.String path>;

        $z4 = virtualinvoke $r11.<java.lang.String: boolean isEmpty()>();

        if $z4 == 0 goto label7;

        r3 = r0.<java.net.URI: java.lang.String path>;

        goto label5;

     label7:
        $r12 = r0.<java.net.URI: java.lang.String path>;

        $i1 = virtualinvoke $r12.<java.lang.String: int lastIndexOf(int)>(47);

        i0 = 1 + $i1;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r13 = r0.<java.net.URI: java.lang.String path>;

        $r16 = virtualinvoke $r13.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = r1.<java.net.URI: java.lang.String path>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        r3 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label5;
    }

    public java.lang.String toASCIIString()
    {
        java.net.URI r0;
        java.lang.StringBuilder r1, $r2;
        libcore.net.UriCodec $r3;
        java.lang.String $r4, $r5;

        r0 := @this: java.net.URI;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        $r3 = <java.net.URI: libcore.net.UriCodec ASCII_ONLY>;

        $r4 = virtualinvoke r0.<java.net.URI: java.lang.String toString()>();

        virtualinvoke $r3.<libcore.net.UriCodec: void appendEncoded(java.lang.StringBuilder,java.lang.String)>(r1, $r4);

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public java.lang.String toString()
    {
        java.net.URI r0;
        java.lang.StringBuilder r1, $r3;
        java.lang.String $r2, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r12, $r16, $r18, $r19, $r21, $r23, $r27;
        boolean $z0;

        r0 := @this: java.net.URI;

        $r2 = r0.<java.net.URI: java.lang.String string>;

        if $r2 == null goto label1;

        $r27 = r0.<java.net.URI: java.lang.String string>;

        return $r27;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r1 = $r3;

        $r4 = r0.<java.net.URI: java.lang.String scheme>;

        if $r4 == null goto label2;

        $r23 = r0.<java.net.URI: java.lang.String scheme>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

     label2:
        $z0 = r0.<java.net.URI: boolean opaque>;

        if $z0 == 0 goto label5;

        $r21 = r0.<java.net.URI: java.lang.String schemeSpecificPart>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

     label3:
        $r8 = r0.<java.net.URI: java.lang.String fragment>;

        if $r8 == null goto label4;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(35);

        $r12 = r0.<java.net.URI: java.lang.String fragment>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

     label4:
        $r9 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<java.net.URI: java.lang.String string> = $r9;

        $r10 = r0.<java.net.URI: java.lang.String string>;

        return $r10;

     label5:
        $r5 = r0.<java.net.URI: java.lang.String authority>;

        if $r5 == null goto label6;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("//");

        $r19 = r0.<java.net.URI: java.lang.String authority>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

     label6:
        $r6 = r0.<java.net.URI: java.lang.String path>;

        if $r6 == null goto label7;

        $r18 = r0.<java.net.URI: java.lang.String path>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

     label7:
        $r7 = r0.<java.net.URI: java.lang.String query>;

        if $r7 == null goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(63);

        $r16 = r0.<java.net.URI: java.lang.String query>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        goto label3;
    }

    public java.net.URL toURL() throws java.net.MalformedURLException
    {
        java.net.URI r0;
        boolean $z0;
        java.net.URL $r1;
        java.lang.String $r2, $r6, $r8;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r7;

        r0 := @this: java.net.URI;

        $z0 = r0.<java.net.URI: boolean absolute>;

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("URI is not absolute: ");

        $r6 = virtualinvoke r0.<java.net.URI: java.lang.String toString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label1:
        $r1 = new java.net.URL;

        $r2 = virtualinvoke r0.<java.net.URI: java.lang.String toString()>();

        specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r2);

        return $r1;
    }
}
