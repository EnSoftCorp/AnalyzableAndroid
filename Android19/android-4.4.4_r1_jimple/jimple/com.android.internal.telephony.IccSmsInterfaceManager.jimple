public class com.android.internal.telephony.IccSmsInterfaceManager extends com.android.internal.telephony.ISms$Stub
{
    static final boolean DBG;
    private static final int EVENT_LOAD_DONE;
    protected static final int EVENT_SET_BROADCAST_ACTIVATION_DONE;
    protected static final int EVENT_SET_BROADCAST_CONFIG_DONE;
    private static final int EVENT_UPDATE_DONE;
    static final java.lang.String LOG_TAG;
    private static final int SMS_CB_CODE_SCHEME_MAX;
    private static final int SMS_CB_CODE_SCHEME_MIN;
    protected final android.app.AppOpsManager mAppOps;
    private com.android.internal.telephony.IccSmsInterfaceManager$CdmaBroadcastRangeManager mCdmaBroadcastRangeManager;
    private com.android.internal.telephony.IccSmsInterfaceManager$CellBroadcastRangeManager mCellBroadcastRangeManager;
    protected final android.content.Context mContext;
    protected com.android.internal.telephony.SMSDispatcher mDispatcher;
    protected android.os.Handler mHandler;
    protected final java.lang.Object mLock;
    protected com.android.internal.telephony.PhoneBase mPhone;
    private java.util.List mSms;
    protected boolean mSuccess;

    protected void <init>(com.android.internal.telephony.PhoneBase)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        com.android.internal.telephony.PhoneBase r1;
        java.lang.Object $r2, $r8;
        com.android.internal.telephony.IccSmsInterfaceManager$CellBroadcastRangeManager $r3;
        com.android.internal.telephony.IccSmsInterfaceManager$CdmaBroadcastRangeManager $r4;
        com.android.internal.telephony.IccSmsInterfaceManager$1 $r5;
        android.content.Context $r6, $r7;
        android.app.AppOpsManager $r9;
        com.android.internal.telephony.ImsSMSDispatcher $r10;
        com.android.internal.telephony.SmsUsageMonitor $r11;
        com.android.internal.telephony.SmsStorageMonitor $r12;
        android.os.IBinder $r13;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter0: com.android.internal.telephony.PhoneBase;

        specialinvoke r0.<com.android.internal.telephony.ISms$Stub: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.lang.Object mLock> = $r2;

        $r3 = new com.android.internal.telephony.IccSmsInterfaceManager$CellBroadcastRangeManager;

        specialinvoke $r3.<com.android.internal.telephony.IccSmsInterfaceManager$CellBroadcastRangeManager: void <init>(com.android.internal.telephony.IccSmsInterfaceManager)>(r0);

        r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.IccSmsInterfaceManager$CellBroadcastRangeManager mCellBroadcastRangeManager> = $r3;

        $r4 = new com.android.internal.telephony.IccSmsInterfaceManager$CdmaBroadcastRangeManager;

        specialinvoke $r4.<com.android.internal.telephony.IccSmsInterfaceManager$CdmaBroadcastRangeManager: void <init>(com.android.internal.telephony.IccSmsInterfaceManager)>(r0);

        r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.IccSmsInterfaceManager$CdmaBroadcastRangeManager mCdmaBroadcastRangeManager> = $r4;

        $r5 = new com.android.internal.telephony.IccSmsInterfaceManager$1;

        specialinvoke $r5.<com.android.internal.telephony.IccSmsInterfaceManager$1: void <init>(com.android.internal.telephony.IccSmsInterfaceManager)>(r0);

        r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.os.Handler mHandler> = $r5;

        r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone> = r1;

        $r6 = virtualinvoke r1.<com.android.internal.telephony.PhoneBase: android.content.Context getContext()>();

        r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.content.Context mContext> = $r6;

        $r7 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("appops");

        $r9 = (android.app.AppOpsManager) $r8;

        r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.app.AppOpsManager mAppOps> = $r9;

        $r10 = new com.android.internal.telephony.ImsSMSDispatcher;

        $r12 = r1.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.SmsStorageMonitor mSmsStorageMonitor>;

        $r11 = r1.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.SmsUsageMonitor mSmsUsageMonitor>;

        specialinvoke $r10.<com.android.internal.telephony.ImsSMSDispatcher: void <init>(com.android.internal.telephony.PhoneBase,com.android.internal.telephony.SmsStorageMonitor,com.android.internal.telephony.SmsUsageMonitor)>(r1, $r12, $r11);

        r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.SMSDispatcher mDispatcher> = $r10;

        $r13 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isms");

        if $r13 != null goto label1;

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("isms", r0);

     label1:
        return;
    }

    static java.util.List access$000(com.android.internal.telephony.IccSmsInterfaceManager)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        java.util.List $r1;

        r0 := @parameter0: com.android.internal.telephony.IccSmsInterfaceManager;

        $r1 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.util.List mSms>;

        return $r1;
    }

    static java.util.List access$002(com.android.internal.telephony.IccSmsInterfaceManager, java.util.List)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        java.util.List r1;

        r0 := @parameter0: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter1: java.util.List;

        r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.util.List mSms> = r1;

        return r1;
    }

    static boolean access$100(com.android.internal.telephony.IccSmsInterfaceManager, com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[])
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[] r1;
        boolean $z0;

        r0 := @parameter0: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter1: com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[];

        $z0 = specialinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean setCellBroadcastConfig(com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[])>(r1);

        return $z0;
    }

    static boolean access$200(com.android.internal.telephony.IccSmsInterfaceManager, com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo[])
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo[] r1;
        boolean $z0;

        r0 := @parameter0: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter1: com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo[];

        $z0 = specialinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean setCdmaBroadcastConfig(com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo[])>(r1);

        return $z0;
    }

    private boolean setCdmaBroadcastActivation(boolean)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        boolean z0, $z1;
        java.lang.Object r1, $r13;
        java.lang.Throwable r2, $r14;
        android.os.Message r3;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        java.lang.String $r9;
        android.os.Handler $r10;
        com.android.internal.telephony.PhoneBase $r11;
        com.android.internal.telephony.CommandsInterface $r12;
        java.lang.InterruptedException $r15;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        z0 := @parameter0: boolean;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calling setCdmaBroadcastActivation(");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>($r9);

        r1 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r10 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.os.Handler mHandler>;

        r3 = virtualinvoke $r10.<android.os.Handler: android.os.Message obtainMessage(int)>(3);

        r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean mSuccess> = 0;

        $r11 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        $r12 = $r11.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r12.<com.android.internal.telephony.CommandsInterface: void setCdmaBroadcastActivation(boolean,android.os.Message)>(z0, r3);

     label02:
        $r13 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.lang.Object mLock>;

        virtualinvoke $r13.<java.lang.Object: void wait()>();

     label03:
        exitmonitor r1;

     label04:
        $z1 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean mSuccess>;

        return $z1;

     label05:
        $r15 := @caughtexception;

     label06:
        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>("interrupted while trying to set cdma broadcast activation");

     label07:
        goto label03;

     label08:
        $r14 := @caughtexception;

        r2 = $r14;

     label09:
        exitmonitor r1;

     label10:
        throw r2;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.InterruptedException from label02 to label03 with label05;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    private boolean setCdmaBroadcastConfig(com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo[])
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo[] r1;
        java.lang.Object r2, $r13;
        java.lang.Throwable r3, $r15;
        android.os.Message r4;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;
        int $i0;
        java.lang.String $r10;
        android.os.Handler $r11;
        com.android.internal.telephony.PhoneBase $r12;
        com.android.internal.telephony.CommandsInterface $r14;
        boolean $z0;
        java.lang.InterruptedException $r16;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter0: com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo[];

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calling setCdmaBroadcastConfig with ");

        $i0 = lengthof r1;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" configurations");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>($r10);

        r2 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        $r11 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.os.Handler mHandler>;

        r4 = virtualinvoke $r11.<android.os.Handler: android.os.Message obtainMessage(int)>(4);

        r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean mSuccess> = 0;

        $r12 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        $r14 = $r12.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r14.<com.android.internal.telephony.CommandsInterface: void setCdmaBroadcastConfig(com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo[],android.os.Message)>(r1, r4);

     label02:
        $r13 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.lang.Object mLock>;

        virtualinvoke $r13.<java.lang.Object: void wait()>();

     label03:
        exitmonitor r2;

     label04:
        $z0 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean mSuccess>;

        return $z0;

     label05:
        $r16 := @caughtexception;

     label06:
        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>("interrupted while trying to set cdma broadcast config");

     label07:
        goto label03;

     label08:
        $r15 := @caughtexception;

        r3 = $r15;

     label09:
        exitmonitor r2;

     label10:
        throw r3;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.InterruptedException from label02 to label03 with label05;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    private boolean setCellBroadcastActivation(boolean)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        boolean z0, $z1;
        java.lang.Object r1, $r13;
        java.lang.Throwable r2, $r15;
        android.os.Message r3;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        java.lang.String $r9;
        android.os.Handler $r10;
        com.android.internal.telephony.PhoneBase $r11;
        com.android.internal.telephony.CommandsInterface $r12;
        java.lang.InterruptedException $r14;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        z0 := @parameter0: boolean;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calling setCellBroadcastActivation(");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>($r9);

        r1 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r10 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.os.Handler mHandler>;

        r3 = virtualinvoke $r10.<android.os.Handler: android.os.Message obtainMessage(int)>(3);

        r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean mSuccess> = 0;

        $r11 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        $r12 = $r11.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r12.<com.android.internal.telephony.CommandsInterface: void setGsmBroadcastActivation(boolean,android.os.Message)>(z0, r3);

     label02:
        $r13 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.lang.Object mLock>;

        virtualinvoke $r13.<java.lang.Object: void wait()>();

     label03:
        exitmonitor r1;

     label04:
        $z1 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean mSuccess>;

        return $z1;

     label05:
        $r14 := @caughtexception;

     label06:
        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>("interrupted while trying to set cell broadcast activation");

     label07:
        goto label03;

     label08:
        $r15 := @caughtexception;

        r2 = $r15;

     label09:
        exitmonitor r1;

     label10:
        throw r2;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.InterruptedException from label02 to label03 with label05;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    private boolean setCellBroadcastConfig(com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[])
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[] r1;
        java.lang.Object r2, $r13;
        java.lang.Throwable r3, $r15;
        android.os.Message r4;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;
        int $i0;
        java.lang.String $r10;
        android.os.Handler $r11;
        com.android.internal.telephony.PhoneBase $r12;
        com.android.internal.telephony.CommandsInterface $r14;
        boolean $z0;
        java.lang.InterruptedException $r16;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter0: com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[];

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calling setGsmBroadcastConfig with ");

        $i0 = lengthof r1;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" configurations");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>($r10);

        r2 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        $r11 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.os.Handler mHandler>;

        r4 = virtualinvoke $r11.<android.os.Handler: android.os.Message obtainMessage(int)>(4);

        r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean mSuccess> = 0;

        $r12 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        $r14 = $r12.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r14.<com.android.internal.telephony.CommandsInterface: void setGsmBroadcastConfig(com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[],android.os.Message)>(r1, r4);

     label02:
        $r13 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.lang.Object mLock>;

        virtualinvoke $r13.<java.lang.Object: void wait()>();

     label03:
        exitmonitor r2;

     label04:
        $z0 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean mSuccess>;

        return $z0;

     label05:
        $r16 := @caughtexception;

     label06:
        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>("interrupted while trying to set cell broadcast config");

     label07:
        goto label03;

     label08:
        $r15 := @caughtexception;

        r3 = $r15;

     label09:
        exitmonitor r2;

     label10:
        throw r3;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.InterruptedException from label02 to label03 with label05;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    protected java.util.ArrayList buildValidRawData(java.util.ArrayList)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        java.util.ArrayList r1, r2, $r3;
        int i0, i1;
        java.lang.Object $r4, $r7;
        byte[] $r5, $r8;
        byte $b2;
        com.android.internal.telephony.SmsRawData $r6;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter0: java.util.ArrayList;

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(i0);

        r2 = $r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        $r4 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (byte[]) $r4;

        $b2 = $r5[0];

        if $b2 != 0 goto label3;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(null);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r6 = new com.android.internal.telephony.SmsRawData;

        $r7 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r8 = (byte[]) $r7;

        specialinvoke $r6.<com.android.internal.telephony.SmsRawData: void <init>(byte[])>($r8);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        goto label2;

     label4:
        return r2;
    }

    public boolean copyMessageToIccEf(java.lang.String, int, byte[], byte[])
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        java.lang.String r1, $r13, $r15, $r20, $r26, $r28, $r31;
        int i0, $i1, $i2, $i3;
        byte[] r2, r3;
        java.lang.Object r4, $r24;
        java.lang.Throwable r5, $r32;
        android.os.Message r6;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12, $r14, $r16, $r17, $r18;
        android.app.AppOpsManager $r19;
        android.os.Handler $r21;
        com.android.internal.telephony.PhoneBase $r22, $r23, $r29;
        com.android.internal.telephony.CommandsInterface $r25, $r27;
        boolean $z0;
        java.lang.InterruptedException $r30;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: byte[];

        r3 := @parameter3: byte[];

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("copyMessageToIccEf: status=");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ==> ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pdu=(");

        $r13 = staticinvoke <java.util.Arrays: java.lang.String toString(byte[])>(r2);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), smsc=(");

        $r15 = staticinvoke <java.util.Arrays: java.lang.String toString(byte[])>(r3);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>($r20);

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void enforceReceiveAndSend(java.lang.String)>("Copying message to Icc");

        $r19 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.app.AppOpsManager mAppOps>;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i2 = virtualinvoke $r19.<android.app.AppOpsManager: int noteOp(int,int,java.lang.String)>(22, $i1, r1);

        if $i2 == 0 goto label01;

        return 0;

     label01:
        r4 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.lang.Object mLock>;

        entermonitor r4;

     label02:
        r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean mSuccess> = 0;

        $r21 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.os.Handler mHandler>;

        r6 = virtualinvoke $r21.<android.os.Handler: android.os.Message obtainMessage(int)>(2);

        $r22 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        $i3 = virtualinvoke $r22.<com.android.internal.telephony.PhoneBase: int getPhoneType()>();

        if 1 != $i3 goto label06;

        $r29 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        $r27 = $r29.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.CommandsInterface mCi>;

        $r28 = staticinvoke <com.android.internal.telephony.IccUtils: java.lang.String bytesToHexString(byte[])>(r3);

        $r31 = staticinvoke <com.android.internal.telephony.IccUtils: java.lang.String bytesToHexString(byte[])>(r2);

        interfaceinvoke $r27.<com.android.internal.telephony.CommandsInterface: void writeSmsToSim(int,java.lang.String,java.lang.String,android.os.Message)>(i0, $r28, $r31, r6);

     label03:
        $r24 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.lang.Object mLock>;

        virtualinvoke $r24.<java.lang.Object: void wait()>();

     label04:
        exitmonitor r4;

     label05:
        $z0 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean mSuccess>;

        return $z0;

     label06:
        $r23 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        $r25 = $r23.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.CommandsInterface mCi>;

        $r26 = staticinvoke <com.android.internal.telephony.IccUtils: java.lang.String bytesToHexString(byte[])>(r2);

        interfaceinvoke $r25.<com.android.internal.telephony.CommandsInterface: void writeSmsToRuim(int,java.lang.String,android.os.Message)>(i0, $r26, r6);

     label07:
        goto label03;

     label08:
        $r32 := @caughtexception;

        r5 = $r32;

     label09:
        exitmonitor r4;

     label10:
        throw r5;

     label11:
        $r30 := @caughtexception;

     label12:
        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>("interrupted while trying to update by index");

     label13:
        goto label04;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.InterruptedException from label03 to label04 with label11;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label12 to label13 with label08;
    }

    public boolean disableCdmaBroadcastRange(int, int)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        int i0, i1, $i2;
        boolean z0, z1, z2, $z3;
        java.lang.Throwable r1, $r24;
        android.content.Context r2;
        java.lang.String r3, $r15, $r23;
        com.android.internal.telephony.PhoneBase $r4;
        android.content.pm.PackageManager $r5;
        com.android.internal.telephony.IccSmsInterfaceManager$CdmaBroadcastRangeManager $r6, $r14;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r16, $r17, $r18, $r19, $r20, $r21, $r22;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 = 0;

        entermonitor r0;

     label1:
        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>("disableCdmaBroadcastRange");

        $r4 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        r2 = virtualinvoke $r4.<com.android.internal.telephony.PhoneBase: android.content.Context getContext()>();

        virtualinvoke r2.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.RECEIVE_SMS", "Disabling cell broadcast SMS");

        $r5 = virtualinvoke r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r3 = virtualinvoke $r5.<android.content.pm.PackageManager: java.lang.String getNameForUid(int)>($i2);

        $r6 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.IccSmsInterfaceManager$CdmaBroadcastRangeManager mCdmaBroadcastRangeManager>;

        $z3 = virtualinvoke $r6.<com.android.internal.telephony.IccSmsInterfaceManager$CdmaBroadcastRangeManager: boolean disableRange(int,int,java.lang.String)>(i0, i1, r3);

        if $z3 != 0 goto label3;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to remove cdma broadcast subscription for MID range ");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r19 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from client ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>($r23);

     label2:
        exitmonitor r0;

        return z0;

     label3:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removed cdma broadcast subscription for MID range ");

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from client ");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>($r15);

        $r14 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.IccSmsInterfaceManager$CdmaBroadcastRangeManager mCdmaBroadcastRangeManager>;

        z1 = virtualinvoke $r14.<com.android.internal.telephony.IccSmsInterfaceManager$CdmaBroadcastRangeManager: boolean isEmpty()>();

     label4:
        z2 = 0;

        if z1 != 0 goto label5;

        z2 = 1;

     label5:
        specialinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean setCdmaBroadcastActivation(boolean)>(z2);

     label6:
        z0 = 1;

        goto label2;

     label7:
        $r24 := @caughtexception;

        r1 = $r24;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public boolean disableCellBroadcast(int)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        int i0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean disableCellBroadcastRange(int,int)>(i0, i0);

        return $z0;
    }

    public boolean disableCellBroadcastRange(int, int)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        int i0, i1, $i2;
        com.android.internal.telephony.PhoneBase $r1;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        $i2 = virtualinvoke $r1.<com.android.internal.telephony.PhoneBase: int getPhoneType()>();

        if 1 != $i2 goto label1;

        $z1 = virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean disableGsmBroadcastRange(int,int)>(i0, i1);

        return $z1;

     label1:
        $z0 = virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean disableCdmaBroadcastRange(int,int)>(i0, i1);

        return $z0;
    }

    public boolean disableGsmBroadcastRange(int, int)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        int i0, i1, $i2;
        boolean z0, z1, z2, $z3;
        java.lang.Throwable r1, $r24;
        android.content.Context r2;
        java.lang.String r3, $r15, $r23;
        com.android.internal.telephony.PhoneBase $r4;
        android.content.pm.PackageManager $r5;
        com.android.internal.telephony.IccSmsInterfaceManager$CellBroadcastRangeManager $r6, $r14;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r16, $r17, $r18, $r19, $r20, $r21, $r22;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 = 0;

        entermonitor r0;

     label1:
        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>("disableGsmBroadcastRange");

        $r4 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        r2 = virtualinvoke $r4.<com.android.internal.telephony.PhoneBase: android.content.Context getContext()>();

        virtualinvoke r2.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.RECEIVE_SMS", "Disabling cell broadcast SMS");

        $r5 = virtualinvoke r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r3 = virtualinvoke $r5.<android.content.pm.PackageManager: java.lang.String getNameForUid(int)>($i2);

        $r6 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.IccSmsInterfaceManager$CellBroadcastRangeManager mCellBroadcastRangeManager>;

        $z3 = virtualinvoke $r6.<com.android.internal.telephony.IccSmsInterfaceManager$CellBroadcastRangeManager: boolean disableRange(int,int,java.lang.String)>(i0, i1, r3);

        if $z3 != 0 goto label3;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to remove cell broadcast subscription for MID range ");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r19 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from client ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>($r23);

     label2:
        exitmonitor r0;

        return z0;

     label3:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removed cell broadcast subscription for MID range ");

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from client ");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>($r15);

        $r14 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.IccSmsInterfaceManager$CellBroadcastRangeManager mCellBroadcastRangeManager>;

        z1 = virtualinvoke $r14.<com.android.internal.telephony.IccSmsInterfaceManager$CellBroadcastRangeManager: boolean isEmpty()>();

     label4:
        z2 = 0;

        if z1 != 0 goto label5;

        z2 = 1;

     label5:
        specialinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean setCellBroadcastActivation(boolean)>(z2);

     label6:
        z0 = 1;

        goto label2;

     label7:
        $r24 := @caughtexception;

        r1 = $r24;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public boolean enableCdmaBroadcastRange(int, int)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        int i0, i1, $i2;
        boolean z0, z1, z2, $z3;
        java.lang.Throwable r1, $r24;
        android.content.Context r2;
        java.lang.String r3, $r15, $r23;
        com.android.internal.telephony.PhoneBase $r4;
        android.content.pm.PackageManager $r5;
        com.android.internal.telephony.IccSmsInterfaceManager$CdmaBroadcastRangeManager $r6, $r14;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r16, $r17, $r18, $r19, $r20, $r21, $r22;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 = 0;

        entermonitor r0;

     label1:
        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>("enableCdmaBroadcastRange");

        $r4 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        r2 = virtualinvoke $r4.<com.android.internal.telephony.PhoneBase: android.content.Context getContext()>();

        virtualinvoke r2.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.RECEIVE_SMS", "Enabling cdma broadcast SMS");

        $r5 = virtualinvoke r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r3 = virtualinvoke $r5.<android.content.pm.PackageManager: java.lang.String getNameForUid(int)>($i2);

        $r6 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.IccSmsInterfaceManager$CdmaBroadcastRangeManager mCdmaBroadcastRangeManager>;

        $z3 = virtualinvoke $r6.<com.android.internal.telephony.IccSmsInterfaceManager$CdmaBroadcastRangeManager: boolean enableRange(int,int,java.lang.String)>(i0, i1, r3);

        if $z3 != 0 goto label3;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to add cdma broadcast subscription for MID range ");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r19 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from client ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>($r23);

     label2:
        exitmonitor r0;

        return z0;

     label3:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Added cdma broadcast subscription for MID range ");

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from client ");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>($r15);

        $r14 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.IccSmsInterfaceManager$CdmaBroadcastRangeManager mCdmaBroadcastRangeManager>;

        z1 = virtualinvoke $r14.<com.android.internal.telephony.IccSmsInterfaceManager$CdmaBroadcastRangeManager: boolean isEmpty()>();

     label4:
        z2 = 0;

        if z1 != 0 goto label5;

        z2 = 1;

     label5:
        specialinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean setCdmaBroadcastActivation(boolean)>(z2);

     label6:
        z0 = 1;

        goto label2;

     label7:
        $r24 := @caughtexception;

        r1 = $r24;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public boolean enableCellBroadcast(int)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        int i0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean enableCellBroadcastRange(int,int)>(i0, i0);

        return $z0;
    }

    public boolean enableCellBroadcastRange(int, int)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        int i0, i1, $i2;
        com.android.internal.telephony.PhoneBase $r1;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        $i2 = virtualinvoke $r1.<com.android.internal.telephony.PhoneBase: int getPhoneType()>();

        if 1 != $i2 goto label1;

        $z1 = virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean enableGsmBroadcastRange(int,int)>(i0, i1);

        return $z1;

     label1:
        $z0 = virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean enableCdmaBroadcastRange(int,int)>(i0, i1);

        return $z0;
    }

    public boolean enableGsmBroadcastRange(int, int)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        int i0, i1, $i2;
        boolean z0, z1, z2, $z3;
        java.lang.Throwable r1, $r24;
        android.content.Context r2;
        java.lang.String r3, $r15, $r23;
        com.android.internal.telephony.PhoneBase $r4;
        android.content.pm.PackageManager $r5;
        com.android.internal.telephony.IccSmsInterfaceManager$CellBroadcastRangeManager $r6, $r14;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r16, $r17, $r18, $r19, $r20, $r21, $r22;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 = 0;

        entermonitor r0;

     label1:
        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>("enableGsmBroadcastRange");

        $r4 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        r2 = virtualinvoke $r4.<com.android.internal.telephony.PhoneBase: android.content.Context getContext()>();

        virtualinvoke r2.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.RECEIVE_SMS", "Enabling cell broadcast SMS");

        $r5 = virtualinvoke r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r3 = virtualinvoke $r5.<android.content.pm.PackageManager: java.lang.String getNameForUid(int)>($i2);

        $r6 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.IccSmsInterfaceManager$CellBroadcastRangeManager mCellBroadcastRangeManager>;

        $z3 = virtualinvoke $r6.<com.android.internal.telephony.IccSmsInterfaceManager$CellBroadcastRangeManager: boolean enableRange(int,int,java.lang.String)>(i0, i1, r3);

        if $z3 != 0 goto label3;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to add cell broadcast subscription for MID range ");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r19 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from client ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>($r23);

     label2:
        exitmonitor r0;

        return z0;

     label3:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Added cell broadcast subscription for MID range ");

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from client ");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>($r15);

        $r14 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.IccSmsInterfaceManager$CellBroadcastRangeManager mCellBroadcastRangeManager>;

        z1 = virtualinvoke $r14.<com.android.internal.telephony.IccSmsInterfaceManager$CellBroadcastRangeManager: boolean isEmpty()>();

     label4:
        z2 = 0;

        if z1 != 0 goto label5;

        z2 = 1;

     label5:
        specialinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean setCellBroadcastActivation(boolean)>(z2);

     label6:
        z0 = 1;

        goto label2;

     label7:
        $r24 := @caughtexception;

        r1 = $r24;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    protected void enforceReceiveAndSend(java.lang.String)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        java.lang.String r1;
        android.content.Context $r2, $r3;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.content.Context mContext>;

        virtualinvoke $r2.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.RECEIVE_SMS", r1);

        $r3 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SEND_SMS", r1);

        return;
    }

    public java.util.List getAllMessagesFromIccEf(java.lang.String)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        java.lang.String r1;
        java.lang.Object r2, $r11;
        java.lang.Throwable r3, $r16;
        com.android.internal.telephony.uicc.IccFileHandler r4;
        java.util.List r6, $r13, $r14, $r15;
        android.content.Context $r7;
        android.app.AppOpsManager $r8;
        int $i0, $i1;
        com.android.internal.telephony.PhoneBase $r9;
        android.os.Handler $r10;
        android.os.Message $r12;
        java.util.ArrayList $r17;
        java.lang.InterruptedException $r18;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>("getAllMessagesFromEF");

        $r7 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.content.Context mContext>;

        virtualinvoke $r7.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.RECEIVE_SMS", "Reading messages from Icc");

        $r8 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.app.AppOpsManager mAppOps>;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i1 = virtualinvoke $r8.<android.app.AppOpsManager: int noteOp(int,int,java.lang.String)>(21, $i0, r1);

        if $i1 == 0 goto label01;

        $r17 = new java.util.ArrayList;

        specialinvoke $r17.<java.util.ArrayList: void <init>()>();

        return $r17;

     label01:
        r2 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.lang.Object mLock>;

        entermonitor r2;

     label02:
        $r9 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        r4 = virtualinvoke $r9.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.uicc.IccFileHandler getIccFileHandler()>();

     label03:
        if r4 != null goto label09;

     label04:
        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("IccSmsInterfaceManager", "Cannot load Sms records. No icc card?");

        $r14 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.util.List mSms>;

        if $r14 == null goto label09;

        $r15 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.util.List mSms>;

        interfaceinvoke $r15.<java.util.List: void clear()>();

        r6 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.util.List mSms>;

        exitmonitor r2;

     label05:
        return r6;

     label06:
        $r16 := @caughtexception;

        r3 = $r16;

     label07:
        exitmonitor r2;

     label08:
        throw r3;

     label09:
        $r10 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.os.Handler mHandler>;

        $r12 = virtualinvoke $r10.<android.os.Handler: android.os.Message obtainMessage(int)>(1);

        virtualinvoke r4.<com.android.internal.telephony.uicc.IccFileHandler: void loadEFLinearFixedAll(int,android.os.Message)>(28476, $r12);

     label10:
        $r11 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.lang.Object mLock>;

        virtualinvoke $r11.<java.lang.Object: void wait()>();

     label11:
        exitmonitor r2;

     label12:
        $r13 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.util.List mSms>;

        return $r13;

     label13:
        $r18 := @caughtexception;

     label14:
        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>("interrupted while trying to load from the Icc");

     label15:
        goto label11;

        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label09 to label10 with label06;
        catch java.lang.InterruptedException from label10 to label11 with label13;
        catch java.lang.Throwable from label10 to label11 with label06;
        catch java.lang.Throwable from label11 to label12 with label06;
        catch java.lang.Throwable from label14 to label15 with label06;
    }

    public java.lang.String getImsSmsFormat()
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        com.android.internal.telephony.SMSDispatcher $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        $r1 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.SMSDispatcher mDispatcher>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.SMSDispatcher: java.lang.String getImsSmsFormat()>();

        return $r2;
    }

    public int getPremiumSmsPermission(java.lang.String)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        java.lang.String r1;
        com.android.internal.telephony.SMSDispatcher $r2;
        int $i0;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.SMSDispatcher mDispatcher>;

        $i0 = virtualinvoke $r2.<com.android.internal.telephony.SMSDispatcher: int getPremiumSmsPermission(java.lang.String)>(r1);

        return $i0;
    }

    public boolean isImsSmsSupported()
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        com.android.internal.telephony.SMSDispatcher $r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        $r1 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.SMSDispatcher mDispatcher>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.SMSDispatcher: boolean isIms()>();

        return $z0;
    }

    protected void log(java.lang.String)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        java.lang.String r1, $r5;
        java.lang.StringBuilder $r2, $r3, $r4;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[IccSmsInterfaceManager] ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("IccSmsInterfaceManager", $r5);

        return;
    }

    protected byte[] makeSmsRecordData(int, byte[])
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        int i0, i1, $i2, $i4, $i5;
        byte[] r1, r2;
        byte $b3;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        r2 = newarray (byte)[176];

        $i2 = i0 & 7;

        $b3 = (byte) $i2;

        r2[0] = $b3;

        $i4 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r2, 1, $i4);

        $i5 = lengthof r1;

        i1 = 1 + $i5;

     label1:
        if i1 >= 176 goto label2;

        r2[i1] = -1;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r2;
    }

    protected void markMessagesAsRead(java.util.ArrayList)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        java.util.ArrayList r1;
        com.android.internal.telephony.uicc.IccFileHandler r2;
        int i0, i1, i2, $i4, $i5, $i6, $i7;
        byte[] r3, r4, r5;
        com.android.internal.telephony.PhoneBase $r6;
        java.lang.Object $r7;
        byte $b3;
        java.lang.StringBuilder $r8, $r9, $r10, $r11;
        boolean $z0, $z1;
        java.lang.String $r12;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter0: java.util.ArrayList;

        if r1 != null goto label2;

     label1:
        return;

     label2:
        $r6 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        r2 = virtualinvoke $r6.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.uicc.IccFileHandler getIccFileHandler()>();

        if r2 != null goto label3;

        $z1 = staticinvoke <android.telephony.Rlog: boolean isLoggable(java.lang.String,int)>("SMS", 3);

        if $z1 == 0 goto label1;

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>("markMessagesAsRead - aborting, no icc card present.");

        return;

     label3:
        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i1 = 0;

     label4:
        if i1 >= i0 goto label1;

        $r7 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (byte[]) $r7;

        $b3 = r3[0];

        if $b3 != 3 goto label5;

        i2 = lengthof r3;

        $i4 = i2 - 1;

        r4 = newarray (byte)[$i4];

        $i5 = i2 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 1, r4, 0, $i5);

        r5 = virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: byte[] makeSmsRecordData(int,byte[])>(1, r4);

        $i6 = i1 + 1;

        virtualinvoke r2.<com.android.internal.telephony.uicc.IccFileHandler: void updateEFLinearFixed(int,int,byte[],java.lang.String,android.os.Message)>(28476, $i6, r5, null, null);

        $z0 = staticinvoke <android.telephony.Rlog: boolean isLoggable(java.lang.String,int)>("SMS", 3);

        if $z0 == 0 goto label5;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SMS ");

        $i7 = i1 + 1;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" marked as read");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>($r12);

     label5:
        i1 = i1 + 1;

        goto label4;
    }

    public void sendData(java.lang.String, java.lang.String, java.lang.String, int, byte[], android.app.PendingIntent, android.app.PendingIntent)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        java.lang.String r1, r2, r3, $r20, $r25;
        int i0, $i1, $i2;
        byte[] r4;
        android.app.PendingIntent r5, r6;
        com.android.internal.telephony.PhoneBase $r7;
        android.content.Context $r8;
        boolean $z0;
        android.app.AppOpsManager $r9;
        com.android.internal.telephony.SMSDispatcher $r10;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r21, $r22, $r23, $r24;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r4 := @parameter4: byte[];

        r5 := @parameter5: android.app.PendingIntent;

        r6 := @parameter6: android.app.PendingIntent;

        $r7 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        $r8 = virtualinvoke $r7.<com.android.internal.telephony.PhoneBase: android.content.Context getContext()>();

        virtualinvoke $r8.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SEND_SMS", "Sending SMS message");

        $z0 = staticinvoke <android.telephony.Rlog: boolean isLoggable(java.lang.String,int)>("SMS", 2);

        if $z0 == 0 goto label1;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendData: destAddr=");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" scAddr=");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" destPort=");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" data=\'");

        $r20 = staticinvoke <com.android.internal.util.HexDump: java.lang.String toHexString(byte[])>(r4);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' sentIntent=");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" deliveryIntent=");

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>($r25);

     label1:
        $r9 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.app.AppOpsManager mAppOps>;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i2 = virtualinvoke $r9.<android.app.AppOpsManager: int noteOp(int,int,java.lang.String)>(20, $i1, r1);

        if $i2 == 0 goto label2;

        return;

     label2:
        $r10 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.SMSDispatcher mDispatcher>;

        virtualinvoke $r10.<com.android.internal.telephony.SMSDispatcher: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>(r2, r3, i0, r4, r5, r6);

        return;
    }

    public void sendMultipartText(java.lang.String, java.lang.String, java.lang.String, java.util.List, java.util.List, java.util.List)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        java.lang.String r1, r2, r3, r8, $r24;
        java.util.List r4, r5, r6;
        int i0, i1, $i2, $i3;
        java.util.Iterator r7;
        java.lang.StringBuilder r9, $r18, $r19, $r20, $r21, $r22, $r23, $r25, $r26;
        com.android.internal.telephony.PhoneBase $r10;
        android.content.Context $r11;
        boolean $z0, $z1;
        android.app.AppOpsManager $r12;
        java.util.ArrayList $r13, $r14, $r15;
        com.android.internal.telephony.SMSDispatcher $r16;
        java.lang.Object $r17;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.util.List;

        r5 := @parameter4: java.util.List;

        r6 := @parameter5: java.util.List;

        $r10 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        $r11 = virtualinvoke $r10.<com.android.internal.telephony.PhoneBase: android.content.Context getContext()>();

        virtualinvoke $r11.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SEND_SMS", "Sending SMS message");

        $z0 = staticinvoke <android.telephony.Rlog: boolean isLoggable(java.lang.String,int)>("SMS", 2);

        if $z0 == 0 goto label2;

        i0 = 0;

        r7 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r17 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.String) $r17;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendMultipartText: destAddr=");

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", srAddr=");

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        r9 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", part[");

        i1 = i0 + 1;

        $r25 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]=");

        $r23 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>($r24);

        i0 = i1;

        goto label1;

     label2:
        $r12 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.app.AppOpsManager mAppOps>;

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i3 = virtualinvoke $r12.<android.app.AppOpsManager: int noteOp(int,int,java.lang.String)>(20, $i2, r1);

        if $i3 == 0 goto label3;

        return;

     label3:
        $r16 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.SMSDispatcher mDispatcher>;

        $r14 = (java.util.ArrayList) r4;

        $r15 = (java.util.ArrayList) r5;

        $r13 = (java.util.ArrayList) r6;

        virtualinvoke $r16.<com.android.internal.telephony.SMSDispatcher: void sendMultipartText(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>(r2, r3, $r14, $r15, $r13);

        return;
    }

    public void sendText(java.lang.String, java.lang.String, java.lang.String, java.lang.String, android.app.PendingIntent, android.app.PendingIntent)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        java.lang.String r1, r2, r3, r4, $r22;
        android.app.PendingIntent r5, r6;
        com.android.internal.telephony.PhoneBase $r7;
        android.content.Context $r8;
        boolean $z0;
        android.app.AppOpsManager $r9;
        int $i0, $i1;
        com.android.internal.telephony.SMSDispatcher $r10;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: android.app.PendingIntent;

        r6 := @parameter5: android.app.PendingIntent;

        $r7 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        $r8 = virtualinvoke $r7.<com.android.internal.telephony.PhoneBase: android.content.Context getContext()>();

        virtualinvoke $r8.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SEND_SMS", "Sending SMS message");

        $z0 = staticinvoke <android.telephony.Rlog: boolean isLoggable(java.lang.String,int)>("SMS", 2);

        if $z0 == 0 goto label1;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendText: destAddr=");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" scAddr=");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" text=\'");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' sentIntent=");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" deliveryIntent=");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>($r22);

     label1:
        $r9 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.app.AppOpsManager mAppOps>;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i1 = virtualinvoke $r9.<android.app.AppOpsManager: int noteOp(int,int,java.lang.String)>(20, $i0, r1);

        if $i1 == 0 goto label2;

        return;

     label2:
        $r10 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.SMSDispatcher mDispatcher>;

        virtualinvoke $r10.<com.android.internal.telephony.SMSDispatcher: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>(r2, r3, r4, r5, r6);

        return;
    }

    public void setPremiumSmsPermission(java.lang.String, int)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        java.lang.String r1;
        int i0;
        com.android.internal.telephony.SMSDispatcher $r2;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.SMSDispatcher mDispatcher>;

        virtualinvoke $r2.<com.android.internal.telephony.SMSDispatcher: void setPremiumSmsPermission(java.lang.String,int)>(r1, i0);

        return;
    }

    public boolean updateMessageOnIccEf(java.lang.String, int, int, byte[])
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        java.lang.String r1, $r16, $r17;
        int i0, i1, $i2, $i3, $i4;
        byte[] r2, $r22;
        java.lang.Object r3, $r23;
        java.lang.Throwable r4, $r30;
        android.os.Message r5;
        com.android.internal.telephony.uicc.IccFileHandler r7;
        boolean z0, $z1;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r18;
        android.app.AppOpsManager $r19;
        android.os.Handler $r20;
        com.android.internal.telephony.PhoneBase $r21, $r24, $r25, $r27;
        com.android.internal.telephony.CommandsInterface $r26, $r28;
        java.lang.InterruptedException $r29;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: byte[];

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateMessageOnIccEf: index=");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" status=");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ==> ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r16 = staticinvoke <java.util.Arrays: java.lang.String toString(byte[])>(r2);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>($r17);

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void enforceReceiveAndSend(java.lang.String)>("Updating message on Icc");

        $r19 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.app.AppOpsManager mAppOps>;

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i2 = virtualinvoke $r19.<android.app.AppOpsManager: int noteOp(int,int,java.lang.String)>(22, $i3, r1);

        if $i2 == 0 goto label01;

        return 0;

     label01:
        r3 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.lang.Object mLock>;

        entermonitor r3;

     label02:
        r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean mSuccess> = 0;

        $r20 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.os.Handler mHandler>;

        r5 = virtualinvoke $r20.<android.os.Handler: android.os.Message obtainMessage(int)>(2);

     label03:
        if i1 != 0 goto label13;

     label04:
        $r24 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        $i4 = virtualinvoke $r24.<com.android.internal.telephony.PhoneBase: int getPhoneType()>();

        if 1 != $i4 goto label08;

        $r25 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        $r26 = $r25.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r26.<com.android.internal.telephony.CommandsInterface: void deleteSmsOnSim(int,android.os.Message)>(i0, r5);

     label05:
        $r23 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.lang.Object mLock>;

        virtualinvoke $r23.<java.lang.Object: void wait()>();

     label06:
        exitmonitor r3;

     label07:
        $z1 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean mSuccess>;

        return $z1;

     label08:
        $r27 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        $r28 = $r27.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r28.<com.android.internal.telephony.CommandsInterface: void deleteSmsOnRuim(int,android.os.Message)>(i0, r5);

     label09:
        goto label05;

     label10:
        $r30 := @caughtexception;

        r4 = $r30;

     label11:
        exitmonitor r3;

     label12:
        throw r4;

     label13:
        $r21 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        r7 = virtualinvoke $r21.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.uicc.IccFileHandler getIccFileHandler()>();

     label14:
        if r7 != null goto label17;

     label15:
        virtualinvoke r5.<android.os.Message: void recycle()>();

        z0 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean mSuccess>;

        exitmonitor r3;

     label16:
        return z0;

     label17:
        $r22 = virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: byte[] makeSmsRecordData(int,byte[])>(i1, r2);

        virtualinvoke r7.<com.android.internal.telephony.uicc.IccFileHandler: void updateEFLinearFixed(int,int,byte[],java.lang.String,android.os.Message)>(28476, i0, $r22, null, r5);

     label18:
        goto label05;

     label19:
        $r29 := @caughtexception;

     label20:
        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>("interrupted while trying to update by index");

     label21:
        goto label06;

        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.InterruptedException from label05 to label06 with label19;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label13 to label14 with label10;
        catch java.lang.Throwable from label15 to label16 with label10;
        catch java.lang.Throwable from label17 to label18 with label10;
        catch java.lang.Throwable from label20 to label21 with label10;
    }

    protected void updatePhoneObject(com.android.internal.telephony.PhoneBase)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        com.android.internal.telephony.PhoneBase r1;
        com.android.internal.telephony.SMSDispatcher $r2;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter0: com.android.internal.telephony.PhoneBase;

        r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone> = r1;

        $r2 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.SMSDispatcher mDispatcher>;

        virtualinvoke $r2.<com.android.internal.telephony.SMSDispatcher: void updatePhoneObject(com.android.internal.telephony.PhoneBase)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.IccSmsInterfaceManager: int SMS_CB_CODE_SCHEME_MAX> = 255;

        <com.android.internal.telephony.IccSmsInterfaceManager: java.lang.String LOG_TAG> = "IccSmsInterfaceManager";

        <com.android.internal.telephony.IccSmsInterfaceManager: int EVENT_UPDATE_DONE> = 2;

        <com.android.internal.telephony.IccSmsInterfaceManager: int EVENT_SET_BROADCAST_CONFIG_DONE> = 4;

        <com.android.internal.telephony.IccSmsInterfaceManager: int EVENT_SET_BROADCAST_ACTIVATION_DONE> = 3;

        <com.android.internal.telephony.IccSmsInterfaceManager: int EVENT_LOAD_DONE> = 1;

        <com.android.internal.telephony.IccSmsInterfaceManager: boolean DBG> = 1;

        return;
    }
}
