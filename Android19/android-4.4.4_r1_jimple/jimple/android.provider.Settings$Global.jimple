public final class android.provider.Settings$Global extends android.provider.Settings$NameValueTable
{
    public static final java.lang.String ADB_ENABLED;
    public static final java.lang.String AIRPLANE_MODE_ON;
    public static final java.lang.String AIRPLANE_MODE_RADIOS;
    public static final java.lang.String AIRPLANE_MODE_TOGGLEABLE_RADIOS;
    public static final java.lang.String ALWAYS_FINISH_ACTIVITIES;
    public static final java.lang.String ANIMATOR_DURATION_SCALE;
    public static final java.lang.String ASSISTED_GPS_ENABLED;
    public static final java.lang.String AUDIO_SAFE_VOLUME_STATE;
    public static final java.lang.String AUTO_TIME;
    public static final java.lang.String AUTO_TIME_ZONE;
    public static final java.lang.String BATTERY_DISCHARGE_DURATION_THRESHOLD;
    public static final java.lang.String BATTERY_DISCHARGE_THRESHOLD;
    public static final java.lang.String BLUETOOTH_A2DP_SINK_PRIORITY_PREFIX;
    public static final java.lang.String BLUETOOTH_HEADSET_PRIORITY_PREFIX;
    public static final java.lang.String BLUETOOTH_INPUT_DEVICE_PRIORITY_PREFIX;
    public static final java.lang.String BLUETOOTH_MAP_PRIORITY_PREFIX;
    public static final java.lang.String BLUETOOTH_ON;
    public static final java.lang.String BUGREPORT_IN_POWER_MENU;
    public static final java.lang.String CALL_AUTO_RETRY;
    public static final java.lang.String CAPTIVE_PORTAL_DETECTION_ENABLED;
    public static final java.lang.String CAPTIVE_PORTAL_SERVER;
    public static final java.lang.String CAR_DOCK_SOUND;
    public static final java.lang.String CAR_UNDOCK_SOUND;
    public static final java.lang.String CDMA_CELL_BROADCAST_SMS;
    public static final java.lang.String CDMA_ROAMING_MODE;
    public static final java.lang.String CDMA_SUBSCRIPTION_MODE;
    public static final java.lang.String CERT_PIN_UPDATE_CONTENT_URL;
    public static final java.lang.String CERT_PIN_UPDATE_METADATA_URL;
    public static final java.lang.String COMPATIBILITY_MODE;
    public static final java.lang.String CONNECTIVITY_CHANGE_DELAY;
    public static final java.lang.String CONNECTIVITY_SAMPLING_INTERVAL_IN_SECONDS;
    public static final android.net.Uri CONTENT_URI;
    public static final java.lang.String DATA_ACTIVITY_TIMEOUT_MOBILE;
    public static final java.lang.String DATA_ACTIVITY_TIMEOUT_WIFI;
    public static final java.lang.String DATA_ROAMING;
    public static final java.lang.String DATA_STALL_ALARM_AGGRESSIVE_DELAY_IN_MS;
    public static final java.lang.String DATA_STALL_ALARM_NON_AGGRESSIVE_DELAY_IN_MS;
    public static final java.lang.String DEBUG_APP;
    public static final java.lang.String DEFAULT_DNS_SERVER;
    public static final java.lang.String DEFAULT_INSTALL_LOCATION;
    public static final java.lang.String DESK_DOCK_SOUND;
    public static final java.lang.String DESK_UNDOCK_SOUND;
    public static final java.lang.String DEVELOPMENT_FORCE_RTL;
    public static final java.lang.String DEVELOPMENT_SETTINGS_ENABLED;
    public static final java.lang.String DEVICE_PROVISIONED;
    public static final java.lang.String DISK_FREE_CHANGE_REPORTING_THRESHOLD;
    public static final java.lang.String DISPLAY_DENSITY_FORCED;
    public static final java.lang.String DISPLAY_SIZE_FORCED;
    public static final java.lang.String DOCK_AUDIO_MEDIA_ENABLED;
    public static final java.lang.String DOCK_SOUNDS_ENABLED;
    public static final java.lang.String DOWNLOAD_MAX_BYTES_OVER_MOBILE;
    public static final java.lang.String DOWNLOAD_RECOMMENDED_MAX_BYTES_OVER_MOBILE;
    public static final java.lang.String DROPBOX_AGE_SECONDS;
    public static final java.lang.String DROPBOX_MAX_FILES;
    public static final java.lang.String DROPBOX_QUOTA_KB;
    public static final java.lang.String DROPBOX_QUOTA_PERCENT;
    public static final java.lang.String DROPBOX_RESERVE_PERCENT;
    public static final java.lang.String DROPBOX_TAG_PREFIX;
    public static final java.lang.String EMERGENCY_TONE;
    public static final java.lang.String ENABLE_ACCESSIBILITY_GLOBAL_GESTURE_ENABLED;
    public static final java.lang.String ERROR_LOGCAT_PREFIX;
    public static final java.lang.String FANCY_IME_ANIMATIONS;
    public static final java.lang.String GLOBAL_HTTP_PROXY_EXCLUSION_LIST;
    public static final java.lang.String GLOBAL_HTTP_PROXY_HOST;
    public static final java.lang.String GLOBAL_HTTP_PROXY_PAC;
    public static final java.lang.String GLOBAL_HTTP_PROXY_PORT;
    public static final java.lang.String GPRS_REGISTER_CHECK_PERIOD_MS;
    public static final java.lang.String HTTP_PROXY;
    public static final java.lang.String INET_CONDITION_DEBOUNCE_DOWN_DELAY;
    public static final java.lang.String INET_CONDITION_DEBOUNCE_UP_DELAY;
    public static final java.lang.String INSTALL_NON_MARKET_APPS;
    public static final java.lang.String INTENT_FIREWALL_UPDATE_CONTENT_URL;
    public static final java.lang.String INTENT_FIREWALL_UPDATE_METADATA_URL;
    public static final java.lang.String LOCK_SOUND;
    public static final java.lang.String LOW_BATTERY_SOUND;
    public static final java.lang.String LOW_BATTERY_SOUND_TIMEOUT;
    public static final java.lang.String MDC_INITIAL_MAX_RETRY;
    public static final java.lang.String MOBILE_DATA;
    public static final java.lang.String MODE_RINGER;
    public static final java.lang.String NETSTATS_DEV_BUCKET_DURATION;
    public static final java.lang.String NETSTATS_DEV_DELETE_AGE;
    public static final java.lang.String NETSTATS_DEV_PERSIST_BYTES;
    public static final java.lang.String NETSTATS_DEV_ROTATE_AGE;
    public static final java.lang.String NETSTATS_ENABLED;
    public static final java.lang.String NETSTATS_GLOBAL_ALERT_BYTES;
    public static final java.lang.String NETSTATS_POLL_INTERVAL;
    public static final java.lang.String NETSTATS_REPORT_XT_OVER_DEV;
    public static final java.lang.String NETSTATS_SAMPLE_ENABLED;
    public static final java.lang.String NETSTATS_TIME_CACHE_MAX_AGE;
    public static final java.lang.String NETSTATS_UID_BUCKET_DURATION;
    public static final java.lang.String NETSTATS_UID_DELETE_AGE;
    public static final java.lang.String NETSTATS_UID_PERSIST_BYTES;
    public static final java.lang.String NETSTATS_UID_ROTATE_AGE;
    public static final java.lang.String NETSTATS_UID_TAG_BUCKET_DURATION;
    public static final java.lang.String NETSTATS_UID_TAG_DELETE_AGE;
    public static final java.lang.String NETSTATS_UID_TAG_PERSIST_BYTES;
    public static final java.lang.String NETSTATS_UID_TAG_ROTATE_AGE;
    public static final java.lang.String NETWORK_PREFERENCE;
    public static final java.lang.String NITZ_UPDATE_DIFF;
    public static final java.lang.String NITZ_UPDATE_SPACING;
    public static final java.lang.String NSD_ON;
    public static final java.lang.String NTP_SERVER;
    public static final java.lang.String NTP_TIMEOUT;
    public static final java.lang.String OVERLAY_DISPLAY_DEVICES;
    public static final java.lang.String PACKAGE_VERIFIER_DEFAULT_RESPONSE;
    public static final java.lang.String PACKAGE_VERIFIER_ENABLE;
    public static final java.lang.String PACKAGE_VERIFIER_INCLUDE_ADB;
    public static final java.lang.String PACKAGE_VERIFIER_SETTING_VISIBLE;
    public static final java.lang.String PACKAGE_VERIFIER_TIMEOUT;
    public static final java.lang.String PAC_CHANGE_DELAY;
    public static final java.lang.String PDP_WATCHDOG_ERROR_POLL_COUNT;
    public static final java.lang.String PDP_WATCHDOG_ERROR_POLL_INTERVAL_MS;
    public static final java.lang.String PDP_WATCHDOG_LONG_POLL_INTERVAL_MS;
    public static final java.lang.String PDP_WATCHDOG_MAX_PDP_RESET_FAIL_COUNT;
    public static final java.lang.String PDP_WATCHDOG_POLL_INTERVAL_MS;
    public static final java.lang.String PDP_WATCHDOG_TRIGGER_PACKET_COUNT;
    public static final java.lang.String POWER_SOUNDS_ENABLED;
    public static final java.lang.String PREFERRED_NETWORK_MODE;
    public static final java.lang.String PROVISIONING_APN_ALARM_DELAY_IN_MS;
    public static final java.lang.String RADIO_BLUETOOTH;
    public static final java.lang.String RADIO_CELL;
    public static final java.lang.String RADIO_NFC;
    public static final java.lang.String RADIO_WIFI;
    public static final java.lang.String RADIO_WIMAX;
    public static final java.lang.String READ_EXTERNAL_STORAGE_ENFORCED_DEFAULT;
    public static final java.lang.String SAMPLING_PROFILER_MS;
    public static final java.lang.String SELINUX_STATUS;
    public static final java.lang.String SELINUX_UPDATE_CONTENT_URL;
    public static final java.lang.String SELINUX_UPDATE_METADATA_URL;
    public static final java.lang.String SEND_ACTION_APP_ERROR;
    public static final java.lang.String[] SETTINGS_TO_BACKUP;
    public static final java.lang.String SETUP_PREPAID_DATA_SERVICE_URL;
    public static final java.lang.String SETUP_PREPAID_DETECTION_REDIR_HOST;
    public static final java.lang.String SETUP_PREPAID_DETECTION_TARGET_URL;
    public static final java.lang.String SET_GLOBAL_HTTP_PROXY;
    public static final java.lang.String SET_INSTALL_LOCATION;
    public static final java.lang.String SHOW_PROCESSES;
    public static final java.lang.String SMS_OUTGOING_CHECK_INTERVAL_MS;
    public static final java.lang.String SMS_OUTGOING_CHECK_MAX_COUNT;
    public static final java.lang.String SMS_SHORT_CODES_UPDATE_CONTENT_URL;
    public static final java.lang.String SMS_SHORT_CODES_UPDATE_METADATA_URL;
    public static final java.lang.String SMS_SHORT_CODE_CONFIRMATION;
    public static final java.lang.String SMS_SHORT_CODE_RULE;
    public static final java.lang.String STAY_ON_WHILE_PLUGGED_IN;
    public static final java.lang.String SYNC_MAX_RETRY_DELAY_IN_SECONDS;
    public static final java.lang.String SYS_FREE_STORAGE_LOG_INTERVAL;
    public static final java.lang.String SYS_PROP_SETTING_VERSION;
    public static final java.lang.String SYS_STORAGE_FULL_THRESHOLD_BYTES;
    public static final java.lang.String SYS_STORAGE_THRESHOLD_MAX_BYTES;
    public static final java.lang.String SYS_STORAGE_THRESHOLD_PERCENTAGE;
    public static final java.lang.String TCP_DEFAULT_INIT_RWND;
    public static final java.lang.String TETHER_DUN_APN;
    public static final java.lang.String TETHER_DUN_REQUIRED;
    public static final java.lang.String TETHER_SUPPORTED;
    public static final java.lang.String TRANSITION_ANIMATION_SCALE;
    public static final java.lang.String TZINFO_UPDATE_CONTENT_URL;
    public static final java.lang.String TZINFO_UPDATE_METADATA_URL;
    public static final java.lang.String UNLOCK_SOUND;
    public static final java.lang.String USB_MASS_STORAGE_ENABLED;
    public static final java.lang.String USE_GOOGLE_MAIL;
    public static final java.lang.String WAIT_FOR_DEBUGGER;
    public static final java.lang.String WEB_AUTOFILL_QUERY_URL;
    public static final java.lang.String WIFI_COUNTRY_CODE;
    public static final java.lang.String WIFI_DISPLAY_CERTIFICATION_ON;
    public static final java.lang.String WIFI_DISPLAY_ON;
    public static final java.lang.String WIFI_DISPLAY_WPS_CONFIG;
    public static final java.lang.String WIFI_FRAMEWORK_SCAN_INTERVAL_MS;
    public static final java.lang.String WIFI_FREQUENCY_BAND;
    public static final java.lang.String WIFI_IDLE_MS;
    public static final java.lang.String WIFI_MAX_DHCP_RETRY_COUNT;
    public static final java.lang.String WIFI_MOBILE_DATA_TRANSITION_WAKELOCK_TIMEOUT_MS;
    public static final java.lang.String WIFI_NETWORKS_AVAILABLE_NOTIFICATION_ON;
    public static final java.lang.String WIFI_NETWORKS_AVAILABLE_REPEAT_DELAY;
    public static final java.lang.String WIFI_NUM_OPEN_NETWORKS_KEPT;
    public static final java.lang.String WIFI_ON;
    public static final java.lang.String WIFI_P2P_DEVICE_NAME;
    public static final java.lang.String WIFI_REENABLE_DELAY_MS;
    public static final java.lang.String WIFI_SAVED_STATE;
    public static final java.lang.String WIFI_SCAN_ALWAYS_AVAILABLE;
    public static final java.lang.String WIFI_SCAN_INTERVAL_WHEN_P2P_CONNECTED_MS;
    public static final java.lang.String WIFI_SLEEP_POLICY;
    public static final int WIFI_SLEEP_POLICY_DEFAULT;
    public static final int WIFI_SLEEP_POLICY_NEVER;
    public static final int WIFI_SLEEP_POLICY_NEVER_WHILE_PLUGGED;
    public static final java.lang.String WIFI_SUPPLICANT_SCAN_INTERVAL_MS;
    public static final java.lang.String WIFI_SUSPEND_OPTIMIZATIONS_ENABLED;
    public static final java.lang.String WIFI_WATCHDOG_ON;
    public static final java.lang.String WIFI_WATCHDOG_POOR_NETWORK_TEST_ENABLED;
    public static final java.lang.String WIMAX_NETWORKS_AVAILABLE_NOTIFICATION_ON;
    public static final java.lang.String WINDOW_ANIMATION_SCALE;
    public static final java.lang.String WIRELESS_CHARGING_STARTED_SOUND;
    public static final java.lang.String WTF_IS_FATAL;
    private static android.provider.Settings$NameValueCache sNameValueCache;

    static void <clinit>()
    {
        android.net.Uri $r0, $r3;
        java.lang.String[] $r1;
        android.provider.Settings$NameValueCache $r2;

        <android.provider.Settings$Global: java.lang.String WTF_IS_FATAL> = "wtf_is_fatal";

        <android.provider.Settings$Global: java.lang.String WIRELESS_CHARGING_STARTED_SOUND> = "wireless_charging_started_sound";

        <android.provider.Settings$Global: java.lang.String WINDOW_ANIMATION_SCALE> = "window_animation_scale";

        <android.provider.Settings$Global: java.lang.String WIMAX_NETWORKS_AVAILABLE_NOTIFICATION_ON> = "wimax_networks_available_notification_on";

        <android.provider.Settings$Global: java.lang.String WIFI_WATCHDOG_POOR_NETWORK_TEST_ENABLED> = "wifi_watchdog_poor_network_test_enabled";

        <android.provider.Settings$Global: java.lang.String WIFI_WATCHDOG_ON> = "wifi_watchdog_on";

        <android.provider.Settings$Global: java.lang.String WIFI_SUSPEND_OPTIMIZATIONS_ENABLED> = "wifi_suspend_optimizations_enabled";

        <android.provider.Settings$Global: java.lang.String WIFI_SUPPLICANT_SCAN_INTERVAL_MS> = "wifi_supplicant_scan_interval_ms";

        <android.provider.Settings$Global: int WIFI_SLEEP_POLICY_NEVER_WHILE_PLUGGED> = 1;

        <android.provider.Settings$Global: int WIFI_SLEEP_POLICY_NEVER> = 2;

        <android.provider.Settings$Global: int WIFI_SLEEP_POLICY_DEFAULT> = 0;

        <android.provider.Settings$Global: java.lang.String WIFI_SLEEP_POLICY> = "wifi_sleep_policy";

        <android.provider.Settings$Global: java.lang.String WIFI_SCAN_INTERVAL_WHEN_P2P_CONNECTED_MS> = "wifi_scan_interval_p2p_connected_ms";

        <android.provider.Settings$Global: java.lang.String WIFI_SCAN_ALWAYS_AVAILABLE> = "wifi_scan_always_enabled";

        <android.provider.Settings$Global: java.lang.String WIFI_SAVED_STATE> = "wifi_saved_state";

        <android.provider.Settings$Global: java.lang.String WIFI_REENABLE_DELAY_MS> = "wifi_reenable_delay";

        <android.provider.Settings$Global: java.lang.String WIFI_P2P_DEVICE_NAME> = "wifi_p2p_device_name";

        <android.provider.Settings$Global: java.lang.String WIFI_ON> = "wifi_on";

        <android.provider.Settings$Global: java.lang.String WIFI_NUM_OPEN_NETWORKS_KEPT> = "wifi_num_open_networks_kept";

        <android.provider.Settings$Global: java.lang.String WIFI_NETWORKS_AVAILABLE_REPEAT_DELAY> = "wifi_networks_available_repeat_delay";

        <android.provider.Settings$Global: java.lang.String WIFI_NETWORKS_AVAILABLE_NOTIFICATION_ON> = "wifi_networks_available_notification_on";

        <android.provider.Settings$Global: java.lang.String WIFI_MOBILE_DATA_TRANSITION_WAKELOCK_TIMEOUT_MS> = "wifi_mobile_data_transition_wakelock_timeout_ms";

        <android.provider.Settings$Global: java.lang.String WIFI_MAX_DHCP_RETRY_COUNT> = "wifi_max_dhcp_retry_count";

        <android.provider.Settings$Global: java.lang.String WIFI_IDLE_MS> = "wifi_idle_ms";

        <android.provider.Settings$Global: java.lang.String WIFI_FREQUENCY_BAND> = "wifi_frequency_band";

        <android.provider.Settings$Global: java.lang.String WIFI_FRAMEWORK_SCAN_INTERVAL_MS> = "wifi_framework_scan_interval_ms";

        <android.provider.Settings$Global: java.lang.String WIFI_DISPLAY_WPS_CONFIG> = "wifi_display_wps_config";

        <android.provider.Settings$Global: java.lang.String WIFI_DISPLAY_ON> = "wifi_display_on";

        <android.provider.Settings$Global: java.lang.String WIFI_DISPLAY_CERTIFICATION_ON> = "wifi_display_certification_on";

        <android.provider.Settings$Global: java.lang.String WIFI_COUNTRY_CODE> = "wifi_country_code";

        <android.provider.Settings$Global: java.lang.String WEB_AUTOFILL_QUERY_URL> = "web_autofill_query_url";

        <android.provider.Settings$Global: java.lang.String WAIT_FOR_DEBUGGER> = "wait_for_debugger";

        <android.provider.Settings$Global: java.lang.String USE_GOOGLE_MAIL> = "use_google_mail";

        <android.provider.Settings$Global: java.lang.String USB_MASS_STORAGE_ENABLED> = "usb_mass_storage_enabled";

        <android.provider.Settings$Global: java.lang.String UNLOCK_SOUND> = "unlock_sound";

        <android.provider.Settings$Global: java.lang.String TZINFO_UPDATE_METADATA_URL> = "tzinfo_metadata_url";

        <android.provider.Settings$Global: java.lang.String TZINFO_UPDATE_CONTENT_URL> = "tzinfo_content_url";

        <android.provider.Settings$Global: java.lang.String TRANSITION_ANIMATION_SCALE> = "transition_animation_scale";

        <android.provider.Settings$Global: java.lang.String TETHER_SUPPORTED> = "tether_supported";

        <android.provider.Settings$Global: java.lang.String TETHER_DUN_REQUIRED> = "tether_dun_required";

        <android.provider.Settings$Global: java.lang.String TETHER_DUN_APN> = "tether_dun_apn";

        <android.provider.Settings$Global: java.lang.String TCP_DEFAULT_INIT_RWND> = "tcp_default_init_rwnd";

        <android.provider.Settings$Global: java.lang.String SYS_STORAGE_THRESHOLD_PERCENTAGE> = "sys_storage_threshold_percentage";

        <android.provider.Settings$Global: java.lang.String SYS_STORAGE_THRESHOLD_MAX_BYTES> = "sys_storage_threshold_max_bytes";

        <android.provider.Settings$Global: java.lang.String SYS_STORAGE_FULL_THRESHOLD_BYTES> = "sys_storage_full_threshold_bytes";

        <android.provider.Settings$Global: java.lang.String SYS_PROP_SETTING_VERSION> = "sys.settings_global_version";

        <android.provider.Settings$Global: java.lang.String SYS_FREE_STORAGE_LOG_INTERVAL> = "sys_free_storage_log_interval";

        <android.provider.Settings$Global: java.lang.String SYNC_MAX_RETRY_DELAY_IN_SECONDS> = "sync_max_retry_delay_in_seconds";

        <android.provider.Settings$Global: java.lang.String STAY_ON_WHILE_PLUGGED_IN> = "stay_on_while_plugged_in";

        <android.provider.Settings$Global: java.lang.String SMS_SHORT_CODE_RULE> = "sms_short_code_rule";

        <android.provider.Settings$Global: java.lang.String SMS_SHORT_CODE_CONFIRMATION> = "sms_short_code_confirmation";

        <android.provider.Settings$Global: java.lang.String SMS_SHORT_CODES_UPDATE_METADATA_URL> = "sms_short_codes_metadata_url";

        <android.provider.Settings$Global: java.lang.String SMS_SHORT_CODES_UPDATE_CONTENT_URL> = "sms_short_codes_content_url";

        <android.provider.Settings$Global: java.lang.String SMS_OUTGOING_CHECK_MAX_COUNT> = "sms_outgoing_check_max_count";

        <android.provider.Settings$Global: java.lang.String SMS_OUTGOING_CHECK_INTERVAL_MS> = "sms_outgoing_check_interval_ms";

        <android.provider.Settings$Global: java.lang.String SHOW_PROCESSES> = "show_processes";

        <android.provider.Settings$Global: java.lang.String SET_INSTALL_LOCATION> = "set_install_location";

        <android.provider.Settings$Global: java.lang.String SET_GLOBAL_HTTP_PROXY> = "set_global_http_proxy";

        <android.provider.Settings$Global: java.lang.String SETUP_PREPAID_DETECTION_TARGET_URL> = "setup_prepaid_detection_target_url";

        <android.provider.Settings$Global: java.lang.String SETUP_PREPAID_DETECTION_REDIR_HOST> = "setup_prepaid_detection_redir_host";

        <android.provider.Settings$Global: java.lang.String SETUP_PREPAID_DATA_SERVICE_URL> = "setup_prepaid_data_service_url";

        <android.provider.Settings$Global: java.lang.String SEND_ACTION_APP_ERROR> = "send_action_app_error";

        <android.provider.Settings$Global: java.lang.String SELINUX_UPDATE_METADATA_URL> = "selinux_metadata_url";

        <android.provider.Settings$Global: java.lang.String SELINUX_UPDATE_CONTENT_URL> = "selinux_content_url";

        <android.provider.Settings$Global: java.lang.String SELINUX_STATUS> = "selinux_status";

        <android.provider.Settings$Global: java.lang.String SAMPLING_PROFILER_MS> = "sampling_profiler_ms";

        <android.provider.Settings$Global: java.lang.String READ_EXTERNAL_STORAGE_ENFORCED_DEFAULT> = "read_external_storage_enforced_default";

        <android.provider.Settings$Global: java.lang.String RADIO_WIMAX> = "wimax";

        <android.provider.Settings$Global: java.lang.String RADIO_WIFI> = "wifi";

        <android.provider.Settings$Global: java.lang.String RADIO_NFC> = "nfc";

        <android.provider.Settings$Global: java.lang.String RADIO_CELL> = "cell";

        <android.provider.Settings$Global: java.lang.String RADIO_BLUETOOTH> = "bluetooth";

        <android.provider.Settings$Global: java.lang.String PROVISIONING_APN_ALARM_DELAY_IN_MS> = "provisioning_apn_alarm_delay_in_ms";

        <android.provider.Settings$Global: java.lang.String PREFERRED_NETWORK_MODE> = "preferred_network_mode";

        <android.provider.Settings$Global: java.lang.String POWER_SOUNDS_ENABLED> = "power_sounds_enabled";

        <android.provider.Settings$Global: java.lang.String PDP_WATCHDOG_TRIGGER_PACKET_COUNT> = "pdp_watchdog_trigger_packet_count";

        <android.provider.Settings$Global: java.lang.String PDP_WATCHDOG_POLL_INTERVAL_MS> = "pdp_watchdog_poll_interval_ms";

        <android.provider.Settings$Global: java.lang.String PDP_WATCHDOG_MAX_PDP_RESET_FAIL_COUNT> = "pdp_watchdog_max_pdp_reset_fail_count";

        <android.provider.Settings$Global: java.lang.String PDP_WATCHDOG_LONG_POLL_INTERVAL_MS> = "pdp_watchdog_long_poll_interval_ms";

        <android.provider.Settings$Global: java.lang.String PDP_WATCHDOG_ERROR_POLL_INTERVAL_MS> = "pdp_watchdog_error_poll_interval_ms";

        <android.provider.Settings$Global: java.lang.String PDP_WATCHDOG_ERROR_POLL_COUNT> = "pdp_watchdog_error_poll_count";

        <android.provider.Settings$Global: java.lang.String PAC_CHANGE_DELAY> = "pac_change_delay";

        <android.provider.Settings$Global: java.lang.String PACKAGE_VERIFIER_TIMEOUT> = "verifier_timeout";

        <android.provider.Settings$Global: java.lang.String PACKAGE_VERIFIER_SETTING_VISIBLE> = "verifier_setting_visible";

        <android.provider.Settings$Global: java.lang.String PACKAGE_VERIFIER_INCLUDE_ADB> = "verifier_verify_adb_installs";

        <android.provider.Settings$Global: java.lang.String PACKAGE_VERIFIER_ENABLE> = "package_verifier_enable";

        <android.provider.Settings$Global: java.lang.String PACKAGE_VERIFIER_DEFAULT_RESPONSE> = "verifier_default_response";

        <android.provider.Settings$Global: java.lang.String OVERLAY_DISPLAY_DEVICES> = "overlay_display_devices";

        <android.provider.Settings$Global: java.lang.String NTP_TIMEOUT> = "ntp_timeout";

        <android.provider.Settings$Global: java.lang.String NTP_SERVER> = "ntp_server";

        <android.provider.Settings$Global: java.lang.String NSD_ON> = "nsd_on";

        <android.provider.Settings$Global: java.lang.String NITZ_UPDATE_SPACING> = "nitz_update_spacing";

        <android.provider.Settings$Global: java.lang.String NITZ_UPDATE_DIFF> = "nitz_update_diff";

        <android.provider.Settings$Global: java.lang.String NETWORK_PREFERENCE> = "network_preference";

        <android.provider.Settings$Global: java.lang.String NETSTATS_UID_TAG_ROTATE_AGE> = "netstats_uid_tag_rotate_age";

        <android.provider.Settings$Global: java.lang.String NETSTATS_UID_TAG_PERSIST_BYTES> = "netstats_uid_tag_persist_bytes";

        <android.provider.Settings$Global: java.lang.String NETSTATS_UID_TAG_DELETE_AGE> = "netstats_uid_tag_delete_age";

        <android.provider.Settings$Global: java.lang.String NETSTATS_UID_TAG_BUCKET_DURATION> = "netstats_uid_tag_bucket_duration";

        <android.provider.Settings$Global: java.lang.String NETSTATS_UID_ROTATE_AGE> = "netstats_uid_rotate_age";

        <android.provider.Settings$Global: java.lang.String NETSTATS_UID_PERSIST_BYTES> = "netstats_uid_persist_bytes";

        <android.provider.Settings$Global: java.lang.String NETSTATS_UID_DELETE_AGE> = "netstats_uid_delete_age";

        <android.provider.Settings$Global: java.lang.String NETSTATS_UID_BUCKET_DURATION> = "netstats_uid_bucket_duration";

        <android.provider.Settings$Global: java.lang.String NETSTATS_TIME_CACHE_MAX_AGE> = "netstats_time_cache_max_age";

        <android.provider.Settings$Global: java.lang.String NETSTATS_SAMPLE_ENABLED> = "netstats_sample_enabled";

        <android.provider.Settings$Global: java.lang.String NETSTATS_REPORT_XT_OVER_DEV> = "netstats_report_xt_over_dev";

        <android.provider.Settings$Global: java.lang.String NETSTATS_POLL_INTERVAL> = "netstats_poll_interval";

        <android.provider.Settings$Global: java.lang.String NETSTATS_GLOBAL_ALERT_BYTES> = "netstats_global_alert_bytes";

        <android.provider.Settings$Global: java.lang.String NETSTATS_ENABLED> = "netstats_enabled";

        <android.provider.Settings$Global: java.lang.String NETSTATS_DEV_ROTATE_AGE> = "netstats_dev_rotate_age";

        <android.provider.Settings$Global: java.lang.String NETSTATS_DEV_PERSIST_BYTES> = "netstats_dev_persist_bytes";

        <android.provider.Settings$Global: java.lang.String NETSTATS_DEV_DELETE_AGE> = "netstats_dev_delete_age";

        <android.provider.Settings$Global: java.lang.String NETSTATS_DEV_BUCKET_DURATION> = "netstats_dev_bucket_duration";

        <android.provider.Settings$Global: java.lang.String MODE_RINGER> = "mode_ringer";

        <android.provider.Settings$Global: java.lang.String MOBILE_DATA> = "mobile_data";

        <android.provider.Settings$Global: java.lang.String MDC_INITIAL_MAX_RETRY> = "mdc_initial_max_retry";

        <android.provider.Settings$Global: java.lang.String LOW_BATTERY_SOUND_TIMEOUT> = "low_battery_sound_timeout";

        <android.provider.Settings$Global: java.lang.String LOW_BATTERY_SOUND> = "low_battery_sound";

        <android.provider.Settings$Global: java.lang.String LOCK_SOUND> = "lock_sound";

        <android.provider.Settings$Global: java.lang.String INTENT_FIREWALL_UPDATE_METADATA_URL> = "intent_firewall_metadata_url";

        <android.provider.Settings$Global: java.lang.String INTENT_FIREWALL_UPDATE_CONTENT_URL> = "intent_firewall_content_url";

        <android.provider.Settings$Global: java.lang.String INSTALL_NON_MARKET_APPS> = "install_non_market_apps";

        <android.provider.Settings$Global: java.lang.String INET_CONDITION_DEBOUNCE_UP_DELAY> = "inet_condition_debounce_up_delay";

        <android.provider.Settings$Global: java.lang.String INET_CONDITION_DEBOUNCE_DOWN_DELAY> = "inet_condition_debounce_down_delay";

        <android.provider.Settings$Global: java.lang.String HTTP_PROXY> = "http_proxy";

        <android.provider.Settings$Global: java.lang.String GPRS_REGISTER_CHECK_PERIOD_MS> = "gprs_register_check_period_ms";

        <android.provider.Settings$Global: java.lang.String GLOBAL_HTTP_PROXY_PORT> = "global_http_proxy_port";

        <android.provider.Settings$Global: java.lang.String GLOBAL_HTTP_PROXY_PAC> = "global_proxy_pac_url";

        <android.provider.Settings$Global: java.lang.String GLOBAL_HTTP_PROXY_HOST> = "global_http_proxy_host";

        <android.provider.Settings$Global: java.lang.String GLOBAL_HTTP_PROXY_EXCLUSION_LIST> = "global_http_proxy_exclusion_list";

        <android.provider.Settings$Global: java.lang.String FANCY_IME_ANIMATIONS> = "fancy_ime_animations";

        <android.provider.Settings$Global: java.lang.String ERROR_LOGCAT_PREFIX> = "logcat_for_";

        <android.provider.Settings$Global: java.lang.String ENABLE_ACCESSIBILITY_GLOBAL_GESTURE_ENABLED> = "enable_accessibility_global_gesture_enabled";

        <android.provider.Settings$Global: java.lang.String EMERGENCY_TONE> = "emergency_tone";

        <android.provider.Settings$Global: java.lang.String DROPBOX_TAG_PREFIX> = "dropbox:";

        <android.provider.Settings$Global: java.lang.String DROPBOX_RESERVE_PERCENT> = "dropbox_reserve_percent";

        <android.provider.Settings$Global: java.lang.String DROPBOX_QUOTA_PERCENT> = "dropbox_quota_percent";

        <android.provider.Settings$Global: java.lang.String DROPBOX_QUOTA_KB> = "dropbox_quota_kb";

        <android.provider.Settings$Global: java.lang.String DROPBOX_MAX_FILES> = "dropbox_max_files";

        <android.provider.Settings$Global: java.lang.String DROPBOX_AGE_SECONDS> = "dropbox_age_seconds";

        <android.provider.Settings$Global: java.lang.String DOWNLOAD_RECOMMENDED_MAX_BYTES_OVER_MOBILE> = "download_manager_recommended_max_bytes_over_mobile";

        <android.provider.Settings$Global: java.lang.String DOWNLOAD_MAX_BYTES_OVER_MOBILE> = "download_manager_max_bytes_over_mobile";

        <android.provider.Settings$Global: java.lang.String DOCK_SOUNDS_ENABLED> = "dock_sounds_enabled";

        <android.provider.Settings$Global: java.lang.String DOCK_AUDIO_MEDIA_ENABLED> = "dock_audio_media_enabled";

        <android.provider.Settings$Global: java.lang.String DISPLAY_SIZE_FORCED> = "display_size_forced";

        <android.provider.Settings$Global: java.lang.String DISPLAY_DENSITY_FORCED> = "display_density_forced";

        <android.provider.Settings$Global: java.lang.String DISK_FREE_CHANGE_REPORTING_THRESHOLD> = "disk_free_change_reporting_threshold";

        <android.provider.Settings$Global: java.lang.String DEVICE_PROVISIONED> = "device_provisioned";

        <android.provider.Settings$Global: java.lang.String DEVELOPMENT_SETTINGS_ENABLED> = "development_settings_enabled";

        <android.provider.Settings$Global: java.lang.String DEVELOPMENT_FORCE_RTL> = "debug.force_rtl";

        <android.provider.Settings$Global: java.lang.String DESK_UNDOCK_SOUND> = "desk_undock_sound";

        <android.provider.Settings$Global: java.lang.String DESK_DOCK_SOUND> = "desk_dock_sound";

        <android.provider.Settings$Global: java.lang.String DEFAULT_INSTALL_LOCATION> = "default_install_location";

        <android.provider.Settings$Global: java.lang.String DEFAULT_DNS_SERVER> = "default_dns_server";

        <android.provider.Settings$Global: java.lang.String DEBUG_APP> = "debug_app";

        <android.provider.Settings$Global: java.lang.String DATA_STALL_ALARM_NON_AGGRESSIVE_DELAY_IN_MS> = "data_stall_alarm_non_aggressive_delay_in_ms";

        <android.provider.Settings$Global: java.lang.String DATA_STALL_ALARM_AGGRESSIVE_DELAY_IN_MS> = "data_stall_alarm_aggressive_delay_in_ms";

        <android.provider.Settings$Global: java.lang.String DATA_ROAMING> = "data_roaming";

        <android.provider.Settings$Global: java.lang.String DATA_ACTIVITY_TIMEOUT_WIFI> = "data_activity_timeout_wifi";

        <android.provider.Settings$Global: java.lang.String DATA_ACTIVITY_TIMEOUT_MOBILE> = "data_activity_timeout_mobile";

        <android.provider.Settings$Global: java.lang.String CONNECTIVITY_SAMPLING_INTERVAL_IN_SECONDS> = "connectivity_sampling_interval_in_seconds";

        <android.provider.Settings$Global: java.lang.String CONNECTIVITY_CHANGE_DELAY> = "connectivity_change_delay";

        <android.provider.Settings$Global: java.lang.String COMPATIBILITY_MODE> = "compatibility_mode";

        <android.provider.Settings$Global: java.lang.String CERT_PIN_UPDATE_METADATA_URL> = "cert_pin_metadata_url";

        <android.provider.Settings$Global: java.lang.String CERT_PIN_UPDATE_CONTENT_URL> = "cert_pin_content_url";

        <android.provider.Settings$Global: java.lang.String CDMA_SUBSCRIPTION_MODE> = "subscription_mode";

        <android.provider.Settings$Global: java.lang.String CDMA_ROAMING_MODE> = "roaming_settings";

        <android.provider.Settings$Global: java.lang.String CDMA_CELL_BROADCAST_SMS> = "cdma_cell_broadcast_sms";

        <android.provider.Settings$Global: java.lang.String CAR_UNDOCK_SOUND> = "car_undock_sound";

        <android.provider.Settings$Global: java.lang.String CAR_DOCK_SOUND> = "car_dock_sound";

        <android.provider.Settings$Global: java.lang.String CAPTIVE_PORTAL_SERVER> = "captive_portal_server";

        <android.provider.Settings$Global: java.lang.String CAPTIVE_PORTAL_DETECTION_ENABLED> = "captive_portal_detection_enabled";

        <android.provider.Settings$Global: java.lang.String CALL_AUTO_RETRY> = "call_auto_retry";

        <android.provider.Settings$Global: java.lang.String BUGREPORT_IN_POWER_MENU> = "bugreport_in_power_menu";

        <android.provider.Settings$Global: java.lang.String BLUETOOTH_ON> = "bluetooth_on";

        <android.provider.Settings$Global: java.lang.String BLUETOOTH_MAP_PRIORITY_PREFIX> = "bluetooth_map_priority_";

        <android.provider.Settings$Global: java.lang.String BLUETOOTH_INPUT_DEVICE_PRIORITY_PREFIX> = "bluetooth_input_device_priority_";

        <android.provider.Settings$Global: java.lang.String BLUETOOTH_HEADSET_PRIORITY_PREFIX> = "bluetooth_headset_priority_";

        <android.provider.Settings$Global: java.lang.String BLUETOOTH_A2DP_SINK_PRIORITY_PREFIX> = "bluetooth_a2dp_sink_priority_";

        <android.provider.Settings$Global: java.lang.String BATTERY_DISCHARGE_THRESHOLD> = "battery_discharge_threshold";

        <android.provider.Settings$Global: java.lang.String BATTERY_DISCHARGE_DURATION_THRESHOLD> = "battery_discharge_duration_threshold";

        <android.provider.Settings$Global: java.lang.String AUTO_TIME_ZONE> = "auto_time_zone";

        <android.provider.Settings$Global: java.lang.String AUTO_TIME> = "auto_time";

        <android.provider.Settings$Global: java.lang.String AUDIO_SAFE_VOLUME_STATE> = "audio_safe_volume_state";

        <android.provider.Settings$Global: java.lang.String ASSISTED_GPS_ENABLED> = "assisted_gps_enabled";

        <android.provider.Settings$Global: java.lang.String ANIMATOR_DURATION_SCALE> = "animator_duration_scale";

        <android.provider.Settings$Global: java.lang.String ALWAYS_FINISH_ACTIVITIES> = "always_finish_activities";

        <android.provider.Settings$Global: java.lang.String AIRPLANE_MODE_TOGGLEABLE_RADIOS> = "airplane_mode_toggleable_radios";

        <android.provider.Settings$Global: java.lang.String AIRPLANE_MODE_RADIOS> = "airplane_mode_radios";

        <android.provider.Settings$Global: java.lang.String AIRPLANE_MODE_ON> = "airplane_mode_on";

        <android.provider.Settings$Global: java.lang.String ADB_ENABLED> = "adb_enabled";

        $r0 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://settings/global");

        <android.provider.Settings$Global: android.net.Uri CONTENT_URI> = $r0;

        $r1 = newarray (java.lang.String)[15];

        $r1[0] = "bugreport_in_power_menu";

        $r1[1] = "stay_on_while_plugged_in";

        $r1[2] = "auto_time";

        $r1[3] = "auto_time_zone";

        $r1[4] = "power_sounds_enabled";

        $r1[5] = "dock_sounds_enabled";

        $r1[6] = "usb_mass_storage_enabled";

        $r1[7] = "enable_accessibility_global_gesture_enabled";

        $r1[8] = "wifi_networks_available_notification_on";

        $r1[9] = "wifi_networks_available_repeat_delay";

        $r1[10] = "wifi_watchdog_poor_network_test_enabled";

        $r1[11] = "wifi_num_open_networks_kept";

        $r1[12] = "emergency_tone";

        $r1[13] = "call_auto_retry";

        $r1[14] = "dock_audio_media_enabled";

        <android.provider.Settings$Global: java.lang.String[] SETTINGS_TO_BACKUP> = $r1;

        $r2 = new android.provider.Settings$NameValueCache;

        $r3 = <android.provider.Settings$Global: android.net.Uri CONTENT_URI>;

        specialinvoke $r2.<android.provider.Settings$NameValueCache: void <init>(java.lang.String,android.net.Uri,java.lang.String,java.lang.String)>("sys.settings_global_version", $r3, "GET_global", "PUT_global");

        <android.provider.Settings$Global: android.provider.Settings$NameValueCache sNameValueCache> = $r2;

        return;
    }

    public void <init>()
    {
        android.provider.Settings$Global r0;

        r0 := @this: android.provider.Settings$Global;

        specialinvoke r0.<android.provider.Settings$NameValueTable: void <init>()>();

        return;
    }

    public static final java.lang.String getBluetoothA2dpSinkPriorityKey(java.lang.String)
    {
        java.lang.String r0, $r4, $r6;
        java.lang.StringBuilder $r1, $r2, $r5;
        java.util.Locale $r3;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bluetooth_a2dp_sink_priority_");

        $r3 = <java.util.Locale: java.util.Locale ROOT>;

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r3);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public static final java.lang.String getBluetoothHeadsetPriorityKey(java.lang.String)
    {
        java.lang.String r0, $r4, $r6;
        java.lang.StringBuilder $r1, $r2, $r5;
        java.util.Locale $r3;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bluetooth_headset_priority_");

        $r3 = <java.util.Locale: java.util.Locale ROOT>;

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r3);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public static final java.lang.String getBluetoothInputDevicePriorityKey(java.lang.String)
    {
        java.lang.String r0, $r4, $r6;
        java.lang.StringBuilder $r1, $r2, $r5;
        java.util.Locale $r3;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bluetooth_input_device_priority_");

        $r3 = <java.util.Locale: java.util.Locale ROOT>;

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r3);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public static final java.lang.String getBluetoothMapPriorityKey(java.lang.String)
    {
        java.lang.String r0, $r4, $r6;
        java.lang.StringBuilder $r1, $r2, $r5;
        java.util.Locale $r3;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bluetooth_map_priority_");

        $r3 = <java.util.Locale: java.util.Locale ROOT>;

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r3);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public static float getFloat(android.content.ContentResolver, java.lang.String) throws android.provider.Settings$SettingNotFoundException
    {
        android.content.ContentResolver r0;
        java.lang.String r1, r2;
        float f0;
        android.provider.Settings$SettingNotFoundException $r4, $r6;
        java.lang.NumberFormatException $r5;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>(r0, r1);

        if r2 != null goto label1;

        $r4 = new android.provider.Settings$SettingNotFoundException;

        specialinvoke $r4.<android.provider.Settings$SettingNotFoundException: void <init>(java.lang.String)>(r1);

        throw $r4;

     label1:
        f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r2);

     label2:
        return f0;

     label3:
        $r5 := @caughtexception;

        $r6 = new android.provider.Settings$SettingNotFoundException;

        specialinvoke $r6.<android.provider.Settings$SettingNotFoundException: void <init>(java.lang.String)>(r1);

        throw $r6;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static float getFloat(android.content.ContentResolver, java.lang.String, float)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, r2;
        float f0, f1;
        java.lang.NumberFormatException $r4;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        f0 := @parameter2: float;

        r2 = staticinvoke <android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>(r0, r1);

        if r2 == null goto label3;

     label1:
        f1 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r2);

     label2:
        f0 = f1;

     label3:
        return f0;

     label4:
        $r4 := @caughtexception;

        return f0;

        catch java.lang.NumberFormatException from label1 to label2 with label4;
    }

    public static int getInt(android.content.ContentResolver, java.lang.String) throws android.provider.Settings$SettingNotFoundException
    {
        android.content.ContentResolver r0;
        java.lang.String r1, r2;
        int i0;
        java.lang.NumberFormatException $r4;
        android.provider.Settings$SettingNotFoundException $r5;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>(r0, r1);

     label1:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

     label2:
        return i0;

     label3:
        $r4 := @caughtexception;

        $r5 = new android.provider.Settings$SettingNotFoundException;

        specialinvoke $r5.<android.provider.Settings$SettingNotFoundException: void <init>(java.lang.String)>(r1);

        throw $r5;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static int getInt(android.content.ContentResolver, java.lang.String, int)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, r2;
        int i0, i1;
        java.lang.NumberFormatException $r4;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 = staticinvoke <android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>(r0, r1);

        if r2 == null goto label3;

     label1:
        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

     label2:
        i0 = i1;

     label3:
        return i0;

     label4:
        $r4 := @caughtexception;

        return i0;

        catch java.lang.NumberFormatException from label1 to label2 with label4;
    }

    public static long getLong(android.content.ContentResolver, java.lang.String) throws android.provider.Settings$SettingNotFoundException
    {
        android.content.ContentResolver r0;
        java.lang.String r1, r2;
        long l0;
        java.lang.NumberFormatException $r4;
        android.provider.Settings$SettingNotFoundException $r5;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>(r0, r1);

     label1:
        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r2);

     label2:
        return l0;

     label3:
        $r4 := @caughtexception;

        $r5 = new android.provider.Settings$SettingNotFoundException;

        specialinvoke $r5.<android.provider.Settings$SettingNotFoundException: void <init>(java.lang.String)>(r1);

        throw $r5;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static long getLong(android.content.ContentResolver, java.lang.String, long)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, r2;
        long l0, l1;
        java.lang.NumberFormatException $r4;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        r2 = staticinvoke <android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>(r0, r1);

        if r2 == null goto label3;

     label1:
        l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r2);

     label2:
        return l1;

     label3:
        return l0;

     label4:
        $r4 := @caughtexception;

        return l0;

        catch java.lang.NumberFormatException from label1 to label2 with label4;
    }

    public static java.lang.String getString(android.content.ContentResolver, java.lang.String)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, $r2;
        int $i0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $r2 = staticinvoke <android.provider.Settings$Global: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>(r0, r1, $i0);

        return $r2;
    }

    public static java.lang.String getStringForUser(android.content.ContentResolver, java.lang.String, int)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, $r3;
        int i0;
        android.provider.Settings$NameValueCache $r2;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = <android.provider.Settings$Global: android.provider.Settings$NameValueCache sNameValueCache>;

        $r3 = virtualinvoke $r2.<android.provider.Settings$NameValueCache: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>(r0, r1, i0);

        return $r3;
    }

    public static android.net.Uri getUriFor(java.lang.String)
    {
        java.lang.String r0;
        android.net.Uri $r1, $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = <android.provider.Settings$Global: android.net.Uri CONTENT_URI>;

        $r2 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(android.net.Uri,java.lang.String)>($r1, r0);

        return $r2;
    }

    public static boolean putFloat(android.content.ContentResolver, java.lang.String, float)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, $r2;
        float f0;
        boolean $z0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        f0 := @parameter2: float;

        $r2 = staticinvoke <java.lang.Float: java.lang.String toString(float)>(f0);

        $z0 = staticinvoke <android.provider.Settings$Global: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>(r0, r1, $r2);

        return $z0;
    }

    public static boolean putInt(android.content.ContentResolver, java.lang.String, int)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, $r2;
        int i0;
        boolean $z0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $z0 = staticinvoke <android.provider.Settings$Global: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>(r0, r1, $r2);

        return $z0;
    }

    public static boolean putLong(android.content.ContentResolver, java.lang.String, long)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, $r2;
        long l0;
        boolean $z0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        $z0 = staticinvoke <android.provider.Settings$Global: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>(r0, r1, $r2);

        return $z0;
    }

    public static boolean putString(android.content.ContentResolver, java.lang.String, java.lang.String)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, r2;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $z0 = staticinvoke <android.provider.Settings$Global: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int)>(r0, r1, r2, $i0);

        return $z0;
    }

    public static boolean putStringForUser(android.content.ContentResolver, java.lang.String, java.lang.String, int)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, r2;
        int i0;
        android.provider.Settings$NameValueCache $r3;
        boolean $z0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        $r3 = <android.provider.Settings$Global: android.provider.Settings$NameValueCache sNameValueCache>;

        $z0 = virtualinvoke $r3.<android.provider.Settings$NameValueCache: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int)>(r0, r1, r2, i0);

        return $z0;
    }
}
