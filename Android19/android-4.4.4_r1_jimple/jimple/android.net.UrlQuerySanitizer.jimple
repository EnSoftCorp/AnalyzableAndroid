public class android.net.UrlQuerySanitizer extends java.lang.Object
{
    private static final android.net.UrlQuerySanitizer$ValueSanitizer sAllButNulAndAngleBracketsLegal;
    private static final android.net.UrlQuerySanitizer$ValueSanitizer sAllButNulLegal;
    private static final android.net.UrlQuerySanitizer$ValueSanitizer sAllButWhitespaceLegal;
    private static final android.net.UrlQuerySanitizer$ValueSanitizer sAllIllegal;
    private static final android.net.UrlQuerySanitizer$ValueSanitizer sAmpAndSpaceLegal;
    private static final android.net.UrlQuerySanitizer$ValueSanitizer sAmpLegal;
    private static final android.net.UrlQuerySanitizer$ValueSanitizer sSpaceLegal;
    private static final android.net.UrlQuerySanitizer$ValueSanitizer sURLLegal;
    private static final android.net.UrlQuerySanitizer$ValueSanitizer sUrlAndSpaceLegal;
    private boolean mAllowUnregisteredParamaters;
    private final java.util.HashMap mEntries;
    private final java.util.ArrayList mEntriesList;
    private boolean mPreferFirstRepeatedParameter;
    private final java.util.HashMap mSanitizers;
    private android.net.UrlQuerySanitizer$ValueSanitizer mUnregisteredParameterValueSanitizer;

    static void <clinit>()
    {
        android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        $r0 = new android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer;

        specialinvoke $r0.<android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: void <init>(int)>(0);

        <android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer sAllIllegal> = $r0;

        $r1 = new android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer;

        specialinvoke $r1.<android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: void <init>(int)>(1535);

        <android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer sAllButNulLegal> = $r1;

        $r2 = new android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer;

        specialinvoke $r2.<android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: void <init>(int)>(1532);

        <android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer sAllButWhitespaceLegal> = $r2;

        $r3 = new android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer;

        specialinvoke $r3.<android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: void <init>(int)>(404);

        <android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer sURLLegal> = $r3;

        $r4 = new android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer;

        specialinvoke $r4.<android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: void <init>(int)>(405);

        <android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer sUrlAndSpaceLegal> = $r4;

        $r5 = new android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer;

        specialinvoke $r5.<android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: void <init>(int)>(128);

        <android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer sAmpLegal> = $r5;

        $r6 = new android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer;

        specialinvoke $r6.<android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: void <init>(int)>(129);

        <android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer sAmpAndSpaceLegal> = $r6;

        $r7 = new android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer;

        specialinvoke $r7.<android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: void <init>(int)>(1);

        <android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer sSpaceLegal> = $r7;

        $r8 = new android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer;

        specialinvoke $r8.<android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer: void <init>(int)>(1439);

        <android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer sAllButNulAndAngleBracketsLegal> = $r8;

        return;
    }

    public void <init>()
    {
        android.net.UrlQuerySanitizer r0;
        java.util.HashMap $r1, $r2;
        java.util.ArrayList $r3;
        android.net.UrlQuerySanitizer$ValueSanitizer $r4;

        r0 := @this: android.net.UrlQuerySanitizer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<android.net.UrlQuerySanitizer: java.util.HashMap mSanitizers> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<android.net.UrlQuerySanitizer: java.util.HashMap mEntries> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.net.UrlQuerySanitizer: java.util.ArrayList mEntriesList> = $r3;

        $r4 = staticinvoke <android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer getAllIllegal()>();

        r0.<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer mUnregisteredParameterValueSanitizer> = $r4;

        return;
    }

    public void <init>(java.lang.String)
    {
        android.net.UrlQuerySanitizer r0;
        java.lang.String r1;
        java.util.HashMap $r2, $r3;
        java.util.ArrayList $r4;
        android.net.UrlQuerySanitizer$ValueSanitizer $r5;

        r0 := @this: android.net.UrlQuerySanitizer;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<android.net.UrlQuerySanitizer: java.util.HashMap mSanitizers> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<android.net.UrlQuerySanitizer: java.util.HashMap mEntries> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.net.UrlQuerySanitizer: java.util.ArrayList mEntriesList> = $r4;

        $r5 = staticinvoke <android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer getAllIllegal()>();

        r0.<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer mUnregisteredParameterValueSanitizer> = $r5;

        virtualinvoke r0.<android.net.UrlQuerySanitizer: void setAllowUnregisteredParamaters(boolean)>(1);

        virtualinvoke r0.<android.net.UrlQuerySanitizer: void parseUrl(java.lang.String)>(r1);

        return;
    }

    public static final android.net.UrlQuerySanitizer$ValueSanitizer getAllButNulAndAngleBracketsLegal()
    {
        android.net.UrlQuerySanitizer$ValueSanitizer $r0;

        $r0 = <android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer sAllButNulAndAngleBracketsLegal>;

        return $r0;
    }

    public static final android.net.UrlQuerySanitizer$ValueSanitizer getAllButNulLegal()
    {
        android.net.UrlQuerySanitizer$ValueSanitizer $r0;

        $r0 = <android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer sAllButNulLegal>;

        return $r0;
    }

    public static final android.net.UrlQuerySanitizer$ValueSanitizer getAllButWhitespaceLegal()
    {
        android.net.UrlQuerySanitizer$ValueSanitizer $r0;

        $r0 = <android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer sAllButWhitespaceLegal>;

        return $r0;
    }

    public static final android.net.UrlQuerySanitizer$ValueSanitizer getAllIllegal()
    {
        android.net.UrlQuerySanitizer$ValueSanitizer $r0;

        $r0 = <android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer sAllIllegal>;

        return $r0;
    }

    public static final android.net.UrlQuerySanitizer$ValueSanitizer getAmpAndSpaceLegal()
    {
        android.net.UrlQuerySanitizer$ValueSanitizer $r0;

        $r0 = <android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer sAmpAndSpaceLegal>;

        return $r0;
    }

    public static final android.net.UrlQuerySanitizer$ValueSanitizer getAmpLegal()
    {
        android.net.UrlQuerySanitizer$ValueSanitizer $r0;

        $r0 = <android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer sAmpLegal>;

        return $r0;
    }

    public static final android.net.UrlQuerySanitizer$ValueSanitizer getSpaceLegal()
    {
        android.net.UrlQuerySanitizer$ValueSanitizer $r0;

        $r0 = <android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer sSpaceLegal>;

        return $r0;
    }

    public static final android.net.UrlQuerySanitizer$ValueSanitizer getUrlAndSpaceLegal()
    {
        android.net.UrlQuerySanitizer$ValueSanitizer $r0;

        $r0 = <android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer sUrlAndSpaceLegal>;

        return $r0;
    }

    public static final android.net.UrlQuerySanitizer$ValueSanitizer getUrlLegal()
    {
        android.net.UrlQuerySanitizer$ValueSanitizer $r0;

        $r0 = <android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer sURLLegal>;

        return $r0;
    }

    protected void addSanitizedEntry(java.lang.String, java.lang.String)
    {
        android.net.UrlQuerySanitizer r0;
        java.lang.String r1, r2;
        android.net.UrlQuerySanitizer$ParameterValuePair $r3;
        java.util.ArrayList $r4;
        boolean $z1, $z2;
        java.util.HashMap $r5, $r7;

        r0 := @this: android.net.UrlQuerySanitizer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r4 = r0.<android.net.UrlQuerySanitizer: java.util.ArrayList mEntriesList>;

        $r3 = new android.net.UrlQuerySanitizer$ParameterValuePair;

        specialinvoke $r3.<android.net.UrlQuerySanitizer$ParameterValuePair: void <init>(android.net.UrlQuerySanitizer,java.lang.String,java.lang.String)>(r0, r1, r2);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $z1 = r0.<android.net.UrlQuerySanitizer: boolean mPreferFirstRepeatedParameter>;

        if $z1 == 0 goto label1;

        $r7 = r0.<android.net.UrlQuerySanitizer: java.util.HashMap mEntries>;

        $z2 = virtualinvoke $r7.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z2 == 0 goto label1;

        return;

     label1:
        $r5 = r0.<android.net.UrlQuerySanitizer: java.util.HashMap mEntries>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    protected void clear()
    {
        android.net.UrlQuerySanitizer r0;
        java.util.HashMap $r1;
        java.util.ArrayList $r2;

        r0 := @this: android.net.UrlQuerySanitizer;

        $r1 = r0.<android.net.UrlQuerySanitizer: java.util.HashMap mEntries>;

        virtualinvoke $r1.<java.util.HashMap: void clear()>();

        $r2 = r0.<android.net.UrlQuerySanitizer: java.util.ArrayList mEntriesList>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

        return;
    }

    protected int decodeHexDigit(char)
    {
        android.net.UrlQuerySanitizer r0;
        char c0;
        int $i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.net.UrlQuerySanitizer;

        c0 := @parameter0: char;

        if c0 < 48 goto label1;

        if c0 > 57 goto label1;

        $i5 = c0 - 48;

        return $i5;

     label1:
        if c0 < 65 goto label2;

        if c0 > 70 goto label2;

        $i3 = c0 - 65;

        $i4 = 10 + $i3;

        return $i4;

     label2:
        if c0 < 97 goto label3;

        if c0 > 102 goto label3;

        $i1 = c0 - 97;

        $i2 = 10 + $i1;

        return $i2;

     label3:
        return -1;
    }

    public boolean getAllowUnregisteredParamaters()
    {
        android.net.UrlQuerySanitizer r0;
        boolean $z0;

        r0 := @this: android.net.UrlQuerySanitizer;

        $z0 = r0.<android.net.UrlQuerySanitizer: boolean mAllowUnregisteredParamaters>;

        return $z0;
    }

    public android.net.UrlQuerySanitizer$ValueSanitizer getEffectiveValueSanitizer(java.lang.String)
    {
        android.net.UrlQuerySanitizer r0;
        java.lang.String r1;
        android.net.UrlQuerySanitizer$ValueSanitizer r2;
        boolean $z0;

        r0 := @this: android.net.UrlQuerySanitizer;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer getValueSanitizer(java.lang.String)>(r1);

        if r2 != null goto label1;

        $z0 = r0.<android.net.UrlQuerySanitizer: boolean mAllowUnregisteredParamaters>;

        if $z0 == 0 goto label1;

        r2 = virtualinvoke r0.<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer getUnregisteredParameterValueSanitizer()>();

     label1:
        return r2;
    }

    public java.util.List getParameterList()
    {
        android.net.UrlQuerySanitizer r0;
        java.util.ArrayList $r1;

        r0 := @this: android.net.UrlQuerySanitizer;

        $r1 = r0.<android.net.UrlQuerySanitizer: java.util.ArrayList mEntriesList>;

        return $r1;
    }

    public java.util.Set getParameterSet()
    {
        android.net.UrlQuerySanitizer r0;
        java.util.HashMap $r1;
        java.util.Set $r2;

        r0 := @this: android.net.UrlQuerySanitizer;

        $r1 = r0.<android.net.UrlQuerySanitizer: java.util.HashMap mEntries>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.util.Set keySet()>();

        return $r2;
    }

    public boolean getPreferFirstRepeatedParameter()
    {
        android.net.UrlQuerySanitizer r0;
        boolean $z0;

        r0 := @this: android.net.UrlQuerySanitizer;

        $z0 = r0.<android.net.UrlQuerySanitizer: boolean mPreferFirstRepeatedParameter>;

        return $z0;
    }

    public android.net.UrlQuerySanitizer$ValueSanitizer getUnregisteredParameterValueSanitizer()
    {
        android.net.UrlQuerySanitizer r0;
        android.net.UrlQuerySanitizer$ValueSanitizer $r1;

        r0 := @this: android.net.UrlQuerySanitizer;

        $r1 = r0.<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer mUnregisteredParameterValueSanitizer>;

        return $r1;
    }

    public java.lang.String getValue(java.lang.String)
    {
        android.net.UrlQuerySanitizer r0;
        java.lang.String r1, $r4;
        java.util.HashMap $r2;
        java.lang.Object $r3;

        r0 := @this: android.net.UrlQuerySanitizer;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.net.UrlQuerySanitizer: java.util.HashMap mEntries>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public android.net.UrlQuerySanitizer$ValueSanitizer getValueSanitizer(java.lang.String)
    {
        android.net.UrlQuerySanitizer r0;
        java.lang.String r1;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        android.net.UrlQuerySanitizer$ValueSanitizer $r4;

        r0 := @this: android.net.UrlQuerySanitizer;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.net.UrlQuerySanitizer: java.util.HashMap mSanitizers>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (android.net.UrlQuerySanitizer$ValueSanitizer) $r3;

        return $r4;
    }

    public boolean hasParameter(java.lang.String)
    {
        android.net.UrlQuerySanitizer r0;
        java.lang.String r1;
        java.util.HashMap $r2;
        boolean $z0;

        r0 := @this: android.net.UrlQuerySanitizer;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.net.UrlQuerySanitizer: java.util.HashMap mEntries>;

        $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    protected boolean isHexDigit(char)
    {
        android.net.UrlQuerySanitizer r0;
        char c0;
        int $i1;

        r0 := @this: android.net.UrlQuerySanitizer;

        c0 := @parameter0: char;

        $i1 = virtualinvoke r0.<android.net.UrlQuerySanitizer: int decodeHexDigit(char)>(c0);

        if $i1 < 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected void parseEntry(java.lang.String, java.lang.String)
    {
        android.net.UrlQuerySanitizer r0;
        java.lang.String r1, r2, r3, $r5, $r6;
        android.net.UrlQuerySanitizer$ValueSanitizer r4;

        r0 := @this: android.net.UrlQuerySanitizer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 = virtualinvoke r0.<android.net.UrlQuerySanitizer: java.lang.String unescape(java.lang.String)>(r1);

        r4 = virtualinvoke r0.<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer getEffectiveValueSanitizer(java.lang.String)>(r3);

        if r4 != null goto label1;

        return;

     label1:
        $r5 = virtualinvoke r0.<android.net.UrlQuerySanitizer: java.lang.String unescape(java.lang.String)>(r2);

        $r6 = interfaceinvoke r4.<android.net.UrlQuerySanitizer$ValueSanitizer: java.lang.String sanitize(java.lang.String)>($r5);

        virtualinvoke r0.<android.net.UrlQuerySanitizer: void addSanitizedEntry(java.lang.String,java.lang.String)>(r3, $r6);

        return;
    }

    public void parseQuery(java.lang.String)
    {
        android.net.UrlQuerySanitizer r0;
        java.lang.String r1, r3, $r5, $r6;
        java.util.StringTokenizer r2, $r4;
        int i0, $i1, $i2;
        boolean $z0;

        r0 := @this: android.net.UrlQuerySanitizer;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.net.UrlQuerySanitizer: void clear()>();

        $r4 = new java.util.StringTokenizer;

        specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r1, "&");

        r2 = $r4;

     label1:
        $z0 = virtualinvoke r2.<java.util.StringTokenizer: boolean hasMoreElements()>();

        if $z0 == 0 goto label3;

        r3 = virtualinvoke r2.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i1 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i1 <= 0 goto label1;

        i0 = virtualinvoke r3.<java.lang.String: int indexOf(int)>(61);

        if i0 >= 0 goto label2;

        virtualinvoke r0.<android.net.UrlQuerySanitizer: void parseEntry(java.lang.String,java.lang.String)>(r3, "");

        goto label1;

     label2:
        $r5 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $i2 = i0 + 1;

        $r6 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>($i2);

        virtualinvoke r0.<android.net.UrlQuerySanitizer: void parseEntry(java.lang.String,java.lang.String)>($r5, $r6);

        goto label1;

     label3:
        return;
    }

    public void parseUrl(java.lang.String)
    {
        android.net.UrlQuerySanitizer r0;
        java.lang.String r1, r2;
        int i0, $i1;

        r0 := @this: android.net.UrlQuerySanitizer;

        r1 := @parameter0: java.lang.String;

        i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(63);

        if i0 < 0 goto label2;

        $i1 = i0 + 1;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i1);

     label1:
        virtualinvoke r0.<android.net.UrlQuerySanitizer: void parseQuery(java.lang.String)>(r2);

        return;

     label2:
        r2 = "";

        goto label1;
    }

    public void registerParameter(java.lang.String, android.net.UrlQuerySanitizer$ValueSanitizer)
    {
        android.net.UrlQuerySanitizer r0;
        java.lang.String r1;
        android.net.UrlQuerySanitizer$ValueSanitizer r2;
        java.util.HashMap $r3, $r5;

        r0 := @this: android.net.UrlQuerySanitizer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.UrlQuerySanitizer$ValueSanitizer;

        if r2 != null goto label1;

        $r5 = r0.<android.net.UrlQuerySanitizer: java.util.HashMap mSanitizers>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

     label1:
        $r3 = r0.<android.net.UrlQuerySanitizer: java.util.HashMap mSanitizers>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void registerParameters(java.lang.String[], android.net.UrlQuerySanitizer$ValueSanitizer)
    {
        android.net.UrlQuerySanitizer r0;
        java.lang.String[] r1;
        android.net.UrlQuerySanitizer$ValueSanitizer r2;
        int i0, i1;
        java.lang.String $r3;
        java.util.HashMap $r4;

        r0 := @this: android.net.UrlQuerySanitizer;

        r1 := @parameter0: java.lang.String[];

        r2 := @parameter1: android.net.UrlQuerySanitizer$ValueSanitizer;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r4 = r0.<android.net.UrlQuerySanitizer: java.util.HashMap mSanitizers>;

        $r3 = r1[i1];

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void setAllowUnregisteredParamaters(boolean)
    {
        android.net.UrlQuerySanitizer r0;
        boolean z0;

        r0 := @this: android.net.UrlQuerySanitizer;

        z0 := @parameter0: boolean;

        r0.<android.net.UrlQuerySanitizer: boolean mAllowUnregisteredParamaters> = z0;

        return;
    }

    public void setPreferFirstRepeatedParameter(boolean)
    {
        android.net.UrlQuerySanitizer r0;
        boolean z0;

        r0 := @this: android.net.UrlQuerySanitizer;

        z0 := @parameter0: boolean;

        r0.<android.net.UrlQuerySanitizer: boolean mPreferFirstRepeatedParameter> = z0;

        return;
    }

    public void setUnregisteredParameterValueSanitizer(android.net.UrlQuerySanitizer$ValueSanitizer)
    {
        android.net.UrlQuerySanitizer r0;
        android.net.UrlQuerySanitizer$ValueSanitizer r1;

        r0 := @this: android.net.UrlQuerySanitizer;

        r1 := @parameter0: android.net.UrlQuerySanitizer$ValueSanitizer;

        r0.<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer mUnregisteredParameterValueSanitizer> = r1;

        return;
    }

    public java.lang.String unescape(java.lang.String)
    {
        android.net.UrlQuerySanitizer r0;
        java.lang.String r1, $r4, $r6;
        int i0, i1, i2, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        java.lang.StringBuilder r2, $r3;
        char c3, c4, c5;
        boolean $z0, $z1;

        r0 := @this: android.net.UrlQuerySanitizer;

        r1 := @parameter0: java.lang.String;

        i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(37);

        if i0 >= 0 goto label1;

        i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(43);

        if i0 >= 0 goto label1;

        return r1;

     label1:
        i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>(i1);

        r2 = $r3;

        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        i2 = i0;

     label2:
        if i2 >= i1 goto label5;

        c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);

        if c3 != 43 goto label4;

        c3 = 32;

     label3:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c3);

        i2 = i2 + 1;

        goto label2;

     label4:
        if c3 != 37 goto label3;

        $i7 = i2 + 2;

        if $i7 >= i1 goto label3;

        $i6 = i2 + 1;

        c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i6);

        $i8 = i2 + 2;

        c5 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i8);

        $z0 = virtualinvoke r0.<android.net.UrlQuerySanitizer: boolean isHexDigit(char)>(c4);

        if $z0 == 0 goto label3;

        $z1 = virtualinvoke r0.<android.net.UrlQuerySanitizer: boolean isHexDigit(char)>(c5);

        if $z1 == 0 goto label3;

        $i10 = virtualinvoke r0.<android.net.UrlQuerySanitizer: int decodeHexDigit(char)>(c4);

        $i9 = 16 * $i10;

        $i12 = virtualinvoke r0.<android.net.UrlQuerySanitizer: int decodeHexDigit(char)>(c5);

        $i11 = $i9 + $i12;

        c3 = (char) $i11;

        i2 = i2 + 2;

        goto label3;

     label5:
        $r6 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }
}
