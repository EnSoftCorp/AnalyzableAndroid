class com.android.server.accounts.AccountManagerService$UserAccounts extends java.lang.Object
{
    private final java.util.HashMap accountCache;
    private final java.util.HashMap authTokenCache;
    private final java.lang.Object cacheLock;
    private final java.util.HashMap credentialsPermissionNotificationIds;
    private final com.android.server.accounts.AccountManagerService$DatabaseHelper openHelper;
    private final java.util.HashMap signinRequiredNotificationIds;
    private final java.util.HashMap userDataCache;
    private final int userId;

    void <init>(android.content.Context, int)
    {
        com.android.server.accounts.AccountManagerService$UserAccounts r0;
        android.content.Context r1;
        int i0;
        java.lang.Object r2, $r6;
        java.lang.Throwable r3, $r11;
        java.util.HashMap $r4, $r5, $r8, $r9;
        java.util.LinkedHashMap $r7;
        com.android.server.accounts.AccountManagerService$DatabaseHelper $r10;

        r0 := @this: com.android.server.accounts.AccountManagerService$UserAccounts;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.accounts.AccountManagerService$UserAccounts: java.util.HashMap credentialsPermissionNotificationIds> = $r4;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.accounts.AccountManagerService$UserAccounts: java.util.HashMap signinRequiredNotificationIds> = $r5;

        $r6 = new java.lang.Object;

        specialinvoke $r6.<java.lang.Object: void <init>()>();

        r0.<com.android.server.accounts.AccountManagerService$UserAccounts: java.lang.Object cacheLock> = $r6;

        $r7 = new java.util.LinkedHashMap;

        specialinvoke $r7.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.android.server.accounts.AccountManagerService$UserAccounts: java.util.HashMap accountCache> = $r7;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.accounts.AccountManagerService$UserAccounts: java.util.HashMap userDataCache> = $r8;

        $r9 = new java.util.HashMap;

        specialinvoke $r9.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.accounts.AccountManagerService$UserAccounts: java.util.HashMap authTokenCache> = $r9;

        r0.<com.android.server.accounts.AccountManagerService$UserAccounts: int userId> = i0;

        r2 = r0.<com.android.server.accounts.AccountManagerService$UserAccounts: java.lang.Object cacheLock>;

        entermonitor r2;

     label1:
        $r10 = new com.android.server.accounts.AccountManagerService$DatabaseHelper;

        specialinvoke $r10.<com.android.server.accounts.AccountManagerService$DatabaseHelper: void <init>(android.content.Context,int)>(r1, i0);

        r0.<com.android.server.accounts.AccountManagerService$UserAccounts: com.android.server.accounts.AccountManagerService$DatabaseHelper openHelper> = $r10;

        exitmonitor r2;

     label2:
        return;

     label3:
        $r11 := @caughtexception;

        r3 = $r11;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    static java.util.HashMap access$1400(com.android.server.accounts.AccountManagerService$UserAccounts)
    {
        com.android.server.accounts.AccountManagerService$UserAccounts r0;
        java.util.HashMap $r1;

        r0 := @parameter0: com.android.server.accounts.AccountManagerService$UserAccounts;

        $r1 = r0.<com.android.server.accounts.AccountManagerService$UserAccounts: java.util.HashMap signinRequiredNotificationIds>;

        return $r1;
    }

    static java.lang.Object access$300(com.android.server.accounts.AccountManagerService$UserAccounts)
    {
        com.android.server.accounts.AccountManagerService$UserAccounts r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.accounts.AccountManagerService$UserAccounts;

        $r1 = r0.<com.android.server.accounts.AccountManagerService$UserAccounts: java.lang.Object cacheLock>;

        return $r1;
    }

    static com.android.server.accounts.AccountManagerService$DatabaseHelper access$400(com.android.server.accounts.AccountManagerService$UserAccounts)
    {
        com.android.server.accounts.AccountManagerService$UserAccounts r0;
        com.android.server.accounts.AccountManagerService$DatabaseHelper $r1;

        r0 := @parameter0: com.android.server.accounts.AccountManagerService$UserAccounts;

        $r1 = r0.<com.android.server.accounts.AccountManagerService$UserAccounts: com.android.server.accounts.AccountManagerService$DatabaseHelper openHelper>;

        return $r1;
    }

    static int access$500(com.android.server.accounts.AccountManagerService$UserAccounts)
    {
        com.android.server.accounts.AccountManagerService$UserAccounts r0;
        int $i0;

        r0 := @parameter0: com.android.server.accounts.AccountManagerService$UserAccounts;

        $i0 = r0.<com.android.server.accounts.AccountManagerService$UserAccounts: int userId>;

        return $i0;
    }

    static java.util.HashMap access$600(com.android.server.accounts.AccountManagerService$UserAccounts)
    {
        com.android.server.accounts.AccountManagerService$UserAccounts r0;
        java.util.HashMap $r1;

        r0 := @parameter0: com.android.server.accounts.AccountManagerService$UserAccounts;

        $r1 = r0.<com.android.server.accounts.AccountManagerService$UserAccounts: java.util.HashMap accountCache>;

        return $r1;
    }

    static java.util.HashMap access$700(com.android.server.accounts.AccountManagerService$UserAccounts)
    {
        com.android.server.accounts.AccountManagerService$UserAccounts r0;
        java.util.HashMap $r1;

        r0 := @parameter0: com.android.server.accounts.AccountManagerService$UserAccounts;

        $r1 = r0.<com.android.server.accounts.AccountManagerService$UserAccounts: java.util.HashMap userDataCache>;

        return $r1;
    }

    static java.util.HashMap access$800(com.android.server.accounts.AccountManagerService$UserAccounts)
    {
        com.android.server.accounts.AccountManagerService$UserAccounts r0;
        java.util.HashMap $r1;

        r0 := @parameter0: com.android.server.accounts.AccountManagerService$UserAccounts;

        $r1 = r0.<com.android.server.accounts.AccountManagerService$UserAccounts: java.util.HashMap authTokenCache>;

        return $r1;
    }

    static java.util.HashMap access$900(com.android.server.accounts.AccountManagerService$UserAccounts)
    {
        com.android.server.accounts.AccountManagerService$UserAccounts r0;
        java.util.HashMap $r1;

        r0 := @parameter0: com.android.server.accounts.AccountManagerService$UserAccounts;

        $r1 = r0.<com.android.server.accounts.AccountManagerService$UserAccounts: java.util.HashMap credentialsPermissionNotificationIds>;

        return $r1;
    }
}
