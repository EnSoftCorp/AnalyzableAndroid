class android.widget.GridLayout$Axis$1 extends java.lang.Object
{
    static final boolean $assertionsDisabled;
    android.widget.GridLayout$Arc[][] arcsByVertex;
    int cursor;
    android.widget.GridLayout$Arc[] result;
    final android.widget.GridLayout$Axis this$1;
    final android.widget.GridLayout$Arc[] val$arcs;
    int[] visited;

    static void <clinit>()
    {
        boolean z0, $z1;
        java.lang.Class $r0;

        $r0 = class "android/widget/GridLayout";

        $z1 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z1 != 0 goto label2;

        z0 = 1;

     label1:
        <android.widget.GridLayout$Axis$1: boolean $assertionsDisabled> = z0;

        return;

     label2:
        z0 = 0;

        goto label1;
    }

    void <init>(android.widget.GridLayout$Axis, android.widget.GridLayout$Arc[])
    {
        android.widget.GridLayout$Axis$1 r0;
        android.widget.GridLayout$Axis r1, $r7, $r9;
        android.widget.GridLayout$Arc[] r2, $r3, $r4, $r5, $r6;
        int $i0, $i1, $i2, $i3, $i4;
        android.widget.GridLayout$Arc[][] $r8;
        int[] $r10;

        r0 := @this: android.widget.GridLayout$Axis$1;

        r1 := @parameter0: android.widget.GridLayout$Axis;

        r2 := @parameter1: android.widget.GridLayout$Arc[];

        r0.<android.widget.GridLayout$Axis$1: android.widget.GridLayout$Axis this$1> = r1;

        r0.<android.widget.GridLayout$Axis$1: android.widget.GridLayout$Arc[] val$arcs> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = r0.<android.widget.GridLayout$Axis$1: android.widget.GridLayout$Arc[] val$arcs>;

        $i0 = lengthof $r3;

        $r4 = newarray (android.widget.GridLayout$Arc)[$i0];

        r0.<android.widget.GridLayout$Axis$1: android.widget.GridLayout$Arc[] result> = $r4;

        $r5 = r0.<android.widget.GridLayout$Axis$1: android.widget.GridLayout$Arc[] result>;

        $i1 = lengthof $r5;

        $i2 = -1 + $i1;

        r0.<android.widget.GridLayout$Axis$1: int cursor> = $i2;

        $r7 = r0.<android.widget.GridLayout$Axis$1: android.widget.GridLayout$Axis this$1>;

        $r6 = r0.<android.widget.GridLayout$Axis$1: android.widget.GridLayout$Arc[] val$arcs>;

        $r8 = virtualinvoke $r7.<android.widget.GridLayout$Axis: android.widget.GridLayout$Arc[][] groupArcsByFirstVertex(android.widget.GridLayout$Arc[])>($r6);

        r0.<android.widget.GridLayout$Axis$1: android.widget.GridLayout$Arc[][] arcsByVertex> = $r8;

        $r9 = r0.<android.widget.GridLayout$Axis$1: android.widget.GridLayout$Axis this$1>;

        $i3 = virtualinvoke $r9.<android.widget.GridLayout$Axis: int getCount()>();

        $i4 = 1 + $i3;

        $r10 = newarray (int)[$i4];

        r0.<android.widget.GridLayout$Axis$1: int[] visited> = $r10;

        return;
    }

    android.widget.GridLayout$Arc[] sort()
    {
        android.widget.GridLayout$Axis$1 r0;
        int i0, i1, $i2;
        android.widget.GridLayout$Arc[][] $r1;
        boolean $z0;
        android.widget.GridLayout$Arc[] $r2;
        java.lang.AssertionError $r3;

        r0 := @this: android.widget.GridLayout$Axis$1;

        i0 = 0;

        $r1 = r0.<android.widget.GridLayout$Axis$1: android.widget.GridLayout$Arc[][] arcsByVertex>;

        i1 = lengthof $r1;

     label1:
        if i0 >= i1 goto label2;

        virtualinvoke r0.<android.widget.GridLayout$Axis$1: void walk(int)>(i0);

        i0 = i0 + 1;

        goto label1;

     label2:
        $z0 = <android.widget.GridLayout$Axis$1: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        $i2 = r0.<android.widget.GridLayout$Axis$1: int cursor>;

        if $i2 == -1 goto label3;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label3:
        $r2 = r0.<android.widget.GridLayout$Axis$1: android.widget.GridLayout$Arc[] result>;

        return $r2;
    }

    void walk(int)
    {
        android.widget.GridLayout$Axis$1 r0;
        int i0, i1, i2, i3, $i4, $i5, $i6;
        android.widget.GridLayout$Arc[] r1, r3;
        android.widget.GridLayout$Arc r2;
        int[] $r4, $r6, $r8;
        boolean $z0;
        java.lang.AssertionError $r5;
        android.widget.GridLayout$Arc[][] $r7;
        android.widget.GridLayout$Interval $r9;

        r0 := @this: android.widget.GridLayout$Axis$1;

        i0 := @parameter0: int;

        $r4 = r0.<android.widget.GridLayout$Axis$1: int[] visited>;

        $i4 = $r4[i0];

        tableswitch($i4)
        {
            case 0: goto label2;
            case 1: goto label5;
            default: goto label1;
        };

     label1:
        return;

     label2:
        $r6 = r0.<android.widget.GridLayout$Axis$1: int[] visited>;

        $r6[i0] = 1;

        $r7 = r0.<android.widget.GridLayout$Axis$1: android.widget.GridLayout$Arc[][] arcsByVertex>;

        r1 = $r7[i0];

        i1 = lengthof r1;

        i2 = 0;

     label3:
        if i2 >= i1 goto label4;

        r2 = r1[i2];

        $r9 = r2.<android.widget.GridLayout$Arc: android.widget.GridLayout$Interval span>;

        $i6 = $r9.<android.widget.GridLayout$Interval: int max>;

        virtualinvoke r0.<android.widget.GridLayout$Axis$1: void walk(int)>($i6);

        r3 = r0.<android.widget.GridLayout$Axis$1: android.widget.GridLayout$Arc[] result>;

        i3 = r0.<android.widget.GridLayout$Axis$1: int cursor>;

        $i5 = i3 - 1;

        r0.<android.widget.GridLayout$Axis$1: int cursor> = $i5;

        r3[i3] = r2;

        i2 = i2 + 1;

        goto label3;

     label4:
        $r8 = r0.<android.widget.GridLayout$Axis$1: int[] visited>;

        $r8[i0] = 2;

        return;

     label5:
        $z0 = <android.widget.GridLayout$Axis$1: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;
    }
}
