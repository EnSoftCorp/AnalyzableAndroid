public final class android.os.CancellationSignal extends java.lang.Object
{
    private boolean mCancelInProgress;
    private boolean mIsCanceled;
    private android.os.CancellationSignal$OnCancelListener mOnCancelListener;
    private android.os.ICancellationSignal mRemote;

    public void <init>()
    {
        android.os.CancellationSignal r0;

        r0 := @this: android.os.CancellationSignal;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.os.ICancellationSignal createTransport()
    {
        android.os.CancellationSignal$Transport $r0;

        $r0 = new android.os.CancellationSignal$Transport;

        specialinvoke $r0.<android.os.CancellationSignal$Transport: void <init>(android.os.CancellationSignal$1)>(null);

        return $r0;
    }

    public static android.os.CancellationSignal fromTransport(android.os.ICancellationSignal)
    {
        android.os.ICancellationSignal r0;
        boolean $z0;
        android.os.CancellationSignal$Transport $r1;
        android.os.CancellationSignal $r2;

        r0 := @parameter0: android.os.ICancellationSignal;

        $z0 = r0 instanceof android.os.CancellationSignal$Transport;

        if $z0 == 0 goto label1;

        $r1 = (android.os.CancellationSignal$Transport) r0;

        $r2 = $r1.<android.os.CancellationSignal$Transport: android.os.CancellationSignal mCancellationSignal>;

        return $r2;

     label1:
        return null;
    }

    private void waitForCancelFinishedLocked()
    {
        android.os.CancellationSignal r0;
        boolean $z0;
        java.lang.InterruptedException $r2;

        r0 := @this: android.os.CancellationSignal;

     label1:
        $z0 = r0.<android.os.CancellationSignal: boolean mCancelInProgress>;

        if $z0 == 0 goto label5;

     label2:
        virtualinvoke r0.<java.lang.Object: void wait()>();

     label3:
        goto label1;

     label4:
        $r2 := @caughtexception;

        goto label1;

     label5:
        return;

        catch java.lang.InterruptedException from label2 to label3 with label4;
    }

    public void cancel()
    {
        android.os.CancellationSignal r0;
        java.lang.Throwable r1, r4, r6, r7, $r8, $r9, $r10, $r12;
        android.os.CancellationSignal$OnCancelListener r2;
        android.os.ICancellationSignal r3;
        boolean $z0;
        android.os.RemoteException $r11;

        r0 := @this: android.os.CancellationSignal;

        entermonitor r0;

     label01:
        $z0 = r0.<android.os.CancellationSignal: boolean mIsCanceled>;

        if $z0 == 0 goto label03;

        exitmonitor r0;

     label02:
        return;

     label03:
        r0.<android.os.CancellationSignal: boolean mIsCanceled> = 1;

        r0.<android.os.CancellationSignal: boolean mCancelInProgress> = 1;

        r2 = r0.<android.os.CancellationSignal: android.os.CancellationSignal$OnCancelListener mOnCancelListener>;

        r3 = r0.<android.os.CancellationSignal: android.os.ICancellationSignal mRemote>;

        exitmonitor r0;

     label04:
        if r2 == null goto label06;

     label05:
        interfaceinvoke r2.<android.os.CancellationSignal$OnCancelListener: void onCancel()>();

     label06:
        if r3 == null goto label08;

     label07:
        interfaceinvoke r3.<android.os.ICancellationSignal: void cancel()>();

     label08:
        entermonitor r0;

     label09:
        r0.<android.os.CancellationSignal: boolean mCancelInProgress> = 0;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r0;

     label10:
        return;

     label11:
        $r9 := @caughtexception;

        r4 = $r9;

     label12:
        exitmonitor r0;

     label13:
        throw r4;

     label14:
        $r8 := @caughtexception;

        r1 = $r8;

     label15:
        exitmonitor r0;

     label16:
        throw r1;

     label17:
        $r10 := @caughtexception;

        r6 = $r10;

        entermonitor r0;

     label18:
        r0.<android.os.CancellationSignal: boolean mCancelInProgress> = 0;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r0;

     label19:
        throw r6;

     label20:
        $r12 := @caughtexception;

        r7 = $r12;

     label21:
        exitmonitor r0;

     label22:
        throw r7;

     label23:
        $r11 := @caughtexception;

        goto label08;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch android.os.RemoteException from label07 to label08 with label23;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.Throwable from label15 to label16 with label14;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label21 to label22 with label20;
    }

    public boolean isCanceled()
    {
        android.os.CancellationSignal r0;
        java.lang.Throwable r1, $r2;
        boolean z0;

        r0 := @this: android.os.CancellationSignal;

        entermonitor r0;

     label1:
        z0 = r0.<android.os.CancellationSignal: boolean mIsCanceled>;

        exitmonitor r0;

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

     label4:
        exitmonitor r0;

     label5:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setOnCancelListener(android.os.CancellationSignal$OnCancelListener)
    {
        android.os.CancellationSignal r0;
        android.os.CancellationSignal$OnCancelListener r1, $r3;
        java.lang.Throwable r2, $r4;
        boolean $z0;

        r0 := @this: android.os.CancellationSignal;

        r1 := @parameter0: android.os.CancellationSignal$OnCancelListener;

        entermonitor r0;

     label01:
        specialinvoke r0.<android.os.CancellationSignal: void waitForCancelFinishedLocked()>();

        $r3 = r0.<android.os.CancellationSignal: android.os.CancellationSignal$OnCancelListener mOnCancelListener>;

        if $r3 != r1 goto label03;

        exitmonitor r0;

     label02:
        return;

     label03:
        r0.<android.os.CancellationSignal: android.os.CancellationSignal$OnCancelListener mOnCancelListener> = r1;

        $z0 = r0.<android.os.CancellationSignal: boolean mIsCanceled>;

        if $z0 == 0 goto label05;

     label04:
        if r1 != null goto label10;

     label05:
        exitmonitor r0;

     label06:
        return;

     label07:
        $r4 := @caughtexception;

        r2 = $r4;

     label08:
        exitmonitor r0;

     label09:
        throw r2;

     label10:
        exitmonitor r0;

     label11:
        interfaceinvoke r1.<android.os.CancellationSignal$OnCancelListener: void onCancel()>();

        return;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label10 to label11 with label07;
    }

    public void setRemote(android.os.ICancellationSignal)
    {
        android.os.CancellationSignal r0;
        android.os.ICancellationSignal r1, $r4;
        java.lang.Throwable r2, $r5;
        boolean $z0;
        android.os.RemoteException $r6;

        r0 := @this: android.os.CancellationSignal;

        r1 := @parameter0: android.os.ICancellationSignal;

        entermonitor r0;

     label01:
        specialinvoke r0.<android.os.CancellationSignal: void waitForCancelFinishedLocked()>();

        $r4 = r0.<android.os.CancellationSignal: android.os.ICancellationSignal mRemote>;

        if $r4 != r1 goto label03;

        exitmonitor r0;

     label02:
        return;

     label03:
        r0.<android.os.CancellationSignal: android.os.ICancellationSignal mRemote> = r1;

        $z0 = r0.<android.os.CancellationSignal: boolean mIsCanceled>;

        if $z0 == 0 goto label05;

     label04:
        if r1 != null goto label10;

     label05:
        exitmonitor r0;

     label06:
        return;

     label07:
        $r5 := @caughtexception;

        r2 = $r5;

     label08:
        exitmonitor r0;

     label09:
        throw r2;

     label10:
        exitmonitor r0;

     label11:
        interfaceinvoke r1.<android.os.ICancellationSignal: void cancel()>();

     label12:
        return;

     label13:
        $r6 := @caughtexception;

        return;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label10 to label11 with label07;
        catch android.os.RemoteException from label11 to label12 with label13;
    }

    public void throwIfCanceled()
    {
        android.os.CancellationSignal r0;
        boolean $z0;
        android.os.OperationCanceledException $r1;

        r0 := @this: android.os.CancellationSignal;

        $z0 = virtualinvoke r0.<android.os.CancellationSignal: boolean isCanceled()>();

        if $z0 == 0 goto label1;

        $r1 = new android.os.OperationCanceledException;

        specialinvoke $r1.<android.os.OperationCanceledException: void <init>()>();

        throw $r1;

     label1:
        return;
    }
}
