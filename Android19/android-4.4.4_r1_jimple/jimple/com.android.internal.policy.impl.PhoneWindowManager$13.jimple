class com.android.internal.policy.impl.PhoneWindowManager$13 extends java.lang.Object implements android.content.ServiceConnection
{
    final com.android.internal.policy.impl.PhoneWindowManager this$0;

    void <init>(com.android.internal.policy.impl.PhoneWindowManager)
    {
        com.android.internal.policy.impl.PhoneWindowManager$13 r0;
        com.android.internal.policy.impl.PhoneWindowManager r1;

        r0 := @this: com.android.internal.policy.impl.PhoneWindowManager$13;

        r1 := @parameter0: com.android.internal.policy.impl.PhoneWindowManager;

        r0.<com.android.internal.policy.impl.PhoneWindowManager$13: com.android.internal.policy.impl.PhoneWindowManager this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onServiceConnected(android.content.ComponentName, android.os.IBinder)
    {
        com.android.internal.policy.impl.PhoneWindowManager$13 r0;
        android.content.ComponentName r1;
        android.os.IBinder r2;
        java.lang.Object r3;
        java.lang.Throwable r4, $r26;
        android.os.Messenger r5, $r11, $r12;
        android.os.Message r6;
        com.android.internal.policy.impl.PhoneWindowManager $r8, $r9, $r15, $r16, $r18, $r22, $r23;
        android.content.ServiceConnection $r10;
        com.android.internal.policy.impl.PhoneWindowManager$13$1 $r13;
        android.os.Handler $r14;
        android.os.Looper $r17;
        android.view.WindowManagerPolicy$WindowState $r19, $r20, $r21, $r24;
        boolean $z0, $z1;
        android.os.RemoteException $r25;

        r0 := @this: com.android.internal.policy.impl.PhoneWindowManager$13;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.os.IBinder;

        $r8 = r0.<com.android.internal.policy.impl.PhoneWindowManager$13: com.android.internal.policy.impl.PhoneWindowManager this$0>;

        r3 = $r8.<com.android.internal.policy.impl.PhoneWindowManager: java.lang.Object mScreenshotLock>;

        entermonitor r3;

     label01:
        $r9 = r0.<com.android.internal.policy.impl.PhoneWindowManager$13: com.android.internal.policy.impl.PhoneWindowManager this$0>;

        $r10 = $r9.<com.android.internal.policy.impl.PhoneWindowManager: android.content.ServiceConnection mScreenshotConnection>;

        if $r10 == r0 goto label03;

        exitmonitor r3;

     label02:
        return;

     label03:
        $r11 = new android.os.Messenger;

        specialinvoke $r11.<android.os.Messenger: void <init>(android.os.IBinder)>(r2);

        r5 = $r11;

        r6 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int)>(null, 1);

        $r12 = new android.os.Messenger;

        $r13 = new com.android.internal.policy.impl.PhoneWindowManager$13$1;

        $r15 = r0.<com.android.internal.policy.impl.PhoneWindowManager$13: com.android.internal.policy.impl.PhoneWindowManager this$0>;

        $r14 = $r15.<com.android.internal.policy.impl.PhoneWindowManager: android.os.Handler mHandler>;

        $r17 = virtualinvoke $r14.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke $r13.<com.android.internal.policy.impl.PhoneWindowManager$13$1: void <init>(com.android.internal.policy.impl.PhoneWindowManager$13,android.os.Looper,android.content.ServiceConnection)>(r0, $r17, r0);

        specialinvoke $r12.<android.os.Messenger: void <init>(android.os.Handler)>($r13);

        r6.<android.os.Message: android.os.Messenger replyTo> = $r12;

        r6.<android.os.Message: int arg2> = 0;

        r6.<android.os.Message: int arg1> = 0;

        $r16 = r0.<com.android.internal.policy.impl.PhoneWindowManager$13: com.android.internal.policy.impl.PhoneWindowManager this$0>;

        $r19 = $r16.<com.android.internal.policy.impl.PhoneWindowManager: android.view.WindowManagerPolicy$WindowState mStatusBar>;

        if $r19 == null goto label04;

        $r23 = r0.<com.android.internal.policy.impl.PhoneWindowManager$13: com.android.internal.policy.impl.PhoneWindowManager this$0>;

        $r24 = $r23.<com.android.internal.policy.impl.PhoneWindowManager: android.view.WindowManagerPolicy$WindowState mStatusBar>;

        $z1 = interfaceinvoke $r24.<android.view.WindowManagerPolicy$WindowState: boolean isVisibleLw()>();

        if $z1 == 0 goto label04;

        r6.<android.os.Message: int arg1> = 1;

     label04:
        $r18 = r0.<com.android.internal.policy.impl.PhoneWindowManager$13: com.android.internal.policy.impl.PhoneWindowManager this$0>;

        $r20 = $r18.<com.android.internal.policy.impl.PhoneWindowManager: android.view.WindowManagerPolicy$WindowState mNavigationBar>;

        if $r20 == null goto label05;

        $r22 = r0.<com.android.internal.policy.impl.PhoneWindowManager$13: com.android.internal.policy.impl.PhoneWindowManager this$0>;

        $r21 = $r22.<com.android.internal.policy.impl.PhoneWindowManager: android.view.WindowManagerPolicy$WindowState mNavigationBar>;

        $z0 = interfaceinvoke $r21.<android.view.WindowManagerPolicy$WindowState: boolean isVisibleLw()>();

        if $z0 == 0 goto label05;

        r6.<android.os.Message: int arg2> = 1;

     label05:
        virtualinvoke r5.<android.os.Messenger: void send(android.os.Message)>(r6);

     label06:
        exitmonitor r3;

     label07:
        return;

     label08:
        $r26 := @caughtexception;

        r4 = $r26;

     label09:
        exitmonitor r3;

     label10:
        throw r4;

     label11:
        $r25 := @caughtexception;

        goto label06;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch android.os.RemoteException from label05 to label06 with label11;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void onServiceDisconnected(android.content.ComponentName)
    {
        com.android.internal.policy.impl.PhoneWindowManager$13 r0;
        android.content.ComponentName r1;

        r0 := @this: com.android.internal.policy.impl.PhoneWindowManager$13;

        r1 := @parameter0: android.content.ComponentName;

        return;
    }
}
