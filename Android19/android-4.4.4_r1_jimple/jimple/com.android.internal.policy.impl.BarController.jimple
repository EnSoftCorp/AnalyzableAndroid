public class com.android.internal.policy.impl.BarController extends java.lang.Object
{
    private static final boolean DEBUG;
    private static final int TRANSIENT_BAR_HIDING;
    private static final int TRANSIENT_BAR_NONE;
    private static final int TRANSIENT_BAR_SHOWING;
    private static final int TRANSIENT_BAR_SHOW_REQUESTED;
    private static final int TRANSLUCENT_ANIMATION_DELAY_MS;
    private final android.os.Handler mHandler;
    private long mLastTranslucent;
    private boolean mPendingShow;
    private final java.lang.Object mServiceAquireLock;
    private int mState;
    private final int mStatusBarManagerId;
    private com.android.internal.statusbar.IStatusBarService mStatusBarService;
    private final java.lang.String mTag;
    private int mTransientBarState;
    private final int mTransientFlag;
    private final int mTranslucentFlag;
    private final int mTranslucentWmFlag;
    private final int mUnhideFlag;
    private android.view.WindowManagerPolicy$WindowState mWin;

    public void <init>(java.lang.String, int, int, int, int, int)
    {
        com.android.internal.policy.impl.BarController r0;
        java.lang.String r1, $r6;
        int i0, i1, i2, i3, i4;
        java.lang.Object $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        android.os.Handler $r7;

        r0 := @this: com.android.internal.policy.impl.BarController;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.policy.impl.BarController: java.lang.Object mServiceAquireLock> = $r2;

        r0.<com.android.internal.policy.impl.BarController: int mState> = 0;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BarController.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.internal.policy.impl.BarController: java.lang.String mTag> = $r6;

        r0.<com.android.internal.policy.impl.BarController: int mTransientFlag> = i0;

        r0.<com.android.internal.policy.impl.BarController: int mUnhideFlag> = i1;

        r0.<com.android.internal.policy.impl.BarController: int mTranslucentFlag> = i2;

        r0.<com.android.internal.policy.impl.BarController: int mStatusBarManagerId> = i3;

        r0.<com.android.internal.policy.impl.BarController: int mTranslucentWmFlag> = i4;

        $r7 = new android.os.Handler;

        specialinvoke $r7.<android.os.Handler: void <init>()>();

        r0.<com.android.internal.policy.impl.BarController: android.os.Handler mHandler> = $r7;

        return;
    }

    static com.android.internal.statusbar.IStatusBarService access$000(com.android.internal.policy.impl.BarController)
    {
        com.android.internal.policy.impl.BarController r0;
        com.android.internal.statusbar.IStatusBarService $r1;

        r0 := @parameter0: com.android.internal.policy.impl.BarController;

        $r1 = specialinvoke r0.<com.android.internal.policy.impl.BarController: com.android.internal.statusbar.IStatusBarService getStatusBarService()>();

        return $r1;
    }

    static int access$100(com.android.internal.policy.impl.BarController)
    {
        com.android.internal.policy.impl.BarController r0;
        int $i0;

        r0 := @parameter0: com.android.internal.policy.impl.BarController;

        $i0 = r0.<com.android.internal.policy.impl.BarController: int mStatusBarManagerId>;

        return $i0;
    }

    static com.android.internal.statusbar.IStatusBarService access$202(com.android.internal.policy.impl.BarController, com.android.internal.statusbar.IStatusBarService)
    {
        com.android.internal.policy.impl.BarController r0;
        com.android.internal.statusbar.IStatusBarService r1;

        r0 := @parameter0: com.android.internal.policy.impl.BarController;

        r1 := @parameter1: com.android.internal.statusbar.IStatusBarService;

        r0.<com.android.internal.policy.impl.BarController: com.android.internal.statusbar.IStatusBarService mStatusBarService> = r1;

        return r1;
    }

    private int computeStateLw(boolean, boolean, android.view.WindowManagerPolicy$WindowState, boolean)
    {
        com.android.internal.policy.impl.BarController r0;
        boolean z0, z1, z2, z3, z4, $z5;
        android.view.WindowManagerPolicy$WindowState r1;
        int $i0, $i1, $i2;

        r0 := @this: com.android.internal.policy.impl.BarController;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r1 := @parameter2: android.view.WindowManagerPolicy$WindowState;

        z2 := @parameter3: boolean;

        $z5 = interfaceinvoke r1.<android.view.WindowManagerPolicy$WindowState: boolean hasDrawnLw()>();

        if $z5 == 0 goto label4;

        z3 = interfaceinvoke r1.<android.view.WindowManagerPolicy$WindowState: boolean isVisibleLw()>();

        z4 = interfaceinvoke r1.<android.view.WindowManagerPolicy$WindowState: boolean isAnimatingLw()>();

        $i1 = r0.<com.android.internal.policy.impl.BarController: int mState>;

        if $i1 != 1 goto label1;

        if z2 != 0 goto label1;

        if z3 != 0 goto label1;

        return 2;

     label1:
        $i2 = r0.<com.android.internal.policy.impl.BarController: int mState>;

        if $i2 != 2 goto label2;

        if z3 == 0 goto label2;

        return 0;

     label2:
        if z2 == 0 goto label4;

        if z0 == 0 goto label3;

        if z3 == 0 goto label3;

        if z1 != 0 goto label3;

        if z4 == 0 goto label3;

        return 1;

     label3:
        return 0;

     label4:
        $i0 = r0.<com.android.internal.policy.impl.BarController: int mState>;

        return $i0;
    }

    private com.android.internal.statusbar.IStatusBarService getStatusBarService()
    {
        com.android.internal.policy.impl.BarController r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r7;
        com.android.internal.statusbar.IStatusBarService r3, $r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: com.android.internal.policy.impl.BarController;

        r1 = r0.<com.android.internal.policy.impl.BarController: java.lang.Object mServiceAquireLock>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.internal.policy.impl.BarController: com.android.internal.statusbar.IStatusBarService mStatusBarService>;

        if $r4 != null goto label2;

        $r5 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("statusbar");

        $r6 = staticinvoke <com.android.internal.statusbar.IStatusBarService$Stub: com.android.internal.statusbar.IStatusBarService asInterface(android.os.IBinder)>($r5);

        r0.<com.android.internal.policy.impl.BarController: com.android.internal.statusbar.IStatusBarService mStatusBarService> = $r6;

     label2:
        r3 = r0.<com.android.internal.policy.impl.BarController: com.android.internal.statusbar.IStatusBarService mStatusBarService>;

        exitmonitor r1;

     label3:
        return r3;

     label4:
        $r7 := @caughtexception;

        r2 = $r7;

     label5:
        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private void setTransientBarState(int)
    {
        com.android.internal.policy.impl.BarController r0;
        int i0, $i1, $i2;
        android.view.WindowManagerPolicy$WindowState $r1;
        long $l3;

        r0 := @this: com.android.internal.policy.impl.BarController;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.policy.impl.BarController: android.view.WindowManagerPolicy$WindowState mWin>;

        if $r1 == null goto label3;

        $i1 = r0.<com.android.internal.policy.impl.BarController: int mTransientBarState>;

        if i0 == $i1 goto label3;

        $i2 = r0.<com.android.internal.policy.impl.BarController: int mTransientBarState>;

        if $i2 == 2 goto label1;

        if i0 != 2 goto label2;

     label1:
        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<com.android.internal.policy.impl.BarController: long mLastTranslucent> = $l3;

     label2:
        r0.<com.android.internal.policy.impl.BarController: int mTransientBarState> = i0;

     label3:
        return;
    }

    private static java.lang.String transientBarStateToString(int)
    {
        int i0;
        java.lang.IllegalArgumentException $r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        i0 := @parameter0: int;

        if i0 != 3 goto label1;

        return "TRANSIENT_BAR_HIDING";

     label1:
        if i0 != 2 goto label2;

        return "TRANSIENT_BAR_SHOWING";

     label2:
        if i0 != 1 goto label3;

        return "TRANSIENT_BAR_SHOW_REQUESTED";

     label3:
        if i0 != 0 goto label4;

        return "TRANSIENT_BAR_NONE";

     label4:
        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown state ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r0;
    }

    private boolean updateStateLw(int)
    {
        com.android.internal.policy.impl.BarController r0;
        int i0, $i1;
        com.android.internal.policy.impl.BarController$1 $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.internal.policy.impl.BarController;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.internal.policy.impl.BarController: int mState>;

        if i0 == $i1 goto label1;

        r0.<com.android.internal.policy.impl.BarController: int mState> = i0;

        $r2 = r0.<com.android.internal.policy.impl.BarController: android.os.Handler mHandler>;

        $r1 = new com.android.internal.policy.impl.BarController$1;

        specialinvoke $r1.<com.android.internal.policy.impl.BarController$1: void <init>(com.android.internal.policy.impl.BarController,int)>(r0, i0);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return 1;

     label1:
        return 0;
    }

    public void adjustSystemUiVisibilityLw(int, int)
    {
        com.android.internal.policy.impl.BarController r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.view.WindowManagerPolicy$WindowState $r1, $r2;

        r0 := @this: com.android.internal.policy.impl.BarController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.policy.impl.BarController: android.view.WindowManagerPolicy$WindowState mWin>;

        if $r1 == null goto label2;

        $i6 = r0.<com.android.internal.policy.impl.BarController: int mTransientBarState>;

        if $i6 != 2 goto label2;

        $i7 = r0.<com.android.internal.policy.impl.BarController: int mTransientFlag>;

        $i8 = i1 & $i7;

        if $i8 != 0 goto label2;

        specialinvoke r0.<com.android.internal.policy.impl.BarController: void setTransientBarState(int)>(3);

        virtualinvoke r0.<com.android.internal.policy.impl.BarController: boolean setBarShowingLw(boolean)>(0);

     label1:
        return;

     label2:
        $r2 = r0.<com.android.internal.policy.impl.BarController: android.view.WindowManagerPolicy$WindowState mWin>;

        if $r2 == null goto label1;

        $i2 = r0.<com.android.internal.policy.impl.BarController: int mUnhideFlag>;

        $i3 = i0 & $i2;

        if $i3 == 0 goto label1;

        $i4 = r0.<com.android.internal.policy.impl.BarController: int mUnhideFlag>;

        $i5 = i1 & $i4;

        if $i5 != 0 goto label1;

        virtualinvoke r0.<com.android.internal.policy.impl.BarController: boolean setBarShowingLw(boolean)>(1);

        return;
    }

    public int applyTranslucentFlagLw(android.view.WindowManagerPolicy$WindowState, int, int)
    {
        com.android.internal.policy.impl.BarController r0;
        android.view.WindowManagerPolicy$WindowState r1, $r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        android.view.WindowManager$LayoutParams $r3, $r4;

        r0 := @this: com.android.internal.policy.impl.BarController;

        r1 := @parameter0: android.view.WindowManagerPolicy$WindowState;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.internal.policy.impl.BarController: android.view.WindowManagerPolicy$WindowState mWin>;

        if $r2 == null goto label1;

        if r1 == null goto label3;

        $r3 = interfaceinvoke r1.<android.view.WindowManagerPolicy$WindowState: android.view.WindowManager$LayoutParams getAttrs()>();

        $i8 = $r3.<android.view.WindowManager$LayoutParams: int privateFlags>;

        $i9 = 512 & $i8;

        if $i9 != 0 goto label3;

        $r4 = interfaceinvoke r1.<android.view.WindowManagerPolicy$WindowState: android.view.WindowManager$LayoutParams getAttrs()>();

        $i10 = $r4.<android.view.WindowManager$LayoutParams: int flags>;

        $i11 = r0.<com.android.internal.policy.impl.BarController: int mTranslucentWmFlag>;

        $i13 = $i10 & $i11;

        if $i13 == 0 goto label2;

        $i16 = r0.<com.android.internal.policy.impl.BarController: int mTranslucentFlag>;

        i0 = i0 | $i16;

     label1:
        return i0;

     label2:
        $i12 = r0.<com.android.internal.policy.impl.BarController: int mTranslucentFlag>;

        $i15 = -1 ^ $i12;

        $i14 = i0 & $i15;

        return $i14;

     label3:
        $i2 = r0.<com.android.internal.policy.impl.BarController: int mTranslucentFlag>;

        $i3 = -1 ^ $i2;

        $i6 = i0 & $i3;

        $i4 = r0.<com.android.internal.policy.impl.BarController: int mTranslucentFlag>;

        $i5 = i1 & $i4;

        $i7 = $i6 | $i5;

        return $i7;
    }

    public boolean checkHiddenLw()
    {
        com.android.internal.policy.impl.BarController r0;
        android.view.WindowManagerPolicy$WindowState $r1, $r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2, $z3, $z5;
        int $i0;

        r0 := @this: com.android.internal.policy.impl.BarController;

        $r1 = r0.<com.android.internal.policy.impl.BarController: android.view.WindowManagerPolicy$WindowState mWin>;

        if $r1 == null goto label3;

        $r2 = r0.<com.android.internal.policy.impl.BarController: android.view.WindowManagerPolicy$WindowState mWin>;

        $z0 = interfaceinvoke $r2.<android.view.WindowManagerPolicy$WindowState: boolean hasDrawnLw()>();

        if $z0 == 0 goto label3;

        $r3 = r0.<com.android.internal.policy.impl.BarController: android.view.WindowManagerPolicy$WindowState mWin>;

        $z1 = interfaceinvoke $r3.<android.view.WindowManagerPolicy$WindowState: boolean isVisibleLw()>();

        if $z1 != 0 goto label1;

        $r5 = r0.<com.android.internal.policy.impl.BarController: android.view.WindowManagerPolicy$WindowState mWin>;

        $z5 = interfaceinvoke $r5.<android.view.WindowManagerPolicy$WindowState: boolean isAnimatingLw()>();

        if $z5 != 0 goto label1;

        specialinvoke r0.<com.android.internal.policy.impl.BarController: boolean updateStateLw(int)>(2);

     label1:
        $i0 = r0.<com.android.internal.policy.impl.BarController: int mTransientBarState>;

        if $i0 != 3 goto label3;

        $r4 = r0.<com.android.internal.policy.impl.BarController: android.view.WindowManagerPolicy$WindowState mWin>;

        $z2 = interfaceinvoke $r4.<android.view.WindowManagerPolicy$WindowState: boolean isVisibleLw()>();

        if $z2 != 0 goto label3;

        specialinvoke r0.<com.android.internal.policy.impl.BarController: void setTransientBarState(int)>(0);

        $z3 = r0.<com.android.internal.policy.impl.BarController: boolean mPendingShow>;

        if $z3 == 0 goto label2;

        virtualinvoke r0.<com.android.internal.policy.impl.BarController: boolean setBarShowingLw(boolean)>(1);

        r0.<com.android.internal.policy.impl.BarController: boolean mPendingShow> = 0;

     label2:
        return 1;

     label3:
        return 0;
    }

    public boolean checkShowTransientBarLw()
    {
        com.android.internal.policy.impl.BarController r0;
        int $i0, $i1;
        android.view.WindowManagerPolicy$WindowState $r1, $r2;
        boolean $z0;

        r0 := @this: com.android.internal.policy.impl.BarController;

        $i0 = r0.<com.android.internal.policy.impl.BarController: int mTransientBarState>;

        if $i0 != 2 goto label2;

     label1:
        return 0;

     label2:
        $i1 = r0.<com.android.internal.policy.impl.BarController: int mTransientBarState>;

        if $i1 == 1 goto label1;

        $r1 = r0.<com.android.internal.policy.impl.BarController: android.view.WindowManagerPolicy$WindowState mWin>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.policy.impl.BarController: android.view.WindowManagerPolicy$WindowState mWin>;

        $z0 = interfaceinvoke $r2.<android.view.WindowManagerPolicy$WindowState: boolean isDisplayedLw()>();

        if $z0 != 0 goto label1;

        return 1;
    }

    public void dump(java.io.PrintWriter, java.lang.String)
    {
        com.android.internal.policy.impl.BarController r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r4, $r5, $r6;
        android.view.WindowManagerPolicy$WindowState $r3;
        int $i0, $i1;

        r0 := @this: com.android.internal.policy.impl.BarController;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.internal.policy.impl.BarController: android.view.WindowManagerPolicy$WindowState mWin>;

        if $r3 == null goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        $r4 = r0.<com.android.internal.policy.impl.BarController: java.lang.String mTag>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mState");

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(61);

        $i0 = r0.<com.android.internal.policy.impl.BarController: int mState>;

        $r5 = staticinvoke <android.app.StatusBarManager: java.lang.String windowStateToString(int)>($i0);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mTransientBar");

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(61);

        $i1 = r0.<com.android.internal.policy.impl.BarController: int mTransientBarState>;

        $r6 = staticinvoke <com.android.internal.policy.impl.BarController: java.lang.String transientBarStateToString(int)>($i1);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r6);

     label1:
        return;
    }

    public boolean isTransientShowRequested()
    {
        com.android.internal.policy.impl.BarController r0;
        int $i0;

        r0 := @this: com.android.internal.policy.impl.BarController;

        $i0 = r0.<com.android.internal.policy.impl.BarController: int mTransientBarState>;

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isTransientShowing()
    {
        com.android.internal.policy.impl.BarController r0;
        int $i0;

        r0 := @this: com.android.internal.policy.impl.BarController;

        $i0 = r0.<com.android.internal.policy.impl.BarController: int mTransientBarState>;

        if $i0 != 2 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean setBarShowingLw(boolean)
    {
        com.android.internal.policy.impl.BarController r0;
        boolean z0, z1, z2, z3, z4;
        android.view.WindowManagerPolicy$WindowState $r1, $r2, $r3, $r4, $r5, $r6;
        int $i0, $i1;

        r0 := @this: com.android.internal.policy.impl.BarController;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.internal.policy.impl.BarController: android.view.WindowManagerPolicy$WindowState mWin>;

        if $r1 != null goto label2;

     label1:
        return 0;

     label2:
        if z0 == 0 goto label3;

        $i1 = r0.<com.android.internal.policy.impl.BarController: int mTransientBarState>;

        if $i1 != 3 goto label3;

        r0.<com.android.internal.policy.impl.BarController: boolean mPendingShow> = 1;

        return 0;

     label3:
        $r2 = r0.<com.android.internal.policy.impl.BarController: android.view.WindowManagerPolicy$WindowState mWin>;

        z1 = interfaceinvoke $r2.<android.view.WindowManagerPolicy$WindowState: boolean isVisibleLw()>();

        $r3 = r0.<com.android.internal.policy.impl.BarController: android.view.WindowManagerPolicy$WindowState mWin>;

        z2 = interfaceinvoke $r3.<android.view.WindowManagerPolicy$WindowState: boolean isAnimatingLw()>();

        if z0 == 0 goto label6;

        $r6 = r0.<com.android.internal.policy.impl.BarController: android.view.WindowManagerPolicy$WindowState mWin>;

        z3 = interfaceinvoke $r6.<android.view.WindowManagerPolicy$WindowState: boolean showLw(boolean)>(1);

     label4:
        $r5 = r0.<com.android.internal.policy.impl.BarController: android.view.WindowManagerPolicy$WindowState mWin>;

        $i0 = specialinvoke r0.<com.android.internal.policy.impl.BarController: int computeStateLw(boolean,boolean,android.view.WindowManagerPolicy$WindowState,boolean)>(z1, z2, $r5, z3);

        z4 = specialinvoke r0.<com.android.internal.policy.impl.BarController: boolean updateStateLw(int)>($i0);

        if z3 != 0 goto label5;

        if z4 == 0 goto label1;

     label5:
        return 1;

     label6:
        $r4 = r0.<com.android.internal.policy.impl.BarController: android.view.WindowManagerPolicy$WindowState mWin>;

        z3 = interfaceinvoke $r4.<android.view.WindowManagerPolicy$WindowState: boolean hideLw(boolean)>(1);

        goto label4;
    }

    public void setWindow(android.view.WindowManagerPolicy$WindowState)
    {
        com.android.internal.policy.impl.BarController r0;
        android.view.WindowManagerPolicy$WindowState r1;

        r0 := @this: com.android.internal.policy.impl.BarController;

        r1 := @parameter0: android.view.WindowManagerPolicy$WindowState;

        r0.<com.android.internal.policy.impl.BarController: android.view.WindowManagerPolicy$WindowState mWin> = r1;

        return;
    }

    public void showTransient()
    {
        com.android.internal.policy.impl.BarController r0;
        android.view.WindowManagerPolicy$WindowState $r1;

        r0 := @this: com.android.internal.policy.impl.BarController;

        $r1 = r0.<com.android.internal.policy.impl.BarController: android.view.WindowManagerPolicy$WindowState mWin>;

        if $r1 == null goto label1;

        specialinvoke r0.<com.android.internal.policy.impl.BarController: void setTransientBarState(int)>(1);

     label1:
        return;
    }

    public int updateVisibilityLw(boolean, int, int)
    {
        com.android.internal.policy.impl.BarController r0;
        boolean z0, $z1, $z2;
        int i0, i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        android.view.WindowManagerPolicy$WindowState $r1;
        long $l5;

        r0 := @this: com.android.internal.policy.impl.BarController;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = r0.<com.android.internal.policy.impl.BarController: android.view.WindowManagerPolicy$WindowState mWin>;

        if $r1 != null goto label1;

        return i1;

     label1:
        $z1 = virtualinvoke r0.<com.android.internal.policy.impl.BarController: boolean isTransientShowing()>();

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r0.<com.android.internal.policy.impl.BarController: boolean isTransientShowRequested()>();

        if $z2 == 0 goto label4;

     label2:
        if z0 == 0 goto label8;

        $i10 = r0.<com.android.internal.policy.impl.BarController: int mTransientFlag>;

        i1 = i1 | $i10;

        $i11 = r0.<com.android.internal.policy.impl.BarController: int mTransientFlag>;

        $i13 = i0 & $i11;

        if $i13 != 0 goto label3;

        $i12 = r0.<com.android.internal.policy.impl.BarController: int mUnhideFlag>;

        i1 = i1 | $i12;

     label3:
        specialinvoke r0.<com.android.internal.policy.impl.BarController: void setTransientBarState(int)>(2);

     label4:
        $i2 = r0.<com.android.internal.policy.impl.BarController: int mTransientBarState>;

        if $i2 == 0 goto label5;

        $i8 = r0.<com.android.internal.policy.impl.BarController: int mTransientFlag>;

        $i9 = i1 | $i8;

        i1 = -2 & $i9;

     label5:
        $i3 = r0.<com.android.internal.policy.impl.BarController: int mTranslucentFlag>;

        $i4 = i1 & $i3;

        if $i4 != 0 goto label6;

        $i6 = r0.<com.android.internal.policy.impl.BarController: int mTranslucentFlag>;

        $i7 = i0 & $i6;

        if $i7 == 0 goto label7;

     label6:
        $l5 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<com.android.internal.policy.impl.BarController: long mLastTranslucent> = $l5;

     label7:
        return i1;

     label8:
        specialinvoke r0.<com.android.internal.policy.impl.BarController: void setTransientBarState(int)>(0);

        goto label4;
    }

    public boolean wasRecentlyTranslucent()
    {
        com.android.internal.policy.impl.BarController r0;
        long $l0, $l1, $l2;
        byte $b3;

        r0 := @this: com.android.internal.policy.impl.BarController;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l1 = r0.<com.android.internal.policy.impl.BarController: long mLastTranslucent>;

        $l2 = $l0 - $l1;

        $b3 = $l2 cmp 1000L;

        if $b3 >= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static void <clinit>()
    {
        <com.android.internal.policy.impl.BarController: int TRANSLUCENT_ANIMATION_DELAY_MS> = 1000;

        <com.android.internal.policy.impl.BarController: int TRANSIENT_BAR_SHOW_REQUESTED> = 1;

        <com.android.internal.policy.impl.BarController: int TRANSIENT_BAR_SHOWING> = 2;

        <com.android.internal.policy.impl.BarController: int TRANSIENT_BAR_NONE> = 0;

        <com.android.internal.policy.impl.BarController: int TRANSIENT_BAR_HIDING> = 3;

        <com.android.internal.policy.impl.BarController: boolean DEBUG> = 0;

        return;
    }
}
