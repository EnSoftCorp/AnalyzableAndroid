class android.os.AsyncTask$3 extends java.util.concurrent.FutureTask
{
    final android.os.AsyncTask this$0;

    void <init>(android.os.AsyncTask, java.util.concurrent.Callable)
    {
        android.os.AsyncTask$3 r0;
        android.os.AsyncTask r1;
        java.util.concurrent.Callable r2;

        r0 := @this: android.os.AsyncTask$3;

        r1 := @parameter0: android.os.AsyncTask;

        r2 := @parameter1: java.util.concurrent.Callable;

        r0.<android.os.AsyncTask$3: android.os.AsyncTask this$0> = r1;

        specialinvoke r0.<java.util.concurrent.FutureTask: void <init>(java.util.concurrent.Callable)>(r2);

        return;
    }

    protected void done()
    {
        android.os.AsyncTask$3 r0;
        java.util.concurrent.ExecutionException r2, $r6;
        java.lang.InterruptedException r3, $r11;
        android.os.AsyncTask $r4, $r10;
        java.lang.Object $r5;
        java.lang.RuntimeException $r7;
        java.lang.Throwable $r8;
        java.util.concurrent.CancellationException $r9;

        r0 := @this: android.os.AsyncTask$3;

     label1:
        $r4 = r0.<android.os.AsyncTask$3: android.os.AsyncTask this$0>;

        $r5 = virtualinvoke r0.<android.os.AsyncTask$3: java.lang.Object get()>();

        staticinvoke <android.os.AsyncTask: void access$500(android.os.AsyncTask,java.lang.Object)>($r4, $r5);

     label2:
        return;

     label3:
        $r11 := @caughtexception;

        r3 = $r11;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>("AsyncTask", r3);

        return;

     label4:
        $r6 := @caughtexception;

        r2 = $r6;

        $r7 = new java.lang.RuntimeException;

        $r8 = virtualinvoke r2.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("An error occured while executing doInBackground()", $r8);

        throw $r7;

     label5:
        $r9 := @caughtexception;

        $r10 = r0.<android.os.AsyncTask$3: android.os.AsyncTask this$0>;

        staticinvoke <android.os.AsyncTask: void access$500(android.os.AsyncTask,java.lang.Object)>($r10, null);

        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
        catch java.util.concurrent.ExecutionException from label1 to label2 with label4;
        catch java.util.concurrent.CancellationException from label1 to label2 with label5;
    }
}
