public class com.android.org.bouncycastle.crypto.digests.OpenSSLDigest extends java.lang.Object implements com.android.org.bouncycastle.crypto.ExtendedDigest
{
    private final java.lang.String algorithm;
    private final int blockSize;
    private long ctx;
    private final long evp_md;
    private final byte[] singleByte;
    private final int size;

    private void <init>(java.lang.String, long, int, int)
    {
        com.android.org.bouncycastle.crypto.digests.OpenSSLDigest r0;
        java.lang.String r1;
        long l0;
        int i1, i2;
        byte[] $r2;

        r0 := @this: com.android.org.bouncycastle.crypto.digests.OpenSSLDigest;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = newarray (byte)[1];

        r0.<com.android.org.bouncycastle.crypto.digests.OpenSSLDigest: byte[] singleByte> = $r2;

        r0.<com.android.org.bouncycastle.crypto.digests.OpenSSLDigest: java.lang.String algorithm> = r1;

        r0.<com.android.org.bouncycastle.crypto.digests.OpenSSLDigest: long evp_md> = l0;

        r0.<com.android.org.bouncycastle.crypto.digests.OpenSSLDigest: int size> = i1;

        r0.<com.android.org.bouncycastle.crypto.digests.OpenSSLDigest: int blockSize> = i2;

        return;
    }

    void <init>(java.lang.String, long, int, int, com.android.org.bouncycastle.crypto.digests.OpenSSLDigest$1)
    {
        com.android.org.bouncycastle.crypto.digests.OpenSSLDigest r0;
        java.lang.String r1;
        long l0;
        int i1, i2;
        com.android.org.bouncycastle.crypto.digests.OpenSSLDigest$1 r2;

        r0 := @this: com.android.org.bouncycastle.crypto.digests.OpenSSLDigest;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: com.android.org.bouncycastle.crypto.digests.OpenSSLDigest$1;

        specialinvoke r0.<com.android.org.bouncycastle.crypto.digests.OpenSSLDigest: void <init>(java.lang.String,long,int,int)>(r1, l0, i1, i2);

        return;
    }

    private void free()
    {
        com.android.org.bouncycastle.crypto.digests.OpenSSLDigest r0;
        long $l0, $l2;
        byte $b1;

        r0 := @this: com.android.org.bouncycastle.crypto.digests.OpenSSLDigest;

        $l0 = r0.<com.android.org.bouncycastle.crypto.digests.OpenSSLDigest: long ctx>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $l2 = r0.<com.android.org.bouncycastle.crypto.digests.OpenSSLDigest: long ctx>;

        staticinvoke <com.android.org.conscrypt.NativeCrypto: void EVP_MD_CTX_destroy(long)>($l2);

        r0.<com.android.org.bouncycastle.crypto.digests.OpenSSLDigest: long ctx> = 0L;

     label1:
        return;
    }

    private long getCtx()
    {
        com.android.org.bouncycastle.crypto.digests.OpenSSLDigest r0;
        long $l0, $l2, $l3, $l4;
        byte $b1;

        r0 := @this: com.android.org.bouncycastle.crypto.digests.OpenSSLDigest;

        $l0 = r0.<com.android.org.bouncycastle.crypto.digests.OpenSSLDigest: long ctx>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        $l3 = r0.<com.android.org.bouncycastle.crypto.digests.OpenSSLDigest: long evp_md>;

        $l4 = staticinvoke <com.android.org.conscrypt.NativeCrypto: long EVP_DigestInit(long)>($l3);

        r0.<com.android.org.bouncycastle.crypto.digests.OpenSSLDigest: long ctx> = $l4;

     label1:
        $l2 = r0.<com.android.org.bouncycastle.crypto.digests.OpenSSLDigest: long ctx>;

        return $l2;
    }

    public int doFinal(byte[], int)
    {
        com.android.org.bouncycastle.crypto.digests.OpenSSLDigest r0;
        byte[] r1;
        int i0, i1;
        long $l2;

        r0 := @this: com.android.org.bouncycastle.crypto.digests.OpenSSLDigest;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        $l2 = specialinvoke r0.<com.android.org.bouncycastle.crypto.digests.OpenSSLDigest: long getCtx()>();

        i1 = staticinvoke <com.android.org.conscrypt.NativeCrypto: int EVP_DigestFinal(long,byte[],int)>($l2, r1, i0);

        r0.<com.android.org.bouncycastle.crypto.digests.OpenSSLDigest: long ctx> = 0L;

        virtualinvoke r0.<com.android.org.bouncycastle.crypto.digests.OpenSSLDigest: void reset()>();

        return i1;
    }

    protected void finalize() throws java.lang.Throwable
    {
        com.android.org.bouncycastle.crypto.digests.OpenSSLDigest r0;
        java.lang.Throwable r1, $r2;

        r0 := @this: com.android.org.bouncycastle.crypto.digests.OpenSSLDigest;

     label1:
        specialinvoke r0.<com.android.org.bouncycastle.crypto.digests.OpenSSLDigest: void free()>();

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.String getAlgorithmName()
    {
        com.android.org.bouncycastle.crypto.digests.OpenSSLDigest r0;
        java.lang.String $r1;

        r0 := @this: com.android.org.bouncycastle.crypto.digests.OpenSSLDigest;

        $r1 = r0.<com.android.org.bouncycastle.crypto.digests.OpenSSLDigest: java.lang.String algorithm>;

        return $r1;
    }

    public int getByteLength()
    {
        com.android.org.bouncycastle.crypto.digests.OpenSSLDigest r0;
        int $i0;

        r0 := @this: com.android.org.bouncycastle.crypto.digests.OpenSSLDigest;

        $i0 = r0.<com.android.org.bouncycastle.crypto.digests.OpenSSLDigest: int blockSize>;

        return $i0;
    }

    public int getDigestSize()
    {
        com.android.org.bouncycastle.crypto.digests.OpenSSLDigest r0;
        int $i0;

        r0 := @this: com.android.org.bouncycastle.crypto.digests.OpenSSLDigest;

        $i0 = r0.<com.android.org.bouncycastle.crypto.digests.OpenSSLDigest: int size>;

        return $i0;
    }

    public void reset()
    {
        com.android.org.bouncycastle.crypto.digests.OpenSSLDigest r0;

        r0 := @this: com.android.org.bouncycastle.crypto.digests.OpenSSLDigest;

        specialinvoke r0.<com.android.org.bouncycastle.crypto.digests.OpenSSLDigest: void free()>();

        return;
    }

    public void update(byte)
    {
        com.android.org.bouncycastle.crypto.digests.OpenSSLDigest r0;
        byte b0;
        byte[] $r1, $r2;

        r0 := @this: com.android.org.bouncycastle.crypto.digests.OpenSSLDigest;

        b0 := @parameter0: byte;

        $r1 = r0.<com.android.org.bouncycastle.crypto.digests.OpenSSLDigest: byte[] singleByte>;

        $r1[0] = b0;

        $r2 = r0.<com.android.org.bouncycastle.crypto.digests.OpenSSLDigest: byte[] singleByte>;

        virtualinvoke r0.<com.android.org.bouncycastle.crypto.digests.OpenSSLDigest: void update(byte[],int,int)>($r2, 0, 1);

        return;
    }

    public void update(byte[], int, int)
    {
        com.android.org.bouncycastle.crypto.digests.OpenSSLDigest r0;
        byte[] r1;
        int i0, i1;
        long $l2;

        r0 := @this: com.android.org.bouncycastle.crypto.digests.OpenSSLDigest;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $l2 = specialinvoke r0.<com.android.org.bouncycastle.crypto.digests.OpenSSLDigest: long getCtx()>();

        staticinvoke <com.android.org.conscrypt.NativeCrypto: void EVP_DigestUpdate(long,byte[],int,int)>($l2, r1, i0, i1);

        return;
    }
}
