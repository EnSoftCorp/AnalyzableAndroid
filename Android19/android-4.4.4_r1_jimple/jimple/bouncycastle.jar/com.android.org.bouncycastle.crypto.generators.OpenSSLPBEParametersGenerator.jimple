public class com.android.org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator extends com.android.org.bouncycastle.crypto.PBEParametersGenerator
{
    private com.android.org.bouncycastle.crypto.Digest digest;

    public void <init>()
    {
        com.android.org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator r0;
        com.android.org.bouncycastle.crypto.Digest $r1;

        r0 := @this: com.android.org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator;

        specialinvoke r0.<com.android.org.bouncycastle.crypto.PBEParametersGenerator: void <init>()>();

        $r1 = staticinvoke <com.android.org.bouncycastle.crypto.digests.AndroidDigestFactory: com.android.org.bouncycastle.crypto.Digest getMD5()>();

        r0.<com.android.org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator: com.android.org.bouncycastle.crypto.Digest digest> = $r1;

        return;
    }

    private byte[] generateDerivedKey(int)
    {
        com.android.org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i8;
        byte[] r1, r2, $r4, $r5, $r7, $r8;
        com.android.org.bouncycastle.crypto.Digest $r3, $r6, $r9, $r10, $r11, $r12;

        r0 := @this: com.android.org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator: com.android.org.bouncycastle.crypto.Digest digest>;

        $i3 = interfaceinvoke $r3.<com.android.org.bouncycastle.crypto.Digest: int getDigestSize()>();

        r1 = newarray (byte)[$i3];

        r2 = newarray (byte)[i0];

        i1 = 0;

     label1:
        $r6 = r0.<com.android.org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator: com.android.org.bouncycastle.crypto.Digest digest>;

        $r5 = r0.<com.android.org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator: byte[] password>;

        $r4 = r0.<com.android.org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator: byte[] password>;

        $i4 = lengthof $r4;

        interfaceinvoke $r6.<com.android.org.bouncycastle.crypto.Digest: void update(byte[],int,int)>($r5, 0, $i4);

        $r10 = r0.<com.android.org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator: com.android.org.bouncycastle.crypto.Digest digest>;

        $r8 = r0.<com.android.org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator: byte[] salt>;

        $r7 = r0.<com.android.org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator: byte[] salt>;

        $i5 = lengthof $r7;

        interfaceinvoke $r10.<com.android.org.bouncycastle.crypto.Digest: void update(byte[],int,int)>($r8, 0, $i5);

        $r9 = r0.<com.android.org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator: com.android.org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r9.<com.android.org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>(r1, 0);

        $i6 = lengthof r1;

        if i0 <= $i6 goto label3;

        i2 = lengthof r1;

     label2:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r2, i1, i2);

        i1 = i1 + i2;

        i0 = i0 - i2;

        if i0 != 0 goto label4;

        return r2;

     label3:
        i2 = i0;

        goto label2;

     label4:
        $r11 = r0.<com.android.org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator: com.android.org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r11.<com.android.org.bouncycastle.crypto.Digest: void reset()>();

        $r12 = r0.<com.android.org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator: com.android.org.bouncycastle.crypto.Digest digest>;

        $i8 = lengthof r1;

        interfaceinvoke $r12.<com.android.org.bouncycastle.crypto.Digest: void update(byte[],int,int)>(r1, 0, $i8);

        goto label1;
    }

    public com.android.org.bouncycastle.crypto.CipherParameters generateDerivedMacParameters(int)
    {
        com.android.org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator r0;
        int i0;
        com.android.org.bouncycastle.crypto.CipherParameters $r1;

        r0 := @this: com.android.org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator: com.android.org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int)>(i0);

        return $r1;
    }

    public com.android.org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int)
    {
        com.android.org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator r0;
        int i0, i1;
        com.android.org.bouncycastle.crypto.params.KeyParameter $r1;
        byte[] $r2;

        r0 := @this: com.android.org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator;

        i0 := @parameter0: int;

        i1 = i0 / 8;

        $r1 = new com.android.org.bouncycastle.crypto.params.KeyParameter;

        $r2 = specialinvoke r0.<com.android.org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator: byte[] generateDerivedKey(int)>(i1);

        specialinvoke $r1.<com.android.org.bouncycastle.crypto.params.KeyParameter: void <init>(byte[],int,int)>($r2, 0, i1);

        return $r1;
    }

    public com.android.org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int, int)
    {
        com.android.org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator r0;
        int i0, i1, i2, i3, $i4;
        byte[] r1;
        com.android.org.bouncycastle.crypto.params.ParametersWithIV $r2;
        com.android.org.bouncycastle.crypto.params.KeyParameter $r3;

        r0 := @this: com.android.org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = i0 / 8;

        i3 = i1 / 8;

        $i4 = i2 + i3;

        r1 = specialinvoke r0.<com.android.org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator: byte[] generateDerivedKey(int)>($i4);

        $r2 = new com.android.org.bouncycastle.crypto.params.ParametersWithIV;

        $r3 = new com.android.org.bouncycastle.crypto.params.KeyParameter;

        specialinvoke $r3.<com.android.org.bouncycastle.crypto.params.KeyParameter: void <init>(byte[],int,int)>(r1, 0, i2);

        specialinvoke $r2.<com.android.org.bouncycastle.crypto.params.ParametersWithIV: void <init>(com.android.org.bouncycastle.crypto.CipherParameters,byte[],int,int)>($r3, r1, i2, i3);

        return $r2;
    }

    public void init(byte[], byte[])
    {
        com.android.org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator r0;
        byte[] r1, r2;

        r0 := @this: com.android.org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator;

        r1 := @parameter0: byte[];

        r2 := @parameter1: byte[];

        specialinvoke r0.<com.android.org.bouncycastle.crypto.PBEParametersGenerator: void init(byte[],byte[],int)>(r1, r2, 1);

        return;
    }
}
