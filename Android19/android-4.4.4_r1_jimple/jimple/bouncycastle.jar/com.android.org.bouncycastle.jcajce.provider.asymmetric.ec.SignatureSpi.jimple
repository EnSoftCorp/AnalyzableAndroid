public class com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi extends com.android.org.bouncycastle.jcajce.provider.asymmetric.util.DSABase
{

    void <init>(com.android.org.bouncycastle.crypto.Digest, com.android.org.bouncycastle.crypto.DSA, com.android.org.bouncycastle.jcajce.provider.asymmetric.util.DSAEncoder)
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi r0;
        com.android.org.bouncycastle.crypto.Digest r1;
        com.android.org.bouncycastle.crypto.DSA r2;
        com.android.org.bouncycastle.jcajce.provider.asymmetric.util.DSAEncoder r3;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi;

        r1 := @parameter0: com.android.org.bouncycastle.crypto.Digest;

        r2 := @parameter1: com.android.org.bouncycastle.crypto.DSA;

        r3 := @parameter2: com.android.org.bouncycastle.jcajce.provider.asymmetric.util.DSAEncoder;

        specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.util.DSABase: void <init>(com.android.org.bouncycastle.crypto.Digest,com.android.org.bouncycastle.crypto.DSA,com.android.org.bouncycastle.jcajce.provider.asymmetric.util.DSAEncoder)>(r1, r2, r3);

        return;
    }

    protected void engineInitSign(java.security.PrivateKey) throws java.security.InvalidKeyException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi r0;
        java.security.PrivateKey r1;
        com.android.org.bouncycastle.crypto.params.AsymmetricKeyParameter r2;
        com.android.org.bouncycastle.crypto.Digest $r3;
        java.security.SecureRandom $r4, $r7;
        com.android.org.bouncycastle.crypto.DSA $r5, $r8;
        com.android.org.bouncycastle.crypto.params.ParametersWithRandom $r6;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi;

        r1 := @parameter0: java.security.PrivateKey;

        r2 = staticinvoke <com.android.org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil: com.android.org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePrivateKeyParameter(java.security.PrivateKey)>(r1);

        $r3 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi: com.android.org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r3.<com.android.org.bouncycastle.crypto.Digest: void reset()>();

        $r4 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi: java.security.SecureRandom appRandom>;

        if $r4 == null goto label1;

        $r8 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi: com.android.org.bouncycastle.crypto.DSA signer>;

        $r6 = new com.android.org.bouncycastle.crypto.params.ParametersWithRandom;

        $r7 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi: java.security.SecureRandom appRandom>;

        specialinvoke $r6.<com.android.org.bouncycastle.crypto.params.ParametersWithRandom: void <init>(com.android.org.bouncycastle.crypto.CipherParameters,java.security.SecureRandom)>(r2, $r7);

        interfaceinvoke $r8.<com.android.org.bouncycastle.crypto.DSA: void init(boolean,com.android.org.bouncycastle.crypto.CipherParameters)>(1, $r6);

        return;

     label1:
        $r5 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi: com.android.org.bouncycastle.crypto.DSA signer>;

        interfaceinvoke $r5.<com.android.org.bouncycastle.crypto.DSA: void init(boolean,com.android.org.bouncycastle.crypto.CipherParameters)>(1, r2);

        return;
    }

    protected void engineInitVerify(java.security.PublicKey) throws java.security.InvalidKeyException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi r0;
        java.security.PublicKey r1;
        com.android.org.bouncycastle.crypto.params.AsymmetricKeyParameter r2;
        com.android.org.bouncycastle.crypto.Digest $r3;
        com.android.org.bouncycastle.crypto.DSA $r4;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi;

        r1 := @parameter0: java.security.PublicKey;

        r2 = staticinvoke <com.android.org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil: com.android.org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey)>(r1);

        $r3 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi: com.android.org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r3.<com.android.org.bouncycastle.crypto.Digest: void reset()>();

        $r4 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi: com.android.org.bouncycastle.crypto.DSA signer>;

        interfaceinvoke $r4.<com.android.org.bouncycastle.crypto.DSA: void init(boolean,com.android.org.bouncycastle.crypto.CipherParameters)>(0, r2);

        return;
    }
}
