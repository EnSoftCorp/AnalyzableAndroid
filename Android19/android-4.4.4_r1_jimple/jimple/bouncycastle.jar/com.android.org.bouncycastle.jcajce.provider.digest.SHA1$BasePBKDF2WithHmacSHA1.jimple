public class com.android.org.bouncycastle.jcajce.provider.digest.SHA1$BasePBKDF2WithHmacSHA1 extends com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseSecretKeyFactory
{
    private int scheme;

    public void <init>(java.lang.String, int)
    {
        com.android.org.bouncycastle.jcajce.provider.digest.SHA1$BasePBKDF2WithHmacSHA1 r0;
        java.lang.String r1;
        int i0;
        com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier $r2;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.digest.SHA1$BasePBKDF2WithHmacSHA1;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = <com.android.org.bouncycastle.asn1.pkcs.PKCSObjectIdentifiers: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier id_PBKDF2>;

        specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseSecretKeyFactory: void <init>(java.lang.String,com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier)>(r1, $r2);

        r0.<com.android.org.bouncycastle.jcajce.provider.digest.SHA1$BasePBKDF2WithHmacSHA1: int scheme> = i0;

        return;
    }

    protected javax.crypto.SecretKey engineGenerateSecret(java.security.spec.KeySpec) throws java.security.spec.InvalidKeySpecException
    {
        com.android.org.bouncycastle.jcajce.provider.digest.SHA1$BasePBKDF2WithHmacSHA1 r0;
        java.security.spec.KeySpec r1;
        javax.crypto.spec.PBEKeySpec r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        com.android.org.bouncycastle.crypto.CipherParameters r3;
        boolean $z0;
        byte[] $r5;
        char[] $r6;
        com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier $r8;
        java.lang.String $r10, $r14, $r19;
        java.lang.StringBuilder $r13, $r15, $r18, $r20, r23, r25;
        java.security.spec.InvalidKeySpecException r22, r24, r26, r29;
        java.lang.IllegalArgumentException r27;
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey r28;
        javax.crypto.SecretKey r30;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.digest.SHA1$BasePBKDF2WithHmacSHA1;

        r1 := @parameter0: java.security.spec.KeySpec;

        $z0 = r1 instanceof javax.crypto.spec.PBEKeySpec;

        if $z0 == 0 goto label5;

        r2 = (javax.crypto.spec.PBEKeySpec) r1;

        $r5 = virtualinvoke r2.<javax.crypto.spec.PBEKeySpec: byte[] getSalt()>();

        if $r5 != null goto label1;

        r22 = new java.security.spec.InvalidKeySpecException;

        specialinvoke r22.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>("missing required salt");

        throw r22;

     label1:
        $i1 = virtualinvoke r2.<javax.crypto.spec.PBEKeySpec: int getIterationCount()>();

        if $i1 > 0 goto label2;

        r24 = new java.security.spec.InvalidKeySpecException;

        r23 = new java.lang.StringBuilder;

        specialinvoke r23.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("positive iteration count required: ");

        $i7 = virtualinvoke r2.<javax.crypto.spec.PBEKeySpec: int getIterationCount()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r24.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>($r19);

        throw r24;

     label2:
        $i2 = virtualinvoke r2.<javax.crypto.spec.PBEKeySpec: int getKeyLength()>();

        if $i2 > 0 goto label3;

        r26 = new java.security.spec.InvalidKeySpecException;

        r25 = new java.lang.StringBuilder;

        specialinvoke r25.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("positive key length required: ");

        $i6 = virtualinvoke r2.<javax.crypto.spec.PBEKeySpec: int getKeyLength()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r26.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>($r14);

        throw r26;

     label3:
        $r6 = virtualinvoke r2.<javax.crypto.spec.PBEKeySpec: char[] getPassword()>();

        $i3 = lengthof $r6;

        if $i3 != 0 goto label4;

        r27 = new java.lang.IllegalArgumentException;

        specialinvoke r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("password empty");

        throw r27;

     label4:
        i0 = virtualinvoke r2.<javax.crypto.spec.PBEKeySpec: int getKeyLength()>();

        $i4 = r0.<com.android.org.bouncycastle.jcajce.provider.digest.SHA1$BasePBKDF2WithHmacSHA1: int scheme>;

        r3 = staticinvoke <com.android.org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util: com.android.org.bouncycastle.crypto.CipherParameters makePBEMacParameters(javax.crypto.spec.PBEKeySpec,int,int,int)>(r2, $i4, 1, i0);

        r28 = new com.android.org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey;

        $r10 = r0.<com.android.org.bouncycastle.jcajce.provider.digest.SHA1$BasePBKDF2WithHmacSHA1: java.lang.String algName>;

        $r8 = r0.<com.android.org.bouncycastle.jcajce.provider.digest.SHA1$BasePBKDF2WithHmacSHA1: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier algOid>;

        $i5 = r0.<com.android.org.bouncycastle.jcajce.provider.digest.SHA1$BasePBKDF2WithHmacSHA1: int scheme>;

        specialinvoke r28.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey: void <init>(java.lang.String,com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier,int,int,int,int,javax.crypto.spec.PBEKeySpec,com.android.org.bouncycastle.crypto.CipherParameters)>($r10, $r8, $i5, 1, i0, -1, r2, r3);

        r30 = (javax.crypto.SecretKey) r28;

        return r30;

     label5:
        r29 = new java.security.spec.InvalidKeySpecException;

        specialinvoke r29.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>("Invalid KeySpec");

        throw r29;
    }
}
