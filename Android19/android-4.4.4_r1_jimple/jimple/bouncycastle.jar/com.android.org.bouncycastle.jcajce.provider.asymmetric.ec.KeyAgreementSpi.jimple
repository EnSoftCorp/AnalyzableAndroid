public class com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi extends javax.crypto.KeyAgreementSpi
{
    private static final java.util.Hashtable algorithms;
    private static final com.android.org.bouncycastle.asn1.x9.X9IntegerConverter converter;
    private com.android.org.bouncycastle.crypto.BasicAgreement agreement;
    private java.lang.String kaAlgorithm;
    private com.android.org.bouncycastle.crypto.params.ECDomainParameters parameters;
    private java.math.BigInteger result;

    static void <clinit>()
    {
        java.lang.Integer r0, r1, r2;
        com.android.org.bouncycastle.asn1.x9.X9IntegerConverter $r3;
        java.util.Hashtable $r4, $r6, $r10, $r13, $r17, $r21, $r25, $r32;
        com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier $r5, $r9, $r14, $r18, $r22, $r26, $r31;
        java.lang.String $r7, $r11, $r16, $r20, $r24, $r28, $r29;

        $r3 = new com.android.org.bouncycastle.asn1.x9.X9IntegerConverter;

        specialinvoke $r3.<com.android.org.bouncycastle.asn1.x9.X9IntegerConverter: void <init>()>();

        <com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi: com.android.org.bouncycastle.asn1.x9.X9IntegerConverter converter> = $r3;

        $r4 = new java.util.Hashtable;

        specialinvoke $r4.<java.util.Hashtable: void <init>()>();

        <com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi: java.util.Hashtable algorithms> = $r4;

        r0 = staticinvoke <com.android.org.bouncycastle.util.Integers: java.lang.Integer valueOf(int)>(128);

        r1 = staticinvoke <com.android.org.bouncycastle.util.Integers: java.lang.Integer valueOf(int)>(192);

        r2 = staticinvoke <com.android.org.bouncycastle.util.Integers: java.lang.Integer valueOf(int)>(256);

        $r6 = <com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi: java.util.Hashtable algorithms>;

        $r5 = <com.android.org.bouncycastle.asn1.nist.NISTObjectIdentifiers: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier id_aes128_CBC>;

        $r7 = virtualinvoke $r5.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        virtualinvoke $r6.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, r0);

        $r10 = <com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi: java.util.Hashtable algorithms>;

        $r9 = <com.android.org.bouncycastle.asn1.nist.NISTObjectIdentifiers: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier id_aes192_CBC>;

        $r11 = virtualinvoke $r9.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        virtualinvoke $r10.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, r1);

        $r13 = <com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi: java.util.Hashtable algorithms>;

        $r14 = <com.android.org.bouncycastle.asn1.nist.NISTObjectIdentifiers: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier id_aes256_CBC>;

        $r16 = virtualinvoke $r14.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        virtualinvoke $r13.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, r2);

        $r17 = <com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi: java.util.Hashtable algorithms>;

        $r18 = <com.android.org.bouncycastle.asn1.nist.NISTObjectIdentifiers: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier id_aes128_wrap>;

        $r20 = virtualinvoke $r18.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        virtualinvoke $r17.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, r0);

        $r21 = <com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi: java.util.Hashtable algorithms>;

        $r22 = <com.android.org.bouncycastle.asn1.nist.NISTObjectIdentifiers: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier id_aes192_wrap>;

        $r24 = virtualinvoke $r22.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        virtualinvoke $r21.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, r1);

        $r25 = <com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi: java.util.Hashtable algorithms>;

        $r26 = <com.android.org.bouncycastle.asn1.nist.NISTObjectIdentifiers: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier id_aes256_wrap>;

        $r28 = virtualinvoke $r26.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        virtualinvoke $r25.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r28, r2);

        $r32 = <com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi: java.util.Hashtable algorithms>;

        $r31 = <com.android.org.bouncycastle.asn1.pkcs.PKCSObjectIdentifiers: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier id_alg_CMS3DESwrap>;

        $r29 = virtualinvoke $r31.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        virtualinvoke $r32.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r29, r1);

        return;
    }

    protected void <init>(java.lang.String, com.android.org.bouncycastle.crypto.BasicAgreement, com.android.org.bouncycastle.crypto.DerivationFunction)
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi r0;
        java.lang.String r1;
        com.android.org.bouncycastle.crypto.BasicAgreement r2;
        com.android.org.bouncycastle.crypto.DerivationFunction r3;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.org.bouncycastle.crypto.BasicAgreement;

        r3 := @parameter2: com.android.org.bouncycastle.crypto.DerivationFunction;

        specialinvoke r0.<javax.crypto.KeyAgreementSpi: void <init>()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi: java.lang.String kaAlgorithm> = r1;

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi: com.android.org.bouncycastle.crypto.BasicAgreement agreement> = r2;

        return;
    }

    private byte[] bigIntToBytes(java.math.BigInteger)
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi r0;
        java.math.BigInteger r1;
        com.android.org.bouncycastle.crypto.params.ECDomainParameters $r2;
        com.android.org.bouncycastle.asn1.x9.X9IntegerConverter $r3, $r4;
        com.android.org.bouncycastle.math.ec.ECPoint $r5;
        com.android.org.bouncycastle.math.ec.ECFieldElement $r6;
        int $i0;
        byte[] $r7;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi;

        r1 := @parameter0: java.math.BigInteger;

        $r3 = <com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi: com.android.org.bouncycastle.asn1.x9.X9IntegerConverter converter>;

        $r4 = <com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi: com.android.org.bouncycastle.asn1.x9.X9IntegerConverter converter>;

        $r2 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi: com.android.org.bouncycastle.crypto.params.ECDomainParameters parameters>;

        $r5 = virtualinvoke $r2.<com.android.org.bouncycastle.crypto.params.ECDomainParameters: com.android.org.bouncycastle.math.ec.ECPoint getG()>();

        $r6 = virtualinvoke $r5.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECFieldElement getX()>();

        $i0 = virtualinvoke $r4.<com.android.org.bouncycastle.asn1.x9.X9IntegerConverter: int getByteLength(com.android.org.bouncycastle.math.ec.ECFieldElement)>($r6);

        $r7 = virtualinvoke $r3.<com.android.org.bouncycastle.asn1.x9.X9IntegerConverter: byte[] integerToBytes(java.math.BigInteger,int)>(r1, $i0);

        return $r7;
    }

    private static java.lang.String getSimpleName(java.lang.Class)
    {
        java.lang.Class r0;
        java.lang.String r1, $r2;
        int $i0, $i1;

        r0 := @parameter0: java.lang.Class;

        r1 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int)>(46);

        $i1 = 1 + $i0;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i1);

        return $r2;
    }

    private void initFromKey(java.security.Key) throws java.security.InvalidKeyException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi r0;
        java.security.Key r1;
        com.android.org.bouncycastle.crypto.params.ECPrivateKeyParameters r2;
        boolean $z0;
        java.security.PrivateKey $r3;
        com.android.org.bouncycastle.crypto.params.AsymmetricKeyParameter $r4;
        com.android.org.bouncycastle.crypto.params.ECDomainParameters $r5;
        com.android.org.bouncycastle.crypto.BasicAgreement $r6;
        java.security.InvalidKeyException $r7;
        java.lang.StringBuilder $r8, $r10, $r11, $r13, $r14;
        java.lang.String $r9, $r12, $r15;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi;

        r1 := @parameter0: java.security.Key;

        $z0 = r1 instanceof java.security.PrivateKey;

        if $z0 != 0 goto label1;

        $r7 = new java.security.InvalidKeyException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi: java.lang.String kaAlgorithm>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" key agreement requires ");

        $r12 = staticinvoke <com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi: java.lang.String getSimpleName(java.lang.Class)>(class "com/android/org/bouncycastle/jce/interfaces/ECPrivateKey");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for initialisation");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.security.InvalidKeyException: void <init>(java.lang.String)>($r15);

        throw $r7;

     label1:
        $r3 = (java.security.PrivateKey) r1;

        $r4 = staticinvoke <com.android.org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil: com.android.org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePrivateKeyParameter(java.security.PrivateKey)>($r3);

        r2 = (com.android.org.bouncycastle.crypto.params.ECPrivateKeyParameters) $r4;

        $r5 = virtualinvoke r2.<com.android.org.bouncycastle.crypto.params.ECPrivateKeyParameters: com.android.org.bouncycastle.crypto.params.ECDomainParameters getParameters()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi: com.android.org.bouncycastle.crypto.params.ECDomainParameters parameters> = $r5;

        $r6 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi: com.android.org.bouncycastle.crypto.BasicAgreement agreement>;

        interfaceinvoke $r6.<com.android.org.bouncycastle.crypto.BasicAgreement: void init(com.android.org.bouncycastle.crypto.CipherParameters)>(r2);

        return;
    }

    protected java.security.Key engineDoPhase(java.security.Key, boolean) throws java.security.InvalidKeyException, java.lang.IllegalStateException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi r0;
        java.security.Key r1;
        boolean z0, $z1;
        com.android.org.bouncycastle.crypto.params.AsymmetricKeyParameter r2;
        com.android.org.bouncycastle.crypto.params.ECDomainParameters $r3;
        java.security.PublicKey $r4;
        com.android.org.bouncycastle.crypto.BasicAgreement $r5;
        java.math.BigInteger $r6;
        java.security.InvalidKeyException $r7;
        java.lang.StringBuilder $r8, $r10, $r11, $r13, $r14, $r18, $r19, $r20, $r24, $r25, $r26;
        java.lang.String $r9, $r12, $r16, $r17, $r22, $r23, $r27;
        java.lang.IllegalStateException $r15, $r21;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi;

        r1 := @parameter0: java.security.Key;

        z0 := @parameter1: boolean;

        $r3 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi: com.android.org.bouncycastle.crypto.params.ECDomainParameters parameters>;

        if $r3 != null goto label1;

        $r21 = new java.lang.IllegalStateException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r23 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi: java.lang.String kaAlgorithm>;

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not initialised.");

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r27);

        throw $r21;

     label1:
        if z0 != 0 goto label2;

        $r15 = new java.lang.IllegalStateException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r17 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi: java.lang.String kaAlgorithm>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" can only be between two parties.");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r22);

        throw $r15;

     label2:
        $z1 = r1 instanceof java.security.PublicKey;

        if $z1 != 0 goto label3;

        $r7 = new java.security.InvalidKeyException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi: java.lang.String kaAlgorithm>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" key agreement requires ");

        $r12 = staticinvoke <com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi: java.lang.String getSimpleName(java.lang.Class)>(class "com/android/org/bouncycastle/jce/interfaces/ECPublicKey");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for doPhase");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.security.InvalidKeyException: void <init>(java.lang.String)>($r16);

        throw $r7;

     label3:
        $r4 = (java.security.PublicKey) r1;

        r2 = staticinvoke <com.android.org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil: com.android.org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey)>($r4);

        $r5 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi: com.android.org.bouncycastle.crypto.BasicAgreement agreement>;

        $r6 = interfaceinvoke $r5.<com.android.org.bouncycastle.crypto.BasicAgreement: java.math.BigInteger calculateAgreement(com.android.org.bouncycastle.crypto.CipherParameters)>(r2);

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi: java.math.BigInteger result> = $r6;

        return null;
    }

    protected int engineGenerateSecret(byte[], int) throws java.lang.IllegalStateException, javax.crypto.ShortBufferException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi r0;
        byte[] r1, r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $r5, $r10;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, r11;
        javax.crypto.ShortBufferException r12;
        java.lang.Throwable r13;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        r2 = virtualinvoke r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi: byte[] engineGenerateSecret()>();

        $i1 = lengthof r1;

        $i3 = $i1 - i0;

        $i2 = lengthof r2;

        if $i3 >= $i2 goto label1;

        r12 = new javax.crypto.ShortBufferException;

        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi: java.lang.String kaAlgorithm>;

        $r6 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" key agreement: need ");

        $i6 = lengthof r2;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r12.<javax.crypto.ShortBufferException: void <init>(java.lang.String)>($r10);

        r13 = (java.lang.Throwable) r12;

        throw r13;

     label1:
        $i4 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r1, i0, $i4);

        $i5 = lengthof r2;

        return $i5;
    }

    protected javax.crypto.SecretKey engineGenerateSecret(java.lang.String) throws java.security.NoSuchAlgorithmException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi r0;
        java.lang.String r1;
        javax.crypto.spec.SecretKeySpec $r2;
        java.math.BigInteger $r3;
        byte[] $r4;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi;

        r1 := @parameter0: java.lang.String;

        $r2 = new javax.crypto.spec.SecretKeySpec;

        $r3 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi: java.math.BigInteger result>;

        $r4 = specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi: byte[] bigIntToBytes(java.math.BigInteger)>($r3);

        specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, r1);

        return $r2;
    }

    protected byte[] engineGenerateSecret() throws java.lang.IllegalStateException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi r0;
        java.math.BigInteger $r1;
        byte[] $r2;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi;

        $r1 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi: java.math.BigInteger result>;

        $r2 = specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi: byte[] bigIntToBytes(java.math.BigInteger)>($r1);

        return $r2;
    }

    protected void engineInit(java.security.Key, java.security.SecureRandom) throws java.security.InvalidKeyException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi r0;
        java.security.Key r1;
        java.security.SecureRandom r2;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi;

        r1 := @parameter0: java.security.Key;

        r2 := @parameter1: java.security.SecureRandom;

        specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi: void initFromKey(java.security.Key)>(r1);

        return;
    }

    protected void engineInit(java.security.Key, java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi r0;
        java.security.Key r1;
        java.security.spec.AlgorithmParameterSpec r2;
        java.security.SecureRandom r3;
        java.security.InvalidAlgorithmParameterException $r4;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi;

        r1 := @parameter0: java.security.Key;

        r2 := @parameter1: java.security.spec.AlgorithmParameterSpec;

        r3 := @parameter2: java.security.SecureRandom;

        if r2 == null goto label1;

        $r4 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r4.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("No algorithm parameters supported");

        throw $r4;

     label1:
        specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi: void initFromKey(java.security.Key)>(r1);

        return;
    }
}
