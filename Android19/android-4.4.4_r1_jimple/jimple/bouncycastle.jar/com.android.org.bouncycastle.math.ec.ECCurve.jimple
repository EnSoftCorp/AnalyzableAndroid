public abstract class com.android.org.bouncycastle.math.ec.ECCurve extends java.lang.Object
{
    com.android.org.bouncycastle.math.ec.ECFieldElement a;
    com.android.org.bouncycastle.math.ec.ECFieldElement b;

    public void <init>()
    {
        com.android.org.bouncycastle.math.ec.ECCurve r0;

        r0 := @this: com.android.org.bouncycastle.math.ec.ECCurve;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.math.BigInteger fromArray(byte[], int, int)
    {
        byte[] r0, r1;
        int i0, i1;
        java.math.BigInteger $r2;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = newarray (byte)[i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, i0, r1, 0, i1);

        $r2 = new java.math.BigInteger;

        specialinvoke $r2.<java.math.BigInteger: void <init>(int,byte[])>(1, r1);

        return $r2;
    }

    public abstract com.android.org.bouncycastle.math.ec.ECPoint createPoint(java.math.BigInteger, java.math.BigInteger, boolean);

    public com.android.org.bouncycastle.math.ec.ECPoint decodePoint(byte[])
    {
        com.android.org.bouncycastle.math.ec.ECCurve r0;
        byte[] r1;
        int i0, $i1, $i2, $i5, $i6, $i7, $i8, $i9, $i10, $i13;
        byte $b3, $b4, $b11, $b12;
        java.lang.IllegalArgumentException $r2, $r10, $r14, $r15;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r7;
        java.math.BigInteger $r8, $r9, $r13;
        com.android.org.bouncycastle.math.ec.ECPoint $r11, $r12, $r16;

        r0 := @this: com.android.org.bouncycastle.math.ec.ECCurve;

        r1 := @parameter0: byte[];

        $i1 = virtualinvoke r0.<com.android.org.bouncycastle.math.ec.ECCurve: int getFieldSize()>();

        $i2 = 7 + $i1;

        i0 = $i2 / 8;

        $b3 = r1[0];

        tableswitch($b3)
        {
            case 0: goto label2;
            case 1: goto label1;
            case 2: goto label4;
            case 3: goto label4;
            case 4: goto label6;
            case 5: goto label1;
            case 6: goto label6;
            case 7: goto label6;
            default: goto label1;
        };

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid point encoding 0x");

        $b4 = r1[0];

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>($b4, 16);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label2:
        $i13 = lengthof r1;

        if $i13 == 1 goto label3;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Incorrect length for infinity encoding");

        throw $r15;

     label3:
        $r16 = virtualinvoke r0.<com.android.org.bouncycastle.math.ec.ECCurve: com.android.org.bouncycastle.math.ec.ECPoint getInfinity()>();

        return $r16;

     label4:
        $i9 = lengthof r1;

        $i10 = i0 + 1;

        if $i9 == $i10 goto label5;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Incorrect length for compressed encoding");

        throw $r14;

     label5:
        $b12 = r1[0];

        $b11 = 1 & $b12;

        $r13 = staticinvoke <com.android.org.bouncycastle.math.ec.ECCurve: java.math.BigInteger fromArray(byte[],int,int)>(r1, 1, i0);

        $r12 = virtualinvoke r0.<com.android.org.bouncycastle.math.ec.ECCurve: com.android.org.bouncycastle.math.ec.ECPoint decompressPoint(int,java.math.BigInteger)>($b11, $r13);

        return $r12;

     label6:
        $i7 = lengthof r1;

        $i5 = i0 * 2;

        $i6 = 1 + $i5;

        if $i7 == $i6 goto label7;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Incorrect length for uncompressed/hybrid encoding");

        throw $r10;

     label7:
        $r8 = staticinvoke <com.android.org.bouncycastle.math.ec.ECCurve: java.math.BigInteger fromArray(byte[],int,int)>(r1, 1, i0);

        $i8 = i0 + 1;

        $r9 = staticinvoke <com.android.org.bouncycastle.math.ec.ECCurve: java.math.BigInteger fromArray(byte[],int,int)>(r1, $i8, i0);

        $r11 = virtualinvoke r0.<com.android.org.bouncycastle.math.ec.ECCurve: com.android.org.bouncycastle.math.ec.ECPoint createPoint(java.math.BigInteger,java.math.BigInteger,boolean)>($r8, $r9, 0);

        return $r11;
    }

    protected abstract com.android.org.bouncycastle.math.ec.ECPoint decompressPoint(int, java.math.BigInteger);

    public abstract com.android.org.bouncycastle.math.ec.ECFieldElement fromBigInteger(java.math.BigInteger);

    public com.android.org.bouncycastle.math.ec.ECFieldElement getA()
    {
        com.android.org.bouncycastle.math.ec.ECCurve r0;
        com.android.org.bouncycastle.math.ec.ECFieldElement $r1;

        r0 := @this: com.android.org.bouncycastle.math.ec.ECCurve;

        $r1 = r0.<com.android.org.bouncycastle.math.ec.ECCurve: com.android.org.bouncycastle.math.ec.ECFieldElement a>;

        return $r1;
    }

    public com.android.org.bouncycastle.math.ec.ECFieldElement getB()
    {
        com.android.org.bouncycastle.math.ec.ECCurve r0;
        com.android.org.bouncycastle.math.ec.ECFieldElement $r1;

        r0 := @this: com.android.org.bouncycastle.math.ec.ECCurve;

        $r1 = r0.<com.android.org.bouncycastle.math.ec.ECCurve: com.android.org.bouncycastle.math.ec.ECFieldElement b>;

        return $r1;
    }

    public abstract int getFieldSize();

    public abstract com.android.org.bouncycastle.math.ec.ECPoint getInfinity();
}
