public abstract class android.test.ProviderTestCase2 extends android.test.AndroidTestCase
{
    private android.content.ContentProvider mProvider;
    java.lang.String mProviderAuthority;
    java.lang.Class mProviderClass;
    private android.test.IsolatedContext mProviderContext;
    private android.test.mock.MockContentResolver mResolver;

    public void <init>(java.lang.Class, java.lang.String)
    {
        android.test.ProviderTestCase2 r0;
        java.lang.Class r1;
        java.lang.String r2;

        r0 := @this: android.test.ProviderTestCase2;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<android.test.AndroidTestCase: void <init>()>();

        r0.<android.test.ProviderTestCase2: java.lang.Class mProviderClass> = r1;

        r0.<android.test.ProviderTestCase2: java.lang.String mProviderAuthority> = r2;

        return;
    }

    public static android.content.ContentResolver newResolverWithContentProviderFromSql(android.content.Context, java.lang.String, java.lang.Class, java.lang.String, java.lang.String, int, java.lang.String) throws java.lang.IllegalAccessException, java.lang.InstantiationException
    {
        android.content.Context r0;
        java.lang.String r1, r3, r4, r5;
        java.lang.Class r2;
        int i0;
        android.test.mock.MockContentResolver r6, $r9;
        android.test.IsolatedContext r7, $r10;
        android.content.ContentProvider r8;
        android.test.RenamingDelegatingContext $r11;
        android.test.mock.MockContext $r12;
        java.lang.Object $r13;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Class;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        i0 := @parameter5: int;

        r5 := @parameter6: java.lang.String;

        $r9 = new android.test.mock.MockContentResolver;

        specialinvoke $r9.<android.test.mock.MockContentResolver: void <init>()>();

        r6 = $r9;

        $r10 = new android.test.IsolatedContext;

        $r11 = new android.test.RenamingDelegatingContext;

        $r12 = new android.test.mock.MockContext;

        specialinvoke $r12.<android.test.mock.MockContext: void <init>()>();

        specialinvoke $r11.<android.test.RenamingDelegatingContext: void <init>(android.content.Context,android.content.Context,java.lang.String)>($r12, r0, r1);

        specialinvoke $r10.<android.test.IsolatedContext: void <init>(android.content.ContentResolver,android.content.Context)>(r6, $r11);

        r7 = $r10;

        staticinvoke <android.database.DatabaseUtils: void createDbFromSqlStatements(android.content.Context,java.lang.String,int,java.lang.String)>(r7, r4, i0, r5);

        $r13 = virtualinvoke r2.<java.lang.Class: java.lang.Object newInstance()>();

        r8 = (android.content.ContentProvider) $r13;

        virtualinvoke r8.<android.content.ContentProvider: void attachInfoForTesting(android.content.Context,android.content.pm.ProviderInfo)>(r7, null);

        virtualinvoke r6.<android.test.mock.MockContentResolver: void addProvider(java.lang.String,android.content.ContentProvider)>(r3, r8);

        return r6;
    }

    public android.test.mock.MockContentResolver getMockContentResolver()
    {
        android.test.ProviderTestCase2 r0;
        android.test.mock.MockContentResolver $r1;

        r0 := @this: android.test.ProviderTestCase2;

        $r1 = r0.<android.test.ProviderTestCase2: android.test.mock.MockContentResolver mResolver>;

        return $r1;
    }

    public android.test.IsolatedContext getMockContext()
    {
        android.test.ProviderTestCase2 r0;
        android.test.IsolatedContext $r1;

        r0 := @this: android.test.ProviderTestCase2;

        $r1 = r0.<android.test.ProviderTestCase2: android.test.IsolatedContext mProviderContext>;

        return $r1;
    }

    public android.content.ContentProvider getProvider()
    {
        android.test.ProviderTestCase2 r0;
        android.content.ContentProvider $r1;

        r0 := @this: android.test.ProviderTestCase2;

        $r1 = r0.<android.test.ProviderTestCase2: android.content.ContentProvider mProvider>;

        return $r1;
    }

    protected void setUp() throws java.lang.Exception
    {
        android.test.ProviderTestCase2 r0;
        android.test.RenamingDelegatingContext r1, $r3;
        android.test.mock.MockContentResolver $r2, $r7, $r14;
        android.test.ProviderTestCase2$MockContext2 $r4;
        android.content.Context $r5;
        android.test.IsolatedContext $r6, $r11;
        java.lang.Class $r8;
        java.lang.Object $r9;
        android.content.ContentProvider $r10, $r12, $r13, $r16;
        java.lang.String $r15;

        r0 := @this: android.test.ProviderTestCase2;

        specialinvoke r0.<android.test.AndroidTestCase: void setUp()>();

        $r2 = new android.test.mock.MockContentResolver;

        specialinvoke $r2.<android.test.mock.MockContentResolver: void <init>()>();

        r0.<android.test.ProviderTestCase2: android.test.mock.MockContentResolver mResolver> = $r2;

        $r3 = new android.test.RenamingDelegatingContext;

        $r4 = new android.test.ProviderTestCase2$MockContext2;

        specialinvoke $r4.<android.test.ProviderTestCase2$MockContext2: void <init>(android.test.ProviderTestCase2,android.test.ProviderTestCase2$1)>(r0, null);

        $r5 = virtualinvoke r0.<android.test.ProviderTestCase2: android.content.Context getContext()>();

        specialinvoke $r3.<android.test.RenamingDelegatingContext: void <init>(android.content.Context,android.content.Context,java.lang.String)>($r4, $r5, "test.");

        r1 = $r3;

        $r6 = new android.test.IsolatedContext;

        $r7 = r0.<android.test.ProviderTestCase2: android.test.mock.MockContentResolver mResolver>;

        specialinvoke $r6.<android.test.IsolatedContext: void <init>(android.content.ContentResolver,android.content.Context)>($r7, r1);

        r0.<android.test.ProviderTestCase2: android.test.IsolatedContext mProviderContext> = $r6;

        $r8 = r0.<android.test.ProviderTestCase2: java.lang.Class mProviderClass>;

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.Object newInstance()>();

        $r10 = (android.content.ContentProvider) $r9;

        r0.<android.test.ProviderTestCase2: android.content.ContentProvider mProvider> = $r10;

        $r12 = r0.<android.test.ProviderTestCase2: android.content.ContentProvider mProvider>;

        $r11 = r0.<android.test.ProviderTestCase2: android.test.IsolatedContext mProviderContext>;

        virtualinvoke $r12.<android.content.ContentProvider: void attachInfoForTesting(android.content.Context,android.content.pm.ProviderInfo)>($r11, null);

        $r13 = r0.<android.test.ProviderTestCase2: android.content.ContentProvider mProvider>;

        staticinvoke <android.test.ProviderTestCase2: void assertNotNull(java.lang.Object)>($r13);

        $r14 = r0.<android.test.ProviderTestCase2: android.test.mock.MockContentResolver mResolver>;

        $r15 = r0.<android.test.ProviderTestCase2: java.lang.String mProviderAuthority>;

        $r16 = virtualinvoke r0.<android.test.ProviderTestCase2: android.content.ContentProvider getProvider()>();

        virtualinvoke $r14.<android.test.mock.MockContentResolver: void addProvider(java.lang.String,android.content.ContentProvider)>($r15, $r16);

        return;
    }

    protected void tearDown() throws java.lang.Exception
    {
        android.test.ProviderTestCase2 r0;
        android.content.ContentProvider $r1;

        r0 := @this: android.test.ProviderTestCase2;

        $r1 = r0.<android.test.ProviderTestCase2: android.content.ContentProvider mProvider>;

        virtualinvoke $r1.<android.content.ContentProvider: void shutdown()>();

        specialinvoke r0.<android.test.AndroidTestCase: void tearDown()>();

        return;
    }
}
