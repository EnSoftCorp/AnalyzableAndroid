public class android.filterpacks.imageproc.Invert extends android.filterpacks.imageproc.SimpleImageFilter
{
    private static final java.lang.String mInvertShader;

    public void <init>(java.lang.String)
    {
        android.filterpacks.imageproc.Invert r0;
        java.lang.String r1;

        r0 := @this: android.filterpacks.imageproc.Invert;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.filterpacks.imageproc.SimpleImageFilter: void <init>(java.lang.String,java.lang.String)>(r1, null);

        return;
    }

    protected android.filterfw.core.Program getNativeProgram(android.filterfw.core.FilterContext)
    {
        android.filterpacks.imageproc.Invert r0;
        android.filterfw.core.FilterContext r1;
        android.filterfw.core.NativeProgram $r2;

        r0 := @this: android.filterpacks.imageproc.Invert;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        $r2 = new android.filterfw.core.NativeProgram;

        specialinvoke $r2.<android.filterfw.core.NativeProgram: void <init>(java.lang.String,java.lang.String)>("filterpack_imageproc", "invert");

        return $r2;
    }

    protected android.filterfw.core.Program getShaderProgram(android.filterfw.core.FilterContext)
    {
        android.filterpacks.imageproc.Invert r0;
        android.filterfw.core.FilterContext r1;
        android.filterfw.core.ShaderProgram $r2;

        r0 := @this: android.filterpacks.imageproc.Invert;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        $r2 = new android.filterfw.core.ShaderProgram;

        specialinvoke $r2.<android.filterfw.core.ShaderProgram: void <init>(android.filterfw.core.FilterContext,java.lang.String)>(r1, "precision mediump float;\nuniform sampler2D tex_sampler_0;\nvarying vec2 v_texcoord;\nvoid main() {\n  vec4 color = texture2D(tex_sampler_0, v_texcoord);\n  gl_FragColor.r = 1.0 - color.r;\n  gl_FragColor.g = 1.0 - color.g;\n  gl_FragColor.b = 1.0 - color.b;\n  gl_FragColor.a = color.a;\n}\n");

        return $r2;
    }

    public static void <clinit>()
    {
        <android.filterpacks.imageproc.Invert: java.lang.String mInvertShader> = "precision mediump float;\nuniform sampler2D tex_sampler_0;\nvarying vec2 v_texcoord;\nvoid main() {\n  vec4 color = texture2D(tex_sampler_0, v_texcoord);\n  gl_FragColor.r = 1.0 - color.r;\n  gl_FragColor.g = 1.0 - color.g;\n  gl_FragColor.b = 1.0 - color.b;\n  gl_FragColor.a = color.a;\n}\n";

        return;
    }
}
