class com.android.org.chromium.media.WebAudioMediaCodecBridge extends java.lang.Object
{

    void <init>()
    {
        com.android.org.chromium.media.WebAudioMediaCodecBridge r0;

        r0 := @this: com.android.org.chromium.media.WebAudioMediaCodecBridge;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.lang.String CreateTempFile(android.content.Context) throws java.io.IOException
    {
        android.content.Context r0;
        java.io.File $r1, $r2;
        java.lang.String $r3;

        r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke r0.<android.content.Context: java.io.File getCacheDir()>();

        $r2 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>("webaudio", ".dat", $r1);

        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String getAbsolutePath()>();

        return $r3;
    }

    private static boolean decodeAudioFile(android.content.Context, long, int, long)
    {
        android.content.Context r0;
        long l0, l2, l6, l11, l12;
        int i1, i3, i4, i5, i7, i8, i10, $i15, $i16, $i20, $i21, $i22, $i23;
        android.media.MediaExtractor r1, $r14;
        android.os.ParcelFileDescriptor r2;
        java.lang.Exception r3, $r40, $r42, $r43;
        android.media.MediaFormat r4, r11;
        java.lang.String r5, $r18, $r25, $r39, $r44;
        android.media.MediaCodec r7;
        java.nio.ByteBuffer[] r8, r9;
        boolean z0, z1, z2, $z3;
        android.media.MediaCodec$BufferInfo r10, $r22;
        java.nio.ByteBuffer r12, $r37;
        byte b9, $b13, $b14;
        java.io.FileDescriptor $r15;
        java.lang.StringBuilder $r16, $r17, $r19, $r20, $r21, $r23, $r24, $r26, $r27, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r38, $r41, $r45, $r46;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        l2 := @parameter3: long;

        $b14 = l2 cmp 0L;

        if $b14 < 0 goto label01;

        $b13 = l2 cmp 2147483647L;

        if $b13 <= 0 goto label02;

     label01:
        return 0;

     label02:
        $r14 = new android.media.MediaExtractor;

        specialinvoke $r14.<android.media.MediaExtractor: void <init>()>();

        r1 = $r14;

        r2 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor adoptFd(int)>(i1);

     label03:
        $r15 = virtualinvoke r2.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        virtualinvoke r1.<android.media.MediaExtractor: void setDataSource(java.io.FileDescriptor,long,long)>($r15, 0L, l2);

     label04:
        $i15 = virtualinvoke r1.<android.media.MediaExtractor: int getTrackCount()>();

        if $i15 > 0 goto label06;

        virtualinvoke r2.<android.os.ParcelFileDescriptor: int detachFd()>();

        return 0;

     label05:
        $r43 := @caughtexception;

        r3 = $r43;

        virtualinvoke r3.<java.lang.Exception: void printStackTrace()>();

        virtualinvoke r2.<android.os.ParcelFileDescriptor: int detachFd()>();

        return 0;

     label06:
        r4 = virtualinvoke r1.<android.media.MediaExtractor: android.media.MediaFormat getTrackFormat(int)>(0);

        i3 = virtualinvoke r4.<android.media.MediaFormat: int getInteger(java.lang.String)>("channel-count");

        i4 = i3;

        i5 = virtualinvoke r4.<android.media.MediaFormat: int getInteger(java.lang.String)>("sample-rate");

        r5 = virtualinvoke r4.<android.media.MediaFormat: java.lang.String getString(java.lang.String)>("mime");

        l6 = 0L;

        $z3 = virtualinvoke r4.<android.media.MediaFormat: boolean containsKey(java.lang.String)>("durationUs");

        if $z3 == 0 goto label09;

     label07:
        l12 = virtualinvoke r4.<android.media.MediaFormat: long getLong(java.lang.String)>("durationUs");

     label08:
        l6 = l12;

     label09:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Initial: Tracks: ");

        $i16 = virtualinvoke r1.<android.media.MediaExtractor: int getTrackCount()>();

        $r21 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i16);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Format: ");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WebAudioMediaCodec", $r18);

     label10:
        r7 = staticinvoke <android.media.MediaCodec: android.media.MediaCodec createDecoderByType(java.lang.String)>(r5);

     label11:
        virtualinvoke r7.<android.media.MediaCodec: void configure(android.media.MediaFormat,android.view.Surface,android.media.MediaCrypto,int)>(r4, null, null, 0);

        virtualinvoke r7.<android.media.MediaCodec: void start()>();

        r9 = virtualinvoke r7.<android.media.MediaCodec: java.nio.ByteBuffer[] getInputBuffers()>();

        r8 = virtualinvoke r7.<android.media.MediaCodec: java.nio.ByteBuffer[] getOutputBuffers()>();

        virtualinvoke r1.<android.media.MediaExtractor: void selectTrack(int)>(0);

        z1 = 0;

        z0 = 0;

        z2 = 0;

     label12:
        if z0 != 0 goto label24;

        if z1 != 0 goto label15;

        i8 = virtualinvoke r7.<android.media.MediaCodec: int dequeueInputBuffer(long)>(500L);

        if i8 < 0 goto label15;

        $r37 = r9[i8];

        i10 = virtualinvoke r1.<android.media.MediaExtractor: int readSampleData(java.nio.ByteBuffer,int)>($r37, 0);

        l11 = 0L;

        if i10 >= 0 goto label20;

        z1 = 1;

        i10 = 0;

     label13:
        if z1 == 0 goto label21;

        b9 = 4;

     label14:
        virtualinvoke r7.<android.media.MediaCodec: void queueInputBuffer(int,int,int,long,int)>(i8, 0, i10, l11, b9);

        if z1 != 0 goto label15;

        virtualinvoke r1.<android.media.MediaExtractor: boolean advance()>();

     label15:
        $r22 = new android.media.MediaCodec$BufferInfo;

        specialinvoke $r22.<android.media.MediaCodec$BufferInfo: void <init>()>();

        r10 = $r22;

        i7 = virtualinvoke r7.<android.media.MediaCodec: int dequeueOutputBuffer(android.media.MediaCodec$BufferInfo,long)>(r10, 500L);

        if i7 < 0 goto label22;

        r12 = r8[i7];

        if z2 != 0 goto label16;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Final:  Rate: ");

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r36 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Channels: ");

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r30 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Mime: ");

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Duration: ");

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l6);

        $r38 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" microsec");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WebAudioMediaCodec", $r39);

        staticinvoke <com.android.org.chromium.media.WebAudioMediaCodecBridge: void nativeInitializeDestination(long,int,int,long)>(l0, i3, i5, l6);

        z2 = 1;

     label16:
        if z2 == 0 goto label17;

        $i21 = r10.<android.media.MediaCodec$BufferInfo: int size>;

        if $i21 <= 0 goto label17;

        $i20 = r10.<android.media.MediaCodec$BufferInfo: int size>;

        staticinvoke <com.android.org.chromium.media.WebAudioMediaCodecBridge: void nativeOnChunkDecoded(long,java.nio.ByteBuffer,int,int,int)>(l0, r12, $i20, i3, i4);

     label17:
        virtualinvoke r12.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        virtualinvoke r7.<android.media.MediaCodec: void releaseOutputBuffer(int,boolean)>(i7, 0);

        $i23 = r10.<android.media.MediaCodec$BufferInfo: int flags>;

        $i22 = 4 & $i23;

        if $i22 == 0 goto label12;

        z0 = 1;

        goto label12;

     label18:
        $r42 := @caughtexception;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WebAudioMediaCodec", "Cannot get duration");

        goto label09;

     label19:
        $r40 := @caughtexception;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create MediaCodec for mime type: ");

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("WebAudioMediaCodec", $r44);

        virtualinvoke r2.<android.os.ParcelFileDescriptor: int detachFd()>();

        return 0;

     label20:
        l11 = virtualinvoke r1.<android.media.MediaExtractor: long getSampleTime()>();

        goto label13;

     label21:
        b9 = 0;

        goto label14;

     label22:
        if i7 != -3 goto label23;

        r8 = virtualinvoke r7.<android.media.MediaCodec: java.nio.ByteBuffer[] getOutputBuffers()>();

        goto label12;

     label23:
        if i7 != -2 goto label12;

        r11 = virtualinvoke r7.<android.media.MediaCodec: android.media.MediaFormat getOutputFormat()>();

        i4 = virtualinvoke r11.<android.media.MediaFormat: int getInteger(java.lang.String)>("channel-count");

        i5 = virtualinvoke r11.<android.media.MediaFormat: int getInteger(java.lang.String)>("sample-rate");

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("output format changed to ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WebAudioMediaCodec", $r25);

        goto label12;

     label24:
        virtualinvoke r2.<android.os.ParcelFileDescriptor: int detachFd()>();

        virtualinvoke r7.<android.media.MediaCodec: void stop()>();

        virtualinvoke r7.<android.media.MediaCodec: void release()>();

        return 1;

        catch java.lang.Exception from label03 to label04 with label05;
        catch java.lang.Exception from label07 to label08 with label18;
        catch java.lang.Exception from label10 to label11 with label19;
    }

    private static native void nativeInitializeDestination(long, int, int, long);

    private static native void nativeOnChunkDecoded(long, java.nio.ByteBuffer, int, int, int);
}
