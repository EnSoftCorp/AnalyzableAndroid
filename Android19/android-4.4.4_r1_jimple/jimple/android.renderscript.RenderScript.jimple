public class android.renderscript.RenderScript extends java.lang.Object
{
    static final boolean DEBUG;
    static final boolean LOG_ENABLED;
    static final java.lang.String LOG_TAG;
    static final long TRACE_TAG;
    static java.io.File mCacheDir;
    static java.lang.reflect.Method registerNativeAllocation;
    static java.lang.reflect.Method registerNativeFree;
    static boolean sInitialized;
    static final long sMinorID;
    static java.lang.Object sRuntime;
    private android.content.Context mApplicationContext;
    int mContext;
    android.renderscript.RenderScript$ContextType mContextType;
    int mDev;
    android.renderscript.Element mElement_ALLOCATION;
    android.renderscript.Element mElement_A_8;
    android.renderscript.Element mElement_BOOLEAN;
    android.renderscript.Element mElement_CHAR_2;
    android.renderscript.Element mElement_CHAR_3;
    android.renderscript.Element mElement_CHAR_4;
    android.renderscript.Element mElement_DOUBLE_2;
    android.renderscript.Element mElement_DOUBLE_3;
    android.renderscript.Element mElement_DOUBLE_4;
    android.renderscript.Element mElement_ELEMENT;
    android.renderscript.Element mElement_F32;
    android.renderscript.Element mElement_F64;
    android.renderscript.Element mElement_FLOAT_2;
    android.renderscript.Element mElement_FLOAT_3;
    android.renderscript.Element mElement_FLOAT_4;
    android.renderscript.Element mElement_FONT;
    android.renderscript.Element mElement_I16;
    android.renderscript.Element mElement_I32;
    android.renderscript.Element mElement_I64;
    android.renderscript.Element mElement_I8;
    android.renderscript.Element mElement_INT_2;
    android.renderscript.Element mElement_INT_3;
    android.renderscript.Element mElement_INT_4;
    android.renderscript.Element mElement_LONG_2;
    android.renderscript.Element mElement_LONG_3;
    android.renderscript.Element mElement_LONG_4;
    android.renderscript.Element mElement_MATRIX_2X2;
    android.renderscript.Element mElement_MATRIX_3X3;
    android.renderscript.Element mElement_MATRIX_4X4;
    android.renderscript.Element mElement_MESH;
    android.renderscript.Element mElement_PROGRAM_FRAGMENT;
    android.renderscript.Element mElement_PROGRAM_RASTER;
    android.renderscript.Element mElement_PROGRAM_STORE;
    android.renderscript.Element mElement_PROGRAM_VERTEX;
    android.renderscript.Element mElement_RGBA_4444;
    android.renderscript.Element mElement_RGBA_5551;
    android.renderscript.Element mElement_RGBA_8888;
    android.renderscript.Element mElement_RGB_565;
    android.renderscript.Element mElement_RGB_888;
    android.renderscript.Element mElement_SAMPLER;
    android.renderscript.Element mElement_SCRIPT;
    android.renderscript.Element mElement_SHORT_2;
    android.renderscript.Element mElement_SHORT_3;
    android.renderscript.Element mElement_SHORT_4;
    android.renderscript.Element mElement_TYPE;
    android.renderscript.Element mElement_U16;
    android.renderscript.Element mElement_U32;
    android.renderscript.Element mElement_U64;
    android.renderscript.Element mElement_U8;
    android.renderscript.Element mElement_UCHAR_2;
    android.renderscript.Element mElement_UCHAR_3;
    android.renderscript.Element mElement_UCHAR_4;
    android.renderscript.Element mElement_UINT_2;
    android.renderscript.Element mElement_UINT_3;
    android.renderscript.Element mElement_UINT_4;
    android.renderscript.Element mElement_ULONG_2;
    android.renderscript.Element mElement_ULONG_3;
    android.renderscript.Element mElement_ULONG_4;
    android.renderscript.Element mElement_USHORT_2;
    android.renderscript.Element mElement_USHORT_3;
    android.renderscript.Element mElement_USHORT_4;
    android.renderscript.Element mElement_YUV;
    android.renderscript.RenderScript$RSErrorHandler mErrorCallback;
    android.renderscript.RenderScript$RSMessageHandler mMessageCallback;
    android.renderscript.RenderScript$MessageThread mMessageThread;
    android.renderscript.ProgramRaster mProgramRaster_CULL_BACK;
    android.renderscript.ProgramRaster mProgramRaster_CULL_FRONT;
    android.renderscript.ProgramRaster mProgramRaster_CULL_NONE;
    android.renderscript.ProgramStore mProgramStore_BLEND_ALPHA_DEPTH_NO_DEPTH;
    android.renderscript.ProgramStore mProgramStore_BLEND_ALPHA_DEPTH_TEST;
    android.renderscript.ProgramStore mProgramStore_BLEND_NONE_DEPTH_NO_DEPTH;
    android.renderscript.ProgramStore mProgramStore_BLEND_NONE_DEPTH_TEST;
    java.util.concurrent.locks.ReentrantReadWriteLock mRWLock;
    android.renderscript.Sampler mSampler_CLAMP_LINEAR;
    android.renderscript.Sampler mSampler_CLAMP_LINEAR_MIP_LINEAR;
    android.renderscript.Sampler mSampler_CLAMP_NEAREST;
    android.renderscript.Sampler mSampler_MIRRORED_REPEAT_LINEAR;
    android.renderscript.Sampler mSampler_MIRRORED_REPEAT_LINEAR_MIP_LINEAR;
    android.renderscript.Sampler mSampler_MIRRORED_REPEAT_NEAREST;
    android.renderscript.Sampler mSampler_WRAP_LINEAR;
    android.renderscript.Sampler mSampler_WRAP_LINEAR_MIP_LINEAR;
    android.renderscript.Sampler mSampler_WRAP_NEAREST;

    static void <clinit>()
    {
        java.lang.Exception r0, $r24;
        java.lang.Class r1, $r9, $r11;
        java.lang.Class[] r2, r3, $r5;
        java.lang.UnsatisfiedLinkError r4, $r14;
        boolean $z0;
        java.lang.reflect.Method $r6, $r10, $r12;
        java.lang.Object[] $r7;
        java.lang.Object $r8;
        java.lang.StringBuilder $r13, $r15, $r17, $r19, $r20, $r22, $r23, $r25, $r27, $r29, $r31, $r32;
        java.lang.String $r16, $r21, $r28, $r30;
        android.renderscript.RSRuntimeException $r18, $r26;

        <android.renderscript.RenderScript: long sMinorID> = 1L;

        <android.renderscript.RenderScript: long TRACE_TAG> = 32768L;

        <android.renderscript.RenderScript: java.lang.String LOG_TAG> = "RenderScript_jni";

        <android.renderscript.RenderScript: boolean LOG_ENABLED> = 0;

        <android.renderscript.RenderScript: boolean DEBUG> = 0;

        <android.renderscript.RenderScript: boolean sInitialized> = 0;

        $z0 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("config.disable_renderscript", 0);

        if $z0 != 0 goto label3;

     label1:
        r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("dalvik.system.VMRuntime");

        $r5 = newarray (java.lang.Class)[0];

        $r6 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getRuntime", $r5);

        $r7 = newarray (java.lang.Object)[0];

        $r8 = virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r7);

        <android.renderscript.RenderScript: java.lang.Object sRuntime> = $r8;

        r2 = newarray (java.lang.Class)[1];

        $r9 = <java.lang.Integer: java.lang.Class TYPE>;

        r2[0] = $r9;

        $r10 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("registerNativeAllocation", r2);

        <android.renderscript.RenderScript: java.lang.reflect.Method registerNativeAllocation> = $r10;

        r3 = newarray (java.lang.Class)[1];

        $r11 = <java.lang.Integer: java.lang.Class TYPE>;

        r3[0] = $r11;

        $r12 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("registerNativeFree", r3);

        <android.renderscript.RenderScript: java.lang.reflect.Method registerNativeFree> = $r12;

     label2:
        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("rs_jni");

        staticinvoke <android.renderscript.RenderScript: void _nInit()>();

        <android.renderscript.RenderScript: boolean sInitialized> = 1;

     label3:
        return;

     label4:
        $r24 := @caughtexception;

        r0 = $r24;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error loading GC methods: ");

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RenderScript_jni", $r28);

        $r26 = new android.renderscript.RSRuntimeException;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error loading GC methods: ");

        $r29 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<android.renderscript.RSRuntimeException: void <init>(java.lang.String)>($r30);

        throw $r26;

     label5:
        $r14 := @caughtexception;

        r4 = $r14;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error loading RS jni library: ");

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RenderScript_jni", $r16);

        $r18 = new android.renderscript.RSRuntimeException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error loading RS jni library: ");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<android.renderscript.RSRuntimeException: void <init>(java.lang.String)>($r21);

        throw $r18;

        return;

        catch java.lang.Exception from label1 to label2 with label4;
        catch java.lang.UnsatisfiedLinkError from label2 to label3 with label5;
    }

    void <init>(android.content.Context)
    {
        android.renderscript.RenderScript r0;
        android.content.Context r1, $r4;
        android.renderscript.RenderScript$ContextType $r2;
        java.util.concurrent.locks.ReentrantReadWriteLock $r3;

        r0 := @this: android.renderscript.RenderScript;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.renderscript.RenderScript: android.renderscript.RenderScript$RSMessageHandler mMessageCallback> = null;

        r0.<android.renderscript.RenderScript: android.renderscript.RenderScript$RSErrorHandler mErrorCallback> = null;

        $r2 = <android.renderscript.RenderScript$ContextType: android.renderscript.RenderScript$ContextType NORMAL>;

        r0.<android.renderscript.RenderScript: android.renderscript.RenderScript$ContextType mContextType> = $r2;

        if r1 == null goto label1;

        $r4 = virtualinvoke r1.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<android.renderscript.RenderScript: android.content.Context mApplicationContext> = $r4;

     label1:
        $r3 = new java.util.concurrent.locks.ReentrantReadWriteLock;

        specialinvoke $r3.<java.util.concurrent.locks.ReentrantReadWriteLock: void <init>()>();

        r0.<android.renderscript.RenderScript: java.util.concurrent.locks.ReentrantReadWriteLock mRWLock> = $r3;

        return;
    }

    static native void _nInit();

    public static android.renderscript.RenderScript create(android.content.Context)
    {
        android.content.Context r0;
        android.renderscript.RenderScript$ContextType $r1;
        android.renderscript.RenderScript $r2;

        r0 := @parameter0: android.content.Context;

        $r1 = <android.renderscript.RenderScript$ContextType: android.renderscript.RenderScript$ContextType NORMAL>;

        $r2 = staticinvoke <android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context,android.renderscript.RenderScript$ContextType)>(r0, $r1);

        return $r2;
    }

    public static android.renderscript.RenderScript create(android.content.Context, int)
    {
        android.content.Context r0;
        int i0;
        android.renderscript.RenderScript$ContextType $r1;
        android.renderscript.RenderScript $r2;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r1 = <android.renderscript.RenderScript$ContextType: android.renderscript.RenderScript$ContextType NORMAL>;

        $r2 = staticinvoke <android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context,int,android.renderscript.RenderScript$ContextType)>(r0, i0, $r1);

        return $r2;
    }

    public static android.renderscript.RenderScript create(android.content.Context, int, android.renderscript.RenderScript$ContextType)
    {
        android.content.Context r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.renderscript.RenderScript$ContextType r1;
        android.renderscript.RenderScript r2, $r3;
        boolean $z0;
        android.renderscript.RenderScript$MessageThread $r4, $r5;
        android.renderscript.RSDriverException $r6;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 := @parameter2: android.renderscript.RenderScript$ContextType;

        $z0 = <android.renderscript.RenderScript: boolean sInitialized>;

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RenderScript_jni", "RenderScript.create() called when disabled; someone is likely to crash");

        return null;

     label1:
        $r3 = new android.renderscript.RenderScript;

        specialinvoke $r3.<android.renderscript.RenderScript: void <init>(android.content.Context)>(r0);

        r2 = $r3;

        $i1 = virtualinvoke r2.<android.renderscript.RenderScript: int nDeviceCreate()>();

        r2.<android.renderscript.RenderScript: int mDev> = $i1;

        $i3 = r2.<android.renderscript.RenderScript: int mDev>;

        $i2 = r1.<android.renderscript.RenderScript$ContextType: int mID>;

        $i4 = virtualinvoke r2.<android.renderscript.RenderScript: int nContextCreate(int,int,int,int)>($i3, 0, i0, $i2);

        r2.<android.renderscript.RenderScript: int mContext> = $i4;

        r2.<android.renderscript.RenderScript: android.renderscript.RenderScript$ContextType mContextType> = r1;

        $i5 = r2.<android.renderscript.RenderScript: int mContext>;

        if $i5 != 0 goto label2;

        $r6 = new android.renderscript.RSDriverException;

        specialinvoke $r6.<android.renderscript.RSDriverException: void <init>(java.lang.String)>("Failed to create RS context.");

        throw $r6;

     label2:
        $r4 = new android.renderscript.RenderScript$MessageThread;

        specialinvoke $r4.<android.renderscript.RenderScript$MessageThread: void <init>(android.renderscript.RenderScript)>(r2);

        r2.<android.renderscript.RenderScript: android.renderscript.RenderScript$MessageThread mMessageThread> = $r4;

        $r5 = r2.<android.renderscript.RenderScript: android.renderscript.RenderScript$MessageThread mMessageThread>;

        virtualinvoke $r5.<android.renderscript.RenderScript$MessageThread: void start()>();

        return r2;
    }

    public static android.renderscript.RenderScript create(android.content.Context, android.renderscript.RenderScript$ContextType)
    {
        android.content.Context r0;
        android.renderscript.RenderScript$ContextType r1;
        android.content.pm.ApplicationInfo $r2;
        int $i0;
        android.renderscript.RenderScript $r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.renderscript.RenderScript$ContextType;

        $r2 = virtualinvoke r0.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i0 = $r2.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        $r3 = staticinvoke <android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context,int,android.renderscript.RenderScript$ContextType)>(r0, $i0, r1);

        return $r3;
    }

    public static long getMinorID()
    {
        return 1L;
    }

    public static void setupDiskCache(java.io.File)
    {
        java.io.File r0;
        boolean $z0;

        r0 := @parameter0: java.io.File;

        $z0 = <android.renderscript.RenderScript: boolean sInitialized>;

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RenderScript_jni", "RenderScript.setupDiskCache() called when disabled");

        return;

     label1:
        <android.renderscript.RenderScript: java.io.File mCacheDir> = r0;

        return;
    }

    public void contextDump()
    {
        android.renderscript.RenderScript r0;

        r0 := @this: android.renderscript.RenderScript;

        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        virtualinvoke r0.<android.renderscript.RenderScript: void nContextDump(int)>(0);

        return;
    }

    public void destroy()
    {
        android.renderscript.RenderScript r0;
        int $i0, $i1;
        android.renderscript.RenderScript$MessageThread $r2, $r3;
        java.lang.InterruptedException $r4;

        r0 := @this: android.renderscript.RenderScript;

        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        virtualinvoke r0.<android.renderscript.RenderScript: void nContextFinish()>();

        $i0 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void nContextDeinitToClient(int)>($i0);

        $r2 = r0.<android.renderscript.RenderScript: android.renderscript.RenderScript$MessageThread mMessageThread>;

        $r2.<android.renderscript.RenderScript$MessageThread: boolean mRun> = 0;

     label1:
        $r3 = r0.<android.renderscript.RenderScript: android.renderscript.RenderScript$MessageThread mMessageThread>;

        virtualinvoke $r3.<android.renderscript.RenderScript$MessageThread: void join()>();

     label2:
        virtualinvoke r0.<android.renderscript.RenderScript: void nContextDestroy()>();

        $i1 = r0.<android.renderscript.RenderScript: int mDev>;

        virtualinvoke r0.<android.renderscript.RenderScript: void nDeviceDestroy(int)>($i1);

        r0.<android.renderscript.RenderScript: int mDev> = 0;

        return;

     label3:
        $r4 := @caughtexception;

        goto label2;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    public void finish()
    {
        android.renderscript.RenderScript r0;

        r0 := @this: android.renderscript.RenderScript;

        virtualinvoke r0.<android.renderscript.RenderScript: void nContextFinish()>();

        return;
    }

    public final android.content.Context getApplicationContext()
    {
        android.renderscript.RenderScript r0;
        android.content.Context $r1;

        r0 := @this: android.renderscript.RenderScript;

        $r1 = r0.<android.renderscript.RenderScript: android.content.Context mApplicationContext>;

        return $r1;
    }

    public android.renderscript.RenderScript$RSErrorHandler getErrorHandler()
    {
        android.renderscript.RenderScript r0;
        android.renderscript.RenderScript$RSErrorHandler $r1;

        r0 := @this: android.renderscript.RenderScript;

        $r1 = r0.<android.renderscript.RenderScript: android.renderscript.RenderScript$RSErrorHandler mErrorCallback>;

        return $r1;
    }

    public android.renderscript.RenderScript$RSMessageHandler getMessageHandler()
    {
        android.renderscript.RenderScript r0;
        android.renderscript.RenderScript$RSMessageHandler $r1;

        r0 := @this: android.renderscript.RenderScript;

        $r1 = r0.<android.renderscript.RenderScript: android.renderscript.RenderScript$RSMessageHandler mMessageCallback>;

        return $r1;
    }

    boolean isAlive()
    {
        android.renderscript.RenderScript r0;
        int $i0;

        r0 := @this: android.renderscript.RenderScript;

        $i0 = r0.<android.renderscript.RenderScript: int mContext>;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    void nAllocationCopyFromBitmap(int, android.graphics.Bitmap)
    {
        android.renderscript.RenderScript r0;
        int i0, $i1;
        android.graphics.Bitmap r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Bitmap;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationCopyFromBitmap(int,int,android.graphics.Bitmap)>($i1, i0, r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationCopyToBitmap(int, android.graphics.Bitmap)
    {
        android.renderscript.RenderScript r0;
        int i0, $i1;
        android.graphics.Bitmap r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Bitmap;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationCopyToBitmap(int,int,android.graphics.Bitmap)>($i1, i0, r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    int nAllocationCreateBitmapBackedAllocation(int, int, android.graphics.Bitmap, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, i3, $i4;
        android.graphics.Bitmap r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.graphics.Bitmap;

        i2 := @parameter3: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i4 = r0.<android.renderscript.RenderScript: int mContext>;

        i3 = virtualinvoke r0.<android.renderscript.RenderScript: int rsnAllocationCreateBitmapBackedAllocation(int,int,int,android.graphics.Bitmap,int)>($i4, i0, i1, r1, i2);

     label2:
        exitmonitor r0;

        return i3;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    int nAllocationCreateBitmapRef(int, android.graphics.Bitmap)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, $i2;
        android.graphics.Bitmap r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Bitmap;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i2 = r0.<android.renderscript.RenderScript: int mContext>;

        i1 = virtualinvoke r0.<android.renderscript.RenderScript: int rsnAllocationCreateBitmapRef(int,int,android.graphics.Bitmap)>($i2, i0, r1);

     label2:
        exitmonitor r0;

        return i1;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    int nAllocationCreateFromAssetStream(int, int, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, i3, $i4;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i4 = r0.<android.renderscript.RenderScript: int mContext>;

        i3 = virtualinvoke r0.<android.renderscript.RenderScript: int rsnAllocationCreateFromAssetStream(int,int,int,int)>($i4, i0, i1, i2);

     label2:
        exitmonitor r0;

        return i3;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    int nAllocationCreateFromBitmap(int, int, android.graphics.Bitmap, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, i3, $i4;
        android.graphics.Bitmap r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.graphics.Bitmap;

        i2 := @parameter3: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i4 = r0.<android.renderscript.RenderScript: int mContext>;

        i3 = virtualinvoke r0.<android.renderscript.RenderScript: int rsnAllocationCreateFromBitmap(int,int,int,android.graphics.Bitmap,int)>($i4, i0, i1, r1, i2);

     label2:
        exitmonitor r0;

        return i3;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    int nAllocationCreateTyped(int, int, int, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, i3, i4, $i5;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i5 = r0.<android.renderscript.RenderScript: int mContext>;

        i4 = virtualinvoke r0.<android.renderscript.RenderScript: int rsnAllocationCreateTyped(int,int,int,int,int)>($i5, i0, i1, i2, i3);

     label2:
        exitmonitor r0;

        return i4;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    int nAllocationCubeCreateFromBitmap(int, int, android.graphics.Bitmap, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, i3, $i4;
        android.graphics.Bitmap r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.graphics.Bitmap;

        i2 := @parameter3: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i4 = r0.<android.renderscript.RenderScript: int mContext>;

        i3 = virtualinvoke r0.<android.renderscript.RenderScript: int rsnAllocationCubeCreateFromBitmap(int,int,int,android.graphics.Bitmap,int)>($i4, i0, i1, r1, i2);

     label2:
        exitmonitor r0;

        return i3;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationData1D(int, int, int, int, byte[], int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, i3, i4, $i5;
        byte[] r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: byte[];

        i4 := @parameter5: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i5 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationData1D(int,int,int,int,int,byte[],int)>($i5, i0, i1, i2, i3, r1, i4);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationData1D(int, int, int, int, float[], int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, i3, i4, $i5;
        float[] r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: float[];

        i4 := @parameter5: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i5 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationData1D(int,int,int,int,int,float[],int)>($i5, i0, i1, i2, i3, r1, i4);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationData1D(int, int, int, int, int[], int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, i3, i4, $i5;
        int[] r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: int[];

        i4 := @parameter5: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i5 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationData1D(int,int,int,int,int,int[],int)>($i5, i0, i1, i2, i3, r1, i4);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationData1D(int, int, int, int, short[], int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, i3, i4, $i5;
        short[] r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: short[];

        i4 := @parameter5: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i5 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationData1D(int,int,int,int,int,short[],int)>($i5, i0, i1, i2, i3, r1, i4);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationData2D(int, int, int, int, int, int, int, int, int, int, int, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, $i12;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        i8 := @parameter8: int;

        i9 := @parameter9: int;

        i10 := @parameter10: int;

        i11 := @parameter11: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i12 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationData2D(int,int,int,int,int,int,int,int,int,int,int,int,int)>($i12, i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationData2D(int, int, int, int, int, int, int, byte[], int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8;
        byte[] r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        r1 := @parameter7: byte[];

        i7 := @parameter8: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i8 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationData2D(int,int,int,int,int,int,int,int,byte[],int)>($i8, i0, i1, i2, i3, i4, i5, i6, r1, i7);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationData2D(int, int, int, int, int, int, int, float[], int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8;
        float[] r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        r1 := @parameter7: float[];

        i7 := @parameter8: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i8 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationData2D(int,int,int,int,int,int,int,int,float[],int)>($i8, i0, i1, i2, i3, i4, i5, i6, r1, i7);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationData2D(int, int, int, int, int, int, int, int[], int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8;
        int[] r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        r1 := @parameter7: int[];

        i7 := @parameter8: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i8 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationData2D(int,int,int,int,int,int,int,int,int[],int)>($i8, i0, i1, i2, i3, i4, i5, i6, r1, i7);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationData2D(int, int, int, int, int, int, int, short[], int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8;
        short[] r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        r1 := @parameter7: short[];

        i7 := @parameter8: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i8 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationData2D(int,int,int,int,int,int,int,int,short[],int)>($i8, i0, i1, i2, i3, i4, i5, i6, r1, i7);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationData2D(int, int, int, int, int, android.graphics.Bitmap)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, i3, i4, $i5;
        android.graphics.Bitmap r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        r1 := @parameter5: android.graphics.Bitmap;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i5 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationData2D(int,int,int,int,int,int,android.graphics.Bitmap)>($i5, i0, i1, i2, i3, i4, r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationData3D(int, int, int, int, int, int, int, int, int, int, int, int, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, $i13;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        i8 := @parameter8: int;

        i9 := @parameter9: int;

        i10 := @parameter10: int;

        i11 := @parameter11: int;

        i12 := @parameter12: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i13 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationData3D(int,int,int,int,int,int,int,int,int,int,int,int,int,int)>($i13, i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationData3D(int, int, int, int, int, int, int, int, byte[], int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9;
        byte[] r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        r1 := @parameter8: byte[];

        i8 := @parameter9: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i9 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationData3D(int,int,int,int,int,int,int,int,int,byte[],int)>($i9, i0, i1, i2, i3, i4, i5, i6, i7, r1, i8);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationData3D(int, int, int, int, int, int, int, int, float[], int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9;
        float[] r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        r1 := @parameter8: float[];

        i8 := @parameter9: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i9 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationData3D(int,int,int,int,int,int,int,int,int,float[],int)>($i9, i0, i1, i2, i3, i4, i5, i6, i7, r1, i8);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationData3D(int, int, int, int, int, int, int, int, int[], int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9;
        int[] r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        r1 := @parameter8: int[];

        i8 := @parameter9: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i9 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationData3D(int,int,int,int,int,int,int,int,int,int[],int)>($i9, i0, i1, i2, i3, i4, i5, i6, i7, r1, i8);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationData3D(int, int, int, int, int, int, int, int, short[], int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9;
        short[] r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        r1 := @parameter8: short[];

        i8 := @parameter9: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i9 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationData3D(int,int,int,int,int,int,int,int,int,short[],int)>($i9, i0, i1, i2, i3, i4, i5, i6, i7, r1, i8);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationElementData1D(int, int, int, int, byte[], int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, i3, i4, $i5;
        byte[] r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: byte[];

        i4 := @parameter5: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i5 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationElementData1D(int,int,int,int,int,byte[],int)>($i5, i0, i1, i2, i3, r1, i4);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationGenerateMipmaps(int)
    {
        android.renderscript.RenderScript r0;
        int i0, $i1;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationGenerateMipmaps(int,int)>($i1, i0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    android.view.Surface nAllocationGetSurface(int)
    {
        android.renderscript.RenderScript r0;
        int i0, $i1;
        java.lang.Throwable r1, $r3;
        android.view.Surface r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.renderscript.RenderScript: int mContext>;

        r2 = virtualinvoke r0.<android.renderscript.RenderScript: android.view.Surface rsnAllocationGetSurface(int,int)>($i1, i0);

     label2:
        exitmonitor r0;

        return r2;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    int nAllocationGetType(int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, $i2;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i2 = r0.<android.renderscript.RenderScript: int mContext>;

        i1 = virtualinvoke r0.<android.renderscript.RenderScript: int rsnAllocationGetType(int,int)>($i2, i0);

     label2:
        exitmonitor r0;

        return i1;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationIoReceive(int)
    {
        android.renderscript.RenderScript r0;
        int i0, $i1;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationIoReceive(int,int)>($i1, i0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationIoSend(int)
    {
        android.renderscript.RenderScript r0;
        int i0, $i1;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationIoSend(int,int)>($i1, i0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationRead(int, byte[])
    {
        android.renderscript.RenderScript r0;
        int i0, $i1;
        byte[] r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationRead(int,int,byte[])>($i1, i0, r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationRead(int, float[])
    {
        android.renderscript.RenderScript r0;
        int i0, $i1;
        float[] r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        r1 := @parameter1: float[];

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationRead(int,int,float[])>($i1, i0, r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationRead(int, int[])
    {
        android.renderscript.RenderScript r0;
        int i0, $i1;
        int[] r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationRead(int,int,int[])>($i1, i0, r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationRead(int, short[])
    {
        android.renderscript.RenderScript r0;
        int i0, $i1;
        short[] r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        r1 := @parameter1: short[];

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationRead(int,int,short[])>($i1, i0, r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationResize1D(int, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, $i2;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i2 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationResize1D(int,int,int)>($i2, i0, i1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationSetSurface(int, android.view.Surface)
    {
        android.renderscript.RenderScript r0;
        int i0, $i1;
        android.view.Surface r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.Surface;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationSetSurface(int,int,android.view.Surface)>($i1, i0, r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAllocationSyncAll(int, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, $i2;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i2 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAllocationSyncAll(int,int,int)>($i2, i0, i1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nAssignName(int, byte[])
    {
        android.renderscript.RenderScript r0;
        int i0, $i1;
        byte[] r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnAssignName(int,int,byte[])>($i1, i0, r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nContextBindProgramFragment(int)
    {
        android.renderscript.RenderScript r0;
        int i0, $i1;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnContextBindProgramFragment(int,int)>($i1, i0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nContextBindProgramRaster(int)
    {
        android.renderscript.RenderScript r0;
        int i0, $i1;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnContextBindProgramRaster(int,int)>($i1, i0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nContextBindProgramStore(int)
    {
        android.renderscript.RenderScript r0;
        int i0, $i1;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnContextBindProgramStore(int,int)>($i1, i0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nContextBindProgramVertex(int)
    {
        android.renderscript.RenderScript r0;
        int i0, $i1;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnContextBindProgramVertex(int,int)>($i1, i0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nContextBindRootScript(int)
    {
        android.renderscript.RenderScript r0;
        int i0, $i1;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnContextBindRootScript(int,int)>($i1, i0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nContextBindSampler(int, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, $i2;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i2 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnContextBindSampler(int,int,int)>($i2, i0, i1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    int nContextCreate(int, int, int, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, i3, i4;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        entermonitor r0;

     label1:
        i4 = virtualinvoke r0.<android.renderscript.RenderScript: int rsnContextCreate(int,int,int,int)>(i0, i1, i2, i3);

     label2:
        exitmonitor r0;

        return i4;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    int nContextCreateGL(int, int, int, int, int, int, int, int, int, int, int, int, int, float, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14;
        float f0;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        i8 := @parameter8: int;

        i9 := @parameter9: int;

        i10 := @parameter10: int;

        i11 := @parameter11: int;

        i12 := @parameter12: int;

        f0 := @parameter13: float;

        i13 := @parameter14: int;

        entermonitor r0;

     label1:
        i14 = virtualinvoke r0.<android.renderscript.RenderScript: int rsnContextCreateGL(int,int,int,int,int,int,int,int,int,int,int,int,int,float,int)>(i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, f0, i13);

     label2:
        exitmonitor r0;

        return i14;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    native void nContextDeinitToClient(int);

    void nContextDestroy()
    {
        android.renderscript.RenderScript r0;
        java.lang.Throwable r1, $r4;
        java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock r2;
        int i0;
        java.util.concurrent.locks.ReentrantReadWriteLock $r3;

        r0 := @this: android.renderscript.RenderScript;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $r3 = r0.<android.renderscript.RenderScript: java.util.concurrent.locks.ReentrantReadWriteLock mRWLock>;

        r2 = virtualinvoke $r3.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock()>();

        virtualinvoke r2.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void lock()>();

        i0 = r0.<android.renderscript.RenderScript: int mContext>;

        r0.<android.renderscript.RenderScript: int mContext> = 0;

        virtualinvoke r2.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void unlock()>();

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnContextDestroy(int)>(i0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nContextDump(int)
    {
        android.renderscript.RenderScript r0;
        int i0, $i1;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnContextDump(int,int)>($i1, i0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nContextFinish()
    {
        android.renderscript.RenderScript r0;
        java.lang.Throwable r1, $r2;
        int $i0;

        r0 := @this: android.renderscript.RenderScript;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i0 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnContextFinish(int)>($i0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    native java.lang.String nContextGetErrorMessage(int);

    native int nContextGetUserMessage(int, int[]);

    native void nContextInitToClient(int);

    void nContextPause()
    {
        android.renderscript.RenderScript r0;
        java.lang.Throwable r1, $r2;
        int $i0;

        r0 := @this: android.renderscript.RenderScript;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i0 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnContextPause(int)>($i0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    native int nContextPeekMessage(int, int[]);

    void nContextResume()
    {
        android.renderscript.RenderScript r0;
        java.lang.Throwable r1, $r2;
        int $i0;

        r0 := @this: android.renderscript.RenderScript;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i0 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnContextResume(int)>($i0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nContextSendMessage(int, int[])
    {
        android.renderscript.RenderScript r0;
        int i0, $i1;
        int[] r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnContextSendMessage(int,int,int[])>($i1, i0, r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nContextSetPriority(int)
    {
        android.renderscript.RenderScript r0;
        int i0, $i1;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnContextSetPriority(int,int)>($i1, i0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nContextSetSurface(int, int, android.view.Surface)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, $i2;
        android.view.Surface r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.view.Surface;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i2 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnContextSetSurface(int,int,int,android.view.Surface)>($i2, i0, i1, r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nContextSetSurfaceTexture(int, int, android.graphics.SurfaceTexture)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, $i2;
        android.graphics.SurfaceTexture r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.graphics.SurfaceTexture;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i2 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnContextSetSurfaceTexture(int,int,int,android.graphics.SurfaceTexture)>($i2, i0, i1, r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    native int nDeviceCreate();

    native void nDeviceDestroy(int);

    native void nDeviceSetConfig(int, int, int);

    int nElementCreate(int, int, boolean, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, i3, $i4;
        boolean z0;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        i2 := @parameter3: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i4 = r0.<android.renderscript.RenderScript: int mContext>;

        i3 = virtualinvoke r0.<android.renderscript.RenderScript: int rsnElementCreate(int,int,int,boolean,int)>($i4, i0, i1, z0, i2);

     label2:
        exitmonitor r0;

        return i3;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    int nElementCreate2(int[], java.lang.String[], int[])
    {
        android.renderscript.RenderScript r0;
        int[] r1, r3;
        java.lang.String[] r2;
        java.lang.Throwable r4, $r5;
        int i0, $i1;

        r0 := @this: android.renderscript.RenderScript;

        r1 := @parameter0: int[];

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: int[];

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.renderscript.RenderScript: int mContext>;

        i0 = virtualinvoke r0.<android.renderscript.RenderScript: int rsnElementCreate2(int,int[],java.lang.String[],int[])>($i1, r1, r2, r3);

     label2:
        exitmonitor r0;

        return i0;

     label3:
        $r5 := @caughtexception;

        r4 = $r5;

        exitmonitor r0;

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nElementGetNativeData(int, int[])
    {
        android.renderscript.RenderScript r0;
        int i0, $i1;
        int[] r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnElementGetNativeData(int,int,int[])>($i1, i0, r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nElementGetSubElements(int, int[], java.lang.String[], int[])
    {
        android.renderscript.RenderScript r0;
        int i0, $i1;
        int[] r1, r3;
        java.lang.String[] r2;
        java.lang.Throwable r4, $r5;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: int[];

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnElementGetSubElements(int,int,int[],java.lang.String[],int[])>($i1, i0, r1, r2, r3);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r5 := @caughtexception;

        r4 = $r5;

        exitmonitor r0;

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    int nFileA3DCreateFromAsset(android.content.res.AssetManager, java.lang.String)
    {
        android.renderscript.RenderScript r0;
        android.content.res.AssetManager r1;
        java.lang.String r2;
        java.lang.Throwable r3, $r4;
        int i0, $i1;

        r0 := @this: android.renderscript.RenderScript;

        r1 := @parameter0: android.content.res.AssetManager;

        r2 := @parameter1: java.lang.String;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.renderscript.RenderScript: int mContext>;

        i0 = virtualinvoke r0.<android.renderscript.RenderScript: int rsnFileA3DCreateFromAsset(int,android.content.res.AssetManager,java.lang.String)>($i1, r1, r2);

     label2:
        exitmonitor r0;

        return i0;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

        exitmonitor r0;

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    int nFileA3DCreateFromAssetStream(int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, $i2;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i2 = r0.<android.renderscript.RenderScript: int mContext>;

        i1 = virtualinvoke r0.<android.renderscript.RenderScript: int rsnFileA3DCreateFromAssetStream(int,int)>($i2, i0);

     label2:
        exitmonitor r0;

        return i1;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    int nFileA3DCreateFromFile(java.lang.String)
    {
        android.renderscript.RenderScript r0;
        java.lang.String r1;
        java.lang.Throwable r2, $r3;
        int i0, $i1;

        r0 := @this: android.renderscript.RenderScript;

        r1 := @parameter0: java.lang.String;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.renderscript.RenderScript: int mContext>;

        i0 = virtualinvoke r0.<android.renderscript.RenderScript: int rsnFileA3DCreateFromFile(int,java.lang.String)>($i1, r1);

     label2:
        exitmonitor r0;

        return i0;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    int nFileA3DGetEntryByIndex(int, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, $i3;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i3 = r0.<android.renderscript.RenderScript: int mContext>;

        i2 = virtualinvoke r0.<android.renderscript.RenderScript: int rsnFileA3DGetEntryByIndex(int,int,int)>($i3, i0, i1);

     label2:
        exitmonitor r0;

        return i2;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nFileA3DGetIndexEntries(int, int, int[], java.lang.String[])
    {
        android.renderscript.RenderScript r0;
        int i0, i1, $i2;
        int[] r1;
        java.lang.String[] r2;
        java.lang.Throwable r3, $r4;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: int[];

        r2 := @parameter3: java.lang.String[];

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i2 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnFileA3DGetIndexEntries(int,int,int,int[],java.lang.String[])>($i2, i0, i1, r1, r2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

        exitmonitor r0;

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    int nFileA3DGetNumIndexEntries(int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, $i2;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i2 = r0.<android.renderscript.RenderScript: int mContext>;

        i1 = virtualinvoke r0.<android.renderscript.RenderScript: int rsnFileA3DGetNumIndexEntries(int,int)>($i2, i0);

     label2:
        exitmonitor r0;

        return i1;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    int nFontCreateFromAsset(android.content.res.AssetManager, java.lang.String, float, int)
    {
        android.renderscript.RenderScript r0;
        android.content.res.AssetManager r1;
        java.lang.String r2;
        float f0;
        int i0, i1, $i2;
        java.lang.Throwable r3, $r4;

        r0 := @this: android.renderscript.RenderScript;

        r1 := @parameter0: android.content.res.AssetManager;

        r2 := @parameter1: java.lang.String;

        f0 := @parameter2: float;

        i0 := @parameter3: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i2 = r0.<android.renderscript.RenderScript: int mContext>;

        i1 = virtualinvoke r0.<android.renderscript.RenderScript: int rsnFontCreateFromAsset(int,android.content.res.AssetManager,java.lang.String,float,int)>($i2, r1, r2, f0, i0);

     label2:
        exitmonitor r0;

        return i1;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

        exitmonitor r0;

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    int nFontCreateFromAssetStream(java.lang.String, float, int, int)
    {
        android.renderscript.RenderScript r0;
        java.lang.String r1;
        float f0;
        int i0, i1, i2, $i3;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.renderscript.RenderScript;

        r1 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i3 = r0.<android.renderscript.RenderScript: int mContext>;

        i2 = virtualinvoke r0.<android.renderscript.RenderScript: int rsnFontCreateFromAssetStream(int,java.lang.String,float,int,int)>($i3, r1, f0, i0, i1);

     label2:
        exitmonitor r0;

        return i2;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    int nFontCreateFromFile(java.lang.String, float, int)
    {
        android.renderscript.RenderScript r0;
        java.lang.String r1;
        float f0;
        int i0, i1, $i2;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.renderscript.RenderScript;

        r1 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        i0 := @parameter2: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i2 = r0.<android.renderscript.RenderScript: int mContext>;

        i1 = virtualinvoke r0.<android.renderscript.RenderScript: int rsnFontCreateFromFile(int,java.lang.String,float,int)>($i2, r1, f0, i0);

     label2:
        exitmonitor r0;

        return i1;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    java.lang.String nGetName(int)
    {
        android.renderscript.RenderScript r0;
        int i0, $i1;
        java.lang.Throwable r1, $r3;
        java.lang.String r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.renderscript.RenderScript: int mContext>;

        r2 = virtualinvoke r0.<android.renderscript.RenderScript: java.lang.String rsnGetName(int,int)>($i1, i0);

     label2:
        exitmonitor r0;

        return r2;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    int nMeshCreate(int[], int[], int[])
    {
        android.renderscript.RenderScript r0;
        int[] r1, r2, r3;
        java.lang.Throwable r4, $r5;
        int i0, $i1;

        r0 := @this: android.renderscript.RenderScript;

        r1 := @parameter0: int[];

        r2 := @parameter1: int[];

        r3 := @parameter2: int[];

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.renderscript.RenderScript: int mContext>;

        i0 = virtualinvoke r0.<android.renderscript.RenderScript: int rsnMeshCreate(int,int[],int[],int[])>($i1, r1, r2, r3);

     label2:
        exitmonitor r0;

        return i0;

     label3:
        $r5 := @caughtexception;

        r4 = $r5;

        exitmonitor r0;

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    int nMeshGetIndexCount(int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, $i2;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i2 = r0.<android.renderscript.RenderScript: int mContext>;

        i1 = virtualinvoke r0.<android.renderscript.RenderScript: int rsnMeshGetIndexCount(int,int)>($i2, i0);

     label2:
        exitmonitor r0;

        return i1;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nMeshGetIndices(int, int[], int[], int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, $i2;
        int[] r1, r2;
        java.lang.Throwable r3, $r4;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        r2 := @parameter2: int[];

        i1 := @parameter3: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i2 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnMeshGetIndices(int,int,int[],int[],int)>($i2, i0, r1, r2, i1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

        exitmonitor r0;

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    int nMeshGetVertexBufferCount(int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, $i2;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i2 = r0.<android.renderscript.RenderScript: int mContext>;

        i1 = virtualinvoke r0.<android.renderscript.RenderScript: int rsnMeshGetVertexBufferCount(int,int)>($i2, i0);

     label2:
        exitmonitor r0;

        return i1;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nMeshGetVertices(int, int[], int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, $i2;
        int[] r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        i1 := @parameter2: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i2 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnMeshGetVertices(int,int,int[],int)>($i2, i0, r1, i1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nObjDestroy(int)
    {
        android.renderscript.RenderScript r0;
        int i0, $i1, $i2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        $i1 = r0.<android.renderscript.RenderScript: int mContext>;

        if $i1 == 0 goto label1;

        $i2 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnObjDestroy(int,int)>($i2, i0);

     label1:
        return;
    }

    int nPathCreate(int, boolean, int, int, float)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, i3, $i4;
        boolean z0;
        float f0;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        f0 := @parameter4: float;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i4 = r0.<android.renderscript.RenderScript: int mContext>;

        i3 = virtualinvoke r0.<android.renderscript.RenderScript: int rsnPathCreate(int,int,boolean,int,int,float)>($i4, i0, z0, i1, i2, f0);

     label2:
        exitmonitor r0;

        return i3;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nProgramBindConstants(int, int, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, $i3;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i3 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnProgramBindConstants(int,int,int,int)>($i3, i0, i1, i2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nProgramBindSampler(int, int, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, $i3;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i3 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnProgramBindSampler(int,int,int,int)>($i3, i0, i1, i2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nProgramBindTexture(int, int, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, $i3;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i3 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnProgramBindTexture(int,int,int,int)>($i3, i0, i1, i2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    int nProgramFragmentCreate(java.lang.String, java.lang.String[], int[])
    {
        android.renderscript.RenderScript r0;
        java.lang.String r1;
        java.lang.String[] r2;
        int[] r3;
        java.lang.Throwable r4, $r5;
        int i0, $i1;

        r0 := @this: android.renderscript.RenderScript;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: int[];

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.renderscript.RenderScript: int mContext>;

        i0 = virtualinvoke r0.<android.renderscript.RenderScript: int rsnProgramFragmentCreate(int,java.lang.String,java.lang.String[],int[])>($i1, r1, r2, r3);

     label2:
        exitmonitor r0;

        return i0;

     label3:
        $r5 := @caughtexception;

        r4 = $r5;

        exitmonitor r0;

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    int nProgramRasterCreate(boolean, int)
    {
        android.renderscript.RenderScript r0;
        boolean z0;
        int i0, i1, $i2;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i2 = r0.<android.renderscript.RenderScript: int mContext>;

        i1 = virtualinvoke r0.<android.renderscript.RenderScript: int rsnProgramRasterCreate(int,boolean,int)>($i2, z0, i0);

     label2:
        exitmonitor r0;

        return i1;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    int nProgramStoreCreate(boolean, boolean, boolean, boolean, boolean, boolean, int, int, int)
    {
        android.renderscript.RenderScript r0;
        boolean z0, z1, z2, z3, z4, z5;
        int i0, i1, i2, i3, $i4;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        z3 := @parameter3: boolean;

        z4 := @parameter4: boolean;

        z5 := @parameter5: boolean;

        i0 := @parameter6: int;

        i1 := @parameter7: int;

        i2 := @parameter8: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i4 = r0.<android.renderscript.RenderScript: int mContext>;

        i3 = virtualinvoke r0.<android.renderscript.RenderScript: int rsnProgramStoreCreate(int,boolean,boolean,boolean,boolean,boolean,boolean,int,int,int)>($i4, z0, z1, z2, z3, z4, z5, i0, i1, i2);

     label2:
        exitmonitor r0;

        return i3;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    int nProgramVertexCreate(java.lang.String, java.lang.String[], int[])
    {
        android.renderscript.RenderScript r0;
        java.lang.String r1;
        java.lang.String[] r2;
        int[] r3;
        java.lang.Throwable r4, $r5;
        int i0, $i1;

        r0 := @this: android.renderscript.RenderScript;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: int[];

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.renderscript.RenderScript: int mContext>;

        i0 = virtualinvoke r0.<android.renderscript.RenderScript: int rsnProgramVertexCreate(int,java.lang.String,java.lang.String[],int[])>($i1, r1, r2, r3);

     label2:
        exitmonitor r0;

        return i0;

     label3:
        $r5 := @caughtexception;

        r4 = $r5;

        exitmonitor r0;

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    int nSamplerCreate(int, int, int, int, int, float)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, i3, i4, i5, $i6;
        float f0;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        f0 := @parameter5: float;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i6 = r0.<android.renderscript.RenderScript: int mContext>;

        i5 = virtualinvoke r0.<android.renderscript.RenderScript: int rsnSamplerCreate(int,int,int,int,int,int,float)>($i6, i0, i1, i2, i3, i4, f0);

     label2:
        exitmonitor r0;

        return i5;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nScriptBindAllocation(int, int, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, $i3;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i3 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnScriptBindAllocation(int,int,int,int)>($i3, i0, i1, i2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    int nScriptCCreate(java.lang.String, java.lang.String, byte[], int)
    {
        android.renderscript.RenderScript r0;
        java.lang.String r1, r2;
        byte[] r3;
        int i0, i1, $i2;
        java.lang.Throwable r4, $r5;

        r0 := @this: android.renderscript.RenderScript;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: byte[];

        i0 := @parameter3: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i2 = r0.<android.renderscript.RenderScript: int mContext>;

        i1 = virtualinvoke r0.<android.renderscript.RenderScript: int rsnScriptCCreate(int,java.lang.String,java.lang.String,byte[],int)>($i2, r1, r2, r3, i0);

     label2:
        exitmonitor r0;

        return i1;

     label3:
        $r5 := @caughtexception;

        r4 = $r5;

        exitmonitor r0;

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    int nScriptFieldIDCreate(int, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, $i3;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i3 = r0.<android.renderscript.RenderScript: int mContext>;

        i2 = virtualinvoke r0.<android.renderscript.RenderScript: int rsnScriptFieldIDCreate(int,int,int)>($i3, i0, i1);

     label2:
        exitmonitor r0;

        return i2;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nScriptForEach(int, int, int, int, byte[])
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, i3, $i4, $i5;
        byte[] r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: byte[];

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

     label2:
        if r1 != null goto label5;

     label3:
        $i5 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnScriptForEach(int,int,int,int,int)>($i5, i0, i1, i2, i3);

     label4:
        exitmonitor r0;

        return;

     label5:
        $i4 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnScriptForEach(int,int,int,int,int,byte[])>($i4, i0, i1, i2, i3, r1);

     label6:
        goto label4;

     label7:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    void nScriptForEachClipped(int, int, int, int, byte[], int, int, int, int, int, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11;
        byte[] r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: byte[];

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        i6 := @parameter7: int;

        i7 := @parameter8: int;

        i8 := @parameter9: int;

        i9 := @parameter10: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

     label2:
        if r1 != null goto label5;

     label3:
        $i11 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnScriptForEachClipped(int,int,int,int,int,int,int,int,int,int,int)>($i11, i0, i1, i2, i3, i4, i5, i6, i7, i8, i9);

     label4:
        exitmonitor r0;

        return;

     label5:
        $i10 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnScriptForEachClipped(int,int,int,int,int,byte[],int,int,int,int,int,int)>($i10, i0, i1, i2, i3, r1, i4, i5, i6, i7, i8, i9);

     label6:
        goto label4;

     label7:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    double nScriptGetVarD(int, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, $i2;
        java.lang.Throwable r1, $r2;
        double d0;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i2 = r0.<android.renderscript.RenderScript: int mContext>;

        d0 = virtualinvoke r0.<android.renderscript.RenderScript: double rsnScriptGetVarD(int,int,int)>($i2, i0, i1);

     label2:
        exitmonitor r0;

        return d0;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    float nScriptGetVarF(int, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, $i2;
        java.lang.Throwable r1, $r2;
        float f0;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i2 = r0.<android.renderscript.RenderScript: int mContext>;

        f0 = virtualinvoke r0.<android.renderscript.RenderScript: float rsnScriptGetVarF(int,int,int)>($i2, i0, i1);

     label2:
        exitmonitor r0;

        return f0;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    int nScriptGetVarI(int, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, $i3;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i3 = r0.<android.renderscript.RenderScript: int mContext>;

        i2 = virtualinvoke r0.<android.renderscript.RenderScript: int rsnScriptGetVarI(int,int,int)>($i3, i0, i1);

     label2:
        exitmonitor r0;

        return i2;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    long nScriptGetVarJ(int, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, $i3;
        java.lang.Throwable r1, $r2;
        long l2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i3 = r0.<android.renderscript.RenderScript: int mContext>;

        l2 = virtualinvoke r0.<android.renderscript.RenderScript: long rsnScriptGetVarJ(int,int,int)>($i3, i0, i1);

     label2:
        exitmonitor r0;

        return l2;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nScriptGetVarV(int, int, byte[])
    {
        android.renderscript.RenderScript r0;
        int i0, i1, $i2;
        byte[] r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: byte[];

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i2 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnScriptGetVarV(int,int,int,byte[])>($i2, i0, i1, r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    int nScriptGroupCreate(int[], int[], int[], int[], int[])
    {
        android.renderscript.RenderScript r0;
        int[] r1, r2, r3, r4, r5;
        java.lang.Throwable r6, $r7;
        int i0, $i1;

        r0 := @this: android.renderscript.RenderScript;

        r1 := @parameter0: int[];

        r2 := @parameter1: int[];

        r3 := @parameter2: int[];

        r4 := @parameter3: int[];

        r5 := @parameter4: int[];

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.renderscript.RenderScript: int mContext>;

        i0 = virtualinvoke r0.<android.renderscript.RenderScript: int rsnScriptGroupCreate(int,int[],int[],int[],int[],int[])>($i1, r1, r2, r3, r4, r5);

     label2:
        exitmonitor r0;

        return i0;

     label3:
        $r7 := @caughtexception;

        r6 = $r7;

        exitmonitor r0;

        throw r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nScriptGroupExecute(int)
    {
        android.renderscript.RenderScript r0;
        int i0, $i1;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnScriptGroupExecute(int,int)>($i1, i0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nScriptGroupSetInput(int, int, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, $i3;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i3 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnScriptGroupSetInput(int,int,int,int)>($i3, i0, i1, i2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nScriptGroupSetOutput(int, int, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, $i3;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i3 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnScriptGroupSetOutput(int,int,int,int)>($i3, i0, i1, i2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    int nScriptIntrinsicCreate(int, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, $i3;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i3 = r0.<android.renderscript.RenderScript: int mContext>;

        i2 = virtualinvoke r0.<android.renderscript.RenderScript: int rsnScriptIntrinsicCreate(int,int,int)>($i3, i0, i1);

     label2:
        exitmonitor r0;

        return i2;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nScriptInvoke(int, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, $i2;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i2 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnScriptInvoke(int,int,int)>($i2, i0, i1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nScriptInvokeV(int, int, byte[])
    {
        android.renderscript.RenderScript r0;
        int i0, i1, $i2;
        byte[] r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: byte[];

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i2 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnScriptInvokeV(int,int,int,byte[])>($i2, i0, i1, r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    int nScriptKernelIDCreate(int, int, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, i3, $i4;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i4 = r0.<android.renderscript.RenderScript: int mContext>;

        i3 = virtualinvoke r0.<android.renderscript.RenderScript: int rsnScriptKernelIDCreate(int,int,int,int)>($i4, i0, i1, i2);

     label2:
        exitmonitor r0;

        return i3;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nScriptSetTimeZone(int, byte[])
    {
        android.renderscript.RenderScript r0;
        int i0, $i1;
        byte[] r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnScriptSetTimeZone(int,int,byte[])>($i1, i0, r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nScriptSetVarD(int, int, double)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, $i2;
        double d0;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        d0 := @parameter2: double;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i2 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnScriptSetVarD(int,int,int,double)>($i2, i0, i1, d0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nScriptSetVarF(int, int, float)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, $i2;
        float f0;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i2 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnScriptSetVarF(int,int,int,float)>($i2, i0, i1, f0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nScriptSetVarI(int, int, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, $i3;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i3 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnScriptSetVarI(int,int,int,int)>($i3, i0, i1, i2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nScriptSetVarJ(int, int, long)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, $i3;
        long l2;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i3 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnScriptSetVarJ(int,int,int,long)>($i3, i0, i1, l2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nScriptSetVarObj(int, int, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, $i3;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i3 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnScriptSetVarObj(int,int,int,int)>($i3, i0, i1, i2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nScriptSetVarV(int, int, byte[])
    {
        android.renderscript.RenderScript r0;
        int i0, i1, $i2;
        byte[] r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: byte[];

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i2 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnScriptSetVarV(int,int,int,byte[])>($i2, i0, i1, r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nScriptSetVarVE(int, int, byte[], int, int[])
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, $i3;
        byte[] r1;
        int[] r2;
        java.lang.Throwable r3, $r4;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: byte[];

        i2 := @parameter3: int;

        r2 := @parameter4: int[];

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i3 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnScriptSetVarVE(int,int,int,byte[],int,int[])>($i3, i0, i1, r1, i2, r2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

        exitmonitor r0;

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    int nTypeCreate(int, int, int, int, boolean, boolean, int)
    {
        android.renderscript.RenderScript r0;
        int i0, i1, i2, i3, i4, i5, $i6;
        boolean z0, z1;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        i4 := @parameter6: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i6 = r0.<android.renderscript.RenderScript: int mContext>;

        i5 = virtualinvoke r0.<android.renderscript.RenderScript: int rsnTypeCreate(int,int,int,int,int,boolean,boolean,int)>($i6, i0, i1, i2, i3, z0, z1, i4);

     label2:
        exitmonitor r0;

        return i5;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void nTypeGetNativeData(int, int[])
    {
        android.renderscript.RenderScript r0;
        int i0, $i1;
        int[] r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i1 = r0.<android.renderscript.RenderScript: int mContext>;

        virtualinvoke r0.<android.renderscript.RenderScript: void rsnTypeGetNativeData(int,int,int[])>($i1, i0, r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    native void rsnAllocationCopyFromBitmap(int, int, android.graphics.Bitmap);

    native void rsnAllocationCopyToBitmap(int, int, android.graphics.Bitmap);

    native int rsnAllocationCreateBitmapBackedAllocation(int, int, int, android.graphics.Bitmap, int);

    native int rsnAllocationCreateBitmapRef(int, int, android.graphics.Bitmap);

    native int rsnAllocationCreateFromAssetStream(int, int, int, int);

    native int rsnAllocationCreateFromBitmap(int, int, int, android.graphics.Bitmap, int);

    native int rsnAllocationCreateTyped(int, int, int, int, int);

    native int rsnAllocationCubeCreateFromBitmap(int, int, int, android.graphics.Bitmap, int);

    native void rsnAllocationData1D(int, int, int, int, int, byte[], int);

    native void rsnAllocationData1D(int, int, int, int, int, float[], int);

    native void rsnAllocationData1D(int, int, int, int, int, int[], int);

    native void rsnAllocationData1D(int, int, int, int, int, short[], int);

    native void rsnAllocationData2D(int, int, int, int, int, int, int, int, int, int, int, int, int);

    native void rsnAllocationData2D(int, int, int, int, int, int, int, int, byte[], int);

    native void rsnAllocationData2D(int, int, int, int, int, int, int, int, float[], int);

    native void rsnAllocationData2D(int, int, int, int, int, int, int, int, int[], int);

    native void rsnAllocationData2D(int, int, int, int, int, int, int, int, short[], int);

    native void rsnAllocationData2D(int, int, int, int, int, int, android.graphics.Bitmap);

    native void rsnAllocationData3D(int, int, int, int, int, int, int, int, int, int, int, int, int, int);

    native void rsnAllocationData3D(int, int, int, int, int, int, int, int, int, byte[], int);

    native void rsnAllocationData3D(int, int, int, int, int, int, int, int, int, float[], int);

    native void rsnAllocationData3D(int, int, int, int, int, int, int, int, int, int[], int);

    native void rsnAllocationData3D(int, int, int, int, int, int, int, int, int, short[], int);

    native void rsnAllocationElementData1D(int, int, int, int, int, byte[], int);

    native void rsnAllocationGenerateMipmaps(int, int);

    native android.view.Surface rsnAllocationGetSurface(int, int);

    native int rsnAllocationGetType(int, int);

    native void rsnAllocationIoReceive(int, int);

    native void rsnAllocationIoSend(int, int);

    native void rsnAllocationRead(int, int, byte[]);

    native void rsnAllocationRead(int, int, float[]);

    native void rsnAllocationRead(int, int, int[]);

    native void rsnAllocationRead(int, int, short[]);

    native void rsnAllocationResize1D(int, int, int);

    native void rsnAllocationSetSurface(int, int, android.view.Surface);

    native void rsnAllocationSyncAll(int, int, int);

    native void rsnAssignName(int, int, byte[]);

    native void rsnContextBindProgramFragment(int, int);

    native void rsnContextBindProgramRaster(int, int);

    native void rsnContextBindProgramStore(int, int);

    native void rsnContextBindProgramVertex(int, int);

    native void rsnContextBindRootScript(int, int);

    native void rsnContextBindSampler(int, int, int);

    native int rsnContextCreate(int, int, int, int);

    native int rsnContextCreateGL(int, int, int, int, int, int, int, int, int, int, int, int, int, float, int);

    native void rsnContextDestroy(int);

    native void rsnContextDump(int, int);

    native void rsnContextFinish(int);

    native void rsnContextPause(int);

    native void rsnContextResume(int);

    native void rsnContextSendMessage(int, int, int[]);

    native void rsnContextSetPriority(int, int);

    native void rsnContextSetSurface(int, int, int, android.view.Surface);

    native void rsnContextSetSurfaceTexture(int, int, int, android.graphics.SurfaceTexture);

    native int rsnElementCreate(int, int, int, boolean, int);

    native int rsnElementCreate2(int, int[], java.lang.String[], int[]);

    native void rsnElementGetNativeData(int, int, int[]);

    native void rsnElementGetSubElements(int, int, int[], java.lang.String[], int[]);

    native int rsnFileA3DCreateFromAsset(int, android.content.res.AssetManager, java.lang.String);

    native int rsnFileA3DCreateFromAssetStream(int, int);

    native int rsnFileA3DCreateFromFile(int, java.lang.String);

    native int rsnFileA3DGetEntryByIndex(int, int, int);

    native void rsnFileA3DGetIndexEntries(int, int, int, int[], java.lang.String[]);

    native int rsnFileA3DGetNumIndexEntries(int, int);

    native int rsnFontCreateFromAsset(int, android.content.res.AssetManager, java.lang.String, float, int);

    native int rsnFontCreateFromAssetStream(int, java.lang.String, float, int, int);

    native int rsnFontCreateFromFile(int, java.lang.String, float, int);

    native java.lang.String rsnGetName(int, int);

    native int rsnMeshCreate(int, int[], int[], int[]);

    native int rsnMeshGetIndexCount(int, int);

    native void rsnMeshGetIndices(int, int, int[], int[], int);

    native int rsnMeshGetVertexBufferCount(int, int);

    native void rsnMeshGetVertices(int, int, int[], int);

    native void rsnObjDestroy(int, int);

    native int rsnPathCreate(int, int, boolean, int, int, float);

    native void rsnProgramBindConstants(int, int, int, int);

    native void rsnProgramBindSampler(int, int, int, int);

    native void rsnProgramBindTexture(int, int, int, int);

    native int rsnProgramFragmentCreate(int, java.lang.String, java.lang.String[], int[]);

    native int rsnProgramRasterCreate(int, boolean, int);

    native int rsnProgramStoreCreate(int, boolean, boolean, boolean, boolean, boolean, boolean, int, int, int);

    native int rsnProgramVertexCreate(int, java.lang.String, java.lang.String[], int[]);

    native int rsnSamplerCreate(int, int, int, int, int, int, float);

    native void rsnScriptBindAllocation(int, int, int, int);

    native int rsnScriptCCreate(int, java.lang.String, java.lang.String, byte[], int);

    native int rsnScriptFieldIDCreate(int, int, int);

    native void rsnScriptForEach(int, int, int, int, int);

    native void rsnScriptForEach(int, int, int, int, int, byte[]);

    native void rsnScriptForEachClipped(int, int, int, int, int, int, int, int, int, int, int);

    native void rsnScriptForEachClipped(int, int, int, int, int, byte[], int, int, int, int, int, int);

    native double rsnScriptGetVarD(int, int, int);

    native float rsnScriptGetVarF(int, int, int);

    native int rsnScriptGetVarI(int, int, int);

    native long rsnScriptGetVarJ(int, int, int);

    native void rsnScriptGetVarV(int, int, int, byte[]);

    native int rsnScriptGroupCreate(int, int[], int[], int[], int[], int[]);

    native void rsnScriptGroupExecute(int, int);

    native void rsnScriptGroupSetInput(int, int, int, int);

    native void rsnScriptGroupSetOutput(int, int, int, int);

    native int rsnScriptIntrinsicCreate(int, int, int);

    native void rsnScriptInvoke(int, int, int);

    native void rsnScriptInvokeV(int, int, int, byte[]);

    native int rsnScriptKernelIDCreate(int, int, int, int);

    native void rsnScriptSetTimeZone(int, int, byte[]);

    native void rsnScriptSetVarD(int, int, int, double);

    native void rsnScriptSetVarF(int, int, int, float);

    native void rsnScriptSetVarI(int, int, int, int);

    native void rsnScriptSetVarJ(int, int, int, long);

    native void rsnScriptSetVarObj(int, int, int, int);

    native void rsnScriptSetVarV(int, int, int, byte[]);

    native void rsnScriptSetVarVE(int, int, int, byte[], int, int[]);

    native int rsnTypeCreate(int, int, int, int, int, boolean, boolean, int);

    native void rsnTypeGetNativeData(int, int, int[]);

    int safeID(android.renderscript.BaseObj)
    {
        android.renderscript.RenderScript r0;
        android.renderscript.BaseObj r1;
        int $i0;

        r0 := @this: android.renderscript.RenderScript;

        r1 := @parameter0: android.renderscript.BaseObj;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<android.renderscript.BaseObj: int getID(android.renderscript.RenderScript)>(r0);

        return $i0;

     label1:
        return 0;
    }

    public void sendMessage(int, int[])
    {
        android.renderscript.RenderScript r0;
        int i0;
        int[] r1;

        r0 := @this: android.renderscript.RenderScript;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        virtualinvoke r0.<android.renderscript.RenderScript: void nContextSendMessage(int,int[])>(i0, r1);

        return;
    }

    public void setErrorHandler(android.renderscript.RenderScript$RSErrorHandler)
    {
        android.renderscript.RenderScript r0;
        android.renderscript.RenderScript$RSErrorHandler r1;

        r0 := @this: android.renderscript.RenderScript;

        r1 := @parameter0: android.renderscript.RenderScript$RSErrorHandler;

        r0.<android.renderscript.RenderScript: android.renderscript.RenderScript$RSErrorHandler mErrorCallback> = r1;

        return;
    }

    public void setMessageHandler(android.renderscript.RenderScript$RSMessageHandler)
    {
        android.renderscript.RenderScript r0;
        android.renderscript.RenderScript$RSMessageHandler r1;

        r0 := @this: android.renderscript.RenderScript;

        r1 := @parameter0: android.renderscript.RenderScript$RSMessageHandler;

        r0.<android.renderscript.RenderScript: android.renderscript.RenderScript$RSMessageHandler mMessageCallback> = r1;

        return;
    }

    public void setPriority(android.renderscript.RenderScript$Priority)
    {
        android.renderscript.RenderScript r0;
        android.renderscript.RenderScript$Priority r1;
        int $i0;

        r0 := @this: android.renderscript.RenderScript;

        r1 := @parameter0: android.renderscript.RenderScript$Priority;

        virtualinvoke r0.<android.renderscript.RenderScript: void validate()>();

        $i0 = r1.<android.renderscript.RenderScript$Priority: int mID>;

        virtualinvoke r0.<android.renderscript.RenderScript: void nContextSetPriority(int)>($i0);

        return;
    }

    void validate()
    {
        android.renderscript.RenderScript r0;
        int $i0;
        android.renderscript.RSInvalidStateException $r1;

        r0 := @this: android.renderscript.RenderScript;

        $i0 = r0.<android.renderscript.RenderScript: int mContext>;

        if $i0 != 0 goto label1;

        $r1 = new android.renderscript.RSInvalidStateException;

        specialinvoke $r1.<android.renderscript.RSInvalidStateException: void <init>(java.lang.String)>("Calling RS with no Context active.");

        throw $r1;

     label1:
        return;
    }
}
