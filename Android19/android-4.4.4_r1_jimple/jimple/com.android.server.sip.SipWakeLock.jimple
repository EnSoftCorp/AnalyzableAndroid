class com.android.server.sip.SipWakeLock extends java.lang.Object
{
    private static final boolean DBG;
    private static final java.lang.String TAG;
    private java.util.HashSet mHolders;
    private android.os.PowerManager mPowerManager;
    private android.os.PowerManager$WakeLock mTimerWakeLock;
    private android.os.PowerManager$WakeLock mWakeLock;

    void <init>(android.os.PowerManager)
    {
        com.android.server.sip.SipWakeLock r0;
        android.os.PowerManager r1;
        java.util.HashSet $r2;

        r0 := @this: com.android.server.sip.SipWakeLock;

        r1 := @parameter0: android.os.PowerManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r0.<com.android.server.sip.SipWakeLock: java.util.HashSet mHolders> = $r2;

        r0.<com.android.server.sip.SipWakeLock: android.os.PowerManager mPowerManager> = r1;

        return;
    }

    private void log(java.lang.String)
    {
        com.android.server.sip.SipWakeLock r0;
        java.lang.String r1;

        r0 := @this: com.android.server.sip.SipWakeLock;

        r1 := @parameter0: java.lang.String;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("SipWakeLock", r1);

        return;
    }

    void acquire(long)
    {
        com.android.server.sip.SipWakeLock r0;
        long l0;
        java.lang.Throwable r1, $r7;
        android.os.PowerManager$WakeLock $r2, $r3, $r5, $r6;
        android.os.PowerManager $r4;

        r0 := @this: com.android.server.sip.SipWakeLock;

        l0 := @parameter0: long;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.sip.SipWakeLock: android.os.PowerManager$WakeLock mTimerWakeLock>;

        if $r2 != null goto label2;

        $r4 = r0.<com.android.server.sip.SipWakeLock: android.os.PowerManager mPowerManager>;

        $r5 = virtualinvoke $r4.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "SipWakeLock.timer");

        r0.<com.android.server.sip.SipWakeLock: android.os.PowerManager$WakeLock mTimerWakeLock> = $r5;

        $r6 = r0.<com.android.server.sip.SipWakeLock: android.os.PowerManager$WakeLock mTimerWakeLock>;

        virtualinvoke $r6.<android.os.PowerManager$WakeLock: void setReferenceCounted(boolean)>(1);

     label2:
        $r3 = r0.<com.android.server.sip.SipWakeLock: android.os.PowerManager$WakeLock mTimerWakeLock>;

        virtualinvoke $r3.<android.os.PowerManager$WakeLock: void acquire(long)>(l0);

     label3:
        exitmonitor r0;

        return;

     label4:
        $r7 := @caughtexception;

        r1 = $r7;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    void acquire(java.lang.Object)
    {
        com.android.server.sip.SipWakeLock r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r9;
        java.util.HashSet $r3;
        android.os.PowerManager$WakeLock $r4, $r5, $r6, $r8;
        boolean $z1;
        android.os.PowerManager $r7;

        r0 := @this: com.android.server.sip.SipWakeLock;

        r1 := @parameter0: java.lang.Object;

        entermonitor r0;

     label1:
        $r3 = r0.<com.android.server.sip.SipWakeLock: java.util.HashSet mHolders>;

        virtualinvoke $r3.<java.util.HashSet: boolean add(java.lang.Object)>(r1);

        $r4 = r0.<com.android.server.sip.SipWakeLock: android.os.PowerManager$WakeLock mWakeLock>;

        if $r4 != null goto label2;

        $r7 = r0.<com.android.server.sip.SipWakeLock: android.os.PowerManager mPowerManager>;

        $r8 = virtualinvoke $r7.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "SipWakeLock");

        r0.<com.android.server.sip.SipWakeLock: android.os.PowerManager$WakeLock mWakeLock> = $r8;

     label2:
        $r5 = r0.<com.android.server.sip.SipWakeLock: android.os.PowerManager$WakeLock mWakeLock>;

        $z1 = virtualinvoke $r5.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z1 != 0 goto label3;

        $r6 = r0.<com.android.server.sip.SipWakeLock: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r6.<android.os.PowerManager$WakeLock: void acquire()>();

     label3:
        exitmonitor r0;

        return;

     label4:
        $r9 := @caughtexception;

        r2 = $r9;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    void release(java.lang.Object)
    {
        com.android.server.sip.SipWakeLock r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r8;
        java.util.HashSet $r3, $r5;
        android.os.PowerManager$WakeLock $r4, $r6, $r7;
        boolean $z1, $z2;

        r0 := @this: com.android.server.sip.SipWakeLock;

        r1 := @parameter0: java.lang.Object;

        entermonitor r0;

     label1:
        $r3 = r0.<com.android.server.sip.SipWakeLock: java.util.HashSet mHolders>;

        virtualinvoke $r3.<java.util.HashSet: boolean remove(java.lang.Object)>(r1);

        $r4 = r0.<com.android.server.sip.SipWakeLock: android.os.PowerManager$WakeLock mWakeLock>;

        if $r4 == null goto label2;

        $r5 = r0.<com.android.server.sip.SipWakeLock: java.util.HashSet mHolders>;

        $z1 = virtualinvoke $r5.<java.util.HashSet: boolean isEmpty()>();

        if $z1 == 0 goto label2;

        $r6 = r0.<com.android.server.sip.SipWakeLock: android.os.PowerManager$WakeLock mWakeLock>;

        $z2 = virtualinvoke $r6.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z2 == 0 goto label2;

        $r7 = r0.<com.android.server.sip.SipWakeLock: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r7.<android.os.PowerManager$WakeLock: void release()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void reset()
    {
        com.android.server.sip.SipWakeLock r0;
        java.lang.Throwable r1, $r3;
        java.util.HashSet $r2;

        r0 := @this: com.android.server.sip.SipWakeLock;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.sip.SipWakeLock: java.util.HashSet mHolders>;

        virtualinvoke $r2.<java.util.HashSet: void clear()>();

        virtualinvoke r0.<com.android.server.sip.SipWakeLock: void release(java.lang.Object)>(null);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <com.android.server.sip.SipWakeLock: java.lang.String TAG> = "SipWakeLock";

        <com.android.server.sip.SipWakeLock: boolean DBG> = 0;

        return;
    }
}
