public class android.media.Ringtone extends java.lang.Object
{
    private static final boolean LOGD;
    private static final java.lang.String[] MEDIA_COLUMNS;
    private static final java.lang.String TAG;
    private final boolean mAllowRemote;
    private final android.media.AudioManager mAudioManager;
    private final android.content.Context mContext;
    private android.media.MediaPlayer mLocalPlayer;
    private final android.media.IRingtonePlayer mRemotePlayer;
    private final android.os.Binder mRemoteToken;
    private int mStreamType;
    private java.lang.String mTitle;
    private android.net.Uri mUri;

    static void <clinit>()
    {
        java.lang.String[] $r0;

        <android.media.Ringtone: java.lang.String TAG> = "Ringtone";

        <android.media.Ringtone: boolean LOGD> = 1;

        $r0 = newarray (java.lang.String)[3];

        $r0[0] = "_id";

        $r0[1] = "_data";

        $r0[2] = "title";

        <android.media.Ringtone: java.lang.String[] MEDIA_COLUMNS> = $r0;

        return;
    }

    public void <init>(android.content.Context, boolean)
    {
        android.media.Ringtone r0;
        android.content.Context r1, $r4;
        boolean z0;
        android.media.IRingtonePlayer r2;
        android.os.Binder r3, $r7;
        java.lang.Object $r5;
        android.media.AudioManager $r6, $r8;

        r0 := @this: android.media.Ringtone;

        r1 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.Ringtone: int mStreamType> = 2;

        r0.<android.media.Ringtone: android.content.Context mContext> = r1;

        $r4 = r0.<android.media.Ringtone: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("audio");

        $r6 = (android.media.AudioManager) $r5;

        r0.<android.media.Ringtone: android.media.AudioManager mAudioManager> = $r6;

        r0.<android.media.Ringtone: boolean mAllowRemote> = z0;

        if z0 == 0 goto label3;

        $r8 = r0.<android.media.Ringtone: android.media.AudioManager mAudioManager>;

        r2 = virtualinvoke $r8.<android.media.AudioManager: android.media.IRingtonePlayer getRingtonePlayer()>();

     label1:
        r0.<android.media.Ringtone: android.media.IRingtonePlayer mRemotePlayer> = r2;

        r3 = null;

        if z0 == 0 goto label2;

        $r7 = new android.os.Binder;

        specialinvoke $r7.<android.os.Binder: void <init>()>();

        r3 = $r7;

     label2:
        r0.<android.media.Ringtone: android.os.Binder mRemoteToken> = r3;

        return;

     label3:
        r2 = null;

        goto label1;
    }

    private void destroyLocalPlayer()
    {
        android.media.Ringtone r0;
        android.media.MediaPlayer $r1, $r2, $r3;

        r0 := @this: android.media.Ringtone;

        $r1 = r0.<android.media.Ringtone: android.media.MediaPlayer mLocalPlayer>;

        if $r1 == null goto label1;

        $r2 = r0.<android.media.Ringtone: android.media.MediaPlayer mLocalPlayer>;

        virtualinvoke $r2.<android.media.MediaPlayer: void reset()>();

        $r3 = r0.<android.media.Ringtone: android.media.MediaPlayer mLocalPlayer>;

        virtualinvoke $r3.<android.media.MediaPlayer: void release()>();

        r0.<android.media.Ringtone: android.media.MediaPlayer mLocalPlayer> = null;

     label1:
        return;
    }

    private static java.lang.String getTitle(android.content.Context, android.net.Uri, boolean)
    {
        android.content.Context r0;
        android.net.Uri r1, $r17;
        boolean z0, z1, $z2;
        android.content.ContentResolver r2;
        java.lang.String r3, r4, r5, r9, r10, $r12, $r13, $r18;
        android.database.Cursor r7, r11;
        java.lang.Throwable r8, $r16;
        int $i0, $i1;
        java.lang.String[] $r14;
        java.lang.Object[] $r15;
        java.lang.SecurityException $r19;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        z0 := @parameter2: boolean;

        r2 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r3 = null;

        if r1 == null goto label01;

        r5 = virtualinvoke r1.<android.net.Uri: java.lang.String getAuthority()>();

        $r12 = "settings";

        $z2 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z2 == 0 goto label04;

        r3 = null;

        if z0 == 0 goto label01;

        $r15 = newarray (java.lang.Object)[1];

        $i1 = staticinvoke <android.media.RingtoneManager: int getDefaultType(android.net.Uri)>(r1);

        $r17 = staticinvoke <android.media.RingtoneManager: android.net.Uri getActualDefaultRingtoneUri(android.content.Context,int)>(r0, $i1);

        $r18 = staticinvoke <android.media.Ringtone: java.lang.String getTitle(android.content.Context,android.net.Uri,boolean)>(r0, $r17, 0);

        $r15[0] = $r18;

        r3 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>(17040429, $r15);

     label01:
        if r3 != null goto label02;

        r3 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int)>(17040432);

        if r3 != null goto label02;

        r3 = "";

     label02:
        r4 = r3;

     label03:
        return r4;

     label04:
        $r13 = "media";

        z1 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r5);

     label05:
        r7 = null;

        if z1 == 0 goto label08;

     label06:
        $r14 = <android.media.Ringtone: java.lang.String[] MEDIA_COLUMNS>;

        r11 = virtualinvoke r2.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r1, $r14, null, null, null);

     label07:
        r7 = r11;

     label08:
        if r7 == null goto label11;

     label09:
        $i0 = interfaceinvoke r7.<android.database.Cursor: int getCount()>();

        if $i0 != 1 goto label11;

        interfaceinvoke r7.<android.database.Cursor: boolean moveToFirst()>();

        r10 = interfaceinvoke r7.<android.database.Cursor: java.lang.String getString(int)>(2);

     label10:
        r4 = r10;

        if r7 == null goto label03;

        interfaceinvoke r7.<android.database.Cursor: void close()>();

        return r4;

     label11:
        r9 = virtualinvoke r1.<android.net.Uri: java.lang.String getLastPathSegment()>();

     label12:
        r3 = r9;

        if r7 == null goto label01;

        interfaceinvoke r7.<android.database.Cursor: void close()>();

        goto label01;

     label13:
        $r16 := @caughtexception;

        r8 = $r16;

        if r7 == null goto label14;

        interfaceinvoke r7.<android.database.Cursor: void close()>();

     label14:
        throw r8;

     label15:
        $r19 := @caughtexception;

        r7 = null;

        goto label08;

        catch java.lang.SecurityException from label04 to label05 with label15;
        catch java.lang.SecurityException from label06 to label07 with label15;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
    }

    private boolean playFallbackRingtone()
    {
        android.media.Ringtone r0;
        int i0, $i1, $i2, $i7;
        android.content.res.AssetFileDescriptor r3;
        android.media.AudioManager $r4;
        android.net.Uri $r5, $r18, $r19;
        android.content.Context $r6, $r15;
        android.content.res.Resources $r7;
        long $l4, $l6, $l8;
        android.media.MediaPlayer $r8, $r9, $r11, $r12, $r13, $r14;
        byte $b5;
        java.io.FileDescriptor $r10, $r16;
        java.lang.StringBuilder $r17, $r20, $r21;
        android.content.res.Resources$NotFoundException $r22;
        java.lang.String $r23;
        java.io.IOException $r24;

        r0 := @this: android.media.Ringtone;

        $r4 = r0.<android.media.Ringtone: android.media.AudioManager mAudioManager>;

        $i1 = r0.<android.media.Ringtone: int mStreamType>;

        $i2 = virtualinvoke $r4.<android.media.AudioManager: int getStreamVolume(int)>($i1);

        if $i2 == 0 goto label09;

        $r5 = r0.<android.media.Ringtone: android.net.Uri mUri>;

        i0 = staticinvoke <android.media.RingtoneManager: int getDefaultType(android.net.Uri)>($r5);

        if i0 == -1 goto label01;

        $r15 = r0.<android.media.Ringtone: android.content.Context mContext>;

        $r18 = staticinvoke <android.media.RingtoneManager: android.net.Uri getActualDefaultRingtoneUri(android.content.Context,int)>($r15, i0);

        if $r18 == null goto label13;

     label01:
        $r6 = r0.<android.media.Ringtone: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.res.Resources getResources()>();

        r3 = virtualinvoke $r7.<android.content.res.Resources: android.content.res.AssetFileDescriptor openRawResourceFd(int)>(17825793);

     label02:
        if r3 == null goto label10;

     label03:
        $r8 = new android.media.MediaPlayer;

        specialinvoke $r8.<android.media.MediaPlayer: void <init>()>();

        r0.<android.media.Ringtone: android.media.MediaPlayer mLocalPlayer> = $r8;

        $l4 = virtualinvoke r3.<android.content.res.AssetFileDescriptor: long getDeclaredLength()>();

        $b5 = $l4 cmp 0L;

        if $b5 >= 0 goto label06;

        $r13 = r0.<android.media.Ringtone: android.media.MediaPlayer mLocalPlayer>;

        $r16 = virtualinvoke r3.<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        virtualinvoke $r13.<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor)>($r16);

     label04:
        $r12 = r0.<android.media.Ringtone: android.media.MediaPlayer mLocalPlayer>;

        $i7 = r0.<android.media.Ringtone: int mStreamType>;

        virtualinvoke $r12.<android.media.MediaPlayer: void setAudioStreamType(int)>($i7);

        $r11 = r0.<android.media.Ringtone: android.media.MediaPlayer mLocalPlayer>;

        virtualinvoke $r11.<android.media.MediaPlayer: void prepare()>();

        $r14 = r0.<android.media.Ringtone: android.media.MediaPlayer mLocalPlayer>;

        virtualinvoke $r14.<android.media.MediaPlayer: void start()>();

        virtualinvoke r3.<android.content.res.AssetFileDescriptor: void close()>();

     label05:
        return 1;

     label06:
        $r9 = r0.<android.media.Ringtone: android.media.MediaPlayer mLocalPlayer>;

        $r10 = virtualinvoke r3.<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        $l6 = virtualinvoke r3.<android.content.res.AssetFileDescriptor: long getStartOffset()>();

        $l8 = virtualinvoke r3.<android.content.res.AssetFileDescriptor: long getDeclaredLength()>();

        virtualinvoke $r9.<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>($r10, $l6, $l8);

     label07:
        goto label04;

     label08:
        $r24 := @caughtexception;

        specialinvoke r0.<android.media.Ringtone: void destroyLocalPlayer()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Ringtone", "Failed to open fallback ringtone");

     label09:
        return 0;

     label10:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Ringtone", "Could not load fallback ringtone");

     label11:
        goto label09;

     label12:
        $r22 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Ringtone", "Fallback ringtone does not exist");

        goto label09;

     label13:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not playing fallback for ");

        $r19 = r0.<android.media.Ringtone: android.net.Uri mUri>;

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Ringtone", $r23);

        goto label09;

        catch java.io.IOException from label01 to label02 with label08;
        catch android.content.res.Resources$NotFoundException from label01 to label02 with label12;
        catch java.io.IOException from label03 to label04 with label08;
        catch android.content.res.Resources$NotFoundException from label03 to label04 with label12;
        catch java.io.IOException from label04 to label05 with label08;
        catch android.content.res.Resources$NotFoundException from label04 to label05 with label12;
        catch java.io.IOException from label06 to label07 with label08;
        catch android.content.res.Resources$NotFoundException from label06 to label07 with label12;
        catch java.io.IOException from label10 to label11 with label08;
        catch android.content.res.Resources$NotFoundException from label10 to label11 with label12;
    }

    public int getStreamType()
    {
        android.media.Ringtone r0;
        int $i0;

        r0 := @this: android.media.Ringtone;

        $i0 = r0.<android.media.Ringtone: int mStreamType>;

        return $i0;
    }

    public java.lang.String getTitle(android.content.Context)
    {
        android.media.Ringtone r0;
        android.content.Context r1;
        java.lang.String r2, $r3, $r5;
        android.net.Uri $r4;

        r0 := @this: android.media.Ringtone;

        r1 := @parameter0: android.content.Context;

        $r3 = r0.<android.media.Ringtone: java.lang.String mTitle>;

        if $r3 == null goto label1;

        $r5 = r0.<android.media.Ringtone: java.lang.String mTitle>;

        return $r5;

     label1:
        $r4 = r0.<android.media.Ringtone: android.net.Uri mUri>;

        r2 = staticinvoke <android.media.Ringtone: java.lang.String getTitle(android.content.Context,android.net.Uri,boolean)>(r1, $r4, 1);

        r0.<android.media.Ringtone: java.lang.String mTitle> = r2;

        return r2;
    }

    public android.net.Uri getUri()
    {
        android.media.Ringtone r0;
        android.net.Uri $r1;

        r0 := @this: android.media.Ringtone;

        $r1 = r0.<android.media.Ringtone: android.net.Uri mUri>;

        return $r1;
    }

    public boolean isPlaying()
    {
        android.media.Ringtone r0;
        android.os.RemoteException r1, $r6;
        boolean z0, $z1, $z2;
        android.media.MediaPlayer $r2, $r5;
        android.os.Binder $r3;
        android.media.IRingtonePlayer $r4;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: android.media.Ringtone;

        $r2 = r0.<android.media.Ringtone: android.media.MediaPlayer mLocalPlayer>;

        if $r2 == null goto label1;

        $r5 = r0.<android.media.Ringtone: android.media.MediaPlayer mLocalPlayer>;

        $z2 = virtualinvoke $r5.<android.media.MediaPlayer: boolean isPlaying()>();

        return $z2;

     label1:
        $z1 = r0.<android.media.Ringtone: boolean mAllowRemote>;

        if $z1 == 0 goto label5;

     label2:
        $r4 = r0.<android.media.Ringtone: android.media.IRingtonePlayer mRemotePlayer>;

        $r3 = r0.<android.media.Ringtone: android.os.Binder mRemoteToken>;

        z0 = interfaceinvoke $r4.<android.media.IRingtonePlayer: boolean isPlaying(android.os.IBinder)>($r3);

     label3:
        return z0;

     label4:
        $r6 := @caughtexception;

        r1 = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Problem checking ringtone: ");

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Ringtone", $r10);

        return 0;

     label5:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Ringtone", "Neither local nor remote playback available");

        return 0;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public void play()
    {
        android.media.Ringtone r0;
        android.net.Uri r1, $r4;
        android.os.RemoteException r2, $r8;
        android.media.MediaPlayer $r3, $r9;
        boolean $z0, $z1, $z2;
        int $i1, $i2, $i3;
        android.os.Binder $r5;
        android.media.IRingtonePlayer $r6;
        android.media.AudioManager $r7;
        java.lang.StringBuilder $r10, $r11, $r13;
        java.lang.String $r12;

        r0 := @this: android.media.Ringtone;

        $r3 = r0.<android.media.Ringtone: android.media.MediaPlayer mLocalPlayer>;

        if $r3 == null goto label2;

        $r7 = r0.<android.media.Ringtone: android.media.AudioManager mAudioManager>;

        $i2 = r0.<android.media.Ringtone: int mStreamType>;

        $i3 = virtualinvoke $r7.<android.media.AudioManager: int getStreamVolume(int)>($i2);

        if $i3 == 0 goto label1;

        $r9 = r0.<android.media.Ringtone: android.media.MediaPlayer mLocalPlayer>;

        virtualinvoke $r9.<android.media.MediaPlayer: void start()>();

     label1:
        return;

     label2:
        $z0 = r0.<android.media.Ringtone: boolean mAllowRemote>;

        if $z0 == 0 goto label6;

        $r4 = r0.<android.media.Ringtone: android.net.Uri mUri>;

        r1 = virtualinvoke $r4.<android.net.Uri: android.net.Uri getCanonicalUri()>();

     label3:
        $r6 = r0.<android.media.Ringtone: android.media.IRingtonePlayer mRemotePlayer>;

        $r5 = r0.<android.media.Ringtone: android.os.Binder mRemoteToken>;

        $i1 = r0.<android.media.Ringtone: int mStreamType>;

        interfaceinvoke $r6.<android.media.IRingtonePlayer: void play(android.os.IBinder,android.net.Uri,int)>($r5, r1, $i1);

     label4:
        return;

     label5:
        $r8 := @caughtexception;

        r2 = $r8;

        $z2 = specialinvoke r0.<android.media.Ringtone: boolean playFallbackRingtone()>();

        if $z2 != 0 goto label1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Problem playing ringtone: ");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Ringtone", $r12);

        return;

     label6:
        $z1 = specialinvoke r0.<android.media.Ringtone: boolean playFallbackRingtone()>();

        if $z1 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Ringtone", "Neither local nor remote playback available");

        return;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public void setStreamType(int)
    {
        android.media.Ringtone r0;
        int i0;
        android.net.Uri $r1;

        r0 := @this: android.media.Ringtone;

        i0 := @parameter0: int;

        r0.<android.media.Ringtone: int mStreamType> = i0;

        $r1 = r0.<android.media.Ringtone: android.net.Uri mUri>;

        virtualinvoke r0.<android.media.Ringtone: void setUri(android.net.Uri)>($r1);

        return;
    }

    void setTitle(java.lang.String)
    {
        android.media.Ringtone r0;
        java.lang.String r1;

        r0 := @this: android.media.Ringtone;

        r1 := @parameter0: java.lang.String;

        r0.<android.media.Ringtone: java.lang.String mTitle> = r1;

        return;
    }

    public void setUri(android.net.Uri)
    {
        android.media.Ringtone r0;
        android.net.Uri r1, $r4, $r6;
        java.io.IOException r2, $r12;
        java.lang.SecurityException r3, $r17;
        android.media.MediaPlayer $r5, $r8, $r9, $r10, $r11;
        android.content.Context $r7;
        int $i0;
        boolean $z0, $z1;
        java.lang.StringBuilder $r13, $r14, $r15, $r18, $r19, $r20;
        java.lang.String $r16, $r21;

        r0 := @this: android.media.Ringtone;

        r1 := @parameter0: android.net.Uri;

        specialinvoke r0.<android.media.Ringtone: void destroyLocalPlayer()>();

        r0.<android.media.Ringtone: android.net.Uri mUri> = r1;

        $r4 = r0.<android.media.Ringtone: android.net.Uri mUri>;

        if $r4 != null goto label1;

        return;

     label1:
        $r5 = new android.media.MediaPlayer;

        specialinvoke $r5.<android.media.MediaPlayer: void <init>()>();

        r0.<android.media.Ringtone: android.media.MediaPlayer mLocalPlayer> = $r5;

     label2:
        $r8 = r0.<android.media.Ringtone: android.media.MediaPlayer mLocalPlayer>;

        $r7 = r0.<android.media.Ringtone: android.content.Context mContext>;

        $r6 = r0.<android.media.Ringtone: android.net.Uri mUri>;

        virtualinvoke $r8.<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)>($r7, $r6);

        $r9 = r0.<android.media.Ringtone: android.media.MediaPlayer mLocalPlayer>;

        $i0 = r0.<android.media.Ringtone: int mStreamType>;

        virtualinvoke $r9.<android.media.MediaPlayer: void setAudioStreamType(int)>($i0);

        $r10 = r0.<android.media.Ringtone: android.media.MediaPlayer mLocalPlayer>;

        virtualinvoke $r10.<android.media.MediaPlayer: void prepare()>();

     label3:
        $r11 = r0.<android.media.Ringtone: android.media.MediaPlayer mLocalPlayer>;

        if $r11 == null goto label6;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Ringtone", "Successfully created local player");

        return;

     label4:
        $r17 := @caughtexception;

        r3 = $r17;

        specialinvoke r0.<android.media.Ringtone: void destroyLocalPlayer()>();

        $z1 = r0.<android.media.Ringtone: boolean mAllowRemote>;

        if $z1 != 0 goto label3;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Remote playback not allowed: ");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Ringtone", $r21);

        goto label3;

     label5:
        $r12 := @caughtexception;

        r2 = $r12;

        specialinvoke r0.<android.media.Ringtone: void destroyLocalPlayer()>();

        $z0 = r0.<android.media.Ringtone: boolean mAllowRemote>;

        if $z0 != 0 goto label3;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Remote playback not allowed: ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Ringtone", $r16);

        goto label3;

     label6:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Ringtone", "Problem opening; delegating to remote player");

        return;

        catch java.lang.SecurityException from label2 to label3 with label4;
        catch java.io.IOException from label2 to label3 with label5;
    }

    public void stop()
    {
        android.media.Ringtone r0;
        android.os.RemoteException r1, $r5;
        android.media.MediaPlayer $r2;
        boolean $z0;
        android.os.Binder $r3;
        android.media.IRingtonePlayer $r4;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: android.media.Ringtone;

        $r2 = r0.<android.media.Ringtone: android.media.MediaPlayer mLocalPlayer>;

        if $r2 == null goto label2;

        specialinvoke r0.<android.media.Ringtone: void destroyLocalPlayer()>();

     label1:
        return;

     label2:
        $z0 = r0.<android.media.Ringtone: boolean mAllowRemote>;

        if $z0 == 0 goto label1;

     label3:
        $r4 = r0.<android.media.Ringtone: android.media.IRingtonePlayer mRemotePlayer>;

        $r3 = r0.<android.media.Ringtone: android.os.Binder mRemoteToken>;

        interfaceinvoke $r4.<android.media.IRingtonePlayer: void stop(android.os.IBinder)>($r3);

     label4:
        return;

     label5:
        $r5 := @caughtexception;

        r1 = $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Problem stopping ringtone: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Ringtone", $r9);

        return;

        catch android.os.RemoteException from label3 to label4 with label5;
    }
}
