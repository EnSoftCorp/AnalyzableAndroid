class com.android.internal.telephony.test.LineReader extends java.lang.Object
{
    static final int BUFFER_SIZE;
    byte[] mBuffer;
    java.io.InputStream mInStream;

    void <init>(java.io.InputStream)
    {
        com.android.internal.telephony.test.LineReader r0;
        java.io.InputStream r1;
        byte[] $r2;

        r0 := @this: com.android.internal.telephony.test.LineReader;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = newarray (byte)[4096];

        r0.<com.android.internal.telephony.test.LineReader: byte[] mBuffer> = $r2;

        r0.<com.android.internal.telephony.test.LineReader: java.io.InputStream mInStream> = r1;

        return;
    }

    java.lang.String getNextLine()
    {
        com.android.internal.telephony.test.LineReader r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.test.LineReader;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.test.LineReader: java.lang.String getNextLine(boolean)>(0);

        return $r1;
    }

    java.lang.String getNextLine(boolean)
    {
        com.android.internal.telephony.test.LineReader r0;
        boolean z0;
        int i0, i1, i2;
        java.lang.String r2, $r10;
        byte[] r5, $r9;
        byte b3;
        java.io.InputStream $r8;
        java.lang.IndexOutOfBoundsException $r11, $r16;
        java.io.IOException $r12, $r13;
        java.io.PrintStream $r14, $r17;
        java.io.UnsupportedEncodingException $r15;

        r0 := @this: com.android.internal.telephony.test.LineReader;

        z0 := @parameter0: boolean;

        i0 = 0;

     label01:
        $r8 = r0.<com.android.internal.telephony.test.LineReader: java.io.InputStream mInStream>;

        i2 = virtualinvoke $r8.<java.io.InputStream: int read()>();

     label02:
        if i2 >= 0 goto label03;

        return null;

     label03:
        if z0 == 0 goto label07;

        if i2 != 26 goto label07;

     label04:
        i1 = i0;

     label05:
        $r10 = new java.lang.String;

        $r9 = r0.<com.android.internal.telephony.test.LineReader: byte[] mBuffer>;

        specialinvoke $r10.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>($r9, 0, i1, "US-ASCII");

        r2 = $r10;

     label06:
        return r2;

     label07:
        if i2 == 13 goto label08;

        if i2 != 10 goto label09;

     label08:
        if i0 != 0 goto label04;

        goto label01;

     label09:
        r5 = r0.<com.android.internal.telephony.test.LineReader: byte[] mBuffer>;

     label10:
        i1 = i0 + 1;

        b3 = (byte) i2;

     label11:
        r5[i0] = b3;

     label12:
        i0 = i1;

        goto label01;

     label13:
        $r13 := @caughtexception;

        return null;

     label14:
        $r16 := @caughtexception;

        i1 = i0;

     label15:
        $r14 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>("ATChannel: buffer overflow");

        goto label05;

     label16:
        $r15 := @caughtexception;

        $r17 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>("ATChannel: implausable UnsupportedEncodingException");

        return null;

     label17:
        $r11 := @caughtexception;

        goto label15;

     label18:
        $r12 := @caughtexception;

        return null;

        catch java.io.IOException from label01 to label02 with label13;
        catch java.lang.IndexOutOfBoundsException from label01 to label02 with label14;
        catch java.io.UnsupportedEncodingException from label05 to label06 with label16;
        catch java.io.IOException from label09 to label10 with label13;
        catch java.lang.IndexOutOfBoundsException from label09 to label10 with label14;
        catch java.io.IOException from label11 to label12 with label18;
        catch java.lang.IndexOutOfBoundsException from label11 to label12 with label17;
    }

    java.lang.String getNextLineCtrlZ()
    {
        com.android.internal.telephony.test.LineReader r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.test.LineReader;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.test.LineReader: java.lang.String getNextLine(boolean)>(1);

        return $r1;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.test.LineReader: int BUFFER_SIZE> = 4096;

        return;
    }
}
