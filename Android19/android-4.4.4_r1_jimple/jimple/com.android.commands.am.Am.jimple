public class com.android.commands.am.Am extends com.android.internal.os.BaseCommand
{
    private android.app.IActivityManager mAm;
    private java.lang.String mProfileFile;
    private java.lang.String mReceiverPermission;
    private int mRepeat;
    private int mStartFlags;
    private boolean mStopOption;
    private int mUserId;
    private boolean mWaitOption;

    public void <init>()
    {
        com.android.commands.am.Am r0;

        r0 := @this: com.android.commands.am.Am;

        specialinvoke r0.<com.android.internal.os.BaseCommand: void <init>()>();

        r0.<com.android.commands.am.Am: int mStartFlags> = 0;

        r0.<com.android.commands.am.Am: boolean mWaitOption> = 0;

        r0.<com.android.commands.am.Am: boolean mStopOption> = 0;

        r0.<com.android.commands.am.Am: int mRepeat> = 0;

        return;
    }

    static android.app.IActivityManager access$200(com.android.commands.am.Am)
    {
        com.android.commands.am.Am r0;
        android.app.IActivityManager $r1;

        r0 := @parameter0: com.android.commands.am.Am;

        $r1 = r0.<com.android.commands.am.Am: android.app.IActivityManager mAm>;

        return $r1;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;
        com.android.commands.am.Am $r1;

        r0 := @parameter0: java.lang.String[];

        $r1 = new com.android.commands.am.Am;

        specialinvoke $r1.<com.android.commands.am.Am: void <init>()>();

        virtualinvoke $r1.<com.android.commands.am.Am: void run(java.lang.String[])>(r0);

        return;
    }

    private android.content.Intent makeIntent(int) throws java.net.URISyntaxException
    {
        com.android.commands.am.Am r0;
        int i0, i1, i2, i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24;
        android.content.Intent r1, r2, r7, $r24, $r26, $r44, $r47, $r72;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42, $z43, $z44, $z45, $z46, $z47, $z48, $z49, $z50, $z51, $z52;
        android.net.Uri r3, $r135;
        java.lang.String r4, r5, r6, r12, r15, r16, r19, r20, r21, $r37, $r43, $r46, $r50, $r52, $r53, $r54, $r55, $r59, $r60, $r78, $r88, $r89, $r94, $r95, $r100, $r102, $r105, $r106, $r108, $r112, $r113, $r115, $r117, $r119, $r121, $r122, $r123, $r128, $r129, $r133, $r134, $r137, $r138;
        android.os.Bundle r8, r9, $r29, $r30;
        java.util.Iterator r10;
        android.content.ComponentName r11, r25, $r42;
        float[] r13;
        java.lang.String[] r14, r18, r22;
        long[] r17;
        int[] r23;
        java.lang.IllegalArgumentException $r33, $r97, $r125;
        java.util.HashSet $r34;
        java.util.Set $r35, $r36;
        java.lang.Object $r45;
        java.lang.StringBuilder $r51, $r56, $r57, $r92, $r93, $r98, $r126, $r130, $r131;
        java.io.PrintStream $r58;
        java.lang.Integer $r74, $r110, $r139;
        java.lang.Boolean $r90;
        java.lang.Long $r99, $r116;
        java.lang.Float $r104, $r107;
        float $f0;
        long $l25;

        r0 := @this: com.android.commands.am.Am;

        i0 := @parameter0: int;

        $r26 = new android.content.Intent;

        specialinvoke $r26.<android.content.Intent: void <init>()>();

        r1 = $r26;

        r2 = r1;

        z0 = 0;

        r0.<com.android.commands.am.Am: int mStartFlags> = 0;

        r0.<com.android.commands.am.Am: boolean mWaitOption> = 0;

        r0.<com.android.commands.am.Am: boolean mStopOption> = 0;

        r0.<com.android.commands.am.Am: int mRepeat> = 0;

        r0.<com.android.commands.am.Am: java.lang.String mProfileFile> = null;

        r0.<com.android.commands.am.Am: int mUserId> = i0;

        r3 = null;

        r4 = null;

     label01:
        r5 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextOption()>();

        if r5 == null goto label60;

        $z6 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("-a");

        if $z6 == 0 goto label02;

        $r122 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        virtualinvoke r1.<android.content.Intent: android.content.Intent setAction(java.lang.String)>($r122);

        if r1 != r2 goto label01;

        z0 = 1;

        goto label01;

     label02:
        $z7 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("-d");

        if $z7 == 0 goto label03;

        $r123 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        r3 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r123);

        if r1 != r2 goto label01;

        z0 = 1;

        goto label01;

     label03:
        $z4 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("-t");

        if $z4 == 0 goto label04;

        r4 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        if r1 != r2 goto label01;

        z0 = 1;

        goto label01;

     label04:
        $z5 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("-c");

        if $z5 == 0 goto label05;

        $r119 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        virtualinvoke r1.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>($r119);

        if r1 != r2 goto label01;

        z0 = 1;

        goto label01;

     label05:
        $z3 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("-e");

        if $z3 != 0 goto label06;

        $z13 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("--es");

        if $z13 == 0 goto label07;

     label06:
        $r46 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        $r50 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>($r46, $r50);

        goto label01;

     label07:
        $z12 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("--esn");

        if $z12 == 0 goto label08;

        $r137 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        $r121 = (java.lang.String) null;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>($r137, $r121);

        goto label01;

     label08:
        $z11 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("--ei");

        if $z11 == 0 goto label09;

        $r133 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        $r138 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        $r139 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r138);

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>($r133, $r139);

        goto label01;

     label09:
        $z10 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("--eu");

        if $z10 == 0 goto label10;

        $r129 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        $r134 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        $r135 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r134);

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>($r129, $r135);

        goto label01;

     label10:
        $z9 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("--ecn");

        if $z9 == 0 goto label12;

        r19 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        r20 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        r25 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>(r20);

        if r25 != null goto label11;

        $r125 = new java.lang.IllegalArgumentException;

        $r126 = new java.lang.StringBuilder;

        specialinvoke $r126.<java.lang.StringBuilder: void <init>()>();

        $r130 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad component name: ");

        $r131 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        $r128 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r125.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r128);

        throw $r125;

     label11:
        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>(r19, r25);

        goto label01;

     label12:
        $z8 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("--eia");

        if $z8 == 0 goto label15;

        r21 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        $r113 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        r22 = virtualinvoke $r113.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $i23 = lengthof r22;

        r23 = newarray (int)[$i23];

        i3 = 0;

     label13:
        $i24 = lengthof r22;

        if i3 >= $i24 goto label14;

        $r112 = r22[i3];

        $r110 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r112);

        $i22 = virtualinvoke $r110.<java.lang.Integer: int intValue()>();

        r23[i3] = $i22;

        i3 = i3 + 1;

        goto label13;

     label14:
        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int[])>(r21, r23);

        goto label01;

     label15:
        $z21 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("--el");

        if $z21 == 0 goto label16;

        $r117 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        $r115 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        $r116 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>($r115);

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>($r117, $r116);

        goto label01;

     label16:
        $z20 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("--ela");

        if $z20 == 0 goto label19;

        r16 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        $r102 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        r18 = virtualinvoke $r102.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $i21 = lengthof r18;

        r17 = newarray (long)[$i21];

        i2 = 0;

     label17:
        $i20 = lengthof r18;

        if i2 >= $i20 goto label18;

        $r100 = r18[i2];

        $r99 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>($r100);

        $l25 = virtualinvoke $r99.<java.lang.Long: long longValue()>();

        r17[i2] = $l25;

        i2 = i2 + 1;

        goto label17;

     label18:
        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])>(r16, r17);

        z0 = 1;

        goto label01;

     label19:
        $z19 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("--ef");

        if $z19 == 0 goto label20;

        $r106 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        $r105 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        $r104 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>($r105);

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>($r106, $r104);

        z0 = 1;

        goto label01;

     label20:
        $z18 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("--efa");

        if $z18 == 0 goto label23;

        r15 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        $r88 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        r14 = virtualinvoke $r88.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $i18 = lengthof r14;

        r13 = newarray (float)[$i18];

        i1 = 0;

     label21:
        $i19 = lengthof r14;

        if i1 >= $i19 goto label22;

        $r108 = r14[i1];

        $r107 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>($r108);

        $f0 = virtualinvoke $r107.<java.lang.Float: float floatValue()>();

        r13[i1] = $f0;

        i1 = i1 + 1;

        goto label21;

     label22:
        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,float[])>(r15, r13);

        z0 = 1;

        goto label01;

     label23:
        $z17 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("--ez");

        if $z17 == 0 goto label24;

        $r95 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        $r89 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        $r90 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r89);

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>($r95, $r90);

        goto label01;

     label24:
        $z16 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("-n");

        if $z16 == 0 goto label26;

        r12 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        r11 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>(r12);

        if r11 != null goto label25;

        $r97 = new java.lang.IllegalArgumentException;

        $r98 = new java.lang.StringBuilder;

        specialinvoke $r98.<java.lang.StringBuilder: void <init>()>();

        $r92 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad component name: ");

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r97.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r94);

        throw $r97;

     label25:
        virtualinvoke r1.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r11);

        if r1 != r2 goto label01;

        z0 = 1;

        goto label01;

     label26:
        $z15 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("-f");

        if $z15 == 0 goto label27;

        $r78 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        $r74 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>($r78);

        $i17 = virtualinvoke $r74.<java.lang.Integer: int intValue()>();

        virtualinvoke r1.<android.content.Intent: android.content.Intent setFlags(int)>($i17);

        goto label01;

     label27:
        $z14 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("--grant-read-uri-permission");

        if $z14 == 0 goto label28;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(1);

        goto label01;

     label28:
        $z31 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("--grant-write-uri-permission");

        if $z31 == 0 goto label29;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(2);

        goto label01;

     label29:
        $z30 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("--exclude-stopped-packages");

        if $z30 == 0 goto label30;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(16);

        goto label01;

     label30:
        $z33 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("--include-stopped-packages");

        if $z33 == 0 goto label31;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(32);

        goto label01;

     label31:
        $z32 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("--debug-log-resolution");

        if $z32 == 0 goto label32;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(8);

        goto label01;

     label32:
        $z35 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("--activity-brought-to-front");

        if $z35 == 0 goto label33;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(4194304);

        goto label01;

     label33:
        $z34 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("--activity-clear-top");

        if $z34 == 0 goto label34;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(67108864);

        goto label01;

     label34:
        $z37 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("--activity-clear-when-task-reset");

        if $z37 == 0 goto label35;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(524288);

        goto label01;

     label35:
        $z36 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("--activity-exclude-from-recents");

        if $z36 == 0 goto label36;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(8388608);

        goto label01;

     label36:
        $z23 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("--activity-launched-from-history");

        if $z23 == 0 goto label37;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(1048576);

        goto label01;

     label37:
        $z22 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("--activity-multiple-task");

        if $z22 == 0 goto label38;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(134217728);

        goto label01;

     label38:
        $z25 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("--activity-no-animation");

        if $z25 == 0 goto label39;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(65536);

        goto label01;

     label39:
        $z24 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("--activity-no-history");

        if $z24 == 0 goto label40;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

        goto label01;

     label40:
        $z27 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("--activity-no-user-action");

        if $z27 == 0 goto label41;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(262144);

        goto label01;

     label41:
        $z26 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("--activity-previous-is-top");

        if $z26 == 0 goto label42;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(16777216);

        goto label01;

     label42:
        $z29 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("--activity-reorder-to-front");

        if $z29 == 0 goto label43;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(131072);

        goto label01;

     label43:
        $z28 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("--activity-reset-task-if-needed");

        if $z28 == 0 goto label44;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(2097152);

        goto label01;

     label44:
        $z45 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("--activity-single-top");

        if $z45 == 0 goto label45;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(536870912);

        goto label01;

     label45:
        $z46 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("--activity-clear-task");

        if $z46 == 0 goto label46;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(32768);

        goto label01;

     label46:
        $z47 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("--activity-task-on-home");

        if $z47 == 0 goto label47;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(16384);

        goto label01;

     label47:
        $z48 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("--receiver-registered-only");

        if $z48 == 0 goto label48;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

        goto label01;

     label48:
        $z49 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("--receiver-replace-pending");

        if $z49 == 0 goto label49;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(536870912);

        goto label01;

     label49:
        $z50 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("--selector");

        if $z50 == 0 goto label50;

        virtualinvoke r1.<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>(r3, r4);

        $r72 = new android.content.Intent;

        specialinvoke $r72.<android.content.Intent: void <init>()>();

        r1 = $r72;

        goto label01;

     label50:
        $z51 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("-D");

        if $z51 == 0 goto label51;

        $i16 = r0.<com.android.commands.am.Am: int mStartFlags>;

        $i14 = 2 | $i16;

        r0.<com.android.commands.am.Am: int mStartFlags> = $i14;

        goto label01;

     label51:
        $z52 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("-W");

        if $z52 == 0 goto label52;

        r0.<com.android.commands.am.Am: boolean mWaitOption> = 1;

        goto label01;

     label52:
        $z38 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("-P");

        if $z38 == 0 goto label53;

        $r54 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        r0.<com.android.commands.am.Am: java.lang.String mProfileFile> = $r54;

        $i9 = r0.<com.android.commands.am.Am: int mStartFlags>;

        $i15 = 8 | $i9;

        r0.<com.android.commands.am.Am: int mStartFlags> = $i15;

        goto label01;

     label53:
        $z39 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("--start-profiler");

        if $z39 == 0 goto label54;

        $r52 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        r0.<com.android.commands.am.Am: java.lang.String mProfileFile> = $r52;

        $i11 = r0.<com.android.commands.am.Am: int mStartFlags>;

        $i10 = -9 & $i11;

        r0.<com.android.commands.am.Am: int mStartFlags> = $i10;

        goto label01;

     label54:
        $z40 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("-R");

        if $z40 == 0 goto label55;

        $r53 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        $i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r53);

        r0.<com.android.commands.am.Am: int mRepeat> = $i7;

        goto label01;

     label55:
        $z41 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("-S");

        if $z41 == 0 goto label56;

        r0.<com.android.commands.am.Am: boolean mStopOption> = 1;

        goto label01;

     label56:
        $z42 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("--opengl-trace");

        if $z42 == 0 goto label57;

        $i12 = r0.<com.android.commands.am.Am: int mStartFlags>;

        $i8 = 4 | $i12;

        r0.<com.android.commands.am.Am: int mStartFlags> = $i8;

        goto label01;

     label57:
        $z43 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        if $z43 == 0 goto label58;

        $r59 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        $i13 = virtualinvoke r0.<com.android.commands.am.Am: int parseUserArg(java.lang.String)>($r59);

        r0.<com.android.commands.am.Am: int mUserId> = $i13;

        goto label01;

     label58:
        $z44 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("--receiver-permission");

        if $z44 == 0 goto label59;

        $r60 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        r0.<com.android.commands.am.Am: java.lang.String mReceiverPermission> = $r60;

        goto label01;

     label59:
        $r58 = <java.lang.System: java.io.PrintStream err>;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown option: ");

        $r56 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r55 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r58.<java.io.PrintStream: void println(java.lang.String)>($r55);

        return null;

     label60:
        virtualinvoke r1.<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>(r3, r4);

        if r1 == r2 goto label65;

        z1 = 1;

     label61:
        if z1 == 0 goto label62;

        virtualinvoke r2.<android.content.Intent: void setSelector(android.content.Intent)>(r1);

        r1 = r2;

     label62:
        r6 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArg()>();

        if r6 != null goto label66;

        r7 = null;

        if z1 == 0 goto label63;

        $r47 = new android.content.Intent;

        specialinvoke $r47.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.MAIN");

        r7 = $r47;

        virtualinvoke r7.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>("android.intent.category.LAUNCHER");

     label63:
        if r7 == null goto label71;

        r8 = virtualinvoke r1.<android.content.Intent: android.os.Bundle getExtras()>();

        $r29 = (android.os.Bundle) null;

        virtualinvoke r1.<android.content.Intent: android.content.Intent replaceExtras(android.os.Bundle)>($r29);

        r9 = virtualinvoke r7.<android.content.Intent: android.os.Bundle getExtras()>();

        $r30 = (android.os.Bundle) null;

        virtualinvoke r7.<android.content.Intent: android.content.Intent replaceExtras(android.os.Bundle)>($r30);

        $r37 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();

        if $r37 == null goto label69;

        $r35 = virtualinvoke r7.<android.content.Intent: java.util.Set getCategories()>();

        if $r35 == null goto label69;

        $r34 = new java.util.HashSet;

        $r36 = virtualinvoke r7.<android.content.Intent: java.util.Set getCategories()>();

        specialinvoke $r34.<java.util.HashSet: void <init>(java.util.Collection)>($r36);

        r10 = virtualinvoke $r34.<java.util.HashSet: java.util.Iterator iterator()>();

     label64:
        $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label69;

        $r45 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        $r43 = (java.lang.String) $r45;

        virtualinvoke r7.<android.content.Intent: void removeCategory(java.lang.String)>($r43);

        goto label64;

     label65:
        z1 = 0;

        goto label61;

     label66:
        $i4 = virtualinvoke r6.<java.lang.String: int indexOf(int)>(58);

        if $i4 < 0 goto label67;

        r7 = staticinvoke <android.content.Intent: android.content.Intent parseUri(java.lang.String,int)>(r6, 1);

        goto label63;

     label67:
        $i5 = virtualinvoke r6.<java.lang.String: int indexOf(int)>(47);

        if $i5 < 0 goto label68;

        $r44 = new android.content.Intent;

        specialinvoke $r44.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.MAIN");

        r7 = $r44;

        virtualinvoke r7.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>("android.intent.category.LAUNCHER");

        $r42 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>(r6);

        virtualinvoke r7.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r42);

        goto label63;

     label68:
        $r24 = new android.content.Intent;

        specialinvoke $r24.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.MAIN");

        r7 = $r24;

        virtualinvoke r7.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>("android.intent.category.LAUNCHER");

        virtualinvoke r7.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r6);

        goto label63;

     label69:
        virtualinvoke r1.<android.content.Intent: int fillIn(android.content.Intent,int)>(r7, 72);

        if r8 != null goto label72;

        r8 = r9;

     label70:
        virtualinvoke r1.<android.content.Intent: android.content.Intent replaceExtras(android.os.Bundle)>(r8);

        z0 = 1;

     label71:
        if z0 != 0 goto label73;

        $r33 = new java.lang.IllegalArgumentException;

        specialinvoke $r33.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No intent supplied");

        throw $r33;

     label72:
        if r9 == null goto label70;

        virtualinvoke r9.<android.os.Bundle: void putAll(android.os.Bundle)>(r8);

        r8 = r9;

        goto label70;

     label73:
        return r1;
    }

    static void removeWallOption()
    {
        java.lang.String r0, $r1, $r2;
        boolean $z0;

        r0 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("dalvik.vm.extra-opts");

        if r0 == null goto label1;

        $z0 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("-Xprofile:wallclock");

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("-Xprofile:wallclock", "");

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("dalvik.vm.extra-opts", $r2);

     label1:
        return;
    }

    private void runBugReport() throws java.lang.Exception
    {
        com.android.commands.am.Am r0;
        android.app.IActivityManager $r1;
        java.io.PrintStream $r2;

        r0 := @this: com.android.commands.am.Am;

        $r1 = r0.<com.android.commands.am.Am: android.app.IActivityManager mAm>;

        interfaceinvoke $r1.<android.app.IActivityManager: void requestBugReport()>();

        $r2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("Your lovely bug report is being created; please be patient.");

        return;
    }

    private void runClearDebugApp() throws java.lang.Exception
    {
        com.android.commands.am.Am r0;
        android.app.IActivityManager $r1;

        r0 := @this: com.android.commands.am.Am;

        $r1 = r0.<com.android.commands.am.Am: android.app.IActivityManager mAm>;

        interfaceinvoke $r1.<android.app.IActivityManager: void setDebugApp(java.lang.String,boolean,boolean)>(null, 0, 1);

        return;
    }

    private void runDumpHeap() throws java.lang.Exception
    {
        com.android.commands.am.Am r0;
        boolean z0, $z2, $z3, $z4;
        int i0;
        java.lang.String r1, r2, r3, $r13, $r17, $r19, $r24;
        java.io.File r4, $r7;
        android.os.ParcelFileDescriptor r6;
        android.app.IActivityManager $r8;
        java.lang.StringBuilder $r9, $r11, $r12, $r14, $r15, $r18, $r20, $r25, $r26;
        android.util.AndroidException $r10;
        java.io.PrintStream $r16, $r21, $r22;
        java.io.FileNotFoundException $r23;

        r0 := @this: com.android.commands.am.Am;

        z0 = 1;

        i0 = -2;

     label1:
        r1 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextOption()>();

        if r1 == null goto label5;

        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        if $z3 == 0 goto label3;

        $r19 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        i0 = virtualinvoke r0.<com.android.commands.am.Am: int parseUserArg(java.lang.String)>($r19);

        if i0 != -1 goto label1;

        $r22 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>("Error: Can\'t dump heap with user \'all\'");

     label2:
        return;

     label3:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("-n");

        if $z4 == 0 goto label4;

        z0 = 0;

        goto label1;

     label4:
        $r16 = <java.lang.System: java.io.PrintStream err>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown option: ");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r17);

        return;

     label5:
        r2 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        r3 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

     label6:
        $r7 = new java.io.File;

        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>(r3);

        r4 = $r7;

        virtualinvoke r4.<java.io.File: boolean delete()>();

        r6 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>(r4, 1006632960);

     label7:
        $r8 = r0.<com.android.commands.am.Am: android.app.IActivityManager mAm>;

        $z2 = interfaceinvoke $r8.<android.app.IActivityManager: boolean dumpHeap(java.lang.String,int,boolean,java.lang.String,android.os.ParcelFileDescriptor)>(r2, i0, z0, r3, r6);

        if $z2 != 0 goto label2;

        $r10 = new android.util.AndroidException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HEAP DUMP FAILED on process ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<android.util.AndroidException: void <init>(java.lang.String)>($r13);

        throw $r10;

     label8:
        $r23 := @caughtexception;

        $r21 = <java.lang.System: java.io.PrintStream err>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unable to open file: ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r24 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r24);

        return;

        catch java.io.FileNotFoundException from label6 to label7 with label8;
    }

    private void runForceStop() throws java.lang.Exception
    {
        com.android.commands.am.Am r0;
        int i0;
        java.lang.String r1, $r3, $r8, $r9;
        android.app.IActivityManager $r2;
        boolean $z0;
        java.lang.StringBuilder $r4, $r6, $r7;
        java.io.PrintStream $r5;

        r0 := @this: com.android.commands.am.Am;

        i0 = -1;

     label1:
        r1 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextOption()>();

        if r1 == null goto label3;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        if $z0 == 0 goto label2;

        $r9 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        i0 = virtualinvoke r0.<com.android.commands.am.Am: int parseUserArg(java.lang.String)>($r9);

        goto label1;

     label2:
        $r5 = <java.lang.System: java.io.PrintStream err>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown option: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r8);

        return;

     label3:
        $r2 = r0.<com.android.commands.am.Am: android.app.IActivityManager mAm>;

        $r3 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        interfaceinvoke $r2.<android.app.IActivityManager: void forceStopPackage(java.lang.String,int)>($r3, i0);

        return;
    }

    private void runHang() throws java.lang.Exception
    {
        com.android.commands.am.Am r0;
        boolean z0, $z1;
        java.lang.String r1, $r9;
        java.io.PrintStream $r2, $r6;
        android.os.Binder $r3;
        android.app.IActivityManager $r4;
        java.lang.StringBuilder $r5, $r7, $r8;

        r0 := @this: com.android.commands.am.Am;

        z0 = 0;

     label1:
        r1 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextOption()>();

        if r1 == null goto label3;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--allow-restart");

        if $z1 == 0 goto label2;

        z0 = 1;

        goto label1;

     label2:
        $r6 = <java.lang.System: java.io.PrintStream err>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown option: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r9);

        return;

     label3:
        $r2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("Hanging the system...");

        $r4 = r0.<com.android.commands.am.Am: android.app.IActivityManager mAm>;

        $r3 = new android.os.Binder;

        specialinvoke $r3.<android.os.Binder: void <init>()>();

        interfaceinvoke $r4.<android.app.IActivityManager: void hang(android.os.IBinder,boolean)>($r3, z0);

        return;
    }

    private void runIdleMaintenance() throws java.lang.Exception
    {
        com.android.commands.am.Am r0;
        java.lang.String r1, $r10;
        android.content.Intent r2, $r4;
        java.io.PrintStream $r3, $r7;
        android.app.IActivityManager $r5;
        java.lang.StringBuilder $r6, $r8, $r9;

        r0 := @this: com.android.commands.am.Am;

        r1 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextOption()>();

        if r1 == null goto label1;

        $r7 = <java.lang.System: java.io.PrintStream err>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown option: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r10);

        return;

     label1:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("Performing idle maintenance...");

        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("com.android.server.IdleMaintenanceService.action.FORCE_IDLE_MAINTENANCE");

        r2 = $r4;

        $r5 = r0.<com.android.commands.am.Am: android.app.IActivityManager mAm>;

        interfaceinvoke $r5.<android.app.IActivityManager: int broadcastIntent(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int)>(null, r2, null, null, 0, null, null, null, -1, 1, 0, -1);

        return;
    }

    private void runInstrument() throws java.lang.Exception
    {
        com.android.commands.am.Am r0;
        java.lang.String r1, r4, r5, $r16, $r18, $r27, $r30, $r31, $r34, $r35;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        int i0;
        android.os.Bundle r2, $r10;
        android.view.IWindowManager r3;
        android.content.ComponentName r6;
        com.android.commands.am.Am$InstrumentationWatcher r7, $r20;
        android.app.UiAutomationConnection r8, $r23;
        float[] r9;
        android.os.IBinder $r11;
        android.app.IActivityManager $r12;
        java.io.PrintStream $r13, $r25, $r29;
        java.lang.StringBuilder $r14, $r17, $r19, $r21, $r22, $r26, $r28, $r32, $r33;
        android.util.AndroidException $r15;
        java.lang.IllegalArgumentException $r24;

        r0 := @this: com.android.commands.am.Am;

        r1 = null;

        z0 = 0;

        z1 = 0;

        z2 = 0;

        i0 = -2;

        $r10 = new android.os.Bundle;

        specialinvoke $r10.<android.os.Bundle: void <init>()>();

        r2 = $r10;

        $r11 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("window");

        r3 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager asInterface(android.os.IBinder)>($r11);

     label01:
        r4 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextOption()>();

        if r4 == null goto label10;

        $z5 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("-p");

        if $z5 == 0 goto label02;

        r1 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        goto label01;

     label02:
        $z8 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("-w");

        if $z8 == 0 goto label03;

        z0 = 1;

        goto label01;

     label03:
        $z9 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("-r");

        if $z9 == 0 goto label04;

        z1 = 1;

        goto label01;

     label04:
        $z6 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("-e");

        if $z6 == 0 goto label05;

        $r35 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        $r34 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        virtualinvoke r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>($r35, $r34);

        goto label01;

     label05:
        $z7 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("--no_window_animation");

        if $z7 != 0 goto label06;

        $z10 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("--no-window-animation");

        if $z10 == 0 goto label07;

     label06:
        z2 = 1;

        goto label01;

     label07:
        $z11 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        if $z11 == 0 goto label08;

        $r30 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        i0 = virtualinvoke r0.<com.android.commands.am.Am: int parseUserArg(java.lang.String)>($r30);

        goto label01;

     label08:
        $r29 = <java.lang.System: java.io.PrintStream err>;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown option: ");

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>($r31);

     label09:
        return;

     label10:
        if i0 != -1 goto label11;

        $r25 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>("Error: Can\'t start instrumentation with user \'all\'");

        return;

     label11:
        r5 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        r6 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>(r5);

        if r6 != null goto label12;

        $r24 = new java.lang.IllegalArgumentException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad component name: ");

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r27);

        throw $r24;

     label12:
        r7 = null;

        r8 = null;

        if z0 == 0 goto label13;

        $r20 = new com.android.commands.am.Am$InstrumentationWatcher;

        specialinvoke $r20.<com.android.commands.am.Am$InstrumentationWatcher: void <init>(com.android.commands.am.Am,com.android.commands.am.Am$1)>(r0, null);

        r7 = $r20;

        virtualinvoke r7.<com.android.commands.am.Am$InstrumentationWatcher: void setRawOutput(boolean)>(z1);

        $r23 = new android.app.UiAutomationConnection;

        specialinvoke $r23.<android.app.UiAutomationConnection: void <init>()>();

        r8 = $r23;

     label13:
        r9 = null;

        if z2 == 0 goto label14;

        r9 = interfaceinvoke r3.<android.view.IWindowManager: float[] getAnimationScales()>();

        interfaceinvoke r3.<android.view.IWindowManager: void setAnimationScale(int,float)>(0, 0.0F);

        interfaceinvoke r3.<android.view.IWindowManager: void setAnimationScale(int,float)>(1, 0.0F);

     label14:
        $r12 = r0.<com.android.commands.am.Am: android.app.IActivityManager mAm>;

        $z3 = interfaceinvoke $r12.<android.app.IActivityManager: boolean startInstrumentation(android.content.ComponentName,java.lang.String,int,android.os.Bundle,android.app.IInstrumentationWatcher,android.app.IUiAutomationConnection,int)>(r6, r1, 0, r2, r7, r8, i0);

        if $z3 != 0 goto label15;

        $r15 = new android.util.AndroidException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INSTRUMENTATION_FAILED: ");

        $r16 = virtualinvoke r6.<android.content.ComponentName: java.lang.String flattenToString()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<android.util.AndroidException: void <init>(java.lang.String)>($r18);

        throw $r15;

     label15:
        if r7 == null goto label16;

        $z4 = virtualinvoke r7.<com.android.commands.am.Am$InstrumentationWatcher: boolean waitForFinish()>();

        if $z4 != 0 goto label16;

        $r13 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>("INSTRUMENTATION_ABORTED: System has crashed.");

     label16:
        if r9 == null goto label09;

        interfaceinvoke r3.<android.view.IWindowManager: void setAnimationScales(float[])>(r9);

        return;
    }

    private void runKill() throws java.lang.Exception
    {
        com.android.commands.am.Am r0;
        int i0;
        java.lang.String r1, $r3, $r8, $r9;
        android.app.IActivityManager $r2;
        boolean $z0;
        java.lang.StringBuilder $r4, $r6, $r7;
        java.io.PrintStream $r5;

        r0 := @this: com.android.commands.am.Am;

        i0 = -1;

     label1:
        r1 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextOption()>();

        if r1 == null goto label3;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        if $z0 == 0 goto label2;

        $r9 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        i0 = virtualinvoke r0.<com.android.commands.am.Am: int parseUserArg(java.lang.String)>($r9);

        goto label1;

     label2:
        $r5 = <java.lang.System: java.io.PrintStream err>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown option: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r8);

        return;

     label3:
        $r2 = r0.<com.android.commands.am.Am: android.app.IActivityManager mAm>;

        $r3 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        interfaceinvoke $r2.<android.app.IActivityManager: void killBackgroundProcesses(java.lang.String,int)>($r3, i0);

        return;
    }

    private void runKillAll() throws java.lang.Exception
    {
        com.android.commands.am.Am r0;
        android.app.IActivityManager $r1;

        r0 := @this: com.android.commands.am.Am;

        $r1 = r0.<com.android.commands.am.Am: android.app.IActivityManager mAm>;

        interfaceinvoke $r1.<android.app.IActivityManager: void killAllBackgroundProcesses()>();

        return;
    }

    private void runMonitor() throws java.lang.Exception
    {
        com.android.commands.am.Am r0;
        java.lang.String r1, r2, $r8;
        com.android.commands.am.Am$MyActivityController $r3;
        boolean $z0;
        java.lang.StringBuilder $r4, $r6, $r7;
        java.io.PrintStream $r5;

        r0 := @this: com.android.commands.am.Am;

        r1 = null;

     label1:
        r2 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextOption()>();

        if r2 == null goto label3;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("--gdb");

        if $z0 == 0 goto label2;

        r1 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        goto label1;

     label2:
        $r5 = <java.lang.System: java.io.PrintStream err>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown option: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r8);

        return;

     label3:
        $r3 = new com.android.commands.am.Am$MyActivityController;

        specialinvoke $r3.<com.android.commands.am.Am$MyActivityController: void <init>(com.android.commands.am.Am,java.lang.String)>(r0, r1);

        virtualinvoke $r3.<com.android.commands.am.Am$MyActivityController: void run()>();

        return;
    }

    private void runProfile() throws java.lang.Exception
    {
        com.android.commands.am.Am r0;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        int i0;
        java.lang.String r1, r2, r3, r4, r7, r10, r11, $r12, $r13, $r14, $r15, $r22, $r32, $r37, $r38, $r40, $r41, $r48;
        android.os.ParcelFileDescriptor r5, r9;
        java.lang.Throwable r6, $r42;
        android.app.IActivityManager $r16;
        android.util.AndroidException $r17;
        java.lang.StringBuilder $r18, $r19, $r20, $r21, $r24, $r25, $r28, $r29, $r31, $r33, $r34, $r36, $r39, $r43, $r45, $r46, $r47, $r50, $r52;
        java.io.PrintStream $r26, $r35, $r44, $r51;
        java.io.File $r27;
        java.lang.IllegalArgumentException $r30;
        java.io.FileNotFoundException $r49;

        r0 := @this: com.android.commands.am.Am;

        z0 = 0;

        i0 = -2;

        r1 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        $r12 = "start";

        $z3 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z3 == 0 goto label07;

        z2 = 1;

     label01:
        r11 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextOption()>();

        if r11 == null goto label05;

        $z10 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        if $z10 == 0 goto label02;

        $r41 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        i0 = virtualinvoke r0.<com.android.commands.am.Am: int parseUserArg(java.lang.String)>($r41);

        goto label01;

     label02:
        $z9 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>("--wall");

        if $z9 == 0 goto label03;

        z0 = 1;

        goto label01;

     label03:
        $r44 = <java.lang.System: java.io.PrintStream err>;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown option: ");

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r40 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r44.<java.io.PrintStream: void println(java.lang.String)>($r40);

     label04:
        return;

     label05:
        r2 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

     label06:
        if i0 != -1 goto label13;

        $r26 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>("Error: Can\'t profile with user \'all\'");

        return;

     label07:
        $r13 = "stop";

        $z4 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z4 == 0 goto label11;

     label08:
        r10 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextOption()>();

        if r10 == null goto label10;

        $z8 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        if $z8 == 0 goto label09;

        $r37 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        i0 = virtualinvoke r0.<com.android.commands.am.Am: int parseUserArg(java.lang.String)>($r37);

        goto label08;

     label09:
        $r35 = <java.lang.System: java.io.PrintStream err>;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown option: ");

        $r39 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r35.<java.io.PrintStream: void println(java.lang.String)>($r38);

        return;

     label10:
        r2 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArg()>();

        z2 = 0;

        z0 = 0;

        goto label06;

     label11:
        r2 = r1;

        r3 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        $r14 = "start";

        $z5 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z5 == 0 goto label12;

        z2 = 1;

        z0 = 0;

        goto label06;

     label12:
        $r15 = "stop";

        z1 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        z2 = 0;

        z0 = 0;

        if z1 != 0 goto label06;

        $r30 = new java.lang.IllegalArgumentException;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Profile command ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not valid");

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r30.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r32);

        throw $r30;

     label13:
        r4 = null;

        r5 = null;

        if z2 == 0 goto label16;

        r4 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

     label14:
        $r27 = new java.io.File;

        specialinvoke $r27.<java.io.File: void <init>(java.lang.String)>(r4);

        r9 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>($r27, 1006632960);

     label15:
        r5 = r9;

     label16:
        if z0 == 0 goto label27;

     label17:
        r7 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("dalvik.vm.extra-opts");

     label18:
        if r7 == null goto label20;

     label19:
        $z7 = virtualinvoke r7.<java.lang.String: boolean contains(java.lang.CharSequence)>("-Xprofile:wallclock");

        if $z7 != 0 goto label21;

     label20:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -Xprofile:wallclock");

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

     label21:
        $r16 = r0.<com.android.commands.am.Am: android.app.IActivityManager mAm>;

        $z6 = interfaceinvoke $r16.<android.app.IActivityManager: boolean profileControl(java.lang.String,int,boolean,java.lang.String,android.os.ParcelFileDescriptor,int)>(r2, i0, z2, r4, r5, 0);

        if $z6 != 0 goto label28;

     label22:
        z0 = 0;

     label23:
        $r17 = new android.util.AndroidException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PROFILE FAILED on process ");

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<android.util.AndroidException: void <init>(java.lang.String)>($r22);

        throw $r17;

     label24:
        $r42 := @caughtexception;

        r6 = $r42;

        if z0 != 0 goto label25;

     label25:
        throw r6;

     label26:
        $r49 := @caughtexception;

        $r51 = <java.lang.System: java.io.PrintStream err>;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unable to open file: ");

        $r47 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r51.<java.io.PrintStream: void println(java.lang.String)>($r48);

        return;

     label27:
        if z2 == 0 goto label21;

        goto label21;

     label28:
        if z0 != 0 goto label04;

        return;

        catch java.io.FileNotFoundException from label14 to label15 with label26;
        catch java.lang.Throwable from label17 to label18 with label24;
        catch java.lang.Throwable from label19 to label20 with label24;
        catch java.lang.Throwable from label20 to label21 with label24;
        catch java.lang.Throwable from label21 to label22 with label24;
        catch java.lang.Throwable from label23 to label24 with label24;
    }

    private void runRestart() throws java.lang.Exception
    {
        com.android.commands.am.Am r0;
        java.lang.String r1, $r8;
        java.io.PrintStream $r2, $r5;
        android.app.IActivityManager $r3;
        java.lang.StringBuilder $r4, $r6, $r7;

        r0 := @this: com.android.commands.am.Am;

        r1 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextOption()>();

        if r1 == null goto label1;

        $r5 = <java.lang.System: java.io.PrintStream err>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown option: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r8);

        return;

     label1:
        $r2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("Restart the system...");

        $r3 = r0.<com.android.commands.am.Am: android.app.IActivityManager mAm>;

        interfaceinvoke $r3.<android.app.IActivityManager: void restart()>();

        return;
    }

    private void runScreenCompat() throws java.lang.Exception
    {
        com.android.commands.am.Am r0;
        java.lang.String r1, r2, $r5, $r6, $r11;
        boolean z0, $z1, $z2;
        android.app.IActivityManager r4;
        byte b0;
        java.lang.StringBuilder $r7, $r9, $r10;
        java.io.PrintStream $r8;
        android.os.RemoteException $r12;

        r0 := @this: com.android.commands.am.Am;

        r1 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        $r5 = "on";

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label6;

        z0 = 1;

     label1:
        r2 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

     label2:
        r4 = r0.<com.android.commands.am.Am: android.app.IActivityManager mAm>;

     label3:
        if z0 == 0 goto label8;

        b0 = 1;

     label4:
        interfaceinvoke r4.<android.app.IActivityManager: void setPackageScreenCompatMode(java.lang.String,int)>(r2, b0);

     label5:
        r2 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArg()>();

        if r2 != null goto label2;

        return;

     label6:
        $r6 = "off";

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label7;

        z0 = 0;

        goto label1;

     label7:
        $r8 = <java.lang.System: java.io.PrintStream err>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: enabled mode must be \'on\' or \'off\' at ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r11);

        return;

     label8:
        b0 = 0;

        goto label4;

     label9:
        $r12 := @caughtexception;

        goto label5;

        catch android.os.RemoteException from label2 to label3 with label9;
        catch android.os.RemoteException from label4 to label5 with label9;
    }

    private void runSetDebugApp() throws java.lang.Exception
    {
        com.android.commands.am.Am r0;
        boolean z0, z1, $z2, $z3;
        java.lang.String r1, r2, $r8;
        android.app.IActivityManager $r3;
        java.lang.StringBuilder $r4, $r6, $r7;
        java.io.PrintStream $r5;

        r0 := @this: com.android.commands.am.Am;

        z0 = 0;

        z1 = 0;

     label1:
        r1 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextOption()>();

        if r1 == null goto label4;

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("-w");

        if $z2 == 0 goto label2;

        z0 = 1;

        goto label1;

     label2:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--persistent");

        if $z3 == 0 goto label3;

        z1 = 1;

        goto label1;

     label3:
        $r5 = <java.lang.System: java.io.PrintStream err>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown option: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r8);

        return;

     label4:
        r2 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        $r3 = r0.<com.android.commands.am.Am: android.app.IActivityManager mAm>;

        interfaceinvoke $r3.<android.app.IActivityManager: void setDebugApp(java.lang.String,boolean,boolean)>(r2, z0, z1);

        return;
    }

    private void runStack() throws java.lang.Exception
    {
        com.android.commands.am.Am r0;
        java.lang.String r1, $r6;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;

        r0 := @this: com.android.commands.am.Am;

        r1 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("create");

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.commands.am.Am: void runStackCreate()>();

        return;

     label1:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("movetask");

        if $z1 == 0 goto label2;

        specialinvoke r0.<com.android.commands.am.Am: void runStackMoveTask()>();

        return;

     label2:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("resize");

        if $z2 == 0 goto label3;

        specialinvoke r0.<com.android.commands.am.Am: void runStackBoxResize()>();

        return;

     label3:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("boxes");

        if $z3 == 0 goto label4;

        specialinvoke r0.<com.android.commands.am.Am: void runStackBoxes()>();

        return;

     label4:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("box");

        if $z4 == 0 goto label5;

        specialinvoke r0.<com.android.commands.am.Am: void runStackBoxInfo()>();

        return;

     label5:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: unknown command \'");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.commands.am.Am: void showError(java.lang.String)>($r6);

        return;
    }

    private void runStackBoxInfo() throws java.lang.Exception
    {
        com.android.commands.am.Am r0;
        int i0;
        android.app.ActivityManager$StackBoxInfo r2;
        java.lang.String $r3;
        java.lang.Integer $r4;
        android.app.IActivityManager $r5;
        java.io.PrintStream $r6;
        android.os.RemoteException $r7;

        r0 := @this: com.android.commands.am.Am;

     label1:
        $r3 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r3);

        i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $r5 = r0.<com.android.commands.am.Am: android.app.IActivityManager mAm>;

        r2 = interfaceinvoke $r5.<android.app.IActivityManager: android.app.ActivityManager$StackBoxInfo getStackBoxInfo(int)>(i0);

        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.Object)>(r2);

     label2:
        return;

     label3:
        $r7 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void runStackBoxResize() throws java.lang.Exception
    {
        com.android.commands.am.Am r0;
        int i0;
        float f0;
        java.lang.String $r2, $r4;
        java.lang.Integer $r3;
        java.lang.Float $r5;
        android.app.IActivityManager $r6;
        android.os.RemoteException $r7;

        r0 := @this: com.android.commands.am.Am;

        $r2 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r2);

        i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $r4 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>($r4);

        f0 = virtualinvoke $r5.<java.lang.Float: float floatValue()>();

     label1:
        $r6 = r0.<com.android.commands.am.Am: android.app.IActivityManager mAm>;

        interfaceinvoke $r6.<android.app.IActivityManager: void resizeStackBox(int,float)>(i0, f0);

     label2:
        return;

     label3:
        $r7 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void runStackBoxes() throws java.lang.Exception
    {
        com.android.commands.am.Am r0;
        java.util.Iterator r2;
        android.app.ActivityManager$StackBoxInfo r3;
        android.app.IActivityManager $r4;
        java.util.List $r5;
        boolean $z0;
        java.lang.Object $r6;
        java.io.PrintStream $r7;
        android.os.RemoteException $r8;

        r0 := @this: com.android.commands.am.Am;

     label1:
        $r4 = r0.<com.android.commands.am.Am: android.app.IActivityManager mAm>;

        $r5 = interfaceinvoke $r4.<android.app.IActivityManager: java.util.List getStackBoxes()>();

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.app.ActivityManager$StackBoxInfo) $r6;

        $r7 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.Object)>(r3);

     label3:
        goto label2;

     label4:
        $r8 := @caughtexception;

     label5:
        return;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private void runStackCreate() throws java.lang.Exception
    {
        com.android.commands.am.Am r0;
        int i0, i1, i2, i3;
        float f0;
        java.lang.String $r2, $r4, $r6, $r9, $r17;
        java.lang.Integer $r3, $r5, $r7;
        java.lang.Float $r8;
        android.app.IActivityManager $r10;
        java.lang.StringBuilder $r11, $r12, $r14, $r15;
        java.io.PrintStream $r13;
        android.os.RemoteException $r16;

        r0 := @this: com.android.commands.am.Am;

        $r2 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r2);

        i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $r4 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r4);

        i1 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        $r6 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r6);

        i2 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        $r9 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        $r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>($r9);

        f0 = virtualinvoke $r8.<java.lang.Float: float floatValue()>();

     label1:
        $r10 = r0.<com.android.commands.am.Am: android.app.IActivityManager mAm>;

        i3 = interfaceinvoke $r10.<android.app.IActivityManager: int createStack(int,int,int,float)>(i0, i1, i2, f0);

        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("createStack returned new stackId=");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\n");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r17);

     label2:
        return;

     label3:
        $r16 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void runStackMoveTask() throws java.lang.Exception
    {
        com.android.commands.am.Am r0;
        int i0, i1;
        java.lang.String r1, $r3, $r5, $r7, $r8, $r12;
        boolean z0, $z1, $z2;
        java.lang.Integer $r4, $r6;
        java.lang.StringBuilder $r9, $r10, $r13;
        java.io.PrintStream $r11;
        android.os.RemoteException $r14;
        android.app.IActivityManager $r15;

        r0 := @this: com.android.commands.am.Am;

        $r3 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r3);

        i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $r5 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r5);

        i1 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        r1 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        $r7 = "true";

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label3;

        z0 = 1;

     label1:
        $r15 = r0.<com.android.commands.am.Am: android.app.IActivityManager mAm>;

        interfaceinvoke $r15.<android.app.IActivityManager: void moveTaskToStack(int,int,boolean)>(i0, i1, z0);

     label2:
        return;

     label3:
        $r8 = "false";

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label4;

        z0 = 0;

        goto label1;

     label4:
        $r11 = <java.lang.System: java.io.PrintStream err>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: bad toTop arg: ");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r12);

        return;

     label5:
        $r14 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label5;
    }

    private void runStart() throws java.lang.Exception
    {
        com.android.commands.am.Am r0;
        android.content.Intent r1;
        java.lang.String r2, r3, r10, r11, r12, r14, r17, $r24, $r27, $r33, $r44, $r47, $r50, $r53, $r57, $r63, $r67, $r69, $r80, $r81, $r86, $r99, $r100, $r102, $r104;
        android.os.ParcelFileDescriptor r4, r16;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i15, $i16, $i17, $i18, $i19, $i20;
        android.app.IActivityManager$WaitResult r5, $r56;
        java.io.PrintStream r6, r8, $r20, $r36, $r38, $r40, $r52, $r73, $r75, $r84, $r92, $r93, $r96;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        android.content.ComponentName r7, $r35, $r46, $r64, $r65, $r95;
        java.lang.StringBuilder r9, $r21, $r22, $r23, $r28, $r29, $r30, $r31, $r34, $r37, $r39, $r41, $r42, $r43, $r45, $r48, $r49, $r51, $r54, $r55, $r58, $r59, $r60, $r61, $r62, $r70, $r71, $r72, $r76, $r82, $r83, $r85, $r87, $r88, $r94, $r101, $r103;
        android.content.pm.IPackageManager r15;
        java.util.List r18;
        android.app.IActivityManager r19, $r26, $r32, $r68, $r90;
        long $l9, $l11, $l13, $l14;
        byte $b10, $b12;
        java.io.File $r66;
        android.os.IBinder $r74;
        android.content.pm.ActivityInfo $r77;
        android.content.pm.ResolveInfo $r78;
        java.lang.Object $r79;
        android.net.Uri $r89, $r97, $r98;
        java.io.FileNotFoundException $r91;

        r0 := @this: com.android.commands.am.Am;

        r1 = specialinvoke r0.<com.android.commands.am.Am: android.content.Intent makeIntent(int)>(-2);

        $i2 = r0.<com.android.commands.am.Am: int mUserId>;

        if $i2 != -1 goto label01;

        $r92 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r92.<java.io.PrintStream: void println(java.lang.String)>("Error: Can\'t start service with user \'all\'");

        return;

     label01:
        r2 = virtualinvoke r1.<android.content.Intent: java.lang.String getType()>();

        if r2 != null goto label02;

        $r97 = virtualinvoke r1.<android.content.Intent: android.net.Uri getData()>();

        if $r97 == null goto label02;

        $r99 = "content";

        $r98 = virtualinvoke r1.<android.content.Intent: android.net.Uri getData()>();

        $r100 = virtualinvoke $r98.<android.net.Uri: java.lang.String getScheme()>();

        $z6 = virtualinvoke $r99.<java.lang.String: boolean equals(java.lang.Object)>($r100);

        if $z6 == 0 goto label02;

        $r90 = r0.<com.android.commands.am.Am: android.app.IActivityManager mAm>;

        $r89 = virtualinvoke r1.<android.content.Intent: android.net.Uri getData()>();

        $i20 = r0.<com.android.commands.am.Am: int mUserId>;

        r2 = interfaceinvoke $r90.<android.app.IActivityManager: java.lang.String getProviderMimeType(android.net.Uri,int)>($r89, $i20);

     label02:
        $z1 = r0.<com.android.commands.am.Am: boolean mStopOption>;

        if $z1 == 0 goto label04;

        $r65 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r65 == null goto label19;

        $r95 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        r17 = virtualinvoke $r95.<android.content.ComponentName: java.lang.String getPackageName()>();

     label03:
        $r75 = <java.lang.System: java.io.PrintStream out>;

        $r76 = new java.lang.StringBuilder;

        specialinvoke $r76.<java.lang.StringBuilder: void <init>()>();

        $r88 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stopping: ");

        $r87 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        $r86 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r75.<java.io.PrintStream: void println(java.lang.String)>($r86);

        r19 = r0.<com.android.commands.am.Am: android.app.IActivityManager mAm>;

        i1 = r0.<com.android.commands.am.Am: int mUserId>;

        interfaceinvoke r19.<android.app.IActivityManager: void forceStopPackage(java.lang.String,int)>(r17, i1);

        staticinvoke <java.lang.Thread: void sleep(long)>(250L);

     label04:
        $r20 = <java.lang.System: java.io.PrintStream out>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Starting: ");

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>($r24);

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

        r3 = r0.<com.android.commands.am.Am: java.lang.String mProfileFile>;

        r4 = null;

        if r3 == null goto label07;

     label05:
        $r66 = new java.io.File;

        $r67 = r0.<com.android.commands.am.Am: java.lang.String mProfileFile>;

        specialinvoke $r66.<java.io.File: void <init>(java.lang.String)>($r67);

        r16 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>($r66, 1006632960);

     label06:
        r4 = r16;

     label07:
        $z2 = r0.<com.android.commands.am.Am: boolean mWaitOption>;

        if $z2 == 0 goto label25;

        $r68 = r0.<com.android.commands.am.Am: android.app.IActivityManager mAm>;

        $i16 = r0.<com.android.commands.am.Am: int mStartFlags>;

        $r69 = r0.<com.android.commands.am.Am: java.lang.String mProfileFile>;

        $i15 = r0.<com.android.commands.am.Am: int mUserId>;

        r5 = interfaceinvoke $r68.<android.app.IActivityManager: android.app.IActivityManager$WaitResult startActivityAndWait(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,java.lang.String,android.os.ParcelFileDescriptor,android.os.Bundle,int)>(null, null, r1, r2, null, null, 0, $i16, $r69, r4, null, $i15);

        i0 = r5.<android.app.IActivityManager$WaitResult: int result>;

     label08:
        $z3 = r0.<com.android.commands.am.Am: boolean mWaitOption>;

        if $z3 == 0 goto label26;

        r6 = <java.lang.System: java.io.PrintStream out>;

     label09:
        z0 = 0;

        tableswitch(i0)
        {
            case -4: goto label35;
            case -3: goto label34;
            case -2: goto label33;
            case -1: goto label32;
            case 0: goto label27;
            case 1: goto label30;
            case 2: goto label31;
            case 3: goto label29;
            case 4: goto label28;
            default: goto label10;
        };

     label10:
        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Activity not started, unknown error code ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        r14 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<java.io.PrintStream: void println(java.lang.String)>(r14);

     label11:
        $z4 = r0.<com.android.commands.am.Am: boolean mWaitOption>;

        if $z4 == 0 goto label17;

        if z0 == 0 goto label17;

        if r5 != null goto label12;

        $r56 = new android.app.IActivityManager$WaitResult;

        specialinvoke $r56.<android.app.IActivityManager$WaitResult: void <init>()>();

        r5 = $r56;

        r7 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        r5.<android.app.IActivityManager$WaitResult: android.content.ComponentName who> = r7;

     label12:
        r8 = <java.lang.System: java.io.PrintStream out>;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        r9 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Status: ");

        $z5 = r5.<android.app.IActivityManager$WaitResult: boolean timeout>;

        if $z5 == 0 goto label36;

        r10 = "timeout";

     label13:
        $r34 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r8.<java.io.PrintStream: void println(java.lang.String)>($r33);

        $r35 = r5.<android.app.IActivityManager$WaitResult: android.content.ComponentName who>;

        if $r35 == null goto label14;

        $r52 = <java.lang.System: java.io.PrintStream out>;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity: ");

        $r46 = r5.<android.app.IActivityManager$WaitResult: android.content.ComponentName who>;

        $r47 = virtualinvoke $r46.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        $r48 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r57 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r52.<java.io.PrintStream: void println(java.lang.String)>($r57);

     label14:
        $l11 = r5.<android.app.IActivityManager$WaitResult: long thisTime>;

        $b10 = $l11 cmp 0L;

        if $b10 < 0 goto label15;

        $r40 = <java.lang.System: java.io.PrintStream out>;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ThisTime: ");

        $l13 = r5.<android.app.IActivityManager$WaitResult: long thisTime>;

        $r49 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l13);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r40.<java.io.PrintStream: void println(java.lang.String)>($r50);

     label15:
        $l9 = r5.<android.app.IActivityManager$WaitResult: long totalTime>;

        $b12 = $l9 cmp 0L;

        if $b12 < 0 goto label16;

        $r36 = <java.lang.System: java.io.PrintStream out>;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TotalTime: ");

        $l14 = r5.<android.app.IActivityManager$WaitResult: long totalTime>;

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l14);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r36.<java.io.PrintStream: void println(java.lang.String)>($r44);

     label16:
        $r38 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r38.<java.io.PrintStream: void println(java.lang.String)>("Complete");

     label17:
        $i5 = r0.<com.android.commands.am.Am: int mRepeat>;

        $i6 = -1 + $i5;

        r0.<com.android.commands.am.Am: int mRepeat> = $i6;

        $i8 = r0.<com.android.commands.am.Am: int mRepeat>;

        if $i8 <= 1 goto label18;

        $r32 = r0.<com.android.commands.am.Am: android.app.IActivityManager mAm>;

        interfaceinvoke $r32.<android.app.IActivityManager: void unhandledBack()>();

     label18:
        $i7 = r0.<com.android.commands.am.Am: int mRepeat>;

        if $i7 > 1 goto label02;

        return;

     label19:
        $r74 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("package");

        r15 = staticinvoke <android.content.pm.IPackageManager$Stub: android.content.pm.IPackageManager asInterface(android.os.IBinder)>($r74);

        if r15 != null goto label20;

        $r96 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r96.<java.io.PrintStream: void println(java.lang.String)>("Error: Package manager not running; aborting");

        return;

     label20:
        $i17 = r0.<com.android.commands.am.Am: int mUserId>;

        r18 = interfaceinvoke r15.<android.content.pm.IPackageManager: java.util.List queryIntentActivities(android.content.Intent,java.lang.String,int,int)>(r1, r2, 0, $i17);

        if r18 == null goto label21;

        $i19 = interfaceinvoke r18.<java.util.List: int size()>();

        if $i19 > 0 goto label22;

     label21:
        $r73 = <java.lang.System: java.io.PrintStream err>;

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        $r70 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Intent does not match any activities: ");

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r80 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r73.<java.io.PrintStream: void println(java.lang.String)>($r80);

        return;

     label22:
        $i18 = interfaceinvoke r18.<java.util.List: int size()>();

        if $i18 <= 1 goto label23;

        $r84 = <java.lang.System: java.io.PrintStream err>;

        $r85 = new java.lang.StringBuilder;

        specialinvoke $r85.<java.lang.StringBuilder: void <init>()>();

        $r83 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Intent matches multiple activities; can\'t stop: ");

        $r82 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r81 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r84.<java.io.PrintStream: void println(java.lang.String)>($r81);

        return;

     label23:
        $r79 = interfaceinvoke r18.<java.util.List: java.lang.Object get(int)>(0);

        $r78 = (android.content.pm.ResolveInfo) $r79;

        $r77 = $r78.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        r17 = $r77.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        goto label03;

     label24:
        $r91 := @caughtexception;

        $r93 = <java.lang.System: java.io.PrintStream err>;

        $r94 = new java.lang.StringBuilder;

        specialinvoke $r94.<java.lang.StringBuilder: void <init>()>();

        $r101 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unable to open file: ");

        $r102 = r0.<com.android.commands.am.Am: java.lang.String mProfileFile>;

        $r103 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r102);

        $r104 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r93.<java.io.PrintStream: void println(java.lang.String)>($r104);

        return;

     label25:
        $r26 = r0.<com.android.commands.am.Am: android.app.IActivityManager mAm>;

        $i4 = r0.<com.android.commands.am.Am: int mStartFlags>;

        $r27 = r0.<com.android.commands.am.Am: java.lang.String mProfileFile>;

        $i3 = r0.<com.android.commands.am.Am: int mUserId>;

        i0 = interfaceinvoke $r26.<android.app.IActivityManager: int startActivityAsUser(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,java.lang.String,android.os.ParcelFileDescriptor,android.os.Bundle,int)>(null, null, r1, r2, null, null, 0, $i4, $r27, r4, null, $i3);

        r5 = null;

        goto label08;

     label26:
        r6 = <java.lang.System: java.io.PrintStream err>;

        goto label09;

     label27:
        z0 = 1;

        goto label11;

     label28:
        z0 = 1;

        virtualinvoke r6.<java.io.PrintStream: void println(java.lang.String)>("Warning: Activity not started because the  current activity is being kept for the user.");

        goto label11;

     label29:
        z0 = 1;

        virtualinvoke r6.<java.io.PrintStream: void println(java.lang.String)>("Warning: Activity not started, intent has been delivered to currently running top-most instance.");

        goto label11;

     label30:
        z0 = 1;

        virtualinvoke r6.<java.io.PrintStream: void println(java.lang.String)>("Warning: Activity not started because intent should be handled by the caller");

        goto label11;

     label31:
        z0 = 1;

        virtualinvoke r6.<java.io.PrintStream: void println(java.lang.String)>("Warning: Activity not started, its current task has been brought to the front");

        goto label11;

     label32:
        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Activity not started, unable to resolve ");

        $r53 = virtualinvoke r1.<android.content.Intent: java.lang.String toString()>();

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r53);

        r12 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<java.io.PrintStream: void println(java.lang.String)>(r12);

        z0 = 0;

        goto label11;

     label33:
        virtualinvoke r6.<java.io.PrintStream: void println(java.lang.String)>("Error type 3");

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Activity class ");

        $r64 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r63 = virtualinvoke $r64.<android.content.ComponentName: java.lang.String toShortString()>();

        $r60 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63);

        $r59 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not exist.");

        r11 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<java.io.PrintStream: void println(java.lang.String)>(r11);

        z0 = 0;

        goto label11;

     label34:
        virtualinvoke r6.<java.io.PrintStream: void println(java.lang.String)>("Error: Activity not started, you requested to both forward and receive its result");

        z0 = 0;

        goto label11;

     label35:
        virtualinvoke r6.<java.io.PrintStream: void println(java.lang.String)>("Error: Activity not started, you do not have permission to access it.");

        z0 = 0;

        goto label11;

     label36:
        r10 = "ok";

        goto label13;

        catch java.io.FileNotFoundException from label05 to label06 with label24;
    }

    private void runStartService() throws java.lang.Exception
    {
        com.android.commands.am.Am r0;
        android.content.Intent r1;
        android.content.ComponentName r2;
        int $i0, $i1;
        java.lang.StringBuilder $r3, $r5, $r6, $r12, $r13, $r15, $r17, $r19, $r21;
        java.io.PrintStream $r4, $r14, $r20, $r23, $r25;
        java.lang.String $r7, $r9, $r10, $r11, $r16, $r18, $r22, $r24;
        android.app.IActivityManager $r8;
        boolean $z0, $z1;

        r0 := @this: com.android.commands.am.Am;

        r1 = specialinvoke r0.<com.android.commands.am.Am: android.content.Intent makeIntent(int)>(-2);

        $i0 = r0.<com.android.commands.am.Am: int mUserId>;

        if $i0 != -1 goto label2;

        $r25 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>("Error: Can\'t start activity with user \'all\'");

     label1:
        return;

     label2:
        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Starting service: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r7);

        $r8 = r0.<com.android.commands.am.Am: android.app.IActivityManager mAm>;

        $r9 = virtualinvoke r1.<android.content.Intent: java.lang.String getType()>();

        $i1 = r0.<com.android.commands.am.Am: int mUserId>;

        r2 = interfaceinvoke $r8.<android.app.IActivityManager: android.content.ComponentName startService(android.app.IApplicationThread,android.content.Intent,java.lang.String,int)>(null, r1, $r9, $i1);

        if r2 != null goto label3;

        $r23 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>("Error: Not found; no service started.");

        return;

     label3:
        $r10 = virtualinvoke r2.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("!");

        if $z0 == 0 goto label4;

        $r20 = <java.lang.System: java.io.PrintStream err>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Requires permission ");

        $r22 = virtualinvoke r2.<android.content.ComponentName: java.lang.String getClassName()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>($r24);

        return;

     label4:
        $r11 = virtualinvoke r2.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("!!");

        if $z1 == 0 goto label1;

        $r14 = <java.lang.System: java.io.PrintStream err>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: ");

        $r16 = virtualinvoke r2.<android.content.ComponentName: java.lang.String getClassName()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r18);

        return;
    }

    private void runStopService() throws java.lang.Exception
    {
        com.android.commands.am.Am r0;
        android.content.Intent r1;
        int i0, $i1, $i2;
        java.lang.StringBuilder $r2, $r4, $r5;
        java.io.PrintStream $r3, $r9, $r10, $r11, $r12;
        java.lang.String $r6, $r8;
        android.app.IActivityManager $r7;

        r0 := @this: com.android.commands.am.Am;

        r1 = specialinvoke r0.<com.android.commands.am.Am: android.content.Intent makeIntent(int)>(-2);

        $i1 = r0.<com.android.commands.am.Am: int mUserId>;

        if $i1 != -1 goto label2;

        $r12 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>("Error: Can\'t stop activity with user \'all\'");

     label1:
        return;

     label2:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stopping service: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r6);

        $r7 = r0.<com.android.commands.am.Am: android.app.IActivityManager mAm>;

        $r8 = virtualinvoke r1.<android.content.Intent: java.lang.String getType()>();

        $i2 = r0.<com.android.commands.am.Am: int mUserId>;

        i0 = interfaceinvoke $r7.<android.app.IActivityManager: int stopService(android.app.IApplicationThread,android.content.Intent,java.lang.String,int)>(null, r1, $r8, $i2);

        if i0 != 0 goto label3;

        $r10 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("Service not stopped: was not running.");

        return;

     label3:
        if i0 != 1 goto label4;

        $r11 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("Service stopped");

        return;

     label4:
        if i0 != -1 goto label1;

        $r9 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>("Error stopping service");

        return;
    }

    private void runStopUser() throws java.lang.Exception
    {
        com.android.commands.am.Am r0;
        java.lang.String r1, r2, $r9;
        int i0, $i1;
        android.app.IActivityManager $r3;
        java.lang.StringBuilder $r4, $r6, $r7, $r8, $r10, $r11, $r12, $r13;
        java.io.PrintStream $r5;

        r0 := @this: com.android.commands.am.Am;

        r1 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        $r3 = r0.<com.android.commands.am.Am: android.app.IActivityManager mAm>;

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

        i0 = interfaceinvoke $r3.<android.app.IActivityManager: int stopUser(int,android.app.IStopUserCallback)>($i1, null);

        if i0 == 0 goto label2;

        r2 = "";

        tableswitch(i0)
        {
            case -2: goto label3;
            case -1: goto label4;
            default: goto label1;
        };

     label1:
        $r5 = <java.lang.System: java.io.PrintStream err>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Switch failed: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r9);

     label2:
        return;

     label3:
        r2 = " (Can\'t stop current user)";

        goto label1;

     label4:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (Unknown user ");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        r2 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;
    }

    private void runSwitchUser() throws java.lang.Exception
    {
        com.android.commands.am.Am r0;
        java.lang.String r1;
        android.app.IActivityManager $r2;
        int $i0;

        r0 := @this: com.android.commands.am.Am;

        r1 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        $r2 = r0.<com.android.commands.am.Am: android.app.IActivityManager mAm>;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

        interfaceinvoke $r2.<android.app.IActivityManager: boolean switchUser(int)>($i0);

        return;
    }

    private void runToUri(boolean) throws java.lang.Exception
    {
        com.android.commands.am.Am r0;
        boolean z0;
        android.content.Intent r1;
        java.io.PrintStream r2;
        byte b0;
        java.lang.String $r3;

        r0 := @this: com.android.commands.am.Am;

        z0 := @parameter0: boolean;

        r1 = specialinvoke r0.<com.android.commands.am.Am: android.content.Intent makeIntent(int)>(-2);

        r2 = <java.lang.System: java.io.PrintStream out>;

        if z0 == 0 goto label2;

        b0 = 1;

     label1:
        $r3 = virtualinvoke r1.<android.content.Intent: java.lang.String toUri(int)>(b0);

        virtualinvoke r2.<java.io.PrintStream: void println(java.lang.String)>($r3);

        return;

     label2:
        b0 = 0;

        goto label1;
    }

    private void sendBroadcast() throws java.lang.Exception
    {
        com.android.commands.am.Am r0;
        android.content.Intent r1;
        com.android.commands.am.Am$IntentReceiver r2, $r3;
        java.lang.StringBuilder $r4, $r6, $r7;
        java.io.PrintStream $r5;
        java.lang.String $r8, $r9;
        int $i0;
        android.app.IActivityManager $r10;

        r0 := @this: com.android.commands.am.Am;

        r1 = specialinvoke r0.<com.android.commands.am.Am: android.content.Intent makeIntent(int)>(-1);

        $r3 = new com.android.commands.am.Am$IntentReceiver;

        specialinvoke $r3.<com.android.commands.am.Am$IntentReceiver: void <init>(com.android.commands.am.Am,com.android.commands.am.Am$1)>(r0, null);

        r2 = $r3;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Broadcasting: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r8);

        $r10 = r0.<com.android.commands.am.Am: android.app.IActivityManager mAm>;

        $r9 = r0.<com.android.commands.am.Am: java.lang.String mReceiverPermission>;

        $i0 = r0.<com.android.commands.am.Am: int mUserId>;

        interfaceinvoke $r10.<android.app.IActivityManager: int broadcastIntent(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int)>(null, r1, null, r2, 0, null, null, $r9, -1, 1, 0, $i0);

        virtualinvoke r2.<com.android.commands.am.Am$IntentReceiver: void waitForFinish()>();

        return;
    }

    public void onRun() throws java.lang.Exception
    {
        com.android.commands.am.Am r0;
        java.lang.String r1, $r9;
        android.app.IActivityManager $r2, $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        android.util.AndroidException $r8;
        java.io.PrintStream $r10;

        r0 := @this: com.android.commands.am.Am;

        $r2 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        r0.<com.android.commands.am.Am: android.app.IActivityManager mAm> = $r2;

        $r3 = r0.<com.android.commands.am.Am: android.app.IActivityManager mAm>;

        if $r3 != null goto label01;

        $r10 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("Error type 2");

        $r8 = new android.util.AndroidException;

        specialinvoke $r8.<android.util.AndroidException: void <init>(java.lang.String)>("Can\'t connect to activity manager; is the system running?");

        throw $r8;

     label01:
        r1 = virtualinvoke r0.<com.android.commands.am.Am: java.lang.String nextArgRequired()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("start");

        if $z0 == 0 goto label02;

        specialinvoke r0.<com.android.commands.am.Am: void runStart()>();

        return;

     label02:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("startservice");

        if $z1 == 0 goto label03;

        specialinvoke r0.<com.android.commands.am.Am: void runStartService()>();

        return;

     label03:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("stopservice");

        if $z2 == 0 goto label04;

        specialinvoke r0.<com.android.commands.am.Am: void runStopService()>();

        return;

     label04:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("force-stop");

        if $z3 == 0 goto label05;

        specialinvoke r0.<com.android.commands.am.Am: void runForceStop()>();

        return;

     label05:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("kill");

        if $z4 == 0 goto label06;

        specialinvoke r0.<com.android.commands.am.Am: void runKill()>();

        return;

     label06:
        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("kill-all");

        if $z5 == 0 goto label07;

        specialinvoke r0.<com.android.commands.am.Am: void runKillAll()>();

        return;

     label07:
        $z6 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("instrument");

        if $z6 == 0 goto label08;

        specialinvoke r0.<com.android.commands.am.Am: void runInstrument()>();

        return;

     label08:
        $z7 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("broadcast");

        if $z7 == 0 goto label09;

        specialinvoke r0.<com.android.commands.am.Am: void sendBroadcast()>();

        return;

     label09:
        $z8 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("profile");

        if $z8 == 0 goto label10;

        specialinvoke r0.<com.android.commands.am.Am: void runProfile()>();

        return;

     label10:
        $z9 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("dumpheap");

        if $z9 == 0 goto label11;

        specialinvoke r0.<com.android.commands.am.Am: void runDumpHeap()>();

        return;

     label11:
        $z10 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("set-debug-app");

        if $z10 == 0 goto label12;

        specialinvoke r0.<com.android.commands.am.Am: void runSetDebugApp()>();

        return;

     label12:
        $z12 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("clear-debug-app");

        if $z12 == 0 goto label13;

        specialinvoke r0.<com.android.commands.am.Am: void runClearDebugApp()>();

        return;

     label13:
        $z11 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("bug-report");

        if $z11 == 0 goto label14;

        specialinvoke r0.<com.android.commands.am.Am: void runBugReport()>();

        return;

     label14:
        $z14 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("monitor");

        if $z14 == 0 goto label15;

        specialinvoke r0.<com.android.commands.am.Am: void runMonitor()>();

        return;

     label15:
        $z13 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("hang");

        if $z13 == 0 goto label16;

        specialinvoke r0.<com.android.commands.am.Am: void runHang()>();

        return;

     label16:
        $z16 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("restart");

        if $z16 == 0 goto label17;

        specialinvoke r0.<com.android.commands.am.Am: void runRestart()>();

        return;

     label17:
        $z15 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("idle-maintenance");

        if $z15 == 0 goto label18;

        specialinvoke r0.<com.android.commands.am.Am: void runIdleMaintenance()>();

        return;

     label18:
        $z18 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("screen-compat");

        if $z18 == 0 goto label19;

        specialinvoke r0.<com.android.commands.am.Am: void runScreenCompat()>();

        return;

     label19:
        $z17 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("to-uri");

        if $z17 == 0 goto label20;

        specialinvoke r0.<com.android.commands.am.Am: void runToUri(boolean)>(0);

        return;

     label20:
        $z20 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("to-intent-uri");

        if $z20 == 0 goto label21;

        specialinvoke r0.<com.android.commands.am.Am: void runToUri(boolean)>(1);

        return;

     label21:
        $z19 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("switch-user");

        if $z19 == 0 goto label22;

        specialinvoke r0.<com.android.commands.am.Am: void runSwitchUser()>();

        return;

     label22:
        $z22 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("stop-user");

        if $z22 == 0 goto label23;

        specialinvoke r0.<com.android.commands.am.Am: void runStopUser()>();

        return;

     label23:
        $z21 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("stack");

        if $z21 == 0 goto label24;

        specialinvoke r0.<com.android.commands.am.Am: void runStack()>();

        return;

     label24:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: unknown command \'");

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.commands.am.Am: void showError(java.lang.String)>($r9);

        return;
    }

    public void onShowUsage(java.io.PrintStream)
    {
        com.android.commands.am.Am r0;
        java.io.PrintStream r1;

        r0 := @this: com.android.commands.am.Am;

        r1 := @parameter0: java.io.PrintStream;

        virtualinvoke r1.<java.io.PrintStream: void println(java.lang.String)>("usage: am [subcommand] [options]\nusage: am start [-D] [-W] [-P <FILE>] [--start-profiler <FILE>]\n               [--R COUNT] [-S] [--opengl-trace]\n               [--user <USER_ID> | current] <INTENT>\n       am startservice [--user <USER_ID> | current] <INTENT>\n       am stopservice [--user <USER_ID> | current] <INTENT>\n       am force-stop [--user <USER_ID> | all | current] <PACKAGE>\n       am kill [--user <USER_ID> | all | current] <PACKAGE>\n       am kill-all\n       am broadcast [--user <USER_ID> | all | current] <INTENT>\n       am instrument [-r] [-e <NAME> <VALUE>] [-p <FILE>] [-w]\n               [--user <USER_ID> | current]\n               [--no-window-animation] <COMPONENT>\n       am profile start [--user <USER_ID> current] <PROCESS> <FILE>\n       am profile stop [--user <USER_ID> current] [<PROCESS>]\n       am dumpheap [--user <USER_ID> current] [-n] <PROCESS> <FILE>\n       am set-debug-app [-w] [--persistent] <PACKAGE>\n       am clear-debug-app\n       am monitor [--gdb <port>]\n       am hang [--allow-restart]\n       am restart\n       am idle-maintenance\n       am screen-compat [on|off] <PACKAGE>\n       am to-uri [INTENT]\n       am to-intent-uri [INTENT]\n       am switch-user <USER_ID>\n       am stop-user <USER_ID>\n       am stack create <TASK_ID> <RELATIVE_STACK_BOX_ID> <POSITION> <WEIGHT>\n       am stack movetask <TASK_ID> <STACK_ID> [true|false]\n       am stack resize <STACK_ID> <WEIGHT>\n       am stack boxes\n       am stack box <STACK_BOX_ID>\n\nam start: start an Activity.  Options are:\n    -D: enable debugging\n    -W: wait for launch to complete\n    --start-profiler <FILE>: start profiler and send results to <FILE>\n    -P <FILE>: like above, but profiling stops when app goes idle\n    -R: repeat the activity launch <COUNT> times.  Prior to each repeat,\n        the top activity will be finished.\n    -S: force stop the target app before starting the activity\n    --opengl-trace: enable tracing of OpenGL functions\n    --user <USER_ID> | current: Specify which user to run as; if not\n        specified then run as the current user.\n\nam startservice: start a Service.  Options are:\n    --user <USER_ID> | current: Specify which user to run as; if not\n        specified then run as the current user.\n\nam stopservice: stop a Service.  Options are:\n    --user <USER_ID> | current: Specify which user to run as; if not\n        specified then run as the current user.\n\nam force-stop: force stop everything associated with <PACKAGE>.\n    --user <USER_ID> | all | current: Specify user to force stop;\n        all users if not specified.\n\nam kill: Kill all processes associated with <PACKAGE>.  Only kills.\n  processes that are safe to kill -- that is, will not impact the user\n  experience.\n    --user <USER_ID> | all | current: Specify user whose processes to kill;\n        all users if not specified.\n\nam kill-all: Kill all background processes.\n\nam broadcast: send a broadcast Intent.  Options are:\n    --user <USER_ID> | all | current: Specify which user to send to; if not\n        specified then send to all users.\n    --receiver-permission <PERMISSION>: Require receiver to hold permission.\n\nam instrument: start an Instrumentation.  Typically this target <COMPONENT>\n  is the form <TEST_PACKAGE>/<RUNNER_CLASS>.  Options are:\n    -r: print raw results (otherwise decode REPORT_KEY_STREAMRESULT).  Use with\n        [-e perf true] to generate raw output for performance measurements.\n    -e <NAME> <VALUE>: set argument <NAME> to <VALUE>.  For test runners a\n        common form is [-e <testrunner_flag> <value>[,<value>...]].\n    -p <FILE>: write profiling data to <FILE>\n    -w: wait for instrumentation to finish before returning.  Required for\n        test runners.\n    --user <USER_ID> | current: Specify user instrumentation runs in;\n        current user if not specified.\n    --no-window-animation: turn off window animations while running.\n\nam profile: start and stop profiler on a process.  The given <PROCESS> argument\n  may be either a process name or pid.  Options are:\n    --user <USER_ID> | current: When supplying a process name,\n        specify user of process to profile; uses current user if not specified.\n\nam dumpheap: dump the heap of a process.  The given <PROCESS> argument may\n  be either a process name or pid.  Options are:\n    -n: dump native heap instead of managed heap\n    --user <USER_ID> | current: When supplying a process name,\n        specify user of process to dump; uses current user if not specified.\n\nam set-debug-app: set application <PACKAGE> to debug.  Options are:\n    -w: wait for debugger when application starts\n    --persistent: retain this value\n\nam clear-debug-app: clear the previously set-debug-app.\n\nam bug-report: request bug report generation; will launch UI\n    when done to select where it should be delivered.\n\nam monitor: start monitoring for crashes or ANRs.\n    --gdb: start gdbserv on the given port at crash/ANR\n\nam hang: hang the system.\n    --allow-restart: allow watchdog to perform normal system restart\n\nam restart: restart the user-space system.\n\nam idle-maintenance: perform idle maintenance now.\n\nam screen-compat: control screen compatibility mode of <PACKAGE>.\n\nam to-uri: print the given Intent specification as a URI.\n\nam to-intent-uri: print the given Intent specification as an intent: URI.\n\nam switch-user: switch to put USER_ID in the foreground, starting\n  execution of that user if it is currently stopped.\n\nam stop-user: stop execution of USER_ID, not allowing it to run any\n  code until a later explicit switch to it.\n\nam stack create: create a new stack relative to an existing one.\n   <TASK_ID>: the task to populate the new stack with. Must exist.\n   <RELATIVE_STACK_BOX_ID>: existing stack box\'s id.\n   <POSITION>: 0: before <RELATIVE_STACK_BOX_ID>, per RTL/LTR configuration,\n               1: after <RELATIVE_STACK_BOX_ID>, per RTL/LTR configuration,\n               2: to left of <RELATIVE_STACK_BOX_ID>,\n               3: to right of <RELATIVE_STACK_BOX_ID>,               4: above <RELATIVE_STACK_BOX_ID>, 5: below <RELATIVE_STACK_BOX_ID>\n   <WEIGHT>: float between 0.2 and 0.8 inclusive.\n\nam stack movetask: move <TASK_ID> from its current stack to the top (true) or   bottom (false) of <STACK_ID>.\n\nam stack resize: change <STACK_ID> relative size to new <WEIGHT>.\n\nam stack boxes: list the hierarchy of stack boxes and their contents.\n\nam stack box: list the hierarchy of stack boxes rooted at <STACK_BOX_ID>.\n\n<INTENT> specifications include these flags and arguments:\n    [-a <ACTION>] [-d <DATA_URI>] [-t <MIME_TYPE>]\n    [-c <CATEGORY> [-c <CATEGORY>] ...]\n    [-e|--es <EXTRA_KEY> <EXTRA_STRING_VALUE> ...]\n    [--esn <EXTRA_KEY> ...]\n    [--ez <EXTRA_KEY> <EXTRA_BOOLEAN_VALUE> ...]\n    [--ei <EXTRA_KEY> <EXTRA_INT_VALUE> ...]\n    [--el <EXTRA_KEY> <EXTRA_LONG_VALUE> ...]\n    [--ef <EXTRA_KEY> <EXTRA_FLOAT_VALUE> ...]\n    [--eu <EXTRA_KEY> <EXTRA_URI_VALUE> ...]\n    [--ecn <EXTRA_KEY> <EXTRA_COMPONENT_NAME_VALUE>]\n    [--eia <EXTRA_KEY> <EXTRA_INT_VALUE>[,<EXTRA_INT_VALUE...]]\n    [--ela <EXTRA_KEY> <EXTRA_LONG_VALUE>[,<EXTRA_LONG_VALUE...]]\n    [--efa <EXTRA_KEY> <EXTRA_FLOAT_VALUE>[,<EXTRA_FLOAT_VALUE...]]\n    [-n <COMPONENT>] [-f <FLAGS>]\n    [--grant-read-uri-permission] [--grant-write-uri-permission]\n    [--debug-log-resolution] [--exclude-stopped-packages]\n    [--include-stopped-packages]\n    [--activity-brought-to-front] [--activity-clear-top]\n    [--activity-clear-when-task-reset] [--activity-exclude-from-recents]\n    [--activity-launched-from-history] [--activity-multiple-task]\n    [--activity-no-animation] [--activity-no-history]\n    [--activity-no-user-action] [--activity-previous-is-top]\n    [--activity-reorder-to-front] [--activity-reset-task-if-needed]\n    [--activity-single-top] [--activity-clear-task]\n    [--activity-task-on-home]\n    [--receiver-registered-only] [--receiver-replace-pending]\n    [--selector]\n    [<URI> | <PACKAGE> | <COMPONENT>]\n");

        return;
    }

    int parseUserArg(java.lang.String)
    {
        com.android.commands.am.Am r0;
        java.lang.String r1, $r2, $r3, $r4;
        boolean $z0, $z1, $z2;
        int $i0;

        r0 := @this: com.android.commands.am.Am;

        r1 := @parameter0: java.lang.String;

        $r2 = "all";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return -1;

     label1:
        $r3 = "current";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 != 0 goto label2;

        $r4 = "cur";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label3;

     label2:
        return -2;

     label3:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

        return $i0;
    }
}
