public class com.android.internal.telephony.PhoneFactory extends java.lang.Object
{
    static final java.lang.String LOG_TAG;
    static final int SOCKET_OPEN_MAX_RETRY;
    static final int SOCKET_OPEN_RETRY_MILLIS;
    private static com.android.internal.telephony.CommandsInterface sCommandsInterface;
    private static android.content.Context sContext;
    private static android.os.Looper sLooper;
    private static boolean sMadeDefaults;
    private static com.android.internal.telephony.PhoneNotifier sPhoneNotifier;
    private static com.android.internal.telephony.Phone sProxyPhone;

    static void <clinit>()
    {
        <com.android.internal.telephony.PhoneFactory: int SOCKET_OPEN_RETRY_MILLIS> = 2000;

        <com.android.internal.telephony.PhoneFactory: int SOCKET_OPEN_MAX_RETRY> = 3;

        <com.android.internal.telephony.PhoneFactory: java.lang.String LOG_TAG> = "PhoneFactory";

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone sProxyPhone> = null;

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.CommandsInterface sCommandsInterface> = null;

        <com.android.internal.telephony.PhoneFactory: boolean sMadeDefaults> = 0;

        return;
    }

    public void <init>()
    {
        com.android.internal.telephony.PhoneFactory r0;

        r0 := @this: com.android.internal.telephony.PhoneFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.android.internal.telephony.Phone getCdmaPhone()
    {
        java.lang.Object r0;
        java.lang.Throwable r1, $r11;
        com.android.internal.telephony.cdma.CDMAPhone r2, $r3;
        int $i0;
        com.android.internal.telephony.PhoneNotifier $r4, $r8;
        com.android.internal.telephony.CommandsInterface $r5, $r9;
        android.content.Context $r6, $r10;
        com.android.internal.telephony.cdma.CDMALTEPhone $r7;

        r0 = <com.android.internal.telephony.PhoneProxy: java.lang.Object lockForRadioTechnologyChange>;

        entermonitor r0;

     label1:
        $i0 = staticinvoke <android.telephony.TelephonyManager: int getLteOnCdmaModeStatic()>();

        tableswitch($i0)
        {
            case 1: goto label5;
            default: goto label2;
        };

     label2:
        $r3 = new com.android.internal.telephony.cdma.CDMAPhone;

        $r6 = <com.android.internal.telephony.PhoneFactory: android.content.Context sContext>;

        $r5 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.CommandsInterface sCommandsInterface>;

        $r4 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.PhoneNotifier sPhoneNotifier>;

        specialinvoke $r3.<com.android.internal.telephony.cdma.CDMAPhone: void <init>(android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier)>($r6, $r5, $r4);

        r2 = $r3;

     label3:
        exitmonitor r0;

     label4:
        return r2;

     label5:
        $r7 = new com.android.internal.telephony.cdma.CDMALTEPhone;

        $r10 = <com.android.internal.telephony.PhoneFactory: android.content.Context sContext>;

        $r9 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.CommandsInterface sCommandsInterface>;

        $r8 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.PhoneNotifier sPhoneNotifier>;

        specialinvoke $r7.<com.android.internal.telephony.cdma.CDMALTEPhone: void <init>(android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier)>($r10, $r9, $r8);

        r2 = $r7;

     label6:
        goto label3;

     label7:
        $r11 := @caughtexception;

        r1 = $r11;

     label8:
        exitmonitor r0;

     label9:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public static com.android.internal.telephony.Phone getDefaultPhone()
    {
        android.os.Looper $r0, $r1;
        boolean $z0;
        com.android.internal.telephony.Phone $r2;
        java.lang.IllegalStateException $r3;
        java.lang.RuntimeException $r4;

        $r0 = <com.android.internal.telephony.PhoneFactory: android.os.Looper sLooper>;

        $r1 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if $r0 == $r1 goto label1;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("PhoneFactory.getDefaultPhone must be called from Looper thread");

        throw $r4;

     label1:
        $z0 = <com.android.internal.telephony.PhoneFactory: boolean sMadeDefaults>;

        if $z0 != 0 goto label2;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Default phones haven\'t been made yet!");

        throw $r3;

     label2:
        $r2 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone sProxyPhone>;

        return $r2;
    }

    public static com.android.internal.telephony.Phone getGsmPhone()
    {
        java.lang.Object r0;
        com.android.internal.telephony.gsm.GSMPhone r1, $r3;
        java.lang.Throwable r2, $r7;
        com.android.internal.telephony.PhoneNotifier $r4;
        com.android.internal.telephony.CommandsInterface $r5;
        android.content.Context $r6;

        r0 = <com.android.internal.telephony.PhoneProxy: java.lang.Object lockForRadioTechnologyChange>;

        entermonitor r0;

     label1:
        $r3 = new com.android.internal.telephony.gsm.GSMPhone;

        $r6 = <com.android.internal.telephony.PhoneFactory: android.content.Context sContext>;

        $r5 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.CommandsInterface sCommandsInterface>;

        $r4 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.PhoneNotifier sPhoneNotifier>;

        specialinvoke $r3.<com.android.internal.telephony.gsm.GSMPhone: void <init>(android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier)>($r6, $r5, $r4);

        r1 = $r3;

        exitmonitor r0;

     label2:
        return r1;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

     label4:
        exitmonitor r0;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static void makeDefaultPhone(android.content.Context)
    {
        android.content.Context r0;
        java.lang.Throwable r1, $r43;
        int i0, i1, i3, i4, i5, $i10;
        boolean z0, $z1;
        byte b2;
        android.content.ComponentName r3;
        java.lang.String r4, $r14, $r16, $r18, $r26;
        android.os.Looper $r6, $r7;
        java.lang.RuntimeException $r8, $r40;
        android.net.LocalServerSocket $r9;
        com.android.internal.telephony.DefaultPhoneNotifier $r10;
        android.content.ContentResolver $r11;
        java.lang.StringBuilder $r12, $r13, $r15, $r17, $r19, $r20, $r24, $r25, $r27;
        com.android.internal.telephony.RIL $r22;
        com.android.internal.telephony.CommandsInterface $r23, $r31, $r36, $r39;
        com.android.internal.telephony.cdma.CDMAPhone $r28;
        com.android.internal.telephony.PhoneProxy $r29, $r30, $r33;
        com.android.internal.telephony.PhoneNotifier $r32, $r35, $r38;
        com.android.internal.telephony.gsm.GSMPhone $r34;
        com.android.internal.telephony.cdma.CDMALTEPhone $r37;
        java.lang.InterruptedException $r41;
        java.io.IOException $r42;

        r0 := @parameter0: android.content.Context;

        entermonitor class "com/android/internal/telephony/Phone";

     label01:
        $z1 = <com.android.internal.telephony.PhoneFactory: boolean sMadeDefaults>;

        if $z1 != 0 goto label18;

        $r7 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        <com.android.internal.telephony.PhoneFactory: android.os.Looper sLooper> = $r7;

        <com.android.internal.telephony.PhoneFactory: android.content.Context sContext> = r0;

        $r6 = <com.android.internal.telephony.PhoneFactory: android.os.Looper sLooper>;

        if $r6 != null goto label05;

        $r40 = new java.lang.RuntimeException;

        specialinvoke $r40.<java.lang.RuntimeException: void <init>(java.lang.String)>("PhoneFactory.makeDefaultPhone must be called from Looper thread");

        throw $r40;

     label02:
        $r43 := @caughtexception;

        r1 = $r43;

     label03:
        exitmonitor class "com/android/internal/telephony/Phone";

     label04:
        throw r1;

     label05:
        i0 = 0;

     label06:
        z0 = 0;

        i0 = i0 + 1;

     label07:
        $r9 = new android.net.LocalServerSocket;

        specialinvoke $r9.<android.net.LocalServerSocket: void <init>(java.lang.String)>("com.android.internal.telephony");

     label08:
        if z0 != 0 goto label20;

     label09:
        $r10 = new com.android.internal.telephony.DefaultPhoneNotifier;

        specialinvoke $r10.<com.android.internal.telephony.DefaultPhoneNotifier: void <init>()>();

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.PhoneNotifier sPhoneNotifier> = $r10;

        i1 = staticinvoke <android.telephony.TelephonyManager: int getLteOnCdmaModeStatic()>();

     label10:
        b2 = 0;

        if i1 != 1 goto label11;

        b2 = 7;

     label11:
        $r11 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        i3 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r11, "preferred_network_mode", b2);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Network Mode set to ");

        $r16 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i3);

        $r13 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("PhoneFactory", $r14);

        i4 = staticinvoke <com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager: int getDefault(android.content.Context)>(r0);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cdma Subscription set to ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r18 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("PhoneFactory", $r18);

        $r22 = new com.android.internal.telephony.RIL;

        specialinvoke $r22.<com.android.internal.telephony.RIL: void <init>(android.content.Context,int,int)>(r0, i3, i4);

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.CommandsInterface sCommandsInterface> = $r22;

        $r23 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.CommandsInterface sCommandsInterface>;

        staticinvoke <com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccController make(android.content.Context,com.android.internal.telephony.CommandsInterface)>(r0, $r23);

        i5 = staticinvoke <android.telephony.TelephonyManager: int getPhoneType(int)>(i3);

     label12:
        if i5 != 1 goto label25;

     label13:
        staticinvoke <android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("PhoneFactory", "Creating GSMPhone");

        $r33 = new com.android.internal.telephony.PhoneProxy;

        $r34 = new com.android.internal.telephony.gsm.GSMPhone;

        $r36 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.CommandsInterface sCommandsInterface>;

        $r35 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.PhoneNotifier sPhoneNotifier>;

        specialinvoke $r34.<com.android.internal.telephony.gsm.GSMPhone: void <init>(android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier)>(r0, $r36, $r35);

        specialinvoke $r33.<com.android.internal.telephony.PhoneProxy: void <init>(com.android.internal.telephony.PhoneBase)>($r34);

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone sProxyPhone> = $r33;

     label14:
        r3 = staticinvoke <com.android.internal.telephony.SmsApplication: android.content.ComponentName getDefaultSmsApplication(android.content.Context,boolean)>(r0, 1);

     label15:
        r4 = "NONE";

        if r3 == null goto label17;

     label16:
        r4 = virtualinvoke r3.<android.content.ComponentName: java.lang.String getPackageName()>();

     label17:
        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("defaultSmsApplication: ");

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("PhoneFactory", $r26);

        staticinvoke <com.android.internal.telephony.SmsApplication: void initSmsPackageMonitor(android.content.Context)>(r0);

        <com.android.internal.telephony.PhoneFactory: boolean sMadeDefaults> = 1;

     label18:
        exitmonitor class "com/android/internal/telephony/Phone";

     label19:
        return;

     label20:
        if i0 <= 3 goto label22;

     label21:
        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>("PhoneFactory probably already running");

        throw $r8;

     label22:
        staticinvoke <java.lang.Thread: void sleep(long)>(2000L);

     label23:
        goto label06;

     label24:
        $r41 := @caughtexception;

        goto label06;

     label25:
        if i5 != 2 goto label14;

     label26:
        $i10 = staticinvoke <android.telephony.TelephonyManager: int getLteOnCdmaModeStatic()>();

        tableswitch($i10)
        {
            case 1: goto label29;
            default: goto label27;
        };

     label27:
        staticinvoke <android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("PhoneFactory", "Creating CDMAPhone");

        $r29 = new com.android.internal.telephony.PhoneProxy;

        $r28 = new com.android.internal.telephony.cdma.CDMAPhone;

        $r31 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.CommandsInterface sCommandsInterface>;

        $r32 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.PhoneNotifier sPhoneNotifier>;

        specialinvoke $r28.<com.android.internal.telephony.cdma.CDMAPhone: void <init>(android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier)>(r0, $r31, $r32);

        specialinvoke $r29.<com.android.internal.telephony.PhoneProxy: void <init>(com.android.internal.telephony.PhoneBase)>($r28);

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone sProxyPhone> = $r29;

     label28:
        goto label14;

     label29:
        staticinvoke <android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("PhoneFactory", "Creating CDMALTEPhone");

        $r30 = new com.android.internal.telephony.PhoneProxy;

        $r37 = new com.android.internal.telephony.cdma.CDMALTEPhone;

        $r39 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.CommandsInterface sCommandsInterface>;

        $r38 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.PhoneNotifier sPhoneNotifier>;

        specialinvoke $r37.<com.android.internal.telephony.cdma.CDMALTEPhone: void <init>(android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier)>(r0, $r39, $r38);

        specialinvoke $r30.<com.android.internal.telephony.PhoneProxy: void <init>(com.android.internal.telephony.PhoneBase)>($r37);

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone sProxyPhone> = $r30;

     label30:
        goto label14;

     label31:
        $r42 := @caughtexception;

        z0 = 1;

        goto label08;

        catch java.lang.Throwable from label01 to label02 with label02;
        catch java.lang.Throwable from label03 to label04 with label02;
        catch java.io.IOException from label07 to label08 with label31;
        catch java.lang.Throwable from label07 to label08 with label02;
        catch java.lang.Throwable from label09 to label10 with label02;
        catch java.lang.Throwable from label11 to label12 with label02;
        catch java.lang.Throwable from label13 to label14 with label02;
        catch java.lang.Throwable from label14 to label15 with label02;
        catch java.lang.Throwable from label16 to label17 with label02;
        catch java.lang.Throwable from label17 to label18 with label02;
        catch java.lang.Throwable from label18 to label19 with label02;
        catch java.lang.Throwable from label21 to label22 with label02;
        catch java.lang.InterruptedException from label22 to label23 with label24;
        catch java.lang.Throwable from label22 to label23 with label02;
        catch java.lang.Throwable from label26 to label27 with label02;
        catch java.lang.Throwable from label27 to label28 with label02;
        catch java.lang.Throwable from label29 to label30 with label02;
    }

    public static void makeDefaultPhones(android.content.Context)
    {
        android.content.Context r0;

        r0 := @parameter0: android.content.Context;

        staticinvoke <com.android.internal.telephony.PhoneFactory: void makeDefaultPhone(android.content.Context)>(r0);

        return;
    }

    public static com.android.internal.telephony.sip.SipPhone makeSipPhone(java.lang.String)
    {
        java.lang.String r0;
        com.android.internal.telephony.PhoneNotifier $r1;
        android.content.Context $r2;
        com.android.internal.telephony.sip.SipPhone $r3;

        r0 := @parameter0: java.lang.String;

        $r2 = <com.android.internal.telephony.PhoneFactory: android.content.Context sContext>;

        $r1 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.PhoneNotifier sPhoneNotifier>;

        $r3 = staticinvoke <com.android.internal.telephony.sip.SipPhoneFactory: com.android.internal.telephony.sip.SipPhone makePhone(java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier)>(r0, $r2, $r1);

        return $r3;
    }
}
