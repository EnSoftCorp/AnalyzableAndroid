public final class com.android.okhttp.Connection extends java.lang.Object implements java.io.Closeable
{
    private static final byte[] HTTP_11;
    private static final byte[] NPN_PROTOCOLS;
    private static final byte[] SPDY3;
    private boolean connected;
    private int httpMinorVersion;
    private long idleStartTimeNs;
    private java.io.InputStream in;
    private java.io.OutputStream out;
    private final com.android.okhttp.Route route;
    private java.net.Socket socket;
    private com.android.okhttp.internal.spdy.SpdyConnection spdyConnection;

    static void <clinit>()
    {
        byte[] $r0, $r1, $r2;

        $r0 = newarray (byte)[16];

        $r0[0] = 6;

        $r0[1] = 115;

        $r0[2] = 112;

        $r0[3] = 100;

        $r0[4] = 121;

        $r0[5] = 47;

        $r0[6] = 51;

        $r0[7] = 8;

        $r0[8] = 104;

        $r0[9] = 116;

        $r0[10] = 116;

        $r0[11] = 112;

        $r0[12] = 47;

        $r0[13] = 49;

        $r0[14] = 46;

        $r0[15] = 49;

        <com.android.okhttp.Connection: byte[] NPN_PROTOCOLS> = $r0;

        $r1 = newarray (byte)[6];

        $r1[0] = 115;

        $r1[1] = 112;

        $r1[2] = 100;

        $r1[3] = 121;

        $r1[4] = 47;

        $r1[5] = 51;

        <com.android.okhttp.Connection: byte[] SPDY3> = $r1;

        $r2 = newarray (byte)[8];

        $r2[0] = 104;

        $r2[1] = 116;

        $r2[2] = 116;

        $r2[3] = 112;

        $r2[4] = 47;

        $r2[5] = 49;

        $r2[6] = 46;

        $r2[7] = 49;

        <com.android.okhttp.Connection: byte[] HTTP_11> = $r2;

        return;
    }

    public void <init>(com.android.okhttp.Route)
    {
        com.android.okhttp.Connection r0;
        com.android.okhttp.Route r1;

        r0 := @this: com.android.okhttp.Connection;

        r1 := @parameter0: com.android.okhttp.Route;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.okhttp.Connection: boolean connected> = 0;

        r0.<com.android.okhttp.Connection: int httpMinorVersion> = 1;

        r0.<com.android.okhttp.Connection: com.android.okhttp.Route route> = r1;

        return;
    }

    private void makeTunnel(com.android.okhttp.TunnelRequest) throws java.io.IOException
    {
        com.android.okhttp.Connection r0;
        com.android.okhttp.TunnelRequest r1;
        com.android.okhttp.internal.http.RawHeaders r2, r3, r4, $r9;
        java.net.URL r5, $r10;
        java.io.OutputStream $r6;
        byte[] $r7;
        java.io.InputStream $r8;
        int $i0, $i1, $i2;
        java.lang.String $r11, $r22;
        com.android.okhttp.Address $r12;
        com.android.okhttp.Route $r13, $r15;
        java.net.Proxy $r14;
        boolean $z0;
        com.android.okhttp.OkAuthenticator $r16;
        java.io.IOException $r17, $r18;
        java.lang.StringBuilder $r19, $r20, $r21;

        r0 := @this: com.android.okhttp.Connection;

        r1 := @parameter0: com.android.okhttp.TunnelRequest;

        r2 = virtualinvoke r1.<com.android.okhttp.TunnelRequest: com.android.okhttp.internal.http.RawHeaders getRequestHeaders()>();

     label1:
        $r6 = r0.<com.android.okhttp.Connection: java.io.OutputStream out>;

        $r7 = virtualinvoke r2.<com.android.okhttp.internal.http.RawHeaders: byte[] toBytes()>();

        virtualinvoke $r6.<java.io.OutputStream: void write(byte[])>($r7);

        $r8 = r0.<com.android.okhttp.Connection: java.io.InputStream in>;

        r3 = staticinvoke <com.android.okhttp.internal.http.RawHeaders: com.android.okhttp.internal.http.RawHeaders fromBytes(java.io.InputStream)>($r8);

        $i0 = virtualinvoke r3.<com.android.okhttp.internal.http.RawHeaders: int getResponseCode()>();

        lookupswitch($i0)
        {
            case 200: goto label5;
            case 407: goto label3;
            default: goto label2;
        };

     label2:
        $r17 = new java.io.IOException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected response code for CONNECT: ");

        $i2 = virtualinvoke r3.<com.android.okhttp.internal.http.RawHeaders: int getResponseCode()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.io.IOException: void <init>(java.lang.String)>($r22);

        throw $r17;

     label3:
        $r9 = new com.android.okhttp.internal.http.RawHeaders;

        specialinvoke $r9.<com.android.okhttp.internal.http.RawHeaders: void <init>(com.android.okhttp.internal.http.RawHeaders)>(r2);

        r4 = $r9;

        $r10 = new java.net.URL;

        $r11 = r1.<com.android.okhttp.TunnelRequest: java.lang.String host>;

        $i1 = r1.<com.android.okhttp.TunnelRequest: int port>;

        specialinvoke $r10.<java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String)>("https", $r11, $i1, "/");

        r5 = $r10;

        $r13 = r0.<com.android.okhttp.Connection: com.android.okhttp.Route route>;

        $r12 = $r13.<com.android.okhttp.Route: com.android.okhttp.Address address>;

        $r16 = $r12.<com.android.okhttp.Address: com.android.okhttp.OkAuthenticator authenticator>;

        $r15 = r0.<com.android.okhttp.Connection: com.android.okhttp.Route route>;

        $r14 = $r15.<com.android.okhttp.Route: java.net.Proxy proxy>;

        $z0 = staticinvoke <com.android.okhttp.internal.http.HttpAuthenticator: boolean processAuthHeader(com.android.okhttp.OkAuthenticator,int,com.android.okhttp.internal.http.RawHeaders,com.android.okhttp.internal.http.RawHeaders,java.net.Proxy,java.net.URL)>($r16, 407, r3, r4, $r14, r5);

        if $z0 == 0 goto label4;

        r2 = r4;

        goto label1;

     label4:
        $r18 = new java.io.IOException;

        specialinvoke $r18.<java.io.IOException: void <init>(java.lang.String)>("Failed to authenticate with proxy");

        throw $r18;

     label5:
        return;
    }

    private void upgradeToTls(com.android.okhttp.TunnelRequest) throws java.io.IOException
    {
        com.android.okhttp.Connection r0;
        com.android.okhttp.TunnelRequest r1;
        com.android.okhttp.internal.Platform r2;
        javax.net.ssl.SSLSocket r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        byte[] r4, $r25, $r29, $r52;
        com.android.okhttp.Route $r5, $r7, $r9, $r16, $r17, $r19, $r21, $r34, $r42, $r51, $r56;
        com.android.okhttp.Address $r6, $r8, $r10, $r18, $r20, $r35, $r49, $r50, $r57;
        int $i0;
        java.lang.String $r11, $r22, $r30, $r36, $r41, $r48, $r53, $r54;
        javax.net.ssl.SSLSocketFactory $r12;
        java.net.Socket $r13, $r14, $r15;
        javax.net.ssl.HostnameVerifier $r23;
        javax.net.ssl.SSLSession $r24;
        java.io.OutputStream $r26, $r40;
        java.io.InputStream $r27, $r39;
        java.io.IOException $r28, $r45;
        java.lang.StringBuilder $r31, $r32, $r33, $r43, $r44, $r46, $r47;
        com.android.okhttp.internal.spdy.SpdyConnection$Builder $r37;
        com.android.okhttp.internal.spdy.SpdyConnection $r38;
        java.util.List $r55;

        r0 := @this: com.android.okhttp.Connection;

        r1 := @parameter0: com.android.okhttp.TunnelRequest;

        r2 = staticinvoke <com.android.okhttp.internal.Platform: com.android.okhttp.internal.Platform get()>();

        $z1 = virtualinvoke r0.<com.android.okhttp.Connection: boolean requiresTunnel()>();

        if $z1 == 0 goto label1;

        specialinvoke r0.<com.android.okhttp.Connection: void makeTunnel(com.android.okhttp.TunnelRequest)>(r1);

     label1:
        $r5 = r0.<com.android.okhttp.Connection: com.android.okhttp.Route route>;

        $r6 = $r5.<com.android.okhttp.Route: com.android.okhttp.Address address>;

        $r12 = $r6.<com.android.okhttp.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory>;

        $r13 = r0.<com.android.okhttp.Connection: java.net.Socket socket>;

        $r7 = r0.<com.android.okhttp.Connection: com.android.okhttp.Route route>;

        $r8 = $r7.<com.android.okhttp.Route: com.android.okhttp.Address address>;

        $r11 = $r8.<com.android.okhttp.Address: java.lang.String uriHost>;

        $r9 = r0.<com.android.okhttp.Connection: com.android.okhttp.Route route>;

        $r10 = $r9.<com.android.okhttp.Route: com.android.okhttp.Address address>;

        $i0 = $r10.<com.android.okhttp.Address: int uriPort>;

        $r15 = virtualinvoke $r12.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>($r13, $r11, $i0, 1);

        r0.<com.android.okhttp.Connection: java.net.Socket socket> = $r15;

        $r14 = r0.<com.android.okhttp.Connection: java.net.Socket socket>;

        r3 = (javax.net.ssl.SSLSocket) $r14;

        $r16 = r0.<com.android.okhttp.Connection: com.android.okhttp.Route route>;

        $z2 = $r16.<com.android.okhttp.Route: boolean modernTls>;

        if $z2 == 0 goto label5;

        $r56 = r0.<com.android.okhttp.Connection: com.android.okhttp.Route route>;

        $r57 = $r56.<com.android.okhttp.Route: com.android.okhttp.Address address>;

        $r54 = $r57.<com.android.okhttp.Address: java.lang.String uriHost>;

        virtualinvoke r2.<com.android.okhttp.internal.Platform: void enableTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String)>(r3, $r54);

     label2:
        $r17 = r0.<com.android.okhttp.Connection: com.android.okhttp.Route route>;

        $z3 = $r17.<com.android.okhttp.Route: boolean modernTls>;

        if $z3 == 0 goto label6;

        $r51 = r0.<com.android.okhttp.Connection: com.android.okhttp.Route route>;

        $r50 = $r51.<com.android.okhttp.Route: com.android.okhttp.Address address>;

        $r55 = $r50.<com.android.okhttp.Address: java.util.List transports>;

        $z7 = interfaceinvoke $r55.<java.util.List: boolean contains(java.lang.Object)>("spdy/3");

        if $z7 == 0 goto label6;

        z0 = 1;

     label3:
        if z0 == 0 goto label4;

        $r52 = <com.android.okhttp.Connection: byte[] NPN_PROTOCOLS>;

        virtualinvoke r2.<com.android.okhttp.internal.Platform: void setNpnProtocols(javax.net.ssl.SSLSocket,byte[])>(r3, $r52);

     label4:
        virtualinvoke r3.<javax.net.ssl.SSLSocket: void startHandshake()>();

        $r19 = r0.<com.android.okhttp.Connection: com.android.okhttp.Route route>;

        $r18 = $r19.<com.android.okhttp.Route: com.android.okhttp.Address address>;

        $r23 = $r18.<com.android.okhttp.Address: javax.net.ssl.HostnameVerifier hostnameVerifier>;

        $r21 = r0.<com.android.okhttp.Connection: com.android.okhttp.Route route>;

        $r20 = $r21.<com.android.okhttp.Route: com.android.okhttp.Address address>;

        $r22 = $r20.<com.android.okhttp.Address: java.lang.String uriHost>;

        $r24 = virtualinvoke r3.<javax.net.ssl.SSLSocket: javax.net.ssl.SSLSession getSession()>();

        $z4 = interfaceinvoke $r23.<javax.net.ssl.HostnameVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)>($r22, $r24);

        if $z4 != 0 goto label7;

        $r45 = new java.io.IOException;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hostname \'");

        $r42 = r0.<com.android.okhttp.Connection: com.android.okhttp.Route route>;

        $r49 = $r42.<com.android.okhttp.Route: com.android.okhttp.Address address>;

        $r48 = $r49.<com.android.okhttp.Address: java.lang.String uriHost>;

        $r47 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r46 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' was not verified");

        $r53 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r45.<java.io.IOException: void <init>(java.lang.String)>($r53);

        throw $r45;

     label5:
        virtualinvoke r2.<com.android.okhttp.internal.Platform: void supportTlsIntolerantServer(javax.net.ssl.SSLSocket)>(r3);

        goto label2;

     label6:
        z0 = 0;

        goto label3;

     label7:
        $r26 = virtualinvoke r3.<javax.net.ssl.SSLSocket: java.io.OutputStream getOutputStream()>();

        r0.<com.android.okhttp.Connection: java.io.OutputStream out> = $r26;

        $r27 = virtualinvoke r3.<javax.net.ssl.SSLSocket: java.io.InputStream getInputStream()>();

        r0.<com.android.okhttp.Connection: java.io.InputStream in> = $r27;

        if z0 == 0 goto label8;

        r4 = virtualinvoke r2.<com.android.okhttp.internal.Platform: byte[] getNpnSelectedProtocol(javax.net.ssl.SSLSocket)>(r3);

        if r4 == null goto label8;

        $r25 = <com.android.okhttp.Connection: byte[] SPDY3>;

        $z6 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r4, $r25);

        if $z6 == 0 goto label9;

        virtualinvoke r3.<javax.net.ssl.SSLSocket: void setSoTimeout(int)>(0);

        $r37 = new com.android.okhttp.internal.spdy.SpdyConnection$Builder;

        $r34 = r0.<com.android.okhttp.Connection: com.android.okhttp.Route route>;

        $r35 = $r34.<com.android.okhttp.Route: com.android.okhttp.Address address>;

        $r41 = virtualinvoke $r35.<com.android.okhttp.Address: java.lang.String getUriHost()>();

        $r39 = r0.<com.android.okhttp.Connection: java.io.InputStream in>;

        $r40 = r0.<com.android.okhttp.Connection: java.io.OutputStream out>;

        specialinvoke $r37.<com.android.okhttp.internal.spdy.SpdyConnection$Builder: void <init>(java.lang.String,boolean,java.io.InputStream,java.io.OutputStream)>($r41, 1, $r39, $r40);

        $r38 = virtualinvoke $r37.<com.android.okhttp.internal.spdy.SpdyConnection$Builder: com.android.okhttp.internal.spdy.SpdyConnection build()>();

        r0.<com.android.okhttp.Connection: com.android.okhttp.internal.spdy.SpdyConnection spdyConnection> = $r38;

     label8:
        return;

     label9:
        $r29 = <com.android.okhttp.Connection: byte[] HTTP_11>;

        $z5 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r4, $r29);

        if $z5 != 0 goto label8;

        $r28 = new java.io.IOException;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected NPN transport ");

        $r30 = new java.lang.String;

        specialinvoke $r30.<java.lang.String: void <init>(byte[],java.lang.String)>(r4, "ISO-8859-1");

        $r31 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r28.<java.io.IOException: void <init>(java.lang.String)>($r36);

        throw $r28;
    }

    public void close() throws java.io.IOException
    {
        com.android.okhttp.Connection r0;
        java.net.Socket $r1;

        r0 := @this: com.android.okhttp.Connection;

        $r1 = r0.<com.android.okhttp.Connection: java.net.Socket socket>;

        virtualinvoke $r1.<java.net.Socket: void close()>();

        return;
    }

    public void connect(int, int, com.android.okhttp.TunnelRequest) throws java.io.IOException
    {
        com.android.okhttp.Connection r0;
        int i0, i1, i2;
        com.android.okhttp.TunnelRequest r1;
        java.net.Socket r2, $r7, $r11, $r12, $r13, $r14, $r20, $r25;
        boolean $z0;
        com.android.okhttp.Route $r3, $r9, $r16, $r28;
        java.net.Proxy $r4, $r29;
        java.net.Proxy$Type $r5, $r6;
        com.android.okhttp.internal.Platform $r8, $r21;
        java.net.InetSocketAddress $r10;
        java.io.InputStream $r15, $r24;
        java.io.OutputStream $r17, $r26;
        javax.net.ssl.SSLSocketFactory $r18;
        com.android.okhttp.Address $r19;
        java.io.BufferedInputStream $r22;
        java.io.BufferedOutputStream $r23;
        java.lang.IllegalStateException $r27;

        r0 := @this: com.android.okhttp.Connection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: com.android.okhttp.TunnelRequest;

        $z0 = r0.<com.android.okhttp.Connection: boolean connected>;

        if $z0 == 0 goto label1;

        $r27 = new java.lang.IllegalStateException;

        specialinvoke $r27.<java.lang.IllegalStateException: void <init>(java.lang.String)>("already connected");

        throw $r27;

     label1:
        r0.<com.android.okhttp.Connection: boolean connected> = 1;

        $r3 = r0.<com.android.okhttp.Connection: com.android.okhttp.Route route>;

        $r4 = $r3.<com.android.okhttp.Route: java.net.Proxy proxy>;

        $r5 = virtualinvoke $r4.<java.net.Proxy: java.net.Proxy$Type type()>();

        $r6 = <java.net.Proxy$Type: java.net.Proxy$Type HTTP>;

        if $r5 == $r6 goto label6;

        $r25 = new java.net.Socket;

        $r28 = r0.<com.android.okhttp.Connection: com.android.okhttp.Route route>;

        $r29 = $r28.<com.android.okhttp.Route: java.net.Proxy proxy>;

        specialinvoke $r25.<java.net.Socket: void <init>(java.net.Proxy)>($r29);

        r2 = $r25;

     label2:
        r0.<com.android.okhttp.Connection: java.net.Socket socket> = r2;

        $r8 = staticinvoke <com.android.okhttp.internal.Platform: com.android.okhttp.internal.Platform get()>();

        $r11 = r0.<com.android.okhttp.Connection: java.net.Socket socket>;

        $r9 = r0.<com.android.okhttp.Connection: com.android.okhttp.Route route>;

        $r10 = $r9.<com.android.okhttp.Route: java.net.InetSocketAddress inetSocketAddress>;

        virtualinvoke $r8.<com.android.okhttp.internal.Platform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>($r11, $r10, i0);

        $r13 = r0.<com.android.okhttp.Connection: java.net.Socket socket>;

        virtualinvoke $r13.<java.net.Socket: void setSoTimeout(int)>(i1);

        $r12 = r0.<com.android.okhttp.Connection: java.net.Socket socket>;

        $r15 = virtualinvoke $r12.<java.net.Socket: java.io.InputStream getInputStream()>();

        r0.<com.android.okhttp.Connection: java.io.InputStream in> = $r15;

        $r14 = r0.<com.android.okhttp.Connection: java.net.Socket socket>;

        $r17 = virtualinvoke $r14.<java.net.Socket: java.io.OutputStream getOutputStream()>();

        r0.<com.android.okhttp.Connection: java.io.OutputStream out> = $r17;

        $r16 = r0.<com.android.okhttp.Connection: com.android.okhttp.Route route>;

        $r19 = $r16.<com.android.okhttp.Route: com.android.okhttp.Address address>;

        $r18 = $r19.<com.android.okhttp.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory>;

        if $r18 == null goto label3;

        specialinvoke r0.<com.android.okhttp.Connection: void upgradeToTls(com.android.okhttp.TunnelRequest)>(r1);

     label3:
        $r21 = staticinvoke <com.android.okhttp.internal.Platform: com.android.okhttp.internal.Platform get()>();

        $r20 = r0.<com.android.okhttp.Connection: java.net.Socket socket>;

        i2 = virtualinvoke $r21.<com.android.okhttp.internal.Platform: int getMtu(java.net.Socket)>($r20);

        if i2 >= 1024 goto label4;

        i2 = 1024;

     label4:
        if i2 <= 8192 goto label5;

        i2 = 8192;

     label5:
        $r22 = new java.io.BufferedInputStream;

        $r24 = r0.<com.android.okhttp.Connection: java.io.InputStream in>;

        specialinvoke $r22.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>($r24, i2);

        r0.<com.android.okhttp.Connection: java.io.InputStream in> = $r22;

        $r23 = new java.io.BufferedOutputStream;

        $r26 = r0.<com.android.okhttp.Connection: java.io.OutputStream out>;

        specialinvoke $r23.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>($r26, i2);

        r0.<com.android.okhttp.Connection: java.io.OutputStream out> = $r23;

        return;

     label6:
        $r7 = new java.net.Socket;

        specialinvoke $r7.<java.net.Socket: void <init>()>();

        r2 = $r7;

        goto label2;
    }

    public int getHttpMinorVersion()
    {
        com.android.okhttp.Connection r0;
        int $i0;

        r0 := @this: com.android.okhttp.Connection;

        $i0 = r0.<com.android.okhttp.Connection: int httpMinorVersion>;

        return $i0;
    }

    public long getIdleStartTimeNs()
    {
        com.android.okhttp.Connection r0;
        com.android.okhttp.internal.spdy.SpdyConnection $r1, $r2;
        long $l0, $l1;

        r0 := @this: com.android.okhttp.Connection;

        $r1 = r0.<com.android.okhttp.Connection: com.android.okhttp.internal.spdy.SpdyConnection spdyConnection>;

        if $r1 != null goto label1;

        $l1 = r0.<com.android.okhttp.Connection: long idleStartTimeNs>;

        return $l1;

     label1:
        $r2 = r0.<com.android.okhttp.Connection: com.android.okhttp.internal.spdy.SpdyConnection spdyConnection>;

        $l0 = virtualinvoke $r2.<com.android.okhttp.internal.spdy.SpdyConnection: long getIdleStartTimeNs()>();

        return $l0;
    }

    public com.android.okhttp.Route getRoute()
    {
        com.android.okhttp.Connection r0;
        com.android.okhttp.Route $r1;

        r0 := @this: com.android.okhttp.Connection;

        $r1 = r0.<com.android.okhttp.Connection: com.android.okhttp.Route route>;

        return $r1;
    }

    public java.net.Socket getSocket()
    {
        com.android.okhttp.Connection r0;
        java.net.Socket $r1;

        r0 := @this: com.android.okhttp.Connection;

        $r1 = r0.<com.android.okhttp.Connection: java.net.Socket socket>;

        return $r1;
    }

    public com.android.okhttp.internal.spdy.SpdyConnection getSpdyConnection()
    {
        com.android.okhttp.Connection r0;
        com.android.okhttp.internal.spdy.SpdyConnection $r1;

        r0 := @this: com.android.okhttp.Connection;

        $r1 = r0.<com.android.okhttp.Connection: com.android.okhttp.internal.spdy.SpdyConnection spdyConnection>;

        return $r1;
    }

    public boolean isAlive()
    {
        com.android.okhttp.Connection r0;
        java.net.Socket $r1, $r2, $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.okhttp.Connection;

        $r1 = r0.<com.android.okhttp.Connection: java.net.Socket socket>;

        $z0 = virtualinvoke $r1.<java.net.Socket: boolean isClosed()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<com.android.okhttp.Connection: java.net.Socket socket>;

        $z1 = virtualinvoke $r2.<java.net.Socket: boolean isInputShutdown()>();

        if $z1 != 0 goto label1;

        $r3 = r0.<com.android.okhttp.Connection: java.net.Socket socket>;

        $z2 = virtualinvoke $r3.<java.net.Socket: boolean isOutputShutdown()>();

        if $z2 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isConnected()
    {
        com.android.okhttp.Connection r0;
        boolean $z0;

        r0 := @this: com.android.okhttp.Connection;

        $z0 = r0.<com.android.okhttp.Connection: boolean connected>;

        return $z0;
    }

    public boolean isExpired(long)
    {
        com.android.okhttp.Connection r0;
        long l0, $l1, $l2, $l3;
        boolean $z0;
        byte $b4;

        r0 := @this: com.android.okhttp.Connection;

        l0 := @parameter0: long;

        $z0 = virtualinvoke r0.<com.android.okhttp.Connection: boolean isIdle()>();

        if $z0 == 0 goto label1;

        $l1 = staticinvoke <java.lang.System: long nanoTime()>();

        $l2 = virtualinvoke r0.<com.android.okhttp.Connection: long getIdleStartTimeNs()>();

        $l3 = $l1 - $l2;

        $b4 = $l3 cmp l0;

        if $b4 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isIdle()
    {
        com.android.okhttp.Connection r0;
        com.android.okhttp.internal.spdy.SpdyConnection $r1, $r2;
        boolean $z0;

        r0 := @this: com.android.okhttp.Connection;

        $r1 = r0.<com.android.okhttp.Connection: com.android.okhttp.internal.spdy.SpdyConnection spdyConnection>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.okhttp.Connection: com.android.okhttp.internal.spdy.SpdyConnection spdyConnection>;

        $z0 = virtualinvoke $r2.<com.android.okhttp.internal.spdy.SpdyConnection: boolean isIdle()>();

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public boolean isReadable()
    {
        com.android.okhttp.Connection r0;
        java.io.BufferedInputStream r1;
        int i0, i1;
        java.lang.Throwable r4, $r12;
        java.io.InputStream $r5, $r6;
        boolean $z0, $z1;
        java.net.Socket $r7, $r8, $r9, $r11, $r14;
        java.io.IOException $r10;
        java.net.SocketTimeoutException $r13;

        r0 := @this: com.android.okhttp.Connection;

        $r5 = r0.<com.android.okhttp.Connection: java.io.InputStream in>;

        $z0 = $r5 instanceof java.io.BufferedInputStream;

        if $z0 != 0 goto label02;

     label01:
        return 1;

     label02:
        $z1 = virtualinvoke r0.<com.android.okhttp.Connection: boolean isSpdy()>();

        if $z1 != 0 goto label01;

        $r6 = r0.<com.android.okhttp.Connection: java.io.InputStream in>;

        r1 = (java.io.BufferedInputStream) $r6;

     label03:
        $r7 = r0.<com.android.okhttp.Connection: java.net.Socket socket>;

        i0 = virtualinvoke $r7.<java.net.Socket: int getSoTimeout()>();

     label04:
        $r8 = r0.<com.android.okhttp.Connection: java.net.Socket socket>;

        virtualinvoke $r8.<java.net.Socket: void setSoTimeout(int)>(1);

        virtualinvoke r1.<java.io.BufferedInputStream: void mark(int)>(1);

        i1 = virtualinvoke r1.<java.io.BufferedInputStream: int read()>();

     label05:
        if i1 != -1 goto label08;

     label06:
        $r11 = r0.<com.android.okhttp.Connection: java.net.Socket socket>;

        virtualinvoke $r11.<java.net.Socket: void setSoTimeout(int)>(i0);

     label07:
        return 0;

     label08:
        virtualinvoke r1.<java.io.BufferedInputStream: void reset()>();

     label09:
        $r9 = r0.<com.android.okhttp.Connection: java.net.Socket socket>;

        virtualinvoke $r9.<java.net.Socket: void setSoTimeout(int)>(i0);

     label10:
        return 1;

     label11:
        $r12 := @caughtexception;

        r4 = $r12;

     label12:
        $r14 = r0.<com.android.okhttp.Connection: java.net.Socket socket>;

        virtualinvoke $r14.<java.net.Socket: void setSoTimeout(int)>(i0);

        throw r4;

     label13:
        $r10 := @caughtexception;

        return 0;

     label14:
        $r13 := @caughtexception;

        return 1;

        catch java.net.SocketTimeoutException from label03 to label04 with label14;
        catch java.io.IOException from label03 to label04 with label13;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.net.SocketTimeoutException from label06 to label07 with label14;
        catch java.io.IOException from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.net.SocketTimeoutException from label09 to label10 with label14;
        catch java.io.IOException from label09 to label10 with label13;
        catch java.net.SocketTimeoutException from label12 to label13 with label14;
        catch java.io.IOException from label12 to label13 with label13;
    }

    public boolean isSpdy()
    {
        com.android.okhttp.Connection r0;
        com.android.okhttp.internal.spdy.SpdyConnection $r1;

        r0 := @this: com.android.okhttp.Connection;

        $r1 = r0.<com.android.okhttp.Connection: com.android.okhttp.internal.spdy.SpdyConnection spdyConnection>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.Object newTransport(com.android.okhttp.internal.http.HttpEngine) throws java.io.IOException
    {
        com.android.okhttp.Connection r0;
        com.android.okhttp.internal.http.HttpEngine r1;
        com.android.okhttp.internal.spdy.SpdyConnection $r2, $r7;
        com.android.okhttp.internal.http.HttpTransport $r3;
        java.io.InputStream $r4;
        java.io.OutputStream $r5;
        com.android.okhttp.internal.http.SpdyTransport $r6;

        r0 := @this: com.android.okhttp.Connection;

        r1 := @parameter0: com.android.okhttp.internal.http.HttpEngine;

        $r2 = r0.<com.android.okhttp.Connection: com.android.okhttp.internal.spdy.SpdyConnection spdyConnection>;

        if $r2 == null goto label1;

        $r6 = new com.android.okhttp.internal.http.SpdyTransport;

        $r7 = r0.<com.android.okhttp.Connection: com.android.okhttp.internal.spdy.SpdyConnection spdyConnection>;

        specialinvoke $r6.<com.android.okhttp.internal.http.SpdyTransport: void <init>(com.android.okhttp.internal.http.HttpEngine,com.android.okhttp.internal.spdy.SpdyConnection)>(r1, $r7);

        return $r6;

     label1:
        $r3 = new com.android.okhttp.internal.http.HttpTransport;

        $r5 = r0.<com.android.okhttp.Connection: java.io.OutputStream out>;

        $r4 = r0.<com.android.okhttp.Connection: java.io.InputStream in>;

        specialinvoke $r3.<com.android.okhttp.internal.http.HttpTransport: void <init>(com.android.okhttp.internal.http.HttpEngine,java.io.OutputStream,java.io.InputStream)>(r1, $r5, $r4);

        return $r3;
    }

    public boolean requiresTunnel()
    {
        com.android.okhttp.Connection r0;
        com.android.okhttp.Route $r1, $r4;
        com.android.okhttp.Address $r2;
        javax.net.ssl.SSLSocketFactory $r3;
        java.net.Proxy $r5;
        java.net.Proxy$Type $r6, $r7;

        r0 := @this: com.android.okhttp.Connection;

        $r1 = r0.<com.android.okhttp.Connection: com.android.okhttp.Route route>;

        $r2 = $r1.<com.android.okhttp.Route: com.android.okhttp.Address address>;

        $r3 = $r2.<com.android.okhttp.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory>;

        if $r3 == null goto label1;

        $r4 = r0.<com.android.okhttp.Connection: com.android.okhttp.Route route>;

        $r5 = $r4.<com.android.okhttp.Route: java.net.Proxy proxy>;

        $r6 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>();

        $r7 = <java.net.Proxy$Type: java.net.Proxy$Type HTTP>;

        if $r6 != $r7 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void resetIdleStartTime()
    {
        com.android.okhttp.Connection r0;
        com.android.okhttp.internal.spdy.SpdyConnection $r1;
        long $l0;
        java.lang.IllegalStateException $r2;

        r0 := @this: com.android.okhttp.Connection;

        $r1 = r0.<com.android.okhttp.Connection: com.android.okhttp.internal.spdy.SpdyConnection spdyConnection>;

        if $r1 == null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("spdyConnection != null");

        throw $r2;

     label1:
        $l0 = staticinvoke <java.lang.System: long nanoTime()>();

        r0.<com.android.okhttp.Connection: long idleStartTimeNs> = $l0;

        return;
    }

    public void setHttpMinorVersion(int)
    {
        com.android.okhttp.Connection r0;
        int i0;

        r0 := @this: com.android.okhttp.Connection;

        i0 := @parameter0: int;

        r0.<com.android.okhttp.Connection: int httpMinorVersion> = i0;

        return;
    }

    public final void updateReadTimeout(int) throws java.io.IOException
    {
        com.android.okhttp.Connection r0;
        int i0;
        boolean $z0;
        java.net.Socket $r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: com.android.okhttp.Connection;

        i0 := @parameter0: int;

        $z0 = r0.<com.android.okhttp.Connection: boolean connected>;

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("updateReadTimeout - not connected");

        throw $r2;

     label1:
        $r1 = r0.<com.android.okhttp.Connection: java.net.Socket socket>;

        virtualinvoke $r1.<java.net.Socket: void setSoTimeout(int)>(i0);

        return;
    }
}
