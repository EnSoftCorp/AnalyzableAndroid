public final class android.os.Trace extends java.lang.Object
{
    private static final int MAX_SECTION_NAME_LEN;
    private static final java.lang.String TAG;
    public static final long TRACE_TAG_ACTIVITY_MANAGER;
    public static final long TRACE_TAG_ALWAYS;
    public static final long TRACE_TAG_APP;
    public static final long TRACE_TAG_AUDIO;
    public static final long TRACE_TAG_CAMERA;
    public static final long TRACE_TAG_DALVIK;
    public static final long TRACE_TAG_GRAPHICS;
    public static final long TRACE_TAG_HAL;
    public static final long TRACE_TAG_INPUT;
    public static final long TRACE_TAG_NEVER;
    private static final long TRACE_TAG_NOT_READY;
    public static final long TRACE_TAG_RESOURCES;
    public static final long TRACE_TAG_RS;
    public static final long TRACE_TAG_SYNC_MANAGER;
    public static final long TRACE_TAG_VIDEO;
    public static final long TRACE_TAG_VIEW;
    public static final long TRACE_TAG_WEBVIEW;
    public static final long TRACE_TAG_WINDOW_MANAGER;
    private static volatile long sEnabledTags;

    static void <clinit>()
    {
        android.os.Trace$1 $r0;

        <android.os.Trace: long TRACE_TAG_WINDOW_MANAGER> = 32L;

        <android.os.Trace: long TRACE_TAG_WEBVIEW> = 16L;

        <android.os.Trace: long TRACE_TAG_VIEW> = 8L;

        <android.os.Trace: long TRACE_TAG_VIDEO> = 512L;

        <android.os.Trace: long TRACE_TAG_SYNC_MANAGER> = 128L;

        <android.os.Trace: long TRACE_TAG_RS> = 32768L;

        <android.os.Trace: long TRACE_TAG_RESOURCES> = 8192L;

        <android.os.Trace: long TRACE_TAG_NOT_READY> = -9223372036854775808L;

        <android.os.Trace: long TRACE_TAG_NEVER> = 0L;

        <android.os.Trace: long TRACE_TAG_INPUT> = 4L;

        <android.os.Trace: long TRACE_TAG_HAL> = 2048L;

        <android.os.Trace: long TRACE_TAG_GRAPHICS> = 2L;

        <android.os.Trace: long TRACE_TAG_DALVIK> = 16384L;

        <android.os.Trace: long TRACE_TAG_CAMERA> = 1024L;

        <android.os.Trace: long TRACE_TAG_AUDIO> = 256L;

        <android.os.Trace: long TRACE_TAG_APP> = 4096L;

        <android.os.Trace: long TRACE_TAG_ALWAYS> = 1L;

        <android.os.Trace: long TRACE_TAG_ACTIVITY_MANAGER> = 64L;

        <android.os.Trace: java.lang.String TAG> = "Trace";

        <android.os.Trace: int MAX_SECTION_NAME_LEN> = 127;

        <android.os.Trace: long sEnabledTags> = -9223372036854775808L;

        $r0 = new android.os.Trace$1;

        specialinvoke $r0.<android.os.Trace$1: void <init>()>();

        staticinvoke <android.os.SystemProperties: void addChangeCallback(java.lang.Runnable)>($r0);

        return;
    }

    private void <init>()
    {
        android.os.Trace r0;

        r0 := @this: android.os.Trace;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static long access$000()
    {
        long $l0;

        $l0 = staticinvoke <android.os.Trace: long cacheEnabledTags()>();

        return $l0;
    }

    public static void asyncTraceBegin(long, java.lang.String, int)
    {
        long l0;
        java.lang.String r0;
        int i1;
        boolean $z0;

        l0 := @parameter0: long;

        r0 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        $z0 = staticinvoke <android.os.Trace: boolean isTagEnabled(long)>(l0);

        if $z0 == 0 goto label1;

        staticinvoke <android.os.Trace: void nativeAsyncTraceBegin(long,java.lang.String,int)>(l0, r0, i1);

     label1:
        return;
    }

    public static void asyncTraceEnd(long, java.lang.String, int)
    {
        long l0;
        java.lang.String r0;
        int i1;
        boolean $z0;

        l0 := @parameter0: long;

        r0 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        $z0 = staticinvoke <android.os.Trace: boolean isTagEnabled(long)>(l0);

        if $z0 == 0 goto label1;

        staticinvoke <android.os.Trace: void nativeAsyncTraceEnd(long,java.lang.String,int)>(l0, r0, i1);

     label1:
        return;
    }

    public static void beginSection(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;
        int $i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.os.Trace: boolean isTagEnabled(long)>(4096L);

        if $z0 == 0 goto label2;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 <= 127 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("sectionName is too long");

        throw $r1;

     label1:
        staticinvoke <android.os.Trace: void nativeTraceBegin(long,java.lang.String)>(4096L, r0);

     label2:
        return;
    }

    private static long cacheEnabledTags()
    {
        long l0;

        l0 = staticinvoke <android.os.Trace: long nativeGetEnabledTags()>();

        <android.os.Trace: long sEnabledTags> = l0;

        return l0;
    }

    public static void endSection()
    {
        boolean $z0;

        $z0 = staticinvoke <android.os.Trace: boolean isTagEnabled(long)>(4096L);

        if $z0 == 0 goto label1;

        staticinvoke <android.os.Trace: void nativeTraceEnd(long)>(4096L);

     label1:
        return;
    }

    public static boolean isTagEnabled(long)
    {
        long l0, l1, $l3;
        byte $b2, $b4;

        l0 := @parameter0: long;

        l1 = <android.os.Trace: long sEnabledTags>;

        $b2 = l1 cmp -9223372036854775808L;

        if $b2 != 0 goto label1;

        l1 = staticinvoke <android.os.Trace: long cacheEnabledTags()>();

     label1:
        $l3 = l1 & l0;

        $b4 = $l3 cmp 0L;

        if $b4 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private static native void nativeAsyncTraceBegin(long, java.lang.String, int);

    private static native void nativeAsyncTraceEnd(long, java.lang.String, int);

    private static native long nativeGetEnabledTags();

    private static native void nativeSetAppTracingAllowed(boolean);

    private static native void nativeSetTracingEnabled(boolean);

    private static native void nativeTraceBegin(long, java.lang.String);

    private static native void nativeTraceCounter(long, java.lang.String, int);

    private static native void nativeTraceEnd(long);

    public static void setAppTracingAllowed(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        staticinvoke <android.os.Trace: void nativeSetAppTracingAllowed(boolean)>(z0);

        staticinvoke <android.os.Trace: long cacheEnabledTags()>();

        return;
    }

    public static void setTracingEnabled(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        staticinvoke <android.os.Trace: void nativeSetTracingEnabled(boolean)>(z0);

        staticinvoke <android.os.Trace: long cacheEnabledTags()>();

        return;
    }

    public static void traceBegin(long, java.lang.String)
    {
        long l0;
        java.lang.String r0;
        boolean $z0;

        l0 := @parameter0: long;

        r0 := @parameter1: java.lang.String;

        $z0 = staticinvoke <android.os.Trace: boolean isTagEnabled(long)>(l0);

        if $z0 == 0 goto label1;

        staticinvoke <android.os.Trace: void nativeTraceBegin(long,java.lang.String)>(l0, r0);

     label1:
        return;
    }

    public static void traceCounter(long, java.lang.String, int)
    {
        long l0;
        java.lang.String r0;
        int i1;
        boolean $z0;

        l0 := @parameter0: long;

        r0 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        $z0 = staticinvoke <android.os.Trace: boolean isTagEnabled(long)>(l0);

        if $z0 == 0 goto label1;

        staticinvoke <android.os.Trace: void nativeTraceCounter(long,java.lang.String,int)>(l0, r0, i1);

     label1:
        return;
    }

    public static void traceEnd(long)
    {
        long l0;
        boolean $z0;

        l0 := @parameter0: long;

        $z0 = staticinvoke <android.os.Trace: boolean isTagEnabled(long)>(l0);

        if $z0 == 0 goto label1;

        staticinvoke <android.os.Trace: void nativeTraceEnd(long)>(l0);

     label1:
        return;
    }
}
