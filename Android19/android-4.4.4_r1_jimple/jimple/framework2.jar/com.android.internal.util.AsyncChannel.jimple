public class com.android.internal.util.AsyncChannel extends java.lang.Object
{
    private static final int BASE;
    public static final int CMD_CHANNEL_DISCONNECT;
    public static final int CMD_CHANNEL_DISCONNECTED;
    public static final int CMD_CHANNEL_FULLY_CONNECTED;
    public static final int CMD_CHANNEL_FULL_CONNECTION;
    public static final int CMD_CHANNEL_HALF_CONNECTED;
    private static final int CMD_TO_STRING_COUNT;
    private static final boolean DBG;
    public static final int STATUS_BINDING_UNSUCCESSFUL;
    public static final int STATUS_FULL_CONNECTION_REFUSED_ALREADY_CONNECTED;
    public static final int STATUS_REMOTE_DISCONNECTION;
    public static final int STATUS_SEND_UNSUCCESSFUL;
    public static final int STATUS_SUCCESSFUL;
    private static final java.lang.String TAG;
    private static java.lang.String[] sCmdToString;
    private com.android.internal.util.AsyncChannel$AsyncChannelConnection mConnection;
    private com.android.internal.util.AsyncChannel$DeathMonitor mDeathMonitor;
    private android.os.Messenger mDstMessenger;
    private android.content.Context mSrcContext;
    private android.os.Handler mSrcHandler;
    private android.os.Messenger mSrcMessenger;

    static void <clinit>()
    {
        java.lang.String[] $r0, $r1, $r2, $r3, $r4, $r5;

        <com.android.internal.util.AsyncChannel: java.lang.String TAG> = "AsyncChannel";

        <com.android.internal.util.AsyncChannel: int STATUS_SUCCESSFUL> = 0;

        <com.android.internal.util.AsyncChannel: int STATUS_SEND_UNSUCCESSFUL> = 2;

        <com.android.internal.util.AsyncChannel: int STATUS_REMOTE_DISCONNECTION> = 4;

        <com.android.internal.util.AsyncChannel: int STATUS_FULL_CONNECTION_REFUSED_ALREADY_CONNECTED> = 3;

        <com.android.internal.util.AsyncChannel: int STATUS_BINDING_UNSUCCESSFUL> = 1;

        <com.android.internal.util.AsyncChannel: boolean DBG> = 0;

        <com.android.internal.util.AsyncChannel: int CMD_TO_STRING_COUNT> = 5;

        <com.android.internal.util.AsyncChannel: int CMD_CHANNEL_HALF_CONNECTED> = 69632;

        <com.android.internal.util.AsyncChannel: int CMD_CHANNEL_FULL_CONNECTION> = 69633;

        <com.android.internal.util.AsyncChannel: int CMD_CHANNEL_FULLY_CONNECTED> = 69634;

        <com.android.internal.util.AsyncChannel: int CMD_CHANNEL_DISCONNECTED> = 69636;

        <com.android.internal.util.AsyncChannel: int CMD_CHANNEL_DISCONNECT> = 69635;

        <com.android.internal.util.AsyncChannel: int BASE> = 69632;

        $r0 = newarray (java.lang.String)[5];

        <com.android.internal.util.AsyncChannel: java.lang.String[] sCmdToString> = $r0;

        $r1 = <com.android.internal.util.AsyncChannel: java.lang.String[] sCmdToString>;

        $r1[0] = "CMD_CHANNEL_HALF_CONNECTED";

        $r2 = <com.android.internal.util.AsyncChannel: java.lang.String[] sCmdToString>;

        $r2[1] = "CMD_CHANNEL_FULL_CONNECTION";

        $r3 = <com.android.internal.util.AsyncChannel: java.lang.String[] sCmdToString>;

        $r3[2] = "CMD_CHANNEL_FULLY_CONNECTED";

        $r4 = <com.android.internal.util.AsyncChannel: java.lang.String[] sCmdToString>;

        $r4[3] = "CMD_CHANNEL_DISCONNECT";

        $r5 = <com.android.internal.util.AsyncChannel: java.lang.String[] sCmdToString>;

        $r5[4] = "CMD_CHANNEL_DISCONNECTED";

        return;
    }

    public void <init>()
    {
        com.android.internal.util.AsyncChannel r0;

        r0 := @this: com.android.internal.util.AsyncChannel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void access$000(com.android.internal.util.AsyncChannel, int)
    {
        com.android.internal.util.AsyncChannel r0;
        int i0;

        r0 := @parameter0: com.android.internal.util.AsyncChannel;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.internal.util.AsyncChannel: void replyHalfConnected(int)>(i0);

        return;
    }

    static android.os.Messenger access$502(com.android.internal.util.AsyncChannel, android.os.Messenger)
    {
        com.android.internal.util.AsyncChannel r0;
        android.os.Messenger r1;

        r0 := @parameter0: com.android.internal.util.AsyncChannel;

        r1 := @parameter1: android.os.Messenger;

        r0.<com.android.internal.util.AsyncChannel: android.os.Messenger mDstMessenger> = r1;

        return r1;
    }

    static void access$600(com.android.internal.util.AsyncChannel, int)
    {
        com.android.internal.util.AsyncChannel r0;
        int i0;

        r0 := @parameter0: com.android.internal.util.AsyncChannel;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.internal.util.AsyncChannel: void replyDisconnected(int)>(i0);

        return;
    }

    protected static java.lang.String cmdToString(int)
    {
        int i0, i1, $i2;
        java.lang.String[] $r0, $r1;
        java.lang.String $r2;

        i0 := @parameter0: int;

        i1 = i0 - 69632;

        if i1 < 0 goto label1;

        $r0 = <com.android.internal.util.AsyncChannel: java.lang.String[] sCmdToString>;

        $i2 = lengthof $r0;

        if i1 >= $i2 goto label1;

        $r1 = <com.android.internal.util.AsyncChannel: java.lang.String[] sCmdToString>;

        $r2 = $r1[i1];

        return $r2;

     label1:
        return null;
    }

    private static void log(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("AsyncChannel", r0);

        return;
    }

    private void replyDisconnected(int)
    {
        com.android.internal.util.AsyncChannel r0;
        int i0;
        android.os.Message r1;
        android.os.Handler $r2, $r4;
        android.os.Messenger $r3;

        r0 := @this: com.android.internal.util.AsyncChannel;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.internal.util.AsyncChannel: android.os.Handler mSrcHandler>;

        r1 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int)>(69636);

        r1.<android.os.Message: int arg1> = i0;

        r1.<android.os.Message: java.lang.Object obj> = r0;

        $r3 = r0.<com.android.internal.util.AsyncChannel: android.os.Messenger mDstMessenger>;

        r1.<android.os.Message: android.os.Messenger replyTo> = $r3;

        $r4 = r0.<com.android.internal.util.AsyncChannel: android.os.Handler mSrcHandler>;

        virtualinvoke $r4.<android.os.Handler: boolean sendMessage(android.os.Message)>(r1);

        return;
    }

    private void replyHalfConnected(int)
    {
        com.android.internal.util.AsyncChannel r0;
        int i0;
        android.os.Message r1;
        android.os.Handler $r3, $r6;
        android.os.Messenger $r4, $r8;
        com.android.internal.util.AsyncChannel$AsyncChannelConnection $r5;
        android.os.IBinder $r9;
        com.android.internal.util.AsyncChannel$DeathMonitor $r10, r12;
        android.os.RemoteException $r11;
        android.os.IBinder$DeathRecipient r13;

        r0 := @this: com.android.internal.util.AsyncChannel;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.internal.util.AsyncChannel: android.os.Handler mSrcHandler>;

        r1 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int)>(69632);

        r1.<android.os.Message: int arg1> = i0;

        r1.<android.os.Message: java.lang.Object obj> = r0;

        $r4 = r0.<com.android.internal.util.AsyncChannel: android.os.Messenger mDstMessenger>;

        r1.<android.os.Message: android.os.Messenger replyTo> = $r4;

        $r5 = r0.<com.android.internal.util.AsyncChannel: com.android.internal.util.AsyncChannel$AsyncChannelConnection mConnection>;

        if $r5 != null goto label2;

        r12 = new com.android.internal.util.AsyncChannel$DeathMonitor;

        specialinvoke r12.<com.android.internal.util.AsyncChannel$DeathMonitor: void <init>(com.android.internal.util.AsyncChannel)>(r0);

        r0.<com.android.internal.util.AsyncChannel: com.android.internal.util.AsyncChannel$DeathMonitor mDeathMonitor> = r12;

     label1:
        $r8 = r0.<com.android.internal.util.AsyncChannel: android.os.Messenger mDstMessenger>;

        $r9 = virtualinvoke $r8.<android.os.Messenger: android.os.IBinder getBinder()>();

        $r10 = r0.<com.android.internal.util.AsyncChannel: com.android.internal.util.AsyncChannel$DeathMonitor mDeathMonitor>;

        r13 = (android.os.IBinder$DeathRecipient) $r10;

        interfaceinvoke $r9.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r13, 0);

     label2:
        $r6 = r0.<com.android.internal.util.AsyncChannel: android.os.Handler mSrcHandler>;

        virtualinvoke $r6.<android.os.Handler: boolean sendMessage(android.os.Message)>(r1);

        return;

     label3:
        $r11 := @caughtexception;

        r0.<com.android.internal.util.AsyncChannel: com.android.internal.util.AsyncChannel$DeathMonitor mDeathMonitor> = null;

        r1.<android.os.Message: int arg1> = 1;

        goto label2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void connect(android.content.Context, android.os.Handler, android.os.Handler)
    {
        com.android.internal.util.AsyncChannel r0;
        android.content.Context r1;
        android.os.Handler r2, r3;
        android.os.Messenger $r4;

        r0 := @this: com.android.internal.util.AsyncChannel;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Handler;

        r3 := @parameter2: android.os.Handler;

        $r4 = new android.os.Messenger;

        specialinvoke $r4.<android.os.Messenger: void <init>(android.os.Handler)>(r3);

        virtualinvoke r0.<com.android.internal.util.AsyncChannel: void connect(android.content.Context,android.os.Handler,android.os.Messenger)>(r1, r2, $r4);

        return;
    }

    public void connect(android.content.Context, android.os.Handler, android.os.Messenger)
    {
        com.android.internal.util.AsyncChannel r0;
        android.content.Context r1;
        android.os.Handler r2;
        android.os.Messenger r3;

        r0 := @this: com.android.internal.util.AsyncChannel;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Handler;

        r3 := @parameter2: android.os.Messenger;

        virtualinvoke r0.<com.android.internal.util.AsyncChannel: void connected(android.content.Context,android.os.Handler,android.os.Messenger)>(r1, r2, r3);

        specialinvoke r0.<com.android.internal.util.AsyncChannel: void replyHalfConnected(int)>(0);

        return;
    }

    public void connect(android.content.Context, android.os.Handler, java.lang.Class)
    {
        com.android.internal.util.AsyncChannel r0;
        android.content.Context r1;
        android.os.Handler r2;
        java.lang.Class r3;
        java.lang.Package $r4;
        java.lang.String $r5, $r6;

        r0 := @this: com.android.internal.util.AsyncChannel;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Handler;

        r3 := @parameter2: java.lang.Class;

        $r4 = virtualinvoke r3.<java.lang.Class: java.lang.Package getPackage()>();

        $r5 = virtualinvoke $r4.<java.lang.Package: java.lang.String getName()>();

        $r6 = virtualinvoke r3.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r0.<com.android.internal.util.AsyncChannel: void connect(android.content.Context,android.os.Handler,java.lang.String,java.lang.String)>(r1, r2, $r5, $r6);

        return;
    }

    public void connect(android.content.Context, android.os.Handler, java.lang.String, java.lang.String)
    {
        com.android.internal.util.AsyncChannel r0;
        android.content.Context r1;
        android.os.Handler r2;
        java.lang.String r3, r4;
        java.lang.Thread $r5;
        com.android.internal.util.AsyncChannel$1ConnectAsync $r6;

        r0 := @this: com.android.internal.util.AsyncChannel;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Handler;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        $r5 = new java.lang.Thread;

        $r6 = new com.android.internal.util.AsyncChannel$1ConnectAsync;

        specialinvoke $r6.<com.android.internal.util.AsyncChannel$1ConnectAsync: void <init>(com.android.internal.util.AsyncChannel,android.content.Context,android.os.Handler,java.lang.String,java.lang.String)>(r0, r1, r2, r3, r4);

        specialinvoke $r5.<java.lang.Thread: void <init>(java.lang.Runnable)>($r6);

        virtualinvoke $r5.<java.lang.Thread: void start()>();

        return;
    }

    public void connect(com.android.internal.util.AsyncService, android.os.Messenger)
    {
        com.android.internal.util.AsyncChannel r0;
        com.android.internal.util.AsyncService r1;
        android.os.Messenger r2;
        android.os.Handler $r3;
        android.content.Context r4;

        r0 := @this: com.android.internal.util.AsyncChannel;

        r1 := @parameter0: com.android.internal.util.AsyncService;

        r2 := @parameter1: android.os.Messenger;

        $r3 = virtualinvoke r1.<com.android.internal.util.AsyncService: android.os.Handler getHandler()>();

        r4 = (android.content.Context) r1;

        virtualinvoke r0.<com.android.internal.util.AsyncChannel: void connect(android.content.Context,android.os.Handler,android.os.Messenger)>(r4, $r3, r2);

        return;
    }

    public int connectSrcHandlerToPackageSync(android.content.Context, android.os.Handler, java.lang.String, java.lang.String)
    {
        com.android.internal.util.AsyncChannel r0;
        android.content.Context r1;
        android.os.Handler r2;
        java.lang.String r3, r4;
        byte b0;
        android.content.Intent r5, r13;
        com.android.internal.util.AsyncChannel$AsyncChannelConnection $r10, r11;
        boolean $z0;
        android.os.Messenger r12;
        android.content.ServiceConnection r14;

        r0 := @this: com.android.internal.util.AsyncChannel;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Handler;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        b0 = 1;

        r11 = new com.android.internal.util.AsyncChannel$AsyncChannelConnection;

        specialinvoke r11.<com.android.internal.util.AsyncChannel$AsyncChannelConnection: void <init>(com.android.internal.util.AsyncChannel)>(r0);

        r0.<com.android.internal.util.AsyncChannel: com.android.internal.util.AsyncChannel$AsyncChannelConnection mConnection> = r11;

        r0.<com.android.internal.util.AsyncChannel: android.content.Context mSrcContext> = r1;

        r0.<com.android.internal.util.AsyncChannel: android.os.Handler mSrcHandler> = r2;

        r12 = new android.os.Messenger;

        specialinvoke r12.<android.os.Messenger: void <init>(android.os.Handler)>(r2);

        r0.<com.android.internal.util.AsyncChannel: android.os.Messenger mSrcMessenger> = r12;

        r0.<com.android.internal.util.AsyncChannel: android.os.Messenger mDstMessenger> = null;

        r13 = new android.content.Intent;

        specialinvoke r13.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.MAIN");

        r5 = r13;

        virtualinvoke r5.<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>(r3, r4);

        $r10 = r0.<com.android.internal.util.AsyncChannel: com.android.internal.util.AsyncChannel$AsyncChannelConnection mConnection>;

        r14 = (android.content.ServiceConnection) $r10;

        $z0 = virtualinvoke r1.<android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>(r5, r14, 1);

        if $z0 == 0 goto label1;

        b0 = 0;

     label1:
        return b0;
    }

    public int connectSync(android.content.Context, android.os.Handler, android.os.Handler)
    {
        com.android.internal.util.AsyncChannel r0;
        android.content.Context r1;
        android.os.Handler r2, r3;
        android.os.Messenger $r4;
        int $i0;

        r0 := @this: com.android.internal.util.AsyncChannel;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Handler;

        r3 := @parameter2: android.os.Handler;

        $r4 = new android.os.Messenger;

        specialinvoke $r4.<android.os.Messenger: void <init>(android.os.Handler)>(r3);

        $i0 = virtualinvoke r0.<com.android.internal.util.AsyncChannel: int connectSync(android.content.Context,android.os.Handler,android.os.Messenger)>(r1, r2, $r4);

        return $i0;
    }

    public int connectSync(android.content.Context, android.os.Handler, android.os.Messenger)
    {
        com.android.internal.util.AsyncChannel r0;
        android.content.Context r1;
        android.os.Handler r2;
        android.os.Messenger r3;

        r0 := @this: com.android.internal.util.AsyncChannel;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Handler;

        r3 := @parameter2: android.os.Messenger;

        virtualinvoke r0.<com.android.internal.util.AsyncChannel: void connected(android.content.Context,android.os.Handler,android.os.Messenger)>(r1, r2, r3);

        return 0;
    }

    public void connected(android.content.Context, android.os.Handler, android.os.Messenger)
    {
        com.android.internal.util.AsyncChannel r0;
        android.content.Context r1;
        android.os.Handler r2, $r5;
        android.os.Messenger r3, $r4;

        r0 := @this: com.android.internal.util.AsyncChannel;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Handler;

        r3 := @parameter2: android.os.Messenger;

        r0.<com.android.internal.util.AsyncChannel: android.content.Context mSrcContext> = r1;

        r0.<com.android.internal.util.AsyncChannel: android.os.Handler mSrcHandler> = r2;

        $r4 = new android.os.Messenger;

        $r5 = r0.<com.android.internal.util.AsyncChannel: android.os.Handler mSrcHandler>;

        specialinvoke $r4.<android.os.Messenger: void <init>(android.os.Handler)>($r5);

        r0.<com.android.internal.util.AsyncChannel: android.os.Messenger mSrcMessenger> = $r4;

        r0.<com.android.internal.util.AsyncChannel: android.os.Messenger mDstMessenger> = r3;

        return;
    }

    public void disconnect()
    {
        com.android.internal.util.AsyncChannel r0;
        android.os.Message r2;
        com.android.internal.util.AsyncChannel$AsyncChannelConnection $r3, $r7, $r13;
        android.os.Messenger $r4, $r5, $r8, $r10;
        android.os.Handler $r6;
        com.android.internal.util.AsyncChannel$DeathMonitor $r9, $r12;
        android.os.IBinder $r11;
        android.content.Context $r14, $r16;
        java.lang.Exception $r15;
        android.content.ServiceConnection r17;
        android.os.IBinder$DeathRecipient r18;

        r0 := @this: com.android.internal.util.AsyncChannel;

        $r3 = r0.<com.android.internal.util.AsyncChannel: com.android.internal.util.AsyncChannel$AsyncChannelConnection mConnection>;

        if $r3 == null goto label1;

        $r14 = r0.<com.android.internal.util.AsyncChannel: android.content.Context mSrcContext>;

        if $r14 == null goto label1;

        $r16 = r0.<com.android.internal.util.AsyncChannel: android.content.Context mSrcContext>;

        $r13 = r0.<com.android.internal.util.AsyncChannel: com.android.internal.util.AsyncChannel$AsyncChannelConnection mConnection>;

        r17 = (android.content.ServiceConnection) $r13;

        virtualinvoke $r16.<android.content.Context: void unbindService(android.content.ServiceConnection)>(r17);

     label1:
        r2 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r2.<android.os.Message: int what> = 69636;

        $r4 = r0.<com.android.internal.util.AsyncChannel: android.os.Messenger mSrcMessenger>;

        r2.<android.os.Message: android.os.Messenger replyTo> = $r4;

        $r5 = r0.<com.android.internal.util.AsyncChannel: android.os.Messenger mDstMessenger>;

        virtualinvoke $r5.<android.os.Messenger: void send(android.os.Message)>(r2);

     label2:
        $r6 = r0.<com.android.internal.util.AsyncChannel: android.os.Handler mSrcHandler>;

        if $r6 == null goto label3;

        specialinvoke r0.<com.android.internal.util.AsyncChannel: void replyDisconnected(int)>(0);

     label3:
        $r7 = r0.<com.android.internal.util.AsyncChannel: com.android.internal.util.AsyncChannel$AsyncChannelConnection mConnection>;

        if $r7 != null goto label4;

        $r8 = r0.<com.android.internal.util.AsyncChannel: android.os.Messenger mDstMessenger>;

        if $r8 == null goto label4;

        $r9 = r0.<com.android.internal.util.AsyncChannel: com.android.internal.util.AsyncChannel$DeathMonitor mDeathMonitor>;

        if $r9 == null goto label4;

        $r10 = r0.<com.android.internal.util.AsyncChannel: android.os.Messenger mDstMessenger>;

        $r11 = virtualinvoke $r10.<android.os.Messenger: android.os.IBinder getBinder()>();

        $r12 = r0.<com.android.internal.util.AsyncChannel: com.android.internal.util.AsyncChannel$DeathMonitor mDeathMonitor>;

        r18 = (android.os.IBinder$DeathRecipient) $r12;

        interfaceinvoke $r11.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r18, 0);

     label4:
        return;

     label5:
        $r15 := @caughtexception;

        goto label2;

        catch java.lang.Exception from label1 to label2 with label5;
    }

    public void disconnected()
    {
        com.android.internal.util.AsyncChannel r0;

        r0 := @this: com.android.internal.util.AsyncChannel;

        r0.<com.android.internal.util.AsyncChannel: android.content.Context mSrcContext> = null;

        r0.<com.android.internal.util.AsyncChannel: android.os.Handler mSrcHandler> = null;

        r0.<com.android.internal.util.AsyncChannel: android.os.Messenger mSrcMessenger> = null;

        r0.<com.android.internal.util.AsyncChannel: android.os.Messenger mDstMessenger> = null;

        r0.<com.android.internal.util.AsyncChannel: com.android.internal.util.AsyncChannel$DeathMonitor mDeathMonitor> = null;

        r0.<com.android.internal.util.AsyncChannel: com.android.internal.util.AsyncChannel$AsyncChannelConnection mConnection> = null;

        return;
    }

    public int fullyConnectSync(android.content.Context, android.os.Handler, android.os.Handler)
    {
        com.android.internal.util.AsyncChannel r0;
        android.content.Context r1;
        android.os.Handler r2, r3;
        int i0;
        android.os.Message $r4;

        r0 := @this: com.android.internal.util.AsyncChannel;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Handler;

        r3 := @parameter2: android.os.Handler;

        i0 = virtualinvoke r0.<com.android.internal.util.AsyncChannel: int connectSync(android.content.Context,android.os.Handler,android.os.Handler)>(r1, r2, r3);

        if i0 != 0 goto label1;

        $r4 = virtualinvoke r0.<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(int)>(69633);

        i0 = $r4.<android.os.Message: int arg1>;

     label1:
        return i0;
    }

    public void replyToMessage(android.os.Message, int)
    {
        com.android.internal.util.AsyncChannel r0;
        android.os.Message r1, r2;
        int i0;

        r0 := @this: com.android.internal.util.AsyncChannel;

        r1 := @parameter0: android.os.Message;

        i0 := @parameter1: int;

        r2 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r2.<android.os.Message: int what> = i0;

        virtualinvoke r0.<com.android.internal.util.AsyncChannel: void replyToMessage(android.os.Message,android.os.Message)>(r1, r2);

        return;
    }

    public void replyToMessage(android.os.Message, int, int)
    {
        com.android.internal.util.AsyncChannel r0;
        android.os.Message r1, r2;
        int i0, i1;

        r0 := @this: com.android.internal.util.AsyncChannel;

        r1 := @parameter0: android.os.Message;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r2.<android.os.Message: int what> = i0;

        r2.<android.os.Message: int arg1> = i1;

        virtualinvoke r0.<com.android.internal.util.AsyncChannel: void replyToMessage(android.os.Message,android.os.Message)>(r1, r2);

        return;
    }

    public void replyToMessage(android.os.Message, int, int, int)
    {
        com.android.internal.util.AsyncChannel r0;
        android.os.Message r1, r2;
        int i0, i1, i2;

        r0 := @this: com.android.internal.util.AsyncChannel;

        r1 := @parameter0: android.os.Message;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r2.<android.os.Message: int what> = i0;

        r2.<android.os.Message: int arg1> = i1;

        r2.<android.os.Message: int arg2> = i2;

        virtualinvoke r0.<com.android.internal.util.AsyncChannel: void replyToMessage(android.os.Message,android.os.Message)>(r1, r2);

        return;
    }

    public void replyToMessage(android.os.Message, int, int, int, java.lang.Object)
    {
        com.android.internal.util.AsyncChannel r0;
        android.os.Message r1, r3;
        int i0, i1, i2;
        java.lang.Object r2;

        r0 := @this: com.android.internal.util.AsyncChannel;

        r1 := @parameter0: android.os.Message;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: java.lang.Object;

        r3 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r3.<android.os.Message: int what> = i0;

        r3.<android.os.Message: int arg1> = i1;

        r3.<android.os.Message: int arg2> = i2;

        r3.<android.os.Message: java.lang.Object obj> = r2;

        virtualinvoke r0.<com.android.internal.util.AsyncChannel: void replyToMessage(android.os.Message,android.os.Message)>(r1, r3);

        return;
    }

    public void replyToMessage(android.os.Message, int, java.lang.Object)
    {
        com.android.internal.util.AsyncChannel r0;
        android.os.Message r1, r3;
        int i0;
        java.lang.Object r2;

        r0 := @this: com.android.internal.util.AsyncChannel;

        r1 := @parameter0: android.os.Message;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        r3 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r3.<android.os.Message: int what> = i0;

        r3.<android.os.Message: java.lang.Object obj> = r2;

        virtualinvoke r0.<com.android.internal.util.AsyncChannel: void replyToMessage(android.os.Message,android.os.Message)>(r1, r3);

        return;
    }

    public void replyToMessage(android.os.Message, android.os.Message)
    {
        com.android.internal.util.AsyncChannel r0;
        android.os.Message r1, r2;
        android.os.RemoteException r3, $r6;
        android.os.Messenger $r4, $r5;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: com.android.internal.util.AsyncChannel;

        r1 := @parameter0: android.os.Message;

        r2 := @parameter1: android.os.Message;

     label1:
        $r4 = r0.<com.android.internal.util.AsyncChannel: android.os.Messenger mSrcMessenger>;

        r2.<android.os.Message: android.os.Messenger replyTo> = $r4;

        $r5 = r1.<android.os.Message: android.os.Messenger replyTo>;

        virtualinvoke $r5.<android.os.Messenger: void send(android.os.Message)>(r2);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TODO: handle replyToMessage RemoteException");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.util.AsyncChannel: void log(java.lang.String)>($r10);

        virtualinvoke r3.<android.os.RemoteException: void printStackTrace()>();

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void sendMessage(int)
    {
        com.android.internal.util.AsyncChannel r0;
        int i0;
        android.os.Message r1;

        r0 := @this: com.android.internal.util.AsyncChannel;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r1.<android.os.Message: int what> = i0;

        virtualinvoke r0.<com.android.internal.util.AsyncChannel: void sendMessage(android.os.Message)>(r1);

        return;
    }

    public void sendMessage(int, int)
    {
        com.android.internal.util.AsyncChannel r0;
        int i0, i1;
        android.os.Message r1;

        r0 := @this: com.android.internal.util.AsyncChannel;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r1.<android.os.Message: int what> = i0;

        r1.<android.os.Message: int arg1> = i1;

        virtualinvoke r0.<com.android.internal.util.AsyncChannel: void sendMessage(android.os.Message)>(r1);

        return;
    }

    public void sendMessage(int, int, int)
    {
        com.android.internal.util.AsyncChannel r0;
        int i0, i1, i2;
        android.os.Message r1;

        r0 := @this: com.android.internal.util.AsyncChannel;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r1.<android.os.Message: int what> = i0;

        r1.<android.os.Message: int arg1> = i1;

        r1.<android.os.Message: int arg2> = i2;

        virtualinvoke r0.<com.android.internal.util.AsyncChannel: void sendMessage(android.os.Message)>(r1);

        return;
    }

    public void sendMessage(int, int, int, java.lang.Object)
    {
        com.android.internal.util.AsyncChannel r0;
        int i0, i1, i2;
        java.lang.Object r1;
        android.os.Message r2;

        r0 := @this: com.android.internal.util.AsyncChannel;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        r2 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r2.<android.os.Message: int what> = i0;

        r2.<android.os.Message: int arg1> = i1;

        r2.<android.os.Message: int arg2> = i2;

        r2.<android.os.Message: java.lang.Object obj> = r1;

        virtualinvoke r0.<com.android.internal.util.AsyncChannel: void sendMessage(android.os.Message)>(r2);

        return;
    }

    public void sendMessage(int, java.lang.Object)
    {
        com.android.internal.util.AsyncChannel r0;
        int i0;
        java.lang.Object r1;
        android.os.Message r2;

        r0 := @this: com.android.internal.util.AsyncChannel;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        r2 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r2.<android.os.Message: int what> = i0;

        r2.<android.os.Message: java.lang.Object obj> = r1;

        virtualinvoke r0.<com.android.internal.util.AsyncChannel: void sendMessage(android.os.Message)>(r2);

        return;
    }

    public void sendMessage(android.os.Message)
    {
        com.android.internal.util.AsyncChannel r0;
        android.os.Message r1;
        android.os.Messenger $r3, $r4;
        android.os.RemoteException $r5;

        r0 := @this: com.android.internal.util.AsyncChannel;

        r1 := @parameter0: android.os.Message;

        $r3 = r0.<com.android.internal.util.AsyncChannel: android.os.Messenger mSrcMessenger>;

        r1.<android.os.Message: android.os.Messenger replyTo> = $r3;

     label1:
        $r4 = r0.<com.android.internal.util.AsyncChannel: android.os.Messenger mDstMessenger>;

        virtualinvoke $r4.<android.os.Messenger: void send(android.os.Message)>(r1);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        specialinvoke r0.<com.android.internal.util.AsyncChannel: void replyDisconnected(int)>(2);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.os.Message sendMessageSynchronously(int)
    {
        com.android.internal.util.AsyncChannel r0;
        int i0;
        android.os.Message r1, $r2;

        r0 := @this: com.android.internal.util.AsyncChannel;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r1.<android.os.Message: int what> = i0;

        $r2 = virtualinvoke r0.<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(android.os.Message)>(r1);

        return $r2;
    }

    public android.os.Message sendMessageSynchronously(int, int)
    {
        com.android.internal.util.AsyncChannel r0;
        int i0, i1;
        android.os.Message r1, $r2;

        r0 := @this: com.android.internal.util.AsyncChannel;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r1.<android.os.Message: int what> = i0;

        r1.<android.os.Message: int arg1> = i1;

        $r2 = virtualinvoke r0.<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(android.os.Message)>(r1);

        return $r2;
    }

    public android.os.Message sendMessageSynchronously(int, int, int)
    {
        com.android.internal.util.AsyncChannel r0;
        int i0, i1, i2;
        android.os.Message r1, $r2;

        r0 := @this: com.android.internal.util.AsyncChannel;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r1.<android.os.Message: int what> = i0;

        r1.<android.os.Message: int arg1> = i1;

        r1.<android.os.Message: int arg2> = i2;

        $r2 = virtualinvoke r0.<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(android.os.Message)>(r1);

        return $r2;
    }

    public android.os.Message sendMessageSynchronously(int, int, int, java.lang.Object)
    {
        com.android.internal.util.AsyncChannel r0;
        int i0, i1, i2;
        java.lang.Object r1;
        android.os.Message r2, $r3;

        r0 := @this: com.android.internal.util.AsyncChannel;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        r2 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r2.<android.os.Message: int what> = i0;

        r2.<android.os.Message: int arg1> = i1;

        r2.<android.os.Message: int arg2> = i2;

        r2.<android.os.Message: java.lang.Object obj> = r1;

        $r3 = virtualinvoke r0.<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(android.os.Message)>(r2);

        return $r3;
    }

    public android.os.Message sendMessageSynchronously(int, java.lang.Object)
    {
        com.android.internal.util.AsyncChannel r0;
        int i0;
        java.lang.Object r1;
        android.os.Message r2, $r3;

        r0 := @this: com.android.internal.util.AsyncChannel;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        r2 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r2.<android.os.Message: int what> = i0;

        r2.<android.os.Message: java.lang.Object obj> = r1;

        $r3 = virtualinvoke r0.<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(android.os.Message)>(r2);

        return $r3;
    }

    public android.os.Message sendMessageSynchronously(android.os.Message)
    {
        com.android.internal.util.AsyncChannel r0;
        android.os.Message r1, $r3;
        android.os.Messenger $r2;

        r0 := @this: com.android.internal.util.AsyncChannel;

        r1 := @parameter0: android.os.Message;

        $r2 = r0.<com.android.internal.util.AsyncChannel: android.os.Messenger mDstMessenger>;

        $r3 = staticinvoke <com.android.internal.util.AsyncChannel$SyncMessenger: android.os.Message access$100(android.os.Messenger,android.os.Message)>($r2, r1);

        return $r3;
    }
}
