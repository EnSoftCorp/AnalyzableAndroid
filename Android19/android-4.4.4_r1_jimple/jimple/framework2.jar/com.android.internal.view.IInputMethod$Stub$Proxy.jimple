class com.android.internal.view.IInputMethod$Stub$Proxy extends java.lang.Object implements com.android.internal.view.IInputMethod
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        com.android.internal.view.IInputMethod$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: com.android.internal.view.IInputMethod$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.view.IInputMethod$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        com.android.internal.view.IInputMethod$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: com.android.internal.view.IInputMethod$Stub$Proxy;

        $r1 = r0.<com.android.internal.view.IInputMethod$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void attachToken(android.os.IBinder) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethod$Stub$Proxy r0;
        android.os.IBinder r1, $r4;
        android.os.Parcel r2;
        java.lang.Throwable r3, $r5;

        r0 := @this: com.android.internal.view.IInputMethod$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethod");

        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r1);

        $r4 = r0.<com.android.internal.view.IInputMethod$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r2, null, 1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void bindInput(android.view.inputmethod.InputBinding) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethod$Stub$Proxy r0;
        android.view.inputmethod.InputBinding r1;
        android.os.Parcel r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.view.IInputMethod$Stub$Proxy;

        r1 := @parameter0: android.view.inputmethod.InputBinding;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethod");

     label2:
        if r1 == null goto label6;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.view.inputmethod.InputBinding: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label4:
        $r4 = r0.<com.android.internal.view.IInputMethod$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r2, null, 1);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label7:
        goto label4;

     label8:
        $r5 := @caughtexception;

        r3 = $r5;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void changeInputMethodSubtype(android.view.inputmethod.InputMethodSubtype) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethod$Stub$Proxy r0;
        android.view.inputmethod.InputMethodSubtype r1;
        android.os.Parcel r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.view.IInputMethod$Stub$Proxy;

        r1 := @parameter0: android.view.inputmethod.InputMethodSubtype;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethod");

     label2:
        if r1 == null goto label6;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.view.inputmethod.InputMethodSubtype: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label4:
        $r4 = r0.<com.android.internal.view.IInputMethod$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r2, null, 1);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label7:
        goto label4;

     label8:
        $r5 := @caughtexception;

        r3 = $r5;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void createSession(android.view.InputChannel, com.android.internal.view.IInputSessionCallback) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethod$Stub$Proxy r0;
        android.view.InputChannel r1;
        com.android.internal.view.IInputSessionCallback r2;
        android.os.Parcel r3;
        java.lang.Throwable r4, $r7;
        android.os.IBinder r5, $r6;

        r0 := @this: com.android.internal.view.IInputMethod$Stub$Proxy;

        r1 := @parameter0: android.view.InputChannel;

        r2 := @parameter1: com.android.internal.view.IInputSessionCallback;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethod");

     label02:
        if r1 == null goto label08;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.view.InputChannel: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        r5 = null;

        if r2 == null goto label06;

     label05:
        r5 = interfaceinvoke r2.<com.android.internal.view.IInputSessionCallback: android.os.IBinder asBinder()>();

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r5);

        $r6 = r0.<com.android.internal.view.IInputMethod$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r3, null, 1);

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label08:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label09:
        goto label04;

     label10:
        $r7 := @caughtexception;

        r4 = $r7;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        com.android.internal.view.IInputMethod$Stub$Proxy r0;

        r0 := @this: com.android.internal.view.IInputMethod$Stub$Proxy;

        return "com.android.internal.view.IInputMethod";
    }

    public void hideSoftInput(int, android.os.ResultReceiver) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethod$Stub$Proxy r0;
        int i0;
        android.os.ResultReceiver r1;
        android.os.Parcel r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.view.IInputMethod$Stub$Proxy;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.ResultReceiver;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethod");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if r1 == null goto label6;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.ResultReceiver: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label4:
        $r4 = r0.<com.android.internal.view.IInputMethod$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r2, null, 1);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label7:
        goto label4;

     label8:
        $r5 := @caughtexception;

        r3 = $r5;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void restartInput(com.android.internal.view.IInputContext, android.view.inputmethod.EditorInfo) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethod$Stub$Proxy r0;
        com.android.internal.view.IInputContext r1;
        android.view.inputmethod.EditorInfo r2;
        android.os.Parcel r3;
        java.lang.Throwable r4, $r7;
        android.os.IBinder r5, $r6;

        r0 := @this: com.android.internal.view.IInputMethod$Stub$Proxy;

        r1 := @parameter0: com.android.internal.view.IInputContext;

        r2 := @parameter1: android.view.inputmethod.EditorInfo;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethod");

     label02:
        r5 = null;

        if r1 == null goto label04;

     label03:
        r5 = interfaceinvoke r1.<com.android.internal.view.IInputContext: android.os.IBinder asBinder()>();

     label04:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r5);

     label05:
        if r2 == null goto label09;

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.view.inputmethod.EditorInfo: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label07:
        $r6 = r0.<com.android.internal.view.IInputMethod$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r3, null, 1);

     label08:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label09:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        goto label07;

     label11:
        $r7 := @caughtexception;

        r4 = $r7;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    public void revokeSession(com.android.internal.view.IInputMethodSession) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethod$Stub$Proxy r0;
        com.android.internal.view.IInputMethodSession r1;
        android.os.Parcel r2;
        java.lang.Throwable r3, $r6;
        android.os.IBinder r4, $r5;

        r0 := @this: com.android.internal.view.IInputMethod$Stub$Proxy;

        r1 := @parameter0: com.android.internal.view.IInputMethodSession;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethod");

     label2:
        r4 = null;

        if r1 == null goto label4;

     label3:
        r4 = interfaceinvoke r1.<com.android.internal.view.IInputMethodSession: android.os.IBinder asBinder()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r4);

        $r5 = r0.<com.android.internal.view.IInputMethod$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r2, null, 1);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label6:
        $r6 := @caughtexception;

        r3 = $r6;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public void setSessionEnabled(com.android.internal.view.IInputMethodSession, boolean) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethod$Stub$Proxy r0;
        com.android.internal.view.IInputMethodSession r1;
        boolean z0;
        byte b0;
        android.os.Parcel r2;
        java.lang.Throwable r3, $r6;
        android.os.IBinder r4, $r5;

        r0 := @this: com.android.internal.view.IInputMethod$Stub$Proxy;

        r1 := @parameter0: com.android.internal.view.IInputMethodSession;

        z0 := @parameter1: boolean;

        b0 = 1;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethod");

     label2:
        r4 = null;

        if r1 == null goto label4;

     label3:
        r4 = interfaceinvoke r1.<com.android.internal.view.IInputMethodSession: android.os.IBinder asBinder()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r4);

     label5:
        if z0 == 0 goto label8;

     label6:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b0);

        $r5 = r0.<com.android.internal.view.IInputMethod$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r2, null, 1);

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label8:
        b0 = 0;

        goto label6;

     label9:
        $r6 := @caughtexception;

        r3 = $r6;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label4 to label5 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public void showSoftInput(int, android.os.ResultReceiver) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethod$Stub$Proxy r0;
        int i0;
        android.os.ResultReceiver r1;
        android.os.Parcel r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.view.IInputMethod$Stub$Proxy;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.ResultReceiver;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethod");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

     label2:
        if r1 == null goto label6;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.ResultReceiver: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label4:
        $r4 = r0.<com.android.internal.view.IInputMethod$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r2, null, 1);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label7:
        goto label4;

     label8:
        $r5 := @caughtexception;

        r3 = $r5;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void startInput(com.android.internal.view.IInputContext, android.view.inputmethod.EditorInfo) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethod$Stub$Proxy r0;
        com.android.internal.view.IInputContext r1;
        android.view.inputmethod.EditorInfo r2;
        android.os.Parcel r3;
        java.lang.Throwable r4, $r7;
        android.os.IBinder r5, $r6;

        r0 := @this: com.android.internal.view.IInputMethod$Stub$Proxy;

        r1 := @parameter0: com.android.internal.view.IInputContext;

        r2 := @parameter1: android.view.inputmethod.EditorInfo;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethod");

     label02:
        r5 = null;

        if r1 == null goto label04;

     label03:
        r5 = interfaceinvoke r1.<com.android.internal.view.IInputContext: android.os.IBinder asBinder()>();

     label04:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r5);

     label05:
        if r2 == null goto label09;

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.view.inputmethod.EditorInfo: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label07:
        $r6 = r0.<com.android.internal.view.IInputMethod$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r3, null, 1);

     label08:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label09:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        goto label07;

     label11:
        $r7 := @caughtexception;

        r4 = $r7;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    public void unbindInput() throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethod$Stub$Proxy r0;
        android.os.Parcel r1;
        java.lang.Throwable r2, $r4;
        android.os.IBinder $r3;

        r0 := @this: com.android.internal.view.IInputMethod$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethod");

        $r3 = r0.<com.android.internal.view.IInputMethod$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, null, 1);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
