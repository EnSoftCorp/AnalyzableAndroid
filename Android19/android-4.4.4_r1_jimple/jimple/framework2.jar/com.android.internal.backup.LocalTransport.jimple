public class com.android.internal.backup.LocalTransport extends com.android.internal.backup.IBackupTransport$Stub
{
    private static final boolean DEBUG;
    private static final long RESTORE_TOKEN;
    private static final java.lang.String TAG;
    private static final java.lang.String TRANSPORT_DESTINATION_STRING;
    private static final java.lang.String TRANSPORT_DIR_NAME;
    private android.content.Context mContext;
    private java.io.File mDataDir;
    private int mRestorePackage;
    private android.content.pm.PackageInfo[] mRestorePackages;

    public void <init>(android.content.Context)
    {
        com.android.internal.backup.LocalTransport r0;
        android.content.Context r1;
        java.io.File $r2, $r3, $r4, $r5, $r8;
        boolean $z1;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.String $r10;

        r0 := @this: com.android.internal.backup.LocalTransport;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.internal.backup.IBackupTransport$Stub: void <init>()>();

        $r2 = new java.io.File;

        $r3 = staticinvoke <android.os.Environment: java.io.File getDownloadCacheDirectory()>();

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, "backup");

        r0.<com.android.internal.backup.LocalTransport: java.io.File mDataDir> = $r2;

        r0.<com.android.internal.backup.LocalTransport: android.content.pm.PackageInfo[] mRestorePackages> = null;

        r0.<com.android.internal.backup.LocalTransport: int mRestorePackage> = -1;

        r0.<com.android.internal.backup.LocalTransport: android.content.Context mContext> = r1;

        $r4 = r0.<com.android.internal.backup.LocalTransport: java.io.File mDataDir>;

        virtualinvoke $r4.<java.io.File: boolean mkdirs()>();

        $r5 = r0.<com.android.internal.backup.LocalTransport: java.io.File mDataDir>;

        $z1 = staticinvoke <android.os.SELinux: boolean restorecon(java.io.File)>($r5);

        if $z1 != 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELinux restorecon failed for ");

        $r8 = r0.<com.android.internal.backup.LocalTransport: java.io.File mDataDir>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("LocalTransport", $r10);

     label1:
        return;
    }

    private void deleteContents(java.io.File)
    {
        com.android.internal.backup.LocalTransport r0;
        java.io.File r1, r3;
        java.io.File[] r2;
        int i0, i1;
        boolean $z0;

        r0 := @this: com.android.internal.backup.LocalTransport;

        r1 := @parameter0: java.io.File;

        r2 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles()>();

        if r2 == null goto label3;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = r2[i1];

        $z0 = virtualinvoke r3.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label2;

        specialinvoke r0.<com.android.internal.backup.LocalTransport: void deleteContents(java.io.File)>(r3);

     label2:
        virtualinvoke r3.<java.io.File: boolean delete()>();

        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public int clearBackupData(android.content.pm.PackageInfo)
    {
        com.android.internal.backup.LocalTransport r0;
        android.content.pm.PackageInfo r1;
        java.io.File r2, $r9, $r11, $r12;
        java.io.File[] r3;
        int i0, i1;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r6, $r8, $r10;

        r0 := @this: com.android.internal.backup.LocalTransport;

        r1 := @parameter0: android.content.pm.PackageInfo;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("clearBackupData() pkg=");

        $r6 = r1.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LocalTransport", $r8);

        $r9 = new java.io.File;

        $r11 = r0.<com.android.internal.backup.LocalTransport: java.io.File mDataDir>;

        $r10 = r1.<android.content.pm.PackageInfo: java.lang.String packageName>;

        specialinvoke $r9.<java.io.File: void <init>(java.io.File,java.lang.String)>($r11, $r10);

        r2 = $r9;

        r3 = virtualinvoke r2.<java.io.File: java.io.File[] listFiles()>();

        if r3 == null goto label3;

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r12 = r3[i1];

        virtualinvoke $r12.<java.io.File: boolean delete()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        virtualinvoke r2.<java.io.File: boolean delete()>();

     label3:
        return 0;
    }

    public android.content.Intent configurationIntent()
    {
        com.android.internal.backup.LocalTransport r0;

        r0 := @this: com.android.internal.backup.LocalTransport;

        return null;
    }

    public java.lang.String currentDestinationString()
    {
        com.android.internal.backup.LocalTransport r0;

        r0 := @this: com.android.internal.backup.LocalTransport;

        return "Backing up to debug-only private cache";
    }

    public int finishBackup()
    {
        com.android.internal.backup.LocalTransport r0;

        r0 := @this: com.android.internal.backup.LocalTransport;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LocalTransport", "finishBackup()");

        return 0;
    }

    public void finishRestore()
    {
        com.android.internal.backup.LocalTransport r0;

        r0 := @this: com.android.internal.backup.LocalTransport;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LocalTransport", "finishRestore()");

        return;
    }

    public android.app.backup.RestoreSet[] getAvailableRestoreSets() throws android.os.RemoteException
    {
        com.android.internal.backup.LocalTransport r0;
        android.app.backup.RestoreSet[] $r1;
        android.app.backup.RestoreSet $r2;

        r0 := @this: com.android.internal.backup.LocalTransport;

        $r1 = newarray (android.app.backup.RestoreSet)[1];

        $r2 = new android.app.backup.RestoreSet;

        specialinvoke $r2.<android.app.backup.RestoreSet: void <init>(java.lang.String,java.lang.String,long)>("Local disk image", "flash", 1L);

        $r1[0] = $r2;

        return $r1;
    }

    public long getCurrentRestoreSet()
    {
        com.android.internal.backup.LocalTransport r0;

        r0 := @this: com.android.internal.backup.LocalTransport;

        return 1L;
    }

    public int getRestoreData(android.os.ParcelFileDescriptor)
    {
        com.android.internal.backup.LocalTransport r0;
        android.os.ParcelFileDescriptor r1;
        java.io.File r2, r6, $r12, $r16;
        java.io.File[] r3;
        android.app.backup.BackupDataOutput r4, $r21;
        java.io.IOException r5, $r41;
        int i0, i1, i2, $i3, $i4, $i5;
        java.io.FileInputStream r7, $r25;
        java.lang.Throwable r8, $r40;
        byte[] r9, $r28;
        android.content.pm.PackageInfo[] $r10, $r13;
        java.lang.String r11, $r14, $r23, $r24, $r27, $r33, $r39;
        android.content.pm.PackageInfo $r15;
        java.lang.StringBuilder $r17, $r18, $r19, $r20, $r26, $r29, $r30, $r31, $r32, $r34, $r35, $r36;
        java.io.FileDescriptor $r22;
        long $l8;
        java.lang.IllegalStateException $r37, $r38;

        r0 := @this: com.android.internal.backup.LocalTransport;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        $r10 = r0.<com.android.internal.backup.LocalTransport: android.content.pm.PackageInfo[] mRestorePackages>;

        if $r10 != null goto label01;

        $r37 = new java.lang.IllegalStateException;

        specialinvoke $r37.<java.lang.IllegalStateException: void <init>(java.lang.String)>("startRestore not called");

        throw $r37;

     label01:
        $i3 = r0.<com.android.internal.backup.LocalTransport: int mRestorePackage>;

        if $i3 >= 0 goto label02;

        $r38 = new java.lang.IllegalStateException;

        specialinvoke $r38.<java.lang.IllegalStateException: void <init>(java.lang.String)>("nextRestorePackage not called");

        throw $r38;

     label02:
        $r12 = new java.io.File;

        $r16 = r0.<com.android.internal.backup.LocalTransport: java.io.File mDataDir>;

        $r13 = r0.<com.android.internal.backup.LocalTransport: android.content.pm.PackageInfo[] mRestorePackages>;

        $i4 = r0.<com.android.internal.backup.LocalTransport: int mRestorePackage>;

        $r15 = $r13[$i4];

        $r14 = $r15.<android.content.pm.PackageInfo: java.lang.String packageName>;

        specialinvoke $r12.<java.io.File: void <init>(java.io.File,java.lang.String)>($r16, $r14);

        r2 = $r12;

        r3 = virtualinvoke r2.<java.io.File: java.io.File[] listFiles()>();

        if r3 != null goto label03;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error listing directory: ");

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r39 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("LocalTransport", $r39);

        return 1;

     label03:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  getRestoreData() found ");

        $i5 = lengthof r3;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" key files");

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LocalTransport", $r23);

        $r21 = new android.app.backup.BackupDataOutput;

        $r22 = virtualinvoke r1.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke $r21.<android.app.backup.BackupDataOutput: void <init>(java.io.FileDescriptor)>($r22);

        r4 = $r21;

     label04:
        i0 = lengthof r3;

     label05:
        i1 = 0;

     label06:
        if i1 >= i0 goto label14;

     label07:
        r6 = r3[i1];

        $r25 = new java.io.FileInputStream;

        specialinvoke $r25.<java.io.FileInputStream: void <init>(java.io.File)>(r6);

        r7 = $r25;

     label08:
        $l8 = virtualinvoke r6.<java.io.File: long length()>();

        i2 = (int) $l8;

        r9 = newarray (byte)[i2];

        virtualinvoke r7.<java.io.FileInputStream: int read(byte[])>(r9);

        $r24 = new java.lang.String;

        $r27 = virtualinvoke r6.<java.io.File: java.lang.String getName()>();

        $r28 = staticinvoke <com.android.org.bouncycastle.util.encoders.Base64: byte[] decode(java.lang.String)>($r27);

        specialinvoke $r24.<java.lang.String: void <init>(byte[])>($r28);

        r11 = $r24;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ... key=");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r29 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" size=");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LocalTransport", $r33);

        virtualinvoke r4.<android.app.backup.BackupDataOutput: int writeEntityHeader(java.lang.String,int)>(r11, i2);

        virtualinvoke r4.<android.app.backup.BackupDataOutput: int writeEntityData(byte[],int)>(r9, i2);

     label09:
        virtualinvoke r7.<java.io.FileInputStream: void close()>();

     label10:
        i1 = i1 + 1;

        goto label06;

     label11:
        $r40 := @caughtexception;

        r8 = $r40;

     label12:
        virtualinvoke r7.<java.io.FileInputStream: void close()>();

        throw r8;

     label13:
        $r41 := @caughtexception;

        r5 = $r41;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LocalTransport", "Unable to read backup records", r5);

        return 1;

     label14:
        return 0;

        catch java.io.IOException from label04 to label05 with label13;
        catch java.io.IOException from label07 to label08 with label13;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.io.IOException from label09 to label10 with label13;
        catch java.io.IOException from label12 to label13 with label13;
    }

    public int initializeDevice()
    {
        com.android.internal.backup.LocalTransport r0;
        java.io.File $r1;

        r0 := @this: com.android.internal.backup.LocalTransport;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LocalTransport", "wiping all data");

        $r1 = r0.<com.android.internal.backup.LocalTransport: java.io.File mDataDir>;

        specialinvoke r0.<com.android.internal.backup.LocalTransport: void deleteContents(java.io.File)>($r1);

        return 0;
    }

    public java.lang.String name()
    {
        com.android.internal.backup.LocalTransport r0;
        android.content.ComponentName $r1;
        android.content.Context $r2;
        java.lang.Class $r3;
        java.lang.String $r4;

        r0 := @this: com.android.internal.backup.LocalTransport;

        $r1 = new android.content.ComponentName;

        $r2 = r0.<com.android.internal.backup.LocalTransport: android.content.Context mContext>;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        specialinvoke $r1.<android.content.ComponentName: void <init>(android.content.Context,java.lang.Class)>($r2, $r3);

        $r4 = virtualinvoke $r1.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        return $r4;
    }

    public java.lang.String nextRestorePackage()
    {
        com.android.internal.backup.LocalTransport r0;
        int i0, $i1, $i2, $i4;
        java.lang.String r1, $r10;
        android.content.pm.PackageInfo[] $r2, $r3, $r4;
        android.content.pm.PackageInfo $r5;
        java.io.File $r6, $r7;
        boolean $z0;
        java.lang.StringBuilder $r8, $r9, $r11;
        java.lang.IllegalStateException $r12;

        r0 := @this: com.android.internal.backup.LocalTransport;

        $r2 = r0.<com.android.internal.backup.LocalTransport: android.content.pm.PackageInfo[] mRestorePackages>;

        if $r2 != null goto label1;

        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("startRestore not called");

        throw $r12;

     label1:
        $i1 = r0.<com.android.internal.backup.LocalTransport: int mRestorePackage>;

        i0 = 1 + $i1;

        r0.<com.android.internal.backup.LocalTransport: int mRestorePackage> = i0;

        $r3 = r0.<com.android.internal.backup.LocalTransport: android.content.pm.PackageInfo[] mRestorePackages>;

        $i2 = lengthof $r3;

        if i0 >= $i2 goto label2;

        $r4 = r0.<com.android.internal.backup.LocalTransport: android.content.pm.PackageInfo[] mRestorePackages>;

        $i4 = r0.<com.android.internal.backup.LocalTransport: int mRestorePackage>;

        $r5 = $r4[$i4];

        r1 = $r5.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $r6 = new java.io.File;

        $r7 = r0.<com.android.internal.backup.LocalTransport: java.io.File mDataDir>;

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, r1);

        $z0 = virtualinvoke $r6.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label1;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  nextRestorePackage() = ");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LocalTransport", $r10);

        return r1;

     label2:
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LocalTransport", "  no more packages to restore");

        return "";
    }

    public int performBackup(android.content.pm.PackageInfo, android.os.ParcelFileDescriptor)
    {
        com.android.internal.backup.LocalTransport r0;
        android.content.pm.PackageInfo r1;
        android.os.ParcelFileDescriptor r2;
        java.io.File r3, r9, $r19, $r20, $r24;
        android.app.backup.BackupDataInput r4, $r21;
        int i0, i1;
        java.io.IOException r5, $r41, $r44;
        byte[] r6, $r23, $r26;
        java.lang.String r7, r8, $r16, $r17, $r18, $r25, $r33, $r37, $r42, $r46;
        java.io.FileOutputStream r10, $r36;
        java.lang.Throwable r11, $r43;
        java.lang.StringBuilder $r12, $r14, $r15, $r27, $r28, $r29, $r30, $r31, $r32, $r34, $r35, $r38, $r39, $r40, $r45, $r47;
        boolean $z1, $z3;
        java.io.FileDescriptor $r22;

        r0 := @this: com.android.internal.backup.LocalTransport;

        r1 := @parameter0: android.content.pm.PackageInfo;

        r2 := @parameter1: android.os.ParcelFileDescriptor;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("performBackup() pkg=");

        $r16 = r1.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LocalTransport", $r17);

        $r19 = new java.io.File;

        $r20 = r0.<com.android.internal.backup.LocalTransport: java.io.File mDataDir>;

        $r18 = r1.<android.content.pm.PackageInfo: java.lang.String packageName>;

        specialinvoke $r19.<java.io.File: void <init>(java.io.File,java.lang.String)>($r20, $r18);

        r3 = $r19;

        virtualinvoke r3.<java.io.File: boolean mkdirs()>();

        $r21 = new android.app.backup.BackupDataInput;

        $r22 = virtualinvoke r2.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke $r21.<android.app.backup.BackupDataInput: void <init>(java.io.FileDescriptor)>($r22);

        r4 = $r21;

        i0 = 512;

     label01:
        r6 = newarray (byte)[512];

     label02:
        $z1 = virtualinvoke r4.<android.app.backup.BackupDataInput: boolean readNextHeader()>();

        if $z1 == 0 goto label21;

        r7 = virtualinvoke r4.<android.app.backup.BackupDataInput: java.lang.String getKey()>();

        $r25 = new java.lang.String;

        $r26 = virtualinvoke r7.<java.lang.String: byte[] getBytes()>();

        $r23 = staticinvoke <com.android.org.bouncycastle.util.encoders.Base64: byte[] encode(byte[])>($r26);

        specialinvoke $r25.<java.lang.String: void <init>(byte[])>($r23);

        r8 = $r25;

        $r24 = new java.io.File;

        specialinvoke $r24.<java.io.File: void <init>(java.io.File,java.lang.String)>(r3, r8);

        r9 = $r24;

        i1 = virtualinvoke r4.<android.app.backup.BackupDataInput: int getDataSize()>();

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got change set key=");

        $r31 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" size=");

        $r29 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" key64=");

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LocalTransport", $r33);

     label03:
        if i1 < 0 goto label19;

     label04:
        $z3 = virtualinvoke r9.<java.io.File: boolean exists()>();

        if $z3 == 0 goto label05;

        virtualinvoke r9.<java.io.File: boolean delete()>();

     label05:
        $r36 = new java.io.FileOutputStream;

        specialinvoke $r36.<java.io.FileOutputStream: void <init>(java.io.File)>(r9);

        r10 = $r36;

     label06:
        if i1 <= i0 goto label08;

        i0 = i1;

     label07:
        r6 = newarray (byte)[i0];

     label08:
        virtualinvoke r4.<android.app.backup.BackupDataInput: int readEntityData(byte[],int,int)>(r6, 0, i1);

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  data size ");

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LocalTransport", $r37);

     label09:
        virtualinvoke r10.<java.io.FileOutputStream: void write(byte[],int,int)>(r6, 0, i1);

     label10:
        virtualinvoke r10.<java.io.FileOutputStream: void close()>();

     label11:
        goto label02;

     label12:
        $r44 := @caughtexception;

        r5 = $r44;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>("LocalTransport", "Exception reading backup input:", r5);

        return 1;

     label13:
        $r41 := @caughtexception;

     label14:
        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to update key file ");

        $r46 = virtualinvoke r9.<java.io.File: java.lang.String getAbsolutePath()>();

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        $r42 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("LocalTransport", $r42);

     label15:
        virtualinvoke r10.<java.io.FileOutputStream: void close()>();

     label16:
        return 1;

     label17:
        $r43 := @caughtexception;

        r11 = $r43;

     label18:
        virtualinvoke r10.<java.io.FileOutputStream: void close()>();

        throw r11;

     label19:
        virtualinvoke r9.<java.io.File: boolean delete()>();

     label20:
        goto label02;

     label21:
        return 0;

        catch java.io.IOException from label01 to label02 with label12;
        catch java.io.IOException from label02 to label03 with label12;
        catch java.io.IOException from label04 to label05 with label12;
        catch java.io.IOException from label05 to label06 with label12;
        catch java.io.IOException from label07 to label08 with label12;
        catch java.io.IOException from label08 to label09 with label12;
        catch java.io.IOException from label09 to label10 with label13;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.io.IOException from label10 to label11 with label12;
        catch java.lang.Throwable from label14 to label15 with label17;
        catch java.io.IOException from label15 to label16 with label12;
        catch java.io.IOException from label18 to label19 with label12;
        catch java.io.IOException from label19 to label20 with label12;
    }

    public long requestBackupTime()
    {
        com.android.internal.backup.LocalTransport r0;

        r0 := @this: com.android.internal.backup.LocalTransport;

        return 0L;
    }

    public int startRestore(long, android.content.pm.PackageInfo[])
    {
        com.android.internal.backup.LocalTransport r0;
        long l0;
        android.content.pm.PackageInfo[] r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: com.android.internal.backup.LocalTransport;

        l0 := @parameter0: long;

        r1 := @parameter1: android.content.pm.PackageInfo[];

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("start restore ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LocalTransport", $r5);

        r0.<com.android.internal.backup.LocalTransport: android.content.pm.PackageInfo[] mRestorePackages> = r1;

        r0.<com.android.internal.backup.LocalTransport: int mRestorePackage> = -1;

        return 0;
    }

    public java.lang.String transportDirName()
    {
        com.android.internal.backup.LocalTransport r0;

        r0 := @this: com.android.internal.backup.LocalTransport;

        return "com.android.internal.backup.LocalTransport";
    }

    public static void <clinit>()
    {
        <com.android.internal.backup.LocalTransport: java.lang.String TRANSPORT_DIR_NAME> = "com.android.internal.backup.LocalTransport";

        <com.android.internal.backup.LocalTransport: java.lang.String TRANSPORT_DESTINATION_STRING> = "Backing up to debug-only private cache";

        <com.android.internal.backup.LocalTransport: java.lang.String TAG> = "LocalTransport";

        <com.android.internal.backup.LocalTransport: long RESTORE_TOKEN> = 1L;

        <com.android.internal.backup.LocalTransport: boolean DEBUG> = 1;

        return;
    }
}
