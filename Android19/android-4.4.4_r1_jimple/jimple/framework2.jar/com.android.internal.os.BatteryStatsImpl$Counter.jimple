public class com.android.internal.os.BatteryStatsImpl$Counter extends android.os.BatteryStats$Counter implements com.android.internal.os.BatteryStatsImpl$Unpluggable
{
    final java.util.concurrent.atomic.AtomicInteger mCount;
    int mLastCount;
    int mLoadedCount;
    int mPluggedCount;
    final java.util.ArrayList mUnpluggables;
    int mUnpluggedCount;

    void <init>(java.util.ArrayList)
    {
        com.android.internal.os.BatteryStatsImpl$Counter r0;
        java.util.ArrayList r1;
        java.util.concurrent.atomic.AtomicInteger $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Counter;

        r1 := @parameter0: java.util.ArrayList;

        specialinvoke r0.<android.os.BatteryStats$Counter: void <init>()>();

        $r2 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl$Counter: java.util.concurrent.atomic.AtomicInteger mCount> = $r2;

        r0.<com.android.internal.os.BatteryStatsImpl$Counter: java.util.ArrayList mUnpluggables> = r1;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r0);

        return;
    }

    void <init>(java.util.ArrayList, android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$Counter r0;
        java.util.ArrayList r1;
        android.os.Parcel r2;
        java.util.concurrent.atomic.AtomicInteger $r3, $r4;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Counter;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: android.os.Parcel;

        specialinvoke r0.<android.os.BatteryStats$Counter: void <init>()>();

        $r3 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl$Counter: java.util.concurrent.atomic.AtomicInteger mCount> = $r3;

        r0.<com.android.internal.os.BatteryStatsImpl$Counter: java.util.ArrayList mUnpluggables> = r1;

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl$Counter: int mPluggedCount> = $i0;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl$Counter: java.util.concurrent.atomic.AtomicInteger mCount>;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl$Counter: int mPluggedCount>;

        virtualinvoke $r4.<java.util.concurrent.atomic.AtomicInteger: void set(int)>($i1);

        $i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl$Counter: int mLoadedCount> = $i2;

        r0.<com.android.internal.os.BatteryStatsImpl$Counter: int mLastCount> = 0;

        $i3 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl$Counter: int mUnpluggedCount> = $i3;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r0);

        return;
    }

    public static void writeCounterToParcel(android.os.Parcel, com.android.internal.os.BatteryStatsImpl$Counter)
    {
        android.os.Parcel r0;
        com.android.internal.os.BatteryStatsImpl$Counter r1;

        r0 := @parameter0: android.os.Parcel;

        r1 := @parameter1: com.android.internal.os.BatteryStatsImpl$Counter;

        if r1 != null goto label1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(0);

        return;

     label1:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<com.android.internal.os.BatteryStatsImpl$Counter: void writeToParcel(android.os.Parcel)>(r0);

        return;
    }

    void detach()
    {
        com.android.internal.os.BatteryStatsImpl$Counter r0;
        java.util.ArrayList $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Counter;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl$Counter: java.util.ArrayList mUnpluggables>;

        virtualinvoke $r1.<java.util.ArrayList: boolean remove(java.lang.Object)>(r0);

        return;
    }

    public int getCountLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl$Counter r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.util.concurrent.atomic.AtomicInteger $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Counter;

        i0 := @parameter0: int;

        if i0 != 1 goto label2;

        i1 = r0.<com.android.internal.os.BatteryStatsImpl$Counter: int mLastCount>;

     label1:
        return i1;

     label2:
        $r1 = r0.<com.android.internal.os.BatteryStatsImpl$Counter: java.util.concurrent.atomic.AtomicInteger mCount>;

        i1 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        if i0 != 3 goto label3;

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl$Counter: int mUnpluggedCount>;

        $i5 = i1 - $i4;

        return $i5;

     label3:
        if i0 == 0 goto label1;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl$Counter: int mLoadedCount>;

        $i3 = i1 - $i2;

        return $i3;
    }

    public void logState(android.util.Printer, java.lang.String)
    {
        com.android.internal.os.BatteryStatsImpl$Counter r0;
        android.util.Printer r1;
        java.lang.String r2, $r15;
        java.lang.StringBuilder $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r16;
        java.util.concurrent.atomic.AtomicInteger $r6;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Counter;

        r1 := @parameter0: android.util.Printer;

        r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mCount=");

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl$Counter: java.util.concurrent.atomic.AtomicInteger mCount>;

        $i0 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mLoadedCount=");

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl$Counter: int mLoadedCount>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mLastCount=");

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl$Counter: int mLastCount>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mUnpluggedCount=");

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl$Counter: int mUnpluggedCount>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mPluggedCount=");

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl$Counter: int mPluggedCount>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<android.util.Printer: void println(java.lang.String)>($r15);

        return;
    }

    public void plug(long, long, long)
    {
        com.android.internal.os.BatteryStatsImpl$Counter r0;
        long l0, l1, l2;
        java.util.concurrent.atomic.AtomicInteger $r1;
        int $i3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Counter;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl$Counter: java.util.concurrent.atomic.AtomicInteger mCount>;

        $i3 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        r0.<com.android.internal.os.BatteryStatsImpl$Counter: int mPluggedCount> = $i3;

        return;
    }

    void readSummaryFromParcelLocked(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$Counter r0;
        android.os.Parcel r1;
        int i0, $i1, $i2;
        java.util.concurrent.atomic.AtomicInteger $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Counter;

        r1 := @parameter0: android.os.Parcel;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl$Counter: int mLoadedCount> = $i1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl$Counter: java.util.concurrent.atomic.AtomicInteger mCount>;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl$Counter: int mLoadedCount>;

        virtualinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: void set(int)>($i2);

        r0.<com.android.internal.os.BatteryStatsImpl$Counter: int mLastCount> = 0;

        i0 = r0.<com.android.internal.os.BatteryStatsImpl$Counter: int mLoadedCount>;

        r0.<com.android.internal.os.BatteryStatsImpl$Counter: int mPluggedCount> = i0;

        r0.<com.android.internal.os.BatteryStatsImpl$Counter: int mUnpluggedCount> = i0;

        return;
    }

    void reset(boolean)
    {
        com.android.internal.os.BatteryStatsImpl$Counter r0;
        boolean z0;
        java.util.concurrent.atomic.AtomicInteger $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Counter;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl$Counter: java.util.concurrent.atomic.AtomicInteger mCount>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: void set(int)>(0);

        r0.<com.android.internal.os.BatteryStatsImpl$Counter: int mUnpluggedCount> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl$Counter: int mPluggedCount> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl$Counter: int mLastCount> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl$Counter: int mLoadedCount> = 0;

        if z0 == 0 goto label1;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl$Counter: void detach()>();

     label1:
        return;
    }

    void stepAtomic()
    {
        com.android.internal.os.BatteryStatsImpl$Counter r0;
        java.util.concurrent.atomic.AtomicInteger $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Counter;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl$Counter: java.util.concurrent.atomic.AtomicInteger mCount>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        return;
    }

    public void unplug(long, long, long)
    {
        com.android.internal.os.BatteryStatsImpl$Counter r0;
        long l0, l1, l2;
        int $i3, $i4;
        java.util.concurrent.atomic.AtomicInteger $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Counter;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl$Counter: int mPluggedCount>;

        r0.<com.android.internal.os.BatteryStatsImpl$Counter: int mUnpluggedCount> = $i3;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl$Counter: java.util.concurrent.atomic.AtomicInteger mCount>;

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl$Counter: int mPluggedCount>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: void set(int)>($i4);

        return;
    }

    void writeSummaryFromParcelLocked(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$Counter r0;
        android.os.Parcel r1;
        java.util.concurrent.atomic.AtomicInteger $r2;
        int $i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Counter;

        r1 := @parameter0: android.os.Parcel;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl$Counter: java.util.concurrent.atomic.AtomicInteger mCount>;

        $i0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i0);

        return;
    }

    public void writeToParcel(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$Counter r0;
        android.os.Parcel r1;
        java.util.concurrent.atomic.AtomicInteger $r2;
        int $i0, $i1, $i2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Counter;

        r1 := @parameter0: android.os.Parcel;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl$Counter: java.util.concurrent.atomic.AtomicInteger mCount>;

        $i0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i0);

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl$Counter: int mLoadedCount>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl$Counter: int mUnpluggedCount>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        return;
    }
}
