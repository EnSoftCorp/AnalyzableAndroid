public class com.android.internal.os.PowerProfile extends java.lang.Object
{
    private static final java.lang.String ATTR_NAME;
    public static final java.lang.String POWER_AUDIO;
    public static final java.lang.String POWER_BATTERY_CAPACITY;
    public static final java.lang.String POWER_BLUETOOTH_ACTIVE;
    public static final java.lang.String POWER_BLUETOOTH_AT_CMD;
    public static final java.lang.String POWER_BLUETOOTH_ON;
    public static final java.lang.String POWER_CPU_ACTIVE;
    public static final java.lang.String POWER_CPU_AWAKE;
    public static final java.lang.String POWER_CPU_IDLE;
    public static final java.lang.String POWER_CPU_SPEEDS;
    public static final java.lang.String POWER_GPS_ON;
    public static final java.lang.String POWER_NONE;
    public static final java.lang.String POWER_RADIO_ACTIVE;
    public static final java.lang.String POWER_RADIO_ON;
    public static final java.lang.String POWER_RADIO_SCANNING;
    public static final java.lang.String POWER_SCREEN_FULL;
    public static final java.lang.String POWER_SCREEN_ON;
    public static final java.lang.String POWER_VIDEO;
    public static final java.lang.String POWER_WIFI_ACTIVE;
    public static final java.lang.String POWER_WIFI_BATCHED_SCAN;
    public static final java.lang.String POWER_WIFI_ON;
    public static final java.lang.String POWER_WIFI_SCAN;
    private static final java.lang.String TAG_ARRAY;
    private static final java.lang.String TAG_ARRAYITEM;
    private static final java.lang.String TAG_DEVICE;
    private static final java.lang.String TAG_ITEM;
    static final java.util.HashMap sPowerMap;

    static void <clinit>()
    {
        java.util.HashMap $r0;

        <com.android.internal.os.PowerProfile: java.lang.String TAG_ITEM> = "item";

        <com.android.internal.os.PowerProfile: java.lang.String TAG_DEVICE> = "device";

        <com.android.internal.os.PowerProfile: java.lang.String TAG_ARRAYITEM> = "value";

        <com.android.internal.os.PowerProfile: java.lang.String TAG_ARRAY> = "array";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_WIFI_SCAN> = "wifi.scan";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_WIFI_ON> = "wifi.on";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_WIFI_BATCHED_SCAN> = "wifi.batchedscan";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_WIFI_ACTIVE> = "wifi.active";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_VIDEO> = "dsp.video";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_SCREEN_ON> = "screen.on";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_SCREEN_FULL> = "screen.full";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_RADIO_SCANNING> = "radio.scanning";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_RADIO_ON> = "radio.on";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_RADIO_ACTIVE> = "radio.active";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_NONE> = "none";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_GPS_ON> = "gps.on";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_CPU_SPEEDS> = "cpu.speeds";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_CPU_IDLE> = "cpu.idle";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_CPU_AWAKE> = "cpu.awake";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_CPU_ACTIVE> = "cpu.active";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_BLUETOOTH_ON> = "bluetooth.on";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_BLUETOOTH_AT_CMD> = "bluetooth.at";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_BLUETOOTH_ACTIVE> = "bluetooth.active";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_BATTERY_CAPACITY> = "battery.capacity";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_AUDIO> = "dsp.audio";

        <com.android.internal.os.PowerProfile: java.lang.String ATTR_NAME> = "name";

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <com.android.internal.os.PowerProfile: java.util.HashMap sPowerMap> = $r0;

        return;
    }

    public void <init>(android.content.Context)
    {
        com.android.internal.os.PowerProfile r0;
        android.content.Context r1;
        java.util.HashMap $r2;
        int $i0;

        r0 := @this: com.android.internal.os.PowerProfile;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerMap>;

        $i0 = virtualinvoke $r2.<java.util.HashMap: int size()>();

        if $i0 != 0 goto label1;

        specialinvoke r0.<com.android.internal.os.PowerProfile: void readPowerValuesFromXml(android.content.Context)>(r1);

     label1:
        return;
    }

    private void readPowerValuesFromXml(android.content.Context)
    {
        com.android.internal.os.PowerProfile r0;
        android.content.Context r1;
        android.content.res.XmlResourceParser r2;
        boolean z0, $z1, $z2, $z3, $z5, $z6;
        java.util.ArrayList r3, r33;
        java.lang.String r4, r8, r9, r10;
        java.io.IOException r5, $r28;
        java.lang.Throwable r6, $r30, r36;
        org.xmlpull.v1.XmlPullParserException r7, $r32;
        double d0, d1;
        android.content.res.Resources $r12;
        int $i0, $i1, $i2;
        java.lang.Double $r14, $r15, $r18;
        java.util.HashMap $r17, $r19, $r25;
        java.lang.Object[] $r20, $r24;
        java.lang.Double[] $r22, $r23;
        java.lang.NumberFormatException $r26;
        java.lang.RuntimeException r34, r35;

        r0 := @this: com.android.internal.os.PowerProfile;

        r1 := @parameter0: android.content.Context;

        $r12 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        r2 = virtualinvoke $r12.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>(17760269);

        z0 = 0;

        r33 = new java.util.ArrayList;

        specialinvoke r33.<java.util.ArrayList: void <init>()>();

        r3 = r33;

        r4 = null;

     label01:
        staticinvoke <com.android.internal.util.XmlUtils: void beginDocument(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r2, "device");

     label02:
        staticinvoke <com.android.internal.util.XmlUtils: void nextElement(org.xmlpull.v1.XmlPullParser)>(r2);

        r8 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

     label03:
        if r8 != null goto label06;

        if z0 == 0 goto label05;

     label04:
        $r25 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerMap>;

        $i2 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        $r23 = newarray (java.lang.Double)[$i2];

        $r24 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r23);

        virtualinvoke $r25.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r24);

     label05:
        interfaceinvoke r2.<android.content.res.XmlResourceParser: void close()>();

        return;

     label06:
        if z0 == 0 goto label09;

     label07:
        $z5 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("value");

        if $z5 != 0 goto label09;

        $r19 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerMap>;

        $i1 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        $r22 = newarray (java.lang.Double)[$i1];

        $r20 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r22);

        virtualinvoke $r19.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r20);

     label08:
        z0 = 0;

     label09:
        $z1 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("array");

        if $z1 == 0 goto label13;

     label10:
        z0 = 1;

     label11:
        virtualinvoke r3.<java.util.ArrayList: void clear()>();

        r4 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

     label12:
        goto label02;

     label13:
        $z2 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z2 != 0 goto label14;

        $z6 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("value");

        if $z6 == 0 goto label02;

     label14:
        r9 = null;

        if z0 != 0 goto label16;

     label15:
        r9 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

     label16:
        $i0 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int next()>();

        if $i0 != 4 goto label02;

        r10 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getText()>();

     label17:
        d0 = 0.0;

     label18:
        $r14 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(r10);

        d1 = virtualinvoke $r14.<java.lang.Double: double doubleValue()>();

     label19:
        d0 = d1;

     label20:
        $z3 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z3 == 0 goto label25;

        $r17 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerMap>;

        $r18 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        virtualinvoke $r17.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, $r18);

     label21:
        goto label02;

     label22:
        $r32 := @caughtexception;

        r7 = $r32;

     label23:
        r34 = new java.lang.RuntimeException;

        r36 = (java.lang.Throwable) r7;

        specialinvoke r34.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r36);

        throw r34;

     label24:
        $r30 := @caughtexception;

        r6 = $r30;

        interfaceinvoke r2.<android.content.res.XmlResourceParser: void close()>();

        throw r6;

     label25:
        if z0 == 0 goto label02;

     label26:
        $r15 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r15);

     label27:
        goto label02;

     label28:
        $r28 := @caughtexception;

        r5 = $r28;

     label29:
        r35 = new java.lang.RuntimeException;

        specialinvoke r35.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r5);

        throw r35;

     label30:
        $r26 := @caughtexception;

        goto label20;

        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label22;
        catch java.io.IOException from label01 to label02 with label28;
        catch java.lang.Throwable from label01 to label02 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label02 to label03 with label22;
        catch java.io.IOException from label02 to label03 with label28;
        catch java.lang.Throwable from label02 to label03 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label05 with label22;
        catch java.io.IOException from label04 to label05 with label28;
        catch java.lang.Throwable from label04 to label05 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label08 with label22;
        catch java.io.IOException from label07 to label08 with label28;
        catch java.lang.Throwable from label07 to label08 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label09 to label10 with label22;
        catch java.io.IOException from label09 to label10 with label28;
        catch java.lang.Throwable from label09 to label10 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label11 to label12 with label22;
        catch java.io.IOException from label11 to label12 with label28;
        catch java.lang.Throwable from label11 to label12 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label13 to label14 with label22;
        catch java.io.IOException from label13 to label14 with label28;
        catch java.lang.Throwable from label13 to label14 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label15 to label16 with label22;
        catch java.io.IOException from label15 to label16 with label28;
        catch java.lang.Throwable from label15 to label16 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label16 to label17 with label22;
        catch java.io.IOException from label16 to label17 with label28;
        catch java.lang.Throwable from label16 to label17 with label24;
        catch java.lang.NumberFormatException from label18 to label19 with label30;
        catch org.xmlpull.v1.XmlPullParserException from label18 to label19 with label22;
        catch java.io.IOException from label18 to label19 with label28;
        catch java.lang.Throwable from label18 to label19 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label20 to label21 with label22;
        catch java.io.IOException from label20 to label21 with label28;
        catch java.lang.Throwable from label20 to label21 with label24;
        catch java.lang.Throwable from label23 to label24 with label24;
        catch org.xmlpull.v1.XmlPullParserException from label26 to label27 with label22;
        catch java.io.IOException from label26 to label27 with label28;
        catch java.lang.Throwable from label26 to label27 with label24;
        catch java.lang.Throwable from label29 to label30 with label24;
    }

    public double getAveragePower(java.lang.String)
    {
        com.android.internal.os.PowerProfile r0;
        java.lang.String r1;
        java.lang.Object r2, $r6;
        java.util.HashMap $r3, $r4, $r5;
        boolean $z0, $z1;
        java.lang.Double $r7, $r10;
        double $d0, $d1;
        java.lang.Double[] $r8, $r9;

        r0 := @this: com.android.internal.os.PowerProfile;

        r1 := @parameter0: java.lang.String;

        $r3 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerMap>;

        $z0 = virtualinvoke $r3.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r4 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerMap>;

        r2 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $z1 = r2 instanceof java.lang.Double[];

        if $z1 == 0 goto label1;

        $r8 = (java.lang.Double[]) r2;

        $r9 = (java.lang.Double[]) $r8;

        $r10 = $r9[0];

        $d1 = virtualinvoke $r10.<java.lang.Double: double doubleValue()>();

        return $d1;

     label1:
        $r5 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerMap>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r7 = (java.lang.Double) $r6;

        $d0 = virtualinvoke $r7.<java.lang.Double: double doubleValue()>();

        return $d0;

     label2:
        return 0.0;
    }

    public double getAveragePower(java.lang.String, int)
    {
        com.android.internal.os.PowerProfile r0;
        java.lang.String r1;
        int i0, $i1, $i2, $i3;
        double d0, $d1, $d2;
        java.lang.Object r2;
        java.lang.Double[] r3, $r7;
        java.util.HashMap $r4, $r5;
        boolean $z0, $z1;
        java.lang.Double $r6, $r8, $r9;

        r0 := @this: com.android.internal.os.PowerProfile;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        d0 = 0.0;

        $r4 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerMap>;

        $z0 = virtualinvoke $r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r5 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerMap>;

        r2 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $z1 = r2 instanceof java.lang.Double[];

        if $z1 == 0 goto label3;

        $r7 = (java.lang.Double[]) r2;

        r3 = (java.lang.Double[]) $r7;

        $i1 = lengthof r3;

        if $i1 <= i0 goto label2;

        if i0 < 0 goto label2;

        $r9 = r3[i0];

        d0 = virtualinvoke $r9.<java.lang.Double: double doubleValue()>();

     label1:
        return d0;

     label2:
        if i0 < 0 goto label1;

        $i3 = lengthof r3;

        $i2 = -1 + $i3;

        $r8 = r3[$i2];

        $d2 = virtualinvoke $r8.<java.lang.Double: double doubleValue()>();

        return $d2;

     label3:
        $r6 = (java.lang.Double) r2;

        $d1 = virtualinvoke $r6.<java.lang.Double: double doubleValue()>();

        return $d1;
    }

    public double getBatteryCapacity()
    {
        com.android.internal.os.PowerProfile r0;
        double $d0;

        r0 := @this: com.android.internal.os.PowerProfile;

        $d0 = virtualinvoke r0.<com.android.internal.os.PowerProfile: double getAveragePower(java.lang.String)>("battery.capacity");

        return $d0;
    }

    public int getNumSpeedSteps()
    {
        com.android.internal.os.PowerProfile r0;
        java.lang.Object r1;
        java.util.HashMap $r2;
        boolean $z0;
        java.lang.Double[] $r3, $r4;
        int $i0;

        r0 := @this: com.android.internal.os.PowerProfile;

        $r2 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerMap>;

        r1 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("cpu.speeds");

        if r1 == null goto label1;

        $z0 = r1 instanceof java.lang.Double[];

        if $z0 == 0 goto label1;

        $r3 = (java.lang.Double[]) r1;

        $r4 = (java.lang.Double[]) $r3;

        $i0 = lengthof $r4;

        return $i0;

     label1:
        return 1;
    }
}
