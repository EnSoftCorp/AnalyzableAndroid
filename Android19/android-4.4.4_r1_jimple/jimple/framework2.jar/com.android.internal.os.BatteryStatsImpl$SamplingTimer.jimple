public final class com.android.internal.os.BatteryStatsImpl$SamplingTimer extends com.android.internal.os.BatteryStatsImpl$Timer
{
    int mCurrentReportedCount;
    long mCurrentReportedTotalTime;
    boolean mInDischarge;
    boolean mTrackingReportedValues;
    int mUnpluggedReportedCount;
    long mUnpluggedReportedTotalTime;
    int mUpdateVersion;

    void <init>(java.util.ArrayList, boolean, android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        java.util.ArrayList r1;
        boolean z0, z1;
        android.os.Parcel r2;
        int $i0, $i1, $i4, i5;
        long $l2, $l3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        r1 := @parameter0: java.util.ArrayList;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.os.Parcel;

        z1 = 1;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: void <init>(int,java.util.ArrayList,android.os.Parcel)>(0, r1, r2);

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mCurrentReportedCount> = $i0;

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mUnpluggedReportedCount> = $i1;

        $l2 = virtualinvoke r2.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mCurrentReportedTotalTime> = $l2;

        $l3 = virtualinvoke r2.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mUnpluggedReportedTotalTime> = $l3;

        $i4 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        i5 = (int) 1;

        if $i4 != i5 goto label2;

     label1:
        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTrackingReportedValues> = z1;

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mInDischarge> = z0;

        return;

     label2:
        z1 = 0;

        goto label1;
    }

    void <init>(java.util.ArrayList, boolean, boolean)
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        java.util.ArrayList r1;
        boolean z0, z1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        r1 := @parameter0: java.util.ArrayList;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: void <init>(int,java.util.ArrayList)>(0, r1);

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTrackingReportedValues> = z1;

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mInDischarge> = z0;

        return;
    }

    protected int computeCurrentCountLocked()
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        int i0, i1, $i2, $i3, $i4;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        i0 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mCount>;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mInDischarge>;

        if $z0 == 0 goto label2;

        $z1 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTrackingReportedValues>;

        if $z1 == 0 goto label2;

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mCurrentReportedCount>;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mUnpluggedReportedCount>;

        i1 = $i4 - $i3;

     label1:
        $i2 = i1 + i0;

        return $i2;

     label2:
        i1 = 0;

        goto label1;
    }

    protected long computeRunTimeLocked(long)
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        long l0, l1, l2, $l3, $l4, $l5;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        l0 := @parameter0: long;

        l1 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mTotalTime>;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mInDischarge>;

        if $z0 == 0 goto label2;

        $z1 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTrackingReportedValues>;

        if $z1 == 0 goto label2;

        $l5 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mCurrentReportedTotalTime>;

        $l4 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mUnpluggedReportedTotalTime>;

        l2 = $l5 - $l4;

     label1:
        $l3 = l2 + l1;

        return $l3;

     label2:
        l2 = 0L;

        goto label1;
    }

    public int getUpdateVersion()
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        int $i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mUpdateVersion>;

        return $i0;
    }

    public void logState(android.util.Printer, java.lang.String)
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        android.util.Printer r1;
        java.lang.String r2, $r12;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13;
        int $i0, $i1;
        long $l2, $l3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        r1 := @parameter0: android.util.Printer;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: void logState(android.util.Printer,java.lang.String)>(r1, r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mCurrentReportedCount=");

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mCurrentReportedCount>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mUnpluggedReportedCount=");

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mUnpluggedReportedCount>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCurrentReportedTotalTime=");

        $l2 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mCurrentReportedTotalTime>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mUnpluggedReportedTotalTime=");

        $l3 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mUnpluggedReportedTotalTime>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<android.util.Printer: void println(java.lang.String)>($r12);

        return;
    }

    public void plug(long, long, long)
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        long l0, l1, l2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: void plug(long,long,long)>(l0, l1, l2);

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mInDischarge> = 0;

        return;
    }

    void readSummaryFromParcelLocked(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        android.os.Parcel r1;
        boolean z0;
        long l0;
        int i1, $i2, i3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        r1 := @parameter0: android.os.Parcel;

        z0 = 1;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        l0 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mCurrentReportedTotalTime> = l0;

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mUnpluggedReportedTotalTime> = l0;

        i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mCurrentReportedCount> = i1;

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mUnpluggedReportedCount> = i1;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i3 = (int) 1;

        if $i2 != i3 goto label2;

     label1:
        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTrackingReportedValues> = z0;

        return;

     label2:
        z0 = 0;

        goto label1;
    }

    boolean reset(com.android.internal.os.BatteryStatsImpl, boolean)
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        com.android.internal.os.BatteryStatsImpl r1;
        boolean z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        r1 := @parameter0: com.android.internal.os.BatteryStatsImpl;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: boolean reset(com.android.internal.os.BatteryStatsImpl,boolean)>(r1, z0);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void setStale()>();

        return 1;
    }

    public void setStale()
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTrackingReportedValues> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mUnpluggedReportedTotalTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mUnpluggedReportedCount> = 0;

        return;
    }

    public void setUpdateVersion(int)
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        int i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        i0 := @parameter0: int;

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mUpdateVersion> = i0;

        return;
    }

    public void unplug(long, long, long)
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        long l0, l1, l2, $l3;
        boolean $z0;
        int $i4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: void unplug(long,long,long)>(l0, l1, l2);

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTrackingReportedValues>;

        if $z0 == 0 goto label1;

        $l3 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mCurrentReportedTotalTime>;

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mUnpluggedReportedTotalTime> = $l3;

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mCurrentReportedCount>;

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mUnpluggedReportedCount> = $i4;

     label1:
        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mInDischarge> = 1;

        return;
    }

    public void updateCurrentReportedCount(int)
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        int i0, $i1;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        i0 := @parameter0: int;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mInDischarge>;

        if $z0 == 0 goto label1;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mUnpluggedReportedCount>;

        if $i1 != 0 goto label1;

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mUnpluggedReportedCount> = i0;

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTrackingReportedValues> = 1;

     label1:
        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mCurrentReportedCount> = i0;

        return;
    }

    public void updateCurrentReportedTotalTime(long)
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        long l0, $l1;
        boolean $z0;
        byte $b2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        l0 := @parameter0: long;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mInDischarge>;

        if $z0 == 0 goto label1;

        $l1 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mUnpluggedReportedTotalTime>;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label1;

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mUnpluggedReportedTotalTime> = l0;

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTrackingReportedValues> = 1;

     label1:
        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mCurrentReportedTotalTime> = l0;

        return;
    }

    void writeSummaryFromParcelLocked(android.os.Parcel, long)
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        android.os.Parcel r1;
        long l0, $l2;
        byte b1;
        int $i3;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        r1 := @parameter0: android.os.Parcel;

        l0 := @parameter1: long;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l0);

        $l2 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mCurrentReportedTotalTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l2);

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mCurrentReportedCount>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTrackingReportedValues>;

        if $z0 == 0 goto label2;

        b1 = 1;

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        return;

     label2:
        b1 = 0;

        goto label1;
    }

    public void writeToParcel(android.os.Parcel, long)
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        android.os.Parcel r1;
        long l0, $l4, $l5;
        byte b1;
        int $i2, $i3;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        r1 := @parameter0: android.os.Parcel;

        l0 := @parameter1: long;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: void writeToParcel(android.os.Parcel,long)>(r1, l0);

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mCurrentReportedCount>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mUnpluggedReportedCount>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $l4 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mCurrentReportedTotalTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l4);

        $l5 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mUnpluggedReportedTotalTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l5);

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTrackingReportedValues>;

        if $z0 == 0 goto label2;

        b1 = 1;

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        return;

     label2:
        b1 = 0;

        goto label1;
    }
}
