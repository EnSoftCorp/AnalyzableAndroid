public class com.android.internal.widget.RotarySelector extends android.view.View
{
    private static final int ARROW_SCRUNCH_DIP;
    private static final boolean DBG;
    private static final int EDGE_PADDING_DIP;
    private static final int EDGE_TRIGGER_DIP;
    public static final int HORIZONTAL;
    public static final int LEFT_HANDLE_GRABBED;
    private static final java.lang.String LOG_TAG;
    public static final int NOTHING_GRABBED;
    static final int OUTER_ROTARY_RADIUS_DIP;
    public static final int RIGHT_HANDLE_GRABBED;
    static final int ROTARY_STROKE_WIDTH_DIP;
    static final int SNAP_BACK_ANIMATION_DURATION_MILLIS;
    static final int SPIN_ANIMATION_DURATION_MILLIS;
    public static final int VERTICAL;
    private static final long VIBRATE_LONG;
    private static final long VIBRATE_SHORT;
    private static final boolean VISUAL_DEBUG;
    private boolean mAnimating;
    private int mAnimatingDeltaXEnd;
    private int mAnimatingDeltaXStart;
    private long mAnimationDuration;
    private long mAnimationStartTime;
    private android.graphics.Bitmap mArrowLongLeft;
    private android.graphics.Bitmap mArrowLongRight;
    final android.graphics.Matrix mArrowMatrix;
    private android.graphics.Bitmap mArrowShortLeftAndRight;
    private android.graphics.Bitmap mBackground;
    private int mBackgroundHeight;
    private int mBackgroundWidth;
    final android.graphics.Matrix mBgMatrix;
    private float mDensity;
    private android.graphics.Bitmap mDimple;
    private android.graphics.Bitmap mDimpleDim;
    private int mDimpleSpacing;
    private int mDimpleWidth;
    private int mDimplesOfFling;
    private int mEdgeTriggerThresh;
    private int mGrabbedState;
    private final int mInnerRadius;
    private android.view.animation.DecelerateInterpolator mInterpolator;
    private android.graphics.Bitmap mLeftHandleIcon;
    private int mLeftHandleX;
    private int mMaximumVelocity;
    private int mMinimumVelocity;
    private com.android.internal.widget.RotarySelector$OnDialTriggerListener mOnDialTriggerListener;
    private int mOrientation;
    private final int mOuterRadius;
    private android.graphics.Paint mPaint;
    private android.graphics.Bitmap mRightHandleIcon;
    private int mRightHandleX;
    private int mRotaryOffsetX;
    private boolean mTriggered;
    private android.view.VelocityTracker mVelocityTracker;
    private android.os.Vibrator mVibrator;

    public void <init>(android.content.Context)
    {
        com.android.internal.widget.RotarySelector r0;
        android.content.Context r1;

        r0 := @this: com.android.internal.widget.RotarySelector;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.internal.widget.RotarySelector: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.internal.widget.RotarySelector r0;
        android.content.Context r1, $r21;
        android.util.AttributeSet r2;
        android.content.res.TypedArray r3;
        android.view.ViewConfiguration r4;
        android.graphics.Paint $r5;
        android.graphics.Matrix $r6, $r7;
        int[] $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.content.res.Resources $r9;
        android.util.DisplayMetrics $r10;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        android.graphics.Bitmap $r11, $r12, $r13, $r14, $r15, $r16, $r18, $r19, $r20;
        android.view.animation.DecelerateInterpolator $r17;

        r0 := @this: com.android.internal.widget.RotarySelector;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        r0.<com.android.internal.widget.RotarySelector: int mRotaryOffsetX> = 0;

        r0.<com.android.internal.widget.RotarySelector: boolean mAnimating> = 0;

        $r5 = new android.graphics.Paint;

        specialinvoke $r5.<android.graphics.Paint: void <init>()>();

        r0.<com.android.internal.widget.RotarySelector: android.graphics.Paint mPaint> = $r5;

        $r6 = new android.graphics.Matrix;

        specialinvoke $r6.<android.graphics.Matrix: void <init>()>();

        r0.<com.android.internal.widget.RotarySelector: android.graphics.Matrix mBgMatrix> = $r6;

        $r7 = new android.graphics.Matrix;

        specialinvoke $r7.<android.graphics.Matrix: void <init>()>();

        r0.<com.android.internal.widget.RotarySelector: android.graphics.Matrix mArrowMatrix> = $r7;

        r0.<com.android.internal.widget.RotarySelector: int mGrabbedState> = 0;

        r0.<com.android.internal.widget.RotarySelector: boolean mTriggered> = 0;

        r0.<com.android.internal.widget.RotarySelector: int mDimplesOfFling> = 0;

        $r8 = <com.android.internal.R$styleable: int[] RotarySelector>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r2, $r8);

        $i0 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(0, 0);

        r0.<com.android.internal.widget.RotarySelector: int mOrientation> = $i0;

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        $r9 = virtualinvoke r0.<com.android.internal.widget.RotarySelector: android.content.res.Resources getResources()>();

        $r10 = virtualinvoke $r9.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = $r10.<android.util.DisplayMetrics: float density>;

        r0.<com.android.internal.widget.RotarySelector: float mDensity> = $f0;

        $r11 = specialinvoke r0.<com.android.internal.widget.RotarySelector: android.graphics.Bitmap getBitmapFor(int)>(17302461);

        r0.<com.android.internal.widget.RotarySelector: android.graphics.Bitmap mBackground> = $r11;

        $r12 = specialinvoke r0.<com.android.internal.widget.RotarySelector: android.graphics.Bitmap getBitmapFor(int)>(17302462);

        r0.<com.android.internal.widget.RotarySelector: android.graphics.Bitmap mDimple> = $r12;

        $r14 = specialinvoke r0.<com.android.internal.widget.RotarySelector: android.graphics.Bitmap getBitmapFor(int)>(17302463);

        r0.<com.android.internal.widget.RotarySelector: android.graphics.Bitmap mDimpleDim> = $r14;

        $r13 = specialinvoke r0.<com.android.internal.widget.RotarySelector: android.graphics.Bitmap getBitmapFor(int)>(17302453);

        r0.<com.android.internal.widget.RotarySelector: android.graphics.Bitmap mArrowLongLeft> = $r13;

        $r16 = specialinvoke r0.<com.android.internal.widget.RotarySelector: android.graphics.Bitmap getBitmapFor(int)>(17302456);

        r0.<com.android.internal.widget.RotarySelector: android.graphics.Bitmap mArrowLongRight> = $r16;

        $r15 = specialinvoke r0.<com.android.internal.widget.RotarySelector: android.graphics.Bitmap getBitmapFor(int)>(17302459);

        r0.<com.android.internal.widget.RotarySelector: android.graphics.Bitmap mArrowShortLeftAndRight> = $r15;

        $r17 = new android.view.animation.DecelerateInterpolator;

        specialinvoke $r17.<android.view.animation.DecelerateInterpolator: void <init>(float)>(1.0F);

        r0.<com.android.internal.widget.RotarySelector: android.view.animation.DecelerateInterpolator mInterpolator> = $r17;

        $f1 = r0.<com.android.internal.widget.RotarySelector: float mDensity>;

        $f2 = 100.0F * $f1;

        $i1 = (int) $f2;

        r0.<com.android.internal.widget.RotarySelector: int mEdgeTriggerThresh> = $i1;

        $r18 = r0.<com.android.internal.widget.RotarySelector: android.graphics.Bitmap mDimple>;

        $i2 = virtualinvoke $r18.<android.graphics.Bitmap: int getWidth()>();

        r0.<com.android.internal.widget.RotarySelector: int mDimpleWidth> = $i2;

        $r19 = r0.<com.android.internal.widget.RotarySelector: android.graphics.Bitmap mBackground>;

        $i3 = virtualinvoke $r19.<android.graphics.Bitmap: int getWidth()>();

        r0.<com.android.internal.widget.RotarySelector: int mBackgroundWidth> = $i3;

        $r20 = r0.<com.android.internal.widget.RotarySelector: android.graphics.Bitmap mBackground>;

        $i4 = virtualinvoke $r20.<android.graphics.Bitmap: int getHeight()>();

        r0.<com.android.internal.widget.RotarySelector: int mBackgroundHeight> = $i4;

        $f4 = r0.<com.android.internal.widget.RotarySelector: float mDensity>;

        $f3 = 390.0F * $f4;

        $i6 = (int) $f3;

        r0.<com.android.internal.widget.RotarySelector: int mOuterRadius> = $i6;

        $f6 = r0.<com.android.internal.widget.RotarySelector: float mDensity>;

        $f5 = 307.0F * $f6;

        $i5 = (int) $f5;

        r0.<com.android.internal.widget.RotarySelector: int mInnerRadius> = $i5;

        $r21 = r0.<com.android.internal.widget.RotarySelector: android.content.Context mContext>;

        r4 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r21);

        $i7 = virtualinvoke r4.<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>();

        $i8 = 2 * $i7;

        r0.<com.android.internal.widget.RotarySelector: int mMinimumVelocity> = $i8;

        $i9 = virtualinvoke r4.<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>();

        r0.<com.android.internal.widget.RotarySelector: int mMaximumVelocity> = $i9;

        return;
    }

    private void dispatchTriggerEvent(int)
    {
        com.android.internal.widget.RotarySelector r0;
        int i0;
        com.android.internal.widget.RotarySelector$OnDialTriggerListener $r1, $r2;

        r0 := @this: com.android.internal.widget.RotarySelector;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.internal.widget.RotarySelector: void vibrate(long)>(20L);

        $r1 = r0.<com.android.internal.widget.RotarySelector: com.android.internal.widget.RotarySelector$OnDialTriggerListener mOnDialTriggerListener>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.widget.RotarySelector: com.android.internal.widget.RotarySelector$OnDialTriggerListener mOnDialTriggerListener>;

        interfaceinvoke $r2.<com.android.internal.widget.RotarySelector$OnDialTriggerListener: void onDialTrigger(android.view.View,int)>(r0, i0);

     label1:
        return;
    }

    private void drawCentered(android.graphics.Bitmap, android.graphics.Canvas, int, int)
    {
        com.android.internal.widget.RotarySelector r0;
        android.graphics.Bitmap r1;
        android.graphics.Canvas r2;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        android.graphics.Paint $r3;
        float $f0, $f1;

        r0 := @this: com.android.internal.widget.RotarySelector;

        r1 := @parameter0: android.graphics.Bitmap;

        r2 := @parameter1: android.graphics.Canvas;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        i3 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        $i4 = i2 / 2;

        $i5 = i0 - $i4;

        $f1 = (float) $i5;

        $i6 = i3 / 2;

        $i7 = i1 - $i6;

        $f0 = (float) $i7;

        $r3 = r0.<com.android.internal.widget.RotarySelector: android.graphics.Paint mPaint>;

        virtualinvoke r2.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>(r1, $f1, $f0, $r3);

        return;
    }

    private android.graphics.Bitmap getBitmapFor(int)
    {
        com.android.internal.widget.RotarySelector r0;
        int i0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        android.graphics.Bitmap $r3;

        r0 := @this: com.android.internal.widget.RotarySelector;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.internal.widget.RotarySelector: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>($r2, i0);

        return $r3;
    }

    private int getYOnArc(int, int, int, int)
    {
        com.android.internal.widget.RotarySelector r0;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        double $d0, $d1;

        r0 := @this: com.android.internal.widget.RotarySelector;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $i7 = i2 - i1;

        i4 = $i7 / 2;

        i5 = i1 + i4;

        $i8 = i0 / 2;

        i6 = $i8 - i3;

        $i10 = i5 * i5;

        $i9 = i6 * i6;

        $i11 = $i10 - $i9;

        $d0 = (double) $i11;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $i12 = (int) $d1;

        $i14 = i5 - $i12;

        $i13 = i4 + $i14;

        return $i13;
    }

    private boolean isHoriz()
    {
        com.android.internal.widget.RotarySelector r0;
        int $i0;

        r0 := @this: com.android.internal.widget.RotarySelector;

        $i0 = r0.<com.android.internal.widget.RotarySelector: int mOrientation>;

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void log(java.lang.String)
    {
        com.android.internal.widget.RotarySelector r0;
        java.lang.String r1;

        r0 := @this: com.android.internal.widget.RotarySelector;

        r1 := @parameter0: java.lang.String;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("RotarySelector", r1);

        return;
    }

    private void reset()
    {
        com.android.internal.widget.RotarySelector r0;

        r0 := @this: com.android.internal.widget.RotarySelector;

        r0.<com.android.internal.widget.RotarySelector: boolean mAnimating> = 0;

        r0.<com.android.internal.widget.RotarySelector: int mRotaryOffsetX> = 0;

        r0.<com.android.internal.widget.RotarySelector: int mDimplesOfFling> = 0;

        specialinvoke r0.<com.android.internal.widget.RotarySelector: void setGrabbedState(int)>(0);

        r0.<com.android.internal.widget.RotarySelector: boolean mTriggered> = 0;

        return;
    }

    private void setGrabbedState(int)
    {
        com.android.internal.widget.RotarySelector r0;
        int i0, $i1, $i2;
        com.android.internal.widget.RotarySelector$OnDialTriggerListener $r1, $r2;

        r0 := @this: com.android.internal.widget.RotarySelector;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.internal.widget.RotarySelector: int mGrabbedState>;

        if i0 == $i1 goto label1;

        r0.<com.android.internal.widget.RotarySelector: int mGrabbedState> = i0;

        $r1 = r0.<com.android.internal.widget.RotarySelector: com.android.internal.widget.RotarySelector$OnDialTriggerListener mOnDialTriggerListener>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.widget.RotarySelector: com.android.internal.widget.RotarySelector$OnDialTriggerListener mOnDialTriggerListener>;

        $i2 = r0.<com.android.internal.widget.RotarySelector: int mGrabbedState>;

        interfaceinvoke $r2.<com.android.internal.widget.RotarySelector$OnDialTriggerListener: void onGrabbedStateChange(android.view.View,int)>(r0, $i2);

     label1:
        return;
    }

    private void startAnimation(int, int, int)
    {
        com.android.internal.widget.RotarySelector r0;
        int i0, i1, i2;
        long $l3, $l4;

        r0 := @this: com.android.internal.widget.RotarySelector;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r0.<com.android.internal.widget.RotarySelector: boolean mAnimating> = 1;

        $l3 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        r0.<com.android.internal.widget.RotarySelector: long mAnimationStartTime> = $l3;

        $l4 = (long) i2;

        r0.<com.android.internal.widget.RotarySelector: long mAnimationDuration> = $l4;

        r0.<com.android.internal.widget.RotarySelector: int mAnimatingDeltaXStart> = i0;

        r0.<com.android.internal.widget.RotarySelector: int mAnimatingDeltaXEnd> = i1;

        specialinvoke r0.<com.android.internal.widget.RotarySelector: void setGrabbedState(int)>(0);

        r0.<com.android.internal.widget.RotarySelector: int mDimplesOfFling> = 0;

        virtualinvoke r0.<com.android.internal.widget.RotarySelector: void invalidate()>();

        return;
    }

    private void startAnimationWithVelocity(int, int, int)
    {
        com.android.internal.widget.RotarySelector r0;
        int i0, i1, i2, $i4, $i5, $i6;
        long $l3, $l7;

        r0 := @this: com.android.internal.widget.RotarySelector;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r0.<com.android.internal.widget.RotarySelector: boolean mAnimating> = 1;

        $l3 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        r0.<com.android.internal.widget.RotarySelector: long mAnimationStartTime> = $l3;

        $i4 = i1 - i0;

        $i5 = 1000 * $i4;

        $i6 = $i5 / i2;

        $l7 = (long) $i6;

        r0.<com.android.internal.widget.RotarySelector: long mAnimationDuration> = $l7;

        r0.<com.android.internal.widget.RotarySelector: int mAnimatingDeltaXStart> = i0;

        r0.<com.android.internal.widget.RotarySelector: int mAnimatingDeltaXEnd> = i1;

        specialinvoke r0.<com.android.internal.widget.RotarySelector: void setGrabbedState(int)>(0);

        virtualinvoke r0.<com.android.internal.widget.RotarySelector: void invalidate()>();

        return;
    }

    private void updateAnimation()
    {
        com.android.internal.widget.RotarySelector r0;
        long l0, l1, $l3, $l4, $l5, $l9;
        int i2, $i6, $i7, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29;
        boolean z0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6;
        byte $b8;
        android.view.animation.DecelerateInterpolator $r1;

        r0 := @this: com.android.internal.widget.RotarySelector;

        $l3 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        $l4 = r0.<com.android.internal.widget.RotarySelector: long mAnimationStartTime>;

        l0 = $l3 - $l4;

        $l5 = r0.<com.android.internal.widget.RotarySelector: long mAnimationDuration>;

        l1 = $l5 - l0;

        $i7 = r0.<com.android.internal.widget.RotarySelector: int mAnimatingDeltaXStart>;

        $i6 = r0.<com.android.internal.widget.RotarySelector: int mAnimatingDeltaXEnd>;

        i2 = $i7 - $i6;

        if i2 >= 0 goto label2;

        z0 = 1;

     label1:
        $b8 = l1 cmp 0L;

        if $b8 > 0 goto label3;

        specialinvoke r0.<com.android.internal.widget.RotarySelector: void reset()>();

        return;

     label2:
        z0 = 0;

        goto label1;

     label3:
        $r1 = r0.<com.android.internal.widget.RotarySelector: android.view.animation.DecelerateInterpolator mInterpolator>;

        $f3 = (float) l0;

        $l9 = r0.<com.android.internal.widget.RotarySelector: long mAnimationDuration>;

        $f1 = (float) $l9;

        $f2 = $f3 / $f1;

        f0 = virtualinvoke $r1.<android.view.animation.DecelerateInterpolator: float getInterpolation(float)>($f2);

        $f4 = (float) i2;

        $f5 = 1.0F - f0;

        $f6 = $f4 * $f5;

        $i12 = (int) $f6;

        $i10 = r0.<com.android.internal.widget.RotarySelector: int mAnimatingDeltaXEnd>;

        $i11 = $i12 + $i10;

        r0.<com.android.internal.widget.RotarySelector: int mRotaryOffsetX> = $i11;

        $i14 = r0.<com.android.internal.widget.RotarySelector: int mDimplesOfFling>;

        if $i14 <= 0 goto label4;

        if z0 != 0 goto label5;

        $i26 = r0.<com.android.internal.widget.RotarySelector: int mRotaryOffsetX>;

        $i20 = r0.<com.android.internal.widget.RotarySelector: int mDimpleSpacing>;

        $i25 = -3 * $i20;

        if $i26 >= $i25 goto label5;

        $i29 = r0.<com.android.internal.widget.RotarySelector: int mRotaryOffsetX>;

        $i24 = r0.<com.android.internal.widget.RotarySelector: int mDimplesOfFling>;

        $i23 = r0.<com.android.internal.widget.RotarySelector: int mDimpleSpacing>;

        $i28 = $i24 * $i23;

        $i27 = $i29 + $i28;

        r0.<com.android.internal.widget.RotarySelector: int mRotaryOffsetX> = $i27;

     label4:
        virtualinvoke r0.<com.android.internal.widget.RotarySelector: void invalidate()>();

        return;

     label5:
        if z0 == 0 goto label4;

        $i15 = r0.<com.android.internal.widget.RotarySelector: int mRotaryOffsetX>;

        $i13 = r0.<com.android.internal.widget.RotarySelector: int mDimpleSpacing>;

        $i16 = 3 * $i13;

        if $i15 <= $i16 goto label4;

        $i22 = r0.<com.android.internal.widget.RotarySelector: int mRotaryOffsetX>;

        $i17 = r0.<com.android.internal.widget.RotarySelector: int mDimplesOfFling>;

        $i18 = r0.<com.android.internal.widget.RotarySelector: int mDimpleSpacing>;

        $i21 = $i17 * $i18;

        $i19 = $i22 - $i21;

        r0.<com.android.internal.widget.RotarySelector: int mRotaryOffsetX> = $i19;

        goto label4;
    }

    private void vibrate(long)
    {
        com.android.internal.widget.RotarySelector r0;
        long l0;
        boolean z0;
        java.lang.Throwable r1, $r9;
        android.content.Context $r2, $r6;
        android.content.ContentResolver $r3;
        int $i1;
        android.os.Vibrator $r4, $r5, $r8;
        java.lang.Object $r7;

        r0 := @this: com.android.internal.widget.RotarySelector;

        l0 := @parameter0: long;

        z0 = 1;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.internal.widget.RotarySelector: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i1 = staticinvoke <android.provider.Settings$System: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)>($r3, "haptic_feedback_enabled", 1, -2);

        if $i1 == 0 goto label6;

     label2:
        if z0 == 0 goto label5;

     label3:
        $r4 = r0.<com.android.internal.widget.RotarySelector: android.os.Vibrator mVibrator>;

        if $r4 != null goto label4;

        $r6 = virtualinvoke r0.<com.android.internal.widget.RotarySelector: android.content.Context getContext()>();

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("vibrator");

        $r8 = (android.os.Vibrator) $r7;

        r0.<com.android.internal.widget.RotarySelector: android.os.Vibrator mVibrator> = $r8;

     label4:
        $r5 = r0.<com.android.internal.widget.RotarySelector: android.os.Vibrator mVibrator>;

        virtualinvoke $r5.<android.os.Vibrator: void vibrate(long)>(l0);

     label5:
        exitmonitor r0;

        return;

     label6:
        z0 = 0;

        goto label2;

     label7:
        $r9 := @caughtexception;

        r1 = $r9;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        com.android.internal.widget.RotarySelector r0;
        android.graphics.Canvas r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71;
        android.graphics.Paint $r2, $r11, $r31;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z12;
        android.graphics.Bitmap $r3, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r26, $r27, $r29;
        android.graphics.Matrix $r4, $r5, $r12, $r13, $r25, $r28, $r30, $r32, $r33, $r34;
        java.lang.StringBuilder $r6, $r8, $r10;
        java.lang.IllegalStateException $r7;
        java.lang.String $r9;
        float $f0, $f1;

        r0 := @this: com.android.internal.widget.RotarySelector;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.view.View: void onDraw(android.graphics.Canvas)>(r1);

        i0 = virtualinvoke r0.<com.android.internal.widget.RotarySelector: int getWidth()>();

        i1 = virtualinvoke r0.<com.android.internal.widget.RotarySelector: int getHeight()>();

        $z0 = r0.<com.android.internal.widget.RotarySelector: boolean mAnimating>;

        if $z0 == 0 goto label01;

        specialinvoke r0.<com.android.internal.widget.RotarySelector: void updateAnimation()>();

     label01:
        $r3 = r0.<com.android.internal.widget.RotarySelector: android.graphics.Bitmap mBackground>;

        $r4 = r0.<com.android.internal.widget.RotarySelector: android.graphics.Matrix mBgMatrix>;

        $r2 = r0.<com.android.internal.widget.RotarySelector: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.Paint)>($r3, $r4, $r2);

        $r5 = r0.<com.android.internal.widget.RotarySelector: android.graphics.Matrix mArrowMatrix>;

        virtualinvoke $r5.<android.graphics.Matrix: void reset()>();

        $i20 = r0.<com.android.internal.widget.RotarySelector: int mGrabbedState>;

        tableswitch($i20)
        {
            case 0: goto label05;
            case 1: goto label03;
            case 2: goto label17;
            default: goto label02;
        };

     label02:
        $r7 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid mGrabbedState: ");

        $i21 = r0.<com.android.internal.widget.RotarySelector: int mGrabbedState>;

        $r8 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i21);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r7;

     label03:
        $r32 = r0.<com.android.internal.widget.RotarySelector: android.graphics.Matrix mArrowMatrix>;

        virtualinvoke $r32.<android.graphics.Matrix: void setTranslate(float,float)>(0.0F, 0.0F);

        $z12 = specialinvoke r0.<com.android.internal.widget.RotarySelector: boolean isHoriz()>();

        if $z12 != 0 goto label04;

        $r28 = r0.<com.android.internal.widget.RotarySelector: android.graphics.Matrix mArrowMatrix>;

        virtualinvoke $r28.<android.graphics.Matrix: boolean preRotate(float,float,float)>(-90.0F, 0.0F, 0.0F);

        $r34 = r0.<com.android.internal.widget.RotarySelector: android.graphics.Matrix mArrowMatrix>;

        $f1 = (float) i1;

        virtualinvoke $r34.<android.graphics.Matrix: boolean postTranslate(float,float)>(0.0F, $f1);

     label04:
        $r29 = r0.<com.android.internal.widget.RotarySelector: android.graphics.Bitmap mArrowLongLeft>;

        $r30 = r0.<com.android.internal.widget.RotarySelector: android.graphics.Matrix mArrowMatrix>;

        $r31 = r0.<com.android.internal.widget.RotarySelector: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.Paint)>($r29, $r30, $r31);

     label05:
        i2 = r0.<com.android.internal.widget.RotarySelector: int mBackgroundHeight>;

        $z2 = specialinvoke r0.<com.android.internal.widget.RotarySelector: boolean isHoriz()>();

        if $z2 == 0 goto label19;

        i3 = i1 - i2;

     label06:
        $i23 = r0.<com.android.internal.widget.RotarySelector: int mLeftHandleX>;

        $i22 = r0.<com.android.internal.widget.RotarySelector: int mRotaryOffsetX>;

        i4 = $i23 + $i22;

        $i24 = r0.<com.android.internal.widget.RotarySelector: int mBackgroundWidth>;

        $i26 = r0.<com.android.internal.widget.RotarySelector: int mInnerRadius>;

        $i25 = r0.<com.android.internal.widget.RotarySelector: int mOuterRadius>;

        i5 = specialinvoke r0.<com.android.internal.widget.RotarySelector: int getYOnArc(int,int,int,int)>($i24, $i26, $i25, i4);

        $z4 = specialinvoke r0.<com.android.internal.widget.RotarySelector: boolean isHoriz()>();

        if $z4 == 0 goto label20;

        i6 = i4;

     label07:
        $z3 = specialinvoke r0.<com.android.internal.widget.RotarySelector: boolean isHoriz()>();

        if $z3 == 0 goto label21;

        i7 = i5 + i3;

     label08:
        $i27 = r0.<com.android.internal.widget.RotarySelector: int mGrabbedState>;

        if $i27 == 2 goto label22;

        $r27 = r0.<com.android.internal.widget.RotarySelector: android.graphics.Bitmap mDimple>;

        specialinvoke r0.<com.android.internal.widget.RotarySelector: void drawCentered(android.graphics.Bitmap,android.graphics.Canvas,int,int)>($r27, r1, i6, i7);

        $r26 = r0.<com.android.internal.widget.RotarySelector: android.graphics.Bitmap mLeftHandleIcon>;

        specialinvoke r0.<com.android.internal.widget.RotarySelector: void drawCentered(android.graphics.Bitmap,android.graphics.Canvas,int,int)>($r26, r1, i6, i7);

     label09:
        $z5 = specialinvoke r0.<com.android.internal.widget.RotarySelector: boolean isHoriz()>();

        if $z5 == 0 goto label23;

        $i66 = i0 / 2;

        $i65 = r0.<com.android.internal.widget.RotarySelector: int mRotaryOffsetX>;

        i8 = $i66 + $i65;

     label10:
        $i31 = r0.<com.android.internal.widget.RotarySelector: int mBackgroundWidth>;

        $i32 = r0.<com.android.internal.widget.RotarySelector: int mInnerRadius>;

        $i28 = r0.<com.android.internal.widget.RotarySelector: int mOuterRadius>;

        i9 = specialinvoke r0.<com.android.internal.widget.RotarySelector: int getYOnArc(int,int,int,int)>($i31, $i32, $i28, i8);

        $z6 = specialinvoke r0.<com.android.internal.widget.RotarySelector: boolean isHoriz()>();

        if $z6 == 0 goto label24;

        $r21 = r0.<com.android.internal.widget.RotarySelector: android.graphics.Bitmap mDimpleDim>;

        $i67 = i9 + i3;

        specialinvoke r0.<com.android.internal.widget.RotarySelector: void drawCentered(android.graphics.Bitmap,android.graphics.Canvas,int,int)>($r21, r1, i8, $i67);

     label11:
        $i37 = r0.<com.android.internal.widget.RotarySelector: int mRightHandleX>;

        $i33 = r0.<com.android.internal.widget.RotarySelector: int mRotaryOffsetX>;

        i10 = $i37 + $i33;

        $i40 = r0.<com.android.internal.widget.RotarySelector: int mBackgroundWidth>;

        $i39 = r0.<com.android.internal.widget.RotarySelector: int mInnerRadius>;

        $i38 = r0.<com.android.internal.widget.RotarySelector: int mOuterRadius>;

        i11 = specialinvoke r0.<com.android.internal.widget.RotarySelector: int getYOnArc(int,int,int,int)>($i40, $i39, $i38, i10);

        $z7 = specialinvoke r0.<com.android.internal.widget.RotarySelector: boolean isHoriz()>();

        if $z7 == 0 goto label25;

        i12 = i10;

     label12:
        $z8 = specialinvoke r0.<com.android.internal.widget.RotarySelector: boolean isHoriz()>();

        if $z8 == 0 goto label26;

        i13 = i11 + i3;

     label13:
        $i36 = r0.<com.android.internal.widget.RotarySelector: int mGrabbedState>;

        if $i36 == 1 goto label27;

        $r22 = r0.<com.android.internal.widget.RotarySelector: android.graphics.Bitmap mDimple>;

        specialinvoke r0.<com.android.internal.widget.RotarySelector: void drawCentered(android.graphics.Bitmap,android.graphics.Canvas,int,int)>($r22, r1, i12, i13);

        $r23 = r0.<com.android.internal.widget.RotarySelector: android.graphics.Bitmap mRightHandleIcon>;

        specialinvoke r0.<com.android.internal.widget.RotarySelector: void drawCentered(android.graphics.Bitmap,android.graphics.Canvas,int,int)>($r23, r1, i12, i13);

     label14:
        $i46 = r0.<com.android.internal.widget.RotarySelector: int mRotaryOffsetX>;

        $i45 = r0.<com.android.internal.widget.RotarySelector: int mLeftHandleX>;

        $i41 = $i46 + $i45;

        $i47 = r0.<com.android.internal.widget.RotarySelector: int mDimpleSpacing>;

        i15 = $i41 - $i47;

        $i42 = r0.<com.android.internal.widget.RotarySelector: int mDimpleWidth>;

        i14 = $i42 / 2;

     label15:
        $i43 = neg i14;

        if i15 <= $i43 goto label29;

        $i64 = r0.<com.android.internal.widget.RotarySelector: int mBackgroundWidth>;

        $i63 = r0.<com.android.internal.widget.RotarySelector: int mInnerRadius>;

        $i57 = r0.<com.android.internal.widget.RotarySelector: int mOuterRadius>;

        i18 = specialinvoke r0.<com.android.internal.widget.RotarySelector: int getYOnArc(int,int,int,int)>($i64, $i63, $i57, i15);

        $z10 = specialinvoke r0.<com.android.internal.widget.RotarySelector: boolean isHoriz()>();

        if $z10 == 0 goto label28;

        $r24 = r0.<com.android.internal.widget.RotarySelector: android.graphics.Bitmap mDimpleDim>;

        $i68 = i18 + i3;

        specialinvoke r0.<com.android.internal.widget.RotarySelector: void drawCentered(android.graphics.Bitmap,android.graphics.Canvas,int,int)>($r24, r1, i15, $i68);

     label16:
        $i60 = r0.<com.android.internal.widget.RotarySelector: int mDimpleSpacing>;

        i15 = i15 - $i60;

        goto label15;

     label17:
        $r13 = r0.<com.android.internal.widget.RotarySelector: android.graphics.Matrix mArrowMatrix>;

        virtualinvoke $r13.<android.graphics.Matrix: void setTranslate(float,float)>(0.0F, 0.0F);

        $z1 = specialinvoke r0.<com.android.internal.widget.RotarySelector: boolean isHoriz()>();

        if $z1 != 0 goto label18;

        $r25 = r0.<com.android.internal.widget.RotarySelector: android.graphics.Matrix mArrowMatrix>;

        virtualinvoke $r25.<android.graphics.Matrix: boolean preRotate(float,float,float)>(-90.0F, 0.0F, 0.0F);

        $r33 = r0.<com.android.internal.widget.RotarySelector: android.graphics.Matrix mArrowMatrix>;

        $i71 = r0.<com.android.internal.widget.RotarySelector: int mBackgroundWidth>;

        $i70 = $i71 - i1;

        $i69 = i1 + $i70;

        $f0 = (float) $i69;

        virtualinvoke $r33.<android.graphics.Matrix: boolean postTranslate(float,float)>(0.0F, $f0);

     label18:
        $r14 = r0.<com.android.internal.widget.RotarySelector: android.graphics.Bitmap mArrowLongRight>;

        $r12 = r0.<com.android.internal.widget.RotarySelector: android.graphics.Matrix mArrowMatrix>;

        $r11 = r0.<com.android.internal.widget.RotarySelector: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.Paint)>($r14, $r12, $r11);

        goto label05;

     label19:
        i3 = i0 - i2;

        goto label06;

     label20:
        i6 = i5 + i3;

        goto label07;

     label21:
        i7 = i1 - i4;

        goto label08;

     label22:
        $r15 = r0.<com.android.internal.widget.RotarySelector: android.graphics.Bitmap mDimpleDim>;

        specialinvoke r0.<com.android.internal.widget.RotarySelector: void drawCentered(android.graphics.Bitmap,android.graphics.Canvas,int,int)>($r15, r1, i6, i7);

        goto label09;

     label23:
        $i29 = i1 / 2;

        $i30 = r0.<com.android.internal.widget.RotarySelector: int mRotaryOffsetX>;

        i8 = $i29 + $i30;

        goto label10;

     label24:
        $r16 = r0.<com.android.internal.widget.RotarySelector: android.graphics.Bitmap mDimpleDim>;

        $i34 = i9 + i3;

        $i35 = i1 - i8;

        specialinvoke r0.<com.android.internal.widget.RotarySelector: void drawCentered(android.graphics.Bitmap,android.graphics.Canvas,int,int)>($r16, r1, $i34, $i35);

        goto label11;

     label25:
        i12 = i11 + i3;

        goto label12;

     label26:
        i13 = i1 - i10;

        goto label13;

     label27:
        $r17 = r0.<com.android.internal.widget.RotarySelector: android.graphics.Bitmap mDimpleDim>;

        specialinvoke r0.<com.android.internal.widget.RotarySelector: void drawCentered(android.graphics.Bitmap,android.graphics.Canvas,int,int)>($r17, r1, i12, i13);

        goto label14;

     label28:
        $r20 = r0.<com.android.internal.widget.RotarySelector: android.graphics.Bitmap mDimpleDim>;

        $i62 = i18 + i3;

        $i61 = i1 - i15;

        specialinvoke r0.<com.android.internal.widget.RotarySelector: void drawCentered(android.graphics.Bitmap,android.graphics.Canvas,int,int)>($r20, r1, $i62, $i61);

        goto label16;

     label29:
        $i52 = r0.<com.android.internal.widget.RotarySelector: int mRotaryOffsetX>;

        $i44 = r0.<com.android.internal.widget.RotarySelector: int mRightHandleX>;

        $i54 = $i52 + $i44;

        $i51 = r0.<com.android.internal.widget.RotarySelector: int mDimpleSpacing>;

        i17 = $i54 + $i51;

        $i53 = r0.<com.android.internal.widget.RotarySelector: int mRight>;

        i16 = i14 + $i53;

     label30:
        if i17 >= i16 goto label33;

        $i50 = r0.<com.android.internal.widget.RotarySelector: int mBackgroundWidth>;

        $i48 = r0.<com.android.internal.widget.RotarySelector: int mInnerRadius>;

        $i49 = r0.<com.android.internal.widget.RotarySelector: int mOuterRadius>;

        i19 = specialinvoke r0.<com.android.internal.widget.RotarySelector: int getYOnArc(int,int,int,int)>($i50, $i48, $i49, i17);

        $z9 = specialinvoke r0.<com.android.internal.widget.RotarySelector: boolean isHoriz()>();

        if $z9 == 0 goto label32;

        $r18 = r0.<com.android.internal.widget.RotarySelector: android.graphics.Bitmap mDimpleDim>;

        $i55 = i19 + i3;

        specialinvoke r0.<com.android.internal.widget.RotarySelector: void drawCentered(android.graphics.Bitmap,android.graphics.Canvas,int,int)>($r18, r1, i17, $i55);

     label31:
        $i56 = r0.<com.android.internal.widget.RotarySelector: int mDimpleSpacing>;

        i17 = i17 + $i56;

        goto label30;

     label32:
        $r19 = r0.<com.android.internal.widget.RotarySelector: android.graphics.Bitmap mDimpleDim>;

        $i59 = i19 + i3;

        $i58 = i1 - i17;

        specialinvoke r0.<com.android.internal.widget.RotarySelector: void drawCentered(android.graphics.Bitmap,android.graphics.Canvas,int,int)>($r19, r1, $i59, $i58);

        goto label31;

     label33:
        return;
    }

    protected void onMeasure(int, int)
    {
        com.android.internal.widget.RotarySelector r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7;
        boolean $z0, $z1;
        float $f0, $f1;
        android.graphics.Bitmap $r1;

        r0 := @this: com.android.internal.widget.RotarySelector;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.internal.widget.RotarySelector: boolean isHoriz()>();

        if $z0 == 0 goto label2;

        i2 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

     label1:
        $f0 = r0.<com.android.internal.widget.RotarySelector: float mDensity>;

        $f1 = 6.0F * $f0;

        i3 = (int) $f1;

        $r1 = r0.<com.android.internal.widget.RotarySelector: android.graphics.Bitmap mArrowShortLeftAndRight>;

        $i5 = virtualinvoke $r1.<android.graphics.Bitmap: int getHeight()>();

        $i6 = r0.<com.android.internal.widget.RotarySelector: int mBackgroundHeight>;

        $i7 = $i5 + $i6;

        i4 = $i7 - i3;

        $z1 = specialinvoke r0.<com.android.internal.widget.RotarySelector: boolean isHoriz()>();

        if $z1 == 0 goto label3;

        virtualinvoke r0.<com.android.internal.widget.RotarySelector: void setMeasuredDimension(int,int)>(i2, i4);

        return;

     label2:
        i2 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i1);

        goto label1;

     label3:
        virtualinvoke r0.<com.android.internal.widget.RotarySelector: void setMeasuredDimension(int,int)>(i4, i2);

        return;
    }

    protected void onSizeChanged(int, int, int, int)
    {
        com.android.internal.widget.RotarySelector r0;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        float $f0, $f1, $f2, $f3, $f4;
        boolean $z0, $z1;
        android.graphics.Matrix $r1, $r2, $r3, $r4;

        r0 := @this: com.android.internal.widget.RotarySelector;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<android.view.View: void onSizeChanged(int,int,int,int)>(i0, i1, i2, i3);

        $f0 = r0.<com.android.internal.widget.RotarySelector: float mDensity>;

        $f1 = 9.0F * $f0;

        i4 = (int) $f1;

        $i7 = r0.<com.android.internal.widget.RotarySelector: int mDimpleWidth>;

        $i8 = $i7 / 2;

        $i9 = i4 + $i8;

        r0.<com.android.internal.widget.RotarySelector: int mLeftHandleX> = $i9;

        $z0 = specialinvoke r0.<com.android.internal.widget.RotarySelector: boolean isHoriz()>();

        if $z0 == 0 goto label2;

        i5 = i0;

     label1:
        $i11 = i5 - i4;

        $i10 = r0.<com.android.internal.widget.RotarySelector: int mDimpleWidth>;

        $i12 = $i10 / 2;

        $i14 = $i11 - $i12;

        r0.<com.android.internal.widget.RotarySelector: int mRightHandleX> = $i14;

        $i16 = i5 / 2;

        $i13 = r0.<com.android.internal.widget.RotarySelector: int mLeftHandleX>;

        $i15 = $i16 - $i13;

        r0.<com.android.internal.widget.RotarySelector: int mDimpleSpacing> = $i15;

        $r1 = r0.<com.android.internal.widget.RotarySelector: android.graphics.Matrix mBgMatrix>;

        virtualinvoke $r1.<android.graphics.Matrix: void setTranslate(float,float)>(0.0F, 0.0F);

        $z1 = specialinvoke r0.<com.android.internal.widget.RotarySelector: boolean isHoriz()>();

        if $z1 != 0 goto label3;

        $i19 = r0.<com.android.internal.widget.RotarySelector: int mBackgroundHeight>;

        i6 = i0 - $i19;

        $r3 = r0.<com.android.internal.widget.RotarySelector: android.graphics.Matrix mBgMatrix>;

        virtualinvoke $r3.<android.graphics.Matrix: boolean preRotate(float,float,float)>(-90.0F, 0.0F, 0.0F);

        $r4 = r0.<com.android.internal.widget.RotarySelector: android.graphics.Matrix mBgMatrix>;

        $f4 = (float) i6;

        $f3 = (float) i1;

        virtualinvoke $r4.<android.graphics.Matrix: boolean postTranslate(float,float)>($f4, $f3);

        return;

     label2:
        i5 = i1;

        goto label1;

     label3:
        $r2 = r0.<com.android.internal.widget.RotarySelector: android.graphics.Matrix mBgMatrix>;

        $i18 = r0.<com.android.internal.widget.RotarySelector: int mBackgroundHeight>;

        $i17 = i1 - $i18;

        $f2 = (float) $i17;

        virtualinvoke $r2.<android.graphics.Matrix: boolean postTranslate(float,float)>(0.0F, $f2);

        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.android.internal.widget.RotarySelector r0;
        android.view.MotionEvent r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65;
        android.view.VelocityTracker r2, r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;

        r0 := @this: com.android.internal.widget.RotarySelector;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = r0.<com.android.internal.widget.RotarySelector: boolean mAnimating>;

        if $z0 == 0 goto label02;

     label01:
        return 1;

     label02:
        $r4 = r0.<com.android.internal.widget.RotarySelector: android.view.VelocityTracker mVelocityTracker>;

        if $r4 != null goto label03;

        $r10 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<com.android.internal.widget.RotarySelector: android.view.VelocityTracker mVelocityTracker> = $r10;

     label03:
        $r5 = r0.<com.android.internal.widget.RotarySelector: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r5.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r1);

        i0 = virtualinvoke r0.<com.android.internal.widget.RotarySelector: int getHeight()>();

        $z1 = specialinvoke r0.<com.android.internal.widget.RotarySelector: boolean isHoriz()>();

        if $z1 == 0 goto label08;

        $f7 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        i1 = (int) $f7;

     label04:
        i2 = r0.<com.android.internal.widget.RotarySelector: int mDimpleWidth>;

        $i8 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        tableswitch($i8)
        {
            case 0: goto label06;
            case 1: goto label18;
            case 2: goto label10;
            case 3: goto label21;
            default: goto label05;
        };

     label05:
        return 1;

     label06:
        r0.<com.android.internal.widget.RotarySelector: boolean mTriggered> = 0;

        $i52 = r0.<com.android.internal.widget.RotarySelector: int mGrabbedState>;

        if $i52 == 0 goto label07;

        specialinvoke r0.<com.android.internal.widget.RotarySelector: void reset()>();

        virtualinvoke r0.<com.android.internal.widget.RotarySelector: void invalidate()>();

     label07:
        $i63 = r0.<com.android.internal.widget.RotarySelector: int mLeftHandleX>;

        $i62 = i2 + $i63;

        if i1 >= $i62 goto label09;

        $i61 = r0.<com.android.internal.widget.RotarySelector: int mLeftHandleX>;

        $i60 = i1 - $i61;

        r0.<com.android.internal.widget.RotarySelector: int mRotaryOffsetX> = $i60;

        specialinvoke r0.<com.android.internal.widget.RotarySelector: void setGrabbedState(int)>(1);

        virtualinvoke r0.<com.android.internal.widget.RotarySelector: void invalidate()>();

        specialinvoke r0.<com.android.internal.widget.RotarySelector: void vibrate(long)>(20L);

        return 1;

     label08:
        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $i9 = (int) $f0;

        i1 = i0 - $i9;

        goto label04;

     label09:
        $i65 = r0.<com.android.internal.widget.RotarySelector: int mRightHandleX>;

        $i64 = $i65 - i2;

        if i1 <= $i64 goto label01;

        $i59 = r0.<com.android.internal.widget.RotarySelector: int mRightHandleX>;

        $i58 = i1 - $i59;

        r0.<com.android.internal.widget.RotarySelector: int mRotaryOffsetX> = $i58;

        specialinvoke r0.<com.android.internal.widget.RotarySelector: void setGrabbedState(int)>(2);

        virtualinvoke r0.<com.android.internal.widget.RotarySelector: void invalidate()>();

        specialinvoke r0.<com.android.internal.widget.RotarySelector: void vibrate(long)>(20L);

        return 1;

     label10:
        $i11 = r0.<com.android.internal.widget.RotarySelector: int mGrabbedState>;

        if $i11 != 1 goto label15;

        $i31 = r0.<com.android.internal.widget.RotarySelector: int mLeftHandleX>;

        $i30 = i1 - $i31;

        r0.<com.android.internal.widget.RotarySelector: int mRotaryOffsetX> = $i30;

        virtualinvoke r0.<com.android.internal.widget.RotarySelector: void invalidate()>();

        $z4 = specialinvoke r0.<com.android.internal.widget.RotarySelector: boolean isHoriz()>();

        if $z4 == 0 goto label13;

        i5 = virtualinvoke r0.<com.android.internal.widget.RotarySelector: int getRight()>();

     label11:
        $i29 = r0.<com.android.internal.widget.RotarySelector: int mEdgeTriggerThresh>;

        $i33 = i5 - $i29;

        if i1 < $i33 goto label01;

        $z5 = r0.<com.android.internal.widget.RotarySelector: boolean mTriggered>;

        if $z5 != 0 goto label01;

        r0.<com.android.internal.widget.RotarySelector: boolean mTriggered> = 1;

        specialinvoke r0.<com.android.internal.widget.RotarySelector: void dispatchTriggerEvent(int)>(1);

        r3 = r0.<com.android.internal.widget.RotarySelector: android.view.VelocityTracker mVelocityTracker>;

        $i32 = r0.<com.android.internal.widget.RotarySelector: int mMaximumVelocity>;

        $f4 = (float) $i32;

        virtualinvoke r3.<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>(1000, $f4);

        $z6 = specialinvoke r0.<com.android.internal.widget.RotarySelector: boolean isHoriz()>();

        if $z6 == 0 goto label14;

        $f6 = virtualinvoke r3.<android.view.VelocityTracker: float getXVelocity()>();

        i6 = (int) $f6;

     label12:
        $i34 = r0.<com.android.internal.widget.RotarySelector: int mMinimumVelocity>;

        i7 = staticinvoke <java.lang.Math: int max(int,int)>($i34, i6);

        $i37 = r0.<com.android.internal.widget.RotarySelector: int mDimpleSpacing>;

        $i36 = i7 / $i37;

        $i41 = staticinvoke <java.lang.Math: int abs(int)>($i36);

        $i42 = staticinvoke <java.lang.Math: int max(int,int)>(8, $i41);

        r0.<com.android.internal.widget.RotarySelector: int mDimplesOfFling> = $i42;

        $i43 = r0.<com.android.internal.widget.RotarySelector: int mLeftHandleX>;

        $i40 = i1 - $i43;

        $i38 = r0.<com.android.internal.widget.RotarySelector: int mDimplesOfFling>;

        $i44 = r0.<com.android.internal.widget.RotarySelector: int mDimpleSpacing>;

        $i39 = $i38 * $i44;

        specialinvoke r0.<com.android.internal.widget.RotarySelector: void startAnimationWithVelocity(int,int,int)>($i40, $i39, i7);

        return 1;

     label13:
        i5 = i0;

        goto label11;

     label14:
        $f5 = virtualinvoke r3.<android.view.VelocityTracker: float getYVelocity()>();

        $i35 = (int) $f5;

        i6 = neg $i35;

        goto label12;

     label15:
        $i10 = r0.<com.android.internal.widget.RotarySelector: int mGrabbedState>;

        if $i10 != 2 goto label01;

        $i13 = r0.<com.android.internal.widget.RotarySelector: int mRightHandleX>;

        $i12 = i1 - $i13;

        r0.<com.android.internal.widget.RotarySelector: int mRotaryOffsetX> = $i12;

        virtualinvoke r0.<com.android.internal.widget.RotarySelector: void invalidate()>();

        $i14 = r0.<com.android.internal.widget.RotarySelector: int mEdgeTriggerThresh>;

        if i1 > $i14 goto label01;

        $z2 = r0.<com.android.internal.widget.RotarySelector: boolean mTriggered>;

        if $z2 != 0 goto label01;

        r0.<com.android.internal.widget.RotarySelector: boolean mTriggered> = 1;

        specialinvoke r0.<com.android.internal.widget.RotarySelector: void dispatchTriggerEvent(int)>(2);

        r2 = r0.<com.android.internal.widget.RotarySelector: android.view.VelocityTracker mVelocityTracker>;

        $i15 = r0.<com.android.internal.widget.RotarySelector: int mMaximumVelocity>;

        $f1 = (float) $i15;

        virtualinvoke r2.<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>(1000, $f1);

        $z3 = specialinvoke r0.<com.android.internal.widget.RotarySelector: boolean isHoriz()>();

        if $z3 == 0 goto label17;

        $f3 = virtualinvoke r2.<android.view.VelocityTracker: float getXVelocity()>();

        i3 = (int) $f3;

     label16:
        $i18 = r0.<com.android.internal.widget.RotarySelector: int mMinimumVelocity>;

        $i16 = neg $i18;

        i4 = staticinvoke <java.lang.Math: int min(int,int)>($i16, i3);

        $i20 = r0.<com.android.internal.widget.RotarySelector: int mDimpleSpacing>;

        $i21 = i4 / $i20;

        $i19 = staticinvoke <java.lang.Math: int abs(int)>($i21);

        $i24 = staticinvoke <java.lang.Math: int max(int,int)>(8, $i19);

        r0.<com.android.internal.widget.RotarySelector: int mDimplesOfFling> = $i24;

        $i25 = r0.<com.android.internal.widget.RotarySelector: int mRightHandleX>;

        $i26 = i1 - $i25;

        $i23 = r0.<com.android.internal.widget.RotarySelector: int mDimplesOfFling>;

        $i22 = r0.<com.android.internal.widget.RotarySelector: int mDimpleSpacing>;

        $i27 = $i23 * $i22;

        $i28 = neg $i27;

        specialinvoke r0.<com.android.internal.widget.RotarySelector: void startAnimationWithVelocity(int,int,int)>($i26, $i28, i4);

        return 1;

     label17:
        $f2 = virtualinvoke r2.<android.view.VelocityTracker: float getYVelocity()>();

        $i17 = (int) $f2;

        i3 = neg $i17;

        goto label16;

     label18:
        $i48 = r0.<com.android.internal.widget.RotarySelector: int mGrabbedState>;

        if $i48 != 1 goto label20;

        $i57 = r0.<com.android.internal.widget.RotarySelector: int mLeftHandleX>;

        $i56 = i1 - $i57;

        $i51 = staticinvoke <java.lang.Math: int abs(int)>($i56);

        if $i51 <= 5 goto label20;

        $i50 = r0.<com.android.internal.widget.RotarySelector: int mLeftHandleX>;

        $i53 = i1 - $i50;

        specialinvoke r0.<com.android.internal.widget.RotarySelector: void startAnimation(int,int,int)>($i53, 0, 300);

     label19:
        r0.<com.android.internal.widget.RotarySelector: int mRotaryOffsetX> = 0;

        specialinvoke r0.<com.android.internal.widget.RotarySelector: void setGrabbedState(int)>(0);

        virtualinvoke r0.<com.android.internal.widget.RotarySelector: void invalidate()>();

        $r9 = r0.<com.android.internal.widget.RotarySelector: android.view.VelocityTracker mVelocityTracker>;

        if $r9 == null goto label01;

        $r8 = r0.<com.android.internal.widget.RotarySelector: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r8.<android.view.VelocityTracker: void recycle()>();

        r0.<com.android.internal.widget.RotarySelector: android.view.VelocityTracker mVelocityTracker> = null;

        return 1;

     label20:
        $i49 = r0.<com.android.internal.widget.RotarySelector: int mGrabbedState>;

        if $i49 != 2 goto label19;

        $i45 = r0.<com.android.internal.widget.RotarySelector: int mRightHandleX>;

        $i46 = i1 - $i45;

        $i47 = staticinvoke <java.lang.Math: int abs(int)>($i46);

        if $i47 <= 5 goto label19;

        $i55 = r0.<com.android.internal.widget.RotarySelector: int mRightHandleX>;

        $i54 = i1 - $i55;

        specialinvoke r0.<com.android.internal.widget.RotarySelector: void startAnimation(int,int,int)>($i54, 0, 300);

        goto label19;

     label21:
        specialinvoke r0.<com.android.internal.widget.RotarySelector: void reset()>();

        virtualinvoke r0.<com.android.internal.widget.RotarySelector: void invalidate()>();

        $r7 = r0.<com.android.internal.widget.RotarySelector: android.view.VelocityTracker mVelocityTracker>;

        if $r7 == null goto label01;

        $r6 = r0.<com.android.internal.widget.RotarySelector: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r6.<android.view.VelocityTracker: void recycle()>();

        r0.<com.android.internal.widget.RotarySelector: android.view.VelocityTracker mVelocityTracker> = null;

        return 1;
    }

    public void setLeftHandleResource(int)
    {
        com.android.internal.widget.RotarySelector r0;
        int i0;
        android.graphics.Bitmap $r1;

        r0 := @this: com.android.internal.widget.RotarySelector;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        $r1 = specialinvoke r0.<com.android.internal.widget.RotarySelector: android.graphics.Bitmap getBitmapFor(int)>(i0);

        r0.<com.android.internal.widget.RotarySelector: android.graphics.Bitmap mLeftHandleIcon> = $r1;

     label1:
        virtualinvoke r0.<com.android.internal.widget.RotarySelector: void invalidate()>();

        return;
    }

    public void setOnDialTriggerListener(com.android.internal.widget.RotarySelector$OnDialTriggerListener)
    {
        com.android.internal.widget.RotarySelector r0;
        com.android.internal.widget.RotarySelector$OnDialTriggerListener r1;

        r0 := @this: com.android.internal.widget.RotarySelector;

        r1 := @parameter0: com.android.internal.widget.RotarySelector$OnDialTriggerListener;

        r0.<com.android.internal.widget.RotarySelector: com.android.internal.widget.RotarySelector$OnDialTriggerListener mOnDialTriggerListener> = r1;

        return;
    }

    public void setRightHandleResource(int)
    {
        com.android.internal.widget.RotarySelector r0;
        int i0;
        android.graphics.Bitmap $r1;

        r0 := @this: com.android.internal.widget.RotarySelector;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        $r1 = specialinvoke r0.<com.android.internal.widget.RotarySelector: android.graphics.Bitmap getBitmapFor(int)>(i0);

        r0.<com.android.internal.widget.RotarySelector: android.graphics.Bitmap mRightHandleIcon> = $r1;

     label1:
        virtualinvoke r0.<com.android.internal.widget.RotarySelector: void invalidate()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.widget.RotarySelector: long VIBRATE_SHORT> = 20L;

        <com.android.internal.widget.RotarySelector: long VIBRATE_LONG> = 20L;

        <com.android.internal.widget.RotarySelector: int VERTICAL> = 1;

        <com.android.internal.widget.RotarySelector: int SPIN_ANIMATION_DURATION_MILLIS> = 800;

        <com.android.internal.widget.RotarySelector: int SNAP_BACK_ANIMATION_DURATION_MILLIS> = 300;

        <com.android.internal.widget.RotarySelector: int ROTARY_STROKE_WIDTH_DIP> = 83;

        <com.android.internal.widget.RotarySelector: int RIGHT_HANDLE_GRABBED> = 2;

        <com.android.internal.widget.RotarySelector: int OUTER_ROTARY_RADIUS_DIP> = 390;

        <com.android.internal.widget.RotarySelector: int NOTHING_GRABBED> = 0;

        <com.android.internal.widget.RotarySelector: java.lang.String LOG_TAG> = "RotarySelector";

        <com.android.internal.widget.RotarySelector: int LEFT_HANDLE_GRABBED> = 1;

        <com.android.internal.widget.RotarySelector: int HORIZONTAL> = 0;

        <com.android.internal.widget.RotarySelector: int EDGE_TRIGGER_DIP> = 100;

        <com.android.internal.widget.RotarySelector: int EDGE_PADDING_DIP> = 9;

        <com.android.internal.widget.RotarySelector: boolean DBG> = 0;

        <com.android.internal.widget.RotarySelector: int ARROW_SCRUNCH_DIP> = 6;

        return;
    }
}
