public class com.android.internal.view.BaseIWindow extends android.view.IWindow$Stub
{
    public int mSeq;
    private android.view.IWindowSession mSession;

    public void <init>()
    {
        com.android.internal.view.BaseIWindow r0;

        r0 := @this: com.android.internal.view.BaseIWindow;

        specialinvoke r0.<android.view.IWindow$Stub: void <init>()>();

        return;
    }

    public void closeSystemDialogs(java.lang.String)
    {
        com.android.internal.view.BaseIWindow r0;
        java.lang.String r1;

        r0 := @this: com.android.internal.view.BaseIWindow;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void dispatchAppVisibility(boolean)
    {
        com.android.internal.view.BaseIWindow r0;
        boolean z0;

        r0 := @this: com.android.internal.view.BaseIWindow;

        z0 := @parameter0: boolean;

        return;
    }

    public void dispatchDragEvent(android.view.DragEvent)
    {
        com.android.internal.view.BaseIWindow r0;
        android.view.DragEvent r1;

        r0 := @this: com.android.internal.view.BaseIWindow;

        r1 := @parameter0: android.view.DragEvent;

        return;
    }

    public void dispatchGetNewSurface()
    {
        com.android.internal.view.BaseIWindow r0;

        r0 := @this: com.android.internal.view.BaseIWindow;

        return;
    }

    public void dispatchScreenState(boolean)
    {
        com.android.internal.view.BaseIWindow r0;
        boolean z0;

        r0 := @this: com.android.internal.view.BaseIWindow;

        z0 := @parameter0: boolean;

        return;
    }

    public void dispatchSystemUiVisibilityChanged(int, int, int, int)
    {
        com.android.internal.view.BaseIWindow r0;
        int i0, i1, i2, i3;

        r0 := @this: com.android.internal.view.BaseIWindow;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r0.<com.android.internal.view.BaseIWindow: int mSeq> = i0;

        return;
    }

    public void dispatchWallpaperCommand(java.lang.String, int, int, int, android.os.Bundle, boolean)
    {
        com.android.internal.view.BaseIWindow r0;
        java.lang.String r1;
        int i0, i1, i2;
        android.os.Bundle r2;
        boolean z0;
        android.view.IWindowSession $r4;
        android.os.IBinder $r5;
        android.os.RemoteException $r6;

        r0 := @this: com.android.internal.view.BaseIWindow;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: android.os.Bundle;

        z0 := @parameter5: boolean;

        if z0 == 0 goto label2;

     label1:
        $r4 = r0.<com.android.internal.view.BaseIWindow: android.view.IWindowSession mSession>;

        $r5 = virtualinvoke r0.<com.android.internal.view.BaseIWindow: android.os.IBinder asBinder()>();

        interfaceinvoke $r4.<android.view.IWindowSession: void wallpaperCommandComplete(android.os.IBinder,android.os.Bundle)>($r5, null);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void dispatchWallpaperOffsets(float, float, float, float, boolean)
    {
        com.android.internal.view.BaseIWindow r0;
        float f0, f1, f2, f3;
        boolean z0;
        android.view.IWindowSession $r2;
        android.os.IBinder $r3;
        android.os.RemoteException $r4;

        r0 := @this: com.android.internal.view.BaseIWindow;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        z0 := @parameter4: boolean;

        if z0 == 0 goto label2;

     label1:
        $r2 = r0.<com.android.internal.view.BaseIWindow: android.view.IWindowSession mSession>;

        $r3 = virtualinvoke r0.<com.android.internal.view.BaseIWindow: android.os.IBinder asBinder()>();

        interfaceinvoke $r2.<android.view.IWindowSession: void wallpaperOffsetsComplete(android.os.IBinder)>($r3);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void doneAnimating()
    {
        com.android.internal.view.BaseIWindow r0;

        r0 := @this: com.android.internal.view.BaseIWindow;

        return;
    }

    public void executeCommand(java.lang.String, java.lang.String, android.os.ParcelFileDescriptor)
    {
        com.android.internal.view.BaseIWindow r0;
        java.lang.String r1, r2;
        android.os.ParcelFileDescriptor r3;

        r0 := @this: com.android.internal.view.BaseIWindow;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.ParcelFileDescriptor;

        return;
    }

    public void moved(int, int)
    {
        com.android.internal.view.BaseIWindow r0;
        int i0, i1;

        r0 := @this: com.android.internal.view.BaseIWindow;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public void resized(android.graphics.Rect, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect, boolean, android.content.res.Configuration)
    {
        com.android.internal.view.BaseIWindow r0;
        android.graphics.Rect r1, r2, r3, r4;
        boolean z0;
        android.content.res.Configuration r5;
        android.view.IWindowSession $r7;
        android.os.RemoteException $r8;
        android.view.IWindow r9;

        r0 := @this: com.android.internal.view.BaseIWindow;

        r1 := @parameter0: android.graphics.Rect;

        r2 := @parameter1: android.graphics.Rect;

        r3 := @parameter2: android.graphics.Rect;

        r4 := @parameter3: android.graphics.Rect;

        z0 := @parameter4: boolean;

        r5 := @parameter5: android.content.res.Configuration;

        if z0 == 0 goto label2;

     label1:
        $r7 = r0.<com.android.internal.view.BaseIWindow: android.view.IWindowSession mSession>;

        r9 = (android.view.IWindow) r0;

        interfaceinvoke $r7.<android.view.IWindowSession: void finishDrawing(android.view.IWindow)>(r9);

     label2:
        return;

     label3:
        $r8 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setSession(android.view.IWindowSession)
    {
        com.android.internal.view.BaseIWindow r0;
        android.view.IWindowSession r1;

        r0 := @this: com.android.internal.view.BaseIWindow;

        r1 := @parameter0: android.view.IWindowSession;

        r0.<com.android.internal.view.BaseIWindow: android.view.IWindowSession mSession> = r1;

        return;
    }

    public void windowFocusChanged(boolean, boolean)
    {
        com.android.internal.view.BaseIWindow r0;
        boolean z0, z1;

        r0 := @this: com.android.internal.view.BaseIWindow;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        return;
    }
}
