public class com.android.internal.view.menu.IconMenuPresenter extends com.android.internal.view.menu.BaseMenuPresenter
{
    private static final java.lang.String OPEN_SUBMENU_KEY;
    private static final java.lang.String VIEWS_TAG;
    private int mMaxItems;
    private com.android.internal.view.menu.IconMenuItemView mMoreView;
    com.android.internal.view.menu.MenuDialogHelper mOpenSubMenu;
    int mOpenSubMenuId;
    com.android.internal.view.menu.IconMenuPresenter$SubMenuPresenterCallback mSubMenuPresenterCallback;

    public void <init>(android.content.Context)
    {
        com.android.internal.view.menu.IconMenuPresenter r0;
        android.content.Context r1;
        android.view.ContextThemeWrapper $r2;
        com.android.internal.view.menu.IconMenuPresenter$SubMenuPresenterCallback $r3;

        r0 := @this: com.android.internal.view.menu.IconMenuPresenter;

        r1 := @parameter0: android.content.Context;

        $r2 = new android.view.ContextThemeWrapper;

        specialinvoke $r2.<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>(r1, 16974595);

        specialinvoke r0.<com.android.internal.view.menu.BaseMenuPresenter: void <init>(android.content.Context,int,int)>($r2, 17367114, 17367113);

        r0.<com.android.internal.view.menu.IconMenuPresenter: int mMaxItems> = -1;

        $r3 = new com.android.internal.view.menu.IconMenuPresenter$SubMenuPresenterCallback;

        specialinvoke $r3.<com.android.internal.view.menu.IconMenuPresenter$SubMenuPresenterCallback: void <init>(com.android.internal.view.menu.IconMenuPresenter)>(r0);

        r0.<com.android.internal.view.menu.IconMenuPresenter: com.android.internal.view.menu.IconMenuPresenter$SubMenuPresenterCallback mSubMenuPresenterCallback> = $r3;

        return;
    }

    protected void addItemView(android.view.View, int)
    {
        com.android.internal.view.menu.IconMenuPresenter r0;
        android.view.View r1;
        int i0;
        com.android.internal.view.menu.IconMenuItemView r2;
        com.android.internal.view.menu.IconMenuView r3;
        com.android.internal.view.menu.MenuView $r4;
        android.graphics.drawable.Drawable $r5;

        r0 := @this: com.android.internal.view.menu.IconMenuPresenter;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 = (com.android.internal.view.menu.IconMenuItemView) r1;

        $r4 = r0.<com.android.internal.view.menu.IconMenuPresenter: com.android.internal.view.menu.MenuView mMenuView>;

        r3 = (com.android.internal.view.menu.IconMenuView) $r4;

        virtualinvoke r2.<com.android.internal.view.menu.IconMenuItemView: void setIconMenuView(com.android.internal.view.menu.IconMenuView)>(r3);

        virtualinvoke r2.<com.android.internal.view.menu.IconMenuItemView: void setItemInvoker(com.android.internal.view.menu.MenuBuilder$ItemInvoker)>(r3);

        $r5 = virtualinvoke r3.<com.android.internal.view.menu.IconMenuView: android.graphics.drawable.Drawable getItemBackgroundDrawable()>();

        virtualinvoke r2.<com.android.internal.view.menu.IconMenuItemView: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r5);

        specialinvoke r0.<com.android.internal.view.menu.BaseMenuPresenter: void addItemView(android.view.View,int)>(r1, i0);

        return;
    }

    public void bindItemView(com.android.internal.view.menu.MenuItemImpl, com.android.internal.view.menu.MenuView$ItemView)
    {
        com.android.internal.view.menu.IconMenuPresenter r0;
        com.android.internal.view.menu.MenuItemImpl r1;
        com.android.internal.view.menu.MenuView$ItemView r2;
        com.android.internal.view.menu.IconMenuItemView r3;
        byte b0;
        java.lang.CharSequence $r4;
        android.graphics.drawable.Drawable $r5;
        boolean $z0, $z1;
        com.android.internal.view.menu.IconMenuView$LayoutParams $r6;
        android.view.ViewGroup$LayoutParams r7;

        r0 := @this: com.android.internal.view.menu.IconMenuPresenter;

        r1 := @parameter0: com.android.internal.view.menu.MenuItemImpl;

        r2 := @parameter1: com.android.internal.view.menu.MenuView$ItemView;

        r3 = (com.android.internal.view.menu.IconMenuItemView) r2;

        virtualinvoke r3.<com.android.internal.view.menu.IconMenuItemView: void setItemData(com.android.internal.view.menu.MenuItemImpl)>(r1);

        $r4 = virtualinvoke r1.<com.android.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitleForItemView(com.android.internal.view.menu.MenuView$ItemView)>(r3);

        $r5 = virtualinvoke r1.<com.android.internal.view.menu.MenuItemImpl: android.graphics.drawable.Drawable getIcon()>();

        virtualinvoke r3.<com.android.internal.view.menu.IconMenuItemView: void initialize(java.lang.CharSequence,android.graphics.drawable.Drawable)>($r4, $r5);

        $z0 = virtualinvoke r1.<com.android.internal.view.menu.MenuItemImpl: boolean isVisible()>();

        if $z0 == 0 goto label2;

        b0 = 0;

     label1:
        virtualinvoke r3.<com.android.internal.view.menu.IconMenuItemView: void setVisibility(int)>(b0);

        $z1 = virtualinvoke r3.<com.android.internal.view.menu.IconMenuItemView: boolean isEnabled()>();

        virtualinvoke r3.<com.android.internal.view.menu.IconMenuItemView: void setEnabled(boolean)>($z1);

        $r6 = virtualinvoke r3.<com.android.internal.view.menu.IconMenuItemView: com.android.internal.view.menu.IconMenuView$LayoutParams getTextAppropriateLayoutParams()>();

        r7 = (android.view.ViewGroup$LayoutParams) $r6;

        virtualinvoke r3.<com.android.internal.view.menu.IconMenuItemView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r7);

        return;

     label2:
        b0 = 8;

        goto label1;
    }

    protected boolean filterLeftoverView(android.view.ViewGroup, int)
    {
        com.android.internal.view.menu.IconMenuPresenter r0;
        android.view.ViewGroup r1;
        int i0;
        android.view.View $r2;
        com.android.internal.view.menu.IconMenuItemView $r3;
        boolean $z0;

        r0 := @this: com.android.internal.view.menu.IconMenuPresenter;

        r1 := @parameter0: android.view.ViewGroup;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r1.<android.view.ViewGroup: android.view.View getChildAt(int)>(i0);

        $r3 = r0.<com.android.internal.view.menu.IconMenuPresenter: com.android.internal.view.menu.IconMenuItemView mMoreView>;

        if $r2 == $r3 goto label1;

        $z0 = specialinvoke r0.<com.android.internal.view.menu.BaseMenuPresenter: boolean filterLeftoverView(android.view.ViewGroup,int)>(r1, i0);

        return $z0;

     label1:
        return 0;
    }

    public int getNumActualItemsShown()
    {
        com.android.internal.view.menu.IconMenuPresenter r0;
        com.android.internal.view.menu.MenuView $r1;
        com.android.internal.view.menu.IconMenuView $r2;
        int $i0;

        r0 := @this: com.android.internal.view.menu.IconMenuPresenter;

        $r1 = r0.<com.android.internal.view.menu.IconMenuPresenter: com.android.internal.view.menu.MenuView mMenuView>;

        $r2 = (com.android.internal.view.menu.IconMenuView) $r1;

        $i0 = virtualinvoke $r2.<com.android.internal.view.menu.IconMenuView: int getNumActualItemsShown()>();

        return $i0;
    }

    public void initForMenu(android.content.Context, com.android.internal.view.menu.MenuBuilder)
    {
        com.android.internal.view.menu.IconMenuPresenter r0;
        android.content.Context r1;
        com.android.internal.view.menu.MenuBuilder r2;

        r0 := @this: com.android.internal.view.menu.IconMenuPresenter;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.internal.view.menu.MenuBuilder;

        specialinvoke r0.<com.android.internal.view.menu.BaseMenuPresenter: void initForMenu(android.content.Context,com.android.internal.view.menu.MenuBuilder)>(r1, r2);

        r0.<com.android.internal.view.menu.IconMenuPresenter: int mMaxItems> = -1;

        return;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        com.android.internal.view.menu.IconMenuPresenter r0;
        android.os.Parcelable r1;
        android.os.Bundle $r2;

        r0 := @this: com.android.internal.view.menu.IconMenuPresenter;

        r1 := @parameter0: android.os.Parcelable;

        $r2 = (android.os.Bundle) r1;

        virtualinvoke r0.<com.android.internal.view.menu.IconMenuPresenter: void restoreHierarchyState(android.os.Bundle)>($r2);

        return;
    }

    public android.os.Parcelable onSaveInstanceState()
    {
        com.android.internal.view.menu.IconMenuPresenter r0;
        android.os.Bundle r1, $r3;
        com.android.internal.view.menu.MenuView $r2;
        int $i0, $i1;

        r0 := @this: com.android.internal.view.menu.IconMenuPresenter;

        $r2 = r0.<com.android.internal.view.menu.IconMenuPresenter: com.android.internal.view.menu.MenuView mMenuView>;

        if $r2 != null goto label2;

        r1 = null;

     label1:
        return r1;

     label2:
        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

        r1 = $r3;

        virtualinvoke r0.<com.android.internal.view.menu.IconMenuPresenter: void saveHierarchyState(android.os.Bundle)>(r1);

        $i0 = r0.<com.android.internal.view.menu.IconMenuPresenter: int mOpenSubMenuId>;

        if $i0 <= 0 goto label1;

        $i1 = r0.<com.android.internal.view.menu.IconMenuPresenter: int mOpenSubMenuId>;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("android:menu:icon:submenu", $i1);

        return r1;
    }

    public boolean onSubMenuSelected(com.android.internal.view.menu.SubMenuBuilder)
    {
        com.android.internal.view.menu.IconMenuPresenter r0;
        com.android.internal.view.menu.SubMenuBuilder r1;
        com.android.internal.view.menu.MenuDialogHelper r2, $r3;
        boolean $z0;
        com.android.internal.view.menu.IconMenuPresenter$SubMenuPresenterCallback $r4;
        android.view.MenuItem $r5;
        int $i0;

        r0 := @this: com.android.internal.view.menu.IconMenuPresenter;

        r1 := @parameter0: com.android.internal.view.menu.SubMenuBuilder;

        $z0 = virtualinvoke r1.<com.android.internal.view.menu.SubMenuBuilder: boolean hasVisibleItems()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r3 = new com.android.internal.view.menu.MenuDialogHelper;

        specialinvoke $r3.<com.android.internal.view.menu.MenuDialogHelper: void <init>(com.android.internal.view.menu.MenuBuilder)>(r1);

        r2 = $r3;

        $r4 = r0.<com.android.internal.view.menu.IconMenuPresenter: com.android.internal.view.menu.IconMenuPresenter$SubMenuPresenterCallback mSubMenuPresenterCallback>;

        virtualinvoke r2.<com.android.internal.view.menu.MenuDialogHelper: void setPresenterCallback(com.android.internal.view.menu.MenuPresenter$Callback)>($r4);

        virtualinvoke r2.<com.android.internal.view.menu.MenuDialogHelper: void show(android.os.IBinder)>(null);

        r0.<com.android.internal.view.menu.IconMenuPresenter: com.android.internal.view.menu.MenuDialogHelper mOpenSubMenu> = r2;

        $r5 = virtualinvoke r1.<com.android.internal.view.menu.SubMenuBuilder: android.view.MenuItem getItem()>();

        $i0 = interfaceinvoke $r5.<android.view.MenuItem: int getItemId()>();

        r0.<com.android.internal.view.menu.IconMenuPresenter: int mOpenSubMenuId> = $i0;

        specialinvoke r0.<com.android.internal.view.menu.BaseMenuPresenter: boolean onSubMenuSelected(com.android.internal.view.menu.SubMenuBuilder)>(r1);

        return 1;
    }

    public void restoreHierarchyState(android.os.Bundle)
    {
        com.android.internal.view.menu.IconMenuPresenter r0;
        android.os.Bundle r1;
        android.util.SparseArray r2;
        int i0;
        android.view.MenuItem r3;
        com.android.internal.view.menu.MenuBuilder $r4, $r5;
        android.view.SubMenu $r6;
        com.android.internal.view.menu.SubMenuBuilder $r7;
        com.android.internal.view.menu.MenuView $r8;
        android.view.View $r9;

        r0 := @this: com.android.internal.view.menu.IconMenuPresenter;

        r1 := @parameter0: android.os.Bundle;

        r2 = virtualinvoke r1.<android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>("android:menu:icon");

        if r2 == null goto label1;

        $r8 = r0.<com.android.internal.view.menu.IconMenuPresenter: com.android.internal.view.menu.MenuView mMenuView>;

        $r9 = (android.view.View) $r8;

        virtualinvoke $r9.<android.view.View: void restoreHierarchyState(android.util.SparseArray)>(r2);

     label1:
        i0 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String,int)>("android:menu:icon:submenu", 0);

        if i0 <= 0 goto label2;

        $r4 = r0.<com.android.internal.view.menu.IconMenuPresenter: com.android.internal.view.menu.MenuBuilder mMenu>;

        if $r4 == null goto label2;

        $r5 = r0.<com.android.internal.view.menu.IconMenuPresenter: com.android.internal.view.menu.MenuBuilder mMenu>;

        r3 = virtualinvoke $r5.<com.android.internal.view.menu.MenuBuilder: android.view.MenuItem findItem(int)>(i0);

        if r3 == null goto label2;

        $r6 = interfaceinvoke r3.<android.view.MenuItem: android.view.SubMenu getSubMenu()>();

        $r7 = (com.android.internal.view.menu.SubMenuBuilder) $r6;

        virtualinvoke r0.<com.android.internal.view.menu.IconMenuPresenter: boolean onSubMenuSelected(com.android.internal.view.menu.SubMenuBuilder)>($r7);

     label2:
        return;
    }

    public void saveHierarchyState(android.os.Bundle)
    {
        com.android.internal.view.menu.IconMenuPresenter r0;
        android.os.Bundle r1;
        android.util.SparseArray r2, $r3;
        com.android.internal.view.menu.MenuView $r4, $r5;
        android.view.View $r6;

        r0 := @this: com.android.internal.view.menu.IconMenuPresenter;

        r1 := @parameter0: android.os.Bundle;

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        r2 = $r3;

        $r4 = r0.<com.android.internal.view.menu.IconMenuPresenter: com.android.internal.view.menu.MenuView mMenuView>;

        if $r4 == null goto label1;

        $r5 = r0.<com.android.internal.view.menu.IconMenuPresenter: com.android.internal.view.menu.MenuView mMenuView>;

        $r6 = (android.view.View) $r5;

        virtualinvoke $r6.<android.view.View: void saveHierarchyState(android.util.SparseArray)>(r2);

     label1:
        virtualinvoke r1.<android.os.Bundle: void putSparseParcelableArray(java.lang.String,android.util.SparseArray)>("android:menu:icon", r2);

        return;
    }

    public boolean shouldIncludeItem(int, com.android.internal.view.menu.MenuItemImpl)
    {
        com.android.internal.view.menu.IconMenuPresenter r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        com.android.internal.view.menu.MenuItemImpl r1;
        boolean z0, $z1;
        com.android.internal.view.menu.MenuBuilder $r2;
        java.util.ArrayList $r3;

        r0 := @this: com.android.internal.view.menu.IconMenuPresenter;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.internal.view.menu.MenuItemImpl;

        $r2 = r0.<com.android.internal.view.menu.IconMenuPresenter: com.android.internal.view.menu.MenuBuilder mMenu>;

        $r3 = virtualinvoke $r2.<com.android.internal.view.menu.MenuBuilder: java.util.ArrayList getNonActionItems()>();

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $i2 = r0.<com.android.internal.view.menu.IconMenuPresenter: int mMaxItems>;

        if $i1 != $i2 goto label1;

        $i5 = r0.<com.android.internal.view.menu.IconMenuPresenter: int mMaxItems>;

        if i0 < $i5 goto label2;

     label1:
        $i3 = r0.<com.android.internal.view.menu.IconMenuPresenter: int mMaxItems>;

        $i4 = -1 + $i3;

        if i0 >= $i4 goto label4;

     label2:
        z0 = 1;

     label3:
        if z0 == 0 goto label5;

        $z1 = virtualinvoke r1.<com.android.internal.view.menu.MenuItemImpl: boolean isActionButton()>();

        if $z1 != 0 goto label5;

        return 1;

     label4:
        z0 = 0;

        goto label3;

     label5:
        return 0;
    }

    public void updateMenuView(boolean)
    {
        com.android.internal.view.menu.IconMenuPresenter r0;
        boolean z0, z1;
        com.android.internal.view.menu.IconMenuView r1;
        java.util.ArrayList r2;
        int i0, $i1, $i2, $i3, $i4, $i5;
        com.android.internal.view.menu.MenuView $r3;
        com.android.internal.view.menu.MenuBuilder $r4;
        com.android.internal.view.menu.IconMenuItemView $r5, $r6, $r7, $r8, $r9, $r10, $r12, $r14;
        android.graphics.drawable.Drawable $r11;
        android.view.ViewParent $r13;

        r0 := @this: com.android.internal.view.menu.IconMenuPresenter;

        z0 := @parameter0: boolean;

        $r3 = r0.<com.android.internal.view.menu.IconMenuPresenter: com.android.internal.view.menu.MenuView mMenuView>;

        r1 = (com.android.internal.view.menu.IconMenuView) $r3;

        $i1 = r0.<com.android.internal.view.menu.IconMenuPresenter: int mMaxItems>;

        if $i1 >= 0 goto label1;

        $i5 = virtualinvoke r1.<com.android.internal.view.menu.IconMenuView: int getMaxItems()>();

        r0.<com.android.internal.view.menu.IconMenuPresenter: int mMaxItems> = $i5;

     label1:
        $r4 = r0.<com.android.internal.view.menu.IconMenuPresenter: com.android.internal.view.menu.MenuBuilder mMenu>;

        r2 = virtualinvoke $r4.<com.android.internal.view.menu.MenuBuilder: java.util.ArrayList getNonActionItems()>();

        $i2 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        $i3 = r0.<com.android.internal.view.menu.IconMenuPresenter: int mMaxItems>;

        if $i2 <= $i3 goto label7;

        z1 = 1;

     label2:
        specialinvoke r0.<com.android.internal.view.menu.BaseMenuPresenter: void updateMenuView(boolean)>(z0);

        if z1 == 0 goto label8;

        $r8 = r0.<com.android.internal.view.menu.IconMenuPresenter: com.android.internal.view.menu.IconMenuItemView mMoreView>;

        if $r8 == null goto label3;

        $r14 = r0.<com.android.internal.view.menu.IconMenuPresenter: com.android.internal.view.menu.IconMenuItemView mMoreView>;

        $r13 = virtualinvoke $r14.<com.android.internal.view.menu.IconMenuItemView: android.view.ViewParent getParent()>();

        if $r13 == r1 goto label8;

     label3:
        $r7 = r0.<com.android.internal.view.menu.IconMenuPresenter: com.android.internal.view.menu.IconMenuItemView mMoreView>;

        if $r7 != null goto label4;

        $r9 = virtualinvoke r1.<com.android.internal.view.menu.IconMenuView: com.android.internal.view.menu.IconMenuItemView createMoreItemView()>();

        r0.<com.android.internal.view.menu.IconMenuPresenter: com.android.internal.view.menu.IconMenuItemView mMoreView> = $r9;

        $r12 = r0.<com.android.internal.view.menu.IconMenuPresenter: com.android.internal.view.menu.IconMenuItemView mMoreView>;

        $r11 = virtualinvoke r1.<com.android.internal.view.menu.IconMenuView: android.graphics.drawable.Drawable getItemBackgroundDrawable()>();

        virtualinvoke $r12.<com.android.internal.view.menu.IconMenuItemView: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r11);

     label4:
        $r10 = r0.<com.android.internal.view.menu.IconMenuPresenter: com.android.internal.view.menu.IconMenuItemView mMoreView>;

        virtualinvoke r1.<com.android.internal.view.menu.IconMenuView: void addView(android.view.View)>($r10);

     label5:
        if z1 == 0 goto label9;

        $i4 = r0.<com.android.internal.view.menu.IconMenuPresenter: int mMaxItems>;

        i0 = -1 + $i4;

     label6:
        virtualinvoke r1.<com.android.internal.view.menu.IconMenuView: void setNumActualItemsShown(int)>(i0);

        return;

     label7:
        z1 = 0;

        goto label2;

     label8:
        if z1 != 0 goto label5;

        $r5 = r0.<com.android.internal.view.menu.IconMenuPresenter: com.android.internal.view.menu.IconMenuItemView mMoreView>;

        if $r5 == null goto label5;

        $r6 = r0.<com.android.internal.view.menu.IconMenuPresenter: com.android.internal.view.menu.IconMenuItemView mMoreView>;

        virtualinvoke r1.<com.android.internal.view.menu.IconMenuView: void removeView(android.view.View)>($r6);

        goto label5;

     label9:
        i0 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        goto label6;
    }

    public static void <clinit>()
    {
        <com.android.internal.view.menu.IconMenuPresenter: java.lang.String VIEWS_TAG> = "android:menu:icon";

        <com.android.internal.view.menu.IconMenuPresenter: java.lang.String OPEN_SUBMENU_KEY> = "android:menu:icon:submenu";

        return;
    }
}
