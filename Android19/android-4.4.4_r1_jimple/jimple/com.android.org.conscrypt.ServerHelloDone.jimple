public class com.android.org.conscrypt.ServerHelloDone extends com.android.org.conscrypt.Message
{

    public void <init>()
    {
        com.android.org.conscrypt.ServerHelloDone r0;

        r0 := @this: com.android.org.conscrypt.ServerHelloDone;

        specialinvoke r0.<com.android.org.conscrypt.Message: void <init>()>();

        return;
    }

    public void <init>(com.android.org.conscrypt.HandshakeIODataStream, int) throws java.io.IOException
    {
        com.android.org.conscrypt.ServerHelloDone r0;
        com.android.org.conscrypt.HandshakeIODataStream r1;
        int i0;

        r0 := @this: com.android.org.conscrypt.ServerHelloDone;

        r1 := @parameter0: com.android.org.conscrypt.HandshakeIODataStream;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.org.conscrypt.Message: void <init>()>();

        if i0 == 0 goto label1;

        virtualinvoke r0.<com.android.org.conscrypt.ServerHelloDone: void fatalAlert(byte,java.lang.String)>(50, "DECODE ERROR: incorrect ServerHelloDone");

     label1:
        return;
    }

    public int getType()
    {
        com.android.org.conscrypt.ServerHelloDone r0;

        r0 := @this: com.android.org.conscrypt.ServerHelloDone;

        return 14;
    }

    public int length()
    {
        com.android.org.conscrypt.ServerHelloDone r0;

        r0 := @this: com.android.org.conscrypt.ServerHelloDone;

        return 0;
    }

    public void send(com.android.org.conscrypt.HandshakeIODataStream)
    {
        com.android.org.conscrypt.ServerHelloDone r0;
        com.android.org.conscrypt.HandshakeIODataStream r1;

        r0 := @this: com.android.org.conscrypt.ServerHelloDone;

        r1 := @parameter0: com.android.org.conscrypt.HandshakeIODataStream;

        return;
    }
}
