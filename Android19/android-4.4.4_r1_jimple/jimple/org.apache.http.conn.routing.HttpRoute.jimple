public final class org.apache.http.conn.routing.HttpRoute extends java.lang.Object implements org.apache.http.conn.routing.RouteInfo, java.lang.Cloneable
{
    private final org.apache.http.conn.routing.RouteInfo$LayerType layered;
    private final java.net.InetAddress localAddress;
    private final org.apache.http.HttpHost[] proxyChain;
    private final boolean secure;
    private final org.apache.http.HttpHost targetHost;
    private final org.apache.http.conn.routing.RouteInfo$TunnelType tunnelled;

    private void <init>(java.net.InetAddress, org.apache.http.HttpHost, org.apache.http.HttpHost[], boolean, org.apache.http.conn.routing.RouteInfo$TunnelType, org.apache.http.conn.routing.RouteInfo$LayerType)
    {
        org.apache.http.conn.routing.HttpRoute r0;
        java.net.InetAddress r1;
        org.apache.http.HttpHost r2;
        org.apache.http.HttpHost[] r3;
        boolean z0;
        org.apache.http.conn.routing.RouteInfo$TunnelType r4, $r6;
        org.apache.http.conn.routing.RouteInfo$LayerType r5;
        java.lang.IllegalArgumentException $r7, $r8;

        r0 := @this: org.apache.http.conn.routing.HttpRoute;

        r1 := @parameter0: java.net.InetAddress;

        r2 := @parameter1: org.apache.http.HttpHost;

        r3 := @parameter2: org.apache.http.HttpHost[];

        z0 := @parameter3: boolean;

        r4 := @parameter4: org.apache.http.conn.routing.RouteInfo$TunnelType;

        r5 := @parameter5: org.apache.http.conn.routing.RouteInfo$LayerType;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r2 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Target host may not be null.");

        throw $r8;

     label1:
        $r6 = <org.apache.http.conn.routing.RouteInfo$TunnelType: org.apache.http.conn.routing.RouteInfo$TunnelType TUNNELLED>;

        if r4 != $r6 goto label2;

        if r3 != null goto label2;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Proxy required if tunnelled.");

        throw $r7;

     label2:
        if r4 != null goto label3;

        r4 = <org.apache.http.conn.routing.RouteInfo$TunnelType: org.apache.http.conn.routing.RouteInfo$TunnelType PLAIN>;

     label3:
        if r5 != null goto label4;

        r5 = <org.apache.http.conn.routing.RouteInfo$LayerType: org.apache.http.conn.routing.RouteInfo$LayerType PLAIN>;

     label4:
        r0.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost targetHost> = r2;

        r0.<org.apache.http.conn.routing.HttpRoute: java.net.InetAddress localAddress> = r1;

        r0.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost[] proxyChain> = r3;

        r0.<org.apache.http.conn.routing.HttpRoute: boolean secure> = z0;

        r0.<org.apache.http.conn.routing.HttpRoute: org.apache.http.conn.routing.RouteInfo$TunnelType tunnelled> = r4;

        r0.<org.apache.http.conn.routing.HttpRoute: org.apache.http.conn.routing.RouteInfo$LayerType layered> = r5;

        return;
    }

    public void <init>(org.apache.http.HttpHost)
    {
        org.apache.http.conn.routing.HttpRoute r0;
        org.apache.http.HttpHost r1;
        org.apache.http.conn.routing.RouteInfo$LayerType $r2;
        org.apache.http.conn.routing.RouteInfo$TunnelType $r3;

        r0 := @this: org.apache.http.conn.routing.HttpRoute;

        r1 := @parameter0: org.apache.http.HttpHost;

        $r3 = <org.apache.http.conn.routing.RouteInfo$TunnelType: org.apache.http.conn.routing.RouteInfo$TunnelType PLAIN>;

        $r2 = <org.apache.http.conn.routing.RouteInfo$LayerType: org.apache.http.conn.routing.RouteInfo$LayerType PLAIN>;

        specialinvoke r0.<org.apache.http.conn.routing.HttpRoute: void <init>(java.net.InetAddress,org.apache.http.HttpHost,org.apache.http.HttpHost[],boolean,org.apache.http.conn.routing.RouteInfo$TunnelType,org.apache.http.conn.routing.RouteInfo$LayerType)>(null, r1, null, 0, $r3, $r2);

        return;
    }

    public void <init>(org.apache.http.HttpHost, java.net.InetAddress, org.apache.http.HttpHost, boolean)
    {
        org.apache.http.conn.routing.HttpRoute r0;
        org.apache.http.HttpHost r1, r3;
        java.net.InetAddress r2;
        boolean z0;
        org.apache.http.HttpHost[] r4;
        org.apache.http.conn.routing.RouteInfo$TunnelType r5;
        org.apache.http.conn.routing.RouteInfo$LayerType r6;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: org.apache.http.conn.routing.HttpRoute;

        r1 := @parameter0: org.apache.http.HttpHost;

        r2 := @parameter1: java.net.InetAddress;

        r3 := @parameter2: org.apache.http.HttpHost;

        z0 := @parameter3: boolean;

        r4 = staticinvoke <org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost[] toChain(org.apache.http.HttpHost)>(r3);

        if z0 == 0 goto label3;

        r5 = <org.apache.http.conn.routing.RouteInfo$TunnelType: org.apache.http.conn.routing.RouteInfo$TunnelType TUNNELLED>;

     label1:
        if z0 == 0 goto label4;

        r6 = <org.apache.http.conn.routing.RouteInfo$LayerType: org.apache.http.conn.routing.RouteInfo$LayerType LAYERED>;

     label2:
        specialinvoke r0.<org.apache.http.conn.routing.HttpRoute: void <init>(java.net.InetAddress,org.apache.http.HttpHost,org.apache.http.HttpHost[],boolean,org.apache.http.conn.routing.RouteInfo$TunnelType,org.apache.http.conn.routing.RouteInfo$LayerType)>(r2, r1, r4, z0, r5, r6);

        if r3 != null goto label5;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Proxy host may not be null.");

        throw $r7;

     label3:
        r5 = <org.apache.http.conn.routing.RouteInfo$TunnelType: org.apache.http.conn.routing.RouteInfo$TunnelType PLAIN>;

        goto label1;

     label4:
        r6 = <org.apache.http.conn.routing.RouteInfo$LayerType: org.apache.http.conn.routing.RouteInfo$LayerType PLAIN>;

        goto label2;

     label5:
        return;
    }

    public void <init>(org.apache.http.HttpHost, java.net.InetAddress, org.apache.http.HttpHost, boolean, org.apache.http.conn.routing.RouteInfo$TunnelType, org.apache.http.conn.routing.RouteInfo$LayerType)
    {
        org.apache.http.conn.routing.HttpRoute r0;
        org.apache.http.HttpHost r1, r3;
        java.net.InetAddress r2;
        boolean z0;
        org.apache.http.conn.routing.RouteInfo$TunnelType r4;
        org.apache.http.conn.routing.RouteInfo$LayerType r5;
        org.apache.http.HttpHost[] $r6;

        r0 := @this: org.apache.http.conn.routing.HttpRoute;

        r1 := @parameter0: org.apache.http.HttpHost;

        r2 := @parameter1: java.net.InetAddress;

        r3 := @parameter2: org.apache.http.HttpHost;

        z0 := @parameter3: boolean;

        r4 := @parameter4: org.apache.http.conn.routing.RouteInfo$TunnelType;

        r5 := @parameter5: org.apache.http.conn.routing.RouteInfo$LayerType;

        $r6 = staticinvoke <org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost[] toChain(org.apache.http.HttpHost)>(r3);

        specialinvoke r0.<org.apache.http.conn.routing.HttpRoute: void <init>(java.net.InetAddress,org.apache.http.HttpHost,org.apache.http.HttpHost[],boolean,org.apache.http.conn.routing.RouteInfo$TunnelType,org.apache.http.conn.routing.RouteInfo$LayerType)>(r2, r1, $r6, z0, r4, r5);

        return;
    }

    public void <init>(org.apache.http.HttpHost, java.net.InetAddress, boolean)
    {
        org.apache.http.conn.routing.HttpRoute r0;
        org.apache.http.HttpHost r1;
        java.net.InetAddress r2;
        boolean z0;
        org.apache.http.conn.routing.RouteInfo$LayerType $r3;
        org.apache.http.conn.routing.RouteInfo$TunnelType $r4;

        r0 := @this: org.apache.http.conn.routing.HttpRoute;

        r1 := @parameter0: org.apache.http.HttpHost;

        r2 := @parameter1: java.net.InetAddress;

        z0 := @parameter2: boolean;

        $r4 = <org.apache.http.conn.routing.RouteInfo$TunnelType: org.apache.http.conn.routing.RouteInfo$TunnelType PLAIN>;

        $r3 = <org.apache.http.conn.routing.RouteInfo$LayerType: org.apache.http.conn.routing.RouteInfo$LayerType PLAIN>;

        specialinvoke r0.<org.apache.http.conn.routing.HttpRoute: void <init>(java.net.InetAddress,org.apache.http.HttpHost,org.apache.http.HttpHost[],boolean,org.apache.http.conn.routing.RouteInfo$TunnelType,org.apache.http.conn.routing.RouteInfo$LayerType)>(r2, r1, null, z0, $r4, $r3);

        return;
    }

    public void <init>(org.apache.http.HttpHost, java.net.InetAddress, org.apache.http.HttpHost[], boolean, org.apache.http.conn.routing.RouteInfo$TunnelType, org.apache.http.conn.routing.RouteInfo$LayerType)
    {
        org.apache.http.conn.routing.HttpRoute r0;
        org.apache.http.HttpHost r1;
        java.net.InetAddress r2;
        org.apache.http.HttpHost[] r3, $r6;
        boolean z0;
        org.apache.http.conn.routing.RouteInfo$TunnelType r4;
        org.apache.http.conn.routing.RouteInfo$LayerType r5;

        r0 := @this: org.apache.http.conn.routing.HttpRoute;

        r1 := @parameter0: org.apache.http.HttpHost;

        r2 := @parameter1: java.net.InetAddress;

        r3 := @parameter2: org.apache.http.HttpHost[];

        z0 := @parameter3: boolean;

        r4 := @parameter4: org.apache.http.conn.routing.RouteInfo$TunnelType;

        r5 := @parameter5: org.apache.http.conn.routing.RouteInfo$LayerType;

        $r6 = staticinvoke <org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost[] toChain(org.apache.http.HttpHost[])>(r3);

        specialinvoke r0.<org.apache.http.conn.routing.HttpRoute: void <init>(java.net.InetAddress,org.apache.http.HttpHost,org.apache.http.HttpHost[],boolean,org.apache.http.conn.routing.RouteInfo$TunnelType,org.apache.http.conn.routing.RouteInfo$LayerType)>(r2, r1, $r6, z0, r4, r5);

        return;
    }

    private static org.apache.http.HttpHost[] toChain(org.apache.http.HttpHost)
    {
        org.apache.http.HttpHost r0;
        org.apache.http.HttpHost[] $r1;

        r0 := @parameter0: org.apache.http.HttpHost;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = newarray (org.apache.http.HttpHost)[1];

        $r1[0] = r0;

        return $r1;
    }

    private static org.apache.http.HttpHost[] toChain(org.apache.http.HttpHost[])
    {
        org.apache.http.HttpHost[] r0, r1;
        int i0, i1, $i2, $i3, $i4;
        org.apache.http.HttpHost $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @parameter0: org.apache.http.HttpHost[];

        if r0 == null goto label1;

        $i2 = lengthof r0;

        if $i2 >= 1 goto label2;

     label1:
        return null;

     label2:
        i0 = lengthof r0;

        i1 = 0;

     label3:
        if i1 >= i0 goto label5;

        $r2 = r0[i1];

        if $r2 != null goto label4;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Proxy chain may not contain null elements.");

        throw $r3;

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        $i3 = lengthof r0;

        r1 = newarray (org.apache.http.HttpHost)[$i3];

        $i4 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, $i4);

        return r1;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.http.conn.routing.HttpRoute r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.http.conn.routing.HttpRoute;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        return $r1;
    }

    public final boolean equals(java.lang.Object)
    {
        org.apache.http.conn.routing.HttpRoute r0, r2;
        java.lang.Object r1;
        boolean z0, z1, z2, z3, z4, z5, z6, $z7, $z8, $z9, $z10;
        int i0, $i1, $i2, $i3;
        org.apache.http.HttpHost $r3, $r4, $r13, $r14;
        java.net.InetAddress $r5, $r7, $r22, $r24, $r25;
        org.apache.http.HttpHost[] $r6, $r8, $r9, $r10, $r11, $r12, $r18, $r19, $r21, $r23;
        org.apache.http.conn.routing.RouteInfo$TunnelType $r15, $r17;
        org.apache.http.conn.routing.RouteInfo$LayerType $r16, $r20;

        r0 := @this: org.apache.http.conn.routing.HttpRoute;

        r1 := @parameter0: java.lang.Object;

        z0 = 1;

        if r1 != r0 goto label01;

        return 1;

     label01:
        $z7 = r1 instanceof org.apache.http.conn.routing.HttpRoute;

        if $z7 != 0 goto label02;

        return 0;

     label02:
        r2 = (org.apache.http.conn.routing.HttpRoute) r1;

        $r4 = r0.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost targetHost>;

        $r3 = r2.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost targetHost>;

        z1 = virtualinvoke $r4.<org.apache.http.HttpHost: boolean equals(java.lang.Object)>($r3);

        $r7 = r0.<org.apache.http.conn.routing.HttpRoute: java.net.InetAddress localAddress>;

        $r5 = r2.<org.apache.http.conn.routing.HttpRoute: java.net.InetAddress localAddress>;

        if $r7 == $r5 goto label03;

        $r22 = r0.<org.apache.http.conn.routing.HttpRoute: java.net.InetAddress localAddress>;

        if $r22 == null goto label09;

        $r25 = r0.<org.apache.http.conn.routing.HttpRoute: java.net.InetAddress localAddress>;

        $r24 = r2.<org.apache.http.conn.routing.HttpRoute: java.net.InetAddress localAddress>;

        $z10 = virtualinvoke $r25.<java.net.InetAddress: boolean equals(java.lang.Object)>($r24);

        if $z10 == 0 goto label09;

     label03:
        z2 = 1;

     label04:
        z3 = z1 & z2;

        $r8 = r0.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost[] proxyChain>;

        $r6 = r2.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost[] proxyChain>;

        if $r8 == $r6 goto label05;

        $r21 = r0.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost[] proxyChain>;

        if $r21 == null goto label10;

        $r18 = r2.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost[] proxyChain>;

        if $r18 == null goto label10;

        $r19 = r0.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost[] proxyChain>;

        $i2 = lengthof $r19;

        $r23 = r2.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost[] proxyChain>;

        $i3 = lengthof $r23;

        if $i2 != $i3 goto label10;

     label05:
        z4 = 1;

     label06:
        z5 = z3 & z4;

        $z9 = r0.<org.apache.http.conn.routing.HttpRoute: boolean secure>;

        $z8 = r2.<org.apache.http.conn.routing.HttpRoute: boolean secure>;

        if $z9 != $z8 goto label11;

        $r17 = r0.<org.apache.http.conn.routing.HttpRoute: org.apache.http.conn.routing.RouteInfo$TunnelType tunnelled>;

        $r15 = r2.<org.apache.http.conn.routing.HttpRoute: org.apache.http.conn.routing.RouteInfo$TunnelType tunnelled>;

        if $r17 != $r15 goto label11;

        $r20 = r0.<org.apache.http.conn.routing.HttpRoute: org.apache.http.conn.routing.RouteInfo$LayerType layered>;

        $r16 = r2.<org.apache.http.conn.routing.HttpRoute: org.apache.http.conn.routing.RouteInfo$LayerType layered>;

        if $r20 != $r16 goto label11;

     label07:
        z6 = z5 & z0;

        if z6 == 0 goto label12;

        $r9 = r0.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost[] proxyChain>;

        if $r9 == null goto label12;

        i0 = 0;

     label08:
        if z6 == 0 goto label12;

        $r10 = r0.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost[] proxyChain>;

        $i1 = lengthof $r10;

        if i0 >= $i1 goto label12;

        $r12 = r0.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost[] proxyChain>;

        $r13 = $r12[i0];

        $r11 = r2.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost[] proxyChain>;

        $r14 = $r11[i0];

        z6 = virtualinvoke $r13.<org.apache.http.HttpHost: boolean equals(java.lang.Object)>($r14);

        i0 = i0 + 1;

        goto label08;

     label09:
        z2 = 0;

        goto label04;

     label10:
        z4 = 0;

        goto label06;

     label11:
        z0 = 0;

        goto label07;

     label12:
        return z6;
    }

    public final int getHopCount()
    {
        org.apache.http.conn.routing.HttpRoute r0;
        org.apache.http.HttpHost[] $r1, $r2;
        int $i0, $i1;

        r0 := @this: org.apache.http.conn.routing.HttpRoute;

        $r1 = r0.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost[] proxyChain>;

        if $r1 != null goto label1;

        return 1;

     label1:
        $r2 = r0.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost[] proxyChain>;

        $i0 = lengthof $r2;

        $i1 = 1 + $i0;

        return $i1;
    }

    public final org.apache.http.HttpHost getHopTarget(int)
    {
        org.apache.http.conn.routing.HttpRoute r0;
        int i0, i1, $i2;
        org.apache.http.HttpHost $r1, $r3;
        org.apache.http.HttpHost[] $r2;
        java.lang.IllegalArgumentException $r4, $r11;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r12, $r13, $r15;
        java.lang.String $r10, $r14;

        r0 := @this: org.apache.http.conn.routing.HttpRoute;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hop index must not be negative: ");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r11;

     label1:
        i1 = virtualinvoke r0.<org.apache.http.conn.routing.HttpRoute: int getHopCount()>();

        if i0 < i1 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hop index ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exceeds route length ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r4;

     label2:
        $i2 = i1 - 1;

        if i0 >= $i2 goto label3;

        $r2 = r0.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost[] proxyChain>;

        $r3 = $r2[i0];

        return $r3;

     label3:
        $r1 = r0.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost targetHost>;

        return $r1;
    }

    public final org.apache.http.conn.routing.RouteInfo$LayerType getLayerType()
    {
        org.apache.http.conn.routing.HttpRoute r0;
        org.apache.http.conn.routing.RouteInfo$LayerType $r1;

        r0 := @this: org.apache.http.conn.routing.HttpRoute;

        $r1 = r0.<org.apache.http.conn.routing.HttpRoute: org.apache.http.conn.routing.RouteInfo$LayerType layered>;

        return $r1;
    }

    public final java.net.InetAddress getLocalAddress()
    {
        org.apache.http.conn.routing.HttpRoute r0;
        java.net.InetAddress $r1;

        r0 := @this: org.apache.http.conn.routing.HttpRoute;

        $r1 = r0.<org.apache.http.conn.routing.HttpRoute: java.net.InetAddress localAddress>;

        return $r1;
    }

    public final org.apache.http.HttpHost getProxyHost()
    {
        org.apache.http.conn.routing.HttpRoute r0;
        org.apache.http.HttpHost[] $r1, $r2;
        org.apache.http.HttpHost $r3;

        r0 := @this: org.apache.http.conn.routing.HttpRoute;

        $r1 = r0.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost[] proxyChain>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost[] proxyChain>;

        $r3 = $r2[0];

        return $r3;
    }

    public final org.apache.http.HttpHost getTargetHost()
    {
        org.apache.http.conn.routing.HttpRoute r0;
        org.apache.http.HttpHost $r1;

        r0 := @this: org.apache.http.conn.routing.HttpRoute;

        $r1 = r0.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost targetHost>;

        return $r1;
    }

    public final org.apache.http.conn.routing.RouteInfo$TunnelType getTunnelType()
    {
        org.apache.http.conn.routing.HttpRoute r0;
        org.apache.http.conn.routing.RouteInfo$TunnelType $r1;

        r0 := @this: org.apache.http.conn.routing.HttpRoute;

        $r1 = r0.<org.apache.http.conn.routing.HttpRoute: org.apache.http.conn.routing.RouteInfo$TunnelType tunnelled>;

        return $r1;
    }

    public final int hashCode()
    {
        org.apache.http.conn.routing.HttpRoute r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        org.apache.http.HttpHost[] r1, $r4, $r7;
        org.apache.http.HttpHost $r2, $r8;
        java.net.InetAddress $r3, $r9;
        boolean $z0;
        org.apache.http.conn.routing.RouteInfo$TunnelType $r5;
        org.apache.http.conn.routing.RouteInfo$LayerType $r6;

        r0 := @this: org.apache.http.conn.routing.HttpRoute;

        $r2 = r0.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost targetHost>;

        i0 = virtualinvoke $r2.<org.apache.http.HttpHost: int hashCode()>();

        $r3 = r0.<org.apache.http.conn.routing.HttpRoute: java.net.InetAddress localAddress>;

        if $r3 == null goto label1;

        $r9 = r0.<org.apache.http.conn.routing.HttpRoute: java.net.InetAddress localAddress>;

        $i9 = virtualinvoke $r9.<java.net.InetAddress: int hashCode()>();

        i0 = i0 ^ $i9;

     label1:
        $r4 = r0.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost[] proxyChain>;

        if $r4 == null goto label3;

        $r7 = r0.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost[] proxyChain>;

        $i7 = lengthof $r7;

        i0 = i0 ^ $i7;

        r1 = r0.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost[] proxyChain>;

        i1 = lengthof r1;

        i2 = 0;

     label2:
        if i2 >= i1 goto label3;

        $r8 = r1[i2];

        $i8 = virtualinvoke $r8.<org.apache.http.HttpHost: int hashCode()>();

        i0 = i0 ^ $i8;

        i2 = i2 + 1;

        goto label2;

     label3:
        $z0 = r0.<org.apache.http.conn.routing.HttpRoute: boolean secure>;

        if $z0 == 0 goto label4;

        i0 = i0 ^ 286331153;

     label4:
        $r5 = r0.<org.apache.http.conn.routing.HttpRoute: org.apache.http.conn.routing.RouteInfo$TunnelType tunnelled>;

        $i3 = virtualinvoke $r5.<org.apache.http.conn.routing.RouteInfo$TunnelType: int hashCode()>();

        $i4 = i0 ^ $i3;

        $r6 = r0.<org.apache.http.conn.routing.HttpRoute: org.apache.http.conn.routing.RouteInfo$LayerType layered>;

        $i5 = virtualinvoke $r6.<org.apache.http.conn.routing.RouteInfo$LayerType: int hashCode()>();

        $i6 = $i4 ^ $i5;

        return $i6;
    }

    public final boolean isLayered()
    {
        org.apache.http.conn.routing.HttpRoute r0;
        org.apache.http.conn.routing.RouteInfo$LayerType $r1, $r2;

        r0 := @this: org.apache.http.conn.routing.HttpRoute;

        $r2 = r0.<org.apache.http.conn.routing.HttpRoute: org.apache.http.conn.routing.RouteInfo$LayerType layered>;

        $r1 = <org.apache.http.conn.routing.RouteInfo$LayerType: org.apache.http.conn.routing.RouteInfo$LayerType LAYERED>;

        if $r2 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final boolean isSecure()
    {
        org.apache.http.conn.routing.HttpRoute r0;
        boolean $z0;

        r0 := @this: org.apache.http.conn.routing.HttpRoute;

        $z0 = r0.<org.apache.http.conn.routing.HttpRoute: boolean secure>;

        return $z0;
    }

    public final boolean isTunnelled()
    {
        org.apache.http.conn.routing.HttpRoute r0;
        org.apache.http.conn.routing.RouteInfo$TunnelType $r1, $r2;

        r0 := @this: org.apache.http.conn.routing.HttpRoute;

        $r2 = r0.<org.apache.http.conn.routing.HttpRoute: org.apache.http.conn.routing.RouteInfo$TunnelType tunnelled>;

        $r1 = <org.apache.http.conn.routing.RouteInfo$TunnelType: org.apache.http.conn.routing.RouteInfo$TunnelType TUNNELLED>;

        if $r2 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final java.lang.String toString()
    {
        org.apache.http.conn.routing.HttpRoute r0;
        java.lang.StringBuilder r1, $r3;
        org.apache.http.HttpHost[] r2, $r11;
        int i0, i1, $i2, $i3, $i4;
        java.net.InetAddress $r4, $r24;
        org.apache.http.conn.routing.RouteInfo$TunnelType $r6, $r9;
        org.apache.http.conn.routing.RouteInfo$LayerType $r8, $r10;
        boolean $z0;
        org.apache.http.HttpHost $r14, $r18;
        java.lang.String $r15;

        r0 := @this: org.apache.http.conn.routing.HttpRoute;

        $r3 = new java.lang.StringBuilder;

        $i2 = virtualinvoke r0.<org.apache.http.conn.routing.HttpRoute: int getHopCount()>();

        $i3 = 30 * $i2;

        $i4 = 50 + $i3;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>($i4);

        r1 = $r3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HttpRoute[");

        $r4 = r0.<org.apache.http.conn.routing.HttpRoute: java.net.InetAddress localAddress>;

        if $r4 == null goto label1;

        $r24 = r0.<org.apache.http.conn.routing.HttpRoute: java.net.InetAddress localAddress>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("->");

     label1:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(123);

        $r9 = r0.<org.apache.http.conn.routing.HttpRoute: org.apache.http.conn.routing.RouteInfo$TunnelType tunnelled>;

        $r6 = <org.apache.http.conn.routing.RouteInfo$TunnelType: org.apache.http.conn.routing.RouteInfo$TunnelType TUNNELLED>;

        if $r9 != $r6 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(116);

     label2:
        $r10 = r0.<org.apache.http.conn.routing.HttpRoute: org.apache.http.conn.routing.RouteInfo$LayerType layered>;

        $r8 = <org.apache.http.conn.routing.RouteInfo$LayerType: org.apache.http.conn.routing.RouteInfo$LayerType LAYERED>;

        if $r10 != $r8 goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(108);

     label3:
        $z0 = r0.<org.apache.http.conn.routing.HttpRoute: boolean secure>;

        if $z0 == 0 goto label4;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(115);

     label4:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}->");

        $r11 = r0.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost[] proxyChain>;

        if $r11 == null goto label6;

        r2 = r0.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost[] proxyChain>;

        i0 = lengthof r2;

        i1 = 0;

     label5:
        if i1 >= i0 goto label6;

        $r18 = r2[i1];

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("->");

        i1 = i1 + 1;

        goto label5;

     label6:
        $r14 = r0.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost targetHost>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r15 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }
}
