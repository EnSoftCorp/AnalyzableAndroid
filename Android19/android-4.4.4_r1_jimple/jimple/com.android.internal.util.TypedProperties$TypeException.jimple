public class com.android.internal.util.TypedProperties$TypeException extends java.lang.IllegalArgumentException
{

    void <init>(java.lang.String, java.lang.Object, java.lang.String)
    {
        com.android.internal.util.TypedProperties$TypeException r0;
        java.lang.String r1, r3, $r8, $r12;
        java.lang.Object r2;
        java.lang.StringBuilder $r4, $r5, $r6, $r9, $r10, $r11;
        java.lang.Class $r7;

        r0 := @this: com.android.internal.util.TypedProperties$TypeException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has type ");

        $r7 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", not ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        return;
    }
}
