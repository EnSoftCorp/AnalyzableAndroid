final class com.android.server.accessibility.AccessibilityManagerService$MainHandler extends android.os.Handler
{
    public static final int MSG_ANNOUNCE_NEW_USER_IF_NEEDED;
    public static final int MSG_SEND_ACCESSIBILITY_EVENT_TO_INPUT_FILTER;
    public static final int MSG_SEND_CLEARED_STATE_TO_CLIENTS_FOR_USER;
    public static final int MSG_SEND_KEY_EVENT_TO_INPUT_FILTER;
    public static final int MSG_SEND_STATE_TO_CLIENTS;
    public static final int MSG_SHOW_ENABLED_TOUCH_EXPLORATION_DIALOG;
    public static final int MSG_UPDATE_ACTIVE_WINDOW;
    public static final int MSG_UPDATE_INPUT_FILTER;
    final com.android.server.accessibility.AccessibilityManagerService this$0;

    public void <init>(com.android.server.accessibility.AccessibilityManagerService, android.os.Looper)
    {
        com.android.server.accessibility.AccessibilityManagerService$MainHandler r0;
        com.android.server.accessibility.AccessibilityManagerService r1;
        android.os.Looper r2;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$MainHandler;

        r1 := @parameter0: com.android.server.accessibility.AccessibilityManagerService;

        r2 := @parameter1: android.os.Looper;

        r0.<com.android.server.accessibility.AccessibilityManagerService$MainHandler: com.android.server.accessibility.AccessibilityManagerService this$0> = r1;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>(r2);

        return;
    }

    private void announceNewUserIfNeeded()
    {
        com.android.server.accessibility.AccessibilityManagerService$MainHandler r0;
        java.lang.Object r1, $r12;
        java.lang.Throwable r2, $r23;
        android.os.UserManager r3;
        android.content.Context r4, $r13;
        java.lang.Object[] r5;
        java.lang.String r6, $r17;
        android.view.accessibility.AccessibilityEvent r7;
        com.android.server.accessibility.AccessibilityManagerService $r8, $r9, $r11, $r14, $r15, $r19, $r21, $r22;
        com.android.server.accessibility.AccessibilityManagerService$UserState $r10;
        boolean $z0;
        android.content.pm.UserInfo $r16;
        int $i0, $i1, $i2;
        java.util.List $r18;
        com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy $r20;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$MainHandler;

        $r8 = r0.<com.android.server.accessibility.AccessibilityManagerService$MainHandler: com.android.server.accessibility.AccessibilityManagerService this$0>;

        r1 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: java.lang.Object access$000(com.android.server.accessibility.AccessibilityManagerService)>($r8);

        entermonitor r1;

     label1:
        $r9 = r0.<com.android.server.accessibility.AccessibilityManagerService$MainHandler: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r10 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$UserState access$200(com.android.server.accessibility.AccessibilityManagerService)>($r9);

        $z0 = $r10.<com.android.server.accessibility.AccessibilityManagerService$UserState: boolean mIsAccessibilityEnabled>;

        if $z0 == 0 goto label2;

        $r11 = r0.<com.android.server.accessibility.AccessibilityManagerService$MainHandler: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r13 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: android.content.Context access$1700(com.android.server.accessibility.AccessibilityManagerService)>($r11);

        $r12 = virtualinvoke $r13.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("user");

        r3 = (android.os.UserManager) $r12;

        $r14 = r0.<com.android.server.accessibility.AccessibilityManagerService$MainHandler: com.android.server.accessibility.AccessibilityManagerService this$0>;

        r4 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: android.content.Context access$1700(com.android.server.accessibility.AccessibilityManagerService)>($r14);

        r5 = newarray (java.lang.Object)[1];

        $r15 = r0.<com.android.server.accessibility.AccessibilityManagerService$MainHandler: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $i0 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: int access$100(com.android.server.accessibility.AccessibilityManagerService)>($r15);

        $r16 = virtualinvoke r3.<android.os.UserManager: android.content.pm.UserInfo getUserInfo(int)>($i0);

        $r17 = $r16.<android.content.pm.UserInfo: java.lang.String name>;

        r5[0] = $r17;

        r6 = virtualinvoke r4.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>(17040771, r5);

        r7 = staticinvoke <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain(int)>(16384);

        $r18 = virtualinvoke r7.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        interfaceinvoke $r18.<java.util.List: boolean add(java.lang.Object)>(r6);

        $r19 = r0.<com.android.server.accessibility.AccessibilityManagerService$MainHandler: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r20 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy access$2200(com.android.server.accessibility.AccessibilityManagerService)>($r19);

        $i1 = virtualinvoke $r20.<com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy: int getRetrievalAllowingWindowLocked()>();

        virtualinvoke r7.<android.view.accessibility.AccessibilityEvent: void setWindowId(int)>($i1);

        $r22 = r0.<com.android.server.accessibility.AccessibilityManagerService$MainHandler: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r21 = r0.<com.android.server.accessibility.AccessibilityManagerService$MainHandler: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $i2 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: int access$100(com.android.server.accessibility.AccessibilityManagerService)>($r21);

        virtualinvoke $r22.<com.android.server.accessibility.AccessibilityManagerService: boolean sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent,int)>(r7, $i2);

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r23 := @caughtexception;

        r2 = $r23;

     label5:
        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private void sendStateToClients(int, android.os.RemoteCallbackList)
    {
        com.android.server.accessibility.AccessibilityManagerService$MainHandler r0;
        int i0, i1, i2;
        android.os.RemoteCallbackList r1;
        java.lang.Throwable r2, $r7;
        android.view.accessibility.IAccessibilityManagerClient r3;
        android.os.IInterface $r5;
        android.os.RemoteException $r6;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$MainHandler;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.RemoteCallbackList;

     label1:
        i1 = virtualinvoke r1.<android.os.RemoteCallbackList: int beginBroadcast()>();

     label2:
        i2 = 0;

     label3:
        if i2 >= i1 goto label7;

     label4:
        $r5 = virtualinvoke r1.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i2);

        r3 = (android.view.accessibility.IAccessibilityManagerClient) $r5;

     label5:
        interfaceinvoke r3.<android.view.accessibility.IAccessibilityManagerClient: void setState(int)>(i0);

     label6:
        i2 = i2 + 1;

        goto label3;

     label7:
        virtualinvoke r1.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

     label8:
        $r7 := @caughtexception;

        r2 = $r7;

        virtualinvoke r1.<android.os.RemoteCallbackList: void finishBroadcast()>();

        throw r2;

     label9:
        $r6 := @caughtexception;

        goto label6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch android.os.RemoteException from label5 to label6 with label9;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    private void sendStateToClientsForUser(int, int)
    {
        com.android.server.accessibility.AccessibilityManagerService$MainHandler r0;
        int i0, i1;
        java.lang.Object r1;
        java.lang.Throwable r2, $r7;
        com.android.server.accessibility.AccessibilityManagerService$UserState r3;
        com.android.server.accessibility.AccessibilityManagerService $r4, $r5;
        android.os.RemoteCallbackList $r6;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$MainHandler;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r4 = r0.<com.android.server.accessibility.AccessibilityManagerService$MainHandler: com.android.server.accessibility.AccessibilityManagerService this$0>;

        r1 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: java.lang.Object access$000(com.android.server.accessibility.AccessibilityManagerService)>($r4);

        entermonitor r1;

     label1:
        $r5 = r0.<com.android.server.accessibility.AccessibilityManagerService$MainHandler: com.android.server.accessibility.AccessibilityManagerService this$0>;

        r3 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$UserState access$600(com.android.server.accessibility.AccessibilityManagerService,int)>($r5, i1);

        exitmonitor r1;

     label2:
        $r6 = r3.<com.android.server.accessibility.AccessibilityManagerService$UserState: android.os.RemoteCallbackList mClients>;

        specialinvoke r0.<com.android.server.accessibility.AccessibilityManagerService$MainHandler: void sendStateToClients(int,android.os.RemoteCallbackList)>(i0, $r6);

        return;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.server.accessibility.AccessibilityManagerService$MainHandler r0;
        android.os.Message r1;
        com.android.server.accessibility.AccessibilityManagerService$Service r2;
        com.android.server.accessibility.AccessibilityManagerService$UserState r3;
        int i0, i1, i2, i3, i4, $i5, $i6;
        android.view.KeyEvent r4;
        java.lang.Object r5, r8, $r11, $r16, $r18, $r25;
        java.lang.Throwable r6, r9, $r30, $r33;
        android.view.accessibility.AccessibilityEvent r7;
        com.android.server.accessibility.AccessibilityManagerService $r10, $r12, $r13, $r14, $r19, $r20, $r21, $r22, $r26, $r27, $r28, $r32;
        boolean $z0, $z1;
        com.android.server.accessibility.AccessibilityInputFilter $r15, $r17, $r29, $r31;
        android.os.RemoteCallbackList $r23;
        com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy $r24;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$MainHandler;

        r1 := @parameter0: android.os.Message;

        $i5 = r1.<android.os.Message: int what>;

        tableswitch($i5)
        {
            case 1: goto label02;
            case 2: goto label16;
            case 3: goto label17;
            case 4: goto label18;
            case 5: goto label19;
            case 6: goto label20;
            case 7: goto label21;
            case 8: goto label09;
            default: goto label01;
        };

     label01:
        return;

     label02:
        $r25 = r1.<android.os.Message: java.lang.Object obj>;

        r7 = (android.view.accessibility.AccessibilityEvent) $r25;

        $r26 = r0.<com.android.server.accessibility.AccessibilityManagerService$MainHandler: com.android.server.accessibility.AccessibilityManagerService this$0>;

        r8 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: java.lang.Object access$000(com.android.server.accessibility.AccessibilityManagerService)>($r26);

        entermonitor r8;

     label03:
        $r28 = r0.<com.android.server.accessibility.AccessibilityManagerService$MainHandler: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $z1 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: boolean access$1900(com.android.server.accessibility.AccessibilityManagerService)>($r28);

        if $z1 == 0 goto label04;

        $r27 = r0.<com.android.server.accessibility.AccessibilityManagerService$MainHandler: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r31 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityInputFilter access$2000(com.android.server.accessibility.AccessibilityManagerService)>($r27);

        if $r31 == null goto label04;

        $r32 = r0.<com.android.server.accessibility.AccessibilityManagerService$MainHandler: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r29 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityInputFilter access$2000(com.android.server.accessibility.AccessibilityManagerService)>($r32);

        virtualinvoke $r29.<com.android.server.accessibility.AccessibilityInputFilter: void notifyAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r7);

     label04:
        exitmonitor r8;

     label05:
        virtualinvoke r7.<android.view.accessibility.AccessibilityEvent: void recycle()>();

        return;

     label06:
        $r33 := @caughtexception;

        r9 = $r33;

     label07:
        exitmonitor r8;

     label08:
        throw r9;

     label09:
        $r11 = r1.<android.os.Message: java.lang.Object obj>;

        r4 = (android.view.KeyEvent) $r11;

        i4 = r1.<android.os.Message: int arg1>;

        $r10 = r0.<com.android.server.accessibility.AccessibilityManagerService$MainHandler: com.android.server.accessibility.AccessibilityManagerService this$0>;

        r5 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: java.lang.Object access$000(com.android.server.accessibility.AccessibilityManagerService)>($r10);

        entermonitor r5;

     label10:
        $r12 = r0.<com.android.server.accessibility.AccessibilityManagerService$MainHandler: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $z0 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: boolean access$1900(com.android.server.accessibility.AccessibilityManagerService)>($r12);

        if $z0 == 0 goto label11;

        $r13 = r0.<com.android.server.accessibility.AccessibilityManagerService$MainHandler: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r15 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityInputFilter access$2000(com.android.server.accessibility.AccessibilityManagerService)>($r13);

        if $r15 == null goto label11;

        $r14 = r0.<com.android.server.accessibility.AccessibilityManagerService$MainHandler: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r17 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityInputFilter access$2000(com.android.server.accessibility.AccessibilityManagerService)>($r14);

        virtualinvoke $r17.<com.android.server.accessibility.AccessibilityInputFilter: void sendInputEvent(android.view.InputEvent,int)>(r4, i4);

     label11:
        exitmonitor r5;

     label12:
        virtualinvoke r4.<android.view.KeyEvent: void recycle()>();

        return;

     label13:
        $r30 := @caughtexception;

        r6 = $r30;

     label14:
        exitmonitor r5;

     label15:
        throw r6;

     label16:
        i2 = r1.<android.os.Message: int arg1>;

        i3 = r1.<android.os.Message: int arg2>;

        $r22 = r0.<com.android.server.accessibility.AccessibilityManagerService$MainHandler: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r23 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: android.os.RemoteCallbackList access$2100(com.android.server.accessibility.AccessibilityManagerService)>($r22);

        specialinvoke r0.<com.android.server.accessibility.AccessibilityManagerService$MainHandler: void sendStateToClients(int,android.os.RemoteCallbackList)>(i2, $r23);

        specialinvoke r0.<com.android.server.accessibility.AccessibilityManagerService$MainHandler: void sendStateToClientsForUser(int,int)>(i2, i3);

        return;

     label17:
        $i6 = r1.<android.os.Message: int arg1>;

        specialinvoke r0.<com.android.server.accessibility.AccessibilityManagerService$MainHandler: void sendStateToClientsForUser(int,int)>(0, $i6);

        return;

     label18:
        i0 = r1.<android.os.Message: int arg1>;

        i1 = r1.<android.os.Message: int arg2>;

        $r20 = r0.<com.android.server.accessibility.AccessibilityManagerService$MainHandler: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r24 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy access$2200(com.android.server.accessibility.AccessibilityManagerService)>($r20);

        virtualinvoke $r24.<com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy: void updateActiveWindow(int,int)>(i0, i1);

        return;

     label19:
        specialinvoke r0.<com.android.server.accessibility.AccessibilityManagerService$MainHandler: void announceNewUserIfNeeded()>();

        return;

     label20:
        $r18 = r1.<android.os.Message: java.lang.Object obj>;

        r3 = (com.android.server.accessibility.AccessibilityManagerService$UserState) $r18;

        $r21 = r0.<com.android.server.accessibility.AccessibilityManagerService$MainHandler: com.android.server.accessibility.AccessibilityManagerService this$0>;

        staticinvoke <com.android.server.accessibility.AccessibilityManagerService: void access$2300(com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$UserState)>($r21, r3);

        return;

     label21:
        $r16 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (com.android.server.accessibility.AccessibilityManagerService$Service) $r16;

        $r19 = r0.<com.android.server.accessibility.AccessibilityManagerService$MainHandler: com.android.server.accessibility.AccessibilityManagerService this$0>;

        staticinvoke <com.android.server.accessibility.AccessibilityManagerService: void access$2400(com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$Service)>($r19, r2);

        return;

        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public static void <clinit>()
    {
        <com.android.server.accessibility.AccessibilityManagerService$MainHandler: int MSG_UPDATE_INPUT_FILTER> = 6;

        <com.android.server.accessibility.AccessibilityManagerService$MainHandler: int MSG_UPDATE_ACTIVE_WINDOW> = 4;

        <com.android.server.accessibility.AccessibilityManagerService$MainHandler: int MSG_SHOW_ENABLED_TOUCH_EXPLORATION_DIALOG> = 7;

        <com.android.server.accessibility.AccessibilityManagerService$MainHandler: int MSG_SEND_STATE_TO_CLIENTS> = 2;

        <com.android.server.accessibility.AccessibilityManagerService$MainHandler: int MSG_SEND_KEY_EVENT_TO_INPUT_FILTER> = 8;

        <com.android.server.accessibility.AccessibilityManagerService$MainHandler: int MSG_SEND_CLEARED_STATE_TO_CLIENTS_FOR_USER> = 3;

        <com.android.server.accessibility.AccessibilityManagerService$MainHandler: int MSG_SEND_ACCESSIBILITY_EVENT_TO_INPUT_FILTER> = 1;

        <com.android.server.accessibility.AccessibilityManagerService$MainHandler: int MSG_ANNOUNCE_NEW_USER_IF_NEEDED> = 5;

        return;
    }
}
