final class android.app.BackStackRecord extends android.app.FragmentTransaction implements android.app.FragmentManager$BackStackEntry, java.lang.Runnable
{
    static final int OP_ADD;
    static final int OP_ATTACH;
    static final int OP_DETACH;
    static final int OP_HIDE;
    static final int OP_NULL;
    static final int OP_REMOVE;
    static final int OP_REPLACE;
    static final int OP_SHOW;
    static final java.lang.String TAG;
    boolean mAddToBackStack;
    boolean mAllowAddToBackStack;
    int mBreadCrumbShortTitleRes;
    java.lang.CharSequence mBreadCrumbShortTitleText;
    int mBreadCrumbTitleRes;
    java.lang.CharSequence mBreadCrumbTitleText;
    boolean mCommitted;
    int mEnterAnim;
    int mExitAnim;
    android.app.BackStackRecord$Op mHead;
    int mIndex;
    final android.app.FragmentManagerImpl mManager;
    java.lang.String mName;
    int mNumOp;
    int mPopEnterAnim;
    int mPopExitAnim;
    android.app.BackStackRecord$Op mTail;
    int mTransition;
    int mTransitionStyle;

    public void <init>(android.app.FragmentManagerImpl)
    {
        android.app.BackStackRecord r0;
        android.app.FragmentManagerImpl r1;

        r0 := @this: android.app.BackStackRecord;

        r1 := @parameter0: android.app.FragmentManagerImpl;

        specialinvoke r0.<android.app.FragmentTransaction: void <init>()>();

        r0.<android.app.BackStackRecord: boolean mAllowAddToBackStack> = 1;

        r0.<android.app.BackStackRecord: int mIndex> = -1;

        r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager> = r1;

        return;
    }

    private void doAddOp(int, android.app.Fragment, java.lang.String, int)
    {
        android.app.BackStackRecord r0;
        int i0, i1, $i2, $i3, $i4;
        android.app.Fragment r1;
        java.lang.String r2, $r13, $r15, $r16, $r23, $r26;
        android.app.BackStackRecord$Op r3, $r5;
        android.app.FragmentManagerImpl $r4;
        java.lang.IllegalStateException $r6, $r17;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11, $r12, $r14, $r18, $r19, $r20, $r21, $r22, $r24, $r25;
        boolean $z0;

        r0 := @this: android.app.BackStackRecord;

        i0 := @parameter0: int;

        r1 := @parameter1: android.app.Fragment;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        $r4 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        r1.<android.app.Fragment: android.app.FragmentManagerImpl mFragmentManager> = $r4;

        if r2 == null goto label2;

        $r16 = r1.<android.app.Fragment: java.lang.String mTag>;

        if $r16 == null goto label1;

        $r15 = r1.<android.app.Fragment: java.lang.String mTag>;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z0 != 0 goto label1;

        $r17 = new java.lang.IllegalStateException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t change tag of fragment ");

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": was ");

        $r23 = r1.<android.app.Fragment: java.lang.String mTag>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" now ");

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r26);

        throw $r17;

     label1:
        r1.<android.app.Fragment: java.lang.String mTag> = r2;

     label2:
        if i0 == 0 goto label4;

        $i2 = r1.<android.app.Fragment: int mFragmentId>;

        if $i2 == 0 goto label3;

        $i3 = r1.<android.app.Fragment: int mFragmentId>;

        if $i3 == i0 goto label3;

        $r6 = new java.lang.IllegalStateException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t change container ID of fragment ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": was ");

        $i4 = r1.<android.app.Fragment: int mFragmentId>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" now ");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r6;

     label3:
        r1.<android.app.Fragment: int mFragmentId> = i0;

        r1.<android.app.Fragment: int mContainerId> = i0;

     label4:
        $r5 = new android.app.BackStackRecord$Op;

        specialinvoke $r5.<android.app.BackStackRecord$Op: void <init>()>();

        r3 = $r5;

        r3.<android.app.BackStackRecord$Op: int cmd> = i1;

        r3.<android.app.BackStackRecord$Op: android.app.Fragment fragment> = r1;

        virtualinvoke r0.<android.app.BackStackRecord: void addOp(android.app.BackStackRecord$Op)>(r3);

        return;
    }

    public android.app.FragmentTransaction add(int, android.app.Fragment)
    {
        android.app.BackStackRecord r0;
        int i0;
        android.app.Fragment r1;

        r0 := @this: android.app.BackStackRecord;

        i0 := @parameter0: int;

        r1 := @parameter1: android.app.Fragment;

        specialinvoke r0.<android.app.BackStackRecord: void doAddOp(int,android.app.Fragment,java.lang.String,int)>(i0, r1, null, 1);

        return r0;
    }

    public android.app.FragmentTransaction add(int, android.app.Fragment, java.lang.String)
    {
        android.app.BackStackRecord r0;
        int i0;
        android.app.Fragment r1;
        java.lang.String r2;

        r0 := @this: android.app.BackStackRecord;

        i0 := @parameter0: int;

        r1 := @parameter1: android.app.Fragment;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<android.app.BackStackRecord: void doAddOp(int,android.app.Fragment,java.lang.String,int)>(i0, r1, r2, 1);

        return r0;
    }

    public android.app.FragmentTransaction add(android.app.Fragment, java.lang.String)
    {
        android.app.BackStackRecord r0;
        android.app.Fragment r1;
        java.lang.String r2;

        r0 := @this: android.app.BackStackRecord;

        r1 := @parameter0: android.app.Fragment;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<android.app.BackStackRecord: void doAddOp(int,android.app.Fragment,java.lang.String,int)>(0, r1, r2, 1);

        return r0;
    }

    void addOp(android.app.BackStackRecord$Op)
    {
        android.app.BackStackRecord r0;
        android.app.BackStackRecord$Op r1, $r2, $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.app.BackStackRecord;

        r1 := @parameter0: android.app.BackStackRecord$Op;

        $r2 = r0.<android.app.BackStackRecord: android.app.BackStackRecord$Op mHead>;

        if $r2 != null goto label2;

        r0.<android.app.BackStackRecord: android.app.BackStackRecord$Op mTail> = r1;

        r0.<android.app.BackStackRecord: android.app.BackStackRecord$Op mHead> = r1;

     label1:
        $i0 = r0.<android.app.BackStackRecord: int mEnterAnim>;

        r1.<android.app.BackStackRecord$Op: int enterAnim> = $i0;

        $i1 = r0.<android.app.BackStackRecord: int mExitAnim>;

        r1.<android.app.BackStackRecord$Op: int exitAnim> = $i1;

        $i2 = r0.<android.app.BackStackRecord: int mPopEnterAnim>;

        r1.<android.app.BackStackRecord$Op: int popEnterAnim> = $i2;

        $i3 = r0.<android.app.BackStackRecord: int mPopExitAnim>;

        r1.<android.app.BackStackRecord$Op: int popExitAnim> = $i3;

        $i4 = r0.<android.app.BackStackRecord: int mNumOp>;

        $i5 = 1 + $i4;

        r0.<android.app.BackStackRecord: int mNumOp> = $i5;

        return;

     label2:
        $r3 = r0.<android.app.BackStackRecord: android.app.BackStackRecord$Op mTail>;

        r1.<android.app.BackStackRecord$Op: android.app.BackStackRecord$Op prev> = $r3;

        $r4 = r0.<android.app.BackStackRecord: android.app.BackStackRecord$Op mTail>;

        $r4.<android.app.BackStackRecord$Op: android.app.BackStackRecord$Op next> = r1;

        r0.<android.app.BackStackRecord: android.app.BackStackRecord$Op mTail> = r1;

        goto label1;
    }

    public android.app.FragmentTransaction addToBackStack(java.lang.String)
    {
        android.app.BackStackRecord r0;
        java.lang.String r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.app.BackStackRecord;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<android.app.BackStackRecord: boolean mAllowAddToBackStack>;

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This FragmentTransaction is not allowed to be added to the back stack.");

        throw $r2;

     label1:
        r0.<android.app.BackStackRecord: boolean mAddToBackStack> = 1;

        r0.<android.app.BackStackRecord: java.lang.String mName> = r1;

        return r0;
    }

    public android.app.FragmentTransaction attach(android.app.Fragment)
    {
        android.app.BackStackRecord r0;
        android.app.Fragment r1;
        android.app.BackStackRecord$Op r2, $r3;

        r0 := @this: android.app.BackStackRecord;

        r1 := @parameter0: android.app.Fragment;

        $r3 = new android.app.BackStackRecord$Op;

        specialinvoke $r3.<android.app.BackStackRecord$Op: void <init>()>();

        r2 = $r3;

        r2.<android.app.BackStackRecord$Op: int cmd> = 7;

        r2.<android.app.BackStackRecord$Op: android.app.Fragment fragment> = r1;

        virtualinvoke r0.<android.app.BackStackRecord: void addOp(android.app.BackStackRecord$Op)>(r2);

        return r0;
    }

    void bumpBackStackNesting(int)
    {
        android.app.BackStackRecord r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9;
        android.app.BackStackRecord$Op r1;
        android.app.Fragment r2, r3, $r4, $r16, $r21;
        boolean $z0, $z1, $z2, $z3;
        java.util.ArrayList $r5, $r6, $r7;
        java.lang.Object $r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r15, $r17, $r18, $r19, $r20, $r22, $r24, $r25, $r26, $r27;
        java.lang.String $r14, $r23, $r28;

        r0 := @this: android.app.BackStackRecord;

        i0 := @parameter0: int;

        $z0 = r0.<android.app.BackStackRecord: boolean mAddToBackStack>;

        if $z0 != 0 goto label2;

     label1:
        return;

     label2:
        $z1 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z1 == 0 goto label3;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bump nesting in ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r24 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" by ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r28);

     label3:
        r1 = r0.<android.app.BackStackRecord: android.app.BackStackRecord$Op mHead>;

     label4:
        if r1 == null goto label1;

        $r4 = r1.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        if $r4 == null goto label5;

        r3 = r1.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        $i8 = r3.<android.app.Fragment: int mBackStackNesting>;

        $i7 = i0 + $i8;

        r3.<android.app.Fragment: int mBackStackNesting> = $i7;

        $z3 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z3 == 0 goto label5;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bump nesting of ");

        $r16 = r1.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r21 = r1.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        $i9 = $r21.<android.app.Fragment: int mBackStackNesting>;

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r23);

     label5:
        $r5 = r1.<android.app.BackStackRecord$Op: java.util.ArrayList removed>;

        if $r5 == null goto label8;

        $r6 = r1.<android.app.BackStackRecord$Op: java.util.ArrayList removed>;

        $i2 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i1 = -1 + $i2;

     label6:
        if i1 < 0 goto label8;

        $r7 = r1.<android.app.BackStackRecord$Op: java.util.ArrayList removed>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (android.app.Fragment) $r8;

        $i4 = r2.<android.app.Fragment: int mBackStackNesting>;

        $i3 = i0 + $i4;

        r2.<android.app.Fragment: int mBackStackNesting> = $i3;

        $z2 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z2 == 0 goto label7;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bump nesting of ");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $i5 = r2.<android.app.Fragment: int mBackStackNesting>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r14);

     label7:
        i1 = i1 + -1;

        goto label6;

     label8:
        r1 = r1.<android.app.BackStackRecord$Op: android.app.BackStackRecord$Op next>;

        goto label4;
    }

    public int commit()
    {
        android.app.BackStackRecord r0;
        int $i0;

        r0 := @this: android.app.BackStackRecord;

        $i0 = virtualinvoke r0.<android.app.BackStackRecord: int commitInternal(boolean)>(0);

        return $i0;
    }

    public int commitAllowingStateLoss()
    {
        android.app.BackStackRecord r0;
        int $i0;

        r0 := @this: android.app.BackStackRecord;

        $i0 = virtualinvoke r0.<android.app.BackStackRecord: int commitInternal(boolean)>(1);

        return $i0;
    }

    int commitInternal(boolean)
    {
        android.app.BackStackRecord r0;
        boolean z0, $z1, $z2, $z3;
        com.android.internal.util.FastPrintWriter r1, $r8;
        android.app.FragmentManagerImpl $r2, $r3;
        int $i0, $i1;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;
        java.lang.IllegalStateException $r9;
        android.util.LogWriter $r10;

        r0 := @this: android.app.BackStackRecord;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.app.BackStackRecord: boolean mCommitted>;

        if $z1 == 0 goto label1;

        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("commit already called");

        throw $r9;

     label1:
        $z2 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z2 == 0 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Commit: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r7);

        $r8 = new com.android.internal.util.FastPrintWriter;

        $r10 = new android.util.LogWriter;

        specialinvoke $r10.<android.util.LogWriter: void <init>(int,java.lang.String)>(2, "FragmentManager");

        specialinvoke $r8.<com.android.internal.util.FastPrintWriter: void <init>(java.io.Writer,boolean,int)>($r10, 0, 1024);

        r1 = $r8;

        virtualinvoke r0.<android.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>("  ", null, r1, null);

        virtualinvoke r1.<java.io.PrintWriter: void flush()>();

     label2:
        r0.<android.app.BackStackRecord: boolean mCommitted> = 1;

        $z3 = r0.<android.app.BackStackRecord: boolean mAddToBackStack>;

        if $z3 == 0 goto label4;

        $r3 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        $i1 = virtualinvoke $r3.<android.app.FragmentManagerImpl: int allocBackStackIndex(android.app.BackStackRecord)>(r0);

        r0.<android.app.BackStackRecord: int mIndex> = $i1;

     label3:
        $r2 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        virtualinvoke $r2.<android.app.FragmentManagerImpl: void enqueueAction(java.lang.Runnable,boolean)>(r0, z0);

        $i0 = r0.<android.app.BackStackRecord: int mIndex>;

        return $i0;

     label4:
        r0.<android.app.BackStackRecord: int mIndex> = -1;

        goto label3;
    }

    public android.app.FragmentTransaction detach(android.app.Fragment)
    {
        android.app.BackStackRecord r0;
        android.app.Fragment r1;
        android.app.BackStackRecord$Op r2, $r3;

        r0 := @this: android.app.BackStackRecord;

        r1 := @parameter0: android.app.Fragment;

        $r3 = new android.app.BackStackRecord$Op;

        specialinvoke $r3.<android.app.BackStackRecord$Op: void <init>()>();

        r2 = $r3;

        r2.<android.app.BackStackRecord$Op: int cmd> = 6;

        r2.<android.app.BackStackRecord$Op: android.app.Fragment fragment> = r1;

        virtualinvoke r0.<android.app.BackStackRecord: void addOp(android.app.BackStackRecord$Op)>(r2);

        return r0;
    }

    public android.app.FragmentTransaction disallowAddToBackStack()
    {
        android.app.BackStackRecord r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.app.BackStackRecord;

        $z0 = r0.<android.app.BackStackRecord: boolean mAddToBackStack>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This transaction is already being added to the back stack");

        throw $r1;

     label1:
        r0.<android.app.BackStackRecord: boolean mAllowAddToBackStack> = 0;

        return r0;
    }

    public void dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        android.app.BackStackRecord r0;
        java.lang.String r1;
        java.io.FileDescriptor r2;
        java.io.PrintWriter r3;
        java.lang.String[] r4;

        r0 := @this: android.app.BackStackRecord;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.FileDescriptor;

        r3 := @parameter2: java.io.PrintWriter;

        r4 := @parameter3: java.lang.String[];

        virtualinvoke r0.<android.app.BackStackRecord: void dump(java.lang.String,java.io.PrintWriter,boolean)>(r1, r3, 1);

        return;
    }

    void dump(java.lang.String, java.io.PrintWriter, boolean)
    {
        android.app.BackStackRecord r0;
        java.lang.String r1, r3, r5, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r30, $r32, $r33, $r34;
        java.io.PrintWriter r2;
        boolean z0, $z1;
        android.app.BackStackRecord$Op r4, $r6;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11, $r12;
        java.util.ArrayList $r13, $r15, $r16, $r17, $r19;
        android.app.Fragment $r14;
        java.lang.Object $r18;
        java.lang.CharSequence $r29, $r31, $r35, $r36;

        r0 := @this: android.app.BackStackRecord;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.PrintWriter;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label09;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("mName=");

        $r24 = r0.<android.app.BackStackRecord: java.lang.String mName>;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r24);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" mIndex=");

        $i13 = r0.<android.app.BackStackRecord: int mIndex>;

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i13);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" mCommitted=");

        $z1 = r0.<android.app.BackStackRecord: boolean mCommitted>;

        virtualinvoke r2.<java.io.PrintWriter: void println(boolean)>($z1);

        $i18 = r0.<android.app.BackStackRecord: int mTransition>;

        if $i18 == 0 goto label01;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("mTransition=#");

        $i27 = r0.<android.app.BackStackRecord: int mTransition>;

        $r33 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i27);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r33);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" mTransitionStyle=#");

        $i28 = r0.<android.app.BackStackRecord: int mTransitionStyle>;

        $r34 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i28);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r34);

     label01:
        $i16 = r0.<android.app.BackStackRecord: int mEnterAnim>;

        if $i16 != 0 goto label02;

        $i30 = r0.<android.app.BackStackRecord: int mExitAnim>;

        if $i30 == 0 goto label03;

     label02:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("mEnterAnim=#");

        $i17 = r0.<android.app.BackStackRecord: int mEnterAnim>;

        $r26 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i17);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r26);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" mExitAnim=#");

        $i20 = r0.<android.app.BackStackRecord: int mExitAnim>;

        $r25 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i20);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r25);

     label03:
        $i19 = r0.<android.app.BackStackRecord: int mPopEnterAnim>;

        if $i19 != 0 goto label04;

        $i29 = r0.<android.app.BackStackRecord: int mPopExitAnim>;

        if $i29 == 0 goto label05;

     label04:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("mPopEnterAnim=#");

        $i22 = r0.<android.app.BackStackRecord: int mPopEnterAnim>;

        $r28 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i22);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r28);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" mPopExitAnim=#");

        $i21 = r0.<android.app.BackStackRecord: int mPopExitAnim>;

        $r27 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i21);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r27);

     label05:
        $i24 = r0.<android.app.BackStackRecord: int mBreadCrumbTitleRes>;

        if $i24 != 0 goto label06;

        $r36 = r0.<android.app.BackStackRecord: java.lang.CharSequence mBreadCrumbTitleText>;

        if $r36 == null goto label07;

     label06:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("mBreadCrumbTitleRes=#");

        $i23 = r0.<android.app.BackStackRecord: int mBreadCrumbTitleRes>;

        $r30 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i23);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r30);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" mBreadCrumbTitleText=");

        $r29 = r0.<android.app.BackStackRecord: java.lang.CharSequence mBreadCrumbTitleText>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r29);

     label07:
        $i26 = r0.<android.app.BackStackRecord: int mBreadCrumbShortTitleRes>;

        if $i26 != 0 goto label08;

        $r35 = r0.<android.app.BackStackRecord: java.lang.CharSequence mBreadCrumbShortTitleText>;

        if $r35 == null goto label09;

     label08:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("mBreadCrumbShortTitleRes=#");

        $i25 = r0.<android.app.BackStackRecord: int mBreadCrumbShortTitleRes>;

        $r32 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i25);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r32);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" mBreadCrumbShortTitleText=");

        $r31 = r0.<android.app.BackStackRecord: java.lang.CharSequence mBreadCrumbShortTitleText>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r31);

     label09:
        $r6 = r0.<android.app.BackStackRecord: android.app.BackStackRecord$Op mHead>;

        if $r6 == null goto label30;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Operations:");

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        r4 = r0.<android.app.BackStackRecord: android.app.BackStackRecord$Op mHead>;

        i0 = 0;

     label10:
        if r4 == null goto label30;

        $i2 = r4.<android.app.BackStackRecord$Op: int cmd>;

        tableswitch($i2)
        {
            case 0: goto label19;
            case 1: goto label20;
            case 2: goto label21;
            case 3: goto label22;
            case 4: goto label23;
            case 5: goto label24;
            case 6: goto label25;
            case 7: goto label26;
            default: goto label11;
        };

     label11:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cmd=");

        $i3 = r4.<android.app.BackStackRecord$Op: int cmd>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        r5 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

     label12:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  Op #");

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>(i0);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r5);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        $r14 = r4.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r14);

        if z0 == 0 goto label16;

        $i8 = r4.<android.app.BackStackRecord$Op: int enterAnim>;

        if $i8 != 0 goto label13;

        $i15 = r4.<android.app.BackStackRecord$Op: int exitAnim>;

        if $i15 == 0 goto label14;

     label13:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("enterAnim=#");

        $i7 = r4.<android.app.BackStackRecord$Op: int enterAnim>;

        $r21 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i7);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r21);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" exitAnim=#");

        $i10 = r4.<android.app.BackStackRecord$Op: int exitAnim>;

        $r20 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i10);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r20);

     label14:
        $i9 = r4.<android.app.BackStackRecord$Op: int popEnterAnim>;

        if $i9 != 0 goto label15;

        $i14 = r4.<android.app.BackStackRecord$Op: int popExitAnim>;

        if $i14 == 0 goto label16;

     label15:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("popEnterAnim=#");

        $i12 = r4.<android.app.BackStackRecord$Op: int popEnterAnim>;

        $r23 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i12);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r23);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" popExitAnim=#");

        $i11 = r4.<android.app.BackStackRecord$Op: int popExitAnim>;

        $r22 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i11);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r22);

     label16:
        $r13 = r4.<android.app.BackStackRecord$Op: java.util.ArrayList removed>;

        if $r13 == null goto label29;

        $r15 = r4.<android.app.BackStackRecord$Op: java.util.ArrayList removed>;

        $i4 = virtualinvoke $r15.<java.util.ArrayList: int size()>();

        if $i4 <= 0 goto label29;

        i1 = 0;

     label17:
        $r16 = r4.<android.app.BackStackRecord$Op: java.util.ArrayList removed>;

        $i5 = virtualinvoke $r16.<java.util.ArrayList: int size()>();

        if i1 >= $i5 goto label29;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        $r17 = r4.<android.app.BackStackRecord$Op: java.util.ArrayList removed>;

        $i6 = virtualinvoke $r17.<java.util.ArrayList: int size()>();

        if $i6 != 1 goto label27;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("Removed: ");

     label18:
        $r19 = r4.<android.app.BackStackRecord$Op: java.util.ArrayList removed>;

        $r18 = virtualinvoke $r19.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r18);

        i1 = i1 + 1;

        goto label17;

     label19:
        r5 = "NULL";

        goto label12;

     label20:
        r5 = "ADD";

        goto label12;

     label21:
        r5 = "REPLACE";

        goto label12;

     label22:
        r5 = "REMOVE";

        goto label12;

     label23:
        r5 = "HIDE";

        goto label12;

     label24:
        r5 = "SHOW";

        goto label12;

     label25:
        r5 = "DETACH";

        goto label12;

     label26:
        r5 = "ATTACH";

        goto label12;

     label27:
        if i1 != 0 goto label28;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Removed:");

     label28:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  #");

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>(i1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        goto label18;

     label29:
        r4 = r4.<android.app.BackStackRecord$Op: android.app.BackStackRecord$Op next>;

        i0 = i0 + 1;

        goto label10;

     label30:
        return;
    }

    public java.lang.CharSequence getBreadCrumbShortTitle()
    {
        android.app.BackStackRecord r0;
        int $i0, $i1;
        java.lang.CharSequence $r1, $r4;
        android.app.FragmentManagerImpl $r2;
        android.app.Activity $r3;

        r0 := @this: android.app.BackStackRecord;

        $i0 = r0.<android.app.BackStackRecord: int mBreadCrumbShortTitleRes>;

        if $i0 == 0 goto label1;

        $r2 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        $r3 = $r2.<android.app.FragmentManagerImpl: android.app.Activity mActivity>;

        $i1 = r0.<android.app.BackStackRecord: int mBreadCrumbShortTitleRes>;

        $r4 = virtualinvoke $r3.<android.app.Activity: java.lang.CharSequence getText(int)>($i1);

        return $r4;

     label1:
        $r1 = r0.<android.app.BackStackRecord: java.lang.CharSequence mBreadCrumbShortTitleText>;

        return $r1;
    }

    public int getBreadCrumbShortTitleRes()
    {
        android.app.BackStackRecord r0;
        int $i0;

        r0 := @this: android.app.BackStackRecord;

        $i0 = r0.<android.app.BackStackRecord: int mBreadCrumbShortTitleRes>;

        return $i0;
    }

    public java.lang.CharSequence getBreadCrumbTitle()
    {
        android.app.BackStackRecord r0;
        int $i0, $i1;
        java.lang.CharSequence $r1, $r4;
        android.app.FragmentManagerImpl $r2;
        android.app.Activity $r3;

        r0 := @this: android.app.BackStackRecord;

        $i0 = r0.<android.app.BackStackRecord: int mBreadCrumbTitleRes>;

        if $i0 == 0 goto label1;

        $r2 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        $r3 = $r2.<android.app.FragmentManagerImpl: android.app.Activity mActivity>;

        $i1 = r0.<android.app.BackStackRecord: int mBreadCrumbTitleRes>;

        $r4 = virtualinvoke $r3.<android.app.Activity: java.lang.CharSequence getText(int)>($i1);

        return $r4;

     label1:
        $r1 = r0.<android.app.BackStackRecord: java.lang.CharSequence mBreadCrumbTitleText>;

        return $r1;
    }

    public int getBreadCrumbTitleRes()
    {
        android.app.BackStackRecord r0;
        int $i0;

        r0 := @this: android.app.BackStackRecord;

        $i0 = r0.<android.app.BackStackRecord: int mBreadCrumbTitleRes>;

        return $i0;
    }

    public int getId()
    {
        android.app.BackStackRecord r0;
        int $i0;

        r0 := @this: android.app.BackStackRecord;

        $i0 = r0.<android.app.BackStackRecord: int mIndex>;

        return $i0;
    }

    public java.lang.String getName()
    {
        android.app.BackStackRecord r0;
        java.lang.String $r1;

        r0 := @this: android.app.BackStackRecord;

        $r1 = r0.<android.app.BackStackRecord: java.lang.String mName>;

        return $r1;
    }

    public int getTransition()
    {
        android.app.BackStackRecord r0;
        int $i0;

        r0 := @this: android.app.BackStackRecord;

        $i0 = r0.<android.app.BackStackRecord: int mTransition>;

        return $i0;
    }

    public int getTransitionStyle()
    {
        android.app.BackStackRecord r0;
        int $i0;

        r0 := @this: android.app.BackStackRecord;

        $i0 = r0.<android.app.BackStackRecord: int mTransitionStyle>;

        return $i0;
    }

    public android.app.FragmentTransaction hide(android.app.Fragment)
    {
        android.app.BackStackRecord r0;
        android.app.Fragment r1;
        android.app.BackStackRecord$Op r2, $r3;

        r0 := @this: android.app.BackStackRecord;

        r1 := @parameter0: android.app.Fragment;

        $r3 = new android.app.BackStackRecord$Op;

        specialinvoke $r3.<android.app.BackStackRecord$Op: void <init>()>();

        r2 = $r3;

        r2.<android.app.BackStackRecord$Op: int cmd> = 4;

        r2.<android.app.BackStackRecord$Op: android.app.Fragment fragment> = r1;

        virtualinvoke r0.<android.app.BackStackRecord: void addOp(android.app.BackStackRecord$Op)>(r2);

        return r0;
    }

    public boolean isAddToBackStackAllowed()
    {
        android.app.BackStackRecord r0;
        boolean $z0;

        r0 := @this: android.app.BackStackRecord;

        $z0 = r0.<android.app.BackStackRecord: boolean mAllowAddToBackStack>;

        return $z0;
    }

    public boolean isEmpty()
    {
        android.app.BackStackRecord r0;
        int $i0;

        r0 := @this: android.app.BackStackRecord;

        $i0 = r0.<android.app.BackStackRecord: int mNumOp>;

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void popFromBackStack(boolean)
    {
        android.app.BackStackRecord r0;
        boolean z0, $z1;
        android.app.BackStackRecord$Op r1;
        android.app.Fragment r2, r3, r4, r5, r6, r7, r8, r9;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35;
        com.android.internal.util.FastPrintWriter r10, $r32;
        android.app.FragmentManagerImpl $r11, $r12, $r13, $r19, $r20, $r21, $r22, $r25, $r26, $r29, $r31;
        java.lang.IllegalArgumentException $r14;
        java.lang.StringBuilder $r15, $r16, $r17, $r30, $r34, $r35;
        java.lang.String $r18, $r36;
        java.util.ArrayList $r23, $r24, $r28;
        java.lang.Object $r27;
        android.util.LogWriter $r33;

        r0 := @this: android.app.BackStackRecord;

        z0 := @parameter0: boolean;

        $z1 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z1 == 0 goto label01;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("popFromBackStack: ");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r36);

        $r32 = new com.android.internal.util.FastPrintWriter;

        $r33 = new android.util.LogWriter;

        specialinvoke $r33.<android.util.LogWriter: void <init>(int,java.lang.String)>(2, "FragmentManager");

        specialinvoke $r32.<com.android.internal.util.FastPrintWriter: void <init>(java.io.Writer,boolean,int)>($r33, 0, 1024);

        r10 = $r32;

        virtualinvoke r0.<android.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>("  ", null, r10, null);

        virtualinvoke r10.<java.io.PrintWriter: void flush()>();

     label01:
        virtualinvoke r0.<android.app.BackStackRecord: void bumpBackStackNesting(int)>(-1);

        r1 = r0.<android.app.BackStackRecord: android.app.BackStackRecord$Op mTail>;

     label02:
        if r1 == null goto label14;

        $i7 = r1.<android.app.BackStackRecord$Op: int cmd>;

        tableswitch($i7)
        {
            case 1: goto label04;
            case 2: goto label06;
            case 3: goto label09;
            case 4: goto label10;
            case 5: goto label11;
            case 6: goto label12;
            case 7: goto label13;
            default: goto label03;
        };

     label03:
        $r14 = new java.lang.IllegalArgumentException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown cmd: ");

        $i8 = r1.<android.app.BackStackRecord$Op: int cmd>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r14;

     label04:
        r9 = r1.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        $i34 = r1.<android.app.BackStackRecord$Op: int popExitAnim>;

        r9.<android.app.Fragment: int mNextAnim> = $i34;

        $r31 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        $i35 = r0.<android.app.BackStackRecord: int mTransition>;

        $i31 = staticinvoke <android.app.FragmentManagerImpl: int reverseTransit(int)>($i35);

        $i32 = r0.<android.app.BackStackRecord: int mTransitionStyle>;

        virtualinvoke $r31.<android.app.FragmentManagerImpl: void removeFragment(android.app.Fragment,int,int)>(r9, $i31, $i32);

     label05:
        r1 = r1.<android.app.BackStackRecord$Op: android.app.BackStackRecord$Op prev>;

        goto label02;

     label06:
        r7 = r1.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        if r7 == null goto label07;

        $i30 = r1.<android.app.BackStackRecord$Op: int popExitAnim>;

        r7.<android.app.Fragment: int mNextAnim> = $i30;

        $r29 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        $i29 = r0.<android.app.BackStackRecord: int mTransition>;

        $i28 = staticinvoke <android.app.FragmentManagerImpl: int reverseTransit(int)>($i29);

        $i33 = r0.<android.app.BackStackRecord: int mTransitionStyle>;

        virtualinvoke $r29.<android.app.FragmentManagerImpl: void removeFragment(android.app.Fragment,int,int)>(r7, $i28, $i33);

     label07:
        $r24 = r1.<android.app.BackStackRecord$Op: java.util.ArrayList removed>;

        if $r24 == null goto label05;

        i0 = 0;

     label08:
        $r23 = r1.<android.app.BackStackRecord$Op: java.util.ArrayList removed>;

        $i26 = virtualinvoke $r23.<java.util.ArrayList: int size()>();

        if i0 >= $i26 goto label05;

        $r28 = r1.<android.app.BackStackRecord$Op: java.util.ArrayList removed>;

        $r27 = virtualinvoke $r28.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r8 = (android.app.Fragment) $r27;

        $i27 = r1.<android.app.BackStackRecord$Op: int popEnterAnim>;

        r8.<android.app.Fragment: int mNextAnim> = $i27;

        $r26 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        virtualinvoke $r26.<android.app.FragmentManagerImpl: void addFragment(android.app.Fragment,boolean)>(r8, 0);

        i0 = i0 + 1;

        goto label08;

     label09:
        r6 = r1.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        $i23 = r1.<android.app.BackStackRecord$Op: int popEnterAnim>;

        r6.<android.app.Fragment: int mNextAnim> = $i23;

        $r25 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        virtualinvoke $r25.<android.app.FragmentManagerImpl: void addFragment(android.app.Fragment,boolean)>(r6, 0);

        goto label05;

     label10:
        r5 = r1.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        $i19 = r1.<android.app.BackStackRecord$Op: int popEnterAnim>;

        r5.<android.app.Fragment: int mNextAnim> = $i19;

        $r22 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        $i20 = r0.<android.app.BackStackRecord: int mTransition>;

        $i25 = staticinvoke <android.app.FragmentManagerImpl: int reverseTransit(int)>($i20);

        $i24 = r0.<android.app.BackStackRecord: int mTransitionStyle>;

        virtualinvoke $r22.<android.app.FragmentManagerImpl: void showFragment(android.app.Fragment,int,int)>(r5, $i25, $i24);

        goto label05;

     label11:
        r4 = r1.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        $i18 = r1.<android.app.BackStackRecord$Op: int popExitAnim>;

        r4.<android.app.Fragment: int mNextAnim> = $i18;

        $r21 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        $i16 = r0.<android.app.BackStackRecord: int mTransition>;

        $i21 = staticinvoke <android.app.FragmentManagerImpl: int reverseTransit(int)>($i16);

        $i22 = r0.<android.app.BackStackRecord: int mTransitionStyle>;

        virtualinvoke $r21.<android.app.FragmentManagerImpl: void hideFragment(android.app.Fragment,int,int)>(r4, $i21, $i22);

        goto label05;

     label12:
        r3 = r1.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        $i14 = r1.<android.app.BackStackRecord$Op: int popEnterAnim>;

        r3.<android.app.Fragment: int mNextAnim> = $i14;

        $r20 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        $i15 = r0.<android.app.BackStackRecord: int mTransition>;

        $i13 = staticinvoke <android.app.FragmentManagerImpl: int reverseTransit(int)>($i15);

        $i17 = r0.<android.app.BackStackRecord: int mTransitionStyle>;

        virtualinvoke $r20.<android.app.FragmentManagerImpl: void attachFragment(android.app.Fragment,int,int)>(r3, $i13, $i17);

        goto label05;

     label13:
        r2 = r1.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        $i9 = r1.<android.app.BackStackRecord$Op: int popExitAnim>;

        r2.<android.app.Fragment: int mNextAnim> = $i9;

        $r19 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        $i12 = r0.<android.app.BackStackRecord: int mTransition>;

        $i10 = staticinvoke <android.app.FragmentManagerImpl: int reverseTransit(int)>($i12);

        $i11 = r0.<android.app.BackStackRecord: int mTransitionStyle>;

        virtualinvoke $r19.<android.app.FragmentManagerImpl: void detachFragment(android.app.Fragment,int,int)>(r2, $i10, $i11);

        goto label05;

     label14:
        if z0 == 0 goto label15;

        $r13 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        $r12 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        $i4 = $r12.<android.app.FragmentManagerImpl: int mCurState>;

        $i3 = r0.<android.app.BackStackRecord: int mTransition>;

        $i6 = staticinvoke <android.app.FragmentManagerImpl: int reverseTransit(int)>($i3);

        $i5 = r0.<android.app.BackStackRecord: int mTransitionStyle>;

        virtualinvoke $r13.<android.app.FragmentManagerImpl: void moveToState(int,int,int,boolean)>($i4, $i6, $i5, 1);

     label15:
        $i1 = r0.<android.app.BackStackRecord: int mIndex>;

        if $i1 < 0 goto label16;

        $r11 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        $i2 = r0.<android.app.BackStackRecord: int mIndex>;

        virtualinvoke $r11.<android.app.FragmentManagerImpl: void freeBackStackIndex(int)>($i2);

        r0.<android.app.BackStackRecord: int mIndex> = -1;

     label16:
        return;
    }

    public android.app.FragmentTransaction remove(android.app.Fragment)
    {
        android.app.BackStackRecord r0;
        android.app.Fragment r1;
        android.app.BackStackRecord$Op r2, $r3;

        r0 := @this: android.app.BackStackRecord;

        r1 := @parameter0: android.app.Fragment;

        $r3 = new android.app.BackStackRecord$Op;

        specialinvoke $r3.<android.app.BackStackRecord$Op: void <init>()>();

        r2 = $r3;

        r2.<android.app.BackStackRecord$Op: int cmd> = 3;

        r2.<android.app.BackStackRecord$Op: android.app.Fragment fragment> = r1;

        virtualinvoke r0.<android.app.BackStackRecord: void addOp(android.app.BackStackRecord$Op)>(r2);

        return r0;
    }

    public android.app.FragmentTransaction replace(int, android.app.Fragment)
    {
        android.app.BackStackRecord r0;
        int i0;
        android.app.Fragment r1;
        android.app.FragmentTransaction $r2;

        r0 := @this: android.app.BackStackRecord;

        i0 := @parameter0: int;

        r1 := @parameter1: android.app.Fragment;

        $r2 = virtualinvoke r0.<android.app.BackStackRecord: android.app.FragmentTransaction replace(int,android.app.Fragment,java.lang.String)>(i0, r1, null);

        return $r2;
    }

    public android.app.FragmentTransaction replace(int, android.app.Fragment, java.lang.String)
    {
        android.app.BackStackRecord r0;
        int i0;
        android.app.Fragment r1;
        java.lang.String r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.app.BackStackRecord;

        i0 := @parameter0: int;

        r1 := @parameter1: android.app.Fragment;

        r2 := @parameter2: java.lang.String;

        if i0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must use non-zero containerViewId");

        throw $r3;

     label1:
        specialinvoke r0.<android.app.BackStackRecord: void doAddOp(int,android.app.Fragment,java.lang.String,int)>(i0, r1, r2, 2);

        return r0;
    }

    public void run()
    {
        android.app.BackStackRecord r0;
        android.app.BackStackRecord$Op r1;
        android.app.Fragment r2, r3, r4, r5, r6, r7, r8, r9;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i30, $i31, $i32, $i33;
        boolean $z0, $z1, $z2, $z4, $z5, $z6;
        android.app.FragmentManagerImpl $r10, $r11, $r12, $r18, $r19, $r20, $r21, $r23, $r24, $r26, $r27, $r30, $r33, $r44;
        java.lang.StringBuilder $r13, $r15, $r17, $r34, $r35, $r37, $r38, $r39, $r40, $r41, $r42, $r46, $r47, $r50, $r51, $r52;
        java.lang.IllegalArgumentException $r14;
        java.lang.String $r16, $r36, $r48, $r49;
        java.util.ArrayList $r22, $r25, $r29, $r31, $r32, $r43;
        java.lang.Object $r28;
        java.lang.IllegalStateException $r45;

        r0 := @this: android.app.BackStackRecord;

        $z0 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label01;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Run: ");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r49 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r49);

     label01:
        $z1 = r0.<android.app.BackStackRecord: boolean mAddToBackStack>;

        if $z1 == 0 goto label02;

        $i33 = r0.<android.app.BackStackRecord: int mIndex>;

        if $i33 >= 0 goto label02;

        $r45 = new java.lang.IllegalStateException;

        specialinvoke $r45.<java.lang.IllegalStateException: void <init>(java.lang.String)>("addToBackStack() called after commit()");

        throw $r45;

     label02:
        virtualinvoke r0.<android.app.BackStackRecord: void bumpBackStackNesting(int)>(1);

        r1 = r0.<android.app.BackStackRecord: android.app.BackStackRecord$Op mHead>;

     label03:
        if r1 == null goto label21;

        $i4 = r1.<android.app.BackStackRecord$Op: int cmd>;

        tableswitch($i4)
        {
            case 1: goto label05;
            case 2: goto label07;
            case 3: goto label16;
            case 4: goto label17;
            case 5: goto label18;
            case 6: goto label19;
            case 7: goto label20;
            default: goto label04;
        };

     label04:
        $r14 = new java.lang.IllegalArgumentException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown cmd: ");

        $i5 = r1.<android.app.BackStackRecord$Op: int cmd>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r14;

     label05:
        r9 = r1.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        $i32 = r1.<android.app.BackStackRecord$Op: int enterAnim>;

        r9.<android.app.Fragment: int mNextAnim> = $i32;

        $r44 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        virtualinvoke $r44.<android.app.FragmentManagerImpl: void addFragment(android.app.Fragment,boolean)>(r9, 0);

     label06:
        r1 = r1.<android.app.BackStackRecord$Op: android.app.BackStackRecord$Op next>;

        goto label03;

     label07:
        r7 = r1.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        $r23 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        $r22 = $r23.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        if $r22 == null goto label15;

        i0 = 0;

     label08:
        $r26 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        $r25 = $r26.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $i22 = virtualinvoke $r25.<java.util.ArrayList: int size()>();

        if i0 >= $i22 goto label15;

        $r30 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        $r29 = $r30.<android.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r28 = virtualinvoke $r29.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r8 = (android.app.Fragment) $r28;

        $z4 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z4 == 0 goto label09;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OP_REPLACE: adding=");

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r47 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" old=");

        $r46 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r48);

     label09:
        if r7 == null goto label10;

        $i30 = r8.<android.app.Fragment: int mContainerId>;

        $i31 = r7.<android.app.Fragment: int mContainerId>;

        if $i30 != $i31 goto label11;

     label10:
        if r8 != r7 goto label12;

        r7 = null;

        r1.<android.app.BackStackRecord$Op: android.app.Fragment fragment> = null;

     label11:
        i0 = i0 + 1;

        goto label08;

     label12:
        $r32 = r1.<android.app.BackStackRecord$Op: java.util.ArrayList removed>;

        if $r32 != null goto label13;

        $r43 = new java.util.ArrayList;

        specialinvoke $r43.<java.util.ArrayList: void <init>()>();

        r1.<android.app.BackStackRecord$Op: java.util.ArrayList removed> = $r43;

     label13:
        $r31 = r1.<android.app.BackStackRecord$Op: java.util.ArrayList removed>;

        virtualinvoke $r31.<java.util.ArrayList: boolean add(java.lang.Object)>(r8);

        $i25 = r1.<android.app.BackStackRecord$Op: int exitAnim>;

        r8.<android.app.Fragment: int mNextAnim> = $i25;

        $z6 = r0.<android.app.BackStackRecord: boolean mAddToBackStack>;

        if $z6 == 0 goto label14;

        $i23 = r8.<android.app.Fragment: int mBackStackNesting>;

        $i24 = 1 + $i23;

        r8.<android.app.Fragment: int mBackStackNesting> = $i24;

        $z5 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z5 == 0 goto label14;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bump nesting of ");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r34 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $i28 = r8.<android.app.Fragment: int mBackStackNesting>;

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i28);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r36);

     label14:
        $r33 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        $i27 = r0.<android.app.BackStackRecord: int mTransition>;

        $i26 = r0.<android.app.BackStackRecord: int mTransitionStyle>;

        virtualinvoke $r33.<android.app.FragmentManagerImpl: void removeFragment(android.app.Fragment,int,int)>(r8, $i27, $i26);

        goto label11;

     label15:
        if r7 == null goto label06;

        $i21 = r1.<android.app.BackStackRecord$Op: int enterAnim>;

        r7.<android.app.Fragment: int mNextAnim> = $i21;

        $r27 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        virtualinvoke $r27.<android.app.FragmentManagerImpl: void addFragment(android.app.Fragment,boolean)>(r7, 0);

        goto label06;

     label16:
        r6 = r1.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        $i17 = r1.<android.app.BackStackRecord$Op: int exitAnim>;

        r6.<android.app.Fragment: int mNextAnim> = $i17;

        $r24 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        $i20 = r0.<android.app.BackStackRecord: int mTransition>;

        $i18 = r0.<android.app.BackStackRecord: int mTransitionStyle>;

        virtualinvoke $r24.<android.app.FragmentManagerImpl: void removeFragment(android.app.Fragment,int,int)>(r6, $i20, $i18);

        goto label06;

     label17:
        r5 = r1.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        $i14 = r1.<android.app.BackStackRecord$Op: int exitAnim>;

        r5.<android.app.Fragment: int mNextAnim> = $i14;

        $r21 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        $i19 = r0.<android.app.BackStackRecord: int mTransition>;

        $i15 = r0.<android.app.BackStackRecord: int mTransitionStyle>;

        virtualinvoke $r21.<android.app.FragmentManagerImpl: void hideFragment(android.app.Fragment,int,int)>(r5, $i19, $i15);

        goto label06;

     label18:
        r4 = r1.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        $i11 = r1.<android.app.BackStackRecord$Op: int enterAnim>;

        r4.<android.app.Fragment: int mNextAnim> = $i11;

        $r20 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        $i16 = r0.<android.app.BackStackRecord: int mTransition>;

        $i12 = r0.<android.app.BackStackRecord: int mTransitionStyle>;

        virtualinvoke $r20.<android.app.FragmentManagerImpl: void showFragment(android.app.Fragment,int,int)>(r4, $i16, $i12);

        goto label06;

     label19:
        r3 = r1.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        $i8 = r1.<android.app.BackStackRecord$Op: int exitAnim>;

        r3.<android.app.Fragment: int mNextAnim> = $i8;

        $r19 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        $i13 = r0.<android.app.BackStackRecord: int mTransition>;

        $i9 = r0.<android.app.BackStackRecord: int mTransitionStyle>;

        virtualinvoke $r19.<android.app.FragmentManagerImpl: void detachFragment(android.app.Fragment,int,int)>(r3, $i13, $i9);

        goto label06;

     label20:
        r2 = r1.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        $i7 = r1.<android.app.BackStackRecord$Op: int enterAnim>;

        r2.<android.app.Fragment: int mNextAnim> = $i7;

        $r18 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        $i10 = r0.<android.app.BackStackRecord: int mTransition>;

        $i6 = r0.<android.app.BackStackRecord: int mTransitionStyle>;

        virtualinvoke $r18.<android.app.FragmentManagerImpl: void attachFragment(android.app.Fragment,int,int)>(r2, $i10, $i6);

        goto label06;

     label21:
        $r11 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        $r10 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        $i2 = $r10.<android.app.FragmentManagerImpl: int mCurState>;

        $i3 = r0.<android.app.BackStackRecord: int mTransition>;

        $i1 = r0.<android.app.BackStackRecord: int mTransitionStyle>;

        virtualinvoke $r11.<android.app.FragmentManagerImpl: void moveToState(int,int,int,boolean)>($i2, $i3, $i1, 1);

        $z2 = r0.<android.app.BackStackRecord: boolean mAddToBackStack>;

        if $z2 == 0 goto label22;

        $r12 = r0.<android.app.BackStackRecord: android.app.FragmentManagerImpl mManager>;

        virtualinvoke $r12.<android.app.FragmentManagerImpl: void addBackStackState(android.app.BackStackRecord)>(r0);

     label22:
        return;
    }

    public android.app.FragmentTransaction setBreadCrumbShortTitle(int)
    {
        android.app.BackStackRecord r0;
        int i0;

        r0 := @this: android.app.BackStackRecord;

        i0 := @parameter0: int;

        r0.<android.app.BackStackRecord: int mBreadCrumbShortTitleRes> = i0;

        r0.<android.app.BackStackRecord: java.lang.CharSequence mBreadCrumbShortTitleText> = null;

        return r0;
    }

    public android.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence)
    {
        android.app.BackStackRecord r0;
        java.lang.CharSequence r1;

        r0 := @this: android.app.BackStackRecord;

        r1 := @parameter0: java.lang.CharSequence;

        r0.<android.app.BackStackRecord: int mBreadCrumbShortTitleRes> = 0;

        r0.<android.app.BackStackRecord: java.lang.CharSequence mBreadCrumbShortTitleText> = r1;

        return r0;
    }

    public android.app.FragmentTransaction setBreadCrumbTitle(int)
    {
        android.app.BackStackRecord r0;
        int i0;

        r0 := @this: android.app.BackStackRecord;

        i0 := @parameter0: int;

        r0.<android.app.BackStackRecord: int mBreadCrumbTitleRes> = i0;

        r0.<android.app.BackStackRecord: java.lang.CharSequence mBreadCrumbTitleText> = null;

        return r0;
    }

    public android.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence)
    {
        android.app.BackStackRecord r0;
        java.lang.CharSequence r1;

        r0 := @this: android.app.BackStackRecord;

        r1 := @parameter0: java.lang.CharSequence;

        r0.<android.app.BackStackRecord: int mBreadCrumbTitleRes> = 0;

        r0.<android.app.BackStackRecord: java.lang.CharSequence mBreadCrumbTitleText> = r1;

        return r0;
    }

    public android.app.FragmentTransaction setCustomAnimations(int, int)
    {
        android.app.BackStackRecord r0;
        int i0, i1;
        android.app.FragmentTransaction $r1;

        r0 := @this: android.app.BackStackRecord;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<android.app.BackStackRecord: android.app.FragmentTransaction setCustomAnimations(int,int,int,int)>(i0, i1, 0, 0);

        return $r1;
    }

    public android.app.FragmentTransaction setCustomAnimations(int, int, int, int)
    {
        android.app.BackStackRecord r0;
        int i0, i1, i2, i3;

        r0 := @this: android.app.BackStackRecord;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r0.<android.app.BackStackRecord: int mEnterAnim> = i0;

        r0.<android.app.BackStackRecord: int mExitAnim> = i1;

        r0.<android.app.BackStackRecord: int mPopEnterAnim> = i2;

        r0.<android.app.BackStackRecord: int mPopExitAnim> = i3;

        return r0;
    }

    public android.app.FragmentTransaction setTransition(int)
    {
        android.app.BackStackRecord r0;
        int i0;

        r0 := @this: android.app.BackStackRecord;

        i0 := @parameter0: int;

        r0.<android.app.BackStackRecord: int mTransition> = i0;

        return r0;
    }

    public android.app.FragmentTransaction setTransitionStyle(int)
    {
        android.app.BackStackRecord r0;
        int i0;

        r0 := @this: android.app.BackStackRecord;

        i0 := @parameter0: int;

        r0.<android.app.BackStackRecord: int mTransitionStyle> = i0;

        return r0;
    }

    public android.app.FragmentTransaction show(android.app.Fragment)
    {
        android.app.BackStackRecord r0;
        android.app.Fragment r1;
        android.app.BackStackRecord$Op r2, $r3;

        r0 := @this: android.app.BackStackRecord;

        r1 := @parameter0: android.app.Fragment;

        $r3 = new android.app.BackStackRecord$Op;

        specialinvoke $r3.<android.app.BackStackRecord$Op: void <init>()>();

        r2 = $r3;

        r2.<android.app.BackStackRecord$Op: int cmd> = 5;

        r2.<android.app.BackStackRecord$Op: android.app.Fragment fragment> = r1;

        virtualinvoke r0.<android.app.BackStackRecord: void addOp(android.app.BackStackRecord$Op)>(r2);

        return r0;
    }

    public java.lang.String toString()
    {
        android.app.BackStackRecord r0;
        java.lang.StringBuilder r1, $r2;
        int $i0, $i1, $i2;
        java.lang.String $r4, $r6, $r8, $r10;

        r0 := @this: android.app.BackStackRecord;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(128);

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BackStackEntry{");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $i1 = r0.<android.app.BackStackRecord: int mIndex>;

        if $i1 < 0 goto label1;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" #");

        $i2 = r0.<android.app.BackStackRecord: int mIndex>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

     label1:
        $r6 = r0.<android.app.BackStackRecord: java.lang.String mName>;

        if $r6 == null goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r10 = r0.<android.app.BackStackRecord: java.lang.String mName>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public static void <clinit>()
    {
        <android.app.BackStackRecord: java.lang.String TAG> = "FragmentManager";

        <android.app.BackStackRecord: int OP_SHOW> = 5;

        <android.app.BackStackRecord: int OP_REPLACE> = 2;

        <android.app.BackStackRecord: int OP_REMOVE> = 3;

        <android.app.BackStackRecord: int OP_NULL> = 0;

        <android.app.BackStackRecord: int OP_HIDE> = 4;

        <android.app.BackStackRecord: int OP_DETACH> = 6;

        <android.app.BackStackRecord: int OP_ATTACH> = 7;

        <android.app.BackStackRecord: int OP_ADD> = 1;

        return;
    }
}
