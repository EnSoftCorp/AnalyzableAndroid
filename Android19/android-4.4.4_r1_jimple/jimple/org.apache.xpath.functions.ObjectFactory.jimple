class org.apache.xpath.functions.ObjectFactory extends java.lang.Object
{
    private static final boolean DEBUG;
    private static final java.lang.String DEFAULT_PROPERTIES_FILENAME;
    private static final java.lang.String SERVICES_PATH;
    private static long fLastModified;
    private static java.util.Properties fXalanProperties;

    static void <clinit>()
    {
        <org.apache.xpath.functions.ObjectFactory: java.lang.String SERVICES_PATH> = "META-INF/services/";

        <org.apache.xpath.functions.ObjectFactory: java.lang.String DEFAULT_PROPERTIES_FILENAME> = "xalan.properties";

        <org.apache.xpath.functions.ObjectFactory: boolean DEBUG> = 0;

        <org.apache.xpath.functions.ObjectFactory: java.util.Properties fXalanProperties> = null;

        <org.apache.xpath.functions.ObjectFactory: long fLastModified> = -1L;

        return;
    }

    void <init>()
    {
        org.apache.xpath.functions.ObjectFactory r0;

        r0 := @this: org.apache.xpath.functions.ObjectFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.lang.Object createObject(java.lang.String, java.lang.String) throws org.apache.xpath.functions.ObjectFactory$ConfigurationError
    {
        java.lang.String r0, r1;
        java.lang.Object $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.apache.xpath.functions.ObjectFactory: java.lang.Object createObject(java.lang.String,java.lang.String,java.lang.String)>(r0, null, r1);

        return $r2;
    }

    static java.lang.Object createObject(java.lang.String, java.lang.String, java.lang.String) throws org.apache.xpath.functions.ObjectFactory$ConfigurationError
    {
        java.lang.String r0, r1, r2, $r9, $r14, $r22;
        java.lang.Class r3;
        java.lang.Exception r4, $r17;
        java.lang.Object r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r11, $r12, $r13, $r15, $r18, $r19, $r20, $r21, $r23;
        org.apache.xpath.functions.ObjectFactory$ConfigurationError $r10, $r16;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <org.apache.xpath.functions.ObjectFactory: java.lang.Class lookUpFactoryClass(java.lang.String,java.lang.String,java.lang.String)>(r0, r1, r2);

        if r3 != null goto label1;

        $r10 = new org.apache.xpath.functions.ObjectFactory$ConfigurationError;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Provider for ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be found");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<org.apache.xpath.functions.ObjectFactory$ConfigurationError: void <init>(java.lang.String,java.lang.Exception)>($r14, null);

        throw $r10;

     label1:
        r5 = virtualinvoke r3.<java.lang.Class: java.lang.Object newInstance()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("created new instance of factory ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.xpath.functions.ObjectFactory: void debugPrintln(java.lang.String)>($r9);

     label2:
        return r5;

     label3:
        $r17 := @caughtexception;

        r4 = $r17;

        $r16 = new org.apache.xpath.functions.ObjectFactory$ConfigurationError;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Provider for factory ");

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" could not be instantiated: ");

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<org.apache.xpath.functions.ObjectFactory$ConfigurationError: void <init>(java.lang.String,java.lang.Exception)>($r22, r4);

        throw $r16;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static void debugPrintln(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        return;
    }

    static java.lang.ClassLoader findClassLoader() throws org.apache.xpath.functions.ObjectFactory$ConfigurationError
    {
        org.apache.xpath.functions.SecuritySupport r0;
        java.lang.ClassLoader r1, r2, r3, r4, r5;
        java.lang.Class $r6;

        r0 = staticinvoke <org.apache.xpath.functions.SecuritySupport: org.apache.xpath.functions.SecuritySupport getInstance()>();

        r1 = virtualinvoke r0.<org.apache.xpath.functions.SecuritySupport: java.lang.ClassLoader getContextClassLoader()>();

        r2 = virtualinvoke r0.<org.apache.xpath.functions.SecuritySupport: java.lang.ClassLoader getSystemClassLoader()>();

        r3 = r2;

     label1:
        if r1 != r3 goto label5;

        $r6 = class "org/apache/xpath/functions/ObjectFactory";

        r4 = virtualinvoke $r6.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        r5 = r2;

     label2:
        if r4 != r5 goto label3;

        return r2;

     label3:
        if r5 != null goto label4;

        return r4;

     label4:
        r5 = virtualinvoke r0.<org.apache.xpath.functions.SecuritySupport: java.lang.ClassLoader getParentClassLoader(java.lang.ClassLoader)>(r5);

        goto label2;

     label5:
        if r3 != null goto label6;

        return r1;

     label6:
        r3 = virtualinvoke r0.<org.apache.xpath.functions.SecuritySupport: java.lang.ClassLoader getParentClassLoader(java.lang.ClassLoader)>(r3);

        goto label1;
    }

    private static java.lang.String findJarServiceProviderName(java.lang.String)
    {
        java.lang.String r0, r2, r10, $r23, $r25, $r27;
        org.apache.xpath.functions.SecuritySupport r1;
        java.lang.ClassLoader r3, r13;
        java.io.InputStream r4;
        java.io.BufferedReader r5, $r22, $r38;
        java.lang.Throwable r6, $r33;
        java.lang.StringBuilder $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r26, $r28, $r29;
        java.io.InputStreamReader $r24, $r36;
        boolean $z0;
        java.io.IOException $r30, $r32, $r34, $r35;
        java.lang.Class $r31;
        java.io.UnsupportedEncodingException $r37;

        r0 := @parameter0: java.lang.String;

        r1 = staticinvoke <org.apache.xpath.functions.SecuritySupport: org.apache.xpath.functions.SecuritySupport getInstance()>();

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("META-INF/services/");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        r2 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        r3 = staticinvoke <org.apache.xpath.functions.ObjectFactory: java.lang.ClassLoader findClassLoader()>();

        r4 = virtualinvoke r1.<org.apache.xpath.functions.SecuritySupport: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)>(r3, r2);

        if r4 != null goto label01;

        $r31 = class "org/apache/xpath/functions/ObjectFactory";

        r13 = virtualinvoke $r31.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        if r3 == r13 goto label01;

        r3 = r13;

        r4 = virtualinvoke r1.<org.apache.xpath.functions.SecuritySupport: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)>(r3, r2);

     label01:
        if r4 != null goto label02;

        return null;

     label02:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("found jar resource=");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" using ClassLoader: ");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.xpath.functions.ObjectFactory: void debugPrintln(java.lang.String)>($r23);

     label03:
        $r22 = new java.io.BufferedReader;

        $r24 = new java.io.InputStreamReader;

        specialinvoke $r24.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r4, "UTF-8");

        specialinvoke $r22.<java.io.BufferedReader: void <init>(java.io.Reader)>($r24);

        r5 = $r22;

     label04:
        r10 = virtualinvoke r5.<java.io.BufferedReader: java.lang.String readLine()>();

     label05:
        virtualinvoke r5.<java.io.BufferedReader: void close()>();

     label06:
        if r10 == null goto label14;

        $r25 = "";

        $z0 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z0 != 0 goto label14;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("found in resource, value=");

        $r26 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.xpath.functions.ObjectFactory: void debugPrintln(java.lang.String)>($r27);

        return r10;

     label07:
        $r37 := @caughtexception;

        $r38 = new java.io.BufferedReader;

        $r36 = new java.io.InputStreamReader;

        specialinvoke $r36.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r4);

        specialinvoke $r38.<java.io.BufferedReader: void <init>(java.io.Reader)>($r36);

        r5 = $r38;

        goto label04;

     label08:
        $r34 := @caughtexception;

     label09:
        virtualinvoke r5.<java.io.BufferedReader: void close()>();

     label10:
        return null;

     label11:
        $r33 := @caughtexception;

        r6 = $r33;

     label12:
        virtualinvoke r5.<java.io.BufferedReader: void close()>();

     label13:
        throw r6;

     label14:
        return null;

     label15:
        $r32 := @caughtexception;

        goto label06;

     label16:
        $r30 := @caughtexception;

        goto label10;

     label17:
        $r35 := @caughtexception;

        goto label13;

        catch java.io.UnsupportedEncodingException from label03 to label04 with label07;
        catch java.io.IOException from label04 to label05 with label08;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.io.IOException from label05 to label06 with label15;
        catch java.io.IOException from label09 to label10 with label16;
        catch java.io.IOException from label12 to label13 with label17;
    }

    static java.lang.Class findProviderClass(java.lang.String, java.lang.ClassLoader, boolean) throws java.lang.ClassNotFoundException, org.apache.xpath.functions.ObjectFactory$ConfigurationError
    {
        java.lang.String r0, r7;
        java.lang.ClassLoader r1, r4;
        boolean z0;
        java.lang.SecurityManager r2;
        java.lang.ClassNotFoundException r3, $r9;
        java.lang.Class r5, $r8, $r10, $r11, $r12;
        java.lang.SecurityException r6, $r13;
        int i0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.ClassLoader;

        z0 := @parameter2: boolean;

        r2 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();

        if r2 == null goto label05;

     label01:
        i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>(".");

     label02:
        r7 = r0;

        if i0 == -1 goto label04;

     label03:
        r7 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

     label04:
        virtualinvoke r2.<java.lang.SecurityManager: void checkPackageAccess(java.lang.String)>(r7);

     label05:
        if r1 != null goto label07;

        $r8 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r8;

     label06:
        $r13 := @caughtexception;

        r6 = $r13;

        throw r6;

     label07:
        r5 = virtualinvoke r1.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r0);

     label08:
        return r5;

     label09:
        $r9 := @caughtexception;

        r3 = $r9;

        if z0 == 0 goto label12;

        $r10 = class "org/apache/xpath/functions/ObjectFactory";

        r4 = virtualinvoke $r10.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        if r4 != null goto label10;

        $r11 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r11;

     label10:
        if r1 == r4 goto label11;

        $r12 = virtualinvoke r4.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r0);

        return $r12;

     label11:
        throw r3;

     label12:
        throw r3;

        catch java.lang.SecurityException from label01 to label02 with label06;
        catch java.lang.SecurityException from label03 to label04 with label06;
        catch java.lang.SecurityException from label04 to label05 with label06;
        catch java.lang.ClassNotFoundException from label07 to label08 with label09;
    }

    static java.lang.Class lookUpFactoryClass(java.lang.String) throws org.apache.xpath.functions.ObjectFactory$ConfigurationError
    {
        java.lang.String r0;
        java.lang.Class $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.xpath.functions.ObjectFactory: java.lang.Class lookUpFactoryClass(java.lang.String,java.lang.String,java.lang.String)>(r0, null, null);

        return $r1;
    }

    static java.lang.Class lookUpFactoryClass(java.lang.String, java.lang.String, java.lang.String) throws org.apache.xpath.functions.ObjectFactory$ConfigurationError
    {
        java.lang.String r0, r1, r2, r3, $r14, $r22, $r27;
        java.lang.ClassLoader r4;
        java.lang.Exception r5, $r13;
        java.lang.ClassNotFoundException r6, $r21;
        java.lang.Class r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12, $r15, $r17, $r18, $r19, $r20, $r23, $r25, $r26, $r28;
        org.apache.xpath.functions.ObjectFactory$ConfigurationError $r16, $r24;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <org.apache.xpath.functions.ObjectFactory: java.lang.String lookUpFactoryClassName(java.lang.String,java.lang.String,java.lang.String)>(r0, r1, r2);

        r4 = staticinvoke <org.apache.xpath.functions.ObjectFactory: java.lang.ClassLoader findClassLoader()>();

        if r3 != null goto label1;

        r3 = r2;

     label1:
        r7 = staticinvoke <org.apache.xpath.functions.ObjectFactory: java.lang.Class findProviderClass(java.lang.String,java.lang.ClassLoader,boolean)>(r3, r4, 1);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("created new instance of ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" using ClassLoader: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.xpath.functions.ObjectFactory: void debugPrintln(java.lang.String)>($r14);

     label2:
        return r7;

     label3:
        $r21 := @caughtexception;

        r6 = $r21;

        $r24 = new org.apache.xpath.functions.ObjectFactory$ConfigurationError;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Provider ");

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found");

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<org.apache.xpath.functions.ObjectFactory$ConfigurationError: void <init>(java.lang.String,java.lang.Exception)>($r27, r6);

        throw $r24;

     label4:
        $r13 := @caughtexception;

        r5 = $r13;

        $r16 = new org.apache.xpath.functions.ObjectFactory$ConfigurationError;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Provider ");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" could not be instantiated: ");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<org.apache.xpath.functions.ObjectFactory$ConfigurationError: void <init>(java.lang.String,java.lang.Exception)>($r22, r5);

        throw $r16;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    static java.lang.String lookUpFactoryClassName(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2, r9, r12, r25, r26, $r32, $r34, $r37, $r41, $r56;
        org.apache.xpath.functions.SecuritySupport r3;
        java.io.FileInputStream r5, r16;
        java.lang.Throwable r6, r17, r18, $r52, $r54, $r60;
        java.util.Properties r11, r21, $r28, $r46, $r49, $r50;
        java.io.File r14, r24, $r29, $r44;
        boolean z0, z1, z2;
        long l0, l1, $l3, $l5;
        java.lang.StringBuilder $r30, $r31, $r33, $r35, $r36, $r38, $r39, $r40, $r42, $r43, $r45, $r47, $r48, $r55;
        byte $b2, $b4;
        java.lang.SecurityException $r51, $r57, $r62;
        java.lang.Exception $r53, $r63;
        java.io.IOException $r58, $r59, $r61, $r64, $r65, $r66;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <org.apache.xpath.functions.SecuritySupport: org.apache.xpath.functions.SecuritySupport getInstance()>();

     label01:
        r26 = virtualinvoke r3.<org.apache.xpath.functions.SecuritySupport: java.lang.String getSystemProperty(java.lang.String)>(r0);

     label02:
        if r26 == null goto label06;

     label03:
        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("found system property, value=");

        $r55 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.xpath.functions.ObjectFactory: void debugPrintln(java.lang.String)>($r56);

     label04:
        return r26;

     label05:
        $r51 := @caughtexception;

     label06:
        if r1 != null goto label42;

        r14 = null;

     label07:
        r25 = virtualinvoke r3.<org.apache.xpath.functions.SecuritySupport: java.lang.String getSystemProperty(java.lang.String)>("java.home");

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        $r37 = <java.io.File: java.lang.String separator>;

        $r43 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lib");

        $r41 = <java.io.File: java.lang.String separator>;

        $r40 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r45 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("xalan.properties");

        r1 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        $r44 = new java.io.File;

        specialinvoke $r44.<java.io.File: void <init>(java.lang.String)>(r1);

        r24 = $r44;

     label08:
        z2 = virtualinvoke r3.<org.apache.xpath.functions.SecuritySupport: boolean getFileExists(java.io.File)>(r24);

     label09:
        z0 = z2;

        r14 = r24;

     label10:
        entermonitor class "org/apache/xpath/functions/ObjectFactory";

        r16 = null;

     label11:
        $l3 = <org.apache.xpath.functions.ObjectFactory: long fLastModified>;

        $b2 = $l3 cmp 0L;

        if $b2 < 0 goto label33;

     label12:
        r16 = null;

        if z0 == 0 goto label24;

     label13:
        l0 = <org.apache.xpath.functions.ObjectFactory: long fLastModified>;

        l1 = virtualinvoke r3.<org.apache.xpath.functions.SecuritySupport: long getLastModified(java.io.File)>(r14);

        <org.apache.xpath.functions.ObjectFactory: long fLastModified> = l1;

     label14:
        $b4 = l0 cmp l1;

        if $b4 >= 0 goto label24;

        z1 = 1;

     label15:
        r16 = null;

        if z1 == 0 goto label17;

     label16:
        $r49 = new java.util.Properties;

        specialinvoke $r49.<java.util.Properties: void <init>()>();

        <org.apache.xpath.functions.ObjectFactory: java.util.Properties fXalanProperties> = $r49;

        r16 = virtualinvoke r3.<org.apache.xpath.functions.SecuritySupport: java.io.FileInputStream getFileInputStream(java.io.File)>(r14);

        $r50 = <org.apache.xpath.functions.ObjectFactory: java.util.Properties fXalanProperties>;

        virtualinvoke $r50.<java.util.Properties: void load(java.io.InputStream)>(r16);

     label17:
        if r16 == null goto label19;

     label18:
        virtualinvoke r16.<java.io.FileInputStream: void close()>();

     label19:
        exitmonitor class "org/apache/xpath/functions/ObjectFactory";

     label20:
        r21 = <org.apache.xpath.functions.ObjectFactory: java.util.Properties fXalanProperties>;

        r9 = null;

        if r21 == null goto label21;

        $r46 = <org.apache.xpath.functions.ObjectFactory: java.util.Properties fXalanProperties>;

        r9 = virtualinvoke $r46.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r0);

     label21:
        if r9 == null goto label55;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("found in ");

        $r35 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", value=");

        $r33 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.xpath.functions.ObjectFactory: void debugPrintln(java.lang.String)>($r34);

        return r9;

     label22:
        $r62 := @caughtexception;

     label23:
        <org.apache.xpath.functions.ObjectFactory: long fLastModified> = -1L;

        <org.apache.xpath.functions.ObjectFactory: java.util.Properties fXalanProperties> = null;

        z0 = 0;

        goto label10;

     label24:
        z1 = 0;

        if z0 != 0 goto label15;

     label25:
        <org.apache.xpath.functions.ObjectFactory: long fLastModified> = -1L;

        <org.apache.xpath.functions.ObjectFactory: java.util.Properties fXalanProperties> = null;

     label26:
        z1 = 0;

        goto label15;

     label27:
        $r53 := @caughtexception;

     label28:
        <org.apache.xpath.functions.ObjectFactory: java.util.Properties fXalanProperties> = null;

        <org.apache.xpath.functions.ObjectFactory: long fLastModified> = -1L;

     label29:
        if r16 == null goto label19;

     label30:
        virtualinvoke r16.<java.io.FileInputStream: void close()>();

     label31:
        goto label19;

     label32:
        $r61 := @caughtexception;

        goto label19;

     label33:
        z1 = 0;

        if z0 == 0 goto label15;

        z1 = 1;

     label34:
        $l5 = virtualinvoke r3.<org.apache.xpath.functions.SecuritySupport: long getLastModified(java.io.File)>(r14);

        <org.apache.xpath.functions.ObjectFactory: long fLastModified> = $l5;

     label35:
        goto label15;

     label36:
        $r54 := @caughtexception;

        r18 = $r54;

        if r16 == null goto label38;

     label37:
        virtualinvoke r16.<java.io.FileInputStream: void close()>();

     label38:
        throw r18;

     label39:
        $r52 := @caughtexception;

        r17 = $r52;

     label40:
        exitmonitor class "org/apache/xpath/functions/ObjectFactory";

     label41:
        throw r17;

     label42:
        r5 = null;

     label43:
        $r29 = new java.io.File;

        specialinvoke $r29.<java.io.File: void <init>(java.lang.String)>(r1);

        r5 = virtualinvoke r3.<org.apache.xpath.functions.SecuritySupport: java.io.FileInputStream getFileInputStream(java.io.File)>($r29);

        $r28 = new java.util.Properties;

        specialinvoke $r28.<java.util.Properties: void <init>()>();

        r11 = $r28;

        virtualinvoke r11.<java.util.Properties: void load(java.io.InputStream)>(r5);

        r12 = virtualinvoke r11.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r0);

     label44:
        r9 = r12;

        if r5 == null goto label21;

     label45:
        virtualinvoke r5.<java.io.FileInputStream: void close()>();

     label46:
        goto label21;

     label47:
        $r66 := @caughtexception;

        goto label21;

     label48:
        $r63 := @caughtexception;

        r9 = null;

        if r5 == null goto label21;

     label49:
        virtualinvoke r5.<java.io.FileInputStream: void close()>();

     label50:
        r9 = null;

        goto label21;

     label51:
        $r59 := @caughtexception;

        r9 = null;

        goto label21;

     label52:
        $r60 := @caughtexception;

        r6 = $r60;

        if r5 == null goto label54;

     label53:
        virtualinvoke r5.<java.io.FileInputStream: void close()>();

     label54:
        throw r6;

     label55:
        $r32 = staticinvoke <org.apache.xpath.functions.ObjectFactory: java.lang.String findJarServiceProviderName(java.lang.String)>(r0);

        return $r32;

     label56:
        $r65 := @caughtexception;

        goto label19;

     label57:
        $r64 := @caughtexception;

        goto label38;

     label58:
        $r58 := @caughtexception;

        goto label54;

     label59:
        $r57 := @caughtexception;

        r14 = r24;

        goto label23;

        catch java.lang.SecurityException from label01 to label02 with label05;
        catch java.lang.SecurityException from label03 to label04 with label05;
        catch java.lang.SecurityException from label07 to label08 with label22;
        catch java.lang.SecurityException from label08 to label09 with label59;
        catch java.lang.Exception from label11 to label12 with label27;
        catch java.lang.Throwable from label11 to label12 with label36;
        catch java.lang.Exception from label13 to label14 with label27;
        catch java.lang.Throwable from label13 to label14 with label36;
        catch java.lang.Exception from label16 to label17 with label27;
        catch java.lang.Throwable from label16 to label17 with label36;
        catch java.io.IOException from label18 to label19 with label56;
        catch java.lang.Throwable from label18 to label19 with label39;
        catch java.lang.Throwable from label19 to label20 with label39;
        catch java.lang.Exception from label25 to label26 with label27;
        catch java.lang.Throwable from label25 to label26 with label36;
        catch java.lang.Throwable from label28 to label29 with label36;
        catch java.io.IOException from label30 to label31 with label32;
        catch java.lang.Throwable from label30 to label31 with label39;
        catch java.lang.Exception from label34 to label35 with label27;
        catch java.lang.Throwable from label34 to label35 with label36;
        catch java.io.IOException from label37 to label38 with label57;
        catch java.lang.Throwable from label37 to label38 with label39;
        catch java.lang.Throwable from label38 to label39 with label39;
        catch java.lang.Throwable from label40 to label41 with label39;
        catch java.lang.Exception from label43 to label44 with label48;
        catch java.lang.Throwable from label43 to label44 with label52;
        catch java.io.IOException from label45 to label46 with label47;
        catch java.io.IOException from label49 to label50 with label51;
        catch java.io.IOException from label53 to label54 with label58;
    }

    static java.lang.Object newInstance(java.lang.String, java.lang.ClassLoader, boolean) throws org.apache.xpath.functions.ObjectFactory$ConfigurationError
    {
        java.lang.String r0, $r11, $r17, $r25;
        java.lang.ClassLoader r1;
        boolean z0;
        java.lang.Exception r2, $r20;
        java.lang.ClassNotFoundException r3, $r12;
        java.lang.Class r4;
        java.lang.Object r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r13, $r15, $r16, $r18, $r21, $r22, $r23, $r24, $r26;
        org.apache.xpath.functions.ObjectFactory$ConfigurationError $r14, $r19;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.ClassLoader;

        z0 := @parameter2: boolean;

     label1:
        r4 = staticinvoke <org.apache.xpath.functions.ObjectFactory: java.lang.Class findProviderClass(java.lang.String,java.lang.ClassLoader,boolean)>(r0, r1, z0);

        r5 = virtualinvoke r4.<java.lang.Class: java.lang.Object newInstance()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("created new instance of ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" using ClassLoader: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.xpath.functions.ObjectFactory: void debugPrintln(java.lang.String)>($r11);

     label2:
        return r5;

     label3:
        $r12 := @caughtexception;

        r3 = $r12;

        $r14 = new org.apache.xpath.functions.ObjectFactory$ConfigurationError;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Provider ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<org.apache.xpath.functions.ObjectFactory$ConfigurationError: void <init>(java.lang.String,java.lang.Exception)>($r17, r3);

        throw $r14;

     label4:
        $r20 := @caughtexception;

        r2 = $r20;

        $r19 = new org.apache.xpath.functions.ObjectFactory$ConfigurationError;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Provider ");

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" could not be instantiated: ");

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<org.apache.xpath.functions.ObjectFactory$ConfigurationError: void <init>(java.lang.String,java.lang.Exception)>($r25, r2);

        throw $r19;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }
}
