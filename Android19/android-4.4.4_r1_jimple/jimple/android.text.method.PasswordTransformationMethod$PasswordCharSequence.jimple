class android.text.method.PasswordTransformationMethod$PasswordCharSequence extends java.lang.Object implements java.lang.CharSequence, android.text.GetChars
{
    private java.lang.CharSequence mSource;

    public void <init>(java.lang.CharSequence)
    {
        android.text.method.PasswordTransformationMethod$PasswordCharSequence r0;
        java.lang.CharSequence r1;

        r0 := @this: android.text.method.PasswordTransformationMethod$PasswordCharSequence;

        r1 := @parameter0: java.lang.CharSequence;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.text.method.PasswordTransformationMethod$PasswordCharSequence: java.lang.CharSequence mSource> = r1;

        return;
    }

    public char charAt(int)
    {
        android.text.method.PasswordTransformationMethod$PasswordCharSequence r0;
        int i0, i1, i2, i3, i4, i5, $i7, $i8, $i9;
        android.text.Spanned r1;
        android.text.method.PasswordTransformationMethod$Visible[] r2;
        java.lang.CharSequence $r3, $r4, $r12, $r13;
        boolean $z0;
        char $c6, $c10, $c11;
        java.lang.Object $r5, $r6;
        java.lang.Object[] $r7;
        android.text.method.PasswordTransformationMethod$Visible $r8, $r10, $r11;
        android.text.method.PasswordTransformationMethod $r9;

        r0 := @this: android.text.method.PasswordTransformationMethod$PasswordCharSequence;

        i0 := @parameter0: int;

        $r3 = r0.<android.text.method.PasswordTransformationMethod$PasswordCharSequence: java.lang.CharSequence mSource>;

        $z0 = $r3 instanceof android.text.Spanned;

        if $z0 == 0 goto label4;

        $r4 = r0.<android.text.method.PasswordTransformationMethod$PasswordCharSequence: java.lang.CharSequence mSource>;

        r1 = (android.text.Spanned) $r4;

        $r5 = <android.text.method.TextKeyListener: java.lang.Object ACTIVE>;

        i1 = interfaceinvoke r1.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r5);

        $r6 = <android.text.method.TextKeyListener: java.lang.Object ACTIVE>;

        i2 = interfaceinvoke r1.<android.text.Spanned: int getSpanEnd(java.lang.Object)>($r6);

        if i0 < i1 goto label1;

        if i0 >= i2 goto label1;

        $r13 = r0.<android.text.method.PasswordTransformationMethod$PasswordCharSequence: java.lang.CharSequence mSource>;

        $c11 = interfaceinvoke $r13.<java.lang.CharSequence: char charAt(int)>(i0);

        return $c11;

     label1:
        $i7 = interfaceinvoke r1.<android.text.Spanned: int length()>();

        $r7 = interfaceinvoke r1.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i7, class "android/text/method/PasswordTransformationMethod$Visible");

        r2 = (android.text.method.PasswordTransformationMethod$Visible[]) $r7;

        i3 = 0;

     label2:
        $i8 = lengthof r2;

        if i3 >= $i8 goto label4;

        $r8 = r2[i3];

        $r9 = staticinvoke <android.text.method.PasswordTransformationMethod$Visible: android.text.method.PasswordTransformationMethod access$000(android.text.method.PasswordTransformationMethod$Visible)>($r8);

        $i9 = interfaceinvoke r1.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r9);

        if $i9 < 0 goto label3;

        $r10 = r2[i3];

        i4 = interfaceinvoke r1.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r10);

        $r11 = r2[i3];

        i5 = interfaceinvoke r1.<android.text.Spanned: int getSpanEnd(java.lang.Object)>($r11);

        if i0 < i4 goto label3;

        if i0 >= i5 goto label3;

        $r12 = r0.<android.text.method.PasswordTransformationMethod$PasswordCharSequence: java.lang.CharSequence mSource>;

        $c10 = interfaceinvoke $r12.<java.lang.CharSequence: char charAt(int)>(i0);

        return $c10;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        $c6 = staticinvoke <android.text.method.PasswordTransformationMethod: char access$100()>();

        return $c6;
    }

    public void getChars(int, int, char[], int)
    {
        android.text.method.PasswordTransformationMethod$PasswordCharSequence r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        char[] r1;
        boolean z0, z1;
        int[] r2, r3;
        android.text.Spanned r4;
        android.text.method.PasswordTransformationMethod$Visible[] r5;
        java.lang.CharSequence $r6, $r7, $r9;
        char $c10;
        java.lang.Object $r8, $r10;
        java.lang.Object[] $r11;
        android.text.method.PasswordTransformationMethod$Visible $r12, $r13, $r15;
        android.text.method.PasswordTransformationMethod $r14;

        r0 := @this: android.text.method.PasswordTransformationMethod$PasswordCharSequence;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: char[];

        i2 := @parameter3: int;

        $r6 = r0.<android.text.method.PasswordTransformationMethod$PasswordCharSequence: java.lang.CharSequence mSource>;

        staticinvoke <android.text.TextUtils: void getChars(java.lang.CharSequence,int,int,char[],int)>($r6, i0, i1, r1, i2);

        i3 = -1;

        i4 = -1;

        $r7 = r0.<android.text.method.PasswordTransformationMethod$PasswordCharSequence: java.lang.CharSequence mSource>;

        z0 = $r7 instanceof android.text.Spanned;

        r2 = null;

        i5 = 0;

        r3 = null;

        if z0 == 0 goto label03;

        $r9 = r0.<android.text.method.PasswordTransformationMethod$PasswordCharSequence: java.lang.CharSequence mSource>;

        r4 = (android.text.Spanned) $r9;

        $r8 = <android.text.method.TextKeyListener: java.lang.Object ACTIVE>;

        i3 = interfaceinvoke r4.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r8);

        $r10 = <android.text.method.TextKeyListener: java.lang.Object ACTIVE>;

        i4 = interfaceinvoke r4.<android.text.Spanned: int getSpanEnd(java.lang.Object)>($r10);

        $i14 = interfaceinvoke r4.<android.text.Spanned: int length()>();

        $r11 = interfaceinvoke r4.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i14, class "android/text/method/PasswordTransformationMethod$Visible");

        r5 = (android.text.method.PasswordTransformationMethod$Visible[]) $r11;

        i5 = lengthof r5;

        r3 = newarray (int)[i5];

        r2 = newarray (int)[i5];

        i8 = 0;

     label01:
        if i8 >= i5 goto label03;

        $r13 = r5[i8];

        $r14 = staticinvoke <android.text.method.PasswordTransformationMethod$Visible: android.text.method.PasswordTransformationMethod access$000(android.text.method.PasswordTransformationMethod$Visible)>($r13);

        $i15 = interfaceinvoke r4.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r14);

        if $i15 < 0 goto label02;

        $r12 = r5[i8];

        $i17 = interfaceinvoke r4.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r12);

        r3[i8] = $i17;

        $r15 = r5[i8];

        $i16 = interfaceinvoke r4.<android.text.Spanned: int getSpanEnd(java.lang.Object)>($r15);

        r2[i8] = $i16;

     label02:
        i8 = i8 + 1;

        goto label01;

     label03:
        i6 = i0;

     label04:
        if i6 >= i1 goto label10;

        if i6 < i3 goto label05;

        if i6 < i4 goto label08;

     label05:
        i7 = 0;

     label06:
        z1 = 0;

        if i7 >= i5 goto label07;

        $i13 = r3[i7];

        if i6 < $i13 goto label09;

        $i12 = r2[i7];

        if i6 >= $i12 goto label09;

        z1 = 1;

     label07:
        if z1 != 0 goto label08;

        $i9 = i6 - i0;

        $i11 = i2 + $i9;

        $c10 = staticinvoke <android.text.method.PasswordTransformationMethod: char access$100()>();

        r1[$i11] = $c10;

     label08:
        i6 = i6 + 1;

        goto label04;

     label09:
        i7 = i7 + 1;

        goto label06;

     label10:
        return;
    }

    public int length()
    {
        android.text.method.PasswordTransformationMethod$PasswordCharSequence r0;
        java.lang.CharSequence $r1;
        int $i0;

        r0 := @this: android.text.method.PasswordTransformationMethod$PasswordCharSequence;

        $r1 = r0.<android.text.method.PasswordTransformationMethod$PasswordCharSequence: java.lang.CharSequence mSource>;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        return $i0;
    }

    public java.lang.CharSequence subSequence(int, int)
    {
        android.text.method.PasswordTransformationMethod$PasswordCharSequence r0;
        int i0, i1, $i2;
        char[] r1;
        java.lang.String $r2;

        r0 := @this: android.text.method.PasswordTransformationMethod$PasswordCharSequence;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i1 - i0;

        r1 = newarray (char)[$i2];

        virtualinvoke r0.<android.text.method.PasswordTransformationMethod$PasswordCharSequence: void getChars(int,int,char[],int)>(i0, i1, r1, 0);

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>(r1);

        return $r2;
    }

    public java.lang.String toString()
    {
        android.text.method.PasswordTransformationMethod$PasswordCharSequence r0;
        int $i0;
        java.lang.CharSequence $r1;
        java.lang.String $r2;

        r0 := @this: android.text.method.PasswordTransformationMethod$PasswordCharSequence;

        $i0 = virtualinvoke r0.<android.text.method.PasswordTransformationMethod$PasswordCharSequence: int length()>();

        $r1 = virtualinvoke r0.<android.text.method.PasswordTransformationMethod$PasswordCharSequence: java.lang.CharSequence subSequence(int,int)>(0, $i0);

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }
}
