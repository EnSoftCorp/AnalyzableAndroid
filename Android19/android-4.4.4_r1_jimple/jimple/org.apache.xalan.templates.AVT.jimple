public class org.apache.xalan.templates.AVT extends java.lang.Object implements java.io.Serializable, org.apache.xalan.templates.XSLTVisitable
{
    private static final int INIT_BUFFER_CHUNK_BITS;
    private static final boolean USE_OBJECT_POOL;
    static final long serialVersionUID;
    private java.lang.String m_name;
    private java.util.Vector m_parts;
    private java.lang.String m_rawName;
    private java.lang.String m_simpleString;
    private java.lang.String m_uri;

    public void <init>(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.templates.ElemTemplateElement) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.AVT r0;
        org.apache.xalan.processor.StylesheetHandler r1;
        java.lang.String r2, r3, r4, r5, r11, r12, r13, r18, r20, $r26, $r28, $r30, $r34;
        org.apache.xalan.templates.ElemTemplateElement r6;
        java.util.StringTokenizer r7, $r19;
        int i0, $i1, $i2, $i3, $i5, $i6;
        org.apache.xml.utils.FastStringBuffer r8, r9, $r21, $r23;
        java.lang.Throwable r10, $r37;
        org.xml.sax.SAXException r14, r16, $r33, $r39;
        org.apache.xpath.XPath r17;
        java.util.Vector $r22, $r24, $r27, $r31, $r35;
        boolean $z0, $z1, $z2, $z3;
        org.apache.xalan.templates.AVTPartSimple $r25, $r36;
        java.lang.Object[] $r29, $r42;
        char $c4, $c7;
        org.apache.xalan.templates.AVTPartXPath $r32;
        javax.xml.transform.TransformerException $r38, $r40;
        java.util.NoSuchElementException $r41;

        r0 := @this: org.apache.xalan.templates.AVT;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: org.apache.xalan.templates.ElemTemplateElement;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xalan.templates.AVT: java.lang.String m_simpleString> = null;

        r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts> = null;

        r0.<org.apache.xalan.templates.AVT: java.lang.String m_uri> = r2;

        r0.<org.apache.xalan.templates.AVT: java.lang.String m_name> = r3;

        r0.<org.apache.xalan.templates.AVT: java.lang.String m_rawName> = r4;

        $r19 = new java.util.StringTokenizer;

        specialinvoke $r19.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String,boolean)>(r5, "{}\"\'", 1);

        r7 = $r19;

        i0 = virtualinvoke r7.<java.util.StringTokenizer: int countTokens()>();

        if i0 >= 2 goto label03;

        r0.<org.apache.xalan.templates.AVT: java.lang.String m_simpleString> = r5;

     label01:
        $r24 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        if $r24 != null goto label02;

        $r26 = r0.<org.apache.xalan.templates.AVT: java.lang.String m_simpleString>;

        if $r26 != null goto label02;

        r0.<org.apache.xalan.templates.AVT: java.lang.String m_simpleString> = "";

     label02:
        return;

     label03:
        $r21 = new org.apache.xml.utils.FastStringBuffer;

        specialinvoke $r21.<org.apache.xml.utils.FastStringBuffer: void <init>(int)>(6);

        r8 = $r21;

        $r23 = new org.apache.xml.utils.FastStringBuffer;

        specialinvoke $r23.<org.apache.xml.utils.FastStringBuffer: void <init>(int)>(6);

        r9 = $r23;

     label04:
        $r22 = new java.util.Vector;

        $i1 = i0 + 1;

        specialinvoke $r22.<java.util.Vector: void <init>(int)>($i1);

        r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts> = $r22;

     label05:
        r11 = null;

        r12 = null;

     label06:
        $z0 = virtualinvoke r7.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label12;

     label07:
        if r11 == null goto label14;

        r13 = r11;

        r11 = null;

     label08:
        $i3 = virtualinvoke r13.<java.lang.String: int length()>();

        if $i3 != 1 goto label51;

        $c4 = virtualinvoke r13.<java.lang.String: char charAt(int)>(0);

        lookupswitch($c4)
        {
            case 34: goto label16;
            case 39: goto label16;
            case 123: goto label19;
            case 125: goto label44;
            default: goto label09;
        };

     label09:
        virtualinvoke r8.<org.apache.xml.utils.FastStringBuffer: void append(java.lang.String)>(r13);

     label10:
        if r12 == null goto label06;

     label11:
        $r29 = newarray (java.lang.Object)[1];

        $r29[0] = r12;

        virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: void warn(java.lang.String,java.lang.Object[])>("WG_ATTR_TEMPLATE", $r29);

     label12:
        $i2 = virtualinvoke r8.<org.apache.xml.utils.FastStringBuffer: int length()>();

        if $i2 <= 0 goto label55;

        $r27 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        $r25 = new org.apache.xalan.templates.AVTPartSimple;

        $r28 = virtualinvoke r8.<org.apache.xml.utils.FastStringBuffer: java.lang.String toString()>();

        specialinvoke $r25.<org.apache.xalan.templates.AVTPartSimple: void <init>(java.lang.String)>($r28);

        virtualinvoke $r27.<java.util.Vector: void addElement(java.lang.Object)>($r25);

        virtualinvoke r8.<org.apache.xml.utils.FastStringBuffer: void setLength(int)>(0);

     label13:
        goto label55;

     label14:
        r13 = virtualinvoke r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

     label15:
        goto label08;

     label16:
        virtualinvoke r8.<org.apache.xml.utils.FastStringBuffer: void append(java.lang.String)>(r13);

     label17:
        goto label10;

     label18:
        $r37 := @caughtexception;

        r10 = $r37;

        throw r10;

     label19:
        r11 = virtualinvoke r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $z2 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>("{");

        if $z2 == 0 goto label21;

        virtualinvoke r8.<org.apache.xml.utils.FastStringBuffer: void append(java.lang.String)>(r11);

     label20:
        r11 = null;

        goto label10;

     label21:
        $i5 = virtualinvoke r8.<org.apache.xml.utils.FastStringBuffer: int length()>();

        if $i5 <= 0 goto label22;

        $r35 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        $r36 = new org.apache.xalan.templates.AVTPartSimple;

        $r34 = virtualinvoke r8.<org.apache.xml.utils.FastStringBuffer: java.lang.String toString()>();

        specialinvoke $r36.<org.apache.xalan.templates.AVTPartSimple: void <init>(java.lang.String)>($r34);

        virtualinvoke $r35.<java.util.Vector: void addElement(java.lang.Object)>($r36);

        virtualinvoke r8.<org.apache.xml.utils.FastStringBuffer: void setLength(int)>(0);

     label22:
        virtualinvoke r9.<org.apache.xml.utils.FastStringBuffer: void setLength(int)>(0);

     label23:
        if r11 == null goto label40;

     label24:
        $i6 = virtualinvoke r11.<java.lang.String: int length()>();

        if $i6 != 1 goto label38;

        $c7 = virtualinvoke r11.<java.lang.String: char charAt(int)>(0);

        lookupswitch($c7)
        {
            case 34: goto label27;
            case 39: goto label27;
            case 123: goto label34;
            case 125: goto label36;
            default: goto label25;
        };

     label25:
        virtualinvoke r9.<org.apache.xml.utils.FastStringBuffer: void append(java.lang.String)>(r11);

        r11 = virtualinvoke r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

     label26:
        goto label23;

     label27:
        virtualinvoke r9.<org.apache.xml.utils.FastStringBuffer: void append(java.lang.String)>(r11);

     label28:
        r20 = r11;

     label29:
        r11 = virtualinvoke r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

     label30:
        $z3 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>(r20);

        if $z3 != 0 goto label32;

        virtualinvoke r9.<org.apache.xml.utils.FastStringBuffer: void append(java.lang.String)>(r11);

        r11 = virtualinvoke r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

     label31:
        goto label30;

     label32:
        virtualinvoke r9.<org.apache.xml.utils.FastStringBuffer: void append(java.lang.String)>(r11);

        r11 = virtualinvoke r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

     label33:
        goto label23;

     label34:
        r12 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_NO_CURLYBRACE", null);

     label35:
        r11 = null;

        goto label23;

     label36:
        virtualinvoke r8.<org.apache.xml.utils.FastStringBuffer: void setLength(int)>(0);

        $r30 = virtualinvoke r9.<org.apache.xml.utils.FastStringBuffer: java.lang.String toString()>();

        r17 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: org.apache.xpath.XPath createXPath(java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>($r30, r6);

        $r31 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        $r32 = new org.apache.xalan.templates.AVTPartXPath;

        specialinvoke $r32.<org.apache.xalan.templates.AVTPartXPath: void <init>(org.apache.xpath.XPath)>(r17);

        virtualinvoke $r31.<java.util.Vector: void addElement(java.lang.Object)>($r32);

     label37:
        r11 = null;

        goto label23;

     label38:
        virtualinvoke r9.<org.apache.xml.utils.FastStringBuffer: void append(java.lang.String)>(r11);

        r18 = virtualinvoke r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

     label39:
        r11 = r18;

        goto label23;

     label40:
        if r12 == null goto label10;

        goto label10;

     label41:
        $r41 := @caughtexception;

     label42:
        $r42 = newarray (java.lang.Object)[2];

        $r42[0] = r3;

        $r42[1] = r5;

        r12 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_ILLEGAL_ATTRIBUTE_VALUE", $r42);

     label43:
        goto label10;

     label44:
        r11 = virtualinvoke r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $z1 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>("}");

        if $z1 == 0 goto label46;

        virtualinvoke r8.<org.apache.xml.utils.FastStringBuffer: void append(java.lang.String)>(r11);

     label45:
        r11 = null;

        goto label10;

     label46:
        virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: void warn(java.lang.String,java.lang.Object[])>("WG_FOUND_CURLYBRACE", null);

     label47:
        virtualinvoke r8.<org.apache.xml.utils.FastStringBuffer: void append(java.lang.String)>("}");

     label48:
        goto label10;

     label49:
        $r33 := @caughtexception;

        r16 = $r33;

     label50:
        $r40 = new javax.xml.transform.TransformerException;

        specialinvoke $r40.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r16);

        throw $r40;

     label51:
        virtualinvoke r8.<org.apache.xml.utils.FastStringBuffer: void append(java.lang.String)>(r13);

     label52:
        goto label10;

     label53:
        $r39 := @caughtexception;

        r14 = $r39;

     label54:
        $r38 = new javax.xml.transform.TransformerException;

        specialinvoke $r38.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r14);

        throw $r38;

     label55:
        goto label01;

        catch java.lang.Throwable from label04 to label05 with label18;
        catch java.lang.Throwable from label06 to label07 with label18;
        catch java.lang.Throwable from label08 to label09 with label18;
        catch java.lang.Throwable from label09 to label10 with label18;
        catch org.xml.sax.SAXException from label11 to label12 with label53;
        catch java.lang.Throwable from label11 to label12 with label18;
        catch java.lang.Throwable from label12 to label13 with label18;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.util.NoSuchElementException from label19 to label20 with label41;
        catch java.lang.Throwable from label19 to label20 with label18;
        catch java.util.NoSuchElementException from label21 to label22 with label41;
        catch java.lang.Throwable from label21 to label22 with label18;
        catch java.util.NoSuchElementException from label22 to label23 with label41;
        catch java.lang.Throwable from label22 to label23 with label18;
        catch java.util.NoSuchElementException from label24 to label25 with label41;
        catch java.lang.Throwable from label24 to label25 with label18;
        catch java.util.NoSuchElementException from label25 to label26 with label41;
        catch java.lang.Throwable from label25 to label26 with label18;
        catch java.util.NoSuchElementException from label27 to label28 with label41;
        catch java.lang.Throwable from label27 to label28 with label18;
        catch java.util.NoSuchElementException from label29 to label30 with label41;
        catch java.lang.Throwable from label29 to label30 with label18;
        catch java.util.NoSuchElementException from label30 to label31 with label41;
        catch java.lang.Throwable from label30 to label31 with label18;
        catch java.util.NoSuchElementException from label32 to label33 with label41;
        catch java.lang.Throwable from label32 to label33 with label18;
        catch java.util.NoSuchElementException from label34 to label35 with label41;
        catch java.lang.Throwable from label34 to label35 with label18;
        catch java.util.NoSuchElementException from label36 to label37 with label41;
        catch java.lang.Throwable from label36 to label37 with label18;
        catch java.util.NoSuchElementException from label38 to label39 with label41;
        catch java.lang.Throwable from label38 to label39 with label18;
        catch java.lang.Throwable from label42 to label43 with label18;
        catch java.lang.Throwable from label44 to label45 with label18;
        catch org.xml.sax.SAXException from label46 to label47 with label49;
        catch java.lang.Throwable from label46 to label47 with label18;
        catch java.lang.Throwable from label47 to label48 with label18;
        catch java.lang.Throwable from label50 to label51 with label18;
        catch java.lang.Throwable from label51 to label52 with label18;
        catch java.lang.Throwable from label54 to label55 with label18;
    }

    private final org.apache.xml.utils.FastStringBuffer getBuffer()
    {
        org.apache.xalan.templates.AVT r0;
        org.apache.xml.utils.FastStringBuffer $r1;

        r0 := @this: org.apache.xalan.templates.AVT;

        $r1 = new org.apache.xml.utils.FastStringBuffer;

        specialinvoke $r1.<org.apache.xml.utils.FastStringBuffer: void <init>(int)>(8);

        return $r1;
    }

    public void callVisitors(org.apache.xalan.templates.XSLTVisitor)
    {
        org.apache.xalan.templates.AVT r0;
        org.apache.xalan.templates.XSLTVisitor r1;
        int i0, i1;
        boolean $z0;
        java.util.Vector $r2, $r3, $r4;
        java.lang.Object $r5;
        org.apache.xalan.templates.AVTPart $r6;

        r0 := @this: org.apache.xalan.templates.AVT;

        r1 := @parameter0: org.apache.xalan.templates.XSLTVisitor;

        $z0 = virtualinvoke r1.<org.apache.xalan.templates.XSLTVisitor: boolean visitAVT(org.apache.xalan.templates.AVT)>(r0);

        if $z0 == 0 goto label2;

        $r2 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        if $r2 == null goto label2;

        $r3 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        i0 = virtualinvoke $r3.<java.util.Vector: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r4 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        $r5 = virtualinvoke $r4.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        $r6 = (org.apache.xalan.templates.AVTPart) $r5;

        virtualinvoke $r6.<org.apache.xalan.templates.AVTPart: void callVisitors(org.apache.xalan.templates.XSLTVisitor)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public boolean canTraverseOutsideSubtree()
    {
        org.apache.xalan.templates.AVT r0;
        int i0, i1;
        java.util.Vector $r1, $r2, $r3;
        java.lang.Object $r4;
        org.apache.xalan.templates.AVTPart $r5;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.AVT;

        $r1 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        if $r1 == null goto label3;

        $r2 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r3 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        $r4 = virtualinvoke $r3.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        $r5 = (org.apache.xalan.templates.AVTPart) $r4;

        $z0 = virtualinvoke $r5.<org.apache.xalan.templates.AVTPart: boolean canTraverseOutsideSubtree()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public java.lang.String evaluate(org.apache.xpath.XPathContext, int, org.apache.xml.utils.PrefixResolver) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.AVT r0;
        org.apache.xpath.XPathContext r1;
        int i0, i1, i2;
        org.apache.xml.utils.PrefixResolver r2;
        org.apache.xml.utils.FastStringBuffer r3;
        java.lang.Throwable r4, $r12;
        java.lang.String r5, $r6, $r13;
        java.util.Vector $r7, $r8, $r9;
        org.apache.xalan.templates.AVTPart $r10;
        java.lang.Object $r11;

        r0 := @this: org.apache.xalan.templates.AVT;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.xml.utils.PrefixResolver;

        $r6 = r0.<org.apache.xalan.templates.AVT: java.lang.String m_simpleString>;

        if $r6 == null goto label1;

        $r13 = r0.<org.apache.xalan.templates.AVT: java.lang.String m_simpleString>;

        return $r13;

     label1:
        $r7 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        if $r7 == null goto label8;

        r3 = specialinvoke r0.<org.apache.xalan.templates.AVT: org.apache.xml.utils.FastStringBuffer getBuffer()>();

        $r8 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        i1 = virtualinvoke $r8.<java.util.Vector: int size()>();

        i2 = 0;

     label2:
        if i2 >= i1 goto label5;

     label3:
        $r9 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        $r11 = virtualinvoke $r9.<java.util.Vector: java.lang.Object elementAt(int)>(i2);

        $r10 = (org.apache.xalan.templates.AVTPart) $r11;

        virtualinvoke $r10.<org.apache.xalan.templates.AVTPart: void evaluate(org.apache.xpath.XPathContext,org.apache.xml.utils.FastStringBuffer,int,org.apache.xml.utils.PrefixResolver)>(r1, r3, i0, r2);

     label4:
        i2 = i2 + 1;

        goto label2;

     label5:
        r5 = virtualinvoke r3.<org.apache.xml.utils.FastStringBuffer: java.lang.String toString()>();

     label6:
        virtualinvoke r3.<org.apache.xml.utils.FastStringBuffer: void setLength(int)>(0);

        return r5;

     label7:
        $r12 := @caughtexception;

        r4 = $r12;

        virtualinvoke r3.<org.apache.xml.utils.FastStringBuffer: void setLength(int)>(0);

        throw r4;

     label8:
        return "";

        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public void fixupVariables(java.util.Vector, int)
    {
        org.apache.xalan.templates.AVT r0;
        java.util.Vector r1, $r2, $r3, $r4;
        int i0, i1, i2;
        java.lang.Object $r5;
        org.apache.xalan.templates.AVTPart $r6;

        r0 := @this: org.apache.xalan.templates.AVT;

        r1 := @parameter0: java.util.Vector;

        i0 := @parameter1: int;

        $r2 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        if $r2 == null goto label2;

        $r3 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        i1 = virtualinvoke $r3.<java.util.Vector: int size()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r4 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        $r5 = virtualinvoke $r4.<java.util.Vector: java.lang.Object elementAt(int)>(i2);

        $r6 = (org.apache.xalan.templates.AVTPart) $r5;

        virtualinvoke $r6.<org.apache.xalan.templates.AVTPart: void fixupVariables(java.util.Vector,int)>(r1, i0);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public java.lang.String getName()
    {
        org.apache.xalan.templates.AVT r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xalan.templates.AVT;

        $r1 = r0.<org.apache.xalan.templates.AVT: java.lang.String m_name>;

        return $r1;
    }

    public java.lang.String getRawName()
    {
        org.apache.xalan.templates.AVT r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xalan.templates.AVT;

        $r1 = r0.<org.apache.xalan.templates.AVT: java.lang.String m_rawName>;

        return $r1;
    }

    public java.lang.String getSimpleString()
    {
        org.apache.xalan.templates.AVT r0;
        org.apache.xml.utils.FastStringBuffer r1;
        int i0, i1;
        java.lang.Throwable r2, $r11;
        java.lang.String r3, $r4, $r10, $r12;
        java.util.Vector $r5, $r6, $r7;
        java.lang.Object $r8;
        org.apache.xalan.templates.AVTPart $r9;

        r0 := @this: org.apache.xalan.templates.AVT;

        $r4 = r0.<org.apache.xalan.templates.AVT: java.lang.String m_simpleString>;

        if $r4 == null goto label1;

        $r12 = r0.<org.apache.xalan.templates.AVT: java.lang.String m_simpleString>;

        return $r12;

     label1:
        $r5 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        if $r5 == null goto label8;

        r1 = specialinvoke r0.<org.apache.xalan.templates.AVT: org.apache.xml.utils.FastStringBuffer getBuffer()>();

        $r6 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        i0 = virtualinvoke $r6.<java.util.Vector: int size()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label5;

     label3:
        $r7 = r0.<org.apache.xalan.templates.AVT: java.util.Vector m_parts>;

        $r8 = virtualinvoke $r7.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        $r9 = (org.apache.xalan.templates.AVTPart) $r8;

        $r10 = virtualinvoke $r9.<org.apache.xalan.templates.AVTPart: java.lang.String getSimpleString()>();

        virtualinvoke r1.<org.apache.xml.utils.FastStringBuffer: void append(java.lang.String)>($r10);

     label4:
        i1 = i1 + 1;

        goto label2;

     label5:
        r3 = virtualinvoke r1.<org.apache.xml.utils.FastStringBuffer: java.lang.String toString()>();

     label6:
        virtualinvoke r1.<org.apache.xml.utils.FastStringBuffer: void setLength(int)>(0);

        return r3;

     label7:
        $r11 := @caughtexception;

        r2 = $r11;

        virtualinvoke r1.<org.apache.xml.utils.FastStringBuffer: void setLength(int)>(0);

        throw r2;

     label8:
        return "";

        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public java.lang.String getURI()
    {
        org.apache.xalan.templates.AVT r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xalan.templates.AVT;

        $r1 = r0.<org.apache.xalan.templates.AVT: java.lang.String m_uri>;

        return $r1;
    }

    public boolean isContextInsensitive()
    {
        org.apache.xalan.templates.AVT r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xalan.templates.AVT;

        $r1 = r0.<org.apache.xalan.templates.AVT: java.lang.String m_simpleString>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isSimple()
    {
        org.apache.xalan.templates.AVT r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xalan.templates.AVT;

        $r1 = r0.<org.apache.xalan.templates.AVT: java.lang.String m_simpleString>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public void setName(java.lang.String)
    {
        org.apache.xalan.templates.AVT r0;
        java.lang.String r1;

        r0 := @this: org.apache.xalan.templates.AVT;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xalan.templates.AVT: java.lang.String m_name> = r1;

        return;
    }

    public void setRawName(java.lang.String)
    {
        org.apache.xalan.templates.AVT r0;
        java.lang.String r1;

        r0 := @this: org.apache.xalan.templates.AVT;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xalan.templates.AVT: java.lang.String m_rawName> = r1;

        return;
    }

    public void setURI(java.lang.String)
    {
        org.apache.xalan.templates.AVT r0;
        java.lang.String r1;

        r0 := @this: org.apache.xalan.templates.AVT;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xalan.templates.AVT: java.lang.String m_uri> = r1;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.xalan.templates.AVT: long serialVersionUID> = 5167607155517042691L;

        <org.apache.xalan.templates.AVT: boolean USE_OBJECT_POOL> = 0;

        <org.apache.xalan.templates.AVT: int INIT_BUFFER_CHUNK_BITS> = 8;

        return;
    }
}
