public final class android.provider.Settings$System extends android.provider.Settings$NameValueTable
{
    public static final java.lang.String ACCELEROMETER_ROTATION;
    public static final java.lang.String ADB_ENABLED;
    public static final java.lang.String ADVANCED_SETTINGS;
    public static final int ADVANCED_SETTINGS_DEFAULT;
    public static final java.lang.String AIRPLANE_MODE_ON;
    public static final java.lang.String AIRPLANE_MODE_RADIOS;
    public static final java.lang.String AIRPLANE_MODE_TOGGLEABLE_RADIOS;
    public static final java.lang.String ALARM_ALERT;
    public static final java.lang.String ALWAYS_FINISH_ACTIVITIES;
    public static final java.lang.String ANDROID_ID;
    public static final java.lang.String ANIMATOR_DURATION_SCALE;
    public static final java.lang.String APPEND_FOR_LAST_AUDIBLE;
    public static final java.lang.String AUTO_TIME;
    public static final java.lang.String AUTO_TIME_ZONE;
    public static final java.lang.String BLUETOOTH_DISCOVERABILITY;
    public static final java.lang.String BLUETOOTH_DISCOVERABILITY_TIMEOUT;
    public static final java.lang.String BLUETOOTH_ON;
    public static final java.lang.String CAR_DOCK_SOUND;
    public static final java.lang.String CAR_UNDOCK_SOUND;
    public static final android.net.Uri CONTENT_URI;
    public static final java.lang.String DATA_ROAMING;
    public static final java.lang.String DATE_FORMAT;
    public static final java.lang.String DEBUG_APP;
    public static final android.net.Uri DEFAULT_ALARM_ALERT_URI;
    public static final android.net.Uri DEFAULT_NOTIFICATION_URI;
    public static final android.net.Uri DEFAULT_RINGTONE_URI;
    public static final java.lang.String DESK_DOCK_SOUND;
    public static final java.lang.String DESK_UNDOCK_SOUND;
    public static final java.lang.String DEVICE_PROVISIONED;
    public static final java.lang.String DIM_SCREEN;
    public static final java.lang.String DOCK_SOUNDS_ENABLED;
    public static final java.lang.String DTMF_TONE_TYPE_WHEN_DIALING;
    public static final java.lang.String DTMF_TONE_WHEN_DIALING;
    public static final java.lang.String EGG_MODE;
    public static final java.lang.String END_BUTTON_BEHAVIOR;
    public static final int END_BUTTON_BEHAVIOR_DEFAULT;
    public static final int END_BUTTON_BEHAVIOR_HOME;
    public static final int END_BUTTON_BEHAVIOR_SLEEP;
    public static final java.lang.String FONT_SCALE;
    public static final java.lang.String HAPTIC_FEEDBACK_ENABLED;
    public static final java.lang.String HEARING_AID;
    public static final java.lang.String HIDE_ROTATION_LOCK_TOGGLE_FOR_ACCESSIBILITY;
    public static final java.lang.String HTTP_PROXY;
    public static final java.lang.String INSTALL_NON_MARKET_APPS;
    public static final java.lang.String LOCATION_PROVIDERS_ALLOWED;
    public static final java.lang.String LOCKSCREEN_DISABLED;
    public static final java.lang.String LOCKSCREEN_SOUNDS_ENABLED;
    public static final java.lang.String LOCK_PATTERN_ENABLED;
    public static final java.lang.String LOCK_PATTERN_TACTILE_FEEDBACK_ENABLED;
    public static final java.lang.String LOCK_PATTERN_VISIBLE;
    public static final java.lang.String LOCK_SOUND;
    public static final java.lang.String LOGGING_ID;
    public static final java.lang.String LOW_BATTERY_SOUND;
    public static final java.lang.String MEDIA_BUTTON_RECEIVER;
    public static final java.lang.String MODE_RINGER;
    public static final java.lang.String MODE_RINGER_STREAMS_AFFECTED;
    private static final java.util.HashSet MOVED_TO_GLOBAL;
    private static final java.util.HashSet MOVED_TO_SECURE;
    private static final java.util.HashSet MOVED_TO_SECURE_THEN_GLOBAL;
    public static final java.lang.String MUTE_STREAMS_AFFECTED;
    public static final java.lang.String NETWORK_PREFERENCE;
    public static final java.lang.String NEXT_ALARM_FORMATTED;
    public static final java.lang.String NOTIFICATIONS_USE_RING_VOLUME;
    public static final java.lang.String NOTIFICATION_LIGHT_PULSE;
    public static final java.lang.String NOTIFICATION_SOUND;
    public static final java.lang.String PARENTAL_CONTROL_ENABLED;
    public static final java.lang.String PARENTAL_CONTROL_LAST_UPDATE;
    public static final java.lang.String PARENTAL_CONTROL_REDIRECT_URL;
    public static final java.lang.String POINTER_LOCATION;
    public static final java.lang.String POINTER_SPEED;
    public static final java.lang.String POWER_SOUNDS_ENABLED;
    public static final java.lang.String RADIO_BLUETOOTH;
    public static final java.lang.String RADIO_CELL;
    public static final java.lang.String RADIO_NFC;
    public static final java.lang.String RADIO_WIFI;
    public static final java.lang.String RADIO_WIMAX;
    public static final java.lang.String RINGTONE;
    public static final java.lang.String SCREEN_AUTO_BRIGHTNESS_ADJ;
    public static final java.lang.String SCREEN_BRIGHTNESS;
    public static final java.lang.String SCREEN_BRIGHTNESS_MODE;
    public static final int SCREEN_BRIGHTNESS_MODE_AUTOMATIC;
    public static final int SCREEN_BRIGHTNESS_MODE_MANUAL;
    public static final java.lang.String SCREEN_OFF_TIMEOUT;
    public static final java.lang.String SETTINGS_CLASSNAME;
    public static final java.lang.String[] SETTINGS_TO_BACKUP;
    public static final java.lang.String SETUP_WIZARD_HAS_RUN;
    public static final java.lang.String SHOW_GTALK_SERVICE_STATUS;
    public static final java.lang.String SHOW_PROCESSES;
    public static final java.lang.String SHOW_TOUCHES;
    public static final java.lang.String SHOW_WEB_SUGGESTIONS;
    public static final java.lang.String SIP_ADDRESS_ONLY;
    public static final java.lang.String SIP_ALWAYS;
    public static final java.lang.String SIP_ASK_ME_EACH_TIME;
    public static final java.lang.String SIP_CALL_OPTIONS;
    public static final java.lang.String SIP_RECEIVE_CALLS;
    public static final java.lang.String SOUND_EFFECTS_ENABLED;
    public static final java.lang.String STAY_ON_WHILE_PLUGGED_IN;
    public static final java.lang.String SYS_PROP_SETTING_VERSION;
    public static final java.lang.String TEXT_AUTO_CAPS;
    public static final java.lang.String TEXT_AUTO_PUNCTUATE;
    public static final java.lang.String TEXT_AUTO_REPLACE;
    public static final java.lang.String TEXT_SHOW_PASSWORD;
    public static final java.lang.String TIME_12_24;
    public static final java.lang.String TRANSITION_ANIMATION_SCALE;
    public static final java.lang.String TTY_MODE;
    public static final java.lang.String UNLOCK_SOUND;
    public static final java.lang.String USB_MASS_STORAGE_ENABLED;
    public static final java.lang.String USER_ROTATION;
    public static final java.lang.String USE_GOOGLE_MAIL;
    public static final java.lang.String VIBRATE_INPUT_DEVICES;
    public static final java.lang.String VIBRATE_IN_SILENT;
    public static final java.lang.String VIBRATE_ON;
    public static final java.lang.String VIBRATE_WHEN_RINGING;
    public static final java.lang.String VOLUME_ALARM;
    public static final java.lang.String VOLUME_BLUETOOTH_SCO;
    public static final java.lang.String VOLUME_MASTER;
    public static final java.lang.String VOLUME_MASTER_MUTE;
    public static final java.lang.String VOLUME_MUSIC;
    public static final java.lang.String VOLUME_NOTIFICATION;
    public static final java.lang.String VOLUME_RING;
    public static final java.lang.String[] VOLUME_SETTINGS;
    public static final java.lang.String VOLUME_SYSTEM;
    public static final java.lang.String VOLUME_VOICE;
    public static final java.lang.String WAIT_FOR_DEBUGGER;
    public static final java.lang.String WALLPAPER_ACTIVITY;
    public static final java.lang.String WIFI_MAX_DHCP_RETRY_COUNT;
    public static final java.lang.String WIFI_MOBILE_DATA_TRANSITION_WAKELOCK_TIMEOUT_MS;
    public static final java.lang.String WIFI_NETWORKS_AVAILABLE_NOTIFICATION_ON;
    public static final java.lang.String WIFI_NETWORKS_AVAILABLE_REPEAT_DELAY;
    public static final java.lang.String WIFI_NUM_OPEN_NETWORKS_KEPT;
    public static final java.lang.String WIFI_ON;
    public static final java.lang.String WIFI_SLEEP_POLICY;
    public static final int WIFI_SLEEP_POLICY_DEFAULT;
    public static final int WIFI_SLEEP_POLICY_NEVER;
    public static final int WIFI_SLEEP_POLICY_NEVER_WHILE_PLUGGED;
    public static final java.lang.String WIFI_STATIC_DNS1;
    public static final java.lang.String WIFI_STATIC_DNS2;
    public static final java.lang.String WIFI_STATIC_GATEWAY;
    public static final java.lang.String WIFI_STATIC_IP;
    public static final java.lang.String WIFI_STATIC_NETMASK;
    public static final java.lang.String WIFI_USE_STATIC_IP;
    public static final java.lang.String WIFI_WATCHDOG_ACCEPTABLE_PACKET_LOSS_PERCENTAGE;
    public static final java.lang.String WIFI_WATCHDOG_AP_COUNT;
    public static final java.lang.String WIFI_WATCHDOG_BACKGROUND_CHECK_DELAY_MS;
    public static final java.lang.String WIFI_WATCHDOG_BACKGROUND_CHECK_ENABLED;
    public static final java.lang.String WIFI_WATCHDOG_BACKGROUND_CHECK_TIMEOUT_MS;
    public static final java.lang.String WIFI_WATCHDOG_INITIAL_IGNORED_PING_COUNT;
    public static final java.lang.String WIFI_WATCHDOG_MAX_AP_CHECKS;
    public static final java.lang.String WIFI_WATCHDOG_ON;
    public static final java.lang.String WIFI_WATCHDOG_PING_COUNT;
    public static final java.lang.String WIFI_WATCHDOG_PING_DELAY_MS;
    public static final java.lang.String WIFI_WATCHDOG_PING_TIMEOUT_MS;
    public static final java.lang.String WINDOW_ANIMATION_SCALE;
    public static final java.lang.String WINDOW_ORIENTATION_LISTENER_LOG;
    private static final android.provider.Settings$NameValueCache sNameValueCache;

    static void <clinit>()
    {
        android.net.Uri $r0, $r2, $r79, $r80, $r81;
        android.provider.Settings$NameValueCache $r1;
        java.util.HashSet $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r76, $r77;
        java.lang.String[] $r75, $r78;

        <android.provider.Settings$System: java.lang.String WINDOW_ORIENTATION_LISTENER_LOG> = "window_orientation_listener_log";

        <android.provider.Settings$System: java.lang.String WINDOW_ANIMATION_SCALE> = "window_animation_scale";

        <android.provider.Settings$System: java.lang.String WIFI_WATCHDOG_PING_TIMEOUT_MS> = "wifi_watchdog_ping_timeout_ms";

        <android.provider.Settings$System: java.lang.String WIFI_WATCHDOG_PING_DELAY_MS> = "wifi_watchdog_ping_delay_ms";

        <android.provider.Settings$System: java.lang.String WIFI_WATCHDOG_PING_COUNT> = "wifi_watchdog_ping_count";

        <android.provider.Settings$System: java.lang.String WIFI_WATCHDOG_ON> = "wifi_watchdog_on";

        <android.provider.Settings$System: java.lang.String WIFI_WATCHDOG_MAX_AP_CHECKS> = "wifi_watchdog_max_ap_checks";

        <android.provider.Settings$System: java.lang.String WIFI_WATCHDOG_INITIAL_IGNORED_PING_COUNT> = "wifi_watchdog_initial_ignored_ping_count";

        <android.provider.Settings$System: java.lang.String WIFI_WATCHDOG_BACKGROUND_CHECK_TIMEOUT_MS> = "wifi_watchdog_background_check_timeout_ms";

        <android.provider.Settings$System: java.lang.String WIFI_WATCHDOG_BACKGROUND_CHECK_ENABLED> = "wifi_watchdog_background_check_enabled";

        <android.provider.Settings$System: java.lang.String WIFI_WATCHDOG_BACKGROUND_CHECK_DELAY_MS> = "wifi_watchdog_background_check_delay_ms";

        <android.provider.Settings$System: java.lang.String WIFI_WATCHDOG_AP_COUNT> = "wifi_watchdog_ap_count";

        <android.provider.Settings$System: java.lang.String WIFI_WATCHDOG_ACCEPTABLE_PACKET_LOSS_PERCENTAGE> = "wifi_watchdog_acceptable_packet_loss_percentage";

        <android.provider.Settings$System: java.lang.String WIFI_USE_STATIC_IP> = "wifi_use_static_ip";

        <android.provider.Settings$System: java.lang.String WIFI_STATIC_NETMASK> = "wifi_static_netmask";

        <android.provider.Settings$System: java.lang.String WIFI_STATIC_IP> = "wifi_static_ip";

        <android.provider.Settings$System: java.lang.String WIFI_STATIC_GATEWAY> = "wifi_static_gateway";

        <android.provider.Settings$System: java.lang.String WIFI_STATIC_DNS2> = "wifi_static_dns2";

        <android.provider.Settings$System: java.lang.String WIFI_STATIC_DNS1> = "wifi_static_dns1";

        <android.provider.Settings$System: int WIFI_SLEEP_POLICY_NEVER_WHILE_PLUGGED> = 1;

        <android.provider.Settings$System: int WIFI_SLEEP_POLICY_NEVER> = 2;

        <android.provider.Settings$System: int WIFI_SLEEP_POLICY_DEFAULT> = 0;

        <android.provider.Settings$System: java.lang.String WIFI_SLEEP_POLICY> = "wifi_sleep_policy";

        <android.provider.Settings$System: java.lang.String WIFI_ON> = "wifi_on";

        <android.provider.Settings$System: java.lang.String WIFI_NUM_OPEN_NETWORKS_KEPT> = "wifi_num_open_networks_kept";

        <android.provider.Settings$System: java.lang.String WIFI_NETWORKS_AVAILABLE_REPEAT_DELAY> = "wifi_networks_available_repeat_delay";

        <android.provider.Settings$System: java.lang.String WIFI_NETWORKS_AVAILABLE_NOTIFICATION_ON> = "wifi_networks_available_notification_on";

        <android.provider.Settings$System: java.lang.String WIFI_MOBILE_DATA_TRANSITION_WAKELOCK_TIMEOUT_MS> = "wifi_mobile_data_transition_wakelock_timeout_ms";

        <android.provider.Settings$System: java.lang.String WIFI_MAX_DHCP_RETRY_COUNT> = "wifi_max_dhcp_retry_count";

        <android.provider.Settings$System: java.lang.String WALLPAPER_ACTIVITY> = "wallpaper_activity";

        <android.provider.Settings$System: java.lang.String WAIT_FOR_DEBUGGER> = "wait_for_debugger";

        <android.provider.Settings$System: java.lang.String VOLUME_VOICE> = "volume_voice";

        <android.provider.Settings$System: java.lang.String VOLUME_SYSTEM> = "volume_system";

        <android.provider.Settings$System: java.lang.String VOLUME_RING> = "volume_ring";

        <android.provider.Settings$System: java.lang.String VOLUME_NOTIFICATION> = "volume_notification";

        <android.provider.Settings$System: java.lang.String VOLUME_MUSIC> = "volume_music";

        <android.provider.Settings$System: java.lang.String VOLUME_MASTER_MUTE> = "volume_master_mute";

        <android.provider.Settings$System: java.lang.String VOLUME_MASTER> = "volume_master";

        <android.provider.Settings$System: java.lang.String VOLUME_BLUETOOTH_SCO> = "volume_bluetooth_sco";

        <android.provider.Settings$System: java.lang.String VOLUME_ALARM> = "volume_alarm";

        <android.provider.Settings$System: java.lang.String VIBRATE_WHEN_RINGING> = "vibrate_when_ringing";

        <android.provider.Settings$System: java.lang.String VIBRATE_ON> = "vibrate_on";

        <android.provider.Settings$System: java.lang.String VIBRATE_IN_SILENT> = "vibrate_in_silent";

        <android.provider.Settings$System: java.lang.String VIBRATE_INPUT_DEVICES> = "vibrate_input_devices";

        <android.provider.Settings$System: java.lang.String USE_GOOGLE_MAIL> = "use_google_mail";

        <android.provider.Settings$System: java.lang.String USER_ROTATION> = "user_rotation";

        <android.provider.Settings$System: java.lang.String USB_MASS_STORAGE_ENABLED> = "usb_mass_storage_enabled";

        <android.provider.Settings$System: java.lang.String UNLOCK_SOUND> = "unlock_sound";

        <android.provider.Settings$System: java.lang.String TTY_MODE> = "tty_mode";

        <android.provider.Settings$System: java.lang.String TRANSITION_ANIMATION_SCALE> = "transition_animation_scale";

        <android.provider.Settings$System: java.lang.String TIME_12_24> = "time_12_24";

        <android.provider.Settings$System: java.lang.String TEXT_SHOW_PASSWORD> = "show_password";

        <android.provider.Settings$System: java.lang.String TEXT_AUTO_REPLACE> = "auto_replace";

        <android.provider.Settings$System: java.lang.String TEXT_AUTO_PUNCTUATE> = "auto_punctuate";

        <android.provider.Settings$System: java.lang.String TEXT_AUTO_CAPS> = "auto_caps";

        <android.provider.Settings$System: java.lang.String SYS_PROP_SETTING_VERSION> = "sys.settings_system_version";

        <android.provider.Settings$System: java.lang.String STAY_ON_WHILE_PLUGGED_IN> = "stay_on_while_plugged_in";

        <android.provider.Settings$System: java.lang.String SOUND_EFFECTS_ENABLED> = "sound_effects_enabled";

        <android.provider.Settings$System: java.lang.String SIP_RECEIVE_CALLS> = "sip_receive_calls";

        <android.provider.Settings$System: java.lang.String SIP_CALL_OPTIONS> = "sip_call_options";

        <android.provider.Settings$System: java.lang.String SIP_ASK_ME_EACH_TIME> = "SIP_ASK_ME_EACH_TIME";

        <android.provider.Settings$System: java.lang.String SIP_ALWAYS> = "SIP_ALWAYS";

        <android.provider.Settings$System: java.lang.String SIP_ADDRESS_ONLY> = "SIP_ADDRESS_ONLY";

        <android.provider.Settings$System: java.lang.String SHOW_WEB_SUGGESTIONS> = "show_web_suggestions";

        <android.provider.Settings$System: java.lang.String SHOW_TOUCHES> = "show_touches";

        <android.provider.Settings$System: java.lang.String SHOW_PROCESSES> = "show_processes";

        <android.provider.Settings$System: java.lang.String SHOW_GTALK_SERVICE_STATUS> = "SHOW_GTALK_SERVICE_STATUS";

        <android.provider.Settings$System: java.lang.String SETUP_WIZARD_HAS_RUN> = "setup_wizard_has_run";

        <android.provider.Settings$System: java.lang.String SETTINGS_CLASSNAME> = "settings_classname";

        <android.provider.Settings$System: java.lang.String SCREEN_OFF_TIMEOUT> = "screen_off_timeout";

        <android.provider.Settings$System: int SCREEN_BRIGHTNESS_MODE_MANUAL> = 0;

        <android.provider.Settings$System: int SCREEN_BRIGHTNESS_MODE_AUTOMATIC> = 1;

        <android.provider.Settings$System: java.lang.String SCREEN_BRIGHTNESS_MODE> = "screen_brightness_mode";

        <android.provider.Settings$System: java.lang.String SCREEN_BRIGHTNESS> = "screen_brightness";

        <android.provider.Settings$System: java.lang.String SCREEN_AUTO_BRIGHTNESS_ADJ> = "screen_auto_brightness_adj";

        <android.provider.Settings$System: java.lang.String RINGTONE> = "ringtone";

        <android.provider.Settings$System: java.lang.String RADIO_WIMAX> = "wimax";

        <android.provider.Settings$System: java.lang.String RADIO_WIFI> = "wifi";

        <android.provider.Settings$System: java.lang.String RADIO_NFC> = "nfc";

        <android.provider.Settings$System: java.lang.String RADIO_CELL> = "cell";

        <android.provider.Settings$System: java.lang.String RADIO_BLUETOOTH> = "bluetooth";

        <android.provider.Settings$System: java.lang.String POWER_SOUNDS_ENABLED> = "power_sounds_enabled";

        <android.provider.Settings$System: java.lang.String POINTER_SPEED> = "pointer_speed";

        <android.provider.Settings$System: java.lang.String POINTER_LOCATION> = "pointer_location";

        <android.provider.Settings$System: java.lang.String PARENTAL_CONTROL_REDIRECT_URL> = "parental_control_redirect_url";

        <android.provider.Settings$System: java.lang.String PARENTAL_CONTROL_LAST_UPDATE> = "parental_control_last_update";

        <android.provider.Settings$System: java.lang.String PARENTAL_CONTROL_ENABLED> = "parental_control_enabled";

        <android.provider.Settings$System: java.lang.String NOTIFICATION_SOUND> = "notification_sound";

        <android.provider.Settings$System: java.lang.String NOTIFICATION_LIGHT_PULSE> = "notification_light_pulse";

        <android.provider.Settings$System: java.lang.String NOTIFICATIONS_USE_RING_VOLUME> = "notifications_use_ring_volume";

        <android.provider.Settings$System: java.lang.String NEXT_ALARM_FORMATTED> = "next_alarm_formatted";

        <android.provider.Settings$System: java.lang.String NETWORK_PREFERENCE> = "network_preference";

        <android.provider.Settings$System: java.lang.String MUTE_STREAMS_AFFECTED> = "mute_streams_affected";

        <android.provider.Settings$System: java.lang.String MODE_RINGER_STREAMS_AFFECTED> = "mode_ringer_streams_affected";

        <android.provider.Settings$System: java.lang.String MODE_RINGER> = "mode_ringer";

        <android.provider.Settings$System: java.lang.String MEDIA_BUTTON_RECEIVER> = "media_button_receiver";

        <android.provider.Settings$System: java.lang.String LOW_BATTERY_SOUND> = "low_battery_sound";

        <android.provider.Settings$System: java.lang.String LOGGING_ID> = "logging_id";

        <android.provider.Settings$System: java.lang.String LOCK_SOUND> = "lock_sound";

        <android.provider.Settings$System: java.lang.String LOCK_PATTERN_VISIBLE> = "lock_pattern_visible_pattern";

        <android.provider.Settings$System: java.lang.String LOCK_PATTERN_TACTILE_FEEDBACK_ENABLED> = "lock_pattern_tactile_feedback_enabled";

        <android.provider.Settings$System: java.lang.String LOCK_PATTERN_ENABLED> = "lock_pattern_autolock";

        <android.provider.Settings$System: java.lang.String LOCKSCREEN_SOUNDS_ENABLED> = "lockscreen_sounds_enabled";

        <android.provider.Settings$System: java.lang.String LOCKSCREEN_DISABLED> = "lockscreen.disabled";

        <android.provider.Settings$System: java.lang.String LOCATION_PROVIDERS_ALLOWED> = "location_providers_allowed";

        <android.provider.Settings$System: java.lang.String INSTALL_NON_MARKET_APPS> = "install_non_market_apps";

        <android.provider.Settings$System: java.lang.String HTTP_PROXY> = "http_proxy";

        <android.provider.Settings$System: java.lang.String HIDE_ROTATION_LOCK_TOGGLE_FOR_ACCESSIBILITY> = "hide_rotation_lock_toggle_for_accessibility";

        <android.provider.Settings$System: java.lang.String HEARING_AID> = "hearing_aid";

        <android.provider.Settings$System: java.lang.String HAPTIC_FEEDBACK_ENABLED> = "haptic_feedback_enabled";

        <android.provider.Settings$System: java.lang.String FONT_SCALE> = "font_scale";

        <android.provider.Settings$System: int END_BUTTON_BEHAVIOR_SLEEP> = 2;

        <android.provider.Settings$System: int END_BUTTON_BEHAVIOR_HOME> = 1;

        <android.provider.Settings$System: int END_BUTTON_BEHAVIOR_DEFAULT> = 2;

        <android.provider.Settings$System: java.lang.String END_BUTTON_BEHAVIOR> = "end_button_behavior";

        <android.provider.Settings$System: java.lang.String EGG_MODE> = "egg_mode";

        <android.provider.Settings$System: java.lang.String DTMF_TONE_WHEN_DIALING> = "dtmf_tone";

        <android.provider.Settings$System: java.lang.String DTMF_TONE_TYPE_WHEN_DIALING> = "dtmf_tone_type";

        <android.provider.Settings$System: java.lang.String DOCK_SOUNDS_ENABLED> = "dock_sounds_enabled";

        <android.provider.Settings$System: java.lang.String DIM_SCREEN> = "dim_screen";

        <android.provider.Settings$System: java.lang.String DEVICE_PROVISIONED> = "device_provisioned";

        <android.provider.Settings$System: java.lang.String DESK_UNDOCK_SOUND> = "desk_undock_sound";

        <android.provider.Settings$System: java.lang.String DESK_DOCK_SOUND> = "desk_dock_sound";

        <android.provider.Settings$System: java.lang.String DEBUG_APP> = "debug_app";

        <android.provider.Settings$System: java.lang.String DATE_FORMAT> = "date_format";

        <android.provider.Settings$System: java.lang.String DATA_ROAMING> = "data_roaming";

        <android.provider.Settings$System: java.lang.String CAR_UNDOCK_SOUND> = "car_undock_sound";

        <android.provider.Settings$System: java.lang.String CAR_DOCK_SOUND> = "car_dock_sound";

        <android.provider.Settings$System: java.lang.String BLUETOOTH_ON> = "bluetooth_on";

        <android.provider.Settings$System: java.lang.String BLUETOOTH_DISCOVERABILITY_TIMEOUT> = "bluetooth_discoverability_timeout";

        <android.provider.Settings$System: java.lang.String BLUETOOTH_DISCOVERABILITY> = "bluetooth_discoverability";

        <android.provider.Settings$System: java.lang.String AUTO_TIME_ZONE> = "auto_time_zone";

        <android.provider.Settings$System: java.lang.String AUTO_TIME> = "auto_time";

        <android.provider.Settings$System: java.lang.String APPEND_FOR_LAST_AUDIBLE> = "_last_audible";

        <android.provider.Settings$System: java.lang.String ANIMATOR_DURATION_SCALE> = "animator_duration_scale";

        <android.provider.Settings$System: java.lang.String ANDROID_ID> = "android_id";

        <android.provider.Settings$System: java.lang.String ALWAYS_FINISH_ACTIVITIES> = "always_finish_activities";

        <android.provider.Settings$System: java.lang.String ALARM_ALERT> = "alarm_alert";

        <android.provider.Settings$System: java.lang.String AIRPLANE_MODE_TOGGLEABLE_RADIOS> = "airplane_mode_toggleable_radios";

        <android.provider.Settings$System: java.lang.String AIRPLANE_MODE_RADIOS> = "airplane_mode_radios";

        <android.provider.Settings$System: java.lang.String AIRPLANE_MODE_ON> = "airplane_mode_on";

        <android.provider.Settings$System: int ADVANCED_SETTINGS_DEFAULT> = 0;

        <android.provider.Settings$System: java.lang.String ADVANCED_SETTINGS> = "advanced_settings";

        <android.provider.Settings$System: java.lang.String ADB_ENABLED> = "adb_enabled";

        <android.provider.Settings$System: java.lang.String ACCELEROMETER_ROTATION> = "accelerometer_rotation";

        $r0 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://settings/system");

        <android.provider.Settings$System: android.net.Uri CONTENT_URI> = $r0;

        $r1 = new android.provider.Settings$NameValueCache;

        $r2 = <android.provider.Settings$System: android.net.Uri CONTENT_URI>;

        specialinvoke $r1.<android.provider.Settings$NameValueCache: void <init>(java.lang.String,android.net.Uri,java.lang.String,java.lang.String)>("sys.settings_system_version", $r2, "GET_system", "PUT_system");

        <android.provider.Settings$System: android.provider.Settings$NameValueCache sNameValueCache> = $r1;

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>(int)>(30);

        <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE> = $r3;

        $r4 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r4.<java.util.HashSet: boolean add(java.lang.Object)>("android_id");

        $r5 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r5.<java.util.HashSet: boolean add(java.lang.Object)>("http_proxy");

        $r6 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r6.<java.util.HashSet: boolean add(java.lang.Object)>("location_providers_allowed");

        $r7 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r7.<java.util.HashSet: boolean add(java.lang.Object)>("lock_biometric_weak_flags");

        $r8 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r8.<java.util.HashSet: boolean add(java.lang.Object)>("lock_pattern_autolock");

        $r9 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r9.<java.util.HashSet: boolean add(java.lang.Object)>("lock_pattern_visible_pattern");

        $r10 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r10.<java.util.HashSet: boolean add(java.lang.Object)>("lock_pattern_tactile_feedback_enabled");

        $r11 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r11.<java.util.HashSet: boolean add(java.lang.Object)>("logging_id");

        $r12 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r12.<java.util.HashSet: boolean add(java.lang.Object)>("parental_control_enabled");

        $r13 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r13.<java.util.HashSet: boolean add(java.lang.Object)>("parental_control_last_update");

        $r14 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r14.<java.util.HashSet: boolean add(java.lang.Object)>("parental_control_redirect_url");

        $r15 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r15.<java.util.HashSet: boolean add(java.lang.Object)>("settings_classname");

        $r16 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r16.<java.util.HashSet: boolean add(java.lang.Object)>("use_google_mail");

        $r17 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r17.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_networks_available_notification_on");

        $r19 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r19.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_networks_available_repeat_delay");

        $r18 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r18.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_num_open_networks_kept");

        $r21 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r21.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_on");

        $r20 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r20.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_watchdog_acceptable_packet_loss_percentage");

        $r23 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r23.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_watchdog_ap_count");

        $r22 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r22.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_watchdog_background_check_delay_ms");

        $r25 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r25.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_watchdog_background_check_enabled");

        $r24 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r24.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_watchdog_background_check_timeout_ms");

        $r27 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r27.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_watchdog_initial_ignored_ping_count");

        $r26 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r26.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_watchdog_max_ap_checks");

        $r29 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r29.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_watchdog_on");

        $r28 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r28.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_watchdog_ping_count");

        $r31 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r31.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_watchdog_ping_delay_ms");

        $r30 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        virtualinvoke $r30.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_watchdog_ping_timeout_ms");

        $r34 = new java.util.HashSet;

        specialinvoke $r34.<java.util.HashSet: void <init>()>();

        <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL> = $r34;

        $r33 = new java.util.HashSet;

        specialinvoke $r33.<java.util.HashSet: void <init>()>();

        <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE_THEN_GLOBAL> = $r33;

        $r32 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE_THEN_GLOBAL>;

        virtualinvoke $r32.<java.util.HashSet: boolean add(java.lang.Object)>("adb_enabled");

        $r37 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE_THEN_GLOBAL>;

        virtualinvoke $r37.<java.util.HashSet: boolean add(java.lang.Object)>("bluetooth_on");

        $r38 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE_THEN_GLOBAL>;

        virtualinvoke $r38.<java.util.HashSet: boolean add(java.lang.Object)>("data_roaming");

        $r35 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE_THEN_GLOBAL>;

        virtualinvoke $r35.<java.util.HashSet: boolean add(java.lang.Object)>("device_provisioned");

        $r36 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE_THEN_GLOBAL>;

        virtualinvoke $r36.<java.util.HashSet: boolean add(java.lang.Object)>("install_non_market_apps");

        $r41 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE_THEN_GLOBAL>;

        virtualinvoke $r41.<java.util.HashSet: boolean add(java.lang.Object)>("usb_mass_storage_enabled");

        $r42 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE_THEN_GLOBAL>;

        virtualinvoke $r42.<java.util.HashSet: boolean add(java.lang.Object)>("http_proxy");

        $r39 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r39.<java.util.HashSet: boolean add(java.lang.Object)>("airplane_mode_on");

        $r40 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r40.<java.util.HashSet: boolean add(java.lang.Object)>("airplane_mode_radios");

        $r45 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r45.<java.util.HashSet: boolean add(java.lang.Object)>("airplane_mode_toggleable_radios");

        $r46 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r46.<java.util.HashSet: boolean add(java.lang.Object)>("auto_time");

        $r43 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r43.<java.util.HashSet: boolean add(java.lang.Object)>("auto_time_zone");

        $r44 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r44.<java.util.HashSet: boolean add(java.lang.Object)>("car_dock_sound");

        $r49 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r49.<java.util.HashSet: boolean add(java.lang.Object)>("car_undock_sound");

        $r50 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r50.<java.util.HashSet: boolean add(java.lang.Object)>("desk_dock_sound");

        $r47 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r47.<java.util.HashSet: boolean add(java.lang.Object)>("desk_undock_sound");

        $r48 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r48.<java.util.HashSet: boolean add(java.lang.Object)>("dock_sounds_enabled");

        $r54 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r54.<java.util.HashSet: boolean add(java.lang.Object)>("lock_sound");

        $r53 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r53.<java.util.HashSet: boolean add(java.lang.Object)>("unlock_sound");

        $r52 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r52.<java.util.HashSet: boolean add(java.lang.Object)>("low_battery_sound");

        $r51 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r51.<java.util.HashSet: boolean add(java.lang.Object)>("power_sounds_enabled");

        $r58 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r58.<java.util.HashSet: boolean add(java.lang.Object)>("stay_on_while_plugged_in");

        $r57 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r57.<java.util.HashSet: boolean add(java.lang.Object)>("wifi_sleep_policy");

        $r56 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r56.<java.util.HashSet: boolean add(java.lang.Object)>("mode_ringer");

        $r55 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r55.<java.util.HashSet: boolean add(java.lang.Object)>("window_animation_scale");

        $r62 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r62.<java.util.HashSet: boolean add(java.lang.Object)>("transition_animation_scale");

        $r61 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r61.<java.util.HashSet: boolean add(java.lang.Object)>("animator_duration_scale");

        $r60 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r60.<java.util.HashSet: boolean add(java.lang.Object)>("fancy_ime_animations");

        $r59 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r59.<java.util.HashSet: boolean add(java.lang.Object)>("compatibility_mode");

        $r66 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r66.<java.util.HashSet: boolean add(java.lang.Object)>("emergency_tone");

        $r65 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r65.<java.util.HashSet: boolean add(java.lang.Object)>("call_auto_retry");

        $r64 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r64.<java.util.HashSet: boolean add(java.lang.Object)>("debug_app");

        $r63 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r63.<java.util.HashSet: boolean add(java.lang.Object)>("wait_for_debugger");

        $r71 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r71.<java.util.HashSet: boolean add(java.lang.Object)>("show_processes");

        $r72 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r72.<java.util.HashSet: boolean add(java.lang.Object)>("always_finish_activities");

        $r73 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r73.<java.util.HashSet: boolean add(java.lang.Object)>("tzinfo_content_url");

        $r74 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r74.<java.util.HashSet: boolean add(java.lang.Object)>("tzinfo_metadata_url");

        $r67 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r67.<java.util.HashSet: boolean add(java.lang.Object)>("selinux_content_url");

        $r68 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r68.<java.util.HashSet: boolean add(java.lang.Object)>("selinux_metadata_url");

        $r69 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r69.<java.util.HashSet: boolean add(java.lang.Object)>("sms_short_codes_content_url");

        $r70 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r70.<java.util.HashSet: boolean add(java.lang.Object)>("sms_short_codes_metadata_url");

        $r76 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r76.<java.util.HashSet: boolean add(java.lang.Object)>("cert_pin_content_url");

        $r77 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke $r77.<java.util.HashSet: boolean add(java.lang.Object)>("cert_pin_metadata_url");

        $r78 = newarray (java.lang.String)[7];

        $r78[0] = "volume_voice";

        $r78[1] = "volume_system";

        $r78[2] = "volume_ring";

        $r78[3] = "volume_music";

        $r78[4] = "volume_alarm";

        $r78[5] = "volume_notification";

        $r78[6] = "volume_bluetooth_sco";

        <android.provider.Settings$System: java.lang.String[] VOLUME_SETTINGS> = $r78;

        $r79 = staticinvoke <android.provider.Settings$System: android.net.Uri getUriFor(java.lang.String)>("ringtone");

        <android.provider.Settings$System: android.net.Uri DEFAULT_RINGTONE_URI> = $r79;

        $r80 = staticinvoke <android.provider.Settings$System: android.net.Uri getUriFor(java.lang.String)>("notification_sound");

        <android.provider.Settings$System: android.net.Uri DEFAULT_NOTIFICATION_URI> = $r80;

        $r81 = staticinvoke <android.provider.Settings$System: android.net.Uri getUriFor(java.lang.String)>("alarm_alert");

        <android.provider.Settings$System: android.net.Uri DEFAULT_ALARM_ALERT_URI> = $r81;

        $r75 = newarray (java.lang.String)[55];

        $r75[0] = "stay_on_while_plugged_in";

        $r75[1] = "wifi_use_static_ip";

        $r75[2] = "wifi_static_ip";

        $r75[3] = "wifi_static_gateway";

        $r75[4] = "wifi_static_netmask";

        $r75[5] = "wifi_static_dns1";

        $r75[6] = "wifi_static_dns2";

        $r75[7] = "bluetooth_discoverability";

        $r75[8] = "bluetooth_discoverability_timeout";

        $r75[9] = "dim_screen";

        $r75[10] = "screen_off_timeout";

        $r75[11] = "screen_brightness";

        $r75[12] = "screen_brightness_mode";

        $r75[13] = "screen_auto_brightness_adj";

        $r75[14] = "vibrate_input_devices";

        $r75[15] = "mode_ringer_streams_affected";

        $r75[16] = "volume_voice";

        $r75[17] = "volume_system";

        $r75[18] = "volume_ring";

        $r75[19] = "volume_music";

        $r75[20] = "volume_alarm";

        $r75[21] = "volume_notification";

        $r75[22] = "volume_bluetooth_sco";

        $r75[23] = "volume_voice_last_audible";

        $r75[24] = "volume_system_last_audible";

        $r75[25] = "volume_ring_last_audible";

        $r75[26] = "volume_music_last_audible";

        $r75[27] = "volume_alarm_last_audible";

        $r75[28] = "volume_notification_last_audible";

        $r75[29] = "volume_bluetooth_sco_last_audible";

        $r75[30] = "auto_replace";

        $r75[31] = "auto_caps";

        $r75[32] = "auto_punctuate";

        $r75[33] = "show_password";

        $r75[34] = "auto_time";

        $r75[35] = "auto_time_zone";

        $r75[36] = "time_12_24";

        $r75[37] = "date_format";

        $r75[38] = "dtmf_tone";

        $r75[39] = "dtmf_tone_type";

        $r75[40] = "hearing_aid";

        $r75[41] = "tty_mode";

        $r75[42] = "sound_effects_enabled";

        $r75[43] = "haptic_feedback_enabled";

        $r75[44] = "power_sounds_enabled";

        $r75[45] = "dock_sounds_enabled";

        $r75[46] = "lockscreen_sounds_enabled";

        $r75[47] = "show_web_suggestions";

        $r75[48] = "notification_light_pulse";

        $r75[49] = "sip_call_options";

        $r75[50] = "sip_receive_calls";

        $r75[51] = "pointer_speed";

        $r75[52] = "vibrate_when_ringing";

        $r75[53] = "ringtone";

        $r75[54] = "notification_sound";

        <android.provider.Settings$System: java.lang.String[] SETTINGS_TO_BACKUP> = $r75;

        return;
    }

    public void <init>()
    {
        android.provider.Settings$System r0;

        r0 := @this: android.provider.Settings$System;

        specialinvoke r0.<android.provider.Settings$NameValueTable: void <init>()>();

        return;
    }

    public static void clearConfiguration(android.content.res.Configuration)
    {
        android.content.res.Configuration r0;

        r0 := @parameter0: android.content.res.Configuration;

        r0.<android.content.res.Configuration: float fontScale> = 0.0F;

        return;
    }

    public static void getConfiguration(android.content.ContentResolver, android.content.res.Configuration)
    {
        android.content.ContentResolver r0;
        android.content.res.Configuration r1;
        int $i0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.content.res.Configuration;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        staticinvoke <android.provider.Settings$System: void getConfigurationForUser(android.content.ContentResolver,android.content.res.Configuration,int)>(r0, r1, $i0);

        return;
    }

    public static void getConfigurationForUser(android.content.ContentResolver, android.content.res.Configuration, int)
    {
        android.content.ContentResolver r0;
        android.content.res.Configuration r1;
        int i0;
        float $f0, $f1, $f2;
        byte $b1;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.content.res.Configuration;

        i0 := @parameter2: int;

        $f0 = r1.<android.content.res.Configuration: float fontScale>;

        $f1 = staticinvoke <android.provider.Settings$System: float getFloatForUser(android.content.ContentResolver,java.lang.String,float,int)>(r0, "font_scale", $f0, i0);

        r1.<android.content.res.Configuration: float fontScale> = $f1;

        $f2 = r1.<android.content.res.Configuration: float fontScale>;

        $b1 = $f2 cmpg 0.0F;

        if $b1 >= 0 goto label1;

        r1.<android.content.res.Configuration: float fontScale> = 1.0F;

     label1:
        return;
    }

    public static float getFloat(android.content.ContentResolver, java.lang.String) throws android.provider.Settings$SettingNotFoundException
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        int $i0;
        float $f0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $f0 = staticinvoke <android.provider.Settings$System: float getFloatForUser(android.content.ContentResolver,java.lang.String,int)>(r0, r1, $i0);

        return $f0;
    }

    public static float getFloat(android.content.ContentResolver, java.lang.String, float)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        float f0, $f1;
        int $i0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        f0 := @parameter2: float;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $f1 = staticinvoke <android.provider.Settings$System: float getFloatForUser(android.content.ContentResolver,java.lang.String,float,int)>(r0, r1, f0, $i0);

        return $f1;
    }

    public static float getFloatForUser(android.content.ContentResolver, java.lang.String, float, int)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, r2;
        float f0, f1;
        int i0;
        java.lang.NumberFormatException $r4;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        f0 := @parameter2: float;

        i0 := @parameter3: int;

        r2 = staticinvoke <android.provider.Settings$System: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>(r0, r1, i0);

        if r2 == null goto label3;

     label1:
        f1 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r2);

     label2:
        f0 = f1;

     label3:
        return f0;

     label4:
        $r4 := @caughtexception;

        return f0;

        catch java.lang.NumberFormatException from label1 to label2 with label4;
    }

    public static float getFloatForUser(android.content.ContentResolver, java.lang.String, int) throws android.provider.Settings$SettingNotFoundException
    {
        android.content.ContentResolver r0;
        java.lang.String r1, r2;
        int i0;
        float f0;
        android.provider.Settings$SettingNotFoundException $r4, $r6;
        java.lang.NumberFormatException $r5;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 = staticinvoke <android.provider.Settings$System: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>(r0, r1, i0);

        if r2 != null goto label1;

        $r4 = new android.provider.Settings$SettingNotFoundException;

        specialinvoke $r4.<android.provider.Settings$SettingNotFoundException: void <init>(java.lang.String)>(r1);

        throw $r4;

     label1:
        f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r2);

     label2:
        return f0;

     label3:
        $r5 := @caughtexception;

        $r6 = new android.provider.Settings$SettingNotFoundException;

        specialinvoke $r6.<android.provider.Settings$SettingNotFoundException: void <init>(java.lang.String)>(r1);

        throw $r6;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static int getInt(android.content.ContentResolver, java.lang.String) throws android.provider.Settings$SettingNotFoundException
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        int $i0, $i1;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $i1 = staticinvoke <android.provider.Settings$System: int getIntForUser(android.content.ContentResolver,java.lang.String,int)>(r0, r1, $i0);

        return $i1;
    }

    public static int getInt(android.content.ContentResolver, java.lang.String, int)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        int i0, $i1, $i2;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $i1 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $i2 = staticinvoke <android.provider.Settings$System: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)>(r0, r1, i0, $i1);

        return $i2;
    }

    public static int getIntForUser(android.content.ContentResolver, java.lang.String, int) throws android.provider.Settings$SettingNotFoundException
    {
        android.content.ContentResolver r0;
        java.lang.String r1, r2;
        int i0, i1;
        java.lang.NumberFormatException $r4;
        android.provider.Settings$SettingNotFoundException $r5;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 = staticinvoke <android.provider.Settings$System: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>(r0, r1, i0);

     label1:
        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

     label2:
        return i1;

     label3:
        $r4 := @caughtexception;

        $r5 = new android.provider.Settings$SettingNotFoundException;

        specialinvoke $r5.<android.provider.Settings$SettingNotFoundException: void <init>(java.lang.String)>(r1);

        throw $r5;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static int getIntForUser(android.content.ContentResolver, java.lang.String, int, int)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, r2;
        int i0, i1, i2;
        java.lang.NumberFormatException $r4;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 = staticinvoke <android.provider.Settings$System: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>(r0, r1, i1);

        if r2 == null goto label3;

     label1:
        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

     label2:
        i0 = i2;

     label3:
        return i0;

     label4:
        $r4 := @caughtexception;

        return i0;

        catch java.lang.NumberFormatException from label1 to label2 with label4;
    }

    public static long getLong(android.content.ContentResolver, java.lang.String) throws android.provider.Settings$SettingNotFoundException
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        int $i0;
        long $l1;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $l1 = staticinvoke <android.provider.Settings$System: long getLongForUser(android.content.ContentResolver,java.lang.String,int)>(r0, r1, $i0);

        return $l1;
    }

    public static long getLong(android.content.ContentResolver, java.lang.String, long)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        long l0, $l2;
        int $i1;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        $i1 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $l2 = staticinvoke <android.provider.Settings$System: long getLongForUser(android.content.ContentResolver,java.lang.String,long,int)>(r0, r1, l0, $i1);

        return $l2;
    }

    public static long getLongForUser(android.content.ContentResolver, java.lang.String, int) throws android.provider.Settings$SettingNotFoundException
    {
        android.content.ContentResolver r0;
        java.lang.String r1, r2;
        int i0;
        long l1;
        java.lang.NumberFormatException $r4;
        android.provider.Settings$SettingNotFoundException $r5;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 = staticinvoke <android.provider.Settings$System: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>(r0, r1, i0);

     label1:
        l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r2);

     label2:
        return l1;

     label3:
        $r4 := @caughtexception;

        $r5 = new android.provider.Settings$SettingNotFoundException;

        specialinvoke $r5.<android.provider.Settings$SettingNotFoundException: void <init>(java.lang.String)>(r1);

        throw $r5;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static long getLongForUser(android.content.ContentResolver, java.lang.String, long, int)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, r2;
        long l0, l2;
        int i1;
        java.lang.NumberFormatException $r4;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        i1 := @parameter3: int;

        r2 = staticinvoke <android.provider.Settings$System: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>(r0, r1, i1);

        if r2 == null goto label3;

     label1:
        l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r2);

     label2:
        return l2;

     label3:
        return l0;

     label4:
        $r4 := @caughtexception;

        return l0;

        catch java.lang.NumberFormatException from label1 to label2 with label4;
    }

    public static void getMovedKeys(java.util.HashSet)
    {
        java.util.HashSet r0, $r1, $r2;

        r0 := @parameter0: java.util.HashSet;

        $r1 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke r0.<java.util.HashSet: boolean addAll(java.util.Collection)>($r1);

        $r2 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE_THEN_GLOBAL>;

        virtualinvoke r0.<java.util.HashSet: boolean addAll(java.util.Collection)>($r2);

        return;
    }

    public static void getNonLegacyMovedKeys(java.util.HashSet)
    {
        java.util.HashSet r0, $r1;

        r0 := @parameter0: java.util.HashSet;

        $r1 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        virtualinvoke r0.<java.util.HashSet: boolean addAll(java.util.Collection)>($r1);

        return;
    }

    public static boolean getShowGTalkServiceStatus(android.content.ContentResolver)
    {
        android.content.ContentResolver r0;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.content.ContentResolver;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $z0 = staticinvoke <android.provider.Settings$System: boolean getShowGTalkServiceStatusForUser(android.content.ContentResolver,int)>(r0, $i0);

        return $z0;
    }

    public static boolean getShowGTalkServiceStatusForUser(android.content.ContentResolver, int)
    {
        android.content.ContentResolver r0;
        int i0, i1;
        boolean z0;

        r0 := @parameter0: android.content.ContentResolver;

        i0 := @parameter1: int;

        i1 = staticinvoke <android.provider.Settings$System: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)>(r0, "SHOW_GTALK_SERVICE_STATUS", 0, i0);

        z0 = 0;

        if i1 == 0 goto label1;

        z0 = 1;

     label1:
        return z0;
    }

    public static java.lang.String getString(android.content.ContentResolver, java.lang.String)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, $r2;
        int $i0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $r2 = staticinvoke <android.provider.Settings$System: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>(r0, r1, $i0);

        return $r2;
    }

    public static java.lang.String getStringForUser(android.content.ContentResolver, java.lang.String, int)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, $r9, $r10, $r12, $r19, $r20;
        int i0;
        java.util.HashSet $r2, $r3, $r11;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r14, $r15, $r16, $r17, $r18;
        android.provider.Settings$NameValueCache $r13;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        $z0 = virtualinvoke $r2.<java.util.HashSet: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has moved from android.provider.Settings.System");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to android.provider.Settings.Secure, returning read-only value.");

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Settings", $r19);

        $r20 = staticinvoke <android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>(r0, r1, i0);

        return $r20;

     label1:
        $r3 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        $z1 = virtualinvoke $r3.<java.util.HashSet: boolean contains(java.lang.Object)>(r1);

        if $z1 != 0 goto label2;

        $r11 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE_THEN_GLOBAL>;

        $z2 = virtualinvoke $r11.<java.util.HashSet: boolean contains(java.lang.Object)>(r1);

        if $z2 == 0 goto label3;

     label2:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has moved from android.provider.Settings.System");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to android.provider.Settings.Global, returning read-only value.");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Settings", $r9);

        $r10 = staticinvoke <android.provider.Settings$Global: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>(r0, r1, i0);

        return $r10;

     label3:
        $r13 = <android.provider.Settings$System: android.provider.Settings$NameValueCache sNameValueCache>;

        $r12 = virtualinvoke $r13.<android.provider.Settings$NameValueCache: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>(r0, r1, i0);

        return $r12;
    }

    public static android.net.Uri getUriFor(java.lang.String)
    {
        java.lang.String r0, $r8, $r18;
        java.util.HashSet $r1, $r2, $r11;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r13, $r15, $r16, $r17, $r19;
        android.net.Uri $r9, $r10, $r12, $r14, $r20, $r21;

        r0 := @parameter0: java.lang.String;

        $r1 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        $z0 = virtualinvoke $r1.<java.util.HashSet: boolean contains(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting ");

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has moved from android.provider.Settings.System");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to android.provider.Settings.Secure, returning Secure URI.");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Settings", $r18);

        $r20 = <android.provider.Settings$Secure: android.net.Uri CONTENT_URI>;

        $r21 = staticinvoke <android.provider.Settings$Secure: android.net.Uri getUriFor(android.net.Uri,java.lang.String)>($r20, r0);

        return $r21;

     label1:
        $r2 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        $z1 = virtualinvoke $r2.<java.util.HashSet: boolean contains(java.lang.Object)>(r0);

        if $z1 != 0 goto label2;

        $r11 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE_THEN_GLOBAL>;

        $z2 = virtualinvoke $r11.<java.util.HashSet: boolean contains(java.lang.Object)>(r0);

        if $z2 == 0 goto label3;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has moved from android.provider.Settings.System");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to android.provider.Settings.Global, returning read-only global URI.");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Settings", $r8);

        $r9 = <android.provider.Settings$Global: android.net.Uri CONTENT_URI>;

        $r10 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(android.net.Uri,java.lang.String)>($r9, r0);

        return $r10;

     label3:
        $r12 = <android.provider.Settings$System: android.net.Uri CONTENT_URI>;

        $r14 = staticinvoke <android.provider.Settings$System: android.net.Uri getUriFor(android.net.Uri,java.lang.String)>($r12, r0);

        return $r14;
    }

    public static boolean hasInterestingConfigurationChanges(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = 1073741824 & i0;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean putConfiguration(android.content.ContentResolver, android.content.res.Configuration)
    {
        android.content.ContentResolver r0;
        android.content.res.Configuration r1;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.content.res.Configuration;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $z0 = staticinvoke <android.provider.Settings$System: boolean putConfigurationForUser(android.content.ContentResolver,android.content.res.Configuration,int)>(r0, r1, $i0);

        return $z0;
    }

    public static boolean putConfigurationForUser(android.content.ContentResolver, android.content.res.Configuration, int)
    {
        android.content.ContentResolver r0;
        android.content.res.Configuration r1;
        int i0;
        float $f0;
        boolean $z0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.content.res.Configuration;

        i0 := @parameter2: int;

        $f0 = r1.<android.content.res.Configuration: float fontScale>;

        $z0 = staticinvoke <android.provider.Settings$System: boolean putFloatForUser(android.content.ContentResolver,java.lang.String,float,int)>(r0, "font_scale", $f0, i0);

        return $z0;
    }

    public static boolean putFloat(android.content.ContentResolver, java.lang.String, float)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        float f0;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        f0 := @parameter2: float;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $z0 = staticinvoke <android.provider.Settings$System: boolean putFloatForUser(android.content.ContentResolver,java.lang.String,float,int)>(r0, r1, f0, $i0);

        return $z0;
    }

    public static boolean putFloatForUser(android.content.ContentResolver, java.lang.String, float, int)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, $r2;
        float f0;
        int i0;
        boolean $z0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        f0 := @parameter2: float;

        i0 := @parameter3: int;

        $r2 = staticinvoke <java.lang.Float: java.lang.String toString(float)>(f0);

        $z0 = staticinvoke <android.provider.Settings$System: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int)>(r0, r1, $r2, i0);

        return $z0;
    }

    public static boolean putInt(android.content.ContentResolver, java.lang.String, int)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        int i0, $i1;
        boolean $z0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $i1 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $z0 = staticinvoke <android.provider.Settings$System: boolean putIntForUser(android.content.ContentResolver,java.lang.String,int,int)>(r0, r1, i0, $i1);

        return $z0;
    }

    public static boolean putIntForUser(android.content.ContentResolver, java.lang.String, int, int)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, $r2;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $z0 = staticinvoke <android.provider.Settings$System: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int)>(r0, r1, $r2, i1);

        return $z0;
    }

    public static boolean putLong(android.content.ContentResolver, java.lang.String, long)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        long l0;
        int $i1;
        boolean $z0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        $i1 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $z0 = staticinvoke <android.provider.Settings$System: boolean putLongForUser(android.content.ContentResolver,java.lang.String,long,int)>(r0, r1, l0, $i1);

        return $z0;
    }

    public static boolean putLongForUser(android.content.ContentResolver, java.lang.String, long, int)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, $r2;
        long l0;
        int i1;
        boolean $z0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        i1 := @parameter3: int;

        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        $z0 = staticinvoke <android.provider.Settings$System: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int)>(r0, r1, $r2, i1);

        return $z0;
    }

    public static boolean putString(android.content.ContentResolver, java.lang.String, java.lang.String)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, r2;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $z0 = staticinvoke <android.provider.Settings$System: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int)>(r0, r1, r2, $i0);

        return $z0;
    }

    public static boolean putStringForUser(android.content.ContentResolver, java.lang.String, java.lang.String, int)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, r2, $r10, $r18;
        int i0;
        java.util.HashSet $r3, $r4, $r11;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r13, $r14, $r15, $r16, $r17;
        android.provider.Settings$NameValueCache $r12;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        $r3 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE>;

        $z0 = virtualinvoke $r3.<java.util.HashSet: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has moved from android.provider.Settings.System");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to android.provider.Settings.Secure, value is unchanged.");

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Settings", $r18);

        return 0;

     label1:
        $r4 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_GLOBAL>;

        $z1 = virtualinvoke $r4.<java.util.HashSet: boolean contains(java.lang.Object)>(r1);

        if $z1 != 0 goto label2;

        $r11 = <android.provider.Settings$System: java.util.HashSet MOVED_TO_SECURE_THEN_GLOBAL>;

        $z2 = virtualinvoke $r11.<java.util.HashSet: boolean contains(java.lang.Object)>(r1);

        if $z2 == 0 goto label3;

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has moved from android.provider.Settings.System");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to android.provider.Settings.Global, value is unchanged.");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Settings", $r10);

        return 0;

     label3:
        $r12 = <android.provider.Settings$System: android.provider.Settings$NameValueCache sNameValueCache>;

        $z3 = virtualinvoke $r12.<android.provider.Settings$NameValueCache: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int)>(r0, r1, r2, i0);

        return $z3;
    }

    public static void setShowGTalkServiceStatus(android.content.ContentResolver, boolean)
    {
        android.content.ContentResolver r0;
        boolean z0;
        int $i0;

        r0 := @parameter0: android.content.ContentResolver;

        z0 := @parameter1: boolean;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        staticinvoke <android.provider.Settings$System: void setShowGTalkServiceStatusForUser(android.content.ContentResolver,boolean,int)>(r0, z0, $i0);

        return;
    }

    public static void setShowGTalkServiceStatusForUser(android.content.ContentResolver, boolean, int)
    {
        android.content.ContentResolver r0;
        boolean z0;
        int i0;
        byte b1;

        r0 := @parameter0: android.content.ContentResolver;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        if z0 == 0 goto label2;

        b1 = 1;

     label1:
        staticinvoke <android.provider.Settings$System: boolean putIntForUser(android.content.ContentResolver,java.lang.String,int,int)>(r0, "SHOW_GTALK_SERVICE_STATUS", b1, i0);

        return;

     label2:
        b1 = 0;

        goto label1;
    }
}
