public class android.media.MediaFile extends java.lang.Object
{
    public static final int FILE_TYPE_3GPP;
    public static final int FILE_TYPE_3GPP2;
    public static final int FILE_TYPE_AAC;
    public static final int FILE_TYPE_AMR;
    public static final int FILE_TYPE_ASF;
    public static final int FILE_TYPE_AVI;
    public static final int FILE_TYPE_AWB;
    public static final int FILE_TYPE_BMP;
    public static final int FILE_TYPE_FL;
    public static final int FILE_TYPE_FLAC;
    public static final int FILE_TYPE_GIF;
    public static final int FILE_TYPE_HTML;
    public static final int FILE_TYPE_HTTPLIVE;
    public static final int FILE_TYPE_IMY;
    public static final int FILE_TYPE_JPEG;
    public static final int FILE_TYPE_M3U;
    public static final int FILE_TYPE_M4A;
    public static final int FILE_TYPE_M4V;
    public static final int FILE_TYPE_MID;
    public static final int FILE_TYPE_MKA;
    public static final int FILE_TYPE_MKV;
    public static final int FILE_TYPE_MP2PS;
    public static final int FILE_TYPE_MP2TS;
    public static final int FILE_TYPE_MP3;
    public static final int FILE_TYPE_MP4;
    public static final int FILE_TYPE_MS_EXCEL;
    public static final int FILE_TYPE_MS_POWERPOINT;
    public static final int FILE_TYPE_MS_WORD;
    public static final int FILE_TYPE_OGG;
    public static final int FILE_TYPE_PDF;
    public static final int FILE_TYPE_PLS;
    public static final int FILE_TYPE_PNG;
    public static final int FILE_TYPE_SMF;
    public static final int FILE_TYPE_TEXT;
    public static final int FILE_TYPE_WAV;
    public static final int FILE_TYPE_WBMP;
    public static final int FILE_TYPE_WEBM;
    public static final int FILE_TYPE_WEBP;
    public static final int FILE_TYPE_WMA;
    public static final int FILE_TYPE_WMV;
    public static final int FILE_TYPE_WPL;
    public static final int FILE_TYPE_XML;
    public static final int FILE_TYPE_ZIP;
    private static final int FIRST_AUDIO_FILE_TYPE;
    private static final int FIRST_DRM_FILE_TYPE;
    private static final int FIRST_IMAGE_FILE_TYPE;
    private static final int FIRST_MIDI_FILE_TYPE;
    private static final int FIRST_PLAYLIST_FILE_TYPE;
    private static final int FIRST_VIDEO_FILE_TYPE;
    private static final int FIRST_VIDEO_FILE_TYPE2;
    private static final int LAST_AUDIO_FILE_TYPE;
    private static final int LAST_DRM_FILE_TYPE;
    private static final int LAST_IMAGE_FILE_TYPE;
    private static final int LAST_MIDI_FILE_TYPE;
    private static final int LAST_PLAYLIST_FILE_TYPE;
    private static final int LAST_VIDEO_FILE_TYPE;
    private static final int LAST_VIDEO_FILE_TYPE2;
    private static final java.util.HashMap sFileTypeMap;
    private static final java.util.HashMap sFileTypeToFormatMap;
    private static final java.util.HashMap sFormatToMimeTypeMap;
    private static final java.util.HashMap sMimeTypeMap;
    private static final java.util.HashMap sMimeTypeToFormatMap;

    static void <clinit>()
    {
        java.util.HashMap $r0, $r1, $r2, $r3, $r4;
        boolean $z0, $z1;

        <android.media.MediaFile: int LAST_VIDEO_FILE_TYPE2> = 200;

        <android.media.MediaFile: int LAST_VIDEO_FILE_TYPE> = 30;

        <android.media.MediaFile: int LAST_PLAYLIST_FILE_TYPE> = 44;

        <android.media.MediaFile: int LAST_MIDI_FILE_TYPE> = 13;

        <android.media.MediaFile: int LAST_IMAGE_FILE_TYPE> = 36;

        <android.media.MediaFile: int LAST_DRM_FILE_TYPE> = 51;

        <android.media.MediaFile: int LAST_AUDIO_FILE_TYPE> = 10;

        <android.media.MediaFile: int FIRST_VIDEO_FILE_TYPE2> = 200;

        <android.media.MediaFile: int FIRST_VIDEO_FILE_TYPE> = 21;

        <android.media.MediaFile: int FIRST_PLAYLIST_FILE_TYPE> = 41;

        <android.media.MediaFile: int FIRST_MIDI_FILE_TYPE> = 11;

        <android.media.MediaFile: int FIRST_IMAGE_FILE_TYPE> = 31;

        <android.media.MediaFile: int FIRST_DRM_FILE_TYPE> = 51;

        <android.media.MediaFile: int FIRST_AUDIO_FILE_TYPE> = 1;

        <android.media.MediaFile: int FILE_TYPE_ZIP> = 107;

        <android.media.MediaFile: int FILE_TYPE_XML> = 103;

        <android.media.MediaFile: int FILE_TYPE_WPL> = 43;

        <android.media.MediaFile: int FILE_TYPE_WMV> = 25;

        <android.media.MediaFile: int FILE_TYPE_WMA> = 6;

        <android.media.MediaFile: int FILE_TYPE_WEBP> = 36;

        <android.media.MediaFile: int FILE_TYPE_WEBM> = 30;

        <android.media.MediaFile: int FILE_TYPE_WBMP> = 35;

        <android.media.MediaFile: int FILE_TYPE_WAV> = 3;

        <android.media.MediaFile: int FILE_TYPE_TEXT> = 100;

        <android.media.MediaFile: int FILE_TYPE_SMF> = 12;

        <android.media.MediaFile: int FILE_TYPE_PNG> = 33;

        <android.media.MediaFile: int FILE_TYPE_PLS> = 42;

        <android.media.MediaFile: int FILE_TYPE_PDF> = 102;

        <android.media.MediaFile: int FILE_TYPE_OGG> = 7;

        <android.media.MediaFile: int FILE_TYPE_MS_WORD> = 104;

        <android.media.MediaFile: int FILE_TYPE_MS_POWERPOINT> = 106;

        <android.media.MediaFile: int FILE_TYPE_MS_EXCEL> = 105;

        <android.media.MediaFile: int FILE_TYPE_MP4> = 21;

        <android.media.MediaFile: int FILE_TYPE_MP3> = 1;

        <android.media.MediaFile: int FILE_TYPE_MP2TS> = 28;

        <android.media.MediaFile: int FILE_TYPE_MP2PS> = 200;

        <android.media.MediaFile: int FILE_TYPE_MKV> = 27;

        <android.media.MediaFile: int FILE_TYPE_MKA> = 9;

        <android.media.MediaFile: int FILE_TYPE_MID> = 11;

        <android.media.MediaFile: int FILE_TYPE_M4V> = 22;

        <android.media.MediaFile: int FILE_TYPE_M4A> = 2;

        <android.media.MediaFile: int FILE_TYPE_M3U> = 41;

        <android.media.MediaFile: int FILE_TYPE_JPEG> = 31;

        <android.media.MediaFile: int FILE_TYPE_IMY> = 13;

        <android.media.MediaFile: int FILE_TYPE_HTTPLIVE> = 44;

        <android.media.MediaFile: int FILE_TYPE_HTML> = 101;

        <android.media.MediaFile: int FILE_TYPE_GIF> = 32;

        <android.media.MediaFile: int FILE_TYPE_FLAC> = 10;

        <android.media.MediaFile: int FILE_TYPE_FL> = 51;

        <android.media.MediaFile: int FILE_TYPE_BMP> = 34;

        <android.media.MediaFile: int FILE_TYPE_AWB> = 5;

        <android.media.MediaFile: int FILE_TYPE_AVI> = 29;

        <android.media.MediaFile: int FILE_TYPE_ASF> = 26;

        <android.media.MediaFile: int FILE_TYPE_AMR> = 4;

        <android.media.MediaFile: int FILE_TYPE_AAC> = 8;

        <android.media.MediaFile: int FILE_TYPE_3GPP2> = 24;

        <android.media.MediaFile: int FILE_TYPE_3GPP> = 23;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <android.media.MediaFile: java.util.HashMap sFileTypeMap> = $r0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <android.media.MediaFile: java.util.HashMap sMimeTypeMap> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        <android.media.MediaFile: java.util.HashMap sFileTypeToFormatMap> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        <android.media.MediaFile: java.util.HashMap sMimeTypeToFormatMap> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        <android.media.MediaFile: java.util.HashMap sFormatToMimeTypeMap> = $r4;

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String,int)>("MP3", 1, "audio/mpeg", 12297);

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String,int)>("MPGA", 1, "audio/mpeg", 12297);

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String,int)>("M4A", 2, "audio/mp4", 12299);

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String,int)>("WAV", 3, "audio/x-wav", 12296);

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String)>("AMR", 4, "audio/amr");

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String)>("AWB", 5, "audio/amr-wb");

        $z0 = staticinvoke <android.media.MediaFile: boolean isWMAEnabled()>();

        if $z0 == 0 goto label1;

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String,int)>("WMA", 6, "audio/x-ms-wma", 47361);

     label1:
        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String,int)>("OGG", 7, "audio/ogg", 47362);

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String,int)>("OGG", 7, "application/ogg", 47362);

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String,int)>("OGA", 7, "application/ogg", 47362);

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String,int)>("AAC", 8, "audio/aac", 47363);

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String,int)>("AAC", 8, "audio/aac-adts", 47363);

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String)>("MKA", 9, "audio/x-matroska");

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String)>("MID", 11, "audio/midi");

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String)>("MIDI", 11, "audio/midi");

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String)>("XMF", 11, "audio/midi");

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String)>("RTTTL", 11, "audio/midi");

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String)>("SMF", 12, "audio/sp-midi");

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String)>("IMY", 13, "audio/imelody");

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String)>("RTX", 11, "audio/midi");

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String)>("OTA", 11, "audio/midi");

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String)>("MXMF", 11, "audio/midi");

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String,int)>("MPEG", 21, "video/mpeg", 12299);

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String,int)>("MPG", 21, "video/mpeg", 12299);

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String,int)>("MP4", 21, "video/mp4", 12299);

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String,int)>("M4V", 22, "video/mp4", 12299);

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String,int)>("3GP", 23, "video/3gpp", 47492);

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String,int)>("3GPP", 23, "video/3gpp", 47492);

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String,int)>("3G2", 24, "video/3gpp2", 47492);

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String,int)>("3GPP2", 24, "video/3gpp2", 47492);

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String)>("MKV", 27, "video/x-matroska");

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String)>("WEBM", 30, "video/webm");

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String)>("TS", 28, "video/mp2ts");

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String)>("AVI", 29, "video/avi");

        $z1 = staticinvoke <android.media.MediaFile: boolean isWMVEnabled()>();

        if $z1 == 0 goto label2;

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String,int)>("WMV", 25, "video/x-ms-wmv", 47489);

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String)>("ASF", 26, "video/x-ms-asf");

     label2:
        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String,int)>("JPG", 31, "image/jpeg", 14337);

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String,int)>("JPEG", 31, "image/jpeg", 14337);

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String,int)>("GIF", 32, "image/gif", 14343);

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String,int)>("PNG", 33, "image/png", 14347);

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String,int)>("BMP", 34, "image/x-ms-bmp", 14340);

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String)>("WBMP", 35, "image/vnd.wap.wbmp");

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String)>("WEBP", 36, "image/webp");

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String,int)>("M3U", 41, "audio/x-mpegurl", 47633);

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String,int)>("M3U", 41, "application/x-mpegurl", 47633);

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String,int)>("PLS", 42, "audio/x-scpls", 47636);

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String,int)>("WPL", 43, "application/vnd.ms-wpl", 47632);

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String)>("M3U8", 44, "application/vnd.apple.mpegurl");

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String)>("M3U8", 44, "audio/mpegurl");

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String)>("M3U8", 44, "audio/x-mpegurl");

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String)>("FL", 51, "application/x-android-drm-fl");

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String,int)>("TXT", 100, "text/plain", 12292);

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String,int)>("HTM", 101, "text/html", 12293);

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String,int)>("HTML", 101, "text/html", 12293);

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String)>("PDF", 102, "application/pdf");

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String,int)>("DOC", 104, "application/msword", 47747);

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String,int)>("XLS", 105, "application/vnd.ms-excel", 47749);

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String,int)>("PPT", 106, "application/mspowerpoint", 47750);

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String,int)>("FLAC", 10, "audio/flac", 47366);

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String)>("ZIP", 107, "application/zip");

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String)>("MPG", 200, "video/mp2p");

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String)>("MPEG", 200, "video/mp2p");

        return;
    }

    public void <init>()
    {
        android.media.MediaFile r0;

        r0 := @this: android.media.MediaFile;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void addFileType(java.lang.String, int, java.lang.String)
    {
        java.lang.String r0, r1;
        int i0;
        android.media.MediaFile$MediaFileType $r2;
        java.util.HashMap $r3, $r5;
        java.lang.Integer $r6;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $r3 = <android.media.MediaFile: java.util.HashMap sFileTypeMap>;

        $r2 = new android.media.MediaFile$MediaFileType;

        specialinvoke $r2.<android.media.MediaFile$MediaFileType: void <init>(int,java.lang.String)>(i0, r1);

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r2);

        $r5 = <android.media.MediaFile: java.util.HashMap sMimeTypeMap>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r6);

        return;
    }

    static void addFileType(java.lang.String, int, java.lang.String, int)
    {
        java.lang.String r0, r1;
        int i0, i1;
        java.util.HashMap $r2, $r5, $r8;
        java.lang.Integer $r3, $r6, $r9;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        staticinvoke <android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String)>(r0, i0, r1);

        $r2 = <android.media.MediaFile: java.util.HashMap sFileTypeToFormatMap>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r3);

        $r5 = <android.media.MediaFile: java.util.HashMap sMimeTypeToFormatMap>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r6);

        $r8 = <android.media.MediaFile: java.util.HashMap sFormatToMimeTypeMap>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, r1);

        return;
    }

    public static java.lang.String getFileTitle(java.lang.String)
    {
        java.lang.String r0;
        int i0, i1, i2, $i3;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(47);

        if i0 < 0 goto label1;

        i2 = i0 + 1;

        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        if i2 >= $i3 goto label1;

        r0 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i2);

     label1:
        i1 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(46);

        if i1 <= 0 goto label2;

        r0 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

     label2:
        return r0;
    }

    public static android.media.MediaFile$MediaFileType getFileType(java.lang.String)
    {
        java.lang.String r0, $r2, $r4;
        int i0, $i1;
        java.util.HashMap $r1;
        java.util.Locale $r3;
        java.lang.Object $r5;
        android.media.MediaFile$MediaFileType $r6;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(46);

        if i0 >= 0 goto label1;

        return null;

     label1:
        $r1 = <android.media.MediaFile: java.util.HashMap sFileTypeMap>;

        $i1 = i0 + 1;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        $r3 = <java.util.Locale: java.util.Locale ROOT>;

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r3);

        $r5 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = (android.media.MediaFile$MediaFileType) $r5;

        return $r6;
    }

    public static int getFileTypeForMimeType(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Integer r1;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        int $i0;

        r0 := @parameter0: java.lang.String;

        $r2 = <android.media.MediaFile: java.util.HashMap sMimeTypeMap>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);

        r1 = (java.lang.Integer) $r3;

        if r1 != null goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public static int getFormatCode(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2, $r5;
        int i0, $i1, $i2, $i3;
        java.lang.Integer r3, r4;
        java.util.Locale $r6;
        java.util.HashMap $r7, $r9;
        java.lang.Object $r8, $r10;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r1 == null goto label1;

        $r9 = <android.media.MediaFile: java.util.HashMap sMimeTypeToFormatMap>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.lang.Integer) $r10;

        if r4 == null goto label1;

        $i3 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        return $i3;

     label1:
        i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(46);

        if i0 <= 0 goto label2;

        $i1 = i0 + 1;

        $r5 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        $r6 = <java.util.Locale: java.util.Locale ROOT>;

        r2 = virtualinvoke $r5.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r6);

        $r7 = <android.media.MediaFile: java.util.HashMap sFileTypeToFormatMap>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        r3 = (java.lang.Integer) $r8;

        if r3 == null goto label2;

        $i2 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        return $i2;

     label2:
        return 12288;
    }

    public static java.lang.String getMimeTypeForFile(java.lang.String)
    {
        java.lang.String r0, $r2;
        android.media.MediaFile$MediaFileType r1;

        r0 := @parameter0: java.lang.String;

        r1 = staticinvoke <android.media.MediaFile: android.media.MediaFile$MediaFileType getFileType(java.lang.String)>(r0);

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = r1.<android.media.MediaFile$MediaFileType: java.lang.String mimeType>;

        return $r2;
    }

    public static java.lang.String getMimeTypeForFormatCode(int)
    {
        int i0;
        java.util.HashMap $r0;
        java.lang.Integer $r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        i0 := @parameter0: int;

        $r0 = <android.media.MediaFile: java.util.HashMap sFormatToMimeTypeMap>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2 = virtualinvoke $r0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    public static boolean isAudioFileType(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 < 1 goto label1;

        if i0 <= 10 goto label2;

     label1:
        if i0 < 11 goto label3;

        if i0 > 13 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    public static boolean isDrmFileType(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 < 51 goto label1;

        if i0 > 51 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isImageFileType(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 < 31 goto label1;

        if i0 > 36 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isMimeTypeMedia(java.lang.String)
    {
        java.lang.String r0;
        int i0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: java.lang.String;

        i0 = staticinvoke <android.media.MediaFile: int getFileTypeForMimeType(java.lang.String)>(r0);

        $z0 = staticinvoke <android.media.MediaFile: boolean isAudioFileType(int)>(i0);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <android.media.MediaFile: boolean isVideoFileType(int)>(i0);

        if $z1 != 0 goto label1;

        $z2 = staticinvoke <android.media.MediaFile: boolean isImageFileType(int)>(i0);

        if $z2 != 0 goto label1;

        $z3 = staticinvoke <android.media.MediaFile: boolean isPlayListFileType(int)>(i0);

        if $z3 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public static boolean isPlayListFileType(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 < 41 goto label1;

        if i0 > 44 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isVideoFileType(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 < 21 goto label1;

        if i0 <= 30 goto label2;

     label1:
        if i0 < 200 goto label3;

        if i0 > 200 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    private static boolean isWMAEnabled()
    {
        java.util.List r0;
        int i0, i1;
        java.lang.Object $r1;
        android.media.DecoderCapabilities$AudioDecoder $r2, $r3;

        r0 = staticinvoke <android.media.DecoderCapabilities: java.util.List getAudioDecoders()>();

        i0 = interfaceinvoke r0.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);

        $r3 = (android.media.DecoderCapabilities$AudioDecoder) $r1;

        $r2 = <android.media.DecoderCapabilities$AudioDecoder: android.media.DecoderCapabilities$AudioDecoder AUDIO_DECODER_WMA>;

        if $r3 != $r2 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    private static boolean isWMVEnabled()
    {
        java.util.List r0;
        int i0, i1;
        java.lang.Object $r1;
        android.media.DecoderCapabilities$VideoDecoder $r2, $r3;

        r0 = staticinvoke <android.media.DecoderCapabilities: java.util.List getVideoDecoders()>();

        i0 = interfaceinvoke r0.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);

        $r3 = (android.media.DecoderCapabilities$VideoDecoder) $r1;

        $r2 = <android.media.DecoderCapabilities$VideoDecoder: android.media.DecoderCapabilities$VideoDecoder VIDEO_DECODER_WMV>;

        if $r3 != $r2 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }
}
