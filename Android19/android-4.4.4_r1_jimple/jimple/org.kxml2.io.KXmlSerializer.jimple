public class org.kxml2.io.KXmlSerializer extends java.lang.Object implements org.xmlpull.v1.XmlSerializer
{
    private static final int WRITE_BUFFER_SIZE;
    private int auto;
    private int depth;
    private java.lang.String[] elementStack;
    private java.lang.String encoding;
    private boolean[] indent;
    private int[] nspCounts;
    private java.lang.String[] nspStack;
    private boolean pending;
    private boolean unicode;
    private java.io.BufferedWriter writer;

    public void <init>()
    {
        org.kxml2.io.KXmlSerializer r0;
        java.lang.String[] $r1, $r3;
        int[] $r2;
        boolean[] $r4;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (java.lang.String)[12];

        r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack> = $r1;

        $r2 = newarray (int)[4];

        r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts> = $r2;

        $r3 = newarray (java.lang.String)[8];

        r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack> = $r3;

        $r4 = newarray (boolean)[4];

        r0.<org.kxml2.io.KXmlSerializer: boolean[] indent> = $r4;

        return;
    }

    private final void check(boolean) throws java.io.IOException
    {
        org.kxml2.io.KXmlSerializer r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31;
        java.io.BufferedWriter r1, $r15, $r16, $r20, $r21, $r28, $r30;
        java.lang.String r2, $r17, $r18, $r22, $r24, $r26;
        int[] r3, $r8, $r9, $r10, $r11, $r12, $r13;
        boolean[] r4, $r5, $r6, $r7, $r29;
        java.lang.String[] $r14, $r19, $r25, $r27;
        java.lang.IllegalStateException $r23;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        z0 := @parameter0: boolean;

        $z1 = r0.<org.kxml2.io.KXmlSerializer: boolean pending>;

        if $z1 != 0 goto label1;

        return;

     label1:
        $i1 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i2 = 1 + $i1;

        r0.<org.kxml2.io.KXmlSerializer: int depth> = $i2;

        r0.<org.kxml2.io.KXmlSerializer: boolean pending> = 0;

        $r5 = r0.<org.kxml2.io.KXmlSerializer: boolean[] indent>;

        $i4 = lengthof $r5;

        $i3 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        if $i4 > $i3 goto label2;

        $i29 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i30 = 4 + $i29;

        r4 = newarray (boolean)[$i30];

        $r29 = r0.<org.kxml2.io.KXmlSerializer: boolean[] indent>;

        $i31 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r29, 0, r4, 0, $i31);

        r0.<org.kxml2.io.KXmlSerializer: boolean[] indent> = r4;

     label2:
        $r7 = r0.<org.kxml2.io.KXmlSerializer: boolean[] indent>;

        $i7 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $r6 = r0.<org.kxml2.io.KXmlSerializer: boolean[] indent>;

        $i5 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i6 = -1 + $i5;

        $z2 = $r6[$i6];

        $r7[$i7] = $z2;

        $r8 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $i8 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i9 = -1 + $i8;

        i0 = $r8[$i9];

     label3:
        $r9 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $i10 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i11 = $r9[$i10];

        if i0 >= $i11 goto label6;

        $r15 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r15.<java.io.BufferedWriter: void write(int)>(32);

        $r16 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r16.<java.io.BufferedWriter: void write(java.lang.String)>("xmlns");

        $r14 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $i23 = i0 * 2;

        $r18 = $r14[$i23];

        $z4 = virtualinvoke $r18.<java.lang.String: boolean isEmpty()>();

        if $z4 != 0 goto label5;

        $r28 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r28.<java.io.BufferedWriter: void write(int)>(58);

        $r30 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        $r27 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $i28 = i0 * 2;

        $r26 = $r27[$i28];

        virtualinvoke $r30.<java.io.BufferedWriter: void write(java.lang.String)>($r26);

     label4:
        $r20 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r20.<java.io.BufferedWriter: void write(java.lang.String)>("=\"");

        $r19 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $i25 = i0 * 2;

        $i24 = 1 + $i25;

        $r22 = $r19[$i24];

        specialinvoke r0.<org.kxml2.io.KXmlSerializer: void writeEscaped(java.lang.String,int)>($r22, 34);

        $r21 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r21.<java.io.BufferedWriter: void write(int)>(34);

        i0 = i0 + 1;

        goto label3;

     label5:
        $r17 = virtualinvoke r0.<org.kxml2.io.KXmlSerializer: java.lang.String getNamespace()>();

        $z3 = virtualinvoke $r17.<java.lang.String: boolean isEmpty()>();

        if $z3 == 0 goto label4;

        $r25 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $i27 = i0 * 2;

        $i26 = 1 + $i27;

        $r24 = $r25[$i26];

        $z5 = virtualinvoke $r24.<java.lang.String: boolean isEmpty()>();

        if $z5 != 0 goto label4;

        $r23 = new java.lang.IllegalStateException;

        specialinvoke $r23.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot set default namespace for elements in no namespace");

        throw $r23;

     label6:
        $r10 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $i15 = lengthof $r10;

        $i13 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i12 = 1 + $i13;

        if $i15 > $i12 goto label7;

        $i17 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i21 = 8 + $i17;

        r3 = newarray (int)[$i21];

        $r13 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $i22 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i20 = 1 + $i22;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r13, 0, r3, 0, $i20);

        r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts> = r3;

     label7:
        $r12 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $i14 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i19 = 1 + $i14;

        $r11 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $i16 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i18 = $r11[$i16];

        $r12[$i19] = $i18;

        r1 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        if z0 == 0 goto label9;

        r2 = " />";

     label8:
        virtualinvoke r1.<java.io.BufferedWriter: void write(java.lang.String)>(r2);

        return;

     label9:
        r2 = ">";

        goto label8;
    }

    private final java.lang.String getPrefix(java.lang.String, boolean, boolean) throws java.io.IOException
    {
        org.kxml2.io.KXmlSerializer r0;
        java.lang.String r1, r3, r4, $r9, $r13, $r15, $r18;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        java.lang.StringBuilder r2, $r6, $r7;
        int[] $r5, $r8, $r14;
        java.lang.String[] $r10, $r11, $r12, $r16, $r17;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r5 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $i4 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i5 = 1 + $i4;

        $i6 = $r5[$i5];

        $i7 = 2 * $i6;

        i0 = -2 + $i7;

     label01:
        if i0 < 0 goto label07;

        $r12 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $i13 = i0 + 1;

        $r13 = $r12[$i13];

        $z5 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z5 == 0 goto label06;

        if z0 != 0 goto label02;

        $r17 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $r18 = $r17[i0];

        $z7 = virtualinvoke $r18.<java.lang.String: boolean isEmpty()>();

        if $z7 != 0 goto label06;

     label02:
        $r11 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        r4 = $r11[i0];

        i3 = i0 + 2;

     label03:
        $r14 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $i15 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i16 = 1 + $i15;

        $i14 = $r14[$i16];

        $i17 = 2 * $i14;

        if i3 >= $i17 goto label04;

        $r16 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $r15 = $r16[i3];

        $z6 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z6 == 0 goto label05;

        r4 = null;

     label04:
        if r4 == null goto label06;

        return r4;

     label05:
        i3 = i3 + 1;

        goto label03;

     label06:
        i0 = i0 + -2;

        goto label01;

     label07:
        if z1 != 0 goto label08;

        return null;

     label08:
        $z3 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z3 == 0 goto label10;

        r3 = "";

     label09:
        z2 = r0.<org.kxml2.io.KXmlSerializer: boolean pending>;

        r0.<org.kxml2.io.KXmlSerializer: boolean pending> = 0;

        virtualinvoke r0.<org.kxml2.io.KXmlSerializer: void setPrefix(java.lang.String,java.lang.String)>(r3, r1);

        r0.<org.kxml2.io.KXmlSerializer: boolean pending> = z2;

        return r3;

     label10:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("n");

        i1 = r0.<org.kxml2.io.KXmlSerializer: int auto>;

        $i8 = i1 + 1;

        r0.<org.kxml2.io.KXmlSerializer: int auto> = $i8;

        $r7 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $i9 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i10 = 1 + $i9;

        $i12 = $r8[$i10];

        $i11 = 2 * $i12;

        i2 = -2 + $i11;

     label11:
        if i2 < 0 goto label12;

        $r10 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $r9 = $r10[i2];

        $z4 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z4 == 0 goto label13;

        r3 = null;

     label12:
        if r3 == null goto label10;

        goto label09;

     label13:
        i2 = i2 + -2;

        goto label11;
    }

    private static void reportInvalidCharacter(char)
    {
        char c0;
        java.lang.IllegalArgumentException $r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5;
        java.lang.String $r3, $r6;

        c0 := @parameter0: char;

        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal character (");

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(c0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r0;
    }

    private final void writeEscaped(java.lang.String, int) throws java.io.IOException
    {
        org.kxml2.io.KXmlSerializer r0;
        java.lang.String r1, r3, $r13, $r19;
        int i0, i1, $i3;
        char c2;
        boolean z0, $z1;
        java.io.BufferedWriter r2, $r4, $r5, $r6, $r8, $r12, $r14, $r15;
        java.lang.StringBuilder $r7, $r9, $r10, $r11, $r16, $r17, $r18, $r20;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 = 0;

     label01:
        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        if i1 >= $i3 goto label19;

        c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);

        lookupswitch(c2)
        {
            case 9: goto label05;
            case 10: goto label05;
            case 13: goto label05;
            case 38: goto label07;
            case 60: goto label09;
            case 62: goto label08;
            default: goto label02;
        };

     label02:
        if c2 != i0 goto label11;

        r2 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        if c2 != 34 goto label10;

        r3 = "&quot;";

     label03:
        virtualinvoke r2.<java.io.BufferedWriter: void write(java.lang.String)>(r3);

     label04:
        i1 = i1 + 1;

        goto label01;

     label05:
        if i0 != -1 goto label06;

        $r12 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r12.<java.io.BufferedWriter: void write(int)>(c2);

        goto label04;

     label06:
        $r8 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&#");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(c2);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(59);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.BufferedWriter: void write(java.lang.String)>($r13);

        goto label04;

     label07:
        $r6 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r6.<java.io.BufferedWriter: void write(java.lang.String)>("&amp;");

        goto label04;

     label08:
        $r4 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r4.<java.io.BufferedWriter: void write(java.lang.String)>("&gt;");

        goto label04;

     label09:
        $r5 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r5.<java.io.BufferedWriter: void write(java.lang.String)>("&lt;");

        goto label04;

     label10:
        r3 = "&apos;";

        goto label03;

     label11:
        if c2 < 32 goto label12;

        if c2 <= 55295 goto label13;

     label12:
        if c2 < 57344 goto label17;

        if c2 > 65533 goto label17;

     label13:
        z0 = 1;

     label14:
        if z0 != 0 goto label15;

        staticinvoke <org.kxml2.io.KXmlSerializer: void reportInvalidCharacter(char)>(c2);

     label15:
        $z1 = r0.<org.kxml2.io.KXmlSerializer: boolean unicode>;

        if $z1 != 0 goto label16;

        if c2 >= 127 goto label18;

     label16:
        $r14 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r14.<java.io.BufferedWriter: void write(int)>(c2);

        goto label04;

     label17:
        z0 = 0;

        goto label14;

     label18:
        $r15 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&#");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(c2);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<java.io.BufferedWriter: void write(java.lang.String)>($r19);

        goto label04;

     label19:
        return;
    }

    public org.xmlpull.v1.XmlSerializer attribute(java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.kxml2.io.KXmlSerializer r0;
        java.lang.String r1, r2, r3, r4;
        byte b0;
        boolean $z0, $z1, $z2;
        java.io.BufferedWriter $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        int $i1;
        java.lang.IllegalStateException $r12;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        b0 = 34;

        $z0 = r0.<org.kxml2.io.KXmlSerializer: boolean pending>;

        if $z0 != 0 goto label1;

        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("illegal position for attribute");

        throw $r12;

     label1:
        if r1 != null goto label2;

        r1 = "";

     label2:
        $z1 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z1 == 0 goto label6;

        r4 = "";

     label3:
        $r5 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r5.<java.io.BufferedWriter: void write(int)>(32);

        $z2 = virtualinvoke r4.<java.lang.String: boolean isEmpty()>();

        if $z2 != 0 goto label4;

        $r11 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r11.<java.io.BufferedWriter: void write(java.lang.String)>(r4);

        $r10 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r10.<java.io.BufferedWriter: void write(int)>(58);

     label4:
        $r6 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r6.<java.io.BufferedWriter: void write(java.lang.String)>(r2);

        $r7 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r7.<java.io.BufferedWriter: void write(int)>(61);

        $i1 = virtualinvoke r3.<java.lang.String: int indexOf(int)>(34);

        if $i1 != -1 goto label7;

     label5:
        $r8 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r8.<java.io.BufferedWriter: void write(int)>(b0);

        specialinvoke r0.<org.kxml2.io.KXmlSerializer: void writeEscaped(java.lang.String,int)>(r3, b0);

        $r9 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r9.<java.io.BufferedWriter: void write(int)>(b0);

        return r0;

     label6:
        r4 = specialinvoke r0.<org.kxml2.io.KXmlSerializer: java.lang.String getPrefix(java.lang.String,boolean,boolean)>(r1, 0, 1);

        goto label3;

     label7:
        b0 = 39;

        goto label5;
    }

    public void cdsect(java.lang.String) throws java.io.IOException
    {
        org.kxml2.io.KXmlSerializer r0;
        java.lang.String r1, $r3;
        char[] r2;
        int i0, i1, $i3;
        char c2;
        boolean z0;
        java.io.BufferedWriter $r4, $r5, $r6;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.kxml2.io.KXmlSerializer: void check(boolean)>(0);

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("]]>", "]]]]><![CDATA[>");

        r2 = virtualinvoke $r3.<java.lang.String: char[] toCharArray()>();

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label7;

        c2 = r2[i1];

        if c2 < 32 goto label2;

        if c2 <= 55295 goto label3;

     label2:
        if c2 == 9 goto label3;

        if c2 == 10 goto label3;

        if c2 == 13 goto label3;

        if c2 < 57344 goto label6;

        if c2 > 65533 goto label6;

     label3:
        z0 = 1;

     label4:
        if z0 != 0 goto label5;

        staticinvoke <org.kxml2.io.KXmlSerializer: void reportInvalidCharacter(char)>(c2);

     label5:
        i1 = i1 + 1;

        goto label1;

     label6:
        z0 = 0;

        goto label4;

     label7:
        $r4 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r4.<java.io.BufferedWriter: void write(java.lang.String)>("<![CDATA[");

        $r5 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        $i3 = lengthof r2;

        virtualinvoke $r5.<java.io.BufferedWriter: void write(char[],int,int)>(r2, 0, $i3);

        $r6 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r6.<java.io.BufferedWriter: void write(java.lang.String)>("]]>");

        return;
    }

    public void comment(java.lang.String) throws java.io.IOException
    {
        org.kxml2.io.KXmlSerializer r0;
        java.lang.String r1;
        java.io.BufferedWriter $r2, $r3, $r4;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.kxml2.io.KXmlSerializer: void check(boolean)>(0);

        $r2 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r2.<java.io.BufferedWriter: void write(java.lang.String)>("<!--");

        $r3 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r3.<java.io.BufferedWriter: void write(java.lang.String)>(r1);

        $r4 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r4.<java.io.BufferedWriter: void write(java.lang.String)>("-->");

        return;
    }

    public void docdecl(java.lang.String) throws java.io.IOException
    {
        org.kxml2.io.KXmlSerializer r0;
        java.lang.String r1;
        java.io.BufferedWriter $r2, $r3, $r4;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r2.<java.io.BufferedWriter: void write(java.lang.String)>("<!DOCTYPE");

        $r3 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r3.<java.io.BufferedWriter: void write(java.lang.String)>(r1);

        $r4 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r4.<java.io.BufferedWriter: void write(java.lang.String)>(">");

        return;
    }

    public void endDocument() throws java.io.IOException
    {
        org.kxml2.io.KXmlSerializer r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String[] $r1, $r2;
        java.lang.String $r3, $r4;

        r0 := @this: org.kxml2.io.KXmlSerializer;

     label1:
        $i0 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        if $i0 <= 0 goto label2;

        $r1 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack>;

        $i1 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i2 = 3 * $i1;

        $i3 = -3 + $i2;

        $r4 = $r1[$i3];

        $r2 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack>;

        $i4 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i5 = 3 * $i4;

        $i6 = -1 + $i5;

        $r3 = $r2[$i6];

        virtualinvoke r0.<org.kxml2.io.KXmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>($r4, $r3);

        goto label1;

     label2:
        virtualinvoke r0.<org.kxml2.io.KXmlSerializer: void flush()>();

        return;
    }

    public org.xmlpull.v1.XmlSerializer endTag(java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.kxml2.io.KXmlSerializer r0;
        java.lang.String r1, r2, r3, $r5, $r24, $r25, $r27;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.String[] $r4, $r8, $r26, $r28;
        boolean[] $r6;
        java.io.BufferedWriter $r7, $r9, $r10, $r12, $r14, $r15, $r16;
        int[] $r11, $r13;
        java.lang.IllegalArgumentException $r17;
        java.lang.StringBuilder $r18, $r19, $r20, $r21, $r22, $r23;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = r0.<org.kxml2.io.KXmlSerializer: boolean pending>;

        if $z0 != 0 goto label01;

        $i19 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i21 = -1 + $i19;

        r0.<org.kxml2.io.KXmlSerializer: int depth> = $i21;

     label01:
        if r1 != null goto label02;

        $r28 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack>;

        $i18 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i20 = 3 * $i18;

        $r27 = $r28[$i20];

        if $r27 != null goto label04;

     label02:
        if r1 == null goto label03;

        $r26 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack>;

        $i16 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i17 = 3 * $i16;

        $r25 = $r26[$i17];

        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r25);

        if $z5 == 0 goto label04;

     label03:
        $r4 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack>;

        $i1 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i2 = 3 * $i1;

        $i3 = 2 + $i2;

        $r5 = $r4[$i3];

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 != 0 goto label05;

     label04:
        $r17 = new java.lang.IllegalArgumentException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</{");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r19 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> does not match start");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r24);

        throw $r17;

     label05:
        $z2 = r0.<org.kxml2.io.KXmlSerializer: boolean pending>;

        if $z2 == 0 goto label07;

        specialinvoke r0.<org.kxml2.io.KXmlSerializer: void check(boolean)>(1);

        $i14 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i15 = -1 + $i14;

        r0.<org.kxml2.io.KXmlSerializer: int depth> = $i15;

     label06:
        $r13 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $i9 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i11 = 1 + $i9;

        $r11 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $i10 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i12 = $r11[$i10];

        $r13[$i11] = $i12;

        return r0;

     label07:
        $r6 = r0.<org.kxml2.io.KXmlSerializer: boolean[] indent>;

        $i4 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i5 = 1 + $i4;

        $z3 = $r6[$i5];

        if $z3 == 0 goto label09;

        $r16 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r16.<java.io.BufferedWriter: void write(java.lang.String)>("\r\n");

        i0 = 0;

     label08:
        $i13 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        if i0 >= $i13 goto label09;

        $r14 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r14.<java.io.BufferedWriter: void write(java.lang.String)>("  ");

        i0 = i0 + 1;

        goto label08;

     label09:
        $r7 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r7.<java.io.BufferedWriter: void write(java.lang.String)>("</");

        $r8 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack>;

        $i7 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i6 = 3 * $i7;

        $i8 = 1 + $i6;

        r3 = $r8[$i8];

        $z4 = virtualinvoke r3.<java.lang.String: boolean isEmpty()>();

        if $z4 != 0 goto label10;

        $r12 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r12.<java.io.BufferedWriter: void write(java.lang.String)>(r3);

        $r15 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r15.<java.io.BufferedWriter: void write(int)>(58);

     label10:
        $r9 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r9.<java.io.BufferedWriter: void write(java.lang.String)>(r2);

        $r10 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r10.<java.io.BufferedWriter: void write(int)>(62);

        goto label06;
    }

    public void entityRef(java.lang.String) throws java.io.IOException
    {
        org.kxml2.io.KXmlSerializer r0;
        java.lang.String r1;
        java.io.BufferedWriter $r2, $r3, $r4;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.kxml2.io.KXmlSerializer: void check(boolean)>(0);

        $r2 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r2.<java.io.BufferedWriter: void write(int)>(38);

        $r3 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r3.<java.io.BufferedWriter: void write(java.lang.String)>(r1);

        $r4 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r4.<java.io.BufferedWriter: void write(int)>(59);

        return;
    }

    public void flush() throws java.io.IOException
    {
        org.kxml2.io.KXmlSerializer r0;
        java.io.BufferedWriter $r1;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        specialinvoke r0.<org.kxml2.io.KXmlSerializer: void check(boolean)>(0);

        $r1 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r1.<java.io.BufferedWriter: void flush()>();

        return;
    }

    public int getDepth()
    {
        org.kxml2.io.KXmlSerializer r0;
        boolean $z0;
        int $i0, $i1, $i2;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        $z0 = r0.<org.kxml2.io.KXmlSerializer: boolean pending>;

        if $z0 == 0 goto label1;

        $i1 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i2 = 1 + $i1;

        return $i2;

     label1:
        $i0 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        return $i0;
    }

    public boolean getFeature(java.lang.String)
    {
        org.kxml2.io.KXmlSerializer r0;
        java.lang.String r1, $r2;
        boolean $z0, $z1;
        int $i0;
        boolean[] $r3;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: java.lang.String;

        $r2 = "http://xmlpull.org/v1/doc/features.html#indent-output";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<org.kxml2.io.KXmlSerializer: boolean[] indent>;

        $i0 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $z1 = $r3[$i0];

        return $z1;

     label1:
        return 0;
    }

    public java.lang.String getName()
    {
        org.kxml2.io.KXmlSerializer r0;
        int $i0, $i1, $i2, $i3;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        $i0 = virtualinvoke r0.<org.kxml2.io.KXmlSerializer: int getDepth()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r1 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack>;

        $i1 = virtualinvoke r0.<org.kxml2.io.KXmlSerializer: int getDepth()>();

        $i2 = 3 * $i1;

        $i3 = -1 + $i2;

        $r2 = $r1[$i3];

        return $r2;
    }

    public java.lang.String getNamespace()
    {
        org.kxml2.io.KXmlSerializer r0;
        int $i0, $i1, $i2, $i3;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        $i0 = virtualinvoke r0.<org.kxml2.io.KXmlSerializer: int getDepth()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r1 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack>;

        $i1 = virtualinvoke r0.<org.kxml2.io.KXmlSerializer: int getDepth()>();

        $i2 = 3 * $i1;

        $i3 = -3 + $i2;

        $r2 = $r1[$i3];

        return $r2;
    }

    public java.lang.String getPrefix(java.lang.String, boolean)
    {
        org.kxml2.io.KXmlSerializer r0;
        java.lang.String r1, r3, $r6;
        boolean z0;
        java.io.IOException r2, $r4;
        java.lang.RuntimeException $r5;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

     label1:
        r3 = specialinvoke r0.<org.kxml2.io.KXmlSerializer: java.lang.String getPrefix(java.lang.String,boolean,boolean)>(r1, 0, z0);

     label2:
        return r3;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = new java.lang.RuntimeException;

        $r6 = virtualinvoke r2.<java.io.IOException: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r5;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        org.kxml2.io.KXmlSerializer r0;
        java.lang.String r1;
        java.lang.RuntimeException $r2;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Unsupported property");

        throw $r2;
    }

    public void ignorableWhitespace(java.lang.String) throws java.io.IOException
    {
        org.kxml2.io.KXmlSerializer r0;
        java.lang.String r1;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.kxml2.io.KXmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>(r1);

        return;
    }

    public void processingInstruction(java.lang.String) throws java.io.IOException
    {
        org.kxml2.io.KXmlSerializer r0;
        java.lang.String r1;
        java.io.BufferedWriter $r2, $r3, $r4;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.kxml2.io.KXmlSerializer: void check(boolean)>(0);

        $r2 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r2.<java.io.BufferedWriter: void write(java.lang.String)>("<?");

        $r3 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r3.<java.io.BufferedWriter: void write(java.lang.String)>(r1);

        $r4 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r4.<java.io.BufferedWriter: void write(java.lang.String)>("?>");

        return;
    }

    public void setFeature(java.lang.String, boolean)
    {
        org.kxml2.io.KXmlSerializer r0;
        java.lang.String r1, $r2;
        boolean z0, $z1;
        java.lang.RuntimeException $r3;
        int $i0;
        boolean[] $r4;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = "http://xmlpull.org/v1/doc/features.html#indent-output";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label1;

        $r4 = r0.<org.kxml2.io.KXmlSerializer: boolean[] indent>;

        $i0 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $r4[$i0] = z0;

        return;

     label1:
        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Unsupported Feature");

        throw $r3;
    }

    public void setOutput(java.io.OutputStream, java.lang.String) throws java.io.IOException
    {
        org.kxml2.io.KXmlSerializer r0;
        java.io.OutputStream r1;
        java.lang.String r2, $r6;
        java.io.OutputStreamWriter r3, $r4, $r7;
        java.util.Locale $r5;
        boolean $z0;
        java.lang.IllegalArgumentException $r8;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: java.lang.String;

        if r1 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("os == null");

        throw $r8;

     label1:
        if r2 != null goto label4;

        $r7 = new java.io.OutputStreamWriter;

        specialinvoke $r7.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>(r1);

        r3 = $r7;

     label2:
        virtualinvoke r0.<org.kxml2.io.KXmlSerializer: void setOutput(java.io.Writer)>(r3);

        r0.<org.kxml2.io.KXmlSerializer: java.lang.String encoding> = r2;

        if r2 == null goto label3;

        $r5 = <java.util.Locale: java.util.Locale US>;

        $r6 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r5);

        $z0 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("utf");

        if $z0 == 0 goto label3;

        r0.<org.kxml2.io.KXmlSerializer: boolean unicode> = 1;

     label3:
        return;

     label4:
        $r4 = new java.io.OutputStreamWriter;

        specialinvoke $r4.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(r1, r2);

        r3 = $r4;

        goto label2;
    }

    public void setOutput(java.io.Writer)
    {
        org.kxml2.io.KXmlSerializer r0;
        java.io.Writer r1;
        boolean $z0;
        java.io.BufferedWriter $r2, $r9;
        int[] $r3, $r4;
        java.lang.String[] $r5, $r6, $r7, $r8;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: java.io.Writer;

        $z0 = r1 instanceof java.io.BufferedWriter;

        if $z0 == 0 goto label2;

        $r9 = (java.io.BufferedWriter) r1;

        r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer> = $r9;

     label1:
        $r3 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $r3[0] = 2;

        $r4 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $r4[1] = 2;

        $r5 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $r5[0] = "";

        $r6 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $r6[1] = "";

        $r7 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $r7[2] = "xml";

        $r8 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $r8[3] = "http://www.w3.org/XML/1998/namespace";

        r0.<org.kxml2.io.KXmlSerializer: boolean pending> = 0;

        r0.<org.kxml2.io.KXmlSerializer: int auto> = 0;

        r0.<org.kxml2.io.KXmlSerializer: int depth> = 0;

        r0.<org.kxml2.io.KXmlSerializer: boolean unicode> = 0;

        return;

     label2:
        $r2 = new java.io.BufferedWriter;

        specialinvoke $r2.<java.io.BufferedWriter: void <init>(java.io.Writer,int)>(r1, 500);

        r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer> = $r2;

        goto label1;
    }

    public void setPrefix(java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.kxml2.io.KXmlSerializer r0;
        java.lang.String r1, r2, $r6;
        int[] r3;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.String[] r4, r5, $r7, $r8, $r9, $r10;
        boolean $z0;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.kxml2.io.KXmlSerializer: void check(boolean)>(0);

        if r1 != null goto label1;

        r1 = "";

     label1:
        if r2 != null goto label2;

        r2 = "";

     label2:
        $r6 = specialinvoke r0.<org.kxml2.io.KXmlSerializer: java.lang.String getPrefix(java.lang.String,boolean,boolean)>(r2, 1, 0);

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label3;

        return;

     label3:
        r3 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $i4 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        i0 = 1 + $i4;

        i1 = r3[i0];

        $i5 = i1 + 1;

        r3[i0] = $i5;

        i2 = i1 << 1;

        $r7 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $i7 = lengthof $r7;

        $i6 = i2 + 1;

        if $i7 >= $i6 goto label4;

        $r9 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $i8 = lengthof $r9;

        $i9 = 16 + $i8;

        r5 = newarray (java.lang.String)[$i9];

        $r10 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, 0, r5, 0, i2);

        r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack> = r5;

     label4:
        r4 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        i3 = i2 + 1;

        r4[i2] = r1;

        $r8 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $r8[i3] = r2;

        return;
    }

    public void setProperty(java.lang.String, java.lang.Object)
    {
        org.kxml2.io.KXmlSerializer r0;
        java.lang.String r1, $r7;
        java.lang.Object r2;
        java.lang.RuntimeException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = new java.lang.RuntimeException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported Property:");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r3;
    }

    public void startDocument(java.lang.String, java.lang.Boolean) throws java.io.IOException
    {
        org.kxml2.io.KXmlSerializer r0;
        java.lang.String r1, r4, $r6, $r11, $r15;
        java.lang.Boolean r2;
        java.io.BufferedWriter r3, $r5, $r7, $r8, $r9, $r10, $r12, $r13;
        boolean $z0, $z1;
        java.util.Locale $r14;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Boolean;

        $r5 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r5.<java.io.BufferedWriter: void write(java.lang.String)>("<?xml version=\'1.0\' ");

        if r1 == null goto label1;

        r0.<org.kxml2.io.KXmlSerializer: java.lang.String encoding> = r1;

        $r14 = <java.util.Locale: java.util.Locale US>;

        $r15 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r14);

        $z1 = virtualinvoke $r15.<java.lang.String: boolean startsWith(java.lang.String)>("utf");

        if $z1 == 0 goto label1;

        r0.<org.kxml2.io.KXmlSerializer: boolean unicode> = 1;

     label1:
        $r6 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String encoding>;

        if $r6 == null goto label2;

        $r10 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r10.<java.io.BufferedWriter: void write(java.lang.String)>("encoding=\'");

        $r12 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        $r11 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String encoding>;

        virtualinvoke $r12.<java.io.BufferedWriter: void write(java.lang.String)>($r11);

        $r13 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r13.<java.io.BufferedWriter: void write(java.lang.String)>("\' ");

     label2:
        if r2 == null goto label4;

        $r8 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r8.<java.io.BufferedWriter: void write(java.lang.String)>("standalone=\'");

        r3 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        $z0 = virtualinvoke r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label5;

        r4 = "yes";

     label3:
        virtualinvoke r3.<java.io.BufferedWriter: void write(java.lang.String)>(r4);

        $r9 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r9.<java.io.BufferedWriter: void write(java.lang.String)>("\' ");

     label4:
        $r7 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r7.<java.io.BufferedWriter: void write(java.lang.String)>("?>");

        return;

     label5:
        r4 = "no";

        goto label3;
    }

    public org.xmlpull.v1.XmlSerializer startTag(java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.kxml2.io.KXmlSerializer r0;
        java.lang.String r1, r2, r3, $r17, $r21;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        java.lang.String[] r4, r5, r6, $r8, $r10, $r16, $r18, $r20, $r22;
        boolean[] $r7;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.io.BufferedWriter $r9, $r11, $r12, $r13, $r23, $r24;
        int[] $r14, $r15;
        java.lang.IllegalStateException $r19;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.kxml2.io.KXmlSerializer: void check(boolean)>(0);

        $r7 = r0.<org.kxml2.io.KXmlSerializer: boolean[] indent>;

        $i5 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $z0 = $r7[$i5];

        if $z0 == 0 goto label2;

        $r23 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r23.<java.io.BufferedWriter: void write(java.lang.String)>("\r\n");

        i4 = 0;

     label1:
        $i18 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        if i4 >= $i18 goto label2;

        $r24 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r24.<java.io.BufferedWriter: void write(java.lang.String)>("  ");

        i4 = i4 + 1;

        goto label1;

     label2:
        $i6 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        i0 = 3 * $i6;

        $r8 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack>;

        $i8 = lengthof $r8;

        $i7 = i0 + 3;

        if $i8 >= $i7 goto label3;

        $r20 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack>;

        $i16 = lengthof $r20;

        $i17 = 12 + $i16;

        r6 = newarray (java.lang.String)[$i17];

        $r22 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r22, 0, r6, 0, i0);

        r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack> = r6;

     label3:
        if r1 != null goto label6;

        r3 = "";

     label4:
        if r1 == null goto label8;

        $z2 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z2 == 0 goto label8;

        $r14 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $i9 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        i3 = $r14[$i9];

     label5:
        $r15 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $i10 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i11 = 1 + $i10;

        $i12 = $r15[$i11];

        if i3 >= $i12 goto label8;

        $r16 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $i13 = i3 * 2;

        $r17 = $r16[$i13];

        $z3 = virtualinvoke $r17.<java.lang.String: boolean isEmpty()>();

        if $z3 == 0 goto label7;

        $r18 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $i15 = i3 * 2;

        $i14 = 1 + $i15;

        $r21 = $r18[$i14];

        $z4 = virtualinvoke $r21.<java.lang.String: boolean isEmpty()>();

        if $z4 != 0 goto label7;

        $r19 = new java.lang.IllegalStateException;

        specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot set default namespace for elements in no namespace");

        throw $r19;

     label6:
        r3 = specialinvoke r0.<org.kxml2.io.KXmlSerializer: java.lang.String getPrefix(java.lang.String,boolean,boolean)>(r1, 1, 1);

        goto label4;

     label7:
        i3 = i3 + 1;

        goto label5;

     label8:
        r4 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack>;

        i1 = i0 + 1;

        r4[i0] = r1;

        r5 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack>;

        i2 = i1 + 1;

        r5[i1] = r3;

        $r10 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack>;

        $r10[i2] = r2;

        $r9 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r9.<java.io.BufferedWriter: void write(int)>(60);

        $z1 = virtualinvoke r3.<java.lang.String: boolean isEmpty()>();

        if $z1 != 0 goto label9;

        $r13 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r13.<java.io.BufferedWriter: void write(java.lang.String)>(r3);

        $r12 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r12.<java.io.BufferedWriter: void write(int)>(58);

     label9:
        $r11 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r11.<java.io.BufferedWriter: void write(java.lang.String)>(r2);

        r0.<org.kxml2.io.KXmlSerializer: boolean pending> = 1;

        return r0;
    }

    public org.xmlpull.v1.XmlSerializer text(java.lang.String) throws java.io.IOException
    {
        org.kxml2.io.KXmlSerializer r0;
        java.lang.String r1;
        int $i0;
        boolean[] $r2;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.kxml2.io.KXmlSerializer: void check(boolean)>(0);

        $r2 = r0.<org.kxml2.io.KXmlSerializer: boolean[] indent>;

        $i0 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $r2[$i0] = 0;

        specialinvoke r0.<org.kxml2.io.KXmlSerializer: void writeEscaped(java.lang.String,int)>(r1, -1);

        return r0;
    }

    public org.xmlpull.v1.XmlSerializer text(char[], int, int) throws java.io.IOException
    {
        org.kxml2.io.KXmlSerializer r0;
        char[] r1;
        int i0, i1;
        java.lang.String $r2;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>(r1, i0, i1);

        virtualinvoke r0.<org.kxml2.io.KXmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r2);

        return r0;
    }

    public static void <clinit>()
    {
        <org.kxml2.io.KXmlSerializer: int WRITE_BUFFER_SIZE> = 500;

        return;
    }
}
