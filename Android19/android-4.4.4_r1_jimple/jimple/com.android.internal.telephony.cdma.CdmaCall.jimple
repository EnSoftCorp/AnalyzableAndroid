public final class com.android.internal.telephony.cdma.CdmaCall extends com.android.internal.telephony.Call
{
    com.android.internal.telephony.cdma.CdmaCallTracker mOwner;

    void <init>(com.android.internal.telephony.cdma.CdmaCallTracker)
    {
        com.android.internal.telephony.cdma.CdmaCall r0;
        com.android.internal.telephony.cdma.CdmaCallTracker r1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCall;

        r1 := @parameter0: com.android.internal.telephony.cdma.CdmaCallTracker;

        specialinvoke r0.<com.android.internal.telephony.Call: void <init>()>();

        r0.<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.cdma.CdmaCallTracker mOwner> = r1;

        return;
    }

    static com.android.internal.telephony.Call$State stateFromDCState(com.android.internal.telephony.DriverCall$State)
    {
        com.android.internal.telephony.DriverCall$State r0;
        int[] $r1;
        int $i0, $i1;
        java.lang.RuntimeException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        com.android.internal.telephony.Call$State $r7, $r8, $r9, $r10, $r11, $r12;

        r0 := @parameter0: com.android.internal.telephony.DriverCall$State;

        $r1 = <com.android.internal.telephony.cdma.CdmaCall$1: int[] $SwitchMap$com$android$internal$telephony$DriverCall$State>;

        $i0 = virtualinvoke r0.<com.android.internal.telephony.DriverCall$State: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label6;
            case 6: goto label7;
            default: goto label1;
        };

     label1:
        $r2 = new java.lang.RuntimeException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal call state:");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label2:
        $r12 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ACTIVE>;

        return $r12;

     label3:
        $r11 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State HOLDING>;

        return $r11;

     label4:
        $r10 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DIALING>;

        return $r10;

     label5:
        $r9 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ALERTING>;

        return $r9;

     label6:
        $r8 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State INCOMING>;

        return $r8;

     label7:
        $r7 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State WAITING>;

        return $r7;
    }

    void attach(com.android.internal.telephony.Connection, com.android.internal.telephony.DriverCall)
    {
        com.android.internal.telephony.cdma.CdmaCall r0;
        com.android.internal.telephony.Connection r1;
        com.android.internal.telephony.DriverCall r2;
        java.util.ArrayList $r3;
        com.android.internal.telephony.DriverCall$State $r4;
        com.android.internal.telephony.Call$State $r5;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCall;

        r1 := @parameter0: com.android.internal.telephony.Connection;

        r2 := @parameter1: com.android.internal.telephony.DriverCall;

        $r3 = r0.<com.android.internal.telephony.cdma.CdmaCall: java.util.ArrayList mConnections>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $r4 = r2.<com.android.internal.telephony.DriverCall: com.android.internal.telephony.DriverCall$State state>;

        $r5 = staticinvoke <com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.Call$State stateFromDCState(com.android.internal.telephony.DriverCall$State)>($r4);

        r0.<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.Call$State mState> = $r5;

        return;
    }

    void attachFake(com.android.internal.telephony.Connection, com.android.internal.telephony.Call$State)
    {
        com.android.internal.telephony.cdma.CdmaCall r0;
        com.android.internal.telephony.Connection r1;
        com.android.internal.telephony.Call$State r2;
        java.util.ArrayList $r3;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCall;

        r1 := @parameter0: com.android.internal.telephony.Connection;

        r2 := @parameter1: com.android.internal.telephony.Call$State;

        $r3 = r0.<com.android.internal.telephony.cdma.CdmaCall: java.util.ArrayList mConnections>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        r0.<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.Call$State mState> = r2;

        return;
    }

    void clearDisconnected()
    {
        com.android.internal.telephony.cdma.CdmaCall r0;
        int i0, $i1, $i2;
        java.util.ArrayList $r1, $r2, $r4, $r9;
        com.android.internal.telephony.Call$State $r3, $r7, $r8;
        java.lang.Object $r5;
        com.android.internal.telephony.cdma.CdmaConnection $r6;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCall;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaCall: java.util.ArrayList mConnections>;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i0 = -1 + $i1;

     label1:
        if i0 < 0 goto label3;

        $r4 = r0.<com.android.internal.telephony.cdma.CdmaCall: java.util.ArrayList mConnections>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r6 = (com.android.internal.telephony.cdma.CdmaConnection) $r5;

        $r7 = virtualinvoke $r6.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Call$State getState()>();

        $r8 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DISCONNECTED>;

        if $r7 != $r8 goto label2;

        $r9 = r0.<com.android.internal.telephony.cdma.CdmaCall: java.util.ArrayList mConnections>;

        virtualinvoke $r9.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

     label2:
        i0 = i0 + -1;

        goto label1;

     label3:
        $r2 = r0.<com.android.internal.telephony.cdma.CdmaCall: java.util.ArrayList mConnections>;

        $i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i2 != 0 goto label4;

        $r3 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State IDLE>;

        r0.<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.Call$State mState> = $r3;

     label4:
        return;
    }

    boolean connectionDisconnected(com.android.internal.telephony.cdma.CdmaConnection)
    {
        com.android.internal.telephony.cdma.CdmaCall r0;
        com.android.internal.telephony.cdma.CdmaConnection r1;
        boolean z0;
        int i0, i1;
        com.android.internal.telephony.Call$State $r2, $r3, $r5, $r9, $r10;
        java.util.ArrayList $r4, $r6;
        java.lang.Object $r7;
        com.android.internal.telephony.Connection $r8;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCall;

        r1 := @parameter0: com.android.internal.telephony.cdma.CdmaConnection;

        $r3 = r0.<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.Call$State mState>;

        $r2 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DISCONNECTED>;

        if $r3 == $r2 goto label4;

        z0 = 1;

        i0 = 0;

        $r4 = r0.<com.android.internal.telephony.cdma.CdmaCall: java.util.ArrayList mConnections>;

        i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

     label1:
        if i0 >= i1 goto label2;

        $r6 = r0.<com.android.internal.telephony.cdma.CdmaCall: java.util.ArrayList mConnections>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r8 = (com.android.internal.telephony.Connection) $r7;

        $r9 = virtualinvoke $r8.<com.android.internal.telephony.Connection: com.android.internal.telephony.Call$State getState()>();

        $r10 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DISCONNECTED>;

        if $r9 == $r10 goto label3;

        z0 = 0;

     label2:
        if z0 == 0 goto label4;

        $r5 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DISCONNECTED>;

        r0.<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.Call$State mState> = $r5;

        return 1;

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        return 0;
    }

    void detach(com.android.internal.telephony.cdma.CdmaConnection)
    {
        com.android.internal.telephony.cdma.CdmaCall r0;
        com.android.internal.telephony.cdma.CdmaConnection r1;
        java.util.ArrayList $r2, $r3;
        int $i0;
        com.android.internal.telephony.Call$State $r4;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCall;

        r1 := @parameter0: com.android.internal.telephony.cdma.CdmaConnection;

        $r2 = r0.<com.android.internal.telephony.cdma.CdmaCall: java.util.ArrayList mConnections>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r3 = r0.<com.android.internal.telephony.cdma.CdmaCall: java.util.ArrayList mConnections>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label1;

        $r4 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State IDLE>;

        r0.<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.Call$State mState> = $r4;

     label1:
        return;
    }

    public void dispose()
    {
        com.android.internal.telephony.cdma.CdmaCall r0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCall;

        return;
    }

    public java.util.List getConnections()
    {
        com.android.internal.telephony.cdma.CdmaCall r0;
        java.util.ArrayList $r1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCall;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaCall: java.util.ArrayList mConnections>;

        return $r1;
    }

    public com.android.internal.telephony.Phone getPhone()
    {
        com.android.internal.telephony.cdma.CdmaCall r0;
        com.android.internal.telephony.cdma.CdmaCallTracker $r1;
        com.android.internal.telephony.cdma.CDMAPhone $r2;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCall;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.cdma.CdmaCallTracker mOwner>;

        $r2 = $r1.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        return $r2;
    }

    public void hangup() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.cdma.CdmaCall r0;
        com.android.internal.telephony.cdma.CdmaCallTracker $r1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCall;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.cdma.CdmaCallTracker mOwner>;

        virtualinvoke $r1.<com.android.internal.telephony.cdma.CdmaCallTracker: void hangup(com.android.internal.telephony.cdma.CdmaCall)>(r0);

        return;
    }

    boolean isFull()
    {
        com.android.internal.telephony.cdma.CdmaCall r0;
        java.util.ArrayList $r1;
        int $i0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCall;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaCall: java.util.ArrayList mConnections>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isMultiparty()
    {
        com.android.internal.telephony.cdma.CdmaCall r0;
        java.util.ArrayList $r1;
        int $i0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCall;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaCall: java.util.ArrayList mConnections>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 <= 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    void onHangupLocal()
    {
        com.android.internal.telephony.cdma.CdmaCall r0;
        int i0, i1;
        java.util.ArrayList $r1, $r3;
        com.android.internal.telephony.Call$State $r2;
        java.lang.Object $r4;
        com.android.internal.telephony.cdma.CdmaConnection $r5;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCall;

        i0 = 0;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaCall: java.util.ArrayList mConnections>;

        i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

     label1:
        if i0 >= i1 goto label2;

        $r3 = r0.<com.android.internal.telephony.cdma.CdmaCall: java.util.ArrayList mConnections>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r5 = (com.android.internal.telephony.cdma.CdmaConnection) $r4;

        virtualinvoke $r5.<com.android.internal.telephony.cdma.CdmaConnection: void onHangupLocal()>();

        i0 = i0 + 1;

        goto label1;

     label2:
        $r2 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DISCONNECTING>;

        r0.<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.Call$State mState> = $r2;

        return;
    }

    public java.lang.String toString()
    {
        com.android.internal.telephony.cdma.CdmaCall r0;
        com.android.internal.telephony.Call$State $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCall;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.Call$State mState>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.Call$State: java.lang.String toString()>();

        return $r2;
    }

    boolean update(com.android.internal.telephony.cdma.CdmaConnection, com.android.internal.telephony.DriverCall)
    {
        com.android.internal.telephony.cdma.CdmaCall r0;
        com.android.internal.telephony.cdma.CdmaConnection r1;
        com.android.internal.telephony.DriverCall r2;
        com.android.internal.telephony.Call$State r3, r4;
        boolean z0;
        com.android.internal.telephony.DriverCall$State $r5;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCall;

        r1 := @parameter0: com.android.internal.telephony.cdma.CdmaConnection;

        r2 := @parameter1: com.android.internal.telephony.DriverCall;

        $r5 = r2.<com.android.internal.telephony.DriverCall: com.android.internal.telephony.DriverCall$State state>;

        r3 = staticinvoke <com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.Call$State stateFromDCState(com.android.internal.telephony.DriverCall$State)>($r5);

        r4 = r0.<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.Call$State mState>;

        z0 = 0;

        if r3 == r4 goto label1;

        r0.<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.Call$State mState> = r3;

        z0 = 1;

     label1:
        return z0;
    }
}
