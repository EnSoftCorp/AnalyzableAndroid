final class java.lang.RealToString extends java.lang.Object
{
    private static final java.lang.ThreadLocal INSTANCE;
    private static final double invLogOfTenBaseTwo;
    private int digitCount;
    private final int[] digits;
    private int firstK;

    static void <clinit>()
    {
        java.lang.RealToString$1 $r0;
        double $d0, $d1, $d2;

        $r0 = new java.lang.RealToString$1;

        specialinvoke $r0.<java.lang.RealToString$1: void <init>()>();

        <java.lang.RealToString: java.lang.ThreadLocal INSTANCE> = $r0;

        $d0 = staticinvoke <java.lang.Math: double log(double)>(2.0);

        $d1 = staticinvoke <java.lang.Math: double log(double)>(10.0);

        $d2 = $d0 / $d1;

        <java.lang.RealToString: double invLogOfTenBaseTwo> = $d2;

        return;
    }

    private void <init>()
    {
        java.lang.RealToString r0;
        int[] $r1;

        r0 := @this: java.lang.RealToString;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (int)[64];

        r0.<java.lang.RealToString: int[] digits> = $r1;

        return;
    }

    void <init>(java.lang.RealToString$1)
    {
        java.lang.RealToString r0;
        java.lang.RealToString$1 r1;

        r0 := @this: java.lang.RealToString;

        r1 := @parameter0: java.lang.RealToString$1;

        specialinvoke r0.<java.lang.RealToString: void <init>()>();

        return;
    }

    private native void bigIntDigitGenerator(long, int, boolean, int);

    private java.lang.String convertDouble(java.lang.AbstractStringBuilder, double)
    {
        java.lang.RealToString r0;
        java.lang.AbstractStringBuilder r1, r3;
        double d0;
        long l0, l2, l6, $l7, $l8, $l11, $l16;
        boolean z0, z1, z2, z3;
        int i1, i4, i5;
        java.lang.String r2, $r5, $r6;
        byte b3, $b9, $b10, $b12, $b13, $b14, $b15, $b17;
        java.lang.StringBuilder $r4;

        r0 := @this: java.lang.RealToString;

        r1 := @parameter0: java.lang.AbstractStringBuilder;

        d0 := @parameter1: double;

        l0 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d0);

        $l7 = -9223372036854775808L & l0;

        $b9 = $l7 cmp 0L;

        if $b9 != 0 goto label04;

        z0 = 1;

     label01:
        $l8 = 9218868437227405312L & l0;

        $l11 = $l8 >> 52;

        i1 = (int) $l11;

        l2 = l0 & 4503599627370495L;

        $b10 = l2 cmp 0L;

        if $b10 != 0 goto label05;

        z1 = 1;

     label02:
        if i1 != 2047 goto label08;

        if z1 == 0 goto label07;

        if z0 == 0 goto label06;

        r2 = "Infinity";

     label03:
        if r2 == null goto label14;

        $r6 = staticinvoke <java.lang.RealToString: java.lang.String resultOrSideEffect(java.lang.AbstractStringBuilder,java.lang.String)>(r1, r2);

        return $r6;

     label04:
        z0 = 0;

        goto label01;

     label05:
        z1 = 0;

        goto label02;

     label06:
        r2 = "-Infinity";

        goto label03;

     label07:
        r2 = "NaN";

        goto label03;

     label08:
        r2 = null;

        if i1 != 0 goto label03;

        if z1 == 0 goto label11;

        if z0 == 0 goto label10;

        r2 = "0.0";

     label09:
        goto label03;

     label10:
        r2 = "-0.0";

        goto label09;

     label11:
        b3 = l2 cmp 1L;

        r2 = null;

        if b3 != 0 goto label03;

        if z0 == 0 goto label13;

        r2 = "4.9E-324";

     label12:
        goto label03;

     label13:
        r2 = "-4.9E-324";

        goto label12;

     label14:
        i4 = 52;

        if i1 != 0 goto label16;

        i5 = -1074;

        l6 = l2;

     label15:
        $l16 = 4503599627370496L & l6;

        $b17 = $l16 cmp 0L;

        if $b17 != 0 goto label17;

        l6 = l6 << 1;

        i4 = i4 + -1;

        goto label15;

     label16:
        l2 = l2 | 4503599627370496L;

        i5 = i1 - 1075;

     label17:
        r0.<java.lang.RealToString: int digitCount> = 0;

        r0.<java.lang.RealToString: int firstK> = 0;

        if -59 >= i5 goto label18;

        if i5 < 6 goto label19;

     label18:
        if i5 != -59 goto label26;

        if z1 != 0 goto label26;

     label19:
        if i1 != 0 goto label25;

        z3 = 1;

     label20:
        specialinvoke r0.<java.lang.RealToString: void longDigitGenerator(long,int,boolean,boolean,int)>(l2, i5, z3, z1, i4);

     label21:
        if r1 == null goto label29;

        r3 = r1;

     label22:
        $b12 = d0 cmpl 1.0E7;

        if $b12 >= 0 goto label23;

        $b13 = d0 cmpg -1.0E7;

        if $b13 <= 0 goto label23;

        $b15 = d0 cmpl -0.001;

        if $b15 <= 0 goto label30;

        $b14 = d0 cmpg 0.001;

        if $b14 >= 0 goto label30;

     label23:
        specialinvoke r0.<java.lang.RealToString: void freeFormatExponential(java.lang.AbstractStringBuilder,boolean)>(r3, z0);

     label24:
        if r1 == null goto label31;

        return null;

     label25:
        z3 = 0;

        goto label20;

     label26:
        if i1 != 0 goto label28;

        z2 = 1;

     label27:
        specialinvoke r0.<java.lang.RealToString: void bigIntDigitGenerator(long,int,boolean,int)>(l2, i5, z2, i4);

        goto label21;

     label28:
        z2 = 0;

        goto label27;

     label29:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>(26);

        r3 = $r4;

        goto label22;

     label30:
        specialinvoke r0.<java.lang.RealToString: void freeFormat(java.lang.AbstractStringBuilder,boolean)>(r3, z0);

        goto label24;

     label31:
        $r5 = virtualinvoke r3.<java.lang.AbstractStringBuilder: java.lang.String toString()>();

        return $r5;
    }

    private void freeFormat(java.lang.AbstractStringBuilder, boolean)
    {
        java.lang.RealToString r0;
        java.lang.AbstractStringBuilder r1;
        boolean z0;
        int i0, i1, i2, i3, i4, $i5, $i6;
        int[] r2, r3;
        char $c7;

        r0 := @this: java.lang.RealToString;

        r1 := @parameter0: java.lang.AbstractStringBuilder;

        z0 := @parameter1: boolean;

        if z0 != 0 goto label01;

        virtualinvoke r1.<java.lang.AbstractStringBuilder: void append0(char)>(45);

     label01:
        i0 = r0.<java.lang.RealToString: int firstK>;

        if i0 >= 0 goto label03;

        virtualinvoke r1.<java.lang.AbstractStringBuilder: void append0(char)>(48);

        virtualinvoke r1.<java.lang.AbstractStringBuilder: void append0(char)>(46);

        i4 = i0 + 1;

     label02:
        if i4 >= 0 goto label03;

        virtualinvoke r1.<java.lang.AbstractStringBuilder: void append0(char)>(48);

        i4 = i4 + 1;

        goto label02;

     label03:
        r2 = r0.<java.lang.RealToString: int[] digits>;

        i1 = 1;

        i2 = r2[0];

     label04:
        if i2 == -1 goto label08;

        $i6 = i2 + 48;

        $c7 = (char) $i6;

        virtualinvoke r1.<java.lang.AbstractStringBuilder: void append0(char)>($c7);

     label05:
        if i0 != 0 goto label06;

        virtualinvoke r1.<java.lang.AbstractStringBuilder: void append0(char)>(46);

     label06:
        i0 = i0 + -1;

        $i5 = r0.<java.lang.RealToString: int digitCount>;

        if i1 >= $i5 goto label09;

        r3 = r0.<java.lang.RealToString: int[] digits>;

        i3 = i1 + 1;

        i2 = r3[i1];

     label07:
        if i2 != -1 goto label10;

        if i0 >= -1 goto label10;

        return;

     label08:
        if i0 < -1 goto label05;

        virtualinvoke r1.<java.lang.AbstractStringBuilder: void append0(char)>(48);

        goto label05;

     label09:
        i2 = -1;

        i3 = i1;

        goto label07;

     label10:
        i1 = i3;

        goto label04;
    }

    private void freeFormatExponential(java.lang.AbstractStringBuilder, boolean)
    {
        java.lang.RealToString r0;
        java.lang.AbstractStringBuilder r1;
        boolean z0;
        int[] r2, r3;
        int i1, i2, i3, i4, $i5, $i6, $i8, $i9, $i10, $i11;
        char $c7, $c12;

        r0 := @this: java.lang.RealToString;

        r1 := @parameter0: java.lang.AbstractStringBuilder;

        z0 := @parameter1: boolean;

        if z0 != 0 goto label1;

        virtualinvoke r1.<java.lang.AbstractStringBuilder: void append0(char)>(45);

     label1:
        r2 = r0.<java.lang.RealToString: int[] digits>;

        $i5 = r2[0];

        $i6 = 48 + $i5;

        $c7 = (char) $i6;

        virtualinvoke r1.<java.lang.AbstractStringBuilder: void append0(char)>($c7);

        virtualinvoke r1.<java.lang.AbstractStringBuilder: void append0(char)>(46);

        i1 = r0.<java.lang.RealToString: int firstK>;

        i2 = i1;

        i3 = 1;

     label2:
        i1 = i1 + -1;

        $i8 = r0.<java.lang.RealToString: int digitCount>;

        if i3 < $i8 goto label4;

        $i11 = i2 - 1;

        if i1 != $i11 goto label3;

        virtualinvoke r1.<java.lang.AbstractStringBuilder: void append0(char)>(48);

     label3:
        virtualinvoke r1.<java.lang.AbstractStringBuilder: void append0(char)>(69);

        staticinvoke <java.lang.IntegralToString: void appendInt(java.lang.AbstractStringBuilder,int)>(r1, i2);

        return;

     label4:
        r3 = r0.<java.lang.RealToString: int[] digits>;

        i4 = i3 + 1;

        $i9 = r3[i3];

        $i10 = 48 + $i9;

        $c12 = (char) $i10;

        virtualinvoke r1.<java.lang.AbstractStringBuilder: void append0(char)>($c12);

        i3 = i4;

        goto label2;
    }

    public static java.lang.RealToString getInstance()
    {
        java.lang.ThreadLocal $r0;
        java.lang.Object $r1;
        java.lang.RealToString $r2;

        $r0 = <java.lang.RealToString: java.lang.ThreadLocal INSTANCE>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r2 = (java.lang.RealToString) $r1;

        return $r2;
    }

    private void longDigitGenerator(long, int, boolean, boolean, int)
    {
        java.lang.RealToString r0;
        long l0, l3, l4, l5, l7, l15, $l21, $l23, $l25, $l31, $l39;
        int i1, i2, i6, i8, i9, i10, i11, i12, i13, i14, $i16, $i17, $i18, $i19, $i27, $i28, $i29, $i30, $i32, $i33, $i34, $i35, $i36, $i38, $i41, $i42;
        boolean z0, z1, z2, z3;
        int[] r1, r2, r3, r4, r5;
        double $d0, $d1, $d2, $d3, $d4;
        byte $b20, $b22, $b24, $b26, $b37, $b40;
        long[] $r6, $r7;

        r0 := @this: java.lang.RealToString;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        i2 := @parameter4: int;

        if i1 < 0 goto label07;

        l3 = 1L << i1;

        if z1 != 0 goto label06;

        $i42 = i1 + 1;

        l4 = l0 << $i42;

        l5 = 2L;

     label01:
        $i18 = i1 + i2;

        $i16 = -1 + $i18;

        $d3 = (double) $i16;

        $d0 = <java.lang.RealToString: double invLogOfTenBaseTwo>;

        $d4 = $d3 * $d0;

        $d1 = $d4 - 1.0E-10;

        $d2 = staticinvoke <java.lang.Math: double ceil(double)>($d1);

        i6 = (int) $d2;

        if i6 <= 0 goto label10;

        $r7 = <libcore.math.MathUtils: long[] LONG_POWERS_OF_TEN>;

        $l39 = $r7[i6];

        l5 = l5 * $l39;

     label02:
        $l21 = l4 + l3;

        $b22 = $l21 cmp l5;

        if $b22 <= 0 goto label13;

        r0.<java.lang.RealToString: int firstK> = i6;

     label03:
        i9 = 0;

        i8 = 3;

     label04:
        if i8 < 0 goto label14;

        $l31 = l5 << i8;

        l15 = l4 - $l31;

        $b37 = l15 cmp 0L;

        if $b37 < 0 goto label05;

        l4 = l15;

        $i36 = 1 << i8;

        i9 = i9 + $i36;

     label05:
        i8 = i8 + -1;

        goto label04;

     label06:
        $i41 = i1 + 2;

        l4 = l0 << $i41;

        l5 = 4L;

        goto label01;

     label07:
        l3 = 1L;

        if z0 != 0 goto label08;

        if z1 != 0 goto label09;

     label08:
        l4 = l0 << 1;

        $i17 = 1 - i1;

        l5 = 1L << $i17;

        goto label01;

     label09:
        l4 = l0 << 2;

        $i38 = 2 - i1;

        l5 = 1L << $i38;

        goto label01;

     label10:
        if i6 >= 0 goto label02;

        $r6 = <libcore.math.MathUtils: long[] LONG_POWERS_OF_TEN>;

        $i35 = neg i6;

        l7 = $r6[$i35];

        l4 = l4 * l7;

        $b40 = l3 cmp 1L;

        if $b40 != 0 goto label12;

        l3 = l7;

     label11:
        goto label02;

     label12:
        l3 = l3 * l7;

        goto label11;

     label13:
        $i19 = i6 - 1;

        r0.<java.lang.RealToString: int firstK> = $i19;

        l4 = l4 * 10L;

        l3 = l3 * 10L;

        goto label03;

     label14:
        $b20 = l4 cmp l3;

        if $b20 >= 0 goto label18;

        z3 = 1;

     label15:
        $l25 = l4 + l3;

        $b26 = $l25 cmp l5;

        if $b26 <= 0 goto label19;

        z2 = 1;

     label16:
        if z3 != 0 goto label17;

        if z2 == 0 goto label20;

     label17:
        if z3 == 0 goto label21;

        if z2 != 0 goto label21;

        r4 = r0.<java.lang.RealToString: int[] digits>;

        i13 = r0.<java.lang.RealToString: int digitCount>;

        $i33 = i13 + 1;

        r0.<java.lang.RealToString: int digitCount> = $i33;

        r4[i13] = i9;

        return;

     label18:
        z3 = 0;

        goto label15;

     label19:
        z2 = 0;

        goto label16;

     label20:
        l4 = l4 * 10L;

        l3 = l3 * 10L;

        r5 = r0.<java.lang.RealToString: int[] digits>;

        i14 = r0.<java.lang.RealToString: int digitCount>;

        $i32 = i14 + 1;

        r0.<java.lang.RealToString: int digitCount> = $i32;

        r5[i14] = i9;

        goto label03;

     label21:
        if z2 == 0 goto label22;

        if z3 != 0 goto label22;

        r3 = r0.<java.lang.RealToString: int[] digits>;

        i12 = r0.<java.lang.RealToString: int digitCount>;

        $i27 = i12 + 1;

        r0.<java.lang.RealToString: int digitCount> = $i27;

        $i34 = i9 + 1;

        r3[i12] = $i34;

        return;

     label22:
        $l23 = l4 << 1;

        $b24 = $l23 cmp l5;

        if $b24 >= 0 goto label23;

        r2 = r0.<java.lang.RealToString: int[] digits>;

        i11 = r0.<java.lang.RealToString: int digitCount>;

        $i28 = i11 + 1;

        r0.<java.lang.RealToString: int digitCount> = $i28;

        r2[i11] = i9;

        return;

     label23:
        r1 = r0.<java.lang.RealToString: int[] digits>;

        i10 = r0.<java.lang.RealToString: int digitCount>;

        $i30 = i10 + 1;

        r0.<java.lang.RealToString: int digitCount> = $i30;

        $i29 = i9 + 1;

        r1[i10] = $i29;

        return;
    }

    private static java.lang.String resultOrSideEffect(java.lang.AbstractStringBuilder, java.lang.String)
    {
        java.lang.AbstractStringBuilder r0;
        java.lang.String r1;

        r0 := @parameter0: java.lang.AbstractStringBuilder;

        r1 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        virtualinvoke r0.<java.lang.AbstractStringBuilder: void append0(java.lang.String)>(r1);

        r1 = null;

     label1:
        return r1;
    }

    public void appendDouble(java.lang.AbstractStringBuilder, double)
    {
        java.lang.RealToString r0;
        java.lang.AbstractStringBuilder r1;
        double d0;

        r0 := @this: java.lang.RealToString;

        r1 := @parameter0: java.lang.AbstractStringBuilder;

        d0 := @parameter1: double;

        specialinvoke r0.<java.lang.RealToString: java.lang.String convertDouble(java.lang.AbstractStringBuilder,double)>(r1, d0);

        return;
    }

    public void appendFloat(java.lang.AbstractStringBuilder, float)
    {
        java.lang.RealToString r0;
        java.lang.AbstractStringBuilder r1;
        float f0;

        r0 := @this: java.lang.RealToString;

        r1 := @parameter0: java.lang.AbstractStringBuilder;

        f0 := @parameter1: float;

        virtualinvoke r0.<java.lang.RealToString: java.lang.String convertFloat(java.lang.AbstractStringBuilder,float)>(r1, f0);

        return;
    }

    public java.lang.String convertFloat(java.lang.AbstractStringBuilder, float)
    {
        java.lang.RealToString r0;
        java.lang.AbstractStringBuilder r1, r3;
        float f0;
        int i0, i1, i2, i3, i4, i7, $i8, $i9, $i14;
        boolean z0, z1, z2, z3;
        java.lang.String r2, $r5, $r6;
        long l5, l6;
        byte $b10, $b11, $b12, $b13;
        java.lang.StringBuilder $r4;

        r0 := @this: java.lang.RealToString;

        r1 := @parameter0: java.lang.AbstractStringBuilder;

        f0 := @parameter1: float;

        i0 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>(f0);

        $i9 = -2147483648 & i0;

        if $i9 != 0 goto label04;

        z0 = 1;

     label01:
        $i8 = 2139095040 & i0;

        i1 = $i8 >> 23;

        i2 = i0 & 8388607;

        if i2 != 0 goto label05;

        z1 = 1;

     label02:
        if i1 != 255 goto label08;

        if z1 == 0 goto label07;

        if z0 == 0 goto label06;

        r2 = "Infinity";

     label03:
        if r2 == null goto label11;

        $r6 = staticinvoke <java.lang.RealToString: java.lang.String resultOrSideEffect(java.lang.AbstractStringBuilder,java.lang.String)>(r1, r2);

        return $r6;

     label04:
        z0 = 0;

        goto label01;

     label05:
        z1 = 0;

        goto label02;

     label06:
        r2 = "-Infinity";

        goto label03;

     label07:
        r2 = "NaN";

        goto label03;

     label08:
        r2 = null;

        if i1 != 0 goto label03;

        r2 = null;

        if z1 == 0 goto label03;

        if z0 == 0 goto label10;

        r2 = "0.0";

     label09:
        goto label03;

     label10:
        r2 = "-0.0";

        goto label09;

     label11:
        i3 = 23;

        if i1 != 0 goto label14;

        i4 = -149;

        if i2 >= 8 goto label12;

        i2 = i2 << 2;

        i4 = -151;

     label12:
        i7 = i2;

     label13:
        $i14 = 8388608 & i7;

        if $i14 != 0 goto label15;

        i7 = i7 << 1;

        i3 = i3 + -1;

        goto label13;

     label14:
        i2 = i2 | 8388608;

        i4 = i1 - 150;

     label15:
        r0.<java.lang.RealToString: int digitCount> = 0;

        r0.<java.lang.RealToString: int firstK> = 0;

        if -59 >= i4 goto label16;

        if i4 < 35 goto label17;

     label16:
        if i4 != -59 goto label24;

        if z1 != 0 goto label24;

     label17:
        l6 = (long) i2;

        if i1 != 0 goto label23;

        z3 = 1;

     label18:
        specialinvoke r0.<java.lang.RealToString: void longDigitGenerator(long,int,boolean,boolean,int)>(l6, i4, z3, z1, i3);

     label19:
        if r1 == null goto label27;

        r3 = r1;

     label20:
        $b10 = f0 cmpl 1.0E7F;

        if $b10 >= 0 goto label21;

        $b11 = f0 cmpg -1.0E7F;

        if $b11 <= 0 goto label21;

        $b13 = f0 cmpl -0.001F;

        if $b13 <= 0 goto label28;

        $b12 = f0 cmpg 0.001F;

        if $b12 >= 0 goto label28;

     label21:
        specialinvoke r0.<java.lang.RealToString: void freeFormatExponential(java.lang.AbstractStringBuilder,boolean)>(r3, z0);

     label22:
        if r1 == null goto label29;

        return null;

     label23:
        z3 = 0;

        goto label18;

     label24:
        l5 = (long) i2;

        if i1 != 0 goto label26;

        z2 = 1;

     label25:
        specialinvoke r0.<java.lang.RealToString: void bigIntDigitGenerator(long,int,boolean,int)>(l5, i4, z2, i3);

        goto label19;

     label26:
        z2 = 0;

        goto label25;

     label27:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>(26);

        r3 = $r4;

        goto label20;

     label28:
        specialinvoke r0.<java.lang.RealToString: void freeFormat(java.lang.AbstractStringBuilder,boolean)>(r3, z0);

        goto label22;

     label29:
        $r5 = virtualinvoke r3.<java.lang.AbstractStringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public java.lang.String doubleToString(double)
    {
        java.lang.RealToString r0;
        double d0;
        java.lang.String $r1;

        r0 := @this: java.lang.RealToString;

        d0 := @parameter0: double;

        $r1 = specialinvoke r0.<java.lang.RealToString: java.lang.String convertDouble(java.lang.AbstractStringBuilder,double)>(null, d0);

        return $r1;
    }

    public java.lang.String floatToString(float)
    {
        java.lang.RealToString r0;
        float f0;
        java.lang.String $r1;

        r0 := @this: java.lang.RealToString;

        f0 := @parameter0: float;

        $r1 = virtualinvoke r0.<java.lang.RealToString: java.lang.String convertFloat(java.lang.AbstractStringBuilder,float)>(null, f0);

        return $r1;
    }
}
