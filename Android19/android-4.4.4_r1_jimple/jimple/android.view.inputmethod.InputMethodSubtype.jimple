public final class android.view.inputmethod.InputMethodSubtype extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private static final java.lang.String EXTRA_KEY_UNTRANSLATABLE_STRING_IN_SUBTYPE_NAME;
    private static final java.lang.String EXTRA_VALUE_KEY_VALUE_SEPARATOR;
    private static final java.lang.String EXTRA_VALUE_PAIR_SEPARATOR;
    private static final java.lang.String TAG;
    private volatile java.util.HashMap mExtraValueHashMapCache;
    private final boolean mIsAsciiCapable;
    private final boolean mIsAuxiliary;
    private final boolean mOverridesImplicitlyEnabledSubtype;
    private final java.lang.String mSubtypeExtraValue;
    private final int mSubtypeHashCode;
    private final int mSubtypeIconResId;
    private final int mSubtypeId;
    private final java.lang.String mSubtypeLocale;
    private final java.lang.String mSubtypeMode;
    private final int mSubtypeNameResId;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        android.view.inputmethod.InputMethodSubtype$1 $r2;

        <android.view.inputmethod.InputMethodSubtype: java.lang.String EXTRA_VALUE_PAIR_SEPARATOR> = ",";

        <android.view.inputmethod.InputMethodSubtype: java.lang.String EXTRA_VALUE_KEY_VALUE_SEPARATOR> = "=";

        <android.view.inputmethod.InputMethodSubtype: java.lang.String EXTRA_KEY_UNTRANSLATABLE_STRING_IN_SUBTYPE_NAME> = "UntranslatableReplacementStringInSubtypeName";

        $r0 = class "android/view/inputmethod/InputMethodSubtype";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.view.inputmethod.InputMethodSubtype: java.lang.String TAG> = $r1;

        $r2 = new android.view.inputmethod.InputMethodSubtype$1;

        specialinvoke $r2.<android.view.inputmethod.InputMethodSubtype$1: void <init>()>();

        <android.view.inputmethod.InputMethodSubtype: android.os.Parcelable$Creator CREATOR> = $r2;

        return;
    }

    public void <init>(int, int, java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        android.view.inputmethod.InputMethodSubtype r0;
        int i0, i1;
        java.lang.String r1, r2, r3;
        boolean z0;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        z0 := @parameter5: boolean;

        specialinvoke r0.<android.view.inputmethod.InputMethodSubtype: void <init>(int,int,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>(i0, i1, r1, r2, r3, z0, 0);

        return;
    }

    public void <init>(int, int, java.lang.String, java.lang.String, java.lang.String, boolean, boolean)
    {
        android.view.inputmethod.InputMethodSubtype r0;
        int i0, i1;
        java.lang.String r1, r2, r3;
        boolean z0, z1;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        specialinvoke r0.<android.view.inputmethod.InputMethodSubtype: void <init>(int,int,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,int)>(i0, i1, r1, r2, r3, z0, z1, 0);

        return;
    }

    public void <init>(int, int, java.lang.String, java.lang.String, java.lang.String, boolean, boolean, int)
    {
        android.view.inputmethod.InputMethodSubtype r0;
        int i0, i1, i2;
        java.lang.String r1, r2, r3;
        boolean z0, z1;
        android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder $r4;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        i2 := @parameter7: int;

        $r4 = staticinvoke <android.view.inputmethod.InputMethodSubtype: android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder getBuilder(int,int,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,int,boolean)>(i0, i1, r1, r2, r3, z0, z1, i2, 0);

        specialinvoke r0.<android.view.inputmethod.InputMethodSubtype: void <init>(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder)>($r4);

        return;
    }

    void <init>(android.os.Parcel)
    {
        android.view.inputmethod.InputMethodSubtype r0;
        android.os.Parcel r1;
        boolean z0, z1, z2;
        java.lang.String r2, r3, r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        r1 := @parameter0: android.os.Parcel;

        z0 = 1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.inputmethod.InputMethodSubtype: int mSubtypeNameResId> = $i0;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.inputmethod.InputMethodSubtype: int mSubtypeIconResId> = $i1;

        r2 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        if r2 == null goto label07;

     label01:
        r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String mSubtypeLocale> = r2;

        r3 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        if r3 == null goto label08;

     label02:
        r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String mSubtypeMode> = r3;

        r4 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        if r4 == null goto label09;

     label03:
        r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String mSubtypeExtraValue> = r4;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i7 = (int) 1;

        if $i2 != i7 goto label10;

        z1 = 1;

     label04:
        r0.<android.view.inputmethod.InputMethodSubtype: boolean mIsAuxiliary> = z1;

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i8 = (int) 1;

        if $i3 != i8 goto label11;

        z2 = 1;

     label05:
        r0.<android.view.inputmethod.InputMethodSubtype: boolean mOverridesImplicitlyEnabledSubtype> = z2;

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.inputmethod.InputMethodSubtype: int mSubtypeHashCode> = $i4;

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.inputmethod.InputMethodSubtype: int mSubtypeId> = $i6;

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i9 = (int) 1;

        if $i5 != i9 goto label12;

     label06:
        r0.<android.view.inputmethod.InputMethodSubtype: boolean mIsAsciiCapable> = z0;

        return;

     label07:
        r2 = "";

        goto label01;

     label08:
        r3 = "";

        goto label02;

     label09:
        r4 = "";

        goto label03;

     label10:
        z1 = 0;

        goto label04;

     label11:
        z2 = 0;

        goto label05;

     label12:
        z0 = 0;

        goto label06;
    }

    private void <init>(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder)
    {
        android.view.inputmethod.InputMethodSubtype r0;
        android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder r1;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        r1 := @parameter0: android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = staticinvoke <android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: int access$100(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder)>(r1);

        r0.<android.view.inputmethod.InputMethodSubtype: int mSubtypeNameResId> = $i1;

        $i2 = staticinvoke <android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: int access$200(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder)>(r1);

        r0.<android.view.inputmethod.InputMethodSubtype: int mSubtypeIconResId> = $i2;

        $r2 = staticinvoke <android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: java.lang.String access$300(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder)>(r1);

        r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String mSubtypeLocale> = $r2;

        $r3 = staticinvoke <android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: java.lang.String access$400(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder)>(r1);

        r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String mSubtypeMode> = $r3;

        $r4 = staticinvoke <android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: java.lang.String access$500(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder)>(r1);

        r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String mSubtypeExtraValue> = $r4;

        $z0 = staticinvoke <android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: boolean access$600(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder)>(r1);

        r0.<android.view.inputmethod.InputMethodSubtype: boolean mIsAuxiliary> = $z0;

        $z1 = staticinvoke <android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: boolean access$700(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder)>(r1);

        r0.<android.view.inputmethod.InputMethodSubtype: boolean mOverridesImplicitlyEnabledSubtype> = $z1;

        $i3 = staticinvoke <android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: int access$800(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder)>(r1);

        r0.<android.view.inputmethod.InputMethodSubtype: int mSubtypeId> = $i3;

        $z2 = staticinvoke <android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: boolean access$900(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder)>(r1);

        r0.<android.view.inputmethod.InputMethodSubtype: boolean mIsAsciiCapable> = $z2;

        $i4 = r0.<android.view.inputmethod.InputMethodSubtype: int mSubtypeId>;

        if $i4 == 0 goto label2;

        i0 = r0.<android.view.inputmethod.InputMethodSubtype: int mSubtypeId>;

     label1:
        r0.<android.view.inputmethod.InputMethodSubtype: int mSubtypeHashCode> = i0;

        return;

     label2:
        $r7 = r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String mSubtypeLocale>;

        $r5 = r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String mSubtypeMode>;

        $r6 = r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String mSubtypeExtraValue>;

        $z5 = r0.<android.view.inputmethod.InputMethodSubtype: boolean mIsAuxiliary>;

        $z4 = r0.<android.view.inputmethod.InputMethodSubtype: boolean mOverridesImplicitlyEnabledSubtype>;

        $z3 = r0.<android.view.inputmethod.InputMethodSubtype: boolean mIsAsciiCapable>;

        i0 = staticinvoke <android.view.inputmethod.InputMethodSubtype: int hashCodeInternal(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean)>($r7, $r5, $r6, $z5, $z4, $z3);

        goto label1;
    }

    void <init>(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder, android.view.inputmethod.InputMethodSubtype$1)
    {
        android.view.inputmethod.InputMethodSubtype r0;
        android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder r1;
        android.view.inputmethod.InputMethodSubtype$1 r2;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        r1 := @parameter0: android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder;

        r2 := @parameter1: android.view.inputmethod.InputMethodSubtype$1;

        specialinvoke r0.<android.view.inputmethod.InputMethodSubtype: void <init>(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder)>(r1);

        return;
    }

    private static java.util.Locale constructLocaleFromString(java.lang.String)
    {
        java.lang.String r0, $r3, $r4, $r5, $r7, $r8, $r10;
        java.lang.String[] r1;
        boolean $z0;
        int $i0, $i1, $i2;
        java.util.Locale $r2, $r6, $r9;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 == 0 goto label2;

     label1:
        return null;

     label2:
        r1 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("_", 3);

        $i0 = lengthof r1;

        if $i0 != 1 goto label3;

        $r9 = new java.util.Locale;

        $r10 = r1[0];

        specialinvoke $r9.<java.util.Locale: void <init>(java.lang.String)>($r10);

        return $r9;

     label3:
        $i1 = lengthof r1;

        if $i1 != 2 goto label4;

        $r6 = new java.util.Locale;

        $r8 = r1[0];

        $r7 = r1[1];

        specialinvoke $r6.<java.util.Locale: void <init>(java.lang.String,java.lang.String)>($r8, $r7);

        return $r6;

     label4:
        $i2 = lengthof r1;

        if $i2 != 3 goto label1;

        $r2 = new java.util.Locale;

        $r5 = r1[0];

        $r4 = r1[1];

        $r3 = r1[2];

        specialinvoke $r2.<java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r5, $r4, $r3);

        return $r2;
    }

    private static android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder getBuilder(int, int, java.lang.String, java.lang.String, java.lang.String, boolean, boolean, int, boolean)
    {
        int i0, i1, i2;
        java.lang.String r0, r1, r2;
        boolean z0, z1, z2;
        android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder r3, $r4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: java.lang.String;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: java.lang.String;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        i2 := @parameter7: int;

        z2 := @parameter8: boolean;

        $r4 = new android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder;

        specialinvoke $r4.<android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: void <init>()>();

        r3 = $r4;

        staticinvoke <android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: int access$102(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder,int)>(r3, i0);

        staticinvoke <android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: int access$202(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder,int)>(r3, i1);

        staticinvoke <android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: java.lang.String access$302(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder,java.lang.String)>(r3, r0);

        staticinvoke <android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: java.lang.String access$402(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder,java.lang.String)>(r3, r1);

        staticinvoke <android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: java.lang.String access$502(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder,java.lang.String)>(r3, r2);

        staticinvoke <android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: boolean access$602(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder,boolean)>(r3, z0);

        staticinvoke <android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: boolean access$702(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder,boolean)>(r3, z1);

        staticinvoke <android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: int access$802(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder,int)>(r3, i2);

        staticinvoke <android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: boolean access$902(android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder,boolean)>(r3, z2);

        return r3;
    }

    private java.util.HashMap getExtraValueHashMap()
    {
        android.view.inputmethod.InputMethodSubtype r0;
        java.lang.Throwable r1, $r18;
        java.lang.String[] r2, r3;
        int i0, i1, $i2, $i3, $i4;
        java.util.HashMap $r4, $r5, $r6, $r7, $r11, $r17;
        java.lang.String $r8, $r9, $r10, $r12, $r13, $r15;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        $r4 = r0.<android.view.inputmethod.InputMethodSubtype: java.util.HashMap mExtraValueHashMapCache>;

        if $r4 != null goto label13;

        entermonitor r0;

     label01:
        $r6 = r0.<android.view.inputmethod.InputMethodSubtype: java.util.HashMap mExtraValueHashMapCache>;

        if $r6 != null goto label12;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r0.<android.view.inputmethod.InputMethodSubtype: java.util.HashMap mExtraValueHashMapCache> = $r7;

        $r8 = r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String mSubtypeExtraValue>;

        r2 = virtualinvoke $r8.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        i0 = lengthof r2;

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label12;

     label04:
        $r9 = r2[i1];

        r3 = virtualinvoke $r9.<java.lang.String: java.lang.String[] split(java.lang.String)>("=");

        $i3 = lengthof r3;

        if $i3 != 1 goto label06;

        $r17 = r0.<android.view.inputmethod.InputMethodSubtype: java.util.HashMap mExtraValueHashMapCache>;

        $r15 = r3[0];

        virtualinvoke $r17.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, null);

     label05:
        goto label14;

     label06:
        $i2 = lengthof r3;

        if $i2 <= 1 goto label14;

        $i4 = lengthof r3;

        if $i4 <= 2 goto label07;

        $r13 = <android.view.inputmethod.InputMethodSubtype: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r13, "ExtraValue has two or more \'=\'s");

     label07:
        $r11 = r0.<android.view.inputmethod.InputMethodSubtype: java.util.HashMap mExtraValueHashMapCache>;

        $r12 = r3[0];

        $r10 = r3[1];

        virtualinvoke $r11.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, $r10);

     label08:
        goto label14;

     label09:
        $r18 := @caughtexception;

        r1 = $r18;

     label10:
        exitmonitor r0;

     label11:
        throw r1;

     label12:
        exitmonitor r0;

     label13:
        $r5 = r0.<android.view.inputmethod.InputMethodSubtype: java.util.HashMap mExtraValueHashMapCache>;

        return $r5;

     label14:
        i1 = i1 + 1;

        goto label03;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label12 to label13 with label09;
    }

    private static int hashCodeInternal(java.lang.String, java.lang.String, java.lang.String, boolean, boolean, boolean)
    {
        java.lang.String r0, r1, r2;
        boolean z0, z1, z2, z3;
        java.lang.Object[] r3, r4;
        java.lang.Boolean $r5, $r6, $r7, $r8, $r9;
        int $i0, $i1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        z2 := @parameter5: boolean;

        if z2 != 0 goto label2;

        z3 = 1;

     label1:
        if z3 == 0 goto label3;

        r4 = newarray (java.lang.Object)[5];

        r4[0] = r0;

        r4[1] = r1;

        r4[2] = r2;

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r4[3] = $r8;

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1);

        r4[4] = $r9;

        $i1 = staticinvoke <java.util.Arrays: int hashCode(java.lang.Object[])>(r4);

        return $i1;

     label2:
        z3 = 0;

        goto label1;

     label3:
        r3 = newarray (java.lang.Object)[6];

        r3[0] = r0;

        r3[1] = r1;

        r3[2] = r2;

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r3[3] = $r5;

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1);

        r3[4] = $r6;

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z2);

        r3[5] = $r7;

        $i0 = staticinvoke <java.util.Arrays: int hashCode(java.lang.Object[])>(r3);

        return $i0;
    }

    public static java.util.List sort(android.content.Context, int, android.view.inputmethod.InputMethodInfo, java.util.List)
    {
        android.content.Context r0;
        int i0, i1, i2;
        android.view.inputmethod.InputMethodInfo r1;
        java.util.List r2;
        java.util.HashSet r3, $r7;
        java.util.ArrayList r4, $r8;
        java.util.Iterator r5;
        android.view.inputmethod.InputMethodSubtype r6, $r9;
        boolean $z0, $z3;
        java.lang.Object $r10;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 := @parameter2: android.view.inputmethod.InputMethodInfo;

        r2 := @parameter3: java.util.List;

        if r1 != null goto label1;

        return r2;

     label1:
        $r7 = new java.util.HashSet;

        specialinvoke $r7.<java.util.HashSet: void <init>(java.util.Collection)>(r2);

        r3 = $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r4 = $r8;

        i1 = virtualinvoke r1.<android.view.inputmethod.InputMethodInfo: int getSubtypeCount()>();

        i2 = 0;

     label2:
        if i2 >= i1 goto label4;

        r6 = virtualinvoke r1.<android.view.inputmethod.InputMethodInfo: android.view.inputmethod.InputMethodSubtype getSubtypeAt(int)>(i2);

        $z3 = virtualinvoke r3.<java.util.HashSet: boolean contains(java.lang.Object)>(r6);

        if $z3 == 0 goto label3;

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

        virtualinvoke r3.<java.util.HashSet: boolean remove(java.lang.Object)>(r6);

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        r5 = virtualinvoke r3.<java.util.HashSet: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r10 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (android.view.inputmethod.InputMethodSubtype) $r10;

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

        goto label5;

     label6:
        return r4;
    }

    public boolean containsExtraValueKey(java.lang.String)
    {
        android.view.inputmethod.InputMethodSubtype r0;
        java.lang.String r1;
        java.util.HashMap $r2;
        boolean $z0;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<android.view.inputmethod.InputMethodSubtype: java.util.HashMap getExtraValueHashMap()>();

        $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public int describeContents()
    {
        android.view.inputmethod.InputMethodSubtype r0;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        android.view.inputmethod.InputMethodSubtype r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof android.view.inputmethod.InputMethodSubtype;

        if $z0 == 0 goto label6;

        r2 = (android.view.inputmethod.InputMethodSubtype) r1;

        $i0 = r2.<android.view.inputmethod.InputMethodSubtype: int mSubtypeId>;

        if $i0 != 0 goto label1;

        $i3 = r0.<android.view.inputmethod.InputMethodSubtype: int mSubtypeId>;

        if $i3 == 0 goto label4;

     label1:
        $i1 = virtualinvoke r2.<android.view.inputmethod.InputMethodSubtype: int hashCode()>();

        $i2 = virtualinvoke r0.<android.view.inputmethod.InputMethodSubtype: int hashCode()>();

        if $i1 != $i2 goto label3;

     label2:
        return 1;

     label3:
        return 0;

     label4:
        $i4 = virtualinvoke r2.<android.view.inputmethod.InputMethodSubtype: int hashCode()>();

        $i5 = virtualinvoke r0.<android.view.inputmethod.InputMethodSubtype: int hashCode()>();

        if $i4 != $i5 goto label5;

        $i6 = virtualinvoke r2.<android.view.inputmethod.InputMethodSubtype: int getNameResId()>();

        $i7 = virtualinvoke r0.<android.view.inputmethod.InputMethodSubtype: int getNameResId()>();

        if $i6 != $i7 goto label5;

        $r3 = virtualinvoke r2.<android.view.inputmethod.InputMethodSubtype: java.lang.String getMode()>();

        $r4 = virtualinvoke r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String getMode()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label5;

        $i8 = virtualinvoke r2.<android.view.inputmethod.InputMethodSubtype: int getIconResId()>();

        $i9 = virtualinvoke r0.<android.view.inputmethod.InputMethodSubtype: int getIconResId()>();

        if $i8 != $i9 goto label5;

        $r5 = virtualinvoke r2.<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()>();

        $r6 = virtualinvoke r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()>();

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z2 == 0 goto label5;

        $r8 = virtualinvoke r2.<android.view.inputmethod.InputMethodSubtype: java.lang.String getExtraValue()>();

        $r7 = virtualinvoke r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String getExtraValue()>();

        $z4 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z4 == 0 goto label5;

        $z3 = virtualinvoke r2.<android.view.inputmethod.InputMethodSubtype: boolean isAuxiliary()>();

        $z6 = virtualinvoke r0.<android.view.inputmethod.InputMethodSubtype: boolean isAuxiliary()>();

        if $z3 != $z6 goto label5;

        $z5 = virtualinvoke r2.<android.view.inputmethod.InputMethodSubtype: boolean isAsciiCapable()>();

        $z7 = virtualinvoke r0.<android.view.inputmethod.InputMethodSubtype: boolean isAsciiCapable()>();

        if $z5 == $z7 goto label2;

     label5:
        return 0;

     label6:
        return 0;
    }

    public java.lang.CharSequence getDisplayName(android.content.Context, java.lang.String, android.content.pm.ApplicationInfo)
    {
        android.view.inputmethod.InputMethodSubtype r0;
        android.content.Context r1;
        java.lang.String r2, r5, r7, r9, $r11, $r13, $r17, $r20;
        android.content.pm.ApplicationInfo r3;
        java.util.Locale r4;
        java.lang.CharSequence r6;
        java.util.IllegalFormatException r8, $r15;
        java.lang.Object[] r10;
        int $i0, $i1;
        android.content.pm.PackageManager $r12;
        boolean $z0, $z1;
        java.lang.StringBuilder $r14, $r16, $r18, $r19, $r21;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.pm.ApplicationInfo;

        $r11 = r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String mSubtypeLocale>;

        r4 = staticinvoke <android.view.inputmethod.InputMethodSubtype: java.util.Locale constructLocaleFromString(java.lang.String)>($r11);

        if r4 == null goto label03;

        r5 = virtualinvoke r4.<java.util.Locale: java.lang.String getDisplayName()>();

     label01:
        $i0 = r0.<android.view.inputmethod.InputMethodSubtype: int mSubtypeNameResId>;

        if $i0 != 0 goto label04;

     label02:
        return r5;

     label03:
        r5 = r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String mSubtypeLocale>;

        goto label01;

     label04:
        $r12 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $i1 = r0.<android.view.inputmethod.InputMethodSubtype: int mSubtypeNameResId>;

        r6 = virtualinvoke $r12.<android.content.pm.PackageManager: java.lang.CharSequence getText(java.lang.String,int,android.content.pm.ApplicationInfo)>(r2, $i1, r3);

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r6);

        if $z1 != 0 goto label02;

        $z0 = virtualinvoke r0.<android.view.inputmethod.InputMethodSubtype: boolean containsExtraValueKey(java.lang.String)>("UntranslatableReplacementStringInSubtypeName");

        if $z0 == 0 goto label10;

        r7 = virtualinvoke r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String getExtraValueOf(java.lang.String)>("UntranslatableReplacementStringInSubtypeName");

     label05:
        r9 = virtualinvoke r6.<java.lang.Object: java.lang.String toString()>();

        r10 = newarray (java.lang.Object)[1];

     label06:
        if r7 == null goto label08;

     label07:
        r10[0] = r7;

        $r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r9, r10);

        return $r13;

     label08:
        r7 = "";

        goto label07;

     label09:
        $r15 := @caughtexception;

        r8 = $r15;

        $r17 = <android.view.inputmethod.InputMethodSubtype: java.lang.String TAG>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found illegal format in subtype name(");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r17, $r20);

        return "";

     label10:
        r7 = r5;

        goto label05;

        catch java.util.IllegalFormatException from label05 to label06 with label09;
        catch java.util.IllegalFormatException from label07 to label08 with label09;
    }

    public java.lang.String getExtraValue()
    {
        android.view.inputmethod.InputMethodSubtype r0;
        java.lang.String $r1;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        $r1 = r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String mSubtypeExtraValue>;

        return $r1;
    }

    public java.lang.String getExtraValueOf(java.lang.String)
    {
        android.view.inputmethod.InputMethodSubtype r0;
        java.lang.String r1, $r4;
        java.util.HashMap $r2;
        java.lang.Object $r3;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<android.view.inputmethod.InputMethodSubtype: java.util.HashMap getExtraValueHashMap()>();

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public int getIconResId()
    {
        android.view.inputmethod.InputMethodSubtype r0;
        int $i0;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        $i0 = r0.<android.view.inputmethod.InputMethodSubtype: int mSubtypeIconResId>;

        return $i0;
    }

    public java.lang.String getLocale()
    {
        android.view.inputmethod.InputMethodSubtype r0;
        java.lang.String $r1;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        $r1 = r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String mSubtypeLocale>;

        return $r1;
    }

    public java.lang.String getMode()
    {
        android.view.inputmethod.InputMethodSubtype r0;
        java.lang.String $r1;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        $r1 = r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String mSubtypeMode>;

        return $r1;
    }

    public int getNameResId()
    {
        android.view.inputmethod.InputMethodSubtype r0;
        int $i0;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        $i0 = r0.<android.view.inputmethod.InputMethodSubtype: int mSubtypeNameResId>;

        return $i0;
    }

    public int hashCode()
    {
        android.view.inputmethod.InputMethodSubtype r0;
        int $i0;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        $i0 = r0.<android.view.inputmethod.InputMethodSubtype: int mSubtypeHashCode>;

        return $i0;
    }

    public boolean isAsciiCapable()
    {
        android.view.inputmethod.InputMethodSubtype r0;
        boolean $z0;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        $z0 = r0.<android.view.inputmethod.InputMethodSubtype: boolean mIsAsciiCapable>;

        return $z0;
    }

    public boolean isAuxiliary()
    {
        android.view.inputmethod.InputMethodSubtype r0;
        boolean $z0;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        $z0 = r0.<android.view.inputmethod.InputMethodSubtype: boolean mIsAuxiliary>;

        return $z0;
    }

    public boolean overridesImplicitlyEnabledSubtype()
    {
        android.view.inputmethod.InputMethodSubtype r0;
        boolean $z0;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        $z0 = r0.<android.view.inputmethod.InputMethodSubtype: boolean mOverridesImplicitlyEnabledSubtype>;

        return $z0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.view.inputmethod.InputMethodSubtype r0;
        android.os.Parcel r1;
        int i0, $i4, $i5, $i6, $i7;
        byte b1, b2, b3;
        java.lang.String $r2, $r3, $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: android.view.inputmethod.InputMethodSubtype;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        b1 = 1;

        $i4 = r0.<android.view.inputmethod.InputMethodSubtype: int mSubtypeNameResId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        $i5 = r0.<android.view.inputmethod.InputMethodSubtype: int mSubtypeIconResId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i5);

        $r2 = r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String mSubtypeLocale>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $r3 = r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String mSubtypeMode>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        $r4 = r0.<android.view.inputmethod.InputMethodSubtype: java.lang.String mSubtypeExtraValue>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r4);

        $z0 = r0.<android.view.inputmethod.InputMethodSubtype: boolean mIsAuxiliary>;

        if $z0 == 0 goto label4;

        b2 = 1;

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b2);

        $z1 = r0.<android.view.inputmethod.InputMethodSubtype: boolean mOverridesImplicitlyEnabledSubtype>;

        if $z1 == 0 goto label5;

        b3 = 1;

     label2:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b3);

        $i6 = r0.<android.view.inputmethod.InputMethodSubtype: int mSubtypeHashCode>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i6);

        $i7 = r0.<android.view.inputmethod.InputMethodSubtype: int mSubtypeId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i7);

        $z2 = r0.<android.view.inputmethod.InputMethodSubtype: boolean mIsAsciiCapable>;

        if $z2 == 0 goto label6;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        return;

     label4:
        b2 = 0;

        goto label1;

     label5:
        b3 = 0;

        goto label2;

     label6:
        b1 = 0;

        goto label3;
    }
}
