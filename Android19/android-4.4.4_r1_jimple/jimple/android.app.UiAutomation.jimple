public final class android.app.UiAutomation extends java.lang.Object
{
    private static final int CONNECTION_ID_UNDEFINED;
    private static final long CONNECT_TIMEOUT_MILLIS;
    private static final boolean DEBUG;
    private static final java.lang.String LOG_TAG;
    public static final int ROTATION_FREEZE_0;
    public static final int ROTATION_FREEZE_180;
    public static final int ROTATION_FREEZE_270;
    public static final int ROTATION_FREEZE_90;
    public static final int ROTATION_FREEZE_CURRENT;
    public static final int ROTATION_UNFREEZE;
    private final android.accessibilityservice.IAccessibilityServiceClient mClient;
    private int mConnectionId;
    private final java.util.ArrayList mEventQueue;
    private boolean mIsConnecting;
    private long mLastEventTimeMillis;
    private final java.lang.Object mLock;
    private android.app.UiAutomation$OnAccessibilityEventListener mOnAccessibilityEventListener;
    private final android.app.IUiAutomationConnection mUiAutomationConnection;
    private boolean mWaitingForEventDelivery;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <android.app.UiAutomation: int ROTATION_UNFREEZE> = -2;

        <android.app.UiAutomation: int ROTATION_FREEZE_CURRENT> = -1;

        <android.app.UiAutomation: int ROTATION_FREEZE_90> = 1;

        <android.app.UiAutomation: int ROTATION_FREEZE_270> = 3;

        <android.app.UiAutomation: int ROTATION_FREEZE_180> = 2;

        <android.app.UiAutomation: int ROTATION_FREEZE_0> = 0;

        <android.app.UiAutomation: boolean DEBUG> = 0;

        <android.app.UiAutomation: long CONNECT_TIMEOUT_MILLIS> = 5000L;

        <android.app.UiAutomation: int CONNECTION_ID_UNDEFINED> = -1;

        $r0 = class "android/app/UiAutomation";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.app.UiAutomation: java.lang.String LOG_TAG> = $r1;

        return;
    }

    public void <init>(android.os.Looper, android.app.IUiAutomationConnection)
    {
        android.app.UiAutomation r0;
        android.os.Looper r1;
        android.app.IUiAutomationConnection r2;
        java.lang.Object $r3;
        java.util.ArrayList $r4;
        android.app.UiAutomation$IAccessibilityServiceClientImpl $r5;
        java.lang.IllegalArgumentException $r6, $r7;

        r0 := @this: android.app.UiAutomation;

        r1 := @parameter0: android.os.Looper;

        r2 := @parameter1: android.app.IUiAutomationConnection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<android.app.UiAutomation: java.lang.Object mLock> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.app.UiAutomation: java.util.ArrayList mEventQueue> = $r4;

        r0.<android.app.UiAutomation: int mConnectionId> = -1;

        if r1 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Looper cannot be null!");

        throw $r7;

     label1:
        if r2 != null goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Connection cannot be null!");

        throw $r6;

     label2:
        r0.<android.app.UiAutomation: android.app.IUiAutomationConnection mUiAutomationConnection> = r2;

        $r5 = new android.app.UiAutomation$IAccessibilityServiceClientImpl;

        specialinvoke $r5.<android.app.UiAutomation$IAccessibilityServiceClientImpl: void <init>(android.app.UiAutomation,android.os.Looper)>(r0, r1);

        r0.<android.app.UiAutomation: android.accessibilityservice.IAccessibilityServiceClient mClient> = $r5;

        return;
    }

    static java.lang.Object access$000(android.app.UiAutomation)
    {
        android.app.UiAutomation r0;
        java.lang.Object $r1;

        r0 := @parameter0: android.app.UiAutomation;

        $r1 = r0.<android.app.UiAutomation: java.lang.Object mLock>;

        return $r1;
    }

    static int access$102(android.app.UiAutomation, int)
    {
        android.app.UiAutomation r0;
        int i0;

        r0 := @parameter0: android.app.UiAutomation;

        i0 := @parameter1: int;

        r0.<android.app.UiAutomation: int mConnectionId> = i0;

        return i0;
    }

    static long access$202(android.app.UiAutomation, long)
    {
        android.app.UiAutomation r0;
        long l0;

        r0 := @parameter0: android.app.UiAutomation;

        l0 := @parameter1: long;

        r0.<android.app.UiAutomation: long mLastEventTimeMillis> = l0;

        return l0;
    }

    static boolean access$300(android.app.UiAutomation)
    {
        android.app.UiAutomation r0;
        boolean $z0;

        r0 := @parameter0: android.app.UiAutomation;

        $z0 = r0.<android.app.UiAutomation: boolean mWaitingForEventDelivery>;

        return $z0;
    }

    static java.util.ArrayList access$400(android.app.UiAutomation)
    {
        android.app.UiAutomation r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: android.app.UiAutomation;

        $r1 = r0.<android.app.UiAutomation: java.util.ArrayList mEventQueue>;

        return $r1;
    }

    static android.app.UiAutomation$OnAccessibilityEventListener access$500(android.app.UiAutomation)
    {
        android.app.UiAutomation r0;
        android.app.UiAutomation$OnAccessibilityEventListener $r1;

        r0 := @parameter0: android.app.UiAutomation;

        $r1 = r0.<android.app.UiAutomation: android.app.UiAutomation$OnAccessibilityEventListener mOnAccessibilityEventListener>;

        return $r1;
    }

    private static float getDegreesForRotation(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label1;
        };

     label1:
        return 0.0F;

     label2:
        return 270.0F;

     label3:
        return 180.0F;

     label4:
        return 90.0F;
    }

    private boolean isConnectedLocked()
    {
        android.app.UiAutomation r0;
        int $i0;

        r0 := @this: android.app.UiAutomation;

        $i0 = r0.<android.app.UiAutomation: int mConnectionId>;

        if $i0 == -1 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void throwIfConnectedLocked()
    {
        android.app.UiAutomation r0;
        int $i0;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.app.UiAutomation;

        $i0 = r0.<android.app.UiAutomation: int mConnectionId>;

        if $i0 == -1 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("UiAutomation not connected!");

        throw $r1;

     label1:
        return;
    }

    private void throwIfNotConnectedLocked()
    {
        android.app.UiAutomation r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.app.UiAutomation;

        $z0 = specialinvoke r0.<android.app.UiAutomation: boolean isConnectedLocked()>();

        if $z0 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("UiAutomation not connected!");

        throw $r1;

     label1:
        return;
    }

    public void connect()
    {
        android.app.UiAutomation r0;
        java.lang.Object r1, r4, $r10;
        java.lang.Throwable r2, r5, r6, $r12, $r13, $r15;
        android.os.RemoteException r3, $r16;
        long l0, l1, $l2, $l3;
        boolean z0, $z1;
        android.app.IUiAutomationConnection $r8;
        android.accessibilityservice.IAccessibilityServiceClient $r9;
        byte $b4;
        java.lang.RuntimeException $r11, $r17;
        java.lang.InterruptedException $r14;

        r0 := @this: android.app.UiAutomation;

        r1 = r0.<android.app.UiAutomation: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        specialinvoke r0.<android.app.UiAutomation: void throwIfConnectedLocked()>();

        $z1 = r0.<android.app.UiAutomation: boolean mIsConnecting>;

        if $z1 == 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        r0.<android.app.UiAutomation: boolean mIsConnecting> = 1;

        exitmonitor r1;

     label04:
        $r8 = r0.<android.app.UiAutomation: android.app.IUiAutomationConnection mUiAutomationConnection>;

        $r9 = r0.<android.app.UiAutomation: android.accessibilityservice.IAccessibilityServiceClient mClient>;

        interfaceinvoke $r8.<android.app.IUiAutomationConnection: void connect(android.accessibilityservice.IAccessibilityServiceClient)>($r9);

     label05:
        r4 = r0.<android.app.UiAutomation: java.lang.Object mLock>;

        entermonitor r4;

     label06:
        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

     label07:
        z0 = specialinvoke r0.<android.app.UiAutomation: boolean isConnectedLocked()>();

     label08:
        if z0 == 0 goto label18;

     label09:
        r0.<android.app.UiAutomation: boolean mIsConnecting> = 0;

        exitmonitor r4;

     label10:
        return;

     label11:
        $r13 := @caughtexception;

        r5 = $r13;

     label12:
        exitmonitor r4;

     label13:
        throw r5;

     label14:
        $r15 := @caughtexception;

        r2 = $r15;

     label15:
        exitmonitor r1;

     label16:
        throw r2;

     label17:
        $r16 := @caughtexception;

        r3 = $r16;

        $r17 = new java.lang.RuntimeException;

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Error while connecting UiAutomation", r3);

        throw $r17;

     label18:
        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l2 = $l3 - l0;

        l1 = 5000L - $l2;

     label19:
        $b4 = l1 cmp 0L;

        if $b4 > 0 goto label23;

     label20:
        $r11 = new java.lang.RuntimeException;

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>("Error while connecting UiAutomation");

        throw $r11;

     label21:
        $r12 := @caughtexception;

        r6 = $r12;

     label22:
        r0.<android.app.UiAutomation: boolean mIsConnecting> = 0;

        throw r6;

     label23:
        $r10 = r0.<android.app.UiAutomation: java.lang.Object mLock>;

        virtualinvoke $r10.<java.lang.Object: void wait(long)>(l1);

     label24:
        goto label07;

     label25:
        $r14 := @caughtexception;

        goto label07;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch android.os.RemoteException from label04 to label05 with label17;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label07 to label08 with label21;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.Throwable from label15 to label16 with label14;
        catch java.lang.Throwable from label18 to label19 with label21;
        catch java.lang.Throwable from label20 to label21 with label21;
        catch java.lang.Throwable from label22 to label23 with label11;
        catch java.lang.InterruptedException from label23 to label24 with label25;
        catch java.lang.Throwable from label23 to label24 with label21;
    }

    public void disconnect()
    {
        android.app.UiAutomation r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r8;
        android.os.RemoteException r3, $r6;
        boolean $z0;
        android.app.IUiAutomationConnection $r4;
        java.lang.IllegalStateException $r5;
        java.lang.RuntimeException $r7;

        r0 := @this: android.app.UiAutomation;

        r1 = r0.<android.app.UiAutomation: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z0 = r0.<android.app.UiAutomation: boolean mIsConnecting>;

        if $z0 == 0 goto label5;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot call disconnect() while connecting!");

        throw $r5;

     label2:
        $r8 := @caughtexception;

        r2 = $r8;

     label3:
        exitmonitor r1;

     label4:
        throw r2;

     label5:
        specialinvoke r0.<android.app.UiAutomation: void throwIfNotConnectedLocked()>();

        r0.<android.app.UiAutomation: int mConnectionId> = -1;

        exitmonitor r1;

     label6:
        $r4 = r0.<android.app.UiAutomation: android.app.IUiAutomationConnection mUiAutomationConnection>;

        interfaceinvoke $r4.<android.app.IUiAutomationConnection: void disconnect()>();

     label7:
        return;

     label8:
        $r6 := @caughtexception;

        r3 = $r6;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Error while disconnecting UiAutomation", r3);

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.Throwable from label5 to label6 with label2;
        catch android.os.RemoteException from label6 to label7 with label8;
    }

    public android.view.accessibility.AccessibilityEvent executeAndWaitForEvent(java.lang.Runnable, android.app.UiAutomation$AccessibilityEventFilter, long) throws java.util.concurrent.TimeoutException
    {
        android.app.UiAutomation r0;
        java.lang.Runnable r1;
        android.app.UiAutomation$AccessibilityEventFilter r2;
        long l0, l1, l2, l3, $l4, $l6, $l7;
        java.lang.Object r3, r5, $r13, $r18, $r22, $r24;
        java.lang.Throwable r4, r6, r7, $r25, $r26, $r28;
        android.view.accessibility.AccessibilityEvent r8;
        boolean z0, $z1;
        java.util.ArrayList $r10, $r11, $r20, $r21, $r23;
        byte $b5, $b8;
        java.util.concurrent.TimeoutException $r12;
        java.lang.StringBuilder $r14, $r15, $r16, $r17;
        java.lang.String $r19;
        java.lang.InterruptedException $r27;

        r0 := @this: android.app.UiAutomation;

        r1 := @parameter0: java.lang.Runnable;

        r2 := @parameter1: android.app.UiAutomation$AccessibilityEventFilter;

        l0 := @parameter2: long;

        r3 = r0.<android.app.UiAutomation: java.lang.Object mLock>;

        entermonitor r3;

     label01:
        specialinvoke r0.<android.app.UiAutomation: void throwIfNotConnectedLocked()>();

        $r10 = r0.<android.app.UiAutomation: java.util.ArrayList mEventQueue>;

        virtualinvoke $r10.<java.util.ArrayList: void clear()>();

        r0.<android.app.UiAutomation: boolean mWaitingForEventDelivery> = 1;

        exitmonitor r3;

     label02:
        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        interfaceinvoke r1.<java.lang.Runnable: void run()>();

        r5 = r0.<android.app.UiAutomation: java.lang.Object mLock>;

        entermonitor r5;

     label03:
        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

     label04:
        $r11 = r0.<android.app.UiAutomation: java.util.ArrayList mEventQueue>;

        $z1 = virtualinvoke $r11.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 != 0 goto label18;

        $r20 = r0.<android.app.UiAutomation: java.util.ArrayList mEventQueue>;

        $r18 = virtualinvoke $r20.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        r8 = (android.view.accessibility.AccessibilityEvent) $r18;

        $l7 = virtualinvoke r8.<android.view.accessibility.AccessibilityEvent: long getEventTime()>();

        $b8 = $l7 cmp l1;

        if $b8 < 0 goto label04;

        z0 = interfaceinvoke r2.<android.app.UiAutomation$AccessibilityEventFilter: boolean accept(android.view.accessibility.AccessibilityEvent)>(r8);

     label05:
        if z0 == 0 goto label11;

     label06:
        r0.<android.app.UiAutomation: boolean mWaitingForEventDelivery> = 0;

        $r21 = r0.<android.app.UiAutomation: java.util.ArrayList mEventQueue>;

        virtualinvoke $r21.<java.util.ArrayList: void clear()>();

        $r22 = r0.<android.app.UiAutomation: java.lang.Object mLock>;

        virtualinvoke $r22.<java.lang.Object: void notifyAll()>();

        exitmonitor r5;

     label07:
        return r8;

     label08:
        $r28 := @caughtexception;

        r4 = $r28;

     label09:
        exitmonitor r3;

     label10:
        throw r4;

     label11:
        virtualinvoke r8.<android.view.accessibility.AccessibilityEvent: void recycle()>();

     label12:
        goto label04;

     label13:
        $r25 := @caughtexception;

        r6 = $r25;

     label14:
        r0.<android.app.UiAutomation: boolean mWaitingForEventDelivery> = 0;

        $r23 = r0.<android.app.UiAutomation: java.util.ArrayList mEventQueue>;

        virtualinvoke $r23.<java.util.ArrayList: void clear()>();

        $r24 = r0.<android.app.UiAutomation: java.lang.Object mLock>;

        virtualinvoke $r24.<java.lang.Object: void notifyAll()>();

        throw r6;

     label15:
        $r26 := @caughtexception;

        r7 = $r26;

     label16:
        exitmonitor r5;

     label17:
        throw r7;

     label18:
        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l6 = $l4 - l2;

        l3 = l0 - $l6;

     label19:
        $b5 = l3 cmp 0L;

        if $b5 > 0 goto label21;

     label20:
        $r12 = new java.util.concurrent.TimeoutException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected event not received within: ");

        $r14 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms.");

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.util.concurrent.TimeoutException: void <init>(java.lang.String)>($r19);

        throw $r12;

     label21:
        $r13 = r0.<android.app.UiAutomation: java.lang.Object mLock>;

        virtualinvoke $r13.<java.lang.Object: void wait(long)>(l3);

     label22:
        goto label04;

     label23:
        $r27 := @caughtexception;

        goto label04;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
        catch java.lang.Throwable from label18 to label19 with label13;
        catch java.lang.Throwable from label20 to label21 with label13;
        catch java.lang.InterruptedException from label21 to label22 with label23;
        catch java.lang.Throwable from label21 to label22 with label13;
    }

    public int getConnectionId()
    {
        android.app.UiAutomation r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r3;
        int i0;

        r0 := @this: android.app.UiAutomation;

        r1 = r0.<android.app.UiAutomation: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<android.app.UiAutomation: void throwIfNotConnectedLocked()>();

        i0 = r0.<android.app.UiAutomation: int mConnectionId>;

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.view.accessibility.AccessibilityNodeInfo getRootInActiveWindow()
    {
        android.app.UiAutomation r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r5;
        int i0;
        android.view.accessibility.AccessibilityInteractionClient $r3;
        android.view.accessibility.AccessibilityNodeInfo $r4;

        r0 := @this: android.app.UiAutomation;

        r1 = r0.<android.app.UiAutomation: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<android.app.UiAutomation: void throwIfNotConnectedLocked()>();

        i0 = r0.<android.app.UiAutomation: int mConnectionId>;

        exitmonitor r1;

     label2:
        $r3 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        $r4 = virtualinvoke $r3.<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo getRootInActiveWindow(int)>(i0);

        return $r4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public final android.accessibilityservice.AccessibilityServiceInfo getServiceInfo()
    {
        android.app.UiAutomation r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r7;
        android.accessibilityservice.IAccessibilityServiceConnection r3;
        android.os.RemoteException r4, $r8;
        android.accessibilityservice.AccessibilityServiceInfo r5;
        android.view.accessibility.AccessibilityInteractionClient $r6;
        int $i0;
        java.lang.String $r9;

        r0 := @this: android.app.UiAutomation;

        r1 = r0.<android.app.UiAutomation: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<android.app.UiAutomation: void throwIfNotConnectedLocked()>();

        $r6 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        $i0 = r0.<android.app.UiAutomation: int mConnectionId>;

        r3 = virtualinvoke $r6.<android.view.accessibility.AccessibilityInteractionClient: android.accessibilityservice.IAccessibilityServiceConnection getConnection(int)>($i0);

        exitmonitor r1;

     label2:
        if r3 == null goto label9;

     label3:
        r5 = interfaceinvoke r3.<android.accessibilityservice.IAccessibilityServiceConnection: android.accessibilityservice.AccessibilityServiceInfo getServiceInfo()>();

     label4:
        return r5;

     label5:
        $r7 := @caughtexception;

        r2 = $r7;

     label6:
        exitmonitor r1;

     label7:
        throw r2;

     label8:
        $r8 := @caughtexception;

        r4 = $r8;

        $r9 = <android.app.UiAutomation: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r9, "Error while getting AccessibilityServiceInfo", r4);

     label9:
        return null;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label8;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public boolean injectInputEvent(android.view.InputEvent, boolean)
    {
        android.app.UiAutomation r0;
        android.view.InputEvent r1;
        boolean z0, z1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r6;
        android.os.RemoteException r4, $r7;
        android.app.IUiAutomationConnection $r5;
        java.lang.String $r8;

        r0 := @this: android.app.UiAutomation;

        r1 := @parameter0: android.view.InputEvent;

        z0 := @parameter1: boolean;

        r2 = r0.<android.app.UiAutomation: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        specialinvoke r0.<android.app.UiAutomation: void throwIfNotConnectedLocked()>();

        exitmonitor r2;

     label2:
        $r5 = r0.<android.app.UiAutomation: android.app.IUiAutomationConnection mUiAutomationConnection>;

        z1 = interfaceinvoke $r5.<android.app.IUiAutomationConnection: boolean injectInputEvent(android.view.InputEvent,boolean)>(r1, z0);

     label3:
        return z1;

     label4:
        $r6 := @caughtexception;

        r3 = $r6;

     label5:
        exitmonitor r2;

     label6:
        throw r3;

     label7:
        $r7 := @caughtexception;

        r4 = $r7;

        $r8 = <android.app.UiAutomation: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r8, "Error while injecting input event!", r4);

        return 0;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch android.os.RemoteException from label2 to label3 with label7;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public final boolean performGlobalAction(int)
    {
        android.app.UiAutomation r0;
        int i0, $i1;
        java.lang.Object r1;
        java.lang.Throwable r2, $r6;
        android.accessibilityservice.IAccessibilityServiceConnection r3;
        android.os.RemoteException r4, $r8;
        boolean z0;
        android.view.accessibility.AccessibilityInteractionClient $r5;
        java.lang.String $r7;

        r0 := @this: android.app.UiAutomation;

        i0 := @parameter0: int;

        r1 = r0.<android.app.UiAutomation: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<android.app.UiAutomation: void throwIfNotConnectedLocked()>();

        $r5 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        $i1 = r0.<android.app.UiAutomation: int mConnectionId>;

        r3 = virtualinvoke $r5.<android.view.accessibility.AccessibilityInteractionClient: android.accessibilityservice.IAccessibilityServiceConnection getConnection(int)>($i1);

        exitmonitor r1;

     label2:
        if r3 == null goto label9;

     label3:
        z0 = interfaceinvoke r3.<android.accessibilityservice.IAccessibilityServiceConnection: boolean performGlobalAction(int)>(i0);

     label4:
        return z0;

     label5:
        $r6 := @caughtexception;

        r2 = $r6;

     label6:
        exitmonitor r1;

     label7:
        throw r2;

     label8:
        $r8 := @caughtexception;

        r4 = $r8;

        $r7 = <android.app.UiAutomation: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r7, "Error while calling performGlobalAction", r4);

     label9:
        return 0;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label8;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void setOnAccessibilityEventListener(android.app.UiAutomation$OnAccessibilityEventListener)
    {
        android.app.UiAutomation r0;
        android.app.UiAutomation$OnAccessibilityEventListener r1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r4;

        r0 := @this: android.app.UiAutomation;

        r1 := @parameter0: android.app.UiAutomation$OnAccessibilityEventListener;

        r2 = r0.<android.app.UiAutomation: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        r0.<android.app.UiAutomation: android.app.UiAutomation$OnAccessibilityEventListener mOnAccessibilityEventListener> = r1;

        exitmonitor r2;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean setRotation(int)
    {
        android.app.UiAutomation r0;
        int i0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r8;
        android.os.RemoteException r3, $r6;
        java.lang.IllegalArgumentException $r4;
        android.app.IUiAutomationConnection $r5;
        java.lang.String $r7;

        r0 := @this: android.app.UiAutomation;

        i0 := @parameter0: int;

        r1 = r0.<android.app.UiAutomation: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<android.app.UiAutomation: void throwIfNotConnectedLocked()>();

        exitmonitor r1;

     label2:
        tableswitch(i0)
        {
            case -2: goto label7;
            case -1: goto label7;
            case 0: goto label7;
            case 1: goto label7;
            case 2: goto label7;
            case 3: goto label7;
            default: goto label3;
        };

     label3:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid rotation.");

        throw $r4;

     label4:
        $r8 := @caughtexception;

        r2 = $r8;

     label5:
        exitmonitor r1;

     label6:
        throw r2;

     label7:
        $r5 = r0.<android.app.UiAutomation: android.app.IUiAutomationConnection mUiAutomationConnection>;

        interfaceinvoke $r5.<android.app.IUiAutomationConnection: boolean setRotation(int)>(i0);

     label8:
        return 1;

     label9:
        $r6 := @caughtexception;

        r3 = $r6;

        $r7 = <android.app.UiAutomation: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r7, "Error while setting rotation!", r3);

        return 0;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch android.os.RemoteException from label7 to label8 with label9;
    }

    public void setRunAsMonkey(boolean)
    {
        android.app.UiAutomation r0;
        boolean z0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r5;
        android.os.RemoteException r3, $r6;
        android.app.IActivityManager $r4;
        java.lang.String $r7;

        r0 := @this: android.app.UiAutomation;

        z0 := @parameter0: boolean;

        r1 = r0.<android.app.UiAutomation: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<android.app.UiAutomation: void throwIfNotConnectedLocked()>();

        exitmonitor r1;

     label2:
        $r4 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        interfaceinvoke $r4.<android.app.IActivityManager: void setUserIsMonkey(boolean)>(z0);

     label3:
        return;

     label4:
        $r5 := @caughtexception;

        r2 = $r5;

     label5:
        exitmonitor r1;

     label6:
        throw r2;

     label7:
        $r6 := @caughtexception;

        r3 = $r6;

        $r7 = <android.app.UiAutomation: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r7, "Error while setting run as monkey!", r3);

        return;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch android.os.RemoteException from label2 to label3 with label7;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public final void setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)
    {
        android.app.UiAutomation r0;
        android.accessibilityservice.AccessibilityServiceInfo r1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r10;
        android.accessibilityservice.IAccessibilityServiceConnection r4;
        android.os.RemoteException r5, $r8;
        android.view.accessibility.AccessibilityInteractionClient $r6, $r7;
        int $i0;
        java.lang.String $r9;

        r0 := @this: android.app.UiAutomation;

        r1 := @parameter0: android.accessibilityservice.AccessibilityServiceInfo;

        r2 = r0.<android.app.UiAutomation: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        specialinvoke r0.<android.app.UiAutomation: void throwIfNotConnectedLocked()>();

        $r6 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        virtualinvoke $r6.<android.view.accessibility.AccessibilityInteractionClient: void clearCache()>();

        $r7 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        $i0 = r0.<android.app.UiAutomation: int mConnectionId>;

        r4 = virtualinvoke $r7.<android.view.accessibility.AccessibilityInteractionClient: android.accessibilityservice.IAccessibilityServiceConnection getConnection(int)>($i0);

        exitmonitor r2;

     label2:
        if r4 == null goto label4;

     label3:
        interfaceinvoke r4.<android.accessibilityservice.IAccessibilityServiceConnection: void setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)>(r1);

     label4:
        return;

     label5:
        $r10 := @caughtexception;

        r3 = $r10;

     label6:
        exitmonitor r2;

     label7:
        throw r3;

     label8:
        $r8 := @caughtexception;

        r5 = $r8;

        $r9 = <android.app.UiAutomation: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r9, "Error while setting AccessibilityServiceInfo", r5);

        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label8;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public android.graphics.Bitmap takeScreenshot()
    {
        android.app.UiAutomation r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r21;
        android.view.Display r3;
        android.graphics.Point r4, $r11;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        android.os.RemoteException r5, $r20;
        android.graphics.Bitmap r6, r7, r8;
        android.graphics.Canvas r9, $r19;
        android.hardware.display.DisplayManagerGlobal $r10;
        java.lang.StringBuilder $r12, $r14, $r15;
        java.lang.IllegalArgumentException $r13;
        java.lang.String $r16, $r22;
        android.app.IUiAutomationConnection $r17;
        android.graphics.Bitmap$Config $r18;

        r0 := @this: android.app.UiAutomation;

        r1 = r0.<android.app.UiAutomation: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        specialinvoke r0.<android.app.UiAutomation: void throwIfNotConnectedLocked()>();

        exitmonitor r1;

     label02:
        $r10 = staticinvoke <android.hardware.display.DisplayManagerGlobal: android.hardware.display.DisplayManagerGlobal getInstance()>();

        r3 = virtualinvoke $r10.<android.hardware.display.DisplayManagerGlobal: android.view.Display getRealDisplay(int)>(0);

        $r11 = new android.graphics.Point;

        specialinvoke $r11.<android.graphics.Point: void <init>()>();

        r4 = $r11;

        virtualinvoke r3.<android.view.Display: void getRealSize(android.graphics.Point)>(r4);

        i0 = r4.<android.graphics.Point: int x>;

        i1 = r4.<android.graphics.Point: int y>;

        i2 = virtualinvoke r3.<android.view.Display: int getRotation()>();

        tableswitch(i2)
        {
            case 0: goto label07;
            case 1: goto label10;
            case 2: goto label11;
            case 3: goto label12;
            default: goto label03;
        };

     label03:
        $r13 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid rotation: ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r13;

     label04:
        $r21 := @caughtexception;

        r2 = $r21;

     label05:
        exitmonitor r1;

     label06:
        throw r2;

     label07:
        f0 = (float) i0;

        f1 = (float) i1;

     label08:
        $r17 = r0.<android.app.UiAutomation: android.app.IUiAutomationConnection mUiAutomationConnection>;

        $i4 = (int) f0;

        $i3 = (int) f1;

        r6 = interfaceinvoke $r17.<android.app.IUiAutomationConnection: android.graphics.Bitmap takeScreenshot(int,int)>($i4, $i3);

     label09:
        r7 = r6;

        if r7 != null goto label14;

        return null;

     label10:
        f0 = (float) i1;

        f1 = (float) i0;

        goto label08;

     label11:
        f0 = (float) i0;

        f1 = (float) i1;

        goto label08;

     label12:
        f0 = (float) i1;

        f1 = (float) i0;

        goto label08;

     label13:
        $r20 := @caughtexception;

        r5 = $r20;

        $r22 = <android.app.UiAutomation: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r22, "Error while taking screnshot!", r5);

        return null;

     label14:
        if i2 == 0 goto label15;

        $r18 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r8 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i0, i1, $r18);

        $r19 = new android.graphics.Canvas;

        specialinvoke $r19.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r8);

        r9 = $r19;

        $i5 = virtualinvoke r8.<android.graphics.Bitmap: int getWidth()>();

        $i6 = $i5 / 2;

        $f3 = (float) $i6;

        $i8 = virtualinvoke r8.<android.graphics.Bitmap: int getHeight()>();

        $i7 = $i8 / 2;

        $f2 = (float) $i7;

        virtualinvoke r9.<android.graphics.Canvas: void translate(float,float)>($f3, $f2);

        $f6 = staticinvoke <android.app.UiAutomation: float getDegreesForRotation(int)>(i2);

        virtualinvoke r9.<android.graphics.Canvas: void rotate(float)>($f6);

        $f7 = neg f0;

        $f8 = $f7 / 2.0F;

        $f4 = neg f1;

        $f5 = $f4 / 2.0F;

        virtualinvoke r9.<android.graphics.Canvas: void translate(float,float)>($f8, $f5);

        virtualinvoke r9.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>(r7, 0.0F, 0.0F, null);

        virtualinvoke r9.<android.graphics.Canvas: void setBitmap(android.graphics.Bitmap)>(null);

        r7 = r8;

     label15:
        virtualinvoke r7.<android.graphics.Bitmap: void setHasAlpha(boolean)>(0);

        return r7;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label05 to label06 with label04;
        catch android.os.RemoteException from label08 to label09 with label13;
    }

    public void waitForIdle(long, long) throws java.util.concurrent.TimeoutException
    {
        android.app.UiAutomation r0;
        long l0, l1, l2, l3, l4, $l6, $l7, $l9, $l10, $l11;
        java.lang.Object r1, $r4;
        java.lang.Throwable r2, $r11;
        byte $b5, $b8, $b12;
        java.util.concurrent.TimeoutException $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r12;
        java.lang.InterruptedException $r10;
        java.lang.String $r13;

        r0 := @this: android.app.UiAutomation;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r1 = r0.<android.app.UiAutomation: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        specialinvoke r0.<android.app.UiAutomation: void throwIfNotConnectedLocked()>();

        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l6 = r0.<android.app.UiAutomation: long mLastEventTimeMillis>;

        $b5 = $l6 cmp 0L;

        if $b5 > 0 goto label02;

        r0.<android.app.UiAutomation: long mLastEventTimeMillis> = l2;

     label02:
        l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

     label03:
        $l7 = l3 - l2;

        $l9 = l1 - $l7;

        $b8 = $l9 cmp 0L;

        if $b8 > 0 goto label08;

     label04:
        $r5 = new java.util.concurrent.TimeoutException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No idle state with idle timeout: ");

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" within global timeout: ");

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.util.concurrent.TimeoutException: void <init>(java.lang.String)>($r13);

        throw $r5;

     label05:
        $r11 := @caughtexception;

        r2 = $r11;

     label06:
        exitmonitor r1;

     label07:
        throw r2;

     label08:
        $l11 = r0.<android.app.UiAutomation: long mLastEventTimeMillis>;

        $l10 = l3 - $l11;

        l4 = l0 - $l10;

     label09:
        $b12 = l4 cmp 0L;

        if $b12 > 0 goto label12;

     label10:
        exitmonitor r1;

     label11:
        return;

     label12:
        $r4 = r0.<android.app.UiAutomation: java.lang.Object mLock>;

        virtualinvoke $r4.<java.lang.Object: void wait(long)>(l4);

     label13:
        goto label02;

     label14:
        $r10 := @caughtexception;

        goto label02;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.lang.Throwable from label04 to label05 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Throwable from label08 to label09 with label05;
        catch java.lang.Throwable from label10 to label11 with label05;
        catch java.lang.InterruptedException from label12 to label13 with label14;
        catch java.lang.Throwable from label12 to label13 with label05;
    }
}
