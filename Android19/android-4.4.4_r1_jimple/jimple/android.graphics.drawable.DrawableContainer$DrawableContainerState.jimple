public abstract class android.graphics.drawable.DrawableContainer$DrawableContainerState extends android.graphics.drawable.Drawable$ConstantState
{
    boolean mAutoMirrored;
    boolean mCanConstantState;
    int mChangingConfigurations;
    boolean mCheckedConstantState;
    boolean mCheckedOpacity;
    boolean mCheckedStateful;
    int mChildrenChangingConfigurations;
    boolean mComputedConstantSize;
    int mConstantHeight;
    int mConstantMinimumHeight;
    int mConstantMinimumWidth;
    android.graphics.Rect mConstantPadding;
    boolean mConstantSize;
    int mConstantWidth;
    boolean mDither;
    android.util.SparseArray mDrawableFutures;
    android.graphics.drawable.Drawable[] mDrawables;
    int mEnterFadeDuration;
    int mExitFadeDuration;
    int mLayoutDirection;
    boolean mMutated;
    int mNumChildren;
    int mOpacity;
    final android.graphics.drawable.DrawableContainer mOwner;
    boolean mPaddingChecked;
    final android.content.res.Resources mRes;
    boolean mStateful;
    boolean mVariablePadding;

    void <init>(android.graphics.drawable.DrawableContainer$DrawableContainerState, android.graphics.drawable.DrawableContainer, android.content.res.Resources)
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0, r1;
        android.graphics.drawable.DrawableContainer r2;
        android.content.res.Resources r3;
        android.graphics.drawable.Drawable[] r4, $r6, $r8;
        android.util.SparseArray r5, $r9, $r11, $r12;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        android.graphics.Rect $r7;
        android.graphics.drawable.Drawable $r10, $r14;
        android.graphics.drawable.DrawableContainer$DrawableContainerState$ConstantStateFuture $r13;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        r1 := @parameter0: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        r2 := @parameter1: android.graphics.drawable.DrawableContainer;

        r3 := @parameter2: android.content.res.Resources;

        specialinvoke r0.<android.graphics.drawable.Drawable$ConstantState: void <init>()>();

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mDither> = 1;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.DrawableContainer mOwner> = r2;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.content.res.Resources mRes> = r3;

        if r1 == null goto label5;

        $i2 = r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mChangingConfigurations>;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mChangingConfigurations> = $i2;

        $i3 = r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mChildrenChangingConfigurations>;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mChildrenChangingConfigurations> = $i3;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantState> = 1;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCanConstantState> = 1;

        $z0 = r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mVariablePadding>;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mVariablePadding> = $z0;

        $z1 = r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mConstantSize>;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mConstantSize> = $z1;

        $z2 = r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mDither>;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mDither> = $z2;

        $z3 = r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mMutated>;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mMutated> = $z3;

        $i4 = r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mLayoutDirection>;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mLayoutDirection> = $i4;

        $i6 = r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mEnterFadeDuration>;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mEnterFadeDuration> = $i6;

        $i5 = r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mExitFadeDuration>;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mExitFadeDuration> = $i5;

        $z4 = r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mAutoMirrored>;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mAutoMirrored> = $z4;

        $r7 = virtualinvoke r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect getConstantPadding()>();

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect mConstantPadding> = $r7;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mPaddingChecked> = 1;

        $i8 = virtualinvoke r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantWidth()>();

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantWidth> = $i8;

        $i7 = virtualinvoke r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantHeight()>();

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantHeight> = $i7;

        $i10 = virtualinvoke r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantMinimumWidth()>();

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumWidth> = $i10;

        $i9 = virtualinvoke r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantMinimumHeight()>();

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumHeight> = $i9;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mComputedConstantSize> = 1;

        $i11 = virtualinvoke r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getOpacity()>();

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mOpacity> = $i11;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedOpacity> = 1;

        $z5 = virtualinvoke r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean isStateful()>();

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mStateful> = $z5;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedStateful> = 1;

        r4 = r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        $i12 = lengthof r4;

        $r8 = newarray (android.graphics.drawable.Drawable)[$i12];

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables> = $r8;

        $i13 = r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren> = $i13;

        r5 = r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures>;

        if r5 == null goto label4;

        $r12 = virtualinvoke r5.<android.util.SparseArray: android.util.SparseArray clone()>();

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures> = $r12;

     label1:
        i0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        i1 = 0;

     label2:
        if i1 >= i0 goto label6;

        $r10 = r4[i1];

        if $r10 == null goto label3;

        $r11 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures>;

        $r13 = new android.graphics.drawable.DrawableContainer$DrawableContainerState$ConstantStateFuture;

        $r14 = r4[i1];

        specialinvoke $r13.<android.graphics.drawable.DrawableContainer$DrawableContainerState$ConstantStateFuture: void <init>(android.graphics.drawable.Drawable,android.graphics.drawable.DrawableContainer$1)>($r14, null);

        virtualinvoke $r11.<android.util.SparseArray: void put(int,java.lang.Object)>(i1, $r13);

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        $r9 = new android.util.SparseArray;

        $i14 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        specialinvoke $r9.<android.util.SparseArray: void <init>(int)>($i14);

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures> = $r9;

        goto label1;

     label5:
        $r6 = newarray (android.graphics.drawable.Drawable)[10];

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables> = $r6;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren> = 0;

     label6:
        return;
    }

    private final void createAllFutures()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int i0, i1, i2;
        android.util.SparseArray $r1, $r2, $r3, $r4;
        android.graphics.drawable.Drawable[] $r5;
        java.lang.Object $r6;
        android.graphics.drawable.DrawableContainer$DrawableContainerState$ConstantStateFuture $r7;
        android.graphics.drawable.Drawable $r8;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        $r1 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures>;

        if $r1 == null goto label3;

        $r2 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures>;

        i0 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures>;

        i2 = virtualinvoke $r3.<android.util.SparseArray: int keyAt(int)>(i1);

        $r5 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        $r4 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures>;

        $r6 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r7 = (android.graphics.drawable.DrawableContainer$DrawableContainerState$ConstantStateFuture) $r6;

        $r8 = virtualinvoke $r7.<android.graphics.drawable.DrawableContainer$DrawableContainerState$ConstantStateFuture: android.graphics.drawable.Drawable get(android.graphics.drawable.DrawableContainer$DrawableContainerState)>(r0);

        $r5[i2] = $r8;

        i1 = i1 + 1;

        goto label1;

     label2:
        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures> = null;

     label3:
        return;
    }

    public final int addChild(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        android.graphics.drawable.Drawable r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.graphics.drawable.Drawable[] $r2, $r4;
        android.graphics.drawable.DrawableContainer $r3;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        i0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        $r2 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        $i1 = lengthof $r2;

        if i0 < $i1 goto label1;

        $i7 = i0 + 10;

        virtualinvoke r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: void growArray(int,int)>(i0, $i7);

     label1:
        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(0, 1);

        $r3 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.DrawableContainer mOwner>;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>($r3);

        $r4 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        $r4[i0] = r1;

        $i2 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        $i3 = 1 + $i2;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren> = $i3;

        $i4 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mChildrenChangingConfigurations>;

        $i5 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $i6 = $i4 | $i5;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mChildrenChangingConfigurations> = $i6;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedStateful> = 0;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedOpacity> = 0;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect mConstantPadding> = null;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mPaddingChecked> = 0;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mComputedConstantSize> = 0;

        return i0;
    }

    public boolean canConstantState()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        java.lang.Throwable r1, $r5;
        int i0, i1;
        android.graphics.drawable.Drawable[] r2;
        boolean z0, $z1;
        android.graphics.drawable.Drawable $r3;
        android.graphics.drawable.Drawable$ConstantState $r4;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        entermonitor r0;

     label01:
        $z1 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantState>;

        if $z1 == 0 goto label03;

        z0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCanConstantState>;

     label02:
        exitmonitor r0;

        return z0;

     label03:
        specialinvoke r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: void createAllFutures()>();

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantState> = 1;

        i0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        r2 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

     label04:
        i1 = 0;

     label05:
        if i1 >= i0 goto label10;

     label06:
        $r3 = r2[i1];

        $r4 = virtualinvoke $r3.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>();

        if $r4 != null goto label09;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCanConstantState> = 0;

     label07:
        z0 = 0;

        goto label02;

     label08:
        $r5 := @caughtexception;

        r1 = $r5;

        exitmonitor r0;

        throw r1;

     label09:
        i1 = i1 + 1;

        goto label05;

     label10:
        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCanConstantState> = 1;

     label11:
        z0 = 1;

        goto label02;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label10 to label11 with label08;
    }

    protected void computeConstantSize()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9;
        android.graphics.drawable.Drawable[] r1;
        android.graphics.drawable.Drawable r2;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mComputedConstantSize> = 1;

        specialinvoke r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: void createAllFutures()>();

        i0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        r1 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantHeight> = -1;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantWidth> = -1;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumHeight> = 0;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumWidth> = 0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label6;

        r2 = r1[i1];

        i2 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i6 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantWidth>;

        if i2 <= $i6 goto label2;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantWidth> = i2;

     label2:
        i3 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $i7 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantHeight>;

        if i3 <= $i7 goto label3;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantHeight> = i3;

     label3:
        i4 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getMinimumWidth()>();

        $i8 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumWidth>;

        if i4 <= $i8 goto label4;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumWidth> = i4;

     label4:
        i5 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getMinimumHeight()>();

        $i9 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumHeight>;

        if i5 <= $i9 goto label5;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumHeight> = i5;

     label5:
        i1 = i1 + 1;

        goto label1;

     label6:
        return;
    }

    final int getCapacity()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        android.graphics.drawable.Drawable[] $r1;
        int $i0;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        $r1 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public int getChangingConfigurations()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int $i0, $i1, $i2;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        $i1 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mChangingConfigurations>;

        $i0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mChildrenChangingConfigurations>;

        $i2 = $i1 | $i0;

        return $i2;
    }

    public final android.graphics.drawable.Drawable getChild(int)
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int i0, i1;
        android.graphics.drawable.Drawable r1, r2;
        android.graphics.drawable.Drawable[] $r3, $r9;
        android.util.SparseArray $r4, $r5, $r6, $r10;
        java.lang.Object $r7;
        android.graphics.drawable.DrawableContainer$DrawableContainerState$ConstantStateFuture $r8;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        i0 := @parameter0: int;

        $r3 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        r1 = $r3[i0];

        if r1 == null goto label1;

        return r1;

     label1:
        $r4 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures>;

        if $r4 == null goto label2;

        $r5 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures>;

        i1 = virtualinvoke $r5.<android.util.SparseArray: int indexOfKey(int)>(i0);

        if i1 < 0 goto label2;

        $r6 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r8 = (android.graphics.drawable.DrawableContainer$DrawableContainerState$ConstantStateFuture) $r7;

        r2 = virtualinvoke $r8.<android.graphics.drawable.DrawableContainer$DrawableContainerState$ConstantStateFuture: android.graphics.drawable.Drawable get(android.graphics.drawable.DrawableContainer$DrawableContainerState)>(r0);

        $r9 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        $r9[i0] = r2;

        $r10 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures>;

        virtualinvoke $r10.<android.util.SparseArray: void removeAt(int)>(i1);

        return r2;

     label2:
        return null;
    }

    public final int getChildCount()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int $i0;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        $i0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        return $i0;
    }

    public final android.graphics.drawable.Drawable[] getChildren()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        android.graphics.drawable.Drawable[] $r1;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        specialinvoke r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: void createAllFutures()>();

        $r1 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        return $r1;
    }

    public final int getConstantHeight()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        boolean $z0;
        int $i0;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        $z0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mComputedConstantSize>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()>();

     label1:
        $i0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantHeight>;

        return $i0;
    }

    public final int getConstantMinimumHeight()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        boolean $z0;
        int $i0;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        $z0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mComputedConstantSize>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()>();

     label1:
        $i0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumHeight>;

        return $i0;
    }

    public final int getConstantMinimumWidth()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        boolean $z0;
        int $i0;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        $z0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mComputedConstantSize>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()>();

     label1:
        $i0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumWidth>;

        return $i0;
    }

    public final android.graphics.Rect getConstantPadding()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        android.graphics.Rect r1, r2, $r4, $r5, $r6, $r8;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        android.graphics.drawable.Drawable[] r3;
        boolean $z0, $z1, $z2;
        android.graphics.drawable.Drawable $r7;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        $z0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mVariablePadding>;

        if $z0 == 0 goto label01;

        return null;

     label01:
        $r4 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect mConstantPadding>;

        if $r4 != null goto label02;

        $z1 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mPaddingChecked>;

        if $z1 == 0 goto label03;

     label02:
        $r5 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect mConstantPadding>;

        return $r5;

     label03:
        specialinvoke r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: void createAllFutures()>();

        r1 = null;

        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<android.graphics.Rect: void <init>()>();

        r2 = $r6;

        i0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        r3 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        i1 = 0;

     label04:
        if i1 >= i0 goto label10;

        $r7 = r3[i1];

        $z2 = virtualinvoke $r7.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>(r2);

        if $z2 == 0 goto label09;

        if r1 != null goto label05;

        $r8 = new android.graphics.Rect;

        specialinvoke $r8.<android.graphics.Rect: void <init>(int,int,int,int)>(0, 0, 0, 0);

        r1 = $r8;

     label05:
        $i3 = r2.<android.graphics.Rect: int left>;

        $i2 = r1.<android.graphics.Rect: int left>;

        if $i3 <= $i2 goto label06;

        $i13 = r2.<android.graphics.Rect: int left>;

        r1.<android.graphics.Rect: int left> = $i13;

     label06:
        $i6 = r2.<android.graphics.Rect: int top>;

        $i4 = r1.<android.graphics.Rect: int top>;

        if $i6 <= $i4 goto label07;

        $i11 = r2.<android.graphics.Rect: int top>;

        r1.<android.graphics.Rect: int top> = $i11;

     label07:
        $i8 = r2.<android.graphics.Rect: int right>;

        $i5 = r1.<android.graphics.Rect: int right>;

        if $i8 <= $i5 goto label08;

        $i12 = r2.<android.graphics.Rect: int right>;

        r1.<android.graphics.Rect: int right> = $i12;

     label08:
        $i10 = r2.<android.graphics.Rect: int bottom>;

        $i7 = r1.<android.graphics.Rect: int bottom>;

        if $i10 <= $i7 goto label09;

        $i9 = r2.<android.graphics.Rect: int bottom>;

        r1.<android.graphics.Rect: int bottom> = $i9;

     label09:
        i1 = i1 + 1;

        goto label04;

     label10:
        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mPaddingChecked> = 1;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect mConstantPadding> = r1;

        return r1;
    }

    public final int getConstantWidth()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        boolean $z0;
        int $i0;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        $z0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mComputedConstantSize>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()>();

     label1:
        $i0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantWidth>;

        return $i0;
    }

    public final int getEnterFadeDuration()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int $i0;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        $i0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mEnterFadeDuration>;

        return $i0;
    }

    public final int getExitFadeDuration()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int $i0;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        $i0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mExitFadeDuration>;

        return $i0;
    }

    public final int getOpacity()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int i0, i1, i2, $i3, $i4;
        android.graphics.drawable.Drawable[] r1;
        boolean $z0;
        android.graphics.drawable.Drawable $r2, $r3;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        $z0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedOpacity>;

        if $z0 == 0 goto label1;

        $i4 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mOpacity>;

        return $i4;

     label1:
        specialinvoke r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: void createAllFutures()>();

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedOpacity> = 1;

        i0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        r1 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        if i0 <= 0 goto label4;

        $r3 = r1[0];

        i1 = virtualinvoke $r3.<android.graphics.drawable.Drawable: int getOpacity()>();

     label2:
        i2 = 1;

     label3:
        if i2 >= i0 goto label5;

        $r2 = r1[i2];

        $i3 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getOpacity()>();

        i1 = staticinvoke <android.graphics.drawable.Drawable: int resolveOpacity(int,int)>(i1, $i3);

        i2 = i2 + 1;

        goto label3;

     label4:
        i1 = -2;

        goto label2;

     label5:
        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mOpacity> = i1;

        return i1;
    }

    public void growArray(int, int)
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int i0, i1;
        android.graphics.drawable.Drawable[] r1, $r2;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = newarray (android.graphics.drawable.Drawable)[i1];

        $r2 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, i0);

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables> = r1;

        return;
    }

    public final boolean isConstantSize()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        boolean $z0;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        $z0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mConstantSize>;

        return $z0;
    }

    public final boolean isStateful()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int i0, i1;
        android.graphics.drawable.Drawable[] r1;
        boolean $z0, $z1, $z2;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        $z0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedStateful>;

        if $z0 == 0 goto label1;

        $z2 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mStateful>;

        return $z2;

     label1:
        specialinvoke r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: void createAllFutures()>();

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedStateful> = 1;

        i0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        r1 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $r2 = r1[i1];

        $z1 = virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z1 == 0 goto label3;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mStateful> = 1;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mStateful> = 0;

        return 0;
    }

    final void mutate()
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int i0, i1;
        android.graphics.drawable.Drawable[] r1;
        android.graphics.drawable.Drawable $r2, $r3;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        i0 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        r1 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r2 = r1[i1];

        if $r2 == null goto label2;

        $r3 = r1[i1];

        virtualinvoke $r3.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mMutated> = 1;

        return;
    }

    public final void setConstantSize(boolean)
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        boolean z0;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        z0 := @parameter0: boolean;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mConstantSize> = z0;

        return;
    }

    public final void setEnterFadeDuration(int)
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int i0;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        i0 := @parameter0: int;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mEnterFadeDuration> = i0;

        return;
    }

    public final void setExitFadeDuration(int)
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int i0;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        i0 := @parameter0: int;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mExitFadeDuration> = i0;

        return;
    }

    final void setLayoutDirection(int)
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        int i0, i1, i2;
        android.graphics.drawable.Drawable[] r1;
        android.graphics.drawable.Drawable $r2, $r3;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        i0 := @parameter0: int;

        i1 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        r1 = r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables>;

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        $r2 = r1[i2];

        if $r2 == null goto label2;

        $r3 = r1[i2];

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setLayoutDirection(int)>(i0);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mLayoutDirection> = i0;

        return;
    }

    public final void setVariablePadding(boolean)
    {
        android.graphics.drawable.DrawableContainer$DrawableContainerState r0;
        boolean z0;

        r0 := @this: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        z0 := @parameter0: boolean;

        r0.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mVariablePadding> = z0;

        return;
    }
}
