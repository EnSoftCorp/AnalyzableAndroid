public final class com.android.org.conscrypt.DefaultSSLContextImpl extends com.android.org.conscrypt.OpenSSLContextImpl
{
    private static javax.net.ssl.KeyManager[] KEY_MANAGERS;
    private static javax.net.ssl.TrustManager[] TRUST_MANAGERS;

    public void <init>() throws java.security.GeneralSecurityException, java.io.IOException
    {
        com.android.org.conscrypt.DefaultSSLContextImpl r0;

        r0 := @this: com.android.org.conscrypt.DefaultSSLContextImpl;

        specialinvoke r0.<com.android.org.conscrypt.OpenSSLContextImpl: void <init>(com.android.org.conscrypt.DefaultSSLContextImpl)>(null);

        return;
    }

    public void engineInit(javax.net.ssl.KeyManager[], javax.net.ssl.TrustManager[], java.security.SecureRandom) throws java.security.KeyManagementException
    {
        com.android.org.conscrypt.DefaultSSLContextImpl r0;
        javax.net.ssl.KeyManager[] r1;
        javax.net.ssl.TrustManager[] r2;
        java.security.SecureRandom r3;
        java.security.KeyManagementException $r4;

        r0 := @this: com.android.org.conscrypt.DefaultSSLContextImpl;

        r1 := @parameter0: javax.net.ssl.KeyManager[];

        r2 := @parameter1: javax.net.ssl.TrustManager[];

        r3 := @parameter2: java.security.SecureRandom;

        $r4 = new java.security.KeyManagementException;

        specialinvoke $r4.<java.security.KeyManagementException: void <init>(java.lang.String)>("Do not init() the default SSLContext ");

        throw $r4;
    }

    javax.net.ssl.KeyManager[] getKeyManagers() throws java.security.GeneralSecurityException, java.io.IOException
    {
        com.android.org.conscrypt.DefaultSSLContextImpl r0;
        java.lang.String r1, r3, $r11, $r14;
        javax.net.ssl.KeyManager[] r2, $r10, $r15, $r16;
        char[] r4;
        java.security.KeyStore r5;
        java.io.BufferedInputStream r6, r7, $r13;
        java.lang.Throwable r8, $r17, $r18;
        javax.net.ssl.KeyManagerFactory r9;
        java.io.FileInputStream $r12;

        r0 := @this: com.android.org.conscrypt.DefaultSSLContextImpl;

        $r10 = <com.android.org.conscrypt.DefaultSSLContextImpl: javax.net.ssl.KeyManager[] KEY_MANAGERS>;

        if $r10 == null goto label02;

        r2 = <com.android.org.conscrypt.DefaultSSLContextImpl: javax.net.ssl.KeyManager[] KEY_MANAGERS>;

     label01:
        return r2;

     label02:
        r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("javax.net.ssl.keyStore");

        r2 = null;

        if r1 == null goto label01;

        r3 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("javax.net.ssl.keyStorePassword");

        r4 = null;

        if r3 != null goto label08;

     label03:
        $r11 = staticinvoke <java.security.KeyStore: java.lang.String getDefaultType()>();

        r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r11);

        r6 = null;

     label04:
        $r13 = new java.io.BufferedInputStream;

        $r12 = new java.io.FileInputStream;

        specialinvoke $r12.<java.io.FileInputStream: void <init>(java.lang.String)>(r1);

        specialinvoke $r13.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r12);

        r7 = $r13;

     label05:
        virtualinvoke r5.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r7, r4);

     label06:
        if r7 == null goto label07;

        virtualinvoke r7.<java.io.InputStream: void close()>();

     label07:
        $r14 = staticinvoke <javax.net.ssl.KeyManagerFactory: java.lang.String getDefaultAlgorithm()>();

        r9 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r14);

        virtualinvoke r9.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r5, r4);

        $r16 = virtualinvoke r9.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>();

        <com.android.org.conscrypt.DefaultSSLContextImpl: javax.net.ssl.KeyManager[] KEY_MANAGERS> = $r16;

        $r15 = <com.android.org.conscrypt.DefaultSSLContextImpl: javax.net.ssl.KeyManager[] KEY_MANAGERS>;

        return $r15;

     label08:
        r4 = virtualinvoke r3.<java.lang.String: char[] toCharArray()>();

        goto label03;

     label09:
        $r17 := @caughtexception;

        r8 = $r17;

     label10:
        if r6 == null goto label11;

        virtualinvoke r6.<java.io.InputStream: void close()>();

     label11:
        throw r8;

     label12:
        $r18 := @caughtexception;

        r8 = $r18;

        r6 = r7;

        goto label10;

        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label05 to label06 with label12;
    }

    javax.net.ssl.TrustManager[] getTrustManagers() throws java.security.GeneralSecurityException, java.io.IOException
    {
        com.android.org.conscrypt.DefaultSSLContextImpl r0;
        java.lang.String r1, r3, $r11, $r14;
        javax.net.ssl.TrustManager[] r2, $r10, $r15, $r16;
        char[] r4;
        java.security.KeyStore r5;
        java.io.BufferedInputStream r6, r7, $r13;
        java.lang.Throwable r8, $r17, $r18;
        javax.net.ssl.TrustManagerFactory r9;
        java.io.FileInputStream $r12;

        r0 := @this: com.android.org.conscrypt.DefaultSSLContextImpl;

        $r10 = <com.android.org.conscrypt.DefaultSSLContextImpl: javax.net.ssl.TrustManager[] TRUST_MANAGERS>;

        if $r10 == null goto label02;

        r2 = <com.android.org.conscrypt.DefaultSSLContextImpl: javax.net.ssl.TrustManager[] TRUST_MANAGERS>;

     label01:
        return r2;

     label02:
        r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("javax.net.ssl.trustStore");

        r2 = null;

        if r1 == null goto label01;

        r3 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("javax.net.ssl.trustStorePassword");

        r4 = null;

        if r3 != null goto label08;

     label03:
        $r11 = staticinvoke <java.security.KeyStore: java.lang.String getDefaultType()>();

        r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r11);

        r6 = null;

     label04:
        $r13 = new java.io.BufferedInputStream;

        $r12 = new java.io.FileInputStream;

        specialinvoke $r12.<java.io.FileInputStream: void <init>(java.lang.String)>(r1);

        specialinvoke $r13.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r12);

        r7 = $r13;

     label05:
        virtualinvoke r5.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r7, r4);

     label06:
        if r7 == null goto label07;

        virtualinvoke r7.<java.io.InputStream: void close()>();

     label07:
        $r14 = staticinvoke <javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()>();

        r9 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r14);

        virtualinvoke r9.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(r5);

        $r16 = virtualinvoke r9.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>();

        <com.android.org.conscrypt.DefaultSSLContextImpl: javax.net.ssl.TrustManager[] TRUST_MANAGERS> = $r16;

        $r15 = <com.android.org.conscrypt.DefaultSSLContextImpl: javax.net.ssl.TrustManager[] TRUST_MANAGERS>;

        return $r15;

     label08:
        r4 = virtualinvoke r3.<java.lang.String: char[] toCharArray()>();

        goto label03;

     label09:
        $r18 := @caughtexception;

        r8 = $r18;

     label10:
        if r6 == null goto label11;

        virtualinvoke r6.<java.io.InputStream: void close()>();

     label11:
        throw r8;

     label12:
        $r17 := @caughtexception;

        r8 = $r17;

        r6 = r7;

        goto label10;

        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label05 to label06 with label12;
    }
}
