public class android.util.LruCache extends java.lang.Object
{
    private int createCount;
    private int evictionCount;
    private int hitCount;
    private final java.util.LinkedHashMap map;
    private int maxSize;
    private int missCount;
    private int putCount;
    private int size;

    public void <init>(int)
    {
        android.util.LruCache r0;
        int i0;
        java.util.LinkedHashMap $r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.util.LruCache;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 > 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("maxSize <= 0");

        throw $r2;

     label1:
        r0.<android.util.LruCache: int maxSize> = i0;

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>(int,float,boolean)>(0, 0.75F, 1);

        r0.<android.util.LruCache: java.util.LinkedHashMap map> = $r1;

        return;
    }

    private int safeSizeOf(java.lang.Object, java.lang.Object)
    {
        android.util.LruCache r0;
        java.lang.Object r1, r2;
        int i0;
        java.lang.IllegalStateException $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: android.util.LruCache;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        i0 = virtualinvoke r0.<android.util.LruCache: int sizeOf(java.lang.Object,java.lang.Object)>(r1, r2);

        if i0 >= 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Negative size: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r3;

     label1:
        return i0;
    }

    protected java.lang.Object create(java.lang.Object)
    {
        android.util.LruCache r0;
        java.lang.Object r1;

        r0 := @this: android.util.LruCache;

        r1 := @parameter0: java.lang.Object;

        return null;
    }

    public final int createCount()
    {
        android.util.LruCache r0;
        java.lang.Throwable r1, $r2;
        int i0;

        r0 := @this: android.util.LruCache;

        entermonitor r0;

     label1:
        i0 = r0.<android.util.LruCache: int createCount>;

     label2:
        exitmonitor r0;

        return i0;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected void entryRemoved(boolean, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        android.util.LruCache r0;
        boolean z0;
        java.lang.Object r1, r2, r3;

        r0 := @this: android.util.LruCache;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        return;
    }

    public final void evictAll()
    {
        android.util.LruCache r0;

        r0 := @this: android.util.LruCache;

        virtualinvoke r0.<android.util.LruCache: void trimToSize(int)>(-1);

        return;
    }

    public final int evictionCount()
    {
        android.util.LruCache r0;
        java.lang.Throwable r1, $r2;
        int i0;

        r0 := @this: android.util.LruCache;

        entermonitor r0;

     label1:
        i0 = r0.<android.util.LruCache: int evictionCount>;

     label2:
        exitmonitor r0;

        return i0;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final java.lang.Object get(java.lang.Object)
    {
        android.util.LruCache r0;
        java.lang.Object r1, r3, r4, r6;
        java.lang.Throwable r2, r5, $r12, $r13;
        java.util.LinkedHashMap $r7, $r8, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.NullPointerException $r11;

        r0 := @this: android.util.LruCache;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label01;

        $r11 = new java.lang.NullPointerException;

        specialinvoke $r11.<java.lang.NullPointerException: void <init>(java.lang.String)>("key == null");

        throw $r11;

     label01:
        entermonitor r0;

     label02:
        $r7 = r0.<android.util.LruCache: java.util.LinkedHashMap map>;

        r3 = virtualinvoke $r7.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r1);

     label03:
        if r3 == null goto label06;

     label04:
        $i9 = r0.<android.util.LruCache: int hitCount>;

        $i8 = 1 + $i9;

        r0.<android.util.LruCache: int hitCount> = $i8;

        exitmonitor r0;

     label05:
        return r3;

     label06:
        $i0 = r0.<android.util.LruCache: int missCount>;

        $i1 = 1 + $i0;

        r0.<android.util.LruCache: int missCount> = $i1;

        exitmonitor r0;

     label07:
        r4 = virtualinvoke r0.<android.util.LruCache: java.lang.Object create(java.lang.Object)>(r1);

        if r4 != null goto label11;

        return null;

     label08:
        $r13 := @caughtexception;

        r2 = $r13;

     label09:
        exitmonitor r0;

     label10:
        throw r2;

     label11:
        entermonitor r0;

     label12:
        $i2 = r0.<android.util.LruCache: int createCount>;

        $i3 = 1 + $i2;

        r0.<android.util.LruCache: int createCount> = $i3;

        $r8 = r0.<android.util.LruCache: java.util.LinkedHashMap map>;

        r6 = virtualinvoke $r8.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4);

     label13:
        if r6 == null goto label17;

     label14:
        $r10 = r0.<android.util.LruCache: java.util.LinkedHashMap map>;

        virtualinvoke $r10.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r6);

     label15:
        exitmonitor r0;

     label16:
        if r6 == null goto label22;

        virtualinvoke r0.<android.util.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)>(0, r1, r4, r6);

        return r6;

     label17:
        $i4 = r0.<android.util.LruCache: int size>;

        $i6 = specialinvoke r0.<android.util.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)>(r1, r4);

        $i5 = $i4 + $i6;

        r0.<android.util.LruCache: int size> = $i5;

     label18:
        goto label15;

     label19:
        $r12 := @caughtexception;

        r5 = $r12;

     label20:
        exitmonitor r0;

     label21:
        throw r5;

     label22:
        $i7 = r0.<android.util.LruCache: int maxSize>;

        virtualinvoke r0.<android.util.LruCache: void trimToSize(int)>($i7);

        return r4;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label12 to label13 with label19;
        catch java.lang.Throwable from label14 to label15 with label19;
        catch java.lang.Throwable from label15 to label16 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
    }

    public final int hitCount()
    {
        android.util.LruCache r0;
        java.lang.Throwable r1, $r2;
        int i0;

        r0 := @this: android.util.LruCache;

        entermonitor r0;

     label1:
        i0 = r0.<android.util.LruCache: int hitCount>;

     label2:
        exitmonitor r0;

        return i0;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final int maxSize()
    {
        android.util.LruCache r0;
        java.lang.Throwable r1, $r2;
        int i0;

        r0 := @this: android.util.LruCache;

        entermonitor r0;

     label1:
        i0 = r0.<android.util.LruCache: int maxSize>;

     label2:
        exitmonitor r0;

        return i0;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final int missCount()
    {
        android.util.LruCache r0;
        java.lang.Throwable r1, $r2;
        int i0;

        r0 := @this: android.util.LruCache;

        entermonitor r0;

     label1:
        i0 = r0.<android.util.LruCache: int missCount>;

     label2:
        exitmonitor r0;

        return i0;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        android.util.LruCache r0;
        java.lang.Object r1, r2, r4;
        java.lang.Throwable r3, $r7;
        java.lang.NullPointerException $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.util.LinkedHashMap $r6;

        r0 := @this: android.util.LruCache;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        if r1 == null goto label01;

        if r2 != null goto label02;

     label01:
        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("key == null || value == null");

        throw $r5;

     label02:
        entermonitor r0;

     label03:
        $i0 = r0.<android.util.LruCache: int putCount>;

        $i1 = 1 + $i0;

        r0.<android.util.LruCache: int putCount> = $i1;

        $i2 = r0.<android.util.LruCache: int size>;

        $i3 = specialinvoke r0.<android.util.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)>(r1, r2);

        $i4 = $i2 + $i3;

        r0.<android.util.LruCache: int size> = $i4;

        $r6 = r0.<android.util.LruCache: java.util.LinkedHashMap map>;

        r4 = virtualinvoke $r6.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

     label04:
        if r4 == null goto label06;

     label05:
        $i7 = r0.<android.util.LruCache: int size>;

        $i6 = specialinvoke r0.<android.util.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)>(r1, r4);

        $i8 = $i7 - $i6;

        r0.<android.util.LruCache: int size> = $i8;

     label06:
        exitmonitor r0;

     label07:
        if r4 == null goto label08;

        virtualinvoke r0.<android.util.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)>(0, r1, r4, r2);

     label08:
        $i5 = r0.<android.util.LruCache: int maxSize>;

        virtualinvoke r0.<android.util.LruCache: void trimToSize(int)>($i5);

        return r4;

     label09:
        $r7 := @caughtexception;

        r3 = $r7;

     label10:
        exitmonitor r0;

     label11:
        throw r3;

        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public final int putCount()
    {
        android.util.LruCache r0;
        java.lang.Throwable r1, $r2;
        int i0;

        r0 := @this: android.util.LruCache;

        entermonitor r0;

     label1:
        i0 = r0.<android.util.LruCache: int putCount>;

     label2:
        exitmonitor r0;

        return i0;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final java.lang.Object remove(java.lang.Object)
    {
        android.util.LruCache r0;
        java.lang.Object r1, r3;
        java.lang.Throwable r2, $r6;
        java.util.LinkedHashMap $r4;
        int $i0, $i1, $i2;
        java.lang.NullPointerException $r5;

        r0 := @this: android.util.LruCache;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label01;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("key == null");

        throw $r5;

     label01:
        entermonitor r0;

     label02:
        $r4 = r0.<android.util.LruCache: java.util.LinkedHashMap map>;

        r3 = virtualinvoke $r4.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>(r1);

     label03:
        if r3 == null goto label05;

     label04:
        $i0 = r0.<android.util.LruCache: int size>;

        $i1 = specialinvoke r0.<android.util.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)>(r1, r3);

        $i2 = $i0 - $i1;

        r0.<android.util.LruCache: int size> = $i2;

     label05:
        exitmonitor r0;

     label06:
        if r3 == null goto label07;

        virtualinvoke r0.<android.util.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)>(0, r1, r3, null);

     label07:
        return r3;

     label08:
        $r6 := @caughtexception;

        r2 = $r6;

     label09:
        exitmonitor r0;

     label10:
        throw r2;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void resize(int)
    {
        android.util.LruCache r0;
        int i0;
        java.lang.Throwable r1, $r3;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.util.LruCache;

        i0 := @parameter0: int;

        if i0 > 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("maxSize <= 0");

        throw $r2;

     label1:
        entermonitor r0;

     label2:
        r0.<android.util.LruCache: int maxSize> = i0;

        exitmonitor r0;

     label3:
        virtualinvoke r0.<android.util.LruCache: void trimToSize(int)>(i0);

        return;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

     label5:
        exitmonitor r0;

     label6:
        throw r1;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public final int size()
    {
        android.util.LruCache r0;
        java.lang.Throwable r1, $r2;
        int i0;

        r0 := @this: android.util.LruCache;

        entermonitor r0;

     label1:
        i0 = r0.<android.util.LruCache: int size>;

     label2:
        exitmonitor r0;

        return i0;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected int sizeOf(java.lang.Object, java.lang.Object)
    {
        android.util.LruCache r0;
        java.lang.Object r1, r2;

        r0 := @this: android.util.LruCache;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        return 1;
    }

    public final java.util.Map snapshot()
    {
        android.util.LruCache r0;
        java.util.LinkedHashMap r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: android.util.LruCache;

        entermonitor r0;

     label1:
        $r3 = new java.util.LinkedHashMap;

        $r4 = r0.<android.util.LruCache: java.util.LinkedHashMap map>;

        specialinvoke $r3.<java.util.LinkedHashMap: void <init>(java.util.Map)>($r4);

        r1 = $r3;

     label2:
        exitmonitor r0;

        return r1;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final java.lang.String toString()
    {
        android.util.LruCache r0;
        java.lang.Throwable r1, $r8;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.Object[] r2;
        java.lang.String r3;
        java.lang.Integer $r4, $r5, $r6, $r7;

        r0 := @this: android.util.LruCache;

        entermonitor r0;

     label1:
        $i3 = r0.<android.util.LruCache: int hitCount>;

        $i2 = r0.<android.util.LruCache: int missCount>;

        i0 = $i3 + $i2;

     label2:
        i1 = 0;

        if i0 == 0 goto label4;

     label3:
        $i8 = r0.<android.util.LruCache: int hitCount>;

        $i7 = 100 * $i8;

        i1 = $i7 / i0;

     label4:
        r2 = newarray (java.lang.Object)[4];

        $i4 = r0.<android.util.LruCache: int maxSize>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        r2[0] = $r4;

        $i5 = r0.<android.util.LruCache: int hitCount>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        r2[1] = $r5;

        $i6 = r0.<android.util.LruCache: int missCount>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        r2[2] = $r6;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        r2[3] = $r7;

        r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("LruCache[maxSize=%d,hits=%d,misses=%d,hitRate=%d%%]", r2);

     label5:
        exitmonitor r0;

        return r3;

     label6:
        $r8 := @caughtexception;

        r1 = $r8;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public void trimToSize(int)
    {
        android.util.LruCache r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.Throwable r1, $r16;
        java.util.Map$Entry r2;
        java.lang.Object r3, r4;
        java.lang.IllegalStateException $r5;
        java.lang.StringBuilder $r6, $r9, $r10;
        java.lang.Class $r7;
        java.lang.String $r8, $r11;
        java.util.LinkedHashMap $r12, $r13, $r15;
        boolean $z0;

        r0 := @this: android.util.LruCache;

        i0 := @parameter0: int;

     label01:
        entermonitor r0;

     label02:
        $i1 = r0.<android.util.LruCache: int size>;

        if $i1 < 0 goto label03;

        $r12 = r0.<android.util.LruCache: java.util.LinkedHashMap map>;

        $z0 = virtualinvoke $r12.<java.util.LinkedHashMap: boolean isEmpty()>();

        if $z0 == 0 goto label07;

        $i8 = r0.<android.util.LruCache: int size>;

        if $i8 == 0 goto label07;

     label03:
        $r5 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".sizeOf() is reporting inconsistent results!");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r5;

     label04:
        $r16 := @caughtexception;

        r1 = $r16;

     label05:
        exitmonitor r0;

     label06:
        throw r1;

     label07:
        $i2 = r0.<android.util.LruCache: int size>;

        if $i2 > i0 goto label09;

        exitmonitor r0;

     label08:
        return;

     label09:
        $r13 = r0.<android.util.LruCache: java.util.LinkedHashMap map>;

        r2 = virtualinvoke $r13.<java.util.LinkedHashMap: java.util.Map$Entry eldest()>();

     label10:
        if r2 != null goto label13;

     label11:
        exitmonitor r0;

     label12:
        return;

     label13:
        r3 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        r4 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r15 = r0.<android.util.LruCache: java.util.LinkedHashMap map>;

        virtualinvoke $r15.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>(r3);

        $i4 = r0.<android.util.LruCache: int size>;

        $i3 = specialinvoke r0.<android.util.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)>(r3, r4);

        $i6 = $i4 - $i3;

        r0.<android.util.LruCache: int size> = $i6;

        $i5 = r0.<android.util.LruCache: int evictionCount>;

        $i7 = 1 + $i5;

        r0.<android.util.LruCache: int evictionCount> = $i7;

        exitmonitor r0;

     label14:
        virtualinvoke r0.<android.util.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)>(1, r3, r4, null);

        goto label01;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label03 to label04 with label04;
        catch java.lang.Throwable from label05 to label06 with label04;
        catch java.lang.Throwable from label07 to label08 with label04;
        catch java.lang.Throwable from label09 to label10 with label04;
        catch java.lang.Throwable from label11 to label12 with label04;
        catch java.lang.Throwable from label13 to label14 with label04;
    }
}
