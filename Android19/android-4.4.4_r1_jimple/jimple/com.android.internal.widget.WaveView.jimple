public class com.android.internal.widget.WaveView extends android.view.View implements android.animation.ValueAnimator$AnimatorUpdateListener
{
    private static final boolean DBG;
    private static final long DELAY_INCREMENT;
    private static final long DELAY_INCREMENT2;
    private static final long DURATION;
    private static final long FINAL_DELAY;
    private static final long FINAL_DURATION;
    private static final float GRAB_HANDLE_RADIUS_SCALE_ACCESSIBILITY_DISABLED;
    private static final float GRAB_HANDLE_RADIUS_SCALE_ACCESSIBILITY_ENABLED;
    private static final long RESET_TIMEOUT;
    private static final long RING_DELAY;
    private static final long SHORT_DELAY;
    private static final int STATE_ATTEMPTING;
    private static final int STATE_READY;
    private static final int STATE_RESET_LOCK;
    private static final int STATE_START_ATTEMPT;
    private static final int STATE_UNLOCK_ATTEMPT;
    private static final int STATE_UNLOCK_SUCCESS;
    private static final java.lang.String TAG;
    private static final long VIBRATE_LONG;
    private static final long VIBRATE_SHORT;
    private static final int WAVE_COUNT;
    private static final long WAVE_DELAY;
    private static final long WAVE_DURATION;
    private final java.lang.Runnable mAddWaveAction;
    private int mCurrentWave;
    private java.util.ArrayList mDrawables;
    private boolean mFingerDown;
    private boolean mFinishWaves;
    private int mGrabbedState;
    private java.util.ArrayList mLightWaves;
    private float mLockCenterX;
    private float mLockCenterY;
    private int mLockState;
    private final java.lang.Runnable mLockTimerActions;
    private float mMouseX;
    private float mMouseY;
    private com.android.internal.widget.WaveView$OnTriggerListener mOnTriggerListener;
    private float mRingRadius;
    private int mSnapRadius;
    private com.android.internal.widget.DrawableHolder mUnlockDefault;
    private com.android.internal.widget.DrawableHolder mUnlockHalo;
    private com.android.internal.widget.DrawableHolder mUnlockRing;
    private android.os.Vibrator mVibrator;
    private int mWaveCount;
    private long mWaveTimerDelay;
    private boolean mWavesRunning;

    public void <init>(android.content.Context)
    {
        com.android.internal.widget.WaveView r0;
        android.content.Context r1;

        r0 := @this: com.android.internal.widget.WaveView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.internal.widget.WaveView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.internal.widget.WaveView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        java.util.ArrayList $r3, $r4;
        com.android.internal.widget.WaveView$1 $r5;
        com.android.internal.widget.WaveView$2 $r6;

        r0 := @this: com.android.internal.widget.WaveView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(3);

        r0.<com.android.internal.widget.WaveView: java.util.ArrayList mDrawables> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>(20);

        r0.<com.android.internal.widget.WaveView: java.util.ArrayList mLightWaves> = $r4;

        r0.<com.android.internal.widget.WaveView: boolean mFingerDown> = 0;

        r0.<com.android.internal.widget.WaveView: float mRingRadius> = 182.0F;

        r0.<com.android.internal.widget.WaveView: int mSnapRadius> = 136;

        r0.<com.android.internal.widget.WaveView: int mWaveCount> = 20;

        r0.<com.android.internal.widget.WaveView: long mWaveTimerDelay> = 100L;

        r0.<com.android.internal.widget.WaveView: int mCurrentWave> = 0;

        r0.<com.android.internal.widget.WaveView: int mLockState> = 0;

        r0.<com.android.internal.widget.WaveView: int mGrabbedState> = 0;

        $r5 = new com.android.internal.widget.WaveView$1;

        specialinvoke $r5.<com.android.internal.widget.WaveView$1: void <init>(com.android.internal.widget.WaveView)>(r0);

        r0.<com.android.internal.widget.WaveView: java.lang.Runnable mLockTimerActions> = $r5;

        $r6 = new com.android.internal.widget.WaveView$2;

        specialinvoke $r6.<com.android.internal.widget.WaveView$2: void <init>(com.android.internal.widget.WaveView)>(r0);

        r0.<com.android.internal.widget.WaveView: java.lang.Runnable mAddWaveAction> = $r6;

        specialinvoke r0.<com.android.internal.widget.WaveView: void initDrawables()>();

        return;
    }

    static int access$000(com.android.internal.widget.WaveView)
    {
        com.android.internal.widget.WaveView r0;
        int $i0;

        r0 := @parameter0: com.android.internal.widget.WaveView;

        $i0 = r0.<com.android.internal.widget.WaveView: int mLockState>;

        return $i0;
    }

    static int access$002(com.android.internal.widget.WaveView, int)
    {
        com.android.internal.widget.WaveView r0;
        int i0;

        r0 := @parameter0: com.android.internal.widget.WaveView;

        i0 := @parameter1: int;

        r0.<com.android.internal.widget.WaveView: int mLockState> = i0;

        return i0;
    }

    static float access$100(com.android.internal.widget.WaveView)
    {
        com.android.internal.widget.WaveView r0;
        float $f0;

        r0 := @parameter0: com.android.internal.widget.WaveView;

        $f0 = r0.<com.android.internal.widget.WaveView: float mMouseX>;

        return $f0;
    }

    static boolean access$1000(com.android.internal.widget.WaveView)
    {
        com.android.internal.widget.WaveView r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.widget.WaveView;

        $z0 = r0.<com.android.internal.widget.WaveView: boolean mFinishWaves>;

        return $z0;
    }

    static boolean access$1102(com.android.internal.widget.WaveView, boolean)
    {
        com.android.internal.widget.WaveView r0;
        boolean z0;

        r0 := @parameter0: com.android.internal.widget.WaveView;

        z0 := @parameter1: boolean;

        r0.<com.android.internal.widget.WaveView: boolean mWavesRunning> = z0;

        return z0;
    }

    static java.lang.Runnable access$1200(com.android.internal.widget.WaveView)
    {
        com.android.internal.widget.WaveView r0;
        java.lang.Runnable $r1;

        r0 := @parameter0: com.android.internal.widget.WaveView;

        $r1 = r0.<com.android.internal.widget.WaveView: java.lang.Runnable mAddWaveAction>;

        return $r1;
    }

    static float access$200(com.android.internal.widget.WaveView)
    {
        com.android.internal.widget.WaveView r0;
        float $f0;

        r0 := @parameter0: com.android.internal.widget.WaveView;

        $f0 = r0.<com.android.internal.widget.WaveView: float mLockCenterX>;

        return $f0;
    }

    static float access$300(com.android.internal.widget.WaveView)
    {
        com.android.internal.widget.WaveView r0;
        float $f0;

        r0 := @parameter0: com.android.internal.widget.WaveView;

        $f0 = r0.<com.android.internal.widget.WaveView: float mMouseY>;

        return $f0;
    }

    static float access$400(com.android.internal.widget.WaveView)
    {
        com.android.internal.widget.WaveView r0;
        float $f0;

        r0 := @parameter0: com.android.internal.widget.WaveView;

        $f0 = r0.<com.android.internal.widget.WaveView: float mLockCenterY>;

        return $f0;
    }

    static int access$500(com.android.internal.widget.WaveView)
    {
        com.android.internal.widget.WaveView r0;
        int $i0;

        r0 := @parameter0: com.android.internal.widget.WaveView;

        $i0 = r0.<com.android.internal.widget.WaveView: int mSnapRadius>;

        return $i0;
    }

    static long access$600(com.android.internal.widget.WaveView)
    {
        com.android.internal.widget.WaveView r0;
        long $l0;

        r0 := @parameter0: com.android.internal.widget.WaveView;

        $l0 = r0.<com.android.internal.widget.WaveView: long mWaveTimerDelay>;

        return $l0;
    }

    static long access$602(com.android.internal.widget.WaveView, long)
    {
        com.android.internal.widget.WaveView r0;
        long l0;

        r0 := @parameter0: com.android.internal.widget.WaveView;

        l0 := @parameter1: long;

        r0.<com.android.internal.widget.WaveView: long mWaveTimerDelay> = l0;

        return l0;
    }

    static long access$614(com.android.internal.widget.WaveView, long)
    {
        com.android.internal.widget.WaveView r0;
        long l0, l1, $l2;

        r0 := @parameter0: com.android.internal.widget.WaveView;

        l0 := @parameter1: long;

        $l2 = r0.<com.android.internal.widget.WaveView: long mWaveTimerDelay>;

        l1 = l0 + $l2;

        r0.<com.android.internal.widget.WaveView: long mWaveTimerDelay> = l1;

        return l1;
    }

    static int access$700(com.android.internal.widget.WaveView)
    {
        com.android.internal.widget.WaveView r0;
        int $i0;

        r0 := @parameter0: com.android.internal.widget.WaveView;

        $i0 = r0.<com.android.internal.widget.WaveView: int mCurrentWave>;

        return $i0;
    }

    static int access$702(com.android.internal.widget.WaveView, int)
    {
        com.android.internal.widget.WaveView r0;
        int i0;

        r0 := @parameter0: com.android.internal.widget.WaveView;

        i0 := @parameter1: int;

        r0.<com.android.internal.widget.WaveView: int mCurrentWave> = i0;

        return i0;
    }

    static java.util.ArrayList access$800(com.android.internal.widget.WaveView)
    {
        com.android.internal.widget.WaveView r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: com.android.internal.widget.WaveView;

        $r1 = r0.<com.android.internal.widget.WaveView: java.util.ArrayList mLightWaves>;

        return $r1;
    }

    static int access$900(com.android.internal.widget.WaveView)
    {
        com.android.internal.widget.WaveView r0;
        int $i0;

        r0 := @parameter0: com.android.internal.widget.WaveView;

        $i0 = r0.<com.android.internal.widget.WaveView: int mWaveCount>;

        return $i0;
    }

    private void announceUnlockHandle()
    {
        com.android.internal.widget.WaveView r0;
        android.content.Context $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.widget.WaveView;

        $r1 = r0.<com.android.internal.widget.WaveView: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.String getString(int)>(17040655);

        virtualinvoke r0.<com.android.internal.widget.WaveView: void setContentDescription(java.lang.CharSequence)>($r2);

        virtualinvoke r0.<com.android.internal.widget.WaveView: void sendAccessibilityEvent(int)>(8);

        virtualinvoke r0.<com.android.internal.widget.WaveView: void setContentDescription(java.lang.CharSequence)>(null);

        return;
    }

    private void dispatchTriggerEvent(int)
    {
        com.android.internal.widget.WaveView r0;
        int i0;
        com.android.internal.widget.WaveView$OnTriggerListener $r1, $r2;

        r0 := @this: com.android.internal.widget.WaveView;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.internal.widget.WaveView: void vibrate(long)>(20L);

        $r1 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.WaveView$OnTriggerListener mOnTriggerListener>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.WaveView$OnTriggerListener mOnTriggerListener>;

        interfaceinvoke $r2.<com.android.internal.widget.WaveView$OnTriggerListener: void onTrigger(android.view.View,int)>(r0, i0);

     label1:
        return;
    }

    private float getScaledGrabHandleRadius()
    {
        com.android.internal.widget.WaveView r0;
        android.content.Context $r1;
        android.view.accessibility.AccessibilityManager $r2;
        boolean $z0;
        com.android.internal.widget.DrawableHolder $r3, $r4;
        int $i0, $i1;
        float $f0, $f1, $f2, $f3;

        r0 := @this: com.android.internal.widget.WaveView;

        $r1 = r0.<com.android.internal.widget.WaveView: android.content.Context mContext>;

        $r2 = staticinvoke <android.view.accessibility.AccessibilityManager: android.view.accessibility.AccessibilityManager getInstance(android.content.Context)>($r1);

        $z0 = virtualinvoke $r2.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo>;

        $i1 = virtualinvoke $r4.<com.android.internal.widget.DrawableHolder: int getWidth()>();

        $f2 = (float) $i1;

        $f3 = 1.0F * $f2;

        return $f3;

     label1:
        $r3 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo>;

        $i0 = virtualinvoke $r3.<com.android.internal.widget.DrawableHolder: int getWidth()>();

        $f0 = (float) $i0;

        $f1 = 0.5F * $f0;

        return $f1;
    }

    private void initDrawables()
    {
        com.android.internal.widget.WaveView r0;
        android.graphics.drawable.BitmapDrawable r1, $r4, $r13, $r23;
        int i0, $i1;
        com.android.internal.widget.DrawableHolder r2, $r3, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r14, $r15, $r16, $r17, $r18, $r20, $r21, $r22, $r24, $r25, $r26, $r27, $r28, $r31;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        java.util.ArrayList $r10, $r19, $r29, $r30;

        r0 := @this: com.android.internal.widget.WaveView;

        $r3 = new com.android.internal.widget.DrawableHolder;

        $r4 = virtualinvoke r0.<com.android.internal.widget.WaveView: android.graphics.drawable.BitmapDrawable createDrawable(int)>(17303152);

        specialinvoke $r3.<com.android.internal.widget.DrawableHolder: void <init>(android.graphics.drawable.BitmapDrawable)>($r4);

        r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockRing> = $r3;

        $r5 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockRing>;

        $f0 = r0.<com.android.internal.widget.WaveView: float mLockCenterX>;

        virtualinvoke $r5.<com.android.internal.widget.DrawableHolder: void setX(float)>($f0);

        $r6 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockRing>;

        $f1 = r0.<com.android.internal.widget.WaveView: float mLockCenterY>;

        virtualinvoke $r6.<com.android.internal.widget.DrawableHolder: void setY(float)>($f1);

        $r7 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockRing>;

        virtualinvoke $r7.<com.android.internal.widget.DrawableHolder: void setScaleX(float)>(0.1F);

        $r8 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockRing>;

        virtualinvoke $r8.<com.android.internal.widget.DrawableHolder: void setScaleY(float)>(0.1F);

        $r9 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockRing>;

        virtualinvoke $r9.<com.android.internal.widget.DrawableHolder: void setAlpha(float)>(0.0F);

        $r10 = r0.<com.android.internal.widget.WaveView: java.util.ArrayList mDrawables>;

        $r11 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockRing>;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

        $r12 = new com.android.internal.widget.DrawableHolder;

        $r13 = virtualinvoke r0.<com.android.internal.widget.WaveView: android.graphics.drawable.BitmapDrawable createDrawable(int)>(17303150);

        specialinvoke $r12.<com.android.internal.widget.DrawableHolder: void <init>(android.graphics.drawable.BitmapDrawable)>($r13);

        r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault> = $r12;

        $r14 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        $f2 = r0.<com.android.internal.widget.WaveView: float mLockCenterX>;

        virtualinvoke $r14.<com.android.internal.widget.DrawableHolder: void setX(float)>($f2);

        $r16 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        $f3 = r0.<com.android.internal.widget.WaveView: float mLockCenterY>;

        virtualinvoke $r16.<com.android.internal.widget.DrawableHolder: void setY(float)>($f3);

        $r15 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r15.<com.android.internal.widget.DrawableHolder: void setScaleX(float)>(0.1F);

        $r18 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r18.<com.android.internal.widget.DrawableHolder: void setScaleY(float)>(0.1F);

        $r17 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r17.<com.android.internal.widget.DrawableHolder: void setAlpha(float)>(0.0F);

        $r19 = r0.<com.android.internal.widget.WaveView: java.util.ArrayList mDrawables>;

        $r20 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r19.<java.util.ArrayList: boolean add(java.lang.Object)>($r20);

        $r21 = new com.android.internal.widget.DrawableHolder;

        $r23 = virtualinvoke r0.<com.android.internal.widget.WaveView: android.graphics.drawable.BitmapDrawable createDrawable(int)>(17303151);

        specialinvoke $r21.<com.android.internal.widget.DrawableHolder: void <init>(android.graphics.drawable.BitmapDrawable)>($r23);

        r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo> = $r21;

        $r22 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo>;

        $f5 = r0.<com.android.internal.widget.WaveView: float mLockCenterX>;

        virtualinvoke $r22.<com.android.internal.widget.DrawableHolder: void setX(float)>($f5);

        $r26 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo>;

        $f4 = r0.<com.android.internal.widget.WaveView: float mLockCenterY>;

        virtualinvoke $r26.<com.android.internal.widget.DrawableHolder: void setY(float)>($f4);

        $r27 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo>;

        virtualinvoke $r27.<com.android.internal.widget.DrawableHolder: void setScaleX(float)>(0.1F);

        $r24 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo>;

        virtualinvoke $r24.<com.android.internal.widget.DrawableHolder: void setScaleY(float)>(0.1F);

        $r25 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo>;

        virtualinvoke $r25.<com.android.internal.widget.DrawableHolder: void setAlpha(float)>(0.0F);

        $r29 = r0.<com.android.internal.widget.WaveView: java.util.ArrayList mDrawables>;

        $r28 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo>;

        virtualinvoke $r29.<java.util.ArrayList: boolean add(java.lang.Object)>($r28);

        r1 = virtualinvoke r0.<com.android.internal.widget.WaveView: android.graphics.drawable.BitmapDrawable createDrawable(int)>(17303153);

        i0 = 0;

     label1:
        $i1 = r0.<com.android.internal.widget.WaveView: int mWaveCount>;

        if i0 >= $i1 goto label2;

        $r31 = new com.android.internal.widget.DrawableHolder;

        specialinvoke $r31.<com.android.internal.widget.DrawableHolder: void <init>(android.graphics.drawable.BitmapDrawable)>(r1);

        r2 = $r31;

        $r30 = r0.<com.android.internal.widget.WaveView: java.util.ArrayList mLightWaves>;

        virtualinvoke $r30.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        virtualinvoke r2.<com.android.internal.widget.DrawableHolder: void setAlpha(float)>(0.0F);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    private void setGrabbedState(int)
    {
        com.android.internal.widget.WaveView r0;
        int i0, $i1, $i2;
        com.android.internal.widget.WaveView$OnTriggerListener $r1, $r2;

        r0 := @this: com.android.internal.widget.WaveView;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.internal.widget.WaveView: int mGrabbedState>;

        if i0 == $i1 goto label1;

        r0.<com.android.internal.widget.WaveView: int mGrabbedState> = i0;

        $r1 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.WaveView$OnTriggerListener mOnTriggerListener>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.WaveView$OnTriggerListener mOnTriggerListener>;

        $i2 = r0.<com.android.internal.widget.WaveView: int mGrabbedState>;

        interfaceinvoke $r2.<com.android.internal.widget.WaveView$OnTriggerListener: void onGrabbedStateChange(android.view.View,int)>(r0, $i2);

     label1:
        return;
    }

    private void tryTransitionToStartAttemptState(android.view.MotionEvent)
    {
        com.android.internal.widget.WaveView r0;
        android.view.MotionEvent r1;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7;
        com.android.internal.widget.DrawableHolder $r2, $r3;
        double $d0, $d1, $d2;
        byte $b0;
        android.content.Context $r4;
        int $i1;
        boolean $z0;
        android.view.accessibility.AccessibilityManager $r5;

        r0 := @this: com.android.internal.widget.WaveView;

        r1 := @parameter0: android.view.MotionEvent;

        $f2 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $r2 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo>;

        $f3 = virtualinvoke $r2.<com.android.internal.widget.DrawableHolder: float getX()>();

        f0 = $f2 - $f3;

        $f4 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $r3 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo>;

        $f5 = virtualinvoke $r3.<com.android.internal.widget.DrawableHolder: float getY()>();

        f1 = $f4 - $f5;

        $d1 = (double) f0;

        $d0 = (double) f1;

        $d2 = staticinvoke <java.lang.Math: double hypot(double,double)>($d1, $d0);

        $f6 = (float) $d2;

        $f7 = specialinvoke r0.<com.android.internal.widget.WaveView: float getScaledGrabHandleRadius()>();

        $b0 = $f6 cmpg $f7;

        if $b0 > 0 goto label1;

        specialinvoke r0.<com.android.internal.widget.WaveView: void setGrabbedState(int)>(10);

        $i1 = r0.<com.android.internal.widget.WaveView: int mLockState>;

        if $i1 != 1 goto label1;

        r0.<com.android.internal.widget.WaveView: int mLockState> = 2;

        $r4 = r0.<com.android.internal.widget.WaveView: android.content.Context mContext>;

        $r5 = staticinvoke <android.view.accessibility.AccessibilityManager: android.view.accessibility.AccessibilityManager getInstance(android.content.Context)>($r4);

        $z0 = virtualinvoke $r5.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.internal.widget.WaveView: void announceUnlockHandle()>();

     label1:
        return;
    }

    private void vibrate(long)
    {
        com.android.internal.widget.WaveView r0;
        long l0;
        boolean z0;
        java.lang.Throwable r1, $r9;
        android.content.Context $r2, $r6;
        android.content.ContentResolver $r3;
        int $i1;
        android.os.Vibrator $r4, $r5, $r8;
        java.lang.Object $r7;

        r0 := @this: com.android.internal.widget.WaveView;

        l0 := @parameter0: long;

        z0 = 1;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.internal.widget.WaveView: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i1 = staticinvoke <android.provider.Settings$System: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)>($r3, "haptic_feedback_enabled", 1, -2);

        if $i1 == 0 goto label6;

     label2:
        if z0 == 0 goto label5;

     label3:
        $r4 = r0.<com.android.internal.widget.WaveView: android.os.Vibrator mVibrator>;

        if $r4 != null goto label4;

        $r6 = virtualinvoke r0.<com.android.internal.widget.WaveView: android.content.Context getContext()>();

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("vibrator");

        $r8 = (android.os.Vibrator) $r7;

        r0.<com.android.internal.widget.WaveView: android.os.Vibrator mVibrator> = $r8;

     label4:
        $r5 = r0.<com.android.internal.widget.WaveView: android.os.Vibrator mVibrator>;

        virtualinvoke $r5.<android.os.Vibrator: void vibrate(long)>(l0);

     label5:
        exitmonitor r0;

        return;

     label6:
        z0 = 0;

        goto label2;

     label7:
        $r9 := @caughtexception;

        r1 = $r9;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    private void waveUpdateFrame(float, float, boolean)
    {
        com.android.internal.widget.WaveView r0;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22;
        boolean z0, $z4;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14;
        int i0, i1, i2, i3, i4, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i17;
        com.android.internal.widget.DrawableHolder r1, $r3, $r4, $r5, $r6, $r8, $r12, $r14, $r16, $r18, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r29, $r31, $r33, $r34, $r35, $r37, $r39, $r41, $r43, $r45, $r47, $r49, $r51, $r54, $r57, $r59, $r63, $r65, $r66, $r68, $r75, $r77, $r79, $r81, $r85, $r86, $r89, $r90, $r91, $r93, $r94, $r95, $r96, $r97, $r98, $r99, $r100, $r101, $r102, $r108, $r110, $r112, $r114, $r115, $r116, $r117, $r118, $r119, $r120, $r122, $r124, $r126, $r128, $r129, $r130, $r131, $r132, $r134, $r136, $r138, $r139, $r140, $r141, $r142, $r143, $r146, $r148, $r152, $r155, $r156, $r157, $r158, $r159, $r160, $r161, $r164, $r166;
        long l5, $l15, $l16, $l18;
        java.lang.Runnable $r2, $r61, $r62, $r88, $r144;
        java.util.ArrayList $r10, $r11, $r52, $r55, $r105, $r106, $r150, $r154;
        java.lang.Object $r53, $r56, $r149, $r153;

        r0 := @this: com.android.internal.widget.WaveView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        z0 := @parameter2: boolean;

        $f4 = r0.<com.android.internal.widget.WaveView: float mLockCenterX>;

        $f5 = f0 - $f4;

        d0 = (double) $f5;

        $f6 = r0.<com.android.internal.widget.WaveView: float mLockCenterY>;

        $f7 = f1 - $f6;

        d1 = (double) $f7;

        $d6 = staticinvoke <java.lang.Math: double hypot(double,double)>(d0, d1);

        $d7 = staticinvoke <java.lang.Math: double ceil(double)>($d6);

        i0 = (int) $d7;

        d2 = staticinvoke <java.lang.Math: double atan2(double,double)>(d0, d1);

        $f9 = r0.<com.android.internal.widget.WaveView: float mLockCenterX>;

        $d3 = (double) $f9;

        $f8 = r0.<com.android.internal.widget.WaveView: float mRingRadius>;

        $d4 = (double) $f8;

        $d5 = staticinvoke <java.lang.Math: double sin(double)>(d2);

        $d13 = $d4 * $d5;

        $d12 = $d3 + $d13;

        f2 = (float) $d12;

        $f11 = r0.<com.android.internal.widget.WaveView: float mLockCenterY>;

        $d9 = (double) $f11;

        $f10 = r0.<com.android.internal.widget.WaveView: float mRingRadius>;

        $d8 = (double) $f10;

        $d11 = staticinvoke <java.lang.Math: double cos(double)>(d2);

        $d10 = $d8 * $d11;

        $d14 = $d9 + $d10;

        f3 = (float) $d14;

        $i11 = r0.<com.android.internal.widget.WaveView: int mLockState>;

        tableswitch($i11)
        {
            case 0: goto label02;
            case 1: goto label07;
            case 2: goto label08;
            case 3: goto label09;
            case 4: goto label13;
            case 5: goto label19;
            default: goto label01;
        };

     label01:
        $r5 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r5.<com.android.internal.widget.DrawableHolder: void startAnimations(android.animation.ValueAnimator$AnimatorUpdateListener)>(r0);

        $r4 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo>;

        virtualinvoke $r4.<com.android.internal.widget.DrawableHolder: void startAnimations(android.animation.ValueAnimator$AnimatorUpdateListener)>(r0);

        $r3 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockRing>;

        virtualinvoke $r3.<com.android.internal.widget.DrawableHolder: void startAnimations(android.animation.ValueAnimator$AnimatorUpdateListener)>(r0);

        return;

     label02:
        r0.<com.android.internal.widget.WaveView: long mWaveTimerDelay> = 100L;

        i6 = 0;

     label03:
        $r105 = r0.<com.android.internal.widget.WaveView: java.util.ArrayList mLightWaves>;

        i7 = virtualinvoke $r105.<java.util.ArrayList: int size()>();

        if i6 >= i7 goto label04;

        $r154 = r0.<com.android.internal.widget.WaveView: java.util.ArrayList mLightWaves>;

        $r153 = virtualinvoke $r154.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        $r152 = (com.android.internal.widget.DrawableHolder) $r153;

        virtualinvoke $r152.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(300L, 0L, "alpha", 0.0F, 0);

        i6 = i6 + 1;

        goto label03;

     label04:
        i8 = 0;

     label05:
        $r106 = r0.<com.android.internal.widget.WaveView: java.util.ArrayList mLightWaves>;

        i9 = virtualinvoke $r106.<java.util.ArrayList: int size()>();

        if i8 >= i9 goto label06;

        $r150 = r0.<com.android.internal.widget.WaveView: java.util.ArrayList mLightWaves>;

        $r149 = virtualinvoke $r150.<java.util.ArrayList: java.lang.Object get(int)>(i8);

        $r148 = (com.android.internal.widget.DrawableHolder) $r149;

        virtualinvoke $r148.<com.android.internal.widget.DrawableHolder: void startAnimations(android.animation.ValueAnimator$AnimatorUpdateListener)>(r0);

        i8 = i8 + 1;

        goto label05;

     label06:
        $r102 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockRing>;

        $f15 = r0.<com.android.internal.widget.WaveView: float mLockCenterX>;

        virtualinvoke $r102.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(300L, 0L, "x", $f15, 1);

        $r128 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockRing>;

        $f17 = r0.<com.android.internal.widget.WaveView: float mLockCenterY>;

        virtualinvoke $r128.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(300L, 0L, "y", $f17, 1);

        $r126 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockRing>;

        virtualinvoke $r126.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(300L, 0L, "scaleX", 0.1F, 1);

        $r124 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockRing>;

        virtualinvoke $r124.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(300L, 0L, "scaleY", 0.1F, 1);

        $r122 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockRing>;

        virtualinvoke $r122.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(300L, 0L, "alpha", 0.0F, 1);

        $r120 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r120.<com.android.internal.widget.DrawableHolder: void removeAnimationFor(java.lang.String)>("x");

        $r119 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r119.<com.android.internal.widget.DrawableHolder: void removeAnimationFor(java.lang.String)>("y");

        $r118 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r118.<com.android.internal.widget.DrawableHolder: void removeAnimationFor(java.lang.String)>("scaleX");

        $r117 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r117.<com.android.internal.widget.DrawableHolder: void removeAnimationFor(java.lang.String)>("scaleY");

        $r116 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r116.<com.android.internal.widget.DrawableHolder: void removeAnimationFor(java.lang.String)>("alpha");

        $r115 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        $f16 = r0.<com.android.internal.widget.WaveView: float mLockCenterX>;

        virtualinvoke $r115.<com.android.internal.widget.DrawableHolder: void setX(float)>($f16);

        $r143 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        $f18 = r0.<com.android.internal.widget.WaveView: float mLockCenterY>;

        virtualinvoke $r143.<com.android.internal.widget.DrawableHolder: void setY(float)>($f18);

        $r141 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r141.<com.android.internal.widget.DrawableHolder: void setScaleX(float)>(0.1F);

        $r142 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r142.<com.android.internal.widget.DrawableHolder: void setScaleY(float)>(0.1F);

        $r139 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r139.<com.android.internal.widget.DrawableHolder: void setAlpha(float)>(0.0F);

        $r140 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r140.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(300L, 100L, "scaleX", 1.0F, 1);

        $r138 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r138.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(300L, 100L, "scaleY", 1.0F, 1);

        $r136 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r136.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(300L, 100L, "alpha", 1.0F, 1);

        $r134 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo>;

        virtualinvoke $r134.<com.android.internal.widget.DrawableHolder: void removeAnimationFor(java.lang.String)>("x");

        $r131 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo>;

        virtualinvoke $r131.<com.android.internal.widget.DrawableHolder: void removeAnimationFor(java.lang.String)>("y");

        $r132 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo>;

        virtualinvoke $r132.<com.android.internal.widget.DrawableHolder: void removeAnimationFor(java.lang.String)>("scaleX");

        $r129 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo>;

        virtualinvoke $r129.<com.android.internal.widget.DrawableHolder: void removeAnimationFor(java.lang.String)>("scaleY");

        $r130 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo>;

        virtualinvoke $r130.<com.android.internal.widget.DrawableHolder: void removeAnimationFor(java.lang.String)>("alpha");

        $r156 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo>;

        $f20 = r0.<com.android.internal.widget.WaveView: float mLockCenterX>;

        virtualinvoke $r156.<com.android.internal.widget.DrawableHolder: void setX(float)>($f20);

        $r155 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo>;

        $f19 = r0.<com.android.internal.widget.WaveView: float mLockCenterY>;

        virtualinvoke $r155.<com.android.internal.widget.DrawableHolder: void setY(float)>($f19);

        $r158 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo>;

        virtualinvoke $r158.<com.android.internal.widget.DrawableHolder: void setScaleX(float)>(0.1F);

        $r159 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo>;

        virtualinvoke $r159.<com.android.internal.widget.DrawableHolder: void setScaleY(float)>(0.1F);

        $r157 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo>;

        virtualinvoke $r157.<com.android.internal.widget.DrawableHolder: void setAlpha(float)>(0.0F);

        $r161 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo>;

        $f21 = r0.<com.android.internal.widget.WaveView: float mLockCenterX>;

        virtualinvoke $r161.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(300L, 100L, "x", $f21, 1);

        $r160 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo>;

        $f22 = r0.<com.android.internal.widget.WaveView: float mLockCenterY>;

        virtualinvoke $r160.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(300L, 100L, "y", $f22, 1);

        $r166 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo>;

        virtualinvoke $r166.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(300L, 100L, "scaleX", 1.0F, 1);

        $r164 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo>;

        virtualinvoke $r164.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(300L, 100L, "scaleY", 1.0F, 1);

        $r146 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo>;

        virtualinvoke $r146.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(300L, 100L, "alpha", 1.0F, 1);

        $r144 = r0.<com.android.internal.widget.WaveView: java.lang.Runnable mLockTimerActions>;

        virtualinvoke r0.<com.android.internal.widget.WaveView: boolean removeCallbacks(java.lang.Runnable)>($r144);

        r0.<com.android.internal.widget.WaveView: int mLockState> = 1;

        goto label01;

     label07:
        r0.<com.android.internal.widget.WaveView: long mWaveTimerDelay> = 100L;

        goto label01;

     label08:
        $r99 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r99.<com.android.internal.widget.DrawableHolder: void removeAnimationFor(java.lang.String)>("x");

        $r98 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r98.<com.android.internal.widget.DrawableHolder: void removeAnimationFor(java.lang.String)>("y");

        $r101 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r101.<com.android.internal.widget.DrawableHolder: void removeAnimationFor(java.lang.String)>("scaleX");

        $r100 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r100.<com.android.internal.widget.DrawableHolder: void removeAnimationFor(java.lang.String)>("scaleY");

        $r96 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r96.<com.android.internal.widget.DrawableHolder: void removeAnimationFor(java.lang.String)>("alpha");

        $r97 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        $f13 = r0.<com.android.internal.widget.WaveView: float mLockCenterX>;

        $f14 = 182.0F + $f13;

        virtualinvoke $r97.<com.android.internal.widget.DrawableHolder: void setX(float)>($f14);

        $r93 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        $f12 = r0.<com.android.internal.widget.WaveView: float mLockCenterY>;

        virtualinvoke $r93.<com.android.internal.widget.DrawableHolder: void setY(float)>($f12);

        $r95 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r95.<com.android.internal.widget.DrawableHolder: void setScaleX(float)>(0.1F);

        $r94 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r94.<com.android.internal.widget.DrawableHolder: void setScaleY(float)>(0.1F);

        $r90 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r90.<com.android.internal.widget.DrawableHolder: void setAlpha(float)>(0.0F);

        $r89 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r89.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(300L, 100L, "scaleX", 1.0F, 0);

        $r91 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r91.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(300L, 100L, "scaleY", 1.0F, 0);

        $r112 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r112.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(300L, 100L, "alpha", 1.0F, 0);

        $r114 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockRing>;

        virtualinvoke $r114.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(300L, 0L, "scaleX", 1.0F, 1);

        $r108 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockRing>;

        virtualinvoke $r108.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(300L, 0L, "scaleY", 1.0F, 1);

        $r110 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockRing>;

        virtualinvoke $r110.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(300L, 0L, "alpha", 1.0F, 1);

        r0.<com.android.internal.widget.WaveView: int mLockState> = 3;

        goto label01;

     label09:
        $i17 = r0.<com.android.internal.widget.WaveView: int mSnapRadius>;

        if i0 <= $i17 goto label11;

        r0.<com.android.internal.widget.WaveView: boolean mFinishWaves> = 1;

        if z0 == 0 goto label10;

        $r86 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo>;

        virtualinvoke $r86.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(0L, 0L, "x", f2, 1);

        $r77 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo>;

        virtualinvoke $r77.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(0L, 0L, "y", f3, 1);

        $r75 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo>;

        virtualinvoke $r75.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(0L, 0L, "scaleX", 1.0F, 1);

        $r81 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo>;

        virtualinvoke $r81.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(0L, 0L, "scaleY", 1.0F, 1);

        $r79 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo>;

        virtualinvoke $r79.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(0L, 0L, "alpha", 1.0F, 1);

        goto label01;

     label10:
        r0.<com.android.internal.widget.WaveView: int mLockState> = 4;

        goto label01;

     label11:
        $z4 = r0.<com.android.internal.widget.WaveView: boolean mWavesRunning>;

        if $z4 != 0 goto label12;

        r0.<com.android.internal.widget.WaveView: boolean mWavesRunning> = 1;

        r0.<com.android.internal.widget.WaveView: boolean mFinishWaves> = 0;

        $r88 = r0.<com.android.internal.widget.WaveView: java.lang.Runnable mAddWaveAction>;

        $l18 = r0.<com.android.internal.widget.WaveView: long mWaveTimerDelay>;

        virtualinvoke r0.<com.android.internal.widget.WaveView: boolean postDelayed(java.lang.Runnable,long)>($r88, $l18);

     label12:
        $r65 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo>;

        virtualinvoke $r65.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(0L, 0L, "x", f0, 1);

        $r63 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo>;

        virtualinvoke $r63.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(0L, 0L, "y", f1, 1);

        $r68 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo>;

        virtualinvoke $r68.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(0L, 0L, "scaleX", 1.0F, 1);

        $r66 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo>;

        virtualinvoke $r66.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(0L, 0L, "scaleY", 1.0F, 1);

        $r85 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo>;

        virtualinvoke $r85.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(0L, 0L, "alpha", 1.0F, 1);

        goto label01;

     label13:
        $i10 = r0.<com.android.internal.widget.WaveView: int mSnapRadius>;

        if i0 <= $i10 goto label18;

        i1 = 0;

     label14:
        $r11 = r0.<com.android.internal.widget.WaveView: java.util.ArrayList mLightWaves>;

        i2 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        if i1 >= i2 goto label15;

        $r55 = r0.<com.android.internal.widget.WaveView: java.util.ArrayList mLightWaves>;

        $r56 = virtualinvoke $r55.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r1 = (com.android.internal.widget.DrawableHolder) $r56;

        $i13 = i1 + 6;

        $i12 = r0.<com.android.internal.widget.WaveView: int mCurrentWave>;

        $i14 = $i13 - $i12;

        $l16 = (long) $i14;

        $l15 = 1000L * $l16;

        l5 = $l15 / 10L;

        virtualinvoke r1.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(200L, l5, "x", f2, 1);

        virtualinvoke r1.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(200L, l5, "y", f3, 1);

        virtualinvoke r1.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(200L, l5, "scaleX", 0.1F, 1);

        virtualinvoke r1.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(200L, l5, "scaleY", 0.1F, 1);

        virtualinvoke r1.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(200L, l5, "alpha", 0.0F, 1);

        i1 = i1 + 1;

        goto label14;

     label15:
        i4 = 0;

     label16:
        $r10 = r0.<com.android.internal.widget.WaveView: java.util.ArrayList mLightWaves>;

        i3 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        if i4 >= i3 goto label17;

        $r52 = r0.<com.android.internal.widget.WaveView: java.util.ArrayList mLightWaves>;

        $r53 = virtualinvoke $r52.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r54 = (com.android.internal.widget.DrawableHolder) $r53;

        virtualinvoke $r54.<com.android.internal.widget.DrawableHolder: void startAnimations(android.animation.ValueAnimator$AnimatorUpdateListener)>(r0);

        i4 = i4 + 1;

        goto label16;

     label17:
        $r8 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockRing>;

        virtualinvoke $r8.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(200L, 0L, "x", f2, 0);

        $r6 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockRing>;

        virtualinvoke $r6.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(200L, 0L, "y", f3, 0);

        $r18 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockRing>;

        virtualinvoke $r18.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(200L, 0L, "scaleX", 0.1F, 0);

        $r16 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockRing>;

        virtualinvoke $r16.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(200L, 0L, "scaleY", 0.1F, 0);

        $r14 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockRing>;

        virtualinvoke $r14.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(200L, 0L, "alpha", 0.0F, 0);

        $r12 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockRing>;

        virtualinvoke $r12.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(200L, 200L, "alpha", 0.0F, 0);

        $r27 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r27.<com.android.internal.widget.DrawableHolder: void removeAnimationFor(java.lang.String)>("x");

        $r26 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r26.<com.android.internal.widget.DrawableHolder: void removeAnimationFor(java.lang.String)>("y");

        $r25 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r25.<com.android.internal.widget.DrawableHolder: void removeAnimationFor(java.lang.String)>("scaleX");

        $r24 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r24.<com.android.internal.widget.DrawableHolder: void removeAnimationFor(java.lang.String)>("scaleY");

        $r23 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r23.<com.android.internal.widget.DrawableHolder: void removeAnimationFor(java.lang.String)>("alpha");

        $r22 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r22.<com.android.internal.widget.DrawableHolder: void setX(float)>(f2);

        $r21 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r21.<com.android.internal.widget.DrawableHolder: void setY(float)>(f3);

        $r20 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r20.<com.android.internal.widget.DrawableHolder: void setScaleX(float)>(0.1F);

        $r35 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r35.<com.android.internal.widget.DrawableHolder: void setScaleY(float)>(0.1F);

        $r34 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r34.<com.android.internal.widget.DrawableHolder: void setAlpha(float)>(0.0F);

        $r33 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r33.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(200L, 0L, "x", f2, 1);

        $r31 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r31.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(200L, 0L, "y", f3, 1);

        $r29 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r29.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(200L, 0L, "scaleX", 1.0F, 1);

        $r45 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r45.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(200L, 0L, "scaleY", 1.0F, 1);

        $r47 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r47.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(200L, 0L, "alpha", 1.0F, 1);

        $r49 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r49.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(200L, 200L, "scaleX", 3.0F, 0);

        $r51 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r51.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(200L, 200L, "scaleY", 3.0F, 0);

        $r37 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockDefault>;

        virtualinvoke $r37.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(200L, 200L, "alpha", 0.0F, 0);

        $r39 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo>;

        virtualinvoke $r39.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(200L, 0L, "x", f2, 0);

        $r41 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo>;

        virtualinvoke $r41.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(200L, 0L, "y", f3, 0);

        $r43 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo>;

        virtualinvoke $r43.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(200L, 200L, "scaleX", 3.0F, 0);

        $r57 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo>;

        virtualinvoke $r57.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(200L, 200L, "scaleY", 3.0F, 0);

        $r59 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo>;

        virtualinvoke $r59.<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>(200L, 200L, "alpha", 0.0F, 0);

        $r61 = r0.<com.android.internal.widget.WaveView: java.lang.Runnable mLockTimerActions>;

        virtualinvoke r0.<com.android.internal.widget.WaveView: boolean removeCallbacks(java.lang.Runnable)>($r61);

        $r62 = r0.<com.android.internal.widget.WaveView: java.lang.Runnable mLockTimerActions>;

        virtualinvoke r0.<com.android.internal.widget.WaveView: boolean postDelayed(java.lang.Runnable,long)>($r62, 3000L);

        specialinvoke r0.<com.android.internal.widget.WaveView: void dispatchTriggerEvent(int)>(10);

        r0.<com.android.internal.widget.WaveView: int mLockState> = 5;

        goto label01;

     label18:
        r0.<com.android.internal.widget.WaveView: int mLockState> = 0;

        goto label01;

     label19:
        $r2 = r0.<com.android.internal.widget.WaveView: java.lang.Runnable mAddWaveAction>;

        virtualinvoke r0.<com.android.internal.widget.WaveView: boolean removeCallbacks(java.lang.Runnable)>($r2);

        goto label01;
    }

    android.graphics.drawable.BitmapDrawable createDrawable(int)
    {
        com.android.internal.widget.WaveView r0;
        int i0;
        android.content.res.Resources r1;
        android.graphics.drawable.BitmapDrawable $r2;
        android.graphics.Bitmap $r3;

        r0 := @this: com.android.internal.widget.WaveView;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<com.android.internal.widget.WaveView: android.content.res.Resources getResources()>();

        $r2 = new android.graphics.drawable.BitmapDrawable;

        $r3 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>(r1, i0);

        specialinvoke $r2.<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>(r1, $r3);

        return $r2;
    }

    protected int getSuggestedMinimumHeight()
    {
        com.android.internal.widget.WaveView r0;
        com.android.internal.widget.DrawableHolder $r1, $r2;
        int $i0, $i1, $i2;

        r0 := @this: com.android.internal.widget.WaveView;

        $r1 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockRing>;

        $i0 = virtualinvoke $r1.<com.android.internal.widget.DrawableHolder: int getHeight()>();

        $r2 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo>;

        $i1 = virtualinvoke $r2.<com.android.internal.widget.DrawableHolder: int getHeight()>();

        $i2 = $i0 + $i1;

        return $i2;
    }

    protected int getSuggestedMinimumWidth()
    {
        com.android.internal.widget.WaveView r0;
        com.android.internal.widget.DrawableHolder $r1, $r2;
        int $i0, $i1, $i2;

        r0 := @this: com.android.internal.widget.WaveView;

        $r1 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockRing>;

        $i0 = virtualinvoke $r1.<com.android.internal.widget.DrawableHolder: int getWidth()>();

        $r2 = r0.<com.android.internal.widget.WaveView: com.android.internal.widget.DrawableHolder mUnlockHalo>;

        $i1 = virtualinvoke $r2.<com.android.internal.widget.DrawableHolder: int getWidth()>();

        $i2 = $i0 + $i1;

        return $i2;
    }

    public void onAnimationUpdate(android.animation.ValueAnimator)
    {
        com.android.internal.widget.WaveView r0;
        android.animation.ValueAnimator r1;

        r0 := @this: com.android.internal.widget.WaveView;

        r1 := @parameter0: android.animation.ValueAnimator;

        virtualinvoke r0.<com.android.internal.widget.WaveView: void invalidate()>();

        return;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        com.android.internal.widget.WaveView r0;
        android.graphics.Canvas r1;
        int i0, i1, $i2, $i3;
        boolean $z0;
        float $f0, $f1;
        java.util.ArrayList $r2, $r3, $r4, $r7;
        java.lang.Object $r5, $r8;
        com.android.internal.widget.DrawableHolder $r6, $r9;

        r0 := @this: com.android.internal.widget.WaveView;

        r1 := @parameter0: android.graphics.Canvas;

        $f1 = r0.<com.android.internal.widget.WaveView: float mMouseX>;

        $f0 = r0.<com.android.internal.widget.WaveView: float mMouseY>;

        $z0 = r0.<com.android.internal.widget.WaveView: boolean mFingerDown>;

        specialinvoke r0.<com.android.internal.widget.WaveView: void waveUpdateFrame(float,float,boolean)>($f1, $f0, $z0);

        i0 = 0;

     label1:
        $r2 = r0.<com.android.internal.widget.WaveView: java.util.ArrayList mDrawables>;

        $i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i0 >= $i2 goto label2;

        $r7 = r0.<com.android.internal.widget.WaveView: java.util.ArrayList mDrawables>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r9 = (com.android.internal.widget.DrawableHolder) $r8;

        virtualinvoke $r9.<com.android.internal.widget.DrawableHolder: void draw(android.graphics.Canvas)>(r1);

        i0 = i0 + 1;

        goto label1;

     label2:
        i1 = 0;

     label3:
        $r3 = r0.<com.android.internal.widget.WaveView: java.util.ArrayList mLightWaves>;

        $i3 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i1 >= $i3 goto label4;

        $r4 = r0.<com.android.internal.widget.WaveView: java.util.ArrayList mLightWaves>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r6 = (com.android.internal.widget.DrawableHolder) $r5;

        virtualinvoke $r6.<com.android.internal.widget.DrawableHolder: void draw(android.graphics.Canvas)>(r1);

        i1 = i1 + 1;

        goto label3;

     label4:
        return;
    }

    public boolean onHoverEvent(android.view.MotionEvent)
    {
        com.android.internal.widget.WaveView r0;
        android.view.MotionEvent r1;
        int i0;
        android.content.Context $r2;
        android.view.accessibility.AccessibilityManager $r3;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.widget.WaveView;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<com.android.internal.widget.WaveView: android.content.Context mContext>;

        $r3 = staticinvoke <android.view.accessibility.AccessibilityManager: android.view.accessibility.AccessibilityManager getInstance(android.content.Context)>($r2);

        $z0 = virtualinvoke $r3.<android.view.accessibility.AccessibilityManager: boolean isTouchExplorationEnabled()>();

        if $z0 == 0 goto label2;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        tableswitch(i0)
        {
            case 7: goto label4;
            case 8: goto label1;
            case 9: goto label3;
            case 10: goto label5;
            default: goto label1;
        };

     label1:
        virtualinvoke r0.<com.android.internal.widget.WaveView: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        virtualinvoke r1.<android.view.MotionEvent: void setAction(int)>(i0);

     label2:
        $z1 = specialinvoke r0.<android.view.View: boolean onHoverEvent(android.view.MotionEvent)>(r1);

        return $z1;

     label3:
        virtualinvoke r1.<android.view.MotionEvent: void setAction(int)>(0);

        goto label1;

     label4:
        virtualinvoke r1.<android.view.MotionEvent: void setAction(int)>(2);

        goto label1;

     label5:
        virtualinvoke r1.<android.view.MotionEvent: void setAction(int)>(1);

        goto label1;
    }

    protected void onMeasure(int, int)
    {
        com.android.internal.widget.WaveView r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9;

        r0 := @this: com.android.internal.widget.WaveView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);

        i4 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        i5 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i1);

        if i2 != -2147483648 goto label3;

        $i9 = virtualinvoke r0.<com.android.internal.widget.WaveView: int getSuggestedMinimumWidth()>();

        i6 = staticinvoke <java.lang.Math: int min(int,int)>(i4, $i9);

     label1:
        if i3 != -2147483648 goto label5;

        $i8 = virtualinvoke r0.<com.android.internal.widget.WaveView: int getSuggestedMinimumWidth()>();

        i7 = staticinvoke <java.lang.Math: int min(int,int)>(i5, $i8);

     label2:
        virtualinvoke r0.<com.android.internal.widget.WaveView: void setMeasuredDimension(int,int)>(i6, i7);

        return;

     label3:
        if i2 != 1073741824 goto label4;

        i6 = i4;

        goto label1;

     label4:
        i6 = virtualinvoke r0.<com.android.internal.widget.WaveView: int getSuggestedMinimumWidth()>();

        goto label1;

     label5:
        if i3 != 1073741824 goto label6;

        i7 = i5;

        goto label2;

     label6:
        i7 = virtualinvoke r0.<com.android.internal.widget.WaveView: int getSuggestedMinimumHeight()>();

        goto label2;
    }

    protected void onSizeChanged(int, int, int, int)
    {
        com.android.internal.widget.WaveView r0;
        int i0, i1, i2, i3;
        float $f0, $f1, $f2, $f3;

        r0 := @this: com.android.internal.widget.WaveView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $f0 = (float) i0;

        $f1 = 0.5F * $f0;

        r0.<com.android.internal.widget.WaveView: float mLockCenterX> = $f1;

        $f2 = (float) i1;

        $f3 = 0.5F * $f2;

        r0.<com.android.internal.widget.WaveView: float mLockCenterY> = $f3;

        specialinvoke r0.<android.view.View: void onSizeChanged(int,int,int,int)>(i0, i1, i2, i3);

        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.android.internal.widget.WaveView r0;
        android.view.MotionEvent r1;
        int i0;
        boolean z0, $z1, $z3;
        float $f0, $f1, $f2, $f3;
        java.lang.Runnable $r2, $r3;

        r0 := @this: com.android.internal.widget.WaveView;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        r0.<com.android.internal.widget.WaveView: float mMouseX> = $f0;

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        r0.<com.android.internal.widget.WaveView: float mMouseY> = $f1;

        z0 = 0;

        tableswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label4;
            case 2: goto label3;
            case 3: goto label5;
            default: goto label1;
        };

     label1:
        virtualinvoke r0.<com.android.internal.widget.WaveView: void invalidate()>();

        if z0 == 0 goto label6;

        return 1;

     label2:
        $r3 = r0.<com.android.internal.widget.WaveView: java.lang.Runnable mLockTimerActions>;

        virtualinvoke r0.<com.android.internal.widget.WaveView: boolean removeCallbacks(java.lang.Runnable)>($r3);

        r0.<com.android.internal.widget.WaveView: boolean mFingerDown> = 1;

        specialinvoke r0.<com.android.internal.widget.WaveView: void tryTransitionToStartAttemptState(android.view.MotionEvent)>(r1);

        z0 = 1;

        goto label1;

     label3:
        specialinvoke r0.<com.android.internal.widget.WaveView: void tryTransitionToStartAttemptState(android.view.MotionEvent)>(r1);

        z0 = 1;

        goto label1;

     label4:
        r0.<com.android.internal.widget.WaveView: boolean mFingerDown> = 0;

        $r2 = r0.<com.android.internal.widget.WaveView: java.lang.Runnable mLockTimerActions>;

        virtualinvoke r0.<com.android.internal.widget.WaveView: boolean postDelayed(java.lang.Runnable,long)>($r2, 3000L);

        specialinvoke r0.<com.android.internal.widget.WaveView: void setGrabbedState(int)>(0);

        $f3 = r0.<com.android.internal.widget.WaveView: float mMouseX>;

        $f2 = r0.<com.android.internal.widget.WaveView: float mMouseY>;

        $z3 = r0.<com.android.internal.widget.WaveView: boolean mFingerDown>;

        specialinvoke r0.<com.android.internal.widget.WaveView: void waveUpdateFrame(float,float,boolean)>($f3, $f2, $z3);

        z0 = 1;

        goto label1;

     label5:
        r0.<com.android.internal.widget.WaveView: boolean mFingerDown> = 0;

        z0 = 1;

        goto label1;

     label6:
        $z1 = specialinvoke r0.<android.view.View: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        return $z1;
    }

    public void reset()
    {
        com.android.internal.widget.WaveView r0;

        r0 := @this: com.android.internal.widget.WaveView;

        r0.<com.android.internal.widget.WaveView: int mLockState> = 0;

        virtualinvoke r0.<com.android.internal.widget.WaveView: void invalidate()>();

        return;
    }

    public void setOnTriggerListener(com.android.internal.widget.WaveView$OnTriggerListener)
    {
        com.android.internal.widget.WaveView r0;
        com.android.internal.widget.WaveView$OnTriggerListener r1;

        r0 := @this: com.android.internal.widget.WaveView;

        r1 := @parameter0: com.android.internal.widget.WaveView$OnTriggerListener;

        r0.<com.android.internal.widget.WaveView: com.android.internal.widget.WaveView$OnTriggerListener mOnTriggerListener> = r1;

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.widget.WaveView: long WAVE_DURATION> = 2000L;

        <com.android.internal.widget.WaveView: long WAVE_DELAY> = 100L;

        <com.android.internal.widget.WaveView: int WAVE_COUNT> = 20;

        <com.android.internal.widget.WaveView: long VIBRATE_SHORT> = 20L;

        <com.android.internal.widget.WaveView: long VIBRATE_LONG> = 20L;

        <com.android.internal.widget.WaveView: java.lang.String TAG> = "WaveView";

        <com.android.internal.widget.WaveView: int STATE_UNLOCK_SUCCESS> = 5;

        <com.android.internal.widget.WaveView: int STATE_UNLOCK_ATTEMPT> = 4;

        <com.android.internal.widget.WaveView: int STATE_START_ATTEMPT> = 2;

        <com.android.internal.widget.WaveView: int STATE_RESET_LOCK> = 0;

        <com.android.internal.widget.WaveView: int STATE_READY> = 1;

        <com.android.internal.widget.WaveView: int STATE_ATTEMPTING> = 3;

        <com.android.internal.widget.WaveView: long SHORT_DELAY> = 100L;

        <com.android.internal.widget.WaveView: long RING_DELAY> = 1300L;

        <com.android.internal.widget.WaveView: long RESET_TIMEOUT> = 3000L;

        <com.android.internal.widget.WaveView: float GRAB_HANDLE_RADIUS_SCALE_ACCESSIBILITY_ENABLED> = 1.0F;

        <com.android.internal.widget.WaveView: float GRAB_HANDLE_RADIUS_SCALE_ACCESSIBILITY_DISABLED> = 0.5F;

        <com.android.internal.widget.WaveView: long FINAL_DURATION> = 200L;

        <com.android.internal.widget.WaveView: long FINAL_DELAY> = 200L;

        <com.android.internal.widget.WaveView: long DURATION> = 300L;

        <com.android.internal.widget.WaveView: long DELAY_INCREMENT2> = 12L;

        <com.android.internal.widget.WaveView: long DELAY_INCREMENT> = 15L;

        <com.android.internal.widget.WaveView: boolean DBG> = 0;

        return;
    }
}
