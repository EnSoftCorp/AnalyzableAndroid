public abstract class javax.xml.transform.TransformerFactory extends java.lang.Object
{

    protected void <init>()
    {
        javax.xml.transform.TransformerFactory r0;

        r0 := @this: javax.xml.transform.TransformerFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static javax.xml.transform.TransformerFactory newInstance() throws javax.xml.transform.TransformerFactoryConfigurationError
    {
        javax.xml.transform.TransformerFactory r1;
        java.lang.Class $r2;
        java.lang.Object $r3;
        java.lang.Exception $r4;
        java.lang.NoClassDefFoundError $r5;

     label1:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.apache.xalan.processor.TransformerFactoryImpl");

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>();

        r1 = (javax.xml.transform.TransformerFactory) $r3;

     label2:
        return r1;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.NoClassDefFoundError;

        specialinvoke $r5.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>("org.apache.xalan.processor.TransformerFactoryImpl");

        throw $r5;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static javax.xml.transform.TransformerFactory newInstance(java.lang.String, java.lang.ClassLoader) throws javax.xml.transform.TransformerFactoryConfigurationError
    {
        java.lang.String r0;
        java.lang.ClassLoader r1;
        java.lang.IllegalAccessException r2, $r11;
        java.lang.InstantiationException r3, $r16;
        java.lang.ClassNotFoundException r4, $r14;
        java.lang.Class r5, r6;
        java.lang.Object $r7;
        javax.xml.transform.TransformerFactory $r8;
        java.lang.Thread $r9;
        javax.xml.transform.TransformerFactoryConfigurationError $r10, $r12, $r13, $r15;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.ClassLoader;

        if r0 != null goto label1;

        $r10 = new javax.xml.transform.TransformerFactoryConfigurationError;

        specialinvoke $r10.<javax.xml.transform.TransformerFactoryConfigurationError: void <init>(java.lang.String)>("factoryClassName == null");

        throw $r10;

     label1:
        if r1 != null goto label2;

        $r9 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r1 = virtualinvoke $r9.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

     label2:
        if r1 == null goto label5;

     label3:
        r6 = virtualinvoke r1.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r0);

     label4:
        $r7 = virtualinvoke r6.<java.lang.Class: java.lang.Object newInstance()>();

        $r8 = (javax.xml.transform.TransformerFactory) $r7;

        return $r8;

     label5:
        r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label6:
        r6 = r5;

        goto label4;

     label7:
        $r14 := @caughtexception;

        r4 = $r14;

        $r13 = new javax.xml.transform.TransformerFactoryConfigurationError;

        specialinvoke $r13.<javax.xml.transform.TransformerFactoryConfigurationError: void <init>(java.lang.Exception)>(r4);

        throw $r13;

     label8:
        $r16 := @caughtexception;

        r3 = $r16;

        $r15 = new javax.xml.transform.TransformerFactoryConfigurationError;

        specialinvoke $r15.<javax.xml.transform.TransformerFactoryConfigurationError: void <init>(java.lang.Exception)>(r3);

        throw $r15;

     label9:
        $r11 := @caughtexception;

        r2 = $r11;

        $r12 = new javax.xml.transform.TransformerFactoryConfigurationError;

        specialinvoke $r12.<javax.xml.transform.TransformerFactoryConfigurationError: void <init>(java.lang.Exception)>(r2);

        throw $r12;

        catch java.lang.ClassNotFoundException from label3 to label4 with label7;
        catch java.lang.InstantiationException from label3 to label4 with label8;
        catch java.lang.IllegalAccessException from label3 to label4 with label9;
        catch java.lang.ClassNotFoundException from label4 to label5 with label7;
        catch java.lang.InstantiationException from label4 to label5 with label8;
        catch java.lang.IllegalAccessException from label4 to label5 with label9;
        catch java.lang.ClassNotFoundException from label5 to label6 with label7;
        catch java.lang.InstantiationException from label5 to label6 with label8;
        catch java.lang.IllegalAccessException from label5 to label6 with label9;
    }

    public abstract javax.xml.transform.Source getAssociatedStylesheet(javax.xml.transform.Source, java.lang.String, java.lang.String, java.lang.String) throws javax.xml.transform.TransformerConfigurationException;

    public abstract java.lang.Object getAttribute(java.lang.String);

    public abstract javax.xml.transform.ErrorListener getErrorListener();

    public abstract boolean getFeature(java.lang.String);

    public abstract javax.xml.transform.URIResolver getURIResolver();

    public abstract javax.xml.transform.Templates newTemplates(javax.xml.transform.Source) throws javax.xml.transform.TransformerConfigurationException;

    public abstract javax.xml.transform.Transformer newTransformer() throws javax.xml.transform.TransformerConfigurationException;

    public abstract javax.xml.transform.Transformer newTransformer(javax.xml.transform.Source) throws javax.xml.transform.TransformerConfigurationException;

    public abstract void setAttribute(java.lang.String, java.lang.Object);

    public abstract void setErrorListener(javax.xml.transform.ErrorListener);

    public abstract void setFeature(java.lang.String, boolean) throws javax.xml.transform.TransformerConfigurationException;

    public abstract void setURIResolver(javax.xml.transform.URIResolver);
}
