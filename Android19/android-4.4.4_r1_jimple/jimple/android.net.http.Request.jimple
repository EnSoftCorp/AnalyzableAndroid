class android.net.http.Request extends java.lang.Object
{
    private static final java.lang.String ACCEPT_ENCODING_HEADER;
    private static final java.lang.String CONTENT_LENGTH_HEADER;
    private static final java.lang.String HOST_HEADER;
    private static org.apache.http.protocol.RequestContent requestContentProcessor;
    private int mBodyLength;
    private java.io.InputStream mBodyProvider;
    volatile boolean mCancelled;
    private final java.lang.Object mClientResource;
    private android.net.http.Connection mConnection;
    android.net.http.EventHandler mEventHandler;
    int mFailCount;
    org.apache.http.HttpHost mHost;
    org.apache.http.message.BasicHttpRequest mHttpRequest;
    private boolean mLoadingPaused;
    java.lang.String mPath;
    org.apache.http.HttpHost mProxyHost;
    private int mReceivedBytes;

    static void <clinit>()
    {
        org.apache.http.protocol.RequestContent $r0;

        <android.net.http.Request: java.lang.String HOST_HEADER> = "Host";

        <android.net.http.Request: java.lang.String CONTENT_LENGTH_HEADER> = "content-length";

        <android.net.http.Request: java.lang.String ACCEPT_ENCODING_HEADER> = "Accept-Encoding";

        $r0 = new org.apache.http.protocol.RequestContent;

        specialinvoke $r0.<org.apache.http.protocol.RequestContent: void <init>()>();

        <android.net.http.Request: org.apache.http.protocol.RequestContent requestContentProcessor> = $r0;

        return;
    }

    void <init>(java.lang.String, org.apache.http.HttpHost, org.apache.http.HttpHost, java.lang.String, java.io.InputStream, int, android.net.http.EventHandler, java.util.Map)
    {
        android.net.http.Request r0;
        java.lang.String r1, r4, $r10, $r11, $r12, $r13;
        org.apache.http.HttpHost r2, r3;
        java.io.InputStream r5;
        int i0;
        android.net.http.EventHandler r6;
        java.util.Map r7;
        java.lang.Object $r8;
        org.apache.http.message.BasicHttpEntityEnclosingRequest $r9;
        boolean $z0;
        org.apache.http.message.BasicHttpRequest $r14;

        r0 := @this: android.net.http.Request;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.http.HttpHost;

        r3 := @parameter2: org.apache.http.HttpHost;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.io.InputStream;

        i0 := @parameter5: int;

        r6 := @parameter6: android.net.http.EventHandler;

        r7 := @parameter7: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.http.Request: boolean mCancelled> = 0;

        r0.<android.net.http.Request: int mFailCount> = 0;

        r0.<android.net.http.Request: int mReceivedBytes> = 0;

        $r8 = new java.lang.Object;

        specialinvoke $r8.<java.lang.Object: void <init>()>();

        r0.<android.net.http.Request: java.lang.Object mClientResource> = $r8;

        r0.<android.net.http.Request: boolean mLoadingPaused> = 0;

        r0.<android.net.http.Request: android.net.http.EventHandler mEventHandler> = r6;

        r0.<android.net.http.Request: org.apache.http.HttpHost mHost> = r2;

        r0.<android.net.http.Request: org.apache.http.HttpHost mProxyHost> = r3;

        r0.<android.net.http.Request: java.lang.String mPath> = r4;

        r0.<android.net.http.Request: java.io.InputStream mBodyProvider> = r5;

        r0.<android.net.http.Request: int mBodyLength> = i0;

        if r5 != null goto label2;

        $r12 = "POST";

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z0 != 0 goto label2;

        $r14 = new org.apache.http.message.BasicHttpRequest;

        $r13 = virtualinvoke r0.<android.net.http.Request: java.lang.String getUri()>();

        specialinvoke $r14.<org.apache.http.message.BasicHttpRequest: void <init>(java.lang.String,java.lang.String)>(r1, $r13);

        r0.<android.net.http.Request: org.apache.http.message.BasicHttpRequest mHttpRequest> = $r14;

     label1:
        $r11 = virtualinvoke r0.<android.net.http.Request: java.lang.String getHostPort()>();

        virtualinvoke r0.<android.net.http.Request: void addHeader(java.lang.String,java.lang.String)>("Host", $r11);

        virtualinvoke r0.<android.net.http.Request: void addHeader(java.lang.String,java.lang.String)>("Accept-Encoding", "gzip");

        virtualinvoke r0.<android.net.http.Request: void addHeaders(java.util.Map)>(r7);

        return;

     label2:
        $r9 = new org.apache.http.message.BasicHttpEntityEnclosingRequest;

        $r10 = virtualinvoke r0.<android.net.http.Request: java.lang.String getUri()>();

        specialinvoke $r9.<org.apache.http.message.BasicHttpEntityEnclosingRequest: void <init>(java.lang.String,java.lang.String)>(r1, $r10);

        r0.<android.net.http.Request: org.apache.http.message.BasicHttpRequest mHttpRequest> = $r9;

        if r5 == null goto label1;

        specialinvoke r0.<android.net.http.Request: void setBodyProvider(java.io.InputStream,int)>(r5, i0);

        goto label1;
    }

    private static boolean canResponseHaveBody(org.apache.http.HttpRequest, int)
    {
        org.apache.http.HttpRequest r0;
        int i0;
        java.lang.String $r1, $r3;
        org.apache.http.RequestLine $r2;
        boolean $z0;

        r0 := @parameter0: org.apache.http.HttpRequest;

        i0 := @parameter1: int;

        $r1 = "HEAD";

        $r2 = interfaceinvoke r0.<org.apache.http.HttpRequest: org.apache.http.RequestLine getRequestLine()>();

        $r3 = interfaceinvoke $r2.<org.apache.http.RequestLine: java.lang.String getMethod()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        if $z0 == 0 goto label2;

     label1:
        return 0;

     label2:
        if i0 < 200 goto label1;

        if i0 == 204 goto label1;

        if i0 == 304 goto label1;

        return 1;
    }

    private void setBodyProvider(java.io.InputStream, int)
    {
        android.net.http.Request r0;
        java.io.InputStream r1;
        int i0;
        boolean $z0;
        org.apache.http.message.BasicHttpRequest $r2;
        org.apache.http.entity.InputStreamEntity $r3;
        long $l1;
        org.apache.http.message.BasicHttpEntityEnclosingRequest $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: android.net.http.Request;

        r1 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r1.<java.io.InputStream: boolean markSupported()>();

        if $z0 != 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("bodyProvider must support mark()");

        throw $r5;

     label1:
        virtualinvoke r1.<java.io.InputStream: void mark(int)>(2147483647);

        $r2 = r0.<android.net.http.Request: org.apache.http.message.BasicHttpRequest mHttpRequest>;

        $r4 = (org.apache.http.message.BasicHttpEntityEnclosingRequest) $r2;

        $r3 = new org.apache.http.entity.InputStreamEntity;

        $l1 = (long) i0;

        specialinvoke $r3.<org.apache.http.entity.InputStreamEntity: void <init>(java.io.InputStream,long)>(r1, $l1);

        virtualinvoke $r4.<org.apache.http.message.BasicHttpEntityEnclosingRequest: void setEntity(org.apache.http.HttpEntity)>($r3);

        return;
    }

    void addHeader(java.lang.String, java.lang.String)
    {
        android.net.http.Request r0;
        java.lang.String r1, r2, r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        java.lang.RuntimeException $r8;
        int $i0;
        org.apache.http.message.BasicHttpRequest $r9;
        java.lang.NullPointerException $r10;

        r0 := @this: android.net.http.Request;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r1 != null goto label1;

        staticinvoke <android.net.http.HttpLog: void e(java.lang.String)>("Null http header name");

        $r10 = new java.lang.NullPointerException;

        specialinvoke $r10.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null http header name");

        throw $r10;

     label1:
        if r2 == null goto label2;

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label3;

     label2:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Null or empty value for header \"");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.net.http.HttpLog: void e(java.lang.String)>(r3);

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>(r3);

        throw $r8;

     label3:
        $r9 = r0.<android.net.http.Request: org.apache.http.message.BasicHttpRequest mHttpRequest>;

        virtualinvoke $r9.<org.apache.http.message.BasicHttpRequest: void addHeader(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    void addHeaders(java.util.Map)
    {
        android.net.http.Request r0;
        java.util.Map r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5, $r6, $r8;
        java.lang.String $r7, $r9;

        r0 := @this: android.net.http.Request;

        r1 := @parameter0: java.util.Map;

        if r1 != null goto label2;

     label1:
        return;

     label2:
        $r4 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r5;

        $r6 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = (java.lang.String) $r6;

        $r8 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (java.lang.String) $r8;

        virtualinvoke r0.<android.net.http.Request: void addHeader(java.lang.String,java.lang.String)>($r7, $r9);

        goto label3;
    }

    void cancel()
    {
        android.net.http.Request r0;
        java.lang.Throwable r1, $r4;
        android.net.http.Connection $r2, $r3;

        r0 := @this: android.net.http.Request;

        entermonitor r0;

     label1:
        r0.<android.net.http.Request: boolean mLoadingPaused> = 0;

        virtualinvoke r0.<java.lang.Object: void notify()>();

        r0.<android.net.http.Request: boolean mCancelled> = 1;

        $r2 = r0.<android.net.http.Request: android.net.http.Connection mConnection>;

        if $r2 == null goto label2;

        $r3 = r0.<android.net.http.Request: android.net.http.Connection mConnection>;

        virtualinvoke $r3.<android.net.http.Connection: void cancel()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void complete()
    {
        android.net.http.Request r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: android.net.http.Request;

        r1 = r0.<android.net.http.Request: java.lang.Object mClientResource>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.net.http.Request: java.lang.Object mClientResource>;

        virtualinvoke $r3.<java.lang.Object: void notifyAll()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void error(int, int)
    {
        android.net.http.Request r0;
        int i0, i1;
        android.net.http.Connection $r1;
        android.content.Context $r2;
        android.net.http.EventHandler $r3;
        java.lang.CharSequence $r4;
        java.lang.String $r5;

        r0 := @this: android.net.http.Request;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r3 = r0.<android.net.http.Request: android.net.http.EventHandler mEventHandler>;

        $r1 = r0.<android.net.http.Request: android.net.http.Connection mConnection>;

        $r2 = $r1.<android.net.http.Connection: android.content.Context mContext>;

        $r4 = virtualinvoke $r2.<android.content.Context: java.lang.CharSequence getText(int)>(i1);

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke $r3.<android.net.http.EventHandler: void error(int,java.lang.String)>(i0, $r5);

        return;
    }

    android.net.http.EventHandler getEventHandler()
    {
        android.net.http.Request r0;
        android.net.http.EventHandler $r1;

        r0 := @this: android.net.http.Request;

        $r1 = r0.<android.net.http.Request: android.net.http.EventHandler mEventHandler>;

        return $r1;
    }

    java.lang.String getHostPort()
    {
        android.net.http.Request r0;
        java.lang.String r1, $r5, $r7;
        int i0;
        org.apache.http.HttpHost $r2, $r3, $r4, $r6;
        boolean $z0, $z1;

        r0 := @this: android.net.http.Request;

        $r2 = r0.<android.net.http.Request: org.apache.http.HttpHost mHost>;

        r1 = virtualinvoke $r2.<org.apache.http.HttpHost: java.lang.String getSchemeName()>();

        $r3 = r0.<android.net.http.Request: org.apache.http.HttpHost mHost>;

        i0 = virtualinvoke $r3.<org.apache.http.HttpHost: int getPort()>();

        if i0 == 80 goto label1;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http");

        if $z1 != 0 goto label2;

     label1:
        if i0 == 443 goto label3;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("https");

        if $z0 == 0 goto label3;

     label2:
        $r6 = r0.<android.net.http.Request: org.apache.http.HttpHost mHost>;

        $r7 = virtualinvoke $r6.<org.apache.http.HttpHost: java.lang.String toHostString()>();

        return $r7;

     label3:
        $r4 = r0.<android.net.http.Request: org.apache.http.HttpHost mHost>;

        $r5 = virtualinvoke $r4.<org.apache.http.HttpHost: java.lang.String getHostName()>();

        return $r5;
    }

    java.lang.String getUri()
    {
        android.net.http.Request r0;
        org.apache.http.HttpHost $r1, $r3, $r6;
        java.lang.String $r2, $r4, $r7, $r10, $r12, $r14;
        boolean $z0;
        java.lang.StringBuilder $r5, $r8, $r9, $r11, $r13;

        r0 := @this: android.net.http.Request;

        $r1 = r0.<android.net.http.Request: org.apache.http.HttpHost mProxyHost>;

        if $r1 == null goto label1;

        $r3 = r0.<android.net.http.Request: org.apache.http.HttpHost mHost>;

        $r4 = virtualinvoke $r3.<org.apache.http.HttpHost: java.lang.String getSchemeName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("https");

        if $z0 == 0 goto label2;

     label1:
        $r2 = r0.<android.net.http.Request: java.lang.String mPath>;

        return $r2;

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = r0.<android.net.http.Request: org.apache.http.HttpHost mHost>;

        $r7 = virtualinvoke $r6.<org.apache.http.HttpHost: java.lang.String getSchemeName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("://");

        $r10 = virtualinvoke r0.<android.net.http.Request: java.lang.String getHostPort()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = r0.<android.net.http.Request: java.lang.String mPath>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;
    }

    public void handleSslErrorResponse(boolean)
    {
        android.net.http.HttpsConnection $r0, r2;
        android.net.http.Request r1;
        boolean z0;
        android.net.http.Connection $r3;

        r1 := @this: android.net.http.Request;

        z0 := @parameter0: boolean;

        $r3 = r1.<android.net.http.Request: android.net.http.Connection mConnection>;

        $r0 = (android.net.http.HttpsConnection) $r3;

        r2 = (android.net.http.HttpsConnection) $r0;

        if r2 == null goto label1;

        virtualinvoke r2.<android.net.http.HttpsConnection: void restartConnection(boolean)>(z0);

     label1:
        return;
    }

    void readResponse(android.net.http.AndroidHttpClientConnection) throws java.io.IOException, org.apache.http.ParseException
    {
        android.net.http.Request r0;
        android.net.http.AndroidHttpClientConnection r1;
        android.net.http.Headers r2, $r16;
        org.apache.http.StatusLine r3;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        org.apache.http.ProtocolVersion r4, $r25;
        boolean z0, z1, z2, z3, $z4;
        org.apache.http.HttpEntity r5;
        java.io.InputStream r6, r8;
        org.apache.http.Header r7;
        byte[] r9;
        java.lang.Throwable r10, r13, $r34, $r37;
        java.io.IOException r11, $r35;
        java.lang.InterruptedException r14, $r33;
        java.util.zip.GZIPInputStream r15, $r28;
        android.net.http.EventHandler $r17, $r20, $r24, $r27, $r36, $r41;
        org.apache.http.message.BasicHttpRequest $r18;
        java.lang.String $r19, $r22, $r23, $r29, $r30, $r39;
        android.net.http.Connection $r21, $r26;
        java.lang.StringBuilder $r31, $r32, $r38;
        java.io.EOFException $r40;

        r0 := @this: android.net.http.Request;

        r1 := @parameter0: android.net.http.AndroidHttpClientConnection;

        $z4 = r0.<android.net.http.Request: boolean mCancelled>;

        if $z4 == 0 goto label01;

        return;

     label01:
        virtualinvoke r1.<android.net.http.AndroidHttpClientConnection: void flush()>();

        $r16 = new android.net.http.Headers;

        specialinvoke $r16.<android.net.http.Headers: void <init>()>();

        r2 = $r16;

     label02:
        r3 = virtualinvoke r1.<android.net.http.AndroidHttpClientConnection: org.apache.http.StatusLine parseResponseHeader(android.net.http.Headers)>(r2);

        i0 = interfaceinvoke r3.<org.apache.http.StatusLine: int getStatusCode()>();

        if i0 < 200 goto label02;

        r4 = interfaceinvoke r3.<org.apache.http.StatusLine: org.apache.http.ProtocolVersion getProtocolVersion()>();

        $r17 = r0.<android.net.http.Request: android.net.http.EventHandler mEventHandler>;

        $i5 = virtualinvoke r4.<org.apache.http.ProtocolVersion: int getMajor()>();

        $i4 = virtualinvoke r4.<org.apache.http.ProtocolVersion: int getMinor()>();

        $r19 = interfaceinvoke r3.<org.apache.http.StatusLine: java.lang.String getReasonPhrase()>();

        interfaceinvoke $r17.<android.net.http.EventHandler: void status(int,int,int,java.lang.String)>($i5, $i4, i0, $r19);

        $r20 = r0.<android.net.http.Request: android.net.http.EventHandler mEventHandler>;

        interfaceinvoke $r20.<android.net.http.EventHandler: void headers(android.net.http.Headers)>(r2);

        $r18 = r0.<android.net.http.Request: org.apache.http.message.BasicHttpRequest mHttpRequest>;

        z0 = staticinvoke <android.net.http.Request: boolean canResponseHaveBody(org.apache.http.HttpRequest,int)>($r18, i0);

        r5 = null;

        if z0 == 0 goto label03;

        r5 = virtualinvoke r1.<android.net.http.AndroidHttpClientConnection: org.apache.http.HttpEntity receiveResponseEntity(android.net.http.Headers)>(r2);

     label03:
        $r22 = "bytes";

        $r23 = virtualinvoke r2.<android.net.http.Headers: java.lang.String getAcceptRanges()>();

        z1 = virtualinvoke $r22.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r23);

        if r5 == null goto label26;

        r6 = interfaceinvoke r5.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        r7 = interfaceinvoke r5.<org.apache.http.HttpEntity: org.apache.http.Header getContentEncoding()>();

        r8 = null;

        r9 = null;

        i1 = 0;

        if r7 == null goto label27;

     label04:
        $r29 = interfaceinvoke r7.<org.apache.http.Header: java.lang.String getValue()>();

        z3 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>("gzip");

     label05:
        r9 = null;

        i1 = 0;

        r8 = null;

        if z3 == 0 goto label27;

     label06:
        $r28 = new java.util.zip.GZIPInputStream;

        specialinvoke $r28.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>(r6);

        r15 = $r28;

     label07:
        r8 = r15;

     label08:
        $r26 = r0.<android.net.http.Request: android.net.http.Connection mConnection>;

        r9 = virtualinvoke $r26.<android.net.http.Connection: byte[] getBuf()>();

     label09:
        i2 = 0;

     label10:
        $i7 = lengthof r9;

        i3 = $i7 / 2;

     label11:
        if i2 == -1 goto label35;

     label12:
        entermonitor r0;

     label13:
        z2 = r0.<android.net.http.Request: boolean mLoadingPaused>;

     label14:
        if z2 == 0 goto label28;

     label15:
        virtualinvoke r0.<java.lang.Object: void wait()>();

     label16:
        goto label13;

     label17:
        $r33 := @caughtexception;

        r14 = $r33;

     label18:
        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Interrupted exception whilst network thread paused at WebCore\'s request. ");

        $r30 = virtualinvoke r14.<java.lang.InterruptedException: java.lang.String getMessage()>();

        $r38 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.net.http.HttpLog: void e(java.lang.String)>($r39);

     label19:
        goto label13;

     label20:
        $r37 := @caughtexception;

        r13 = $r37;

     label21:
        exitmonitor r0;

     label22:
        throw r13;

     label23:
        $r40 := @caughtexception;

        if i1 <= 0 goto label25;

     label24:
        $r41 = r0.<android.net.http.Request: android.net.http.EventHandler mEventHandler>;

        interfaceinvoke $r41.<android.net.http.EventHandler: void data(byte[],int)>(r9, i1);

     label25:
        if r8 == null goto label26;

        virtualinvoke r8.<java.io.InputStream: void close()>();

     label26:
        $r21 = r0.<android.net.http.Request: android.net.http.Connection mConnection>;

        $r25 = interfaceinvoke r3.<org.apache.http.StatusLine: org.apache.http.ProtocolVersion getProtocolVersion()>();

        $i6 = virtualinvoke r2.<android.net.http.Headers: int getConnectionType()>();

        virtualinvoke $r21.<android.net.http.Connection: void setCanPersist(org.apache.http.HttpEntity,org.apache.http.ProtocolVersion,int)>(r5, $r25, $i6);

        $r24 = r0.<android.net.http.Request: android.net.http.EventHandler mEventHandler>;

        interfaceinvoke $r24.<android.net.http.EventHandler: void endData()>();

        virtualinvoke r0.<android.net.http.Request: void complete()>();

        return;

     label27:
        r8 = r6;

        goto label08;

     label28:
        exitmonitor r0;

     label29:
        $i9 = lengthof r9;

        $i8 = $i9 - i1;

        i2 = virtualinvoke r8.<java.io.InputStream: int read(byte[],int,int)>(r9, i1, $i8);

     label30:
        if i2 == -1 goto label43;

        i1 = i1 + i2;

        if z1 == 0 goto label43;

     label31:
        $i11 = r0.<android.net.http.Request: int mReceivedBytes>;

        $i10 = i2 + $i11;

        r0.<android.net.http.Request: int mReceivedBytes> = $i10;

     label32:
        goto label43;

     label33:
        $r27 = r0.<android.net.http.Request: android.net.http.EventHandler mEventHandler>;

        interfaceinvoke $r27.<android.net.http.EventHandler: void data(byte[],int)>(r9, i1);

     label34:
        i1 = 0;

        goto label11;

     label35:
        if r8 == null goto label26;

        virtualinvoke r8.<java.io.InputStream: void close()>();

        goto label26;

     label36:
        $r35 := @caughtexception;

        r11 = $r35;

        if i0 == 200 goto label37;

        if i0 != 206 goto label42;

     label37:
        if z1 == 0 goto label39;

        if i1 <= 0 goto label39;

     label38:
        $r36 = r0.<android.net.http.Request: android.net.http.EventHandler mEventHandler>;

        interfaceinvoke $r36.<android.net.http.EventHandler: void data(byte[],int)>(r9, i1);

     label39:
        throw r11;

     label40:
        $r34 := @caughtexception;

        r10 = $r34;

        if r8 == null goto label41;

        virtualinvoke r8.<java.io.InputStream: void close()>();

     label41:
        throw r10;

     label42:
        if r8 == null goto label26;

        virtualinvoke r8.<java.io.InputStream: void close()>();

        goto label26;

     label43:
        if i2 == -1 goto label33;

        if i1 < i3 goto label11;

        goto label33;

        catch java.io.EOFException from label04 to label05 with label23;
        catch java.io.IOException from label04 to label05 with label36;
        catch java.lang.Throwable from label04 to label05 with label40;
        catch java.io.EOFException from label06 to label07 with label23;
        catch java.io.IOException from label06 to label07 with label36;
        catch java.lang.Throwable from label06 to label07 with label40;
        catch java.io.EOFException from label08 to label09 with label23;
        catch java.io.IOException from label08 to label09 with label36;
        catch java.lang.Throwable from label08 to label09 with label40;
        catch java.io.EOFException from label10 to label11 with label23;
        catch java.io.IOException from label10 to label11 with label36;
        catch java.lang.Throwable from label10 to label11 with label40;
        catch java.io.EOFException from label12 to label13 with label23;
        catch java.io.IOException from label12 to label13 with label36;
        catch java.lang.Throwable from label12 to label13 with label40;
        catch java.lang.Throwable from label13 to label14 with label20;
        catch java.lang.InterruptedException from label15 to label16 with label17;
        catch java.lang.Throwable from label15 to label16 with label20;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label21 to label22 with label20;
        catch java.io.EOFException from label22 to label23 with label23;
        catch java.io.IOException from label22 to label23 with label36;
        catch java.lang.Throwable from label22 to label23 with label40;
        catch java.lang.Throwable from label24 to label25 with label40;
        catch java.lang.Throwable from label28 to label29 with label20;
        catch java.io.EOFException from label29 to label30 with label23;
        catch java.io.IOException from label29 to label30 with label36;
        catch java.lang.Throwable from label29 to label30 with label40;
        catch java.io.EOFException from label31 to label32 with label23;
        catch java.io.IOException from label31 to label32 with label36;
        catch java.lang.Throwable from label31 to label32 with label40;
        catch java.io.EOFException from label33 to label34 with label23;
        catch java.io.IOException from label33 to label34 with label36;
        catch java.lang.Throwable from label33 to label34 with label40;
        catch java.lang.Throwable from label38 to label39 with label40;
        catch java.lang.Throwable from label39 to label40 with label40;
    }

    void reset()
    {
        android.net.http.Request r0;
        org.apache.http.message.BasicHttpRequest $r2, $r9;
        java.io.InputStream $r3, $r14, $r16;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r4, $r5, $r6, $r8, $r10, $r11, $r13;
        java.lang.String $r7, $r12;
        java.io.IOException $r15;

        r0 := @this: android.net.http.Request;

        $r2 = r0.<android.net.http.Request: org.apache.http.message.BasicHttpRequest mHttpRequest>;

        virtualinvoke $r2.<org.apache.http.message.BasicHttpRequest: void removeHeaders(java.lang.String)>("content-length");

        $r3 = r0.<android.net.http.Request: java.io.InputStream mBodyProvider>;

        if $r3 == null goto label3;

     label1:
        $r14 = r0.<android.net.http.Request: java.io.InputStream mBodyProvider>;

        virtualinvoke $r14.<java.io.InputStream: void reset()>();

     label2:
        $r16 = r0.<android.net.http.Request: java.io.InputStream mBodyProvider>;

        $i3 = r0.<android.net.http.Request: int mBodyLength>;

        specialinvoke r0.<android.net.http.Request: void setBodyProvider(java.io.InputStream,int)>($r16, $i3);

     label3:
        $i0 = r0.<android.net.http.Request: int mReceivedBytes>;

        if $i0 <= 0 goto label4;

        r0.<android.net.http.Request: int mFailCount> = 0;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*** Request.reset() to range:");

        $i1 = r0.<android.net.http.Request: int mReceivedBytes>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.net.http.HttpLog: void v(java.lang.String)>($r7);

        $r9 = r0.<android.net.http.Request: org.apache.http.message.BasicHttpRequest mHttpRequest>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bytes=");

        $i2 = r0.<android.net.http.Request: int mReceivedBytes>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<org.apache.http.message.BasicHttpRequest: void setHeader(java.lang.String,java.lang.String)>("Range", $r12);

     label4:
        return;

     label5:
        $r15 := @caughtexception;

        goto label2;

        catch java.io.IOException from label1 to label2 with label5;
    }

    void sendRequest(android.net.http.AndroidHttpClientConnection) throws org.apache.http.HttpException, java.io.IOException
    {
        android.net.http.Request r0;
        android.net.http.AndroidHttpClientConnection r1;
        boolean $z0, $z1;
        android.net.http.Connection $r2;
        org.apache.http.protocol.RequestContent $r3;
        org.apache.http.message.BasicHttpRequest $r4, $r6, $r7, $r8;
        org.apache.http.protocol.HttpContext $r5;
        org.apache.http.HttpEntityEnclosingRequest $r9;

        r0 := @this: android.net.http.Request;

        r1 := @parameter0: android.net.http.AndroidHttpClientConnection;

        $z0 = r0.<android.net.http.Request: boolean mCancelled>;

        if $z0 == 0 goto label2;

     label1:
        return;

     label2:
        $r3 = <android.net.http.Request: org.apache.http.protocol.RequestContent requestContentProcessor>;

        $r4 = r0.<android.net.http.Request: org.apache.http.message.BasicHttpRequest mHttpRequest>;

        $r2 = r0.<android.net.http.Request: android.net.http.Connection mConnection>;

        $r5 = virtualinvoke $r2.<android.net.http.Connection: org.apache.http.protocol.HttpContext getHttpContext()>();

        virtualinvoke $r3.<org.apache.http.protocol.RequestContent: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>($r4, $r5);

        $r6 = r0.<android.net.http.Request: org.apache.http.message.BasicHttpRequest mHttpRequest>;

        virtualinvoke r1.<android.net.http.AndroidHttpClientConnection: void sendRequestHeader(org.apache.http.HttpRequest)>($r6);

        $r7 = r0.<android.net.http.Request: org.apache.http.message.BasicHttpRequest mHttpRequest>;

        $z1 = $r7 instanceof org.apache.http.HttpEntityEnclosingRequest;

        if $z1 == 0 goto label1;

        $r8 = r0.<android.net.http.Request: org.apache.http.message.BasicHttpRequest mHttpRequest>;

        $r9 = (org.apache.http.HttpEntityEnclosingRequest) $r8;

        virtualinvoke r1.<android.net.http.AndroidHttpClientConnection: void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest)>($r9);

        return;
    }

    void setConnection(android.net.http.Connection)
    {
        android.net.http.Request r0;
        android.net.http.Connection r1;

        r0 := @this: android.net.http.Request;

        r1 := @parameter0: android.net.http.Connection;

        r0.<android.net.http.Request: android.net.http.Connection mConnection> = r1;

        return;
    }

    void setLoadingPaused(boolean)
    {
        android.net.http.Request r0;
        boolean z0, $z1;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.net.http.Request;

        z0 := @parameter0: boolean;

        entermonitor r0;

     label1:
        r0.<android.net.http.Request: boolean mLoadingPaused> = z0;

        $z1 = r0.<android.net.http.Request: boolean mLoadingPaused>;

        if $z1 != 0 goto label2;

        virtualinvoke r0.<java.lang.Object: void notify()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.String toString()
    {
        android.net.http.Request r0;
        java.lang.String $r1;

        r0 := @this: android.net.http.Request;

        $r1 = r0.<android.net.http.Request: java.lang.String mPath>;

        return $r1;
    }

    void waitUntilComplete()
    {
        android.net.http.Request r0;
        java.lang.Object r1, $r4;
        java.lang.Throwable r3, $r6;
        java.lang.InterruptedException $r5;

        r0 := @this: android.net.http.Request;

        r1 = r0.<android.net.http.Request: java.lang.Object mClientResource>;

        entermonitor r1;

     label1:
        $r4 = r0.<android.net.http.Request: java.lang.Object mClientResource>;

        virtualinvoke $r4.<java.lang.Object: void wait()>();

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r6 := @caughtexception;

        r3 = $r6;

     label5:
        exitmonitor r1;

     label6:
        throw r3;

     label7:
        $r5 := @caughtexception;

        goto label2;

        catch java.lang.InterruptedException from label1 to label2 with label7;
        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
}
