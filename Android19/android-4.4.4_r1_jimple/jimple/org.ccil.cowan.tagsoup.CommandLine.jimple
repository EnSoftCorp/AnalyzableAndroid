public class org.ccil.cowan.tagsoup.CommandLine extends java.lang.Object
{
    static java.util.Hashtable options;
    private static java.lang.String theOutputEncoding;
    private static org.ccil.cowan.tagsoup.Parser theParser;
    private static org.ccil.cowan.tagsoup.HTMLSchema theSchema;

    static void <clinit>()
    {
        java.util.Hashtable $r0, $r2, $r5, $r8, $r11, $r14, $r16, $r21, $r22, $r27, $r28, $r33, $r34, $r36, $r43, $r45, $r46, $r49, $r54, $r56, $r59, $r61, $r64, $r67, $r69;
        java.lang.Boolean $r1, $r4, $r7, $r10, $r13, $r17, $r18, $r23, $r24, $r29, $r30, $r32, $r39, $r41, $r42, $r44, $r50, $r52, $r55, $r57, $r62, $r66, $r68, $r71;

        $r0 = new java.util.Hashtable;

        specialinvoke $r0.<java.util.Hashtable: void <init>()>();

        <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options> = $r0;

        $r2 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r1 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--nocdata", $r1);

        $r5 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r4 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r5.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--files", $r4);

        $r8 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r7 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r8.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--reuse", $r7);

        $r11 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r10 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r11.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--nons", $r10);

        $r14 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r13 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r14.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--nobogons", $r13);

        $r16 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r17 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r16.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--any", $r17);

        $r21 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r18 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r21.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--emptybogons", $r18);

        $r22 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r23 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r22.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--norootbogons", $r23);

        $r27 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r24 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r27.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--pyxin", $r24);

        $r28 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r29 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r28.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--lexical", $r29);

        $r34 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r30 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r34.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--pyx", $r30);

        $r33 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r32 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r33.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--html", $r32);

        $r36 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r39 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r36.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--method=", $r39);

        $r43 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r42 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r43.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--doctype-public=", $r42);

        $r46 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r41 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r46.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--doctype-system=", $r41);

        $r45 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r44 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r45.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--output-encoding=", $r44);

        $r49 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r50 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r49.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--omit-xml-declaration", $r50);

        $r54 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r55 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r54.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--encoding=", $r55);

        $r59 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r52 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r59.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--help", $r52);

        $r56 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r57 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r56.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--version", $r57);

        $r61 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r62 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r61.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--nodefaults", $r62);

        $r69 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r68 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r69.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--nocolons", $r68);

        $r64 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r71 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r64.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--norestart", $r71);

        $r67 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r66 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r67.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--ignorable", $r66);

        <org.ccil.cowan.tagsoup.CommandLine: org.ccil.cowan.tagsoup.Parser theParser> = null;

        <org.ccil.cowan.tagsoup.CommandLine: org.ccil.cowan.tagsoup.HTMLSchema theSchema> = null;

        <org.ccil.cowan.tagsoup.CommandLine: java.lang.String theOutputEncoding> = null;

        return;
    }

    public void <init>()
    {
        org.ccil.cowan.tagsoup.CommandLine r0;

        r0 := @this: org.ccil.cowan.tagsoup.CommandLine;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static org.xml.sax.ContentHandler chooseContentHandler(java.io.Writer)
    {
        java.io.Writer r0;
        org.ccil.cowan.tagsoup.XMLWriter r1, $r6;
        java.lang.String r2, r3, r4, $r13, $r17, $r18, $r20;
        java.util.Hashtable $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r16, $r19, $r21, $r23;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.ccil.cowan.tagsoup.HTMLSchema $r14;
        java.lang.Object $r15, $r22, $r24, $r25;
        org.ccil.cowan.tagsoup.PYXWriter $r26;

        r0 := @parameter0: java.io.Writer;

        $r5 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z0 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r5, "--pyx");

        if $z0 == 0 goto label1;

        $r26 = new org.ccil.cowan.tagsoup.PYXWriter;

        specialinvoke $r26.<org.ccil.cowan.tagsoup.PYXWriter: void <init>(java.io.Writer)>(r0);

        return $r26;

     label1:
        $r6 = new org.ccil.cowan.tagsoup.XMLWriter;

        specialinvoke $r6.<org.ccil.cowan.tagsoup.XMLWriter: void <init>(java.io.Writer)>(r0);

        r1 = $r6;

        $r7 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z1 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r7, "--html");

        if $z1 == 0 goto label2;

        virtualinvoke r1.<org.ccil.cowan.tagsoup.XMLWriter: void setOutputProperty(java.lang.String,java.lang.String)>("method", "html");

        virtualinvoke r1.<org.ccil.cowan.tagsoup.XMLWriter: void setOutputProperty(java.lang.String,java.lang.String)>("omit-xml-declaration", "yes");

     label2:
        $r8 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z2 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r8, "--method=");

        if $z2 == 0 goto label3;

        $r23 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r25 = virtualinvoke $r23.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("--method=");

        r4 = (java.lang.String) $r25;

        if r4 == null goto label3;

        virtualinvoke r1.<org.ccil.cowan.tagsoup.XMLWriter: void setOutputProperty(java.lang.String,java.lang.String)>("method", r4);

     label3:
        $r9 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z3 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r9, "--doctype-public=");

        if $z3 == 0 goto label4;

        $r21 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r24 = virtualinvoke $r21.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("--doctype-public=");

        r3 = (java.lang.String) $r24;

        if r3 == null goto label4;

        virtualinvoke r1.<org.ccil.cowan.tagsoup.XMLWriter: void setOutputProperty(java.lang.String,java.lang.String)>("doctype-public", r3);

     label4:
        $r10 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z4 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r10, "--doctype-system=");

        if $z4 == 0 goto label5;

        $r19 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r22 = virtualinvoke $r19.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("--doctype-system=");

        r2 = (java.lang.String) $r22;

        if r2 == null goto label5;

        virtualinvoke r1.<org.ccil.cowan.tagsoup.XMLWriter: void setOutputProperty(java.lang.String,java.lang.String)>("doctype-system", r2);

     label5:
        $r11 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z5 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r11, "--output-encoding=");

        if $z5 == 0 goto label6;

        $r16 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r15 = virtualinvoke $r16.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("--output-encoding=");

        $r18 = (java.lang.String) $r15;

        <org.ccil.cowan.tagsoup.CommandLine: java.lang.String theOutputEncoding> = $r18;

        $r17 = <org.ccil.cowan.tagsoup.CommandLine: java.lang.String theOutputEncoding>;

        if $r17 == null goto label6;

        $r20 = <org.ccil.cowan.tagsoup.CommandLine: java.lang.String theOutputEncoding>;

        virtualinvoke r1.<org.ccil.cowan.tagsoup.XMLWriter: void setOutputProperty(java.lang.String,java.lang.String)>("encoding", $r20);

     label6:
        $r12 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z6 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r12, "--omit-xml-declaration");

        if $z6 == 0 goto label7;

        virtualinvoke r1.<org.ccil.cowan.tagsoup.XMLWriter: void setOutputProperty(java.lang.String,java.lang.String)>("omit-xml-declaration", "yes");

     label7:
        $r14 = <org.ccil.cowan.tagsoup.CommandLine: org.ccil.cowan.tagsoup.HTMLSchema theSchema>;

        $r13 = virtualinvoke $r14.<org.ccil.cowan.tagsoup.HTMLSchema: java.lang.String getURI()>();

        virtualinvoke r1.<org.ccil.cowan.tagsoup.XMLWriter: void setPrefix(java.lang.String,java.lang.String)>($r13, "");

        return r1;
    }

    private static void doHelp()
    {
        boolean z0, $z1, $z2;
        java.util.Enumeration r0;
        java.lang.String r1, $r7;
        java.io.PrintStream $r2, $r3, $r5, $r8, $r9, $r10, $r11;
        java.util.Hashtable $r4;
        java.lang.Object $r6;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r2.<java.io.PrintStream: void print(java.lang.String)>("usage: java -jar tagsoup-*.jar ");

        $r3 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r3.<java.io.PrintStream: void print(java.lang.String)>(" [ ");

        z0 = 1;

        $r4 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        r0 = virtualinvoke $r4.<java.util.Hashtable: java.util.Enumeration keys()>();

     label1:
        $z1 = interfaceinvoke r0.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label4;

        if z0 != 0 goto label2;

        $r11 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r11.<java.io.PrintStream: void print(java.lang.String)>("| ");

     label2:
        $r6 = interfaceinvoke r0.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r7 = (java.lang.String) $r6;

        r1 = (java.lang.String) $r7;

        $r8 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r8.<java.io.PrintStream: void print(java.lang.String)>(r1);

        $z2 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>("=");

        if $z2 == 0 goto label3;

        $r10 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r10.<java.io.PrintStream: void print(java.lang.String)>("?");

     label3:
        $r9 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r9.<java.io.PrintStream: void print(java.lang.String)>(" ");

        z0 = 0;

        goto label1;

     label4:
        $r5 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("]*");

        return;
    }

    private static int getopts(java.util.Hashtable, java.lang.String[])
    {
        java.util.Hashtable r0;
        java.lang.String[] r1;
        int i0, i1, $i2, $i4, $i5, $i6;
        java.lang.String r2, r3;
        char $c3;
        boolean $z0;
        java.io.PrintStream $r4, $r5;
        java.lang.Boolean $r7;

        r0 := @parameter0: java.util.Hashtable;

        r1 := @parameter1: java.lang.String[];

        i0 = 0;

     label1:
        $i2 = lengthof r1;

        if i0 >= $i2 goto label2;

        r2 = r1[i0];

        $c3 = virtualinvoke r2.<java.lang.String: char charAt(int)>(0);

        if $c3 == 45 goto label3;

     label2:
        return i0;

     label3:
        i1 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(61);

        r3 = null;

        if i1 == -1 goto label4;

        $i4 = i1 + 1;

        $i5 = virtualinvoke r2.<java.lang.String: int length()>();

        r3 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>($i4, $i5);

        $i6 = i1 + 1;

        r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i6);

     label4:
        $z0 = virtualinvoke r0.<java.util.Hashtable: boolean containsKey(java.lang.Object)>(r2);

        if $z0 == 0 goto label7;

        if r3 != null goto label6;

        $r7 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r7);

     label5:
        i0 = i0 + 1;

        goto label1;

     label6:
        virtualinvoke r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

        goto label5;

     label7:
        $r4 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r4.<java.io.PrintStream: void print(java.lang.String)>("Unknown option ");

        $r5 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>(r2);

        staticinvoke <java.lang.System: void exit(int)>(1);

        goto label5;
    }

    private static boolean hasOption(java.util.Hashtable, java.lang.String)
    {
        java.util.Hashtable r0;
        java.lang.String r1;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Boolean $r3;

        r0 := @parameter0: java.util.Hashtable;

        r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <java.lang.Boolean: boolean getBoolean(java.lang.String)>(r1);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        $r2 = virtualinvoke r0.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        $r3 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        if $r2 != $r3 goto label1;

        return 0;
    }

    public static void main(java.lang.String[]) throws java.io.IOException, org.xml.sax.SAXException
    {
        java.lang.String[] r0;
        int i0, i1, i2, i3, $i4, $i5, $i6;
        java.lang.String r1, r2, $r11, $r13, $r14, $r15, $r23;
        java.util.Hashtable $r3, $r4, $r5, $r6;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r7, $r8, $r10, $r16, $r17, $r18, $r20, $r21, $r22, $r24, $r25, $r26, $r27, $r29, $r30, $r31, $r32;
        java.io.PrintStream $r9, $r12, $r19, $r33, $r34;
        java.io.FileOutputStream $r28;

        r0 := @parameter0: java.lang.String[];

        $r3 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        i0 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: int getopts(java.util.Hashtable,java.lang.String[])>($r3, r0);

        $r4 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z0 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r4, "--help");

        if $z0 == 0 goto label02;

        staticinvoke <org.ccil.cowan.tagsoup.CommandLine: void doHelp()>();

     label01:
        return;

     label02:
        $r5 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z1 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r5, "--version");

        if $z1 == 0 goto label03;

        $r33 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>("TagSoup version 1.2");

        return;

     label03:
        $i4 = lengthof r0;

        if $i4 != i0 goto label04;

        $r34 = <java.lang.System: java.io.PrintStream out>;

        staticinvoke <org.ccil.cowan.tagsoup.CommandLine: void process(java.lang.String,java.io.OutputStream)>("", $r34);

        return;

     label04:
        $r6 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z2 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r6, "--files");

        if $z2 == 0 goto label09;

        i2 = i0;

     label05:
        $i6 = lengthof r0;

        if i2 >= $i6 goto label01;

        r1 = r0[i2];

        i3 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int)>(46);

        if i3 != -1 goto label07;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".xhtml");

        r2 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

     label06:
        $r19 = <java.lang.System: java.io.PrintStream err>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("src: ");

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dst: ");

        $r22 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r23);

        $r28 = new java.io.FileOutputStream;

        specialinvoke $r28.<java.io.FileOutputStream: void <init>(java.lang.String)>(r2);

        staticinvoke <org.ccil.cowan.tagsoup.CommandLine: void process(java.lang.String,java.io.OutputStream)>(r1, $r28);

        i2 = i2 + 1;

        goto label05;

     label07:
        $z3 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(".xhtml");

        if $z3 == 0 goto label08;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        r2 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label06;

     label08:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i3);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".xhtml");

        r2 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label06;

     label09:
        i1 = i0;

     label10:
        $i5 = lengthof r0;

        if i1 >= $i5 goto label01;

        $r9 = <java.lang.System: java.io.PrintStream err>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("src: ");

        $r11 = r0[i1];

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r13);

        $r14 = r0[i1];

        $r12 = <java.lang.System: java.io.PrintStream out>;

        staticinvoke <org.ccil.cowan.tagsoup.CommandLine: void process(java.lang.String,java.io.OutputStream)>($r14, $r12);

        i1 = i1 + 1;

        goto label10;
    }

    private static void process(java.lang.String, java.io.OutputStream) throws java.io.IOException, org.xml.sax.SAXException
    {
        java.lang.String r0, r6, $r21, $r25;
        java.io.OutputStream r1;
        org.ccil.cowan.tagsoup.Parser r2, $r8, $r34, $r35;
        java.io.OutputStreamWriter r3, $r22, $r29;
        org.xml.sax.ContentHandler r4;
        org.xml.sax.InputSource r5, $r27;
        java.util.Hashtable $r7, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r23, $r24, $r26, $r30, $r32;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        org.ccil.cowan.tagsoup.HTMLSchema $r9, $r10;
        java.io.InputStream $r28;
        java.lang.Object $r31;
        org.ccil.cowan.tagsoup.PYXScanner $r33;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.io.OutputStream;

        $r7 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z0 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r7, "--reuse");

        if $z0 == 0 goto label18;

        $r35 = <org.ccil.cowan.tagsoup.CommandLine: org.ccil.cowan.tagsoup.Parser theParser>;

        if $r35 != null goto label01;

        $r34 = new org.ccil.cowan.tagsoup.Parser;

        specialinvoke $r34.<org.ccil.cowan.tagsoup.Parser: void <init>()>();

        <org.ccil.cowan.tagsoup.CommandLine: org.ccil.cowan.tagsoup.Parser theParser> = $r34;

     label01:
        r2 = <org.ccil.cowan.tagsoup.CommandLine: org.ccil.cowan.tagsoup.Parser theParser>;

     label02:
        $r9 = new org.ccil.cowan.tagsoup.HTMLSchema;

        specialinvoke $r9.<org.ccil.cowan.tagsoup.HTMLSchema: void <init>()>();

        <org.ccil.cowan.tagsoup.CommandLine: org.ccil.cowan.tagsoup.HTMLSchema theSchema> = $r9;

        $r10 = <org.ccil.cowan.tagsoup.CommandLine: org.ccil.cowan.tagsoup.HTMLSchema theSchema>;

        interfaceinvoke r2.<org.xml.sax.XMLReader: void setProperty(java.lang.String,java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/properties/schema", $r10);

        $r11 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z1 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r11, "--nocdata");

        if $z1 == 0 goto label03;

        interfaceinvoke r2.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://www.ccil.org/~cowan/tagsoup/features/cdata-elements", 0);

     label03:
        $r12 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z2 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r12, "--nons");

        if $z2 != 0 goto label04;

        $r32 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z15 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r32, "--html");

        if $z15 == 0 goto label05;

     label04:
        interfaceinvoke r2.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://xml.org/sax/features/namespaces", 0);

     label05:
        $r13 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z3 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r13, "--nobogons");

        if $z3 == 0 goto label06;

        interfaceinvoke r2.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://www.ccil.org/~cowan/tagsoup/features/ignore-bogons", 1);

     label06:
        $r14 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z4 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r14, "--any");

        if $z4 == 0 goto label19;

        interfaceinvoke r2.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://www.ccil.org/~cowan/tagsoup/features/bogons-empty", 0);

     label07:
        $r16 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z6 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r16, "--norootbogons");

        if $z6 == 0 goto label08;

        interfaceinvoke r2.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://www.ccil.org/~cowan/tagsoup/features/root-bogons", 0);

     label08:
        $r17 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z7 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r17, "--nodefaults");

        if $z7 == 0 goto label09;

        interfaceinvoke r2.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://www.ccil.org/~cowan/tagsoup/features/default-attributes", 0);

     label09:
        $r18 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z8 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r18, "--nocolons");

        if $z8 == 0 goto label10;

        interfaceinvoke r2.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://www.ccil.org/~cowan/tagsoup/features/translate-colons", 1);

     label10:
        $r19 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z9 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r19, "--norestart");

        if $z9 == 0 goto label11;

        interfaceinvoke r2.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://www.ccil.org/~cowan/tagsoup/features/restart-elements", 0);

     label11:
        $r20 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z10 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r20, "--ignorable");

        if $z10 == 0 goto label12;

        interfaceinvoke r2.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://www.ccil.org/~cowan/tagsoup/features/ignorable-whitespace", 1);

     label12:
        $r23 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z11 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r23, "--pyxin");

        if $z11 == 0 goto label13;

        $r33 = new org.ccil.cowan.tagsoup.PYXScanner;

        specialinvoke $r33.<org.ccil.cowan.tagsoup.PYXScanner: void <init>()>();

        interfaceinvoke r2.<org.xml.sax.XMLReader: void setProperty(java.lang.String,java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/properties/scanner", $r33);

     label13:
        $r21 = <org.ccil.cowan.tagsoup.CommandLine: java.lang.String theOutputEncoding>;

        if $r21 != null goto label20;

        $r29 = new java.io.OutputStreamWriter;

        specialinvoke $r29.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>(r1);

        r3 = $r29;

     label14:
        r4 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: org.xml.sax.ContentHandler chooseContentHandler(java.io.Writer)>(r3);

        interfaceinvoke r2.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>(r4);

        $r24 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z12 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r24, "--lexical");

        if $z12 == 0 goto label15;

        $z14 = r4 instanceof org.xml.sax.ext.LexicalHandler;

        if $z14 == 0 goto label15;

        interfaceinvoke r2.<org.xml.sax.XMLReader: void setProperty(java.lang.String,java.lang.Object)>("http://xml.org/sax/properties/lexical-handler", r4);

     label15:
        $r27 = new org.xml.sax.InputSource;

        specialinvoke $r27.<org.xml.sax.InputSource: void <init>()>();

        r5 = $r27;

        if r0 == "" goto label21;

        virtualinvoke r5.<org.xml.sax.InputSource: void setSystemId(java.lang.String)>(r0);

     label16:
        $r26 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z13 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r26, "--encoding=");

        if $z13 == 0 goto label17;

        $r30 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r31 = virtualinvoke $r30.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("--encoding=");

        r6 = (java.lang.String) $r31;

        if r6 == null goto label17;

        virtualinvoke r5.<org.xml.sax.InputSource: void setEncoding(java.lang.String)>(r6);

     label17:
        interfaceinvoke r2.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>(r5);

        return;

     label18:
        $r8 = new org.ccil.cowan.tagsoup.Parser;

        specialinvoke $r8.<org.ccil.cowan.tagsoup.Parser: void <init>()>();

        r2 = $r8;

        goto label02;

     label19:
        $r15 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z5 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r15, "--emptybogons");

        if $z5 == 0 goto label07;

        interfaceinvoke r2.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://www.ccil.org/~cowan/tagsoup/features/bogons-empty", 1);

        goto label07;

     label20:
        $r22 = new java.io.OutputStreamWriter;

        $r25 = <org.ccil.cowan.tagsoup.CommandLine: java.lang.String theOutputEncoding>;

        specialinvoke $r22.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(r1, $r25);

        r3 = $r22;

        goto label14;

     label21:
        $r28 = <java.lang.System: java.io.InputStream in>;

        virtualinvoke r5.<org.xml.sax.InputSource: void setByteStream(java.io.InputStream)>($r28);

        goto label16;
    }
}
