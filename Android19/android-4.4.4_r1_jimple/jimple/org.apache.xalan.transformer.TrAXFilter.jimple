public class org.apache.xalan.transformer.TrAXFilter extends org.xml.sax.helpers.XMLFilterImpl
{
    private javax.xml.transform.Templates m_templates;
    private org.apache.xalan.transformer.TransformerImpl m_transformer;

    public void <init>(javax.xml.transform.Templates) throws javax.xml.transform.TransformerConfigurationException
    {
        org.apache.xalan.transformer.TrAXFilter r0;
        javax.xml.transform.Templates r1;
        javax.xml.transform.Transformer $r2;
        org.apache.xalan.transformer.TransformerImpl $r3;

        r0 := @this: org.apache.xalan.transformer.TrAXFilter;

        r1 := @parameter0: javax.xml.transform.Templates;

        specialinvoke r0.<org.xml.sax.helpers.XMLFilterImpl: void <init>()>();

        r0.<org.apache.xalan.transformer.TrAXFilter: javax.xml.transform.Templates m_templates> = r1;

        $r2 = interfaceinvoke r1.<javax.xml.transform.Templates: javax.xml.transform.Transformer newTransformer()>();

        $r3 = (org.apache.xalan.transformer.TransformerImpl) $r2;

        r0.<org.apache.xalan.transformer.TrAXFilter: org.apache.xalan.transformer.TransformerImpl m_transformer> = $r3;

        return;
    }

    private void setupParse()
    {
        org.apache.xalan.transformer.TrAXFilter r0;
        org.xml.sax.XMLReader r1;
        org.apache.xalan.transformer.TransformerImpl $r2;
        org.xml.sax.ContentHandler $r3;
        java.lang.NullPointerException $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.xalan.transformer.TrAXFilter;

        r1 = virtualinvoke r0.<org.apache.xalan.transformer.TrAXFilter: org.xml.sax.XMLReader getParent()>();

        if r1 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        $r5 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_NO_PARENT_FOR_FILTER", null);

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label1:
        $r2 = r0.<org.apache.xalan.transformer.TrAXFilter: org.apache.xalan.transformer.TransformerImpl m_transformer>;

        $r3 = virtualinvoke $r2.<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ContentHandler getInputContentHandler()>();

        interfaceinvoke r1.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>($r3);

        interfaceinvoke r1.<org.xml.sax.XMLReader: void setEntityResolver(org.xml.sax.EntityResolver)>(r0);

        interfaceinvoke r1.<org.xml.sax.XMLReader: void setDTDHandler(org.xml.sax.DTDHandler)>(r0);

        interfaceinvoke r1.<org.xml.sax.XMLReader: void setErrorHandler(org.xml.sax.ErrorHandler)>(r0);

        return;
    }

    public org.apache.xalan.transformer.TransformerImpl getTransformer()
    {
        org.apache.xalan.transformer.TrAXFilter r0;
        org.apache.xalan.transformer.TransformerImpl $r1;

        r0 := @this: org.apache.xalan.transformer.TrAXFilter;

        $r1 = r0.<org.apache.xalan.transformer.TrAXFilter: org.apache.xalan.transformer.TransformerImpl m_transformer>;

        return $r1;
    }

    public void parse(java.lang.String) throws org.xml.sax.SAXException, java.io.IOException
    {
        org.apache.xalan.transformer.TrAXFilter r0;
        java.lang.String r1;
        org.xml.sax.InputSource $r2;

        r0 := @this: org.apache.xalan.transformer.TrAXFilter;

        r1 := @parameter0: java.lang.String;

        $r2 = new org.xml.sax.InputSource;

        specialinvoke $r2.<org.xml.sax.InputSource: void <init>(java.lang.String)>(r1);

        virtualinvoke r0.<org.apache.xalan.transformer.TrAXFilter: void parse(org.xml.sax.InputSource)>($r2);

        return;
    }

    public void parse(org.xml.sax.InputSource) throws org.xml.sax.SAXException, java.io.IOException
    {
        org.apache.xalan.transformer.TrAXFilter r0;
        org.xml.sax.InputSource r1;
        java.lang.Exception r2;
        org.xml.sax.XMLReader r4, r5, r11, $r13, $r15;
        javax.xml.parsers.FactoryConfigurationError r8, $r32;
        javax.xml.parsers.ParserConfigurationException r9, $r28;
        javax.xml.parsers.SAXParserFactory r10;
        boolean z0, $z1;
        org.apache.xalan.transformer.TransformerImpl $r14, $r17, $r23;
        org.xml.sax.ContentHandler $r16;
        org.xml.sax.SAXException $r18, $r19, $r20, $r25, $r26, $r29, $r33;
        java.lang.String $r21, $r30;
        org.apache.xalan.templates.StylesheetRoot $r22;
        javax.xml.parsers.SAXParser $r24;
        java.lang.AbstractMethodError $r27;
        java.lang.NoSuchMethodError $r31;

        r0 := @this: org.apache.xalan.transformer.TrAXFilter;

        r1 := @parameter0: org.xml.sax.InputSource;

        $r13 = virtualinvoke r0.<org.apache.xalan.transformer.TrAXFilter: org.xml.sax.XMLReader getParent()>();

        if $r13 != null goto label13;

     label01:
        r10 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();

        virtualinvoke r10.<javax.xml.parsers.SAXParserFactory: void setNamespaceAware(boolean)>(1);

        $r23 = r0.<org.apache.xalan.transformer.TrAXFilter: org.apache.xalan.transformer.TransformerImpl m_transformer>;

        $r22 = virtualinvoke $r23.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot getStylesheet()>();

        z0 = virtualinvoke $r22.<org.apache.xalan.templates.StylesheetRoot: boolean isSecureProcessing()>();

     label02:
        if z0 == 0 goto label04;

     label03:
        virtualinvoke r10.<javax.xml.parsers.SAXParserFactory: void setFeature(java.lang.String,boolean)>("http://javax.xml.XMLConstants/feature/secure-processing", 1);

     label04:
        $r24 = virtualinvoke r10.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();

        r11 = virtualinvoke $r24.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();

     label05:
        r4 = r11;

     label06:
        if r4 != null goto label12;

        r5 = staticinvoke <org.xml.sax.helpers.XMLReaderFactory: org.xml.sax.XMLReader createXMLReader()>();

     label07:
        interfaceinvoke r5.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://xml.org/sax/features/namespace-prefixes", 1);

     label08:
        virtualinvoke r0.<org.apache.xalan.transformer.TrAXFilter: void setParent(org.xml.sax.XMLReader)>(r5);

     label09:
        $r14 = r0.<org.apache.xalan.transformer.TrAXFilter: org.apache.xalan.transformer.TransformerImpl m_transformer>;

        $r16 = virtualinvoke $r14.<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ContentHandler getContentHandler()>();

        if $r16 != null goto label14;

        $r19 = new org.xml.sax.SAXException;

        $r21 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_CANNOT_CALL_PARSE", null);

        specialinvoke $r19.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r21);

        throw $r19;

     label10:
        $r28 := @caughtexception;

        r9 = $r28;

        $r25 = new org.xml.sax.SAXException;

        specialinvoke $r25.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>(r9);

        throw $r25;

     label11:
        $r32 := @caughtexception;

        r8 = $r32;

        $r29 = new org.xml.sax.SAXException;

        $r30 = virtualinvoke r8.<javax.xml.parsers.FactoryConfigurationError: java.lang.String toString()>();

        specialinvoke $r29.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r30);

        throw $r29;

     label12:
        r5 = r4;

        goto label07;

     label13:
        specialinvoke r0.<org.apache.xalan.transformer.TrAXFilter: void setupParse()>();

        goto label09;

     label14:
        $r15 = virtualinvoke r0.<org.apache.xalan.transformer.TrAXFilter: org.xml.sax.XMLReader getParent()>();

        interfaceinvoke $r15.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>(r1);

        $r17 = r0.<org.apache.xalan.transformer.TrAXFilter: org.apache.xalan.transformer.TransformerImpl m_transformer>;

        r2 = virtualinvoke $r17.<org.apache.xalan.transformer.TransformerImpl: java.lang.Exception getExceptionThrown()>();

        if r2 == null goto label16;

        $z1 = r2 instanceof org.xml.sax.SAXException;

        if $z1 == 0 goto label15;

        $r20 = (org.xml.sax.SAXException) r2;

        throw $r20;

     label15:
        $r18 = new org.xml.sax.SAXException;

        specialinvoke $r18.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>(r2);

        throw $r18;

     label16:
        return;

     label17:
        $r26 := @caughtexception;

        goto label08;

     label18:
        $r27 := @caughtexception;

        r4 = null;

        goto label06;

     label19:
        $r31 := @caughtexception;

        r4 = null;

        goto label06;

     label20:
        $r33 := @caughtexception;

        goto label04;

        catch javax.xml.parsers.ParserConfigurationException from label01 to label02 with label10;
        catch javax.xml.parsers.FactoryConfigurationError from label01 to label02 with label11;
        catch java.lang.NoSuchMethodError from label01 to label02 with label19;
        catch java.lang.AbstractMethodError from label01 to label02 with label18;
        catch org.xml.sax.SAXException from label03 to label04 with label20;
        catch javax.xml.parsers.ParserConfigurationException from label03 to label04 with label10;
        catch javax.xml.parsers.FactoryConfigurationError from label03 to label04 with label11;
        catch java.lang.NoSuchMethodError from label03 to label04 with label19;
        catch java.lang.AbstractMethodError from label03 to label04 with label18;
        catch javax.xml.parsers.ParserConfigurationException from label04 to label05 with label10;
        catch javax.xml.parsers.FactoryConfigurationError from label04 to label05 with label11;
        catch java.lang.NoSuchMethodError from label04 to label05 with label19;
        catch java.lang.AbstractMethodError from label04 to label05 with label18;
        catch org.xml.sax.SAXException from label07 to label08 with label17;
    }

    public void setContentHandler(org.xml.sax.ContentHandler)
    {
        org.apache.xalan.transformer.TrAXFilter r0;
        org.xml.sax.ContentHandler r1;
        org.apache.xalan.transformer.TransformerImpl $r2;

        r0 := @this: org.apache.xalan.transformer.TrAXFilter;

        r1 := @parameter0: org.xml.sax.ContentHandler;

        $r2 = r0.<org.apache.xalan.transformer.TrAXFilter: org.apache.xalan.transformer.TransformerImpl m_transformer>;

        virtualinvoke $r2.<org.apache.xalan.transformer.TransformerImpl: void setContentHandler(org.xml.sax.ContentHandler)>(r1);

        return;
    }

    public void setErrorListener(javax.xml.transform.ErrorListener)
    {
        org.apache.xalan.transformer.TrAXFilter r0;
        javax.xml.transform.ErrorListener r1;
        org.apache.xalan.transformer.TransformerImpl $r2;

        r0 := @this: org.apache.xalan.transformer.TrAXFilter;

        r1 := @parameter0: javax.xml.transform.ErrorListener;

        $r2 = r0.<org.apache.xalan.transformer.TrAXFilter: org.apache.xalan.transformer.TransformerImpl m_transformer>;

        virtualinvoke $r2.<org.apache.xalan.transformer.TransformerImpl: void setErrorListener(javax.xml.transform.ErrorListener)>(r1);

        return;
    }

    public void setParent(org.xml.sax.XMLReader)
    {
        org.apache.xalan.transformer.TrAXFilter r0;
        org.xml.sax.XMLReader r1;
        org.xml.sax.ContentHandler $r2, $r3;

        r0 := @this: org.apache.xalan.transformer.TrAXFilter;

        r1 := @parameter0: org.xml.sax.XMLReader;

        specialinvoke r0.<org.xml.sax.helpers.XMLFilterImpl: void setParent(org.xml.sax.XMLReader)>(r1);

        $r2 = interfaceinvoke r1.<org.xml.sax.XMLReader: org.xml.sax.ContentHandler getContentHandler()>();

        if $r2 == null goto label1;

        $r3 = interfaceinvoke r1.<org.xml.sax.XMLReader: org.xml.sax.ContentHandler getContentHandler()>();

        virtualinvoke r0.<org.apache.xalan.transformer.TrAXFilter: void setContentHandler(org.xml.sax.ContentHandler)>($r3);

     label1:
        specialinvoke r0.<org.apache.xalan.transformer.TrAXFilter: void setupParse()>();

        return;
    }
}
