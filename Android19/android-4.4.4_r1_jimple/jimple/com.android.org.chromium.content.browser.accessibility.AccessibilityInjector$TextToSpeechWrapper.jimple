class com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$TextToSpeechWrapper extends java.lang.Object
{
    private com.android.org.chromium.com.googlecode.eyesfree.braille.selfbraille.SelfBrailleClient mSelfBrailleClient;
    private android.speech.tts.TextToSpeech mTextToSpeech;
    private android.view.View mView;

    public void <init>(android.view.View, android.content.Context)
    {
        com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$TextToSpeechWrapper r0;
        android.view.View r1;
        android.content.Context r2;
        android.speech.tts.TextToSpeech $r3;
        com.android.org.chromium.com.googlecode.eyesfree.braille.selfbraille.SelfBrailleClient $r4;
        com.android.org.chromium.base.CommandLine $r5;
        boolean $z0;

        r0 := @this: com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$TextToSpeechWrapper;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$TextToSpeechWrapper: android.view.View mView> = r1;

        $r3 = new android.speech.tts.TextToSpeech;

        specialinvoke $r3.<android.speech.tts.TextToSpeech: void <init>(android.content.Context,android.speech.tts.TextToSpeech$OnInitListener,java.lang.String)>(r2, null, null);

        r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$TextToSpeechWrapper: android.speech.tts.TextToSpeech mTextToSpeech> = $r3;

        $r4 = new com.android.org.chromium.com.googlecode.eyesfree.braille.selfbraille.SelfBrailleClient;

        $r5 = staticinvoke <com.android.org.chromium.base.CommandLine: com.android.org.chromium.base.CommandLine getInstance()>();

        $z0 = virtualinvoke $r5.<com.android.org.chromium.base.CommandLine: boolean hasSwitch(java.lang.String)>("debug-braille-service");

        specialinvoke $r4.<com.android.org.chromium.com.googlecode.eyesfree.braille.selfbraille.SelfBrailleClient: void <init>(android.content.Context,boolean)>(r2, $z0);

        r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$TextToSpeechWrapper: com.android.org.chromium.com.googlecode.eyesfree.braille.selfbraille.SelfBrailleClient mSelfBrailleClient> = $r4;

        return;
    }

    public void braille(java.lang.String)
    {
        com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$TextToSpeechWrapper r0;
        java.lang.String r1, $r7;
        org.json.JSONObject r2, $r5;
        org.json.JSONException r3, $r12;
        com.android.org.chromium.com.googlecode.eyesfree.braille.selfbraille.WriteData r4;
        android.view.View $r6;
        int $i0, $i1;
        com.android.org.chromium.com.googlecode.eyesfree.braille.selfbraille.SelfBrailleClient $r11;

        r0 := @this: com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$TextToSpeechWrapper;

        r1 := @parameter0: java.lang.String;

     label1:
        $r5 = new org.json.JSONObject;

        specialinvoke $r5.<org.json.JSONObject: void <init>(java.lang.String)>(r1);

        r2 = $r5;

        $r6 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$TextToSpeechWrapper: android.view.View mView>;

        r4 = staticinvoke <com.android.org.chromium.com.googlecode.eyesfree.braille.selfbraille.WriteData: com.android.org.chromium.com.googlecode.eyesfree.braille.selfbraille.WriteData forView(android.view.View)>($r6);

        $r7 = virtualinvoke r2.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("text");

        virtualinvoke r4.<com.android.org.chromium.com.googlecode.eyesfree.braille.selfbraille.WriteData: com.android.org.chromium.com.googlecode.eyesfree.braille.selfbraille.WriteData setText(java.lang.CharSequence)>($r7);

        $i0 = virtualinvoke r2.<org.json.JSONObject: int getInt(java.lang.String)>("startIndex");

        virtualinvoke r4.<com.android.org.chromium.com.googlecode.eyesfree.braille.selfbraille.WriteData: com.android.org.chromium.com.googlecode.eyesfree.braille.selfbraille.WriteData setSelectionStart(int)>($i0);

        $i1 = virtualinvoke r2.<org.json.JSONObject: int getInt(java.lang.String)>("endIndex");

        virtualinvoke r4.<com.android.org.chromium.com.googlecode.eyesfree.braille.selfbraille.WriteData: com.android.org.chromium.com.googlecode.eyesfree.braille.selfbraille.WriteData setSelectionEnd(int)>($i1);

        $r11 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$TextToSpeechWrapper: com.android.org.chromium.com.googlecode.eyesfree.braille.selfbraille.SelfBrailleClient mSelfBrailleClient>;

        virtualinvoke $r11.<com.android.org.chromium.com.googlecode.eyesfree.braille.selfbraille.SelfBrailleClient: void write(com.android.org.chromium.com.googlecode.eyesfree.braille.selfbraille.WriteData)>(r4);

     label2:
        return;

     label3:
        $r12 := @caughtexception;

        r3 = $r12;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AccessibilityInjector", "Error parsing JS JSON object", r3);

        return;

        catch org.json.JSONException from label1 to label2 with label3;
    }

    public boolean isSpeaking()
    {
        com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$TextToSpeechWrapper r0;
        android.speech.tts.TextToSpeech $r1;
        boolean $z0;

        r0 := @this: com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$TextToSpeechWrapper;

        $r1 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$TextToSpeechWrapper: android.speech.tts.TextToSpeech mTextToSpeech>;

        $z0 = virtualinvoke $r1.<android.speech.tts.TextToSpeech: boolean isSpeaking()>();

        return $z0;
    }

    protected void shutdownInternal()
    {
        com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$TextToSpeechWrapper r0;
        android.speech.tts.TextToSpeech $r1;
        com.android.org.chromium.com.googlecode.eyesfree.braille.selfbraille.SelfBrailleClient $r2;

        r0 := @this: com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$TextToSpeechWrapper;

        $r1 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$TextToSpeechWrapper: android.speech.tts.TextToSpeech mTextToSpeech>;

        virtualinvoke $r1.<android.speech.tts.TextToSpeech: void shutdown()>();

        $r2 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$TextToSpeechWrapper: com.android.org.chromium.com.googlecode.eyesfree.braille.selfbraille.SelfBrailleClient mSelfBrailleClient>;

        virtualinvoke $r2.<com.android.org.chromium.com.googlecode.eyesfree.braille.selfbraille.SelfBrailleClient: void shutdown()>();

        return;
    }

    public int speak(java.lang.String, int, java.lang.String)
    {
        com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$TextToSpeechWrapper r0;
        java.lang.String r1, r2, r8, $r15;
        int i0, $i1;
        java.util.HashMap r3, r4, $r11;
        org.json.JSONObject r5, $r12, $r13;
        java.util.Iterator r7;
        android.speech.tts.TextToSpeech $r10;
        boolean $z0;
        java.lang.Object $r14;
        org.json.JSONArray $r16;
        org.json.JSONException $r17, $r19;

        r0 := @this: com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$TextToSpeechWrapper;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 = null;

        if r2 == null goto label7;

     label1:
        $r11 = new java.util.HashMap;

        specialinvoke $r11.<java.util.HashMap: void <init>()>();

        r4 = $r11;

     label2:
        $r12 = new org.json.JSONObject;

        specialinvoke $r12.<org.json.JSONObject: void <init>(java.lang.String)>(r2);

        r5 = $r12;

        r7 = virtualinvoke r5.<org.json.JSONObject: java.util.Iterator keys()>();

     label3:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label9;

        $r14 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.String) $r14;

        $r13 = virtualinvoke r5.<org.json.JSONObject: org.json.JSONObject optJSONObject(java.lang.String)>(r8);

        if $r13 != null goto label3;

        $r16 = virtualinvoke r5.<org.json.JSONObject: org.json.JSONArray optJSONArray(java.lang.String)>(r8);

        if $r16 != null goto label3;

        $r15 = virtualinvoke r5.<org.json.JSONObject: java.lang.String getString(java.lang.String)>(r8);

        virtualinvoke r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, $r15);

     label4:
        goto label3;

     label5:
        $r17 := @caughtexception;

     label6:
        r3 = null;

     label7:
        $r10 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$TextToSpeechWrapper: android.speech.tts.TextToSpeech mTextToSpeech>;

        $i1 = virtualinvoke $r10.<android.speech.tts.TextToSpeech: int speak(java.lang.String,int,java.util.HashMap)>(r1, i0, r3);

        return $i1;

     label8:
        $r19 := @caughtexception;

        goto label6;

     label9:
        r3 = r4;

        goto label7;

        catch org.json.JSONException from label1 to label2 with label8;
        catch org.json.JSONException from label2 to label3 with label5;
        catch org.json.JSONException from label3 to label4 with label5;
    }

    public int stop()
    {
        com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$TextToSpeechWrapper r0;
        android.speech.tts.TextToSpeech $r1;
        int $i0;

        r0 := @this: com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$TextToSpeechWrapper;

        $r1 = r0.<com.android.org.chromium.content.browser.accessibility.AccessibilityInjector$TextToSpeechWrapper: android.speech.tts.TextToSpeech mTextToSpeech>;

        $i0 = virtualinvoke $r1.<android.speech.tts.TextToSpeech: int stop()>();

        return $i0;
    }
}
