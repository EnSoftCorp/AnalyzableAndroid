class android.speech.tts.PlaybackSynthesisCallback extends android.speech.tts.AbstractSynthesisCallback
{
    private static final boolean DBG;
    private static final int MIN_AUDIO_BUFFER_SIZE;
    private static final java.lang.String TAG;
    private final android.speech.tts.AudioPlaybackHandler mAudioTrackHandler;
    private final java.lang.Object mCallerIdentity;
    private final android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher mDispatcher;
    private volatile boolean mDone;
    private android.speech.tts.SynthesisPlaybackQueueItem mItem;
    private final android.speech.tts.EventLogger mLogger;
    private final float mPan;
    private final java.lang.Object mStateLock;
    private boolean mStopped;
    private final int mStreamType;
    private final float mVolume;

    void <init>(int, float, float, android.speech.tts.AudioPlaybackHandler, android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher, java.lang.Object, android.speech.tts.EventLogger)
    {
        android.speech.tts.PlaybackSynthesisCallback r0;
        int i0;
        float f0, f1;
        android.speech.tts.AudioPlaybackHandler r1;
        android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher r2;
        java.lang.Object r3, $r5;
        android.speech.tts.EventLogger r4;

        r0 := @this: android.speech.tts.PlaybackSynthesisCallback;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        r1 := @parameter3: android.speech.tts.AudioPlaybackHandler;

        r2 := @parameter4: android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher;

        r3 := @parameter5: java.lang.Object;

        r4 := @parameter6: android.speech.tts.EventLogger;

        specialinvoke r0.<android.speech.tts.AbstractSynthesisCallback: void <init>()>();

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        r0.<android.speech.tts.PlaybackSynthesisCallback: java.lang.Object mStateLock> = $r5;

        r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.SynthesisPlaybackQueueItem mItem> = null;

        r0.<android.speech.tts.PlaybackSynthesisCallback: boolean mStopped> = 0;

        r0.<android.speech.tts.PlaybackSynthesisCallback: boolean mDone> = 0;

        r0.<android.speech.tts.PlaybackSynthesisCallback: int mStreamType> = i0;

        r0.<android.speech.tts.PlaybackSynthesisCallback: float mVolume> = f0;

        r0.<android.speech.tts.PlaybackSynthesisCallback: float mPan> = f1;

        r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.AudioPlaybackHandler mAudioTrackHandler> = r1;

        r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher mDispatcher> = r2;

        r0.<android.speech.tts.PlaybackSynthesisCallback: java.lang.Object mCallerIdentity> = r3;

        r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.EventLogger mLogger> = r4;

        return;
    }

    public int audioAvailable(byte[], int, int)
    {
        android.speech.tts.PlaybackSynthesisCallback r0;
        byte[] r1, r5;
        int i0, i1, $i2;
        java.lang.Object r2;
        java.lang.Throwable r3, $r15;
        android.speech.tts.SynthesisPlaybackQueueItem r4, $r13;
        java.lang.IllegalArgumentException $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11;
        java.lang.String $r12;
        boolean $z0;
        android.speech.tts.EventLogger $r14;
        java.lang.InterruptedException $r16;

        r0 := @this: android.speech.tts.PlaybackSynthesisCallback;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = virtualinvoke r0.<android.speech.tts.PlaybackSynthesisCallback: int getMaxBufferSize()>();

        if i1 > $i2 goto label01;

        if i1 > 0 goto label02;

     label01:
        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("buffer is too large or of zero length (");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes)");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r7;

     label02:
        r2 = r0.<android.speech.tts.PlaybackSynthesisCallback: java.lang.Object mStateLock>;

        entermonitor r2;

     label03:
        $r13 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.SynthesisPlaybackQueueItem mItem>;

        if $r13 == null goto label04;

        $z0 = r0.<android.speech.tts.PlaybackSynthesisCallback: boolean mStopped>;

        if $z0 == 0 goto label06;

     label04:
        exitmonitor r2;

     label05:
        return -1;

     label06:
        r4 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.SynthesisPlaybackQueueItem mItem>;

        exitmonitor r2;

     label07:
        r5 = newarray (byte)[i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, r5, 0, i1);

     label08:
        virtualinvoke r4.<android.speech.tts.SynthesisPlaybackQueueItem: void put(byte[])>(r5);

     label09:
        $r14 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.EventLogger mLogger>;

        virtualinvoke $r14.<android.speech.tts.EventLogger: void onEngineDataReceived()>();

        return 0;

     label10:
        $r15 := @caughtexception;

        r3 = $r15;

     label11:
        exitmonitor r2;

     label12:
        throw r3;

     label13:
        $r16 := @caughtexception;

        return -1;

        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.InterruptedException from label08 to label09 with label13;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public int done()
    {
        android.speech.tts.PlaybackSynthesisCallback r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r6;
        android.speech.tts.SynthesisPlaybackQueueItem r3, $r4;
        boolean $z0;
        android.speech.tts.EventLogger $r5;

        r0 := @this: android.speech.tts.PlaybackSynthesisCallback;

        r1 = r0.<android.speech.tts.PlaybackSynthesisCallback: java.lang.Object mStateLock>;

        entermonitor r1;

     label1:
        $z0 = r0.<android.speech.tts.PlaybackSynthesisCallback: boolean mDone>;

        if $z0 == 0 goto label3;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PlaybackSynthesisRequest", "Duplicate call to done()");

        exitmonitor r1;

     label2:
        return -1;

     label3:
        r0.<android.speech.tts.PlaybackSynthesisCallback: boolean mDone> = 1;

        $r4 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.SynthesisPlaybackQueueItem mItem>;

        if $r4 != null goto label8;

        exitmonitor r1;

     label4:
        return -1;

     label5:
        $r6 := @caughtexception;

        r2 = $r6;

     label6:
        exitmonitor r1;

     label7:
        throw r2;

     label8:
        r3 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.SynthesisPlaybackQueueItem mItem>;

        exitmonitor r1;

     label9:
        virtualinvoke r3.<android.speech.tts.SynthesisPlaybackQueueItem: void done()>();

        $r5 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.EventLogger mLogger>;

        virtualinvoke $r5.<android.speech.tts.EventLogger: void onEngineComplete()>();

        return 0;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
        catch java.lang.Throwable from label8 to label9 with label5;
    }

    public void error()
    {
        android.speech.tts.PlaybackSynthesisCallback r0;
        android.speech.tts.EventLogger $r1;

        r0 := @this: android.speech.tts.PlaybackSynthesisCallback;

        $r1 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.EventLogger mLogger>;

        virtualinvoke $r1.<android.speech.tts.EventLogger: void onError()>();

        virtualinvoke r0.<android.speech.tts.PlaybackSynthesisCallback: void stopImpl(boolean)>(1);

        return;
    }

    public int getMaxBufferSize()
    {
        android.speech.tts.PlaybackSynthesisCallback r0;

        r0 := @this: android.speech.tts.PlaybackSynthesisCallback;

        return 8192;
    }

    boolean isDone()
    {
        android.speech.tts.PlaybackSynthesisCallback r0;
        boolean $z0;

        r0 := @this: android.speech.tts.PlaybackSynthesisCallback;

        $z0 = r0.<android.speech.tts.PlaybackSynthesisCallback: boolean mDone>;

        return $z0;
    }

    public int start(int, int, int)
    {
        android.speech.tts.PlaybackSynthesisCallback r0;
        int i0, i1, i2, $i3, $i4;
        java.lang.Object r1, $r6;
        java.lang.Throwable r2, $r13;
        android.speech.tts.SynthesisPlaybackQueueItem r3, $r4;
        boolean $z0;
        android.speech.tts.EventLogger $r5;
        android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher $r7;
        float $f0, $f1;
        android.speech.tts.AudioPlaybackHandler $r8;
        java.lang.StringBuilder $r9, $r10, $r11;
        java.lang.String $r12;

        r0 := @this: android.speech.tts.PlaybackSynthesisCallback;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i3 = staticinvoke <android.speech.tts.BlockingAudioTrack: int getChannelConfig(int)>(i2);

        if $i3 != 0 goto label1;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported number of channels :");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PlaybackSynthesisRequest", $r12);

        return -1;

     label1:
        r1 = r0.<android.speech.tts.PlaybackSynthesisCallback: java.lang.Object mStateLock>;

        entermonitor r1;

     label2:
        $z0 = r0.<android.speech.tts.PlaybackSynthesisCallback: boolean mStopped>;

        if $z0 == 0 goto label7;

        exitmonitor r1;

     label3:
        return -1;

     label4:
        $r13 := @caughtexception;

        r2 = $r13;

     label5:
        exitmonitor r1;

     label6:
        throw r2;

     label7:
        $r4 = new android.speech.tts.SynthesisPlaybackQueueItem;

        $i4 = r0.<android.speech.tts.PlaybackSynthesisCallback: int mStreamType>;

        $f1 = r0.<android.speech.tts.PlaybackSynthesisCallback: float mVolume>;

        $f0 = r0.<android.speech.tts.PlaybackSynthesisCallback: float mPan>;

        $r7 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher mDispatcher>;

        $r6 = r0.<android.speech.tts.PlaybackSynthesisCallback: java.lang.Object mCallerIdentity>;

        $r5 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.EventLogger mLogger>;

        specialinvoke $r4.<android.speech.tts.SynthesisPlaybackQueueItem: void <init>(int,int,int,int,float,float,android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher,java.lang.Object,android.speech.tts.EventLogger)>($i4, i0, i1, i2, $f1, $f0, $r7, $r6, $r5);

        r3 = $r4;

        $r8 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.AudioPlaybackHandler mAudioTrackHandler>;

        virtualinvoke $r8.<android.speech.tts.AudioPlaybackHandler: void enqueue(android.speech.tts.PlaybackQueueItem)>(r3);

        r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.SynthesisPlaybackQueueItem mItem> = r3;

        exitmonitor r1;

     label8:
        return 0;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label7 to label8 with label4;
    }

    void stop()
    {
        android.speech.tts.PlaybackSynthesisCallback r0;

        r0 := @this: android.speech.tts.PlaybackSynthesisCallback;

        virtualinvoke r0.<android.speech.tts.PlaybackSynthesisCallback: void stopImpl(boolean)>(0);

        return;
    }

    void stopImpl(boolean)
    {
        android.speech.tts.PlaybackSynthesisCallback r0;
        boolean z0, $z1;
        java.lang.Object r1;
        java.lang.Throwable r2, $r7;
        android.speech.tts.SynthesisPlaybackQueueItem r3;
        android.speech.tts.EventLogger $r4, $r5;
        android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher $r6;

        r0 := @this: android.speech.tts.PlaybackSynthesisCallback;

        z0 := @parameter0: boolean;

        $r4 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.EventLogger mLogger>;

        virtualinvoke $r4.<android.speech.tts.EventLogger: void onStopped()>();

        r1 = r0.<android.speech.tts.PlaybackSynthesisCallback: java.lang.Object mStateLock>;

        entermonitor r1;

     label1:
        $z1 = r0.<android.speech.tts.PlaybackSynthesisCallback: boolean mStopped>;

        if $z1 == 0 goto label3;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PlaybackSynthesisRequest", "stop() called twice");

        exitmonitor r1;

     label2:
        return;

     label3:
        r3 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.SynthesisPlaybackQueueItem mItem>;

        r0.<android.speech.tts.PlaybackSynthesisCallback: boolean mStopped> = 1;

        exitmonitor r1;

     label4:
        if r3 == null goto label8;

        virtualinvoke r3.<android.speech.tts.SynthesisPlaybackQueueItem: void stop(boolean)>(z0);

        return;

     label5:
        $r7 := @caughtexception;

        r2 = $r7;

     label6:
        exitmonitor r1;

     label7:
        throw r2;

     label8:
        $r5 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.EventLogger mLogger>;

        virtualinvoke $r5.<android.speech.tts.EventLogger: void onWriteData()>();

        if z0 == 0 goto label9;

        $r6 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher mDispatcher>;

        interfaceinvoke $r6.<android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher: void dispatchOnError()>();

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public static void <clinit>()
    {
        <android.speech.tts.PlaybackSynthesisCallback: java.lang.String TAG> = "PlaybackSynthesisRequest";

        <android.speech.tts.PlaybackSynthesisCallback: int MIN_AUDIO_BUFFER_SIZE> = 8192;

        <android.speech.tts.PlaybackSynthesisCallback: boolean DBG> = 0;

        return;
    }
}
