public class org.apache.xpath.functions.FuncNamespace extends org.apache.xpath.functions.FunctionDef1Arg
{
    static final long serialVersionUID;

    public void <init>()
    {
        org.apache.xpath.functions.FuncNamespace r0;

        r0 := @this: org.apache.xpath.functions.FuncNamespace;

        specialinvoke r0.<org.apache.xpath.functions.FunctionDef1Arg: void <init>()>();

        return;
    }

    public org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.functions.FuncNamespace r0;
        org.apache.xpath.XPathContext r1;
        int i0;
        org.apache.xml.dtm.DTM r2;
        short s1;
        java.lang.String r3, r4;
        org.apache.xpath.objects.XString $r5, $r6, $r7, $r8, $r9;
        boolean $z0, $z1;

        r0 := @this: org.apache.xpath.functions.FuncNamespace;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        i0 = virtualinvoke r0.<org.apache.xpath.functions.FuncNamespace: int getArg0AsNode(org.apache.xpath.XPathContext)>(r1);

        if i0 == -1 goto label6;

        r2 = virtualinvoke r1.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>(i0);

        s1 = interfaceinvoke r2.<org.apache.xml.dtm.DTM: short getNodeType(int)>(i0);

        if s1 != 1 goto label2;

        r4 = interfaceinvoke r2.<org.apache.xml.dtm.DTM: java.lang.String getNamespaceURI(int)>(i0);

     label1:
        if r4 != null goto label7;

        $r9 = <org.apache.xpath.objects.XString: org.apache.xpath.objects.XString EMPTYSTRING>;

        return $r9;

     label2:
        if s1 != 2 goto label5;

        r3 = interfaceinvoke r2.<org.apache.xml.dtm.DTM: java.lang.String getNodeName(int)>(i0);

        $z0 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("xmlns:");

        if $z0 != 0 goto label3;

        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z1 == 0 goto label4;

     label3:
        $r7 = <org.apache.xpath.objects.XString: org.apache.xpath.objects.XString EMPTYSTRING>;

        return $r7;

     label4:
        r4 = interfaceinvoke r2.<org.apache.xml.dtm.DTM: java.lang.String getNamespaceURI(int)>(i0);

        goto label1;

     label5:
        $r6 = <org.apache.xpath.objects.XString: org.apache.xpath.objects.XString EMPTYSTRING>;

        return $r6;

     label6:
        $r5 = <org.apache.xpath.objects.XString: org.apache.xpath.objects.XString EMPTYSTRING>;

        return $r5;

     label7:
        $r8 = new org.apache.xpath.objects.XString;

        specialinvoke $r8.<org.apache.xpath.objects.XString: void <init>(java.lang.String)>(r4);

        return $r8;
    }

    public static void <clinit>()
    {
        <org.apache.xpath.functions.FuncNamespace: long serialVersionUID> = -4695674566722321237L;

        return;
    }
}
