public class org.apache.xml.utils.DOM2Helper extends org.apache.xml.utils.DOMHelper
{
    private org.w3c.dom.Document m_doc;

    public void <init>()
    {
        org.apache.xml.utils.DOM2Helper r0;

        r0 := @this: org.apache.xml.utils.DOM2Helper;

        specialinvoke r0.<org.apache.xml.utils.DOMHelper: void <init>()>();

        return;
    }

    public static org.w3c.dom.Node getParentOfNode(org.w3c.dom.Node)
    {
        org.w3c.dom.Node r0, r1;
        short $s0;
        org.w3c.dom.Attr $r2;

        r0 := @parameter0: org.w3c.dom.Node;

        r1 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        if r1 != null goto label1;

        $s0 = interfaceinvoke r0.<org.w3c.dom.Node: short getNodeType()>();

        if 2 != $s0 goto label1;

        $r2 = (org.w3c.dom.Attr) r0;

        r1 = interfaceinvoke $r2.<org.w3c.dom.Attr: org.w3c.dom.Element getOwnerElement()>();

     label1:
        return r1;
    }

    public static boolean isNodeAfter(org.w3c.dom.Node, org.w3c.dom.Node)
    {
        org.w3c.dom.Node r0, r1;
        boolean $z0, $z1, $z2;
        org.apache.xml.utils.DOMOrder $r2, $r3;
        int $i0, $i1;

        r0 := @parameter0: org.w3c.dom.Node;

        r1 := @parameter1: org.w3c.dom.Node;

        $z0 = r0 instanceof org.apache.xml.utils.DOMOrder;

        if $z0 == 0 goto label2;

        $z2 = r1 instanceof org.apache.xml.utils.DOMOrder;

        if $z2 == 0 goto label2;

        $r2 = (org.apache.xml.utils.DOMOrder) r0;

        $i0 = interfaceinvoke $r2.<org.apache.xml.utils.DOMOrder: int getUid()>();

        $r3 = (org.apache.xml.utils.DOMOrder) r1;

        $i1 = interfaceinvoke $r3.<org.apache.xml.utils.DOMOrder: int getUid()>();

        if $i0 > $i1 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        $z1 = staticinvoke <org.apache.xml.utils.DOMHelper: boolean isNodeAfter(org.w3c.dom.Node,org.w3c.dom.Node)>(r0, r1);

        return $z1;
    }

    public void checkNode(org.w3c.dom.Node) throws javax.xml.transform.TransformerException
    {
        org.apache.xml.utils.DOM2Helper r0;
        org.w3c.dom.Node r1;

        r0 := @this: org.apache.xml.utils.DOM2Helper;

        r1 := @parameter0: org.w3c.dom.Node;

        return;
    }

    public org.w3c.dom.Document getDocument()
    {
        org.apache.xml.utils.DOM2Helper r0;
        org.w3c.dom.Document $r1;

        r0 := @this: org.apache.xml.utils.DOM2Helper;

        $r1 = r0.<org.apache.xml.utils.DOM2Helper: org.w3c.dom.Document m_doc>;

        return $r1;
    }

    public org.w3c.dom.Element getElementByID(java.lang.String, org.w3c.dom.Document)
    {
        org.apache.xml.utils.DOM2Helper r0;
        java.lang.String r1;
        org.w3c.dom.Document r2;
        org.w3c.dom.Element $r3;

        r0 := @this: org.apache.xml.utils.DOM2Helper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.w3c.dom.Document;

        $r3 = interfaceinvoke r2.<org.w3c.dom.Document: org.w3c.dom.Element getElementById(java.lang.String)>(r1);

        return $r3;
    }

    public java.lang.String getLocalNameOfNode(org.w3c.dom.Node)
    {
        org.apache.xml.utils.DOM2Helper r0;
        org.w3c.dom.Node r1;
        java.lang.String r2;

        r0 := @this: org.apache.xml.utils.DOM2Helper;

        r1 := @parameter0: org.w3c.dom.Node;

        r2 = interfaceinvoke r1.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        if r2 != null goto label1;

        r2 = specialinvoke r0.<org.apache.xml.utils.DOMHelper: java.lang.String getLocalNameOfNode(org.w3c.dom.Node)>(r1);

     label1:
        return r2;
    }

    public java.lang.String getNamespaceOfNode(org.w3c.dom.Node)
    {
        org.apache.xml.utils.DOM2Helper r0;
        org.w3c.dom.Node r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xml.utils.DOM2Helper;

        r1 := @parameter0: org.w3c.dom.Node;

        $r2 = interfaceinvoke r1.<org.w3c.dom.Node: java.lang.String getNamespaceURI()>();

        return $r2;
    }

    public void parse(org.xml.sax.InputSource) throws javax.xml.transform.TransformerException
    {
        org.apache.xml.utils.DOM2Helper r0;
        org.xml.sax.InputSource r1;
        java.io.IOException r2, $r13;
        javax.xml.parsers.ParserConfigurationException r3, $r11;
        org.xml.sax.SAXException r4, $r9;
        javax.xml.parsers.DocumentBuilderFactory r5;
        javax.xml.parsers.DocumentBuilder r6;
        org.apache.xml.utils.DefaultErrorHandler $r7;
        org.w3c.dom.Document $r8;
        javax.xml.transform.TransformerException $r10, $r12, $r14;

        r0 := @this: org.apache.xml.utils.DOM2Helper;

        r1 := @parameter0: org.xml.sax.InputSource;

     label1:
        r5 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        virtualinvoke r5.<javax.xml.parsers.DocumentBuilderFactory: void setNamespaceAware(boolean)>(1);

        virtualinvoke r5.<javax.xml.parsers.DocumentBuilderFactory: void setValidating(boolean)>(1);

        r6 = virtualinvoke r5.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        $r7 = new org.apache.xml.utils.DefaultErrorHandler;

        specialinvoke $r7.<org.apache.xml.utils.DefaultErrorHandler: void <init>()>();

        virtualinvoke r6.<javax.xml.parsers.DocumentBuilder: void setErrorHandler(org.xml.sax.ErrorHandler)>($r7);

        $r8 = virtualinvoke r6.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(org.xml.sax.InputSource)>(r1);

        virtualinvoke r0.<org.apache.xml.utils.DOM2Helper: void setDocument(org.w3c.dom.Document)>($r8);

     label2:
        return;

     label3:
        $r9 := @caughtexception;

        r4 = $r9;

        $r10 = new javax.xml.transform.TransformerException;

        specialinvoke $r10.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r4);

        throw $r10;

     label4:
        $r11 := @caughtexception;

        r3 = $r11;

        $r12 = new javax.xml.transform.TransformerException;

        specialinvoke $r12.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r3);

        throw $r12;

     label5:
        $r13 := @caughtexception;

        r2 = $r13;

        $r14 = new javax.xml.transform.TransformerException;

        specialinvoke $r14.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r2);

        throw $r14;

        catch org.xml.sax.SAXException from label1 to label2 with label3;
        catch javax.xml.parsers.ParserConfigurationException from label1 to label2 with label4;
        catch java.io.IOException from label1 to label2 with label5;
    }

    public void setDocument(org.w3c.dom.Document)
    {
        org.apache.xml.utils.DOM2Helper r0;
        org.w3c.dom.Document r1;

        r0 := @this: org.apache.xml.utils.DOM2Helper;

        r1 := @parameter0: org.w3c.dom.Document;

        r0.<org.apache.xml.utils.DOM2Helper: org.w3c.dom.Document m_doc> = r1;

        return;
    }

    public boolean supportsSAX()
    {
        org.apache.xml.utils.DOM2Helper r0;

        r0 := @this: org.apache.xml.utils.DOM2Helper;

        return 1;
    }
}
