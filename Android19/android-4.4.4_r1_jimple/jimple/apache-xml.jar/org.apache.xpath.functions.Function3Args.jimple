public class org.apache.xpath.functions.Function3Args extends org.apache.xpath.functions.Function2Args
{
    static final long serialVersionUID;
    org.apache.xpath.Expression m_arg2;

    public void <init>()
    {
        org.apache.xpath.functions.Function3Args r0;

        r0 := @this: org.apache.xpath.functions.Function3Args;

        specialinvoke r0.<org.apache.xpath.functions.Function2Args: void <init>()>();

        return;
    }

    public void callArgVisitors(org.apache.xpath.XPathVisitor)
    {
        org.apache.xpath.functions.Function3Args r0;
        org.apache.xpath.XPathVisitor r1;
        org.apache.xpath.Expression $r2, $r4;
        org.apache.xpath.functions.Function3Args$Arg2Owner $r3;

        r0 := @this: org.apache.xpath.functions.Function3Args;

        r1 := @parameter0: org.apache.xpath.XPathVisitor;

        specialinvoke r0.<org.apache.xpath.functions.Function2Args: void callArgVisitors(org.apache.xpath.XPathVisitor)>(r1);

        $r2 = r0.<org.apache.xpath.functions.Function3Args: org.apache.xpath.Expression m_arg2>;

        if $r2 == null goto label1;

        $r4 = r0.<org.apache.xpath.functions.Function3Args: org.apache.xpath.Expression m_arg2>;

        $r3 = new org.apache.xpath.functions.Function3Args$Arg2Owner;

        specialinvoke $r3.<org.apache.xpath.functions.Function3Args$Arg2Owner: void <init>(org.apache.xpath.functions.Function3Args)>(r0);

        virtualinvoke $r4.<org.apache.xpath.Expression: void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)>($r3, r1);

     label1:
        return;
    }

    public boolean canTraverseOutsideSubtree()
    {
        org.apache.xpath.functions.Function3Args r0;
        boolean $z0, $z1;
        org.apache.xpath.Expression $r1;

        r0 := @this: org.apache.xpath.functions.Function3Args;

        $z0 = specialinvoke r0.<org.apache.xpath.functions.Function2Args: boolean canTraverseOutsideSubtree()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r1 = r0.<org.apache.xpath.functions.Function3Args: org.apache.xpath.Expression m_arg2>;

        $z1 = virtualinvoke $r1.<org.apache.xpath.Expression: boolean canTraverseOutsideSubtree()>();

        return $z1;
    }

    public void checkNumberArgs(int) throws org.apache.xpath.functions.WrongNumberArgsException
    {
        org.apache.xpath.functions.Function3Args r0;
        int i0;

        r0 := @this: org.apache.xpath.functions.Function3Args;

        i0 := @parameter0: int;

        if i0 == 3 goto label1;

        virtualinvoke r0.<org.apache.xpath.functions.Function3Args: void reportWrongNumberArgs()>();

     label1:
        return;
    }

    public boolean deepEquals(org.apache.xpath.Expression)
    {
        org.apache.xpath.functions.Function3Args r0, $r3, $r5, $r7;
        org.apache.xpath.Expression r1, $r2, $r4, $r6, $r8, $r9;
        boolean $z0, $z1;

        r0 := @this: org.apache.xpath.functions.Function3Args;

        r1 := @parameter0: org.apache.xpath.Expression;

        $z0 = specialinvoke r0.<org.apache.xpath.functions.Function2Args: boolean deepEquals(org.apache.xpath.Expression)>(r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<org.apache.xpath.functions.Function3Args: org.apache.xpath.Expression m_arg2>;

        if $r2 == null goto label3;

        $r5 = (org.apache.xpath.functions.Function3Args) r1;

        $r6 = $r5.<org.apache.xpath.functions.Function3Args: org.apache.xpath.Expression m_arg2>;

        if $r6 != null goto label2;

        return 0;

     label2:
        $r9 = r0.<org.apache.xpath.functions.Function3Args: org.apache.xpath.Expression m_arg2>;

        $r7 = (org.apache.xpath.functions.Function3Args) r1;

        $r8 = $r7.<org.apache.xpath.functions.Function3Args: org.apache.xpath.Expression m_arg2>;

        $z1 = virtualinvoke $r9.<org.apache.xpath.Expression: boolean deepEquals(org.apache.xpath.Expression)>($r8);

        if $z1 != 0 goto label4;

        return 0;

     label3:
        $r3 = (org.apache.xpath.functions.Function3Args) r1;

        $r4 = $r3.<org.apache.xpath.functions.Function3Args: org.apache.xpath.Expression m_arg2>;

        if $r4 == null goto label4;

        return 0;

     label4:
        return 1;
    }

    public void fixupVariables(java.util.Vector, int)
    {
        org.apache.xpath.functions.Function3Args r0;
        java.util.Vector r1;
        int i0;
        org.apache.xpath.Expression $r2, $r3;

        r0 := @this: org.apache.xpath.functions.Function3Args;

        r1 := @parameter0: java.util.Vector;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.xpath.functions.Function2Args: void fixupVariables(java.util.Vector,int)>(r1, i0);

        $r2 = r0.<org.apache.xpath.functions.Function3Args: org.apache.xpath.Expression m_arg2>;

        if $r2 == null goto label1;

        $r3 = r0.<org.apache.xpath.functions.Function3Args: org.apache.xpath.Expression m_arg2>;

        virtualinvoke $r3.<org.apache.xpath.Expression: void fixupVariables(java.util.Vector,int)>(r1, i0);

     label1:
        return;
    }

    public org.apache.xpath.Expression getArg2()
    {
        org.apache.xpath.functions.Function3Args r0;
        org.apache.xpath.Expression $r1;

        r0 := @this: org.apache.xpath.functions.Function3Args;

        $r1 = r0.<org.apache.xpath.functions.Function3Args: org.apache.xpath.Expression m_arg2>;

        return $r1;
    }

    protected void reportWrongNumberArgs() throws org.apache.xpath.functions.WrongNumberArgsException
    {
        org.apache.xpath.functions.Function3Args r0;
        org.apache.xpath.functions.WrongNumberArgsException $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xpath.functions.Function3Args;

        $r1 = new org.apache.xpath.functions.WrongNumberArgsException;

        $r2 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createXPATHMessage(java.lang.String,java.lang.Object[])>("three", null);

        specialinvoke $r1.<org.apache.xpath.functions.WrongNumberArgsException: void <init>(java.lang.String)>($r2);

        throw $r1;
    }

    public void setArg(org.apache.xpath.Expression, int) throws org.apache.xpath.functions.WrongNumberArgsException
    {
        org.apache.xpath.functions.Function3Args r0;
        org.apache.xpath.Expression r1;
        int i0;

        r0 := @this: org.apache.xpath.functions.Function3Args;

        r1 := @parameter0: org.apache.xpath.Expression;

        i0 := @parameter1: int;

        if i0 >= 2 goto label1;

        specialinvoke r0.<org.apache.xpath.functions.Function2Args: void setArg(org.apache.xpath.Expression,int)>(r1, i0);

        return;

     label1:
        if 2 != i0 goto label2;

        r0.<org.apache.xpath.functions.Function3Args: org.apache.xpath.Expression m_arg2> = r1;

        virtualinvoke r1.<org.apache.xpath.Expression: void exprSetParent(org.apache.xpath.ExpressionNode)>(r0);

        return;

     label2:
        virtualinvoke r0.<org.apache.xpath.functions.Function3Args: void reportWrongNumberArgs()>();

        return;
    }

    public static void <clinit>()
    {
        <org.apache.xpath.functions.Function3Args: long serialVersionUID> = 7915240747161506646L;

        return;
    }
}
