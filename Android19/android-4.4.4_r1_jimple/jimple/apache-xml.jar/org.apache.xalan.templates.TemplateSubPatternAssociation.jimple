class org.apache.xalan.templates.TemplateSubPatternAssociation extends java.lang.Object implements java.io.Serializable, java.lang.Cloneable
{
    static final long serialVersionUID;
    private org.apache.xalan.templates.TemplateSubPatternAssociation m_next;
    private java.lang.String m_pattern;
    org.apache.xpath.patterns.StepPattern m_stepPattern;
    private java.lang.String m_targetString;
    private org.apache.xalan.templates.ElemTemplate m_template;
    private boolean m_wild;

    void <init>(org.apache.xalan.templates.ElemTemplate, org.apache.xpath.patterns.StepPattern, java.lang.String)
    {
        org.apache.xalan.templates.TemplateSubPatternAssociation r0;
        org.apache.xalan.templates.ElemTemplate r1;
        org.apache.xpath.patterns.StepPattern r2, $r4;
        java.lang.String r3, $r5, $r6;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.TemplateSubPatternAssociation;

        r1 := @parameter0: org.apache.xalan.templates.ElemTemplate;

        r2 := @parameter1: org.apache.xpath.patterns.StepPattern;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xalan.templates.TemplateSubPatternAssociation: org.apache.xalan.templates.TemplateSubPatternAssociation m_next> = null;

        r0.<org.apache.xalan.templates.TemplateSubPatternAssociation: java.lang.String m_pattern> = r3;

        r0.<org.apache.xalan.templates.TemplateSubPatternAssociation: org.apache.xalan.templates.ElemTemplate m_template> = r1;

        r0.<org.apache.xalan.templates.TemplateSubPatternAssociation: org.apache.xpath.patterns.StepPattern m_stepPattern> = r2;

        $r4 = r0.<org.apache.xalan.templates.TemplateSubPatternAssociation: org.apache.xpath.patterns.StepPattern m_stepPattern>;

        $r5 = virtualinvoke $r4.<org.apache.xpath.patterns.StepPattern: java.lang.String getTargetString()>();

        r0.<org.apache.xalan.templates.TemplateSubPatternAssociation: java.lang.String m_targetString> = $r5;

        $r6 = r0.<org.apache.xalan.templates.TemplateSubPatternAssociation: java.lang.String m_targetString>;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("*");

        r0.<org.apache.xalan.templates.TemplateSubPatternAssociation: boolean m_wild> = $z0;

        return;
    }

    private boolean matchModes(org.apache.xml.utils.QName, org.apache.xml.utils.QName)
    {
        org.apache.xalan.templates.TemplateSubPatternAssociation r0;
        org.apache.xml.utils.QName r1, r2;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.TemplateSubPatternAssociation;

        r1 := @parameter0: org.apache.xml.utils.QName;

        r2 := @parameter1: org.apache.xml.utils.QName;

        if r1 != null goto label1;

        if r2 == null goto label2;

     label1:
        if r1 == null goto label3;

        if r2 == null goto label3;

        $z0 = virtualinvoke r1.<org.apache.xml.utils.QName: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.xalan.templates.TemplateSubPatternAssociation r0, r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.xalan.templates.TemplateSubPatternAssociation;

        $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r1 = (org.apache.xalan.templates.TemplateSubPatternAssociation) $r2;

        r1.<org.apache.xalan.templates.TemplateSubPatternAssociation: org.apache.xalan.templates.TemplateSubPatternAssociation m_next> = null;

        return r1;
    }

    public int getDocOrderPos()
    {
        org.apache.xalan.templates.TemplateSubPatternAssociation r0;
        org.apache.xalan.templates.ElemTemplate $r1;
        int $i0;

        r0 := @this: org.apache.xalan.templates.TemplateSubPatternAssociation;

        $r1 = r0.<org.apache.xalan.templates.TemplateSubPatternAssociation: org.apache.xalan.templates.ElemTemplate m_template>;

        $i0 = virtualinvoke $r1.<org.apache.xalan.templates.ElemTemplate: int getUid()>();

        return $i0;
    }

    public final int getImportLevel()
    {
        org.apache.xalan.templates.TemplateSubPatternAssociation r0;
        org.apache.xalan.templates.ElemTemplate $r1;
        org.apache.xalan.templates.StylesheetComposed $r2;
        int $i0;

        r0 := @this: org.apache.xalan.templates.TemplateSubPatternAssociation;

        $r1 = r0.<org.apache.xalan.templates.TemplateSubPatternAssociation: org.apache.xalan.templates.ElemTemplate m_template>;

        $r2 = virtualinvoke $r1.<org.apache.xalan.templates.ElemTemplate: org.apache.xalan.templates.StylesheetComposed getStylesheetComposed()>();

        $i0 = virtualinvoke $r2.<org.apache.xalan.templates.StylesheetComposed: int getImportCountComposed()>();

        return $i0;
    }

    public final org.apache.xalan.templates.TemplateSubPatternAssociation getNext()
    {
        org.apache.xalan.templates.TemplateSubPatternAssociation r0, $r1;

        r0 := @this: org.apache.xalan.templates.TemplateSubPatternAssociation;

        $r1 = r0.<org.apache.xalan.templates.TemplateSubPatternAssociation: org.apache.xalan.templates.TemplateSubPatternAssociation m_next>;

        return $r1;
    }

    public final java.lang.String getPattern()
    {
        org.apache.xalan.templates.TemplateSubPatternAssociation r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xalan.templates.TemplateSubPatternAssociation;

        $r1 = r0.<org.apache.xalan.templates.TemplateSubPatternAssociation: java.lang.String m_pattern>;

        return $r1;
    }

    public final org.apache.xpath.patterns.StepPattern getStepPattern()
    {
        org.apache.xalan.templates.TemplateSubPatternAssociation r0;
        org.apache.xpath.patterns.StepPattern $r1;

        r0 := @this: org.apache.xalan.templates.TemplateSubPatternAssociation;

        $r1 = r0.<org.apache.xalan.templates.TemplateSubPatternAssociation: org.apache.xpath.patterns.StepPattern m_stepPattern>;

        return $r1;
    }

    public final java.lang.String getTargetString()
    {
        org.apache.xalan.templates.TemplateSubPatternAssociation r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xalan.templates.TemplateSubPatternAssociation;

        $r1 = r0.<org.apache.xalan.templates.TemplateSubPatternAssociation: java.lang.String m_targetString>;

        return $r1;
    }

    public final org.apache.xalan.templates.ElemTemplate getTemplate()
    {
        org.apache.xalan.templates.TemplateSubPatternAssociation r0;
        org.apache.xalan.templates.ElemTemplate $r1;

        r0 := @this: org.apache.xalan.templates.TemplateSubPatternAssociation;

        $r1 = r0.<org.apache.xalan.templates.TemplateSubPatternAssociation: org.apache.xalan.templates.ElemTemplate m_template>;

        return $r1;
    }

    public final boolean isWild()
    {
        org.apache.xalan.templates.TemplateSubPatternAssociation r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.TemplateSubPatternAssociation;

        $z0 = r0.<org.apache.xalan.templates.TemplateSubPatternAssociation: boolean m_wild>;

        return $z0;
    }

    boolean matchMode(org.apache.xml.utils.QName)
    {
        org.apache.xalan.templates.TemplateSubPatternAssociation r0;
        org.apache.xml.utils.QName r1, $r3;
        org.apache.xalan.templates.ElemTemplate $r2;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.TemplateSubPatternAssociation;

        r1 := @parameter0: org.apache.xml.utils.QName;

        $r2 = r0.<org.apache.xalan.templates.TemplateSubPatternAssociation: org.apache.xalan.templates.ElemTemplate m_template>;

        $r3 = virtualinvoke $r2.<org.apache.xalan.templates.ElemTemplate: org.apache.xml.utils.QName getMode()>();

        $z0 = specialinvoke r0.<org.apache.xalan.templates.TemplateSubPatternAssociation: boolean matchModes(org.apache.xml.utils.QName,org.apache.xml.utils.QName)>(r1, $r3);

        return $z0;
    }

    public boolean matches(org.apache.xpath.XPathContext, int, org.apache.xml.utils.QName) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.TemplateSubPatternAssociation r0;
        org.apache.xpath.XPathContext r1;
        int i0;
        org.apache.xml.utils.QName r2, $r5;
        org.apache.xpath.patterns.StepPattern $r3;
        double $d0;
        byte $b1;
        org.apache.xalan.templates.ElemTemplate $r4;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.TemplateSubPatternAssociation;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.xml.utils.QName;

        $r3 = r0.<org.apache.xalan.templates.TemplateSubPatternAssociation: org.apache.xpath.patterns.StepPattern m_stepPattern>;

        $d0 = virtualinvoke $r3.<org.apache.xpath.patterns.StepPattern: double getMatchScore(org.apache.xpath.XPathContext,int)>(r1, i0);

        $b1 = #-Infinity cmpl $d0;

        if $b1 == 0 goto label1;

        $r4 = r0.<org.apache.xalan.templates.TemplateSubPatternAssociation: org.apache.xalan.templates.ElemTemplate m_template>;

        $r5 = virtualinvoke $r4.<org.apache.xalan.templates.ElemTemplate: org.apache.xml.utils.QName getMode()>();

        $z0 = specialinvoke r0.<org.apache.xalan.templates.TemplateSubPatternAssociation: boolean matchModes(org.apache.xml.utils.QName,org.apache.xml.utils.QName)>(r2, $r5);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void setNext(org.apache.xalan.templates.TemplateSubPatternAssociation)
    {
        org.apache.xalan.templates.TemplateSubPatternAssociation r0, r1;

        r0 := @this: org.apache.xalan.templates.TemplateSubPatternAssociation;

        r1 := @parameter0: org.apache.xalan.templates.TemplateSubPatternAssociation;

        r0.<org.apache.xalan.templates.TemplateSubPatternAssociation: org.apache.xalan.templates.TemplateSubPatternAssociation m_next> = r1;

        return;
    }

    public void setTargetString(java.lang.String)
    {
        org.apache.xalan.templates.TemplateSubPatternAssociation r0;
        java.lang.String r1;

        r0 := @this: org.apache.xalan.templates.TemplateSubPatternAssociation;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xalan.templates.TemplateSubPatternAssociation: java.lang.String m_targetString> = r1;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.xalan.templates.TemplateSubPatternAssociation: long serialVersionUID> = -8902606755229903350L;

        return;
    }
}
