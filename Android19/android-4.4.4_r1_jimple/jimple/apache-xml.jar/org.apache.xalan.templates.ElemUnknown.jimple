public class org.apache.xalan.templates.ElemUnknown extends org.apache.xalan.templates.ElemLiteralResult
{
    static final long serialVersionUID;

    public void <init>()
    {
        org.apache.xalan.templates.ElemUnknown r0;

        r0 := @this: org.apache.xalan.templates.ElemUnknown;

        specialinvoke r0.<org.apache.xalan.templates.ElemLiteralResult: void <init>()>();

        return;
    }

    private void executeFallbacks(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemUnknown r0;
        org.apache.xalan.transformer.TransformerImpl r1;
        org.apache.xalan.templates.ElemTemplateElement r2;
        java.lang.Throwable r3, $r5;
        int $i0;
        org.apache.xalan.templates.ElemFallback $r4;

        r0 := @this: org.apache.xalan.templates.ElemUnknown;

        r1 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        r2 = r0.<org.apache.xalan.templates.ElemUnknown: org.apache.xalan.templates.ElemTemplateElement m_firstChild>;

     label1:
        if r2 == null goto label6;

        $i0 = virtualinvoke r2.<org.apache.xalan.templates.ElemTemplateElement: int getXSLToken()>();

        if $i0 != 57 goto label4;

     label2:
        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: void pushElemTemplateElement(org.apache.xalan.templates.ElemTemplateElement)>(r2);

        $r4 = (org.apache.xalan.templates.ElemFallback) r2;

        virtualinvoke $r4.<org.apache.xalan.templates.ElemFallback: void executeFallback(org.apache.xalan.transformer.TransformerImpl)>(r1);

     label3:
        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: void popElemTemplateElement()>();

     label4:
        r2 = r2.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling>;

        goto label1;

     label5:
        $r5 := @caughtexception;

        r3 = $r5;

        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: void popElemTemplateElement()>();

        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label5;
    }

    private boolean hasFallbackChildren()
    {
        org.apache.xalan.templates.ElemUnknown r0;
        org.apache.xalan.templates.ElemTemplateElement r1;
        int $i0;

        r0 := @this: org.apache.xalan.templates.ElemUnknown;

        r1 = r0.<org.apache.xalan.templates.ElemUnknown: org.apache.xalan.templates.ElemTemplateElement m_firstChild>;

     label1:
        if r1 == null goto label3;

        $i0 = virtualinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: int getXSLToken()>();

        if $i0 != 57 goto label2;

        return 1;

     label2:
        r1 = r1.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling>;

        goto label1;

     label3:
        return 0;
    }

    public void execute(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemUnknown r0;
        org.apache.xalan.transformer.TransformerImpl r1;
        javax.xml.transform.TransformerException r2, $r3;
        boolean $z0;
        javax.xml.transform.ErrorListener $r4;

        r0 := @this: org.apache.xalan.templates.ElemUnknown;

        r1 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

     label1:
        $z0 = specialinvoke r0.<org.apache.xalan.templates.ElemUnknown: boolean hasFallbackChildren()>();

        if $z0 == 0 goto label2;

        specialinvoke r0.<org.apache.xalan.templates.ElemUnknown: void executeFallbacks(org.apache.xalan.transformer.TransformerImpl)>(r1);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        $r4 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.ErrorListener getErrorListener()>();

        interfaceinvoke $r4.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>(r2);

        return;

        catch javax.xml.transform.TransformerException from label1 to label2 with label3;
    }

    public int getXSLToken()
    {
        org.apache.xalan.templates.ElemUnknown r0;

        r0 := @this: org.apache.xalan.templates.ElemUnknown;

        return -1;
    }

    public static void <clinit>()
    {
        <org.apache.xalan.templates.ElemUnknown: long serialVersionUID> = -4573981712648730168L;

        return;
    }
}
