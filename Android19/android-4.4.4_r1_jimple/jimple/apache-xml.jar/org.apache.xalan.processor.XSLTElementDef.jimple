public class org.apache.xalan.processor.XSLTElementDef extends java.lang.Object
{
    static final int T_ANY;
    static final int T_ELEMENT;
    static final int T_PCDATA;
    private org.apache.xalan.processor.XSLTAttributeDef[] m_attributes;
    private java.lang.Class m_classObject;
    private org.apache.xalan.processor.XSLTElementProcessor m_elementProcessor;
    private org.apache.xalan.processor.XSLTElementDef[] m_elements;
    private boolean m_has_required;
    boolean m_isOrdered;
    private int m_lastOrder;
    private boolean m_multiAllowed;
    private java.lang.String m_name;
    private java.lang.String m_nameAlias;
    private java.lang.String m_namespace;
    private int m_order;
    private boolean m_required;
    java.util.Hashtable m_requiredFound;
    private int m_type;

    void <init>()
    {
        org.apache.xalan.processor.XSLTElementDef r0;

        r0 := @this: org.apache.xalan.processor.XSLTElementDef;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xalan.processor.XSLTElementDef: int m_type> = 1;

        r0.<org.apache.xalan.processor.XSLTElementDef: boolean m_has_required> = 0;

        r0.<org.apache.xalan.processor.XSLTElementDef: boolean m_required> = 0;

        r0.<org.apache.xalan.processor.XSLTElementDef: boolean m_isOrdered> = 0;

        r0.<org.apache.xalan.processor.XSLTElementDef: int m_order> = -1;

        r0.<org.apache.xalan.processor.XSLTElementDef: int m_lastOrder> = -1;

        r0.<org.apache.xalan.processor.XSLTElementDef: boolean m_multiAllowed> = 1;

        return;
    }

    void <init>(java.lang.Class, org.apache.xalan.processor.XSLTElementProcessor, int)
    {
        org.apache.xalan.processor.XSLTElementDef r0;
        java.lang.Class r1;
        org.apache.xalan.processor.XSLTElementProcessor r2;
        int i0;

        r0 := @this: org.apache.xalan.processor.XSLTElementDef;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.apache.xalan.processor.XSLTElementProcessor;

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xalan.processor.XSLTElementDef: int m_type> = 1;

        r0.<org.apache.xalan.processor.XSLTElementDef: boolean m_has_required> = 0;

        r0.<org.apache.xalan.processor.XSLTElementDef: boolean m_required> = 0;

        r0.<org.apache.xalan.processor.XSLTElementDef: boolean m_isOrdered> = 0;

        r0.<org.apache.xalan.processor.XSLTElementDef: int m_order> = -1;

        r0.<org.apache.xalan.processor.XSLTElementDef: int m_lastOrder> = -1;

        r0.<org.apache.xalan.processor.XSLTElementDef: boolean m_multiAllowed> = 1;

        r0.<org.apache.xalan.processor.XSLTElementDef: java.lang.Class m_classObject> = r1;

        r0.<org.apache.xalan.processor.XSLTElementDef: int m_type> = i0;

        virtualinvoke r0.<org.apache.xalan.processor.XSLTElementDef: void setElementProcessor(org.apache.xalan.processor.XSLTElementProcessor)>(r2);

        return;
    }

    void <init>(org.apache.xalan.processor.XSLTSchema, java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.processor.XSLTElementDef[], org.apache.xalan.processor.XSLTAttributeDef[], org.apache.xalan.processor.XSLTElementProcessor, java.lang.Class)
    {
        org.apache.xalan.processor.XSLTElementDef r0;
        org.apache.xalan.processor.XSLTSchema r1;
        java.lang.String r2, r3, r4;
        org.apache.xalan.processor.XSLTElementDef[] r5;
        org.apache.xalan.processor.XSLTAttributeDef[] r6;
        org.apache.xalan.processor.XSLTElementProcessor r7;
        java.lang.Class r8;
        boolean $z0, $z1, $z2;
        org.apache.xml.utils.QName $r9, $r10;

        r0 := @this: org.apache.xalan.processor.XSLTElementDef;

        r1 := @parameter0: org.apache.xalan.processor.XSLTSchema;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: org.apache.xalan.processor.XSLTElementDef[];

        r6 := @parameter5: org.apache.xalan.processor.XSLTAttributeDef[];

        r7 := @parameter6: org.apache.xalan.processor.XSLTElementProcessor;

        r8 := @parameter7: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xalan.processor.XSLTElementDef: int m_type> = 1;

        r0.<org.apache.xalan.processor.XSLTElementDef: boolean m_has_required> = 0;

        r0.<org.apache.xalan.processor.XSLTElementDef: boolean m_required> = 0;

        r0.<org.apache.xalan.processor.XSLTElementDef: boolean m_isOrdered> = 0;

        r0.<org.apache.xalan.processor.XSLTElementDef: int m_order> = -1;

        r0.<org.apache.xalan.processor.XSLTElementDef: int m_lastOrder> = -1;

        r0.<org.apache.xalan.processor.XSLTElementDef: boolean m_multiAllowed> = 1;

        virtualinvoke r0.<org.apache.xalan.processor.XSLTElementDef: void build(java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.processor.XSLTElementDef[],org.apache.xalan.processor.XSLTAttributeDef[],org.apache.xalan.processor.XSLTElementProcessor,java.lang.Class)>(r2, r3, r4, r5, r6, r7, r8);

        if r2 == null goto label2;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/1999/XSL/Transform");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.apache.org/xalan");

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.apache.org/xslt");

        if $z2 == 0 goto label2;

     label1:
        $r9 = new org.apache.xml.utils.QName;

        specialinvoke $r9.<org.apache.xml.utils.QName: void <init>(java.lang.String,java.lang.String)>(r2, r3);

        virtualinvoke r1.<org.apache.xalan.processor.XSLTSchema: void addAvailableElement(org.apache.xml.utils.QName)>($r9);

        if r4 == null goto label2;

        $r10 = new org.apache.xml.utils.QName;

        specialinvoke $r10.<org.apache.xml.utils.QName: void <init>(java.lang.String,java.lang.String)>(r2, r4);

        virtualinvoke r1.<org.apache.xalan.processor.XSLTSchema: void addAvailableElement(org.apache.xml.utils.QName)>($r10);

     label2:
        return;
    }

    void <init>(org.apache.xalan.processor.XSLTSchema, java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.processor.XSLTElementDef[], org.apache.xalan.processor.XSLTAttributeDef[], org.apache.xalan.processor.XSLTElementProcessor, java.lang.Class, int, boolean)
    {
        org.apache.xalan.processor.XSLTElementDef r0;
        org.apache.xalan.processor.XSLTSchema r1;
        java.lang.String r2, r3, r4;
        org.apache.xalan.processor.XSLTElementDef[] r5;
        org.apache.xalan.processor.XSLTAttributeDef[] r6;
        org.apache.xalan.processor.XSLTElementProcessor r7;
        java.lang.Class r8;
        int i0;
        boolean z0;

        r0 := @this: org.apache.xalan.processor.XSLTElementDef;

        r1 := @parameter0: org.apache.xalan.processor.XSLTSchema;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: org.apache.xalan.processor.XSLTElementDef[];

        r6 := @parameter5: org.apache.xalan.processor.XSLTAttributeDef[];

        r7 := @parameter6: org.apache.xalan.processor.XSLTElementProcessor;

        r8 := @parameter7: java.lang.Class;

        i0 := @parameter8: int;

        z0 := @parameter9: boolean;

        specialinvoke r0.<org.apache.xalan.processor.XSLTElementDef: void <init>(org.apache.xalan.processor.XSLTSchema,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.processor.XSLTElementDef[],org.apache.xalan.processor.XSLTAttributeDef[],org.apache.xalan.processor.XSLTElementProcessor,java.lang.Class)>(r1, r2, r3, r4, r5, r6, r7, r8);

        r0.<org.apache.xalan.processor.XSLTElementDef: int m_order> = i0;

        r0.<org.apache.xalan.processor.XSLTElementDef: boolean m_multiAllowed> = z0;

        return;
    }

    void <init>(org.apache.xalan.processor.XSLTSchema, java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.processor.XSLTElementDef[], org.apache.xalan.processor.XSLTAttributeDef[], org.apache.xalan.processor.XSLTElementProcessor, java.lang.Class, boolean)
    {
        org.apache.xalan.processor.XSLTElementDef r0;
        org.apache.xalan.processor.XSLTSchema r1;
        java.lang.String r2, r3, r4;
        org.apache.xalan.processor.XSLTElementDef[] r5;
        org.apache.xalan.processor.XSLTAttributeDef[] r6;
        org.apache.xalan.processor.XSLTElementProcessor r7;
        java.lang.Class r8;
        boolean z0, $z1, $z2, $z3;
        org.apache.xml.utils.QName $r9, $r10;

        r0 := @this: org.apache.xalan.processor.XSLTElementDef;

        r1 := @parameter0: org.apache.xalan.processor.XSLTSchema;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: org.apache.xalan.processor.XSLTElementDef[];

        r6 := @parameter5: org.apache.xalan.processor.XSLTAttributeDef[];

        r7 := @parameter6: org.apache.xalan.processor.XSLTElementProcessor;

        r8 := @parameter7: java.lang.Class;

        z0 := @parameter8: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xalan.processor.XSLTElementDef: int m_type> = 1;

        r0.<org.apache.xalan.processor.XSLTElementDef: boolean m_has_required> = 0;

        r0.<org.apache.xalan.processor.XSLTElementDef: boolean m_required> = 0;

        r0.<org.apache.xalan.processor.XSLTElementDef: boolean m_isOrdered> = 0;

        r0.<org.apache.xalan.processor.XSLTElementDef: int m_order> = -1;

        r0.<org.apache.xalan.processor.XSLTElementDef: int m_lastOrder> = -1;

        r0.<org.apache.xalan.processor.XSLTElementDef: boolean m_multiAllowed> = 1;

        r0.<org.apache.xalan.processor.XSLTElementDef: boolean m_has_required> = z0;

        virtualinvoke r0.<org.apache.xalan.processor.XSLTElementDef: void build(java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.processor.XSLTElementDef[],org.apache.xalan.processor.XSLTAttributeDef[],org.apache.xalan.processor.XSLTElementProcessor,java.lang.Class)>(r2, r3, r4, r5, r6, r7, r8);

        if r2 == null goto label2;

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/1999/XSL/Transform");

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.apache.org/xalan");

        if $z2 != 0 goto label1;

        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.apache.org/xslt");

        if $z3 == 0 goto label2;

     label1:
        $r9 = new org.apache.xml.utils.QName;

        specialinvoke $r9.<org.apache.xml.utils.QName: void <init>(java.lang.String,java.lang.String)>(r2, r3);

        virtualinvoke r1.<org.apache.xalan.processor.XSLTSchema: void addAvailableElement(org.apache.xml.utils.QName)>($r9);

        if r4 == null goto label2;

        $r10 = new org.apache.xml.utils.QName;

        specialinvoke $r10.<org.apache.xml.utils.QName: void <init>(java.lang.String,java.lang.String)>(r2, r4);

        virtualinvoke r1.<org.apache.xalan.processor.XSLTSchema: void addAvailableElement(org.apache.xml.utils.QName)>($r10);

     label2:
        return;
    }

    void <init>(org.apache.xalan.processor.XSLTSchema, java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.processor.XSLTElementDef[], org.apache.xalan.processor.XSLTAttributeDef[], org.apache.xalan.processor.XSLTElementProcessor, java.lang.Class, boolean, int, boolean)
    {
        org.apache.xalan.processor.XSLTElementDef r0;
        org.apache.xalan.processor.XSLTSchema r1;
        java.lang.String r2, r3, r4;
        org.apache.xalan.processor.XSLTElementDef[] r5;
        org.apache.xalan.processor.XSLTAttributeDef[] r6;
        org.apache.xalan.processor.XSLTElementProcessor r7;
        java.lang.Class r8;
        boolean z0, z1;
        int i0;

        r0 := @this: org.apache.xalan.processor.XSLTElementDef;

        r1 := @parameter0: org.apache.xalan.processor.XSLTSchema;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: org.apache.xalan.processor.XSLTElementDef[];

        r6 := @parameter5: org.apache.xalan.processor.XSLTAttributeDef[];

        r7 := @parameter6: org.apache.xalan.processor.XSLTElementProcessor;

        r8 := @parameter7: java.lang.Class;

        z0 := @parameter8: boolean;

        i0 := @parameter9: int;

        z1 := @parameter10: boolean;

        specialinvoke r0.<org.apache.xalan.processor.XSLTElementDef: void <init>(org.apache.xalan.processor.XSLTSchema,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.processor.XSLTElementDef[],org.apache.xalan.processor.XSLTAttributeDef[],org.apache.xalan.processor.XSLTElementProcessor,java.lang.Class,int,boolean)>(r1, r2, r3, r4, r5, r6, r7, r8, i0, z1);

        r0.<org.apache.xalan.processor.XSLTElementDef: boolean m_isOrdered> = z0;

        return;
    }

    void <init>(org.apache.xalan.processor.XSLTSchema, java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.processor.XSLTElementDef[], org.apache.xalan.processor.XSLTAttributeDef[], org.apache.xalan.processor.XSLTElementProcessor, java.lang.Class, boolean, boolean)
    {
        org.apache.xalan.processor.XSLTElementDef r0;
        org.apache.xalan.processor.XSLTSchema r1;
        java.lang.String r2, r3, r4;
        org.apache.xalan.processor.XSLTElementDef[] r5;
        org.apache.xalan.processor.XSLTAttributeDef[] r6;
        org.apache.xalan.processor.XSLTElementProcessor r7;
        java.lang.Class r8;
        boolean z0, z1;

        r0 := @this: org.apache.xalan.processor.XSLTElementDef;

        r1 := @parameter0: org.apache.xalan.processor.XSLTSchema;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: org.apache.xalan.processor.XSLTElementDef[];

        r6 := @parameter5: org.apache.xalan.processor.XSLTAttributeDef[];

        r7 := @parameter6: org.apache.xalan.processor.XSLTElementProcessor;

        r8 := @parameter7: java.lang.Class;

        z0 := @parameter8: boolean;

        z1 := @parameter9: boolean;

        specialinvoke r0.<org.apache.xalan.processor.XSLTElementDef: void <init>(org.apache.xalan.processor.XSLTSchema,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.processor.XSLTElementDef[],org.apache.xalan.processor.XSLTAttributeDef[],org.apache.xalan.processor.XSLTElementProcessor,java.lang.Class,boolean)>(r1, r2, r3, r4, r5, r6, r7, r8, z0);

        r0.<org.apache.xalan.processor.XSLTElementDef: boolean m_required> = z1;

        return;
    }

    void <init>(org.apache.xalan.processor.XSLTSchema, java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.processor.XSLTElementDef[], org.apache.xalan.processor.XSLTAttributeDef[], org.apache.xalan.processor.XSLTElementProcessor, java.lang.Class, boolean, boolean, int, boolean)
    {
        org.apache.xalan.processor.XSLTElementDef r0;
        org.apache.xalan.processor.XSLTSchema r1;
        java.lang.String r2, r3, r4;
        org.apache.xalan.processor.XSLTElementDef[] r5;
        org.apache.xalan.processor.XSLTAttributeDef[] r6;
        org.apache.xalan.processor.XSLTElementProcessor r7;
        java.lang.Class r8;
        boolean z0, z1, z2;
        int i0;

        r0 := @this: org.apache.xalan.processor.XSLTElementDef;

        r1 := @parameter0: org.apache.xalan.processor.XSLTSchema;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: org.apache.xalan.processor.XSLTElementDef[];

        r6 := @parameter5: org.apache.xalan.processor.XSLTAttributeDef[];

        r7 := @parameter6: org.apache.xalan.processor.XSLTElementProcessor;

        r8 := @parameter7: java.lang.Class;

        z0 := @parameter8: boolean;

        z1 := @parameter9: boolean;

        i0 := @parameter10: int;

        z2 := @parameter11: boolean;

        specialinvoke r0.<org.apache.xalan.processor.XSLTElementDef: void <init>(org.apache.xalan.processor.XSLTSchema,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.processor.XSLTElementDef[],org.apache.xalan.processor.XSLTAttributeDef[],org.apache.xalan.processor.XSLTElementProcessor,java.lang.Class,boolean,boolean)>(r1, r2, r3, r4, r5, r6, r7, r8, z0, z1);

        r0.<org.apache.xalan.processor.XSLTElementDef: int m_order> = i0;

        r0.<org.apache.xalan.processor.XSLTElementDef: boolean m_multiAllowed> = z2;

        return;
    }

    void <init>(org.apache.xalan.processor.XSLTSchema, java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.processor.XSLTElementDef[], org.apache.xalan.processor.XSLTAttributeDef[], org.apache.xalan.processor.XSLTElementProcessor, java.lang.Class, boolean, boolean, boolean, int, boolean)
    {
        org.apache.xalan.processor.XSLTElementDef r0;
        org.apache.xalan.processor.XSLTSchema r1;
        java.lang.String r2, r3, r4;
        org.apache.xalan.processor.XSLTElementDef[] r5;
        org.apache.xalan.processor.XSLTAttributeDef[] r6;
        org.apache.xalan.processor.XSLTElementProcessor r7;
        java.lang.Class r8;
        boolean z0, z1, z2, z3;
        int i0;

        r0 := @this: org.apache.xalan.processor.XSLTElementDef;

        r1 := @parameter0: org.apache.xalan.processor.XSLTSchema;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: org.apache.xalan.processor.XSLTElementDef[];

        r6 := @parameter5: org.apache.xalan.processor.XSLTAttributeDef[];

        r7 := @parameter6: org.apache.xalan.processor.XSLTElementProcessor;

        r8 := @parameter7: java.lang.Class;

        z0 := @parameter8: boolean;

        z1 := @parameter9: boolean;

        z2 := @parameter10: boolean;

        i0 := @parameter11: int;

        z3 := @parameter12: boolean;

        specialinvoke r0.<org.apache.xalan.processor.XSLTElementDef: void <init>(org.apache.xalan.processor.XSLTSchema,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.processor.XSLTElementDef[],org.apache.xalan.processor.XSLTAttributeDef[],org.apache.xalan.processor.XSLTElementProcessor,java.lang.Class,boolean,boolean)>(r1, r2, r3, r4, r5, r6, r7, r8, z0, z1);

        r0.<org.apache.xalan.processor.XSLTElementDef: int m_order> = i0;

        r0.<org.apache.xalan.processor.XSLTElementDef: boolean m_multiAllowed> = z3;

        r0.<org.apache.xalan.processor.XSLTElementDef: boolean m_isOrdered> = z2;

        return;
    }

    private boolean QNameEquals(java.lang.String, java.lang.String)
    {
        org.apache.xalan.processor.XSLTElementDef r0;
        java.lang.String r1, r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.xalan.processor.XSLTElementDef;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.apache.xalan.processor.XSLTElementDef: java.lang.String m_namespace>;

        $z0 = staticinvoke <org.apache.xalan.processor.XSLTElementDef: boolean equalsMayBeNullOrZeroLen(java.lang.String,java.lang.String)>($r3, r1);

        if $z0 == 0 goto label2;

        $r4 = r0.<org.apache.xalan.processor.XSLTElementDef: java.lang.String m_name>;

        $z1 = staticinvoke <org.apache.xalan.processor.XSLTElementDef: boolean equalsMayBeNullOrZeroLen(java.lang.String,java.lang.String)>($r4, r2);

        if $z1 != 0 goto label1;

        $r5 = r0.<org.apache.xalan.processor.XSLTElementDef: java.lang.String m_nameAlias>;

        $z2 = staticinvoke <org.apache.xalan.processor.XSLTElementDef: boolean equalsMayBeNullOrZeroLen(java.lang.String,java.lang.String)>($r5, r2);

        if $z2 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    private static boolean equalsMayBeNull(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        if r1 == r0 goto label1;

        if r0 == null goto label2;

        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    private static boolean equalsMayBeNullOrZeroLen(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label3;

        i0 = 0;

     label1:
        if r1 != null goto label4;

        i1 = 0;

     label2:
        if i0 == i1 goto label5;

        return 0;

     label3:
        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        goto label1;

     label4:
        i1 = virtualinvoke r1.<java.lang.String: int length()>();

        goto label2;

     label5:
        if i0 != 0 goto label6;

        return 1;

     label6:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    void build(java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.processor.XSLTElementDef[], org.apache.xalan.processor.XSLTAttributeDef[], org.apache.xalan.processor.XSLTElementProcessor, java.lang.Class)
    {
        org.apache.xalan.processor.XSLTElementDef r0, r8;
        java.lang.String r1, r2, r3, $r15, $r16, $r18;
        org.apache.xalan.processor.XSLTElementDef[] r4, $r9, $r10, $r11;
        org.apache.xalan.processor.XSLTAttributeDef[] r5;
        org.apache.xalan.processor.XSLTElementProcessor r6;
        java.lang.Class r7;
        int i0, i1;
        boolean $z0, $z1;
        java.util.Hashtable $r12, $r13, $r20;
        java.lang.StringBuilder $r14, $r17, $r19;

        r0 := @this: org.apache.xalan.processor.XSLTElementDef;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: org.apache.xalan.processor.XSLTElementDef[];

        r5 := @parameter4: org.apache.xalan.processor.XSLTAttributeDef[];

        r6 := @parameter5: org.apache.xalan.processor.XSLTElementProcessor;

        r7 := @parameter6: java.lang.Class;

        r0.<org.apache.xalan.processor.XSLTElementDef: java.lang.String m_namespace> = r1;

        r0.<org.apache.xalan.processor.XSLTElementDef: java.lang.String m_name> = r2;

        r0.<org.apache.xalan.processor.XSLTElementDef: java.lang.String m_nameAlias> = r3;

        r0.<org.apache.xalan.processor.XSLTElementDef: org.apache.xalan.processor.XSLTElementDef[] m_elements> = r4;

        r0.<org.apache.xalan.processor.XSLTElementDef: org.apache.xalan.processor.XSLTAttributeDef[] m_attributes> = r5;

        virtualinvoke r0.<org.apache.xalan.processor.XSLTElementDef: void setElementProcessor(org.apache.xalan.processor.XSLTElementProcessor)>(r6);

        r0.<org.apache.xalan.processor.XSLTElementDef: java.lang.Class m_classObject> = r7;

        $z0 = virtualinvoke r0.<org.apache.xalan.processor.XSLTElementDef: boolean hasRequired()>();

        if $z0 == 0 goto label4;

        $r9 = r0.<org.apache.xalan.processor.XSLTElementDef: org.apache.xalan.processor.XSLTElementDef[] m_elements>;

        if $r9 == null goto label4;

        $r10 = r0.<org.apache.xalan.processor.XSLTElementDef: org.apache.xalan.processor.XSLTElementDef[] m_elements>;

        i0 = lengthof $r10;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        $r11 = r0.<org.apache.xalan.processor.XSLTElementDef: org.apache.xalan.processor.XSLTElementDef[] m_elements>;

        r8 = $r11[i1];

        if r8 == null goto label3;

        $z1 = virtualinvoke r8.<org.apache.xalan.processor.XSLTElementDef: boolean getRequired()>();

        if $z1 == 0 goto label3;

        $r13 = r0.<org.apache.xalan.processor.XSLTElementDef: java.util.Hashtable m_requiredFound>;

        if $r13 != null goto label2;

        $r20 = new java.util.Hashtable;

        specialinvoke $r20.<java.util.Hashtable: void <init>()>();

        r0.<org.apache.xalan.processor.XSLTElementDef: java.util.Hashtable m_requiredFound> = $r20;

     label2:
        $r12 = r0.<org.apache.xalan.processor.XSLTElementDef: java.util.Hashtable m_requiredFound>;

        $r15 = virtualinvoke r8.<org.apache.xalan.processor.XSLTElementDef: java.lang.String getName()>();

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("xsl:");

        $r16 = virtualinvoke r8.<org.apache.xalan.processor.XSLTElementDef: java.lang.String getName()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r18);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return;
    }

    org.apache.xalan.processor.XSLTAttributeDef getAttributeDef(java.lang.String, java.lang.String)
    {
        org.apache.xalan.processor.XSLTElementDef r0;
        java.lang.String r1, r2, r6, r7;
        org.apache.xalan.processor.XSLTAttributeDef r3, r5, $r8;
        org.apache.xalan.processor.XSLTAttributeDef[] r4;
        int i0, i1, $i2, $i3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r0 := @this: org.apache.xalan.processor.XSLTElementDef;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 = null;

        r4 = virtualinvoke r0.<org.apache.xalan.processor.XSLTElementDef: org.apache.xalan.processor.XSLTAttributeDef[] getAttributes()>();

        i0 = lengthof r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label6;

        r5 = r4[i1];

        r6 = virtualinvoke r5.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String getNamespace()>();

        r7 = virtualinvoke r5.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String getName()>();

        $z2 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z2 == 0 goto label3;

        $z6 = staticinvoke <org.apache.xalan.processor.XSLTElementDef: boolean equalsMayBeNullOrZeroLen(java.lang.String,java.lang.String)>(r1, r6);

        if $z6 != 0 goto label2;

        if r6 == null goto label3;

        $z5 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z5 == 0 goto label3;

        if r1 == null goto label3;

        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i3 <= 0 goto label3;

     label2:
        return r5;

     label3:
        $z1 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z1 == 0 goto label5;

        if r6 != null goto label5;

        r3 = r5;

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        $z4 = staticinvoke <org.apache.xalan.processor.XSLTElementDef: boolean equalsMayBeNullOrZeroLen(java.lang.String,java.lang.String)>(r1, r6);

        if $z4 == 0 goto label4;

        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z3 == 0 goto label4;

        return r5;

     label6:
        if r3 != null goto label7;

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i2 <= 0 goto label7;

        $z0 = staticinvoke <org.apache.xalan.processor.XSLTElementDef: boolean equalsMayBeNullOrZeroLen(java.lang.String,java.lang.String)>(r1, "http://www.w3.org/1999/XSL/Transform");

        if $z0 != 0 goto label7;

        $r8 = <org.apache.xalan.processor.XSLTAttributeDef: org.apache.xalan.processor.XSLTAttributeDef m_foreignAttr>;

        return $r8;

     label7:
        return r3;
    }

    org.apache.xalan.processor.XSLTAttributeDef[] getAttributes()
    {
        org.apache.xalan.processor.XSLTElementDef r0;
        org.apache.xalan.processor.XSLTAttributeDef[] $r1;

        r0 := @this: org.apache.xalan.processor.XSLTElementDef;

        $r1 = r0.<org.apache.xalan.processor.XSLTElementDef: org.apache.xalan.processor.XSLTAttributeDef[] m_attributes>;

        return $r1;
    }

    java.lang.Class getClassObject()
    {
        org.apache.xalan.processor.XSLTElementDef r0;
        java.lang.Class $r1;

        r0 := @this: org.apache.xalan.processor.XSLTElementDef;

        $r1 = r0.<org.apache.xalan.processor.XSLTElementDef: java.lang.Class m_classObject>;

        return $r1;
    }

    public org.apache.xalan.processor.XSLTElementProcessor getElementProcessor()
    {
        org.apache.xalan.processor.XSLTElementDef r0;
        org.apache.xalan.processor.XSLTElementProcessor $r1;

        r0 := @this: org.apache.xalan.processor.XSLTElementDef;

        $r1 = r0.<org.apache.xalan.processor.XSLTElementDef: org.apache.xalan.processor.XSLTElementProcessor m_elementProcessor>;

        return $r1;
    }

    public org.apache.xalan.processor.XSLTElementDef[] getElements()
    {
        org.apache.xalan.processor.XSLTElementDef r0;
        org.apache.xalan.processor.XSLTElementDef[] $r1;

        r0 := @this: org.apache.xalan.processor.XSLTElementDef;

        $r1 = r0.<org.apache.xalan.processor.XSLTElementDef: org.apache.xalan.processor.XSLTElementDef[] m_elements>;

        return $r1;
    }

    int getLastOrder()
    {
        org.apache.xalan.processor.XSLTElementDef r0;
        int $i0;

        r0 := @this: org.apache.xalan.processor.XSLTElementDef;

        $i0 = r0.<org.apache.xalan.processor.XSLTElementDef: int m_lastOrder>;

        return $i0;
    }

    boolean getMultiAllowed()
    {
        org.apache.xalan.processor.XSLTElementDef r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.processor.XSLTElementDef;

        $z0 = r0.<org.apache.xalan.processor.XSLTElementDef: boolean m_multiAllowed>;

        return $z0;
    }

    java.lang.String getName()
    {
        org.apache.xalan.processor.XSLTElementDef r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xalan.processor.XSLTElementDef;

        $r1 = r0.<org.apache.xalan.processor.XSLTElementDef: java.lang.String m_name>;

        return $r1;
    }

    java.lang.String getNameAlias()
    {
        org.apache.xalan.processor.XSLTElementDef r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xalan.processor.XSLTElementDef;

        $r1 = r0.<org.apache.xalan.processor.XSLTElementDef: java.lang.String m_nameAlias>;

        return $r1;
    }

    java.lang.String getNamespace()
    {
        org.apache.xalan.processor.XSLTElementDef r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xalan.processor.XSLTElementDef;

        $r1 = r0.<org.apache.xalan.processor.XSLTElementDef: java.lang.String m_namespace>;

        return $r1;
    }

    int getOrder()
    {
        org.apache.xalan.processor.XSLTElementDef r0;
        int $i0;

        r0 := @this: org.apache.xalan.processor.XSLTElementDef;

        $i0 = r0.<org.apache.xalan.processor.XSLTElementDef: int m_order>;

        return $i0;
    }

    org.apache.xalan.processor.XSLTElementProcessor getProcessorFor(java.lang.String, java.lang.String)
    {
        org.apache.xalan.processor.XSLTElementDef r0, r4;
        java.lang.String r1, r2, $r8, $r9;
        org.apache.xalan.processor.XSLTElementProcessor r3;
        int i0, i1, i2, i3;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.xalan.processor.XSLTElementDef[] $r5, $r6, $r7;

        r0 := @this: org.apache.xalan.processor.XSLTElementDef;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 = null;

        $r5 = r0.<org.apache.xalan.processor.XSLTElementDef: org.apache.xalan.processor.XSLTElementDef[] m_elements>;

        if $r5 != null goto label02;

     label01:
        return null;

     label02:
        $r6 = r0.<org.apache.xalan.processor.XSLTElementDef: org.apache.xalan.processor.XSLTElementDef[] m_elements>;

        i0 = lengthof $r6;

        i1 = -1;

        z0 = 1;

        i2 = 0;

     label03:
        if i2 >= i0 goto label07;

        $r7 = r0.<org.apache.xalan.processor.XSLTElementDef: org.apache.xalan.processor.XSLTElementDef[] m_elements>;

        r4 = $r7[i2];

        $r8 = r4.<org.apache.xalan.processor.XSLTElementDef: java.lang.String m_name>;

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z3 == 0 goto label05;

        $z5 = staticinvoke <org.apache.xalan.processor.XSLTElementDef: boolean equalsMayBeNullOrZeroLen(java.lang.String,java.lang.String)>(r1, "http://www.w3.org/1999/XSL/Transform");

        if $z5 != 0 goto label04;

        r3 = r4.<org.apache.xalan.processor.XSLTElementDef: org.apache.xalan.processor.XSLTElementProcessor m_elementProcessor>;

        i1 = virtualinvoke r4.<org.apache.xalan.processor.XSLTElementDef: int getOrder()>();

        z0 = virtualinvoke r4.<org.apache.xalan.processor.XSLTElementDef: boolean getMultiAllowed()>();

     label04:
        i2 = i2 + 1;

        goto label03;

     label05:
        $z2 = specialinvoke r4.<org.apache.xalan.processor.XSLTElementDef: boolean QNameEquals(java.lang.String,java.lang.String)>(r1, r2);

        if $z2 == 0 goto label04;

        $z4 = virtualinvoke r4.<org.apache.xalan.processor.XSLTElementDef: boolean getRequired()>();

        if $z4 == 0 goto label06;

        $r9 = virtualinvoke r4.<org.apache.xalan.processor.XSLTElementDef: java.lang.String getName()>();

        virtualinvoke r0.<org.apache.xalan.processor.XSLTElementDef: void setRequiredFound(java.lang.String,boolean)>($r9, 1);

     label06:
        i1 = virtualinvoke r4.<org.apache.xalan.processor.XSLTElementDef: int getOrder()>();

        z0 = virtualinvoke r4.<org.apache.xalan.processor.XSLTElementDef: boolean getMultiAllowed()>();

        r3 = r4.<org.apache.xalan.processor.XSLTElementDef: org.apache.xalan.processor.XSLTElementProcessor m_elementProcessor>;

     label07:
        if r3 == null goto label08;

        $z1 = virtualinvoke r0.<org.apache.xalan.processor.XSLTElementDef: boolean isOrdered()>();

        if $z1 == 0 goto label08;

        i3 = virtualinvoke r0.<org.apache.xalan.processor.XSLTElementDef: int getLastOrder()>();

        if i1 <= i3 goto label09;

        virtualinvoke r0.<org.apache.xalan.processor.XSLTElementDef: void setLastOrder(int)>(i1);

     label08:
        return r3;

     label09:
        if i1 != i3 goto label10;

        if z0 == 0 goto label01;

     label10:
        if i1 >= i3 goto label08;

        if i1 <= 0 goto label08;

        return null;
    }

    org.apache.xalan.processor.XSLTElementProcessor getProcessorForUnknown(java.lang.String, java.lang.String)
    {
        org.apache.xalan.processor.XSLTElementDef r0, r3;
        java.lang.String r1, r2, $r7;
        int i0, i1, $i2;
        org.apache.xalan.processor.XSLTElementDef[] $r4, $r5, $r6;
        boolean $z0;
        org.apache.xalan.processor.XSLTElementProcessor $r8;

        r0 := @this: org.apache.xalan.processor.XSLTElementDef;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r4 = r0.<org.apache.xalan.processor.XSLTElementDef: org.apache.xalan.processor.XSLTElementDef[] m_elements>;

        if $r4 != null goto label2;

     label1:
        return null;

     label2:
        $r5 = r0.<org.apache.xalan.processor.XSLTElementDef: org.apache.xalan.processor.XSLTElementDef[] m_elements>;

        i0 = lengthof $r5;

        i1 = 0;

     label3:
        if i1 >= i0 goto label1;

        $r6 = r0.<org.apache.xalan.processor.XSLTElementDef: org.apache.xalan.processor.XSLTElementDef[] m_elements>;

        r3 = $r6[i1];

        $r7 = r3.<org.apache.xalan.processor.XSLTElementDef: java.lang.String m_name>;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("unknown");

        if $z0 == 0 goto label4;

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i2 <= 0 goto label4;

        $r8 = r3.<org.apache.xalan.processor.XSLTElementDef: org.apache.xalan.processor.XSLTElementProcessor m_elementProcessor>;

        return $r8;

     label4:
        i1 = i1 + 1;

        goto label3;
    }

    boolean getRequired()
    {
        org.apache.xalan.processor.XSLTElementDef r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.processor.XSLTElementDef;

        $z0 = r0.<org.apache.xalan.processor.XSLTElementDef: boolean m_required>;

        return $z0;
    }

    java.lang.String getRequiredElem()
    {
        org.apache.xalan.processor.XSLTElementDef r0;
        java.util.Enumeration r1;
        java.lang.String r2, $r11;
        boolean z0, $z1;
        java.util.Hashtable $r3, $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r12;
        java.lang.Object $r10;

        r0 := @this: org.apache.xalan.processor.XSLTElementDef;

        $r3 = r0.<org.apache.xalan.processor.XSLTElementDef: java.util.Hashtable m_requiredFound>;

        if $r3 != null goto label2;

        r2 = null;

     label1:
        return r2;

     label2:
        $r4 = r0.<org.apache.xalan.processor.XSLTElementDef: java.util.Hashtable m_requiredFound>;

        r1 = virtualinvoke $r4.<java.util.Hashtable: java.util.Enumeration elements()>();

        r2 = "";

        z0 = 1;

     label3:
        $z1 = interfaceinvoke r1.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label1;

        if z0 == 0 goto label5;

        z0 = 0;

     label4:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = interfaceinvoke r1.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r11 = (java.lang.String) $r10;

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        r2 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label3;

     label5:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label4;
    }

    boolean getRequiredFound()
    {
        org.apache.xalan.processor.XSLTElementDef r0;
        java.util.Hashtable $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.xalan.processor.XSLTElementDef;

        $r1 = r0.<org.apache.xalan.processor.XSLTElementDef: java.util.Hashtable m_requiredFound>;

        if $r1 != null goto label1;

        return 1;

     label1:
        $r2 = r0.<org.apache.xalan.processor.XSLTElementDef: java.util.Hashtable m_requiredFound>;

        $z0 = virtualinvoke $r2.<java.util.Hashtable: boolean isEmpty()>();

        return $z0;
    }

    int getType()
    {
        org.apache.xalan.processor.XSLTElementDef r0;
        int $i0;

        r0 := @this: org.apache.xalan.processor.XSLTElementDef;

        $i0 = r0.<org.apache.xalan.processor.XSLTElementDef: int m_type>;

        return $i0;
    }

    boolean hasRequired()
    {
        org.apache.xalan.processor.XSLTElementDef r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.processor.XSLTElementDef;

        $z0 = r0.<org.apache.xalan.processor.XSLTElementDef: boolean m_has_required>;

        return $z0;
    }

    boolean isOrdered()
    {
        org.apache.xalan.processor.XSLTElementDef r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.processor.XSLTElementDef;

        $z0 = r0.<org.apache.xalan.processor.XSLTElementDef: boolean m_isOrdered>;

        return $z0;
    }

    public void setElementProcessor(org.apache.xalan.processor.XSLTElementProcessor)
    {
        org.apache.xalan.processor.XSLTElementDef r0;
        org.apache.xalan.processor.XSLTElementProcessor r1, $r2;

        r0 := @this: org.apache.xalan.processor.XSLTElementDef;

        r1 := @parameter0: org.apache.xalan.processor.XSLTElementProcessor;

        if r1 == null goto label1;

        r0.<org.apache.xalan.processor.XSLTElementDef: org.apache.xalan.processor.XSLTElementProcessor m_elementProcessor> = r1;

        $r2 = r0.<org.apache.xalan.processor.XSLTElementDef: org.apache.xalan.processor.XSLTElementProcessor m_elementProcessor>;

        virtualinvoke $r2.<org.apache.xalan.processor.XSLTElementProcessor: void setElemDef(org.apache.xalan.processor.XSLTElementDef)>(r0);

     label1:
        return;
    }

    void setElements(org.apache.xalan.processor.XSLTElementDef[])
    {
        org.apache.xalan.processor.XSLTElementDef r0;
        org.apache.xalan.processor.XSLTElementDef[] r1;

        r0 := @this: org.apache.xalan.processor.XSLTElementDef;

        r1 := @parameter0: org.apache.xalan.processor.XSLTElementDef[];

        r0.<org.apache.xalan.processor.XSLTElementDef: org.apache.xalan.processor.XSLTElementDef[] m_elements> = r1;

        return;
    }

    void setLastOrder(int)
    {
        org.apache.xalan.processor.XSLTElementDef r0;
        int i0;

        r0 := @this: org.apache.xalan.processor.XSLTElementDef;

        i0 := @parameter0: int;

        r0.<org.apache.xalan.processor.XSLTElementDef: int m_lastOrder> = i0;

        return;
    }

    void setRequiredFound(java.lang.String, boolean)
    {
        org.apache.xalan.processor.XSLTElementDef r0;
        java.lang.String r1;
        boolean z0;
        java.util.Hashtable $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: org.apache.xalan.processor.XSLTElementDef;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = r0.<org.apache.xalan.processor.XSLTElementDef: java.util.Hashtable m_requiredFound>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        if $r3 == null goto label1;

        $r4 = r0.<org.apache.xalan.processor.XSLTElementDef: java.util.Hashtable m_requiredFound>;

        virtualinvoke $r4.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r1);

     label1:
        return;
    }

    void setType(int)
    {
        org.apache.xalan.processor.XSLTElementDef r0;
        int i0;

        r0 := @this: org.apache.xalan.processor.XSLTElementDef;

        i0 := @parameter0: int;

        r0.<org.apache.xalan.processor.XSLTElementDef: int m_type> = i0;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.xalan.processor.XSLTElementDef: int T_PCDATA> = 2;

        <org.apache.xalan.processor.XSLTElementDef: int T_ELEMENT> = 1;

        <org.apache.xalan.processor.XSLTElementDef: int T_ANY> = 3;

        return;
    }
}
