public final class org.apache.xml.serializer.SerializerFactory extends java.lang.Object
{
    private static java.util.Hashtable m_formats;

    static void <clinit>()
    {
        java.util.Hashtable $r0;

        $r0 = new java.util.Hashtable;

        specialinvoke $r0.<java.util.Hashtable: void <init>()>();

        <org.apache.xml.serializer.SerializerFactory: java.util.Hashtable m_formats> = $r0;

        return;
    }

    private void <init>()
    {
        org.apache.xml.serializer.SerializerFactory r0;

        r0 := @this: org.apache.xml.serializer.SerializerFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.xml.serializer.Serializer getSerializer(java.util.Properties)
    {
        java.util.Properties r0, $r17;
        java.lang.Exception r1, $r10, $r25;
        java.lang.String r2, r3, $r11, $r14, $r23, $r24;
        java.lang.ClassLoader r4;
        java.lang.Class r5, $r13;
        java.lang.Object r6, $r16, $r18;
        org.apache.xml.serializer.SerializationHandler r7;
        org.apache.xml.serializer.Serializer r8;
        boolean $z0, $z1;
        java.lang.Object[] $r9, $r21, $r26;
        org.apache.xml.serializer.utils.Messages $r12, $r20, $r27;
        org.xml.sax.ContentHandler $r15;
        java.lang.IllegalArgumentException $r19, $r22;
        org.apache.xml.serializer.utils.WrappedRuntimeException $r28;

        r0 := @parameter0: java.util.Properties;

     label01:
        r2 = virtualinvoke r0.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("method");

     label02:
        if r2 != null goto label05;

     label03:
        $r22 = new java.lang.IllegalArgumentException;

        $r27 = <org.apache.xml.serializer.utils.Utils: org.apache.xml.serializer.utils.Messages messages>;

        $r26 = newarray (java.lang.Object)[1];

        $r26[0] = "method";

        $r24 = virtualinvoke $r27.<org.apache.xml.serializer.utils.Messages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_FACTORY_PROPERTY_MISSING", $r26);

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r24);

        throw $r22;

     label04:
        $r25 := @caughtexception;

        r1 = $r25;

        $r28 = new org.apache.xml.serializer.utils.WrappedRuntimeException;

        specialinvoke $r28.<org.apache.xml.serializer.utils.WrappedRuntimeException: void <init>(java.lang.Exception)>(r1);

        throw $r28;

     label05:
        r3 = virtualinvoke r0.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("{http://xml.apache.org/xalan}content-handler");

     label06:
        if r3 != null goto label10;

     label07:
        $r17 = staticinvoke <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties getDefaultMethodProperties(java.lang.String)>(r2);

        r3 = virtualinvoke $r17.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("{http://xml.apache.org/xalan}content-handler");

     label08:
        if r3 != null goto label10;

     label09:
        $r19 = new java.lang.IllegalArgumentException;

        $r20 = <org.apache.xml.serializer.utils.Utils: org.apache.xml.serializer.utils.Messages messages>;

        $r21 = newarray (java.lang.Object)[1];

        $r21[0] = "{http://xml.apache.org/xalan}content-handler";

        $r23 = virtualinvoke $r20.<org.apache.xml.serializer.utils.Messages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_FACTORY_PROPERTY_MISSING", $r21);

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r23);

        throw $r19;

     label10:
        r4 = staticinvoke <org.apache.xml.serializer.ObjectFactory: java.lang.ClassLoader findClassLoader()>();

        r5 = staticinvoke <org.apache.xml.serializer.ObjectFactory: java.lang.Class findProviderClass(java.lang.String,java.lang.ClassLoader,boolean)>(r3, r4, 1);

        r6 = virtualinvoke r5.<java.lang.Class: java.lang.Object newInstance()>();

        $z0 = r6 instanceof org.apache.xml.serializer.SerializationHandler;

        if $z0 == 0 goto label12;

        $r18 = virtualinvoke r5.<java.lang.Class: java.lang.Object newInstance()>();

        r8 = (org.apache.xml.serializer.Serializer) $r18;

        interfaceinvoke r8.<org.apache.xml.serializer.Serializer: void setOutputFormat(java.util.Properties)>(r0);

     label11:
        return r8;

     label12:
        $z1 = r6 instanceof org.xml.sax.ContentHandler;

        if $z1 == 0 goto label14;

        $r14 = <org.apache.xml.serializer.SerializerConstants: java.lang.String DEFAULT_SAX_SERIALIZER>;

        $r13 = staticinvoke <org.apache.xml.serializer.ObjectFactory: java.lang.Class findProviderClass(java.lang.String,java.lang.ClassLoader,boolean)>($r14, r4, 1);

        $r16 = virtualinvoke $r13.<java.lang.Class: java.lang.Object newInstance()>();

        r7 = (org.apache.xml.serializer.SerializationHandler) $r16;

        $r15 = (org.xml.sax.ContentHandler) r6;

        interfaceinvoke r7.<org.apache.xml.serializer.SerializationHandler: void setContentHandler(org.xml.sax.ContentHandler)>($r15);

        interfaceinvoke r7.<org.apache.xml.serializer.SerializationHandler: void setOutputFormat(java.util.Properties)>(r0);

     label13:
        return r7;

     label14:
        $r10 = new java.lang.Exception;

        $r12 = <org.apache.xml.serializer.utils.Utils: org.apache.xml.serializer.utils.Messages messages>;

        $r9 = newarray (java.lang.Object)[1];

        $r9[0] = r3;

        $r11 = virtualinvoke $r12.<org.apache.xml.serializer.utils.Messages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_SERIALIZER_NOT_CONTENTHANDLER", $r9);

        specialinvoke $r10.<java.lang.Exception: void <init>(java.lang.String)>($r11);

     label15:
        throw $r10;

        catch java.lang.Exception from label01 to label02 with label04;
        catch java.lang.Exception from label03 to label04 with label04;
        catch java.lang.Exception from label05 to label06 with label04;
        catch java.lang.Exception from label07 to label08 with label04;
        catch java.lang.Exception from label09 to label10 with label04;
        catch java.lang.Exception from label10 to label11 with label04;
        catch java.lang.Exception from label12 to label13 with label04;
        catch java.lang.Exception from label14 to label15 with label04;
    }
}
