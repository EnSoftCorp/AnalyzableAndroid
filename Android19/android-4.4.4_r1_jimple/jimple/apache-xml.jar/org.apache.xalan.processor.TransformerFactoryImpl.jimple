public class org.apache.xalan.processor.TransformerFactoryImpl extends javax.xml.transform.sax.SAXTransformerFactory
{
    public static final java.lang.String FEATURE_INCREMENTAL;
    public static final java.lang.String FEATURE_OPTIMIZE;
    public static final java.lang.String FEATURE_SOURCE_LOCATION;
    public static final java.lang.String XSLT_PROPERTIES;
    private java.lang.String m_DOMsystemID;
    private javax.xml.transform.ErrorListener m_errorListener;
    private boolean m_incremental;
    private boolean m_isSecureProcessing;
    private boolean m_optimize;
    private boolean m_source_location;
    javax.xml.transform.URIResolver m_uriResolver;

    public void <init>()
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        org.apache.xml.utils.DefaultErrorHandler $r1;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        specialinvoke r0.<javax.xml.transform.sax.SAXTransformerFactory: void <init>()>();

        r0.<org.apache.xalan.processor.TransformerFactoryImpl: boolean m_isSecureProcessing> = 0;

        r0.<org.apache.xalan.processor.TransformerFactoryImpl: java.lang.String m_DOMsystemID> = null;

        r0.<org.apache.xalan.processor.TransformerFactoryImpl: boolean m_optimize> = 1;

        r0.<org.apache.xalan.processor.TransformerFactoryImpl: boolean m_source_location> = 0;

        r0.<org.apache.xalan.processor.TransformerFactoryImpl: boolean m_incremental> = 0;

        $r1 = new org.apache.xml.utils.DefaultErrorHandler;

        specialinvoke $r1.<org.apache.xml.utils.DefaultErrorHandler: void <init>(boolean)>(0);

        r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener> = $r1;

        return;
    }

    public javax.xml.transform.Source getAssociatedStylesheet(javax.xml.transform.Source, java.lang.String, java.lang.String, java.lang.String) throws javax.xml.transform.TransformerConfigurationException
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        javax.xml.transform.Source r1, $r28;
        java.lang.String r2, r3, r4, r6, $r43;
        org.xml.sax.InputSource r5;
        org.w3c.dom.Node r7;
        org.apache.xml.utils.StylesheetPIHandler r8, $r25;
        org.xml.sax.XMLReader r10, r22;
        java.io.IOException r11, $r34;
        javax.xml.transform.TransformerConfigurationException r12, r14, $r31, $r38;
        org.xml.sax.SAXException r13, r18, $r32, $r37, $r39, $r42;
        javax.xml.parsers.FactoryConfigurationError r16, $r40;
        javax.xml.parsers.ParserConfigurationException r19, $r36;
        boolean z0, $z1;
        javax.xml.parsers.SAXParserFactory r20;
        javax.xml.transform.dom.DOMSource r23;
        javax.xml.transform.URIResolver $r24, $r30;
        javax.xml.parsers.SAXParser $r26;
        org.apache.xml.utils.TreeWalker $r27;
        org.apache.xml.utils.DOM2Helper $r29;
        org.apache.xml.utils.StopParseException $r33;
        java.lang.NoSuchMethodError $r35;
        java.lang.AbstractMethodError $r41;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r1 := @parameter0: javax.xml.transform.Source;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 = null;

        $z1 = r1 instanceof javax.xml.transform.dom.DOMSource;

        if $z1 == 0 goto label05;

        r23 = (javax.xml.transform.dom.DOMSource) r1;

        r7 = virtualinvoke r23.<javax.xml.transform.dom.DOMSource: org.w3c.dom.Node getNode()>();

        r6 = virtualinvoke r23.<javax.xml.transform.dom.DOMSource: java.lang.String getSystemId()>();

     label01:
        $r25 = new org.apache.xml.utils.StylesheetPIHandler;

        specialinvoke $r25.<org.apache.xml.utils.StylesheetPIHandler: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r6, r2, r3, r4);

        r8 = $r25;

        $r24 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.URIResolver m_uriResolver>;

        if $r24 == null goto label02;

        $r30 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.URIResolver m_uriResolver>;

        virtualinvoke r8.<org.apache.xml.utils.StylesheetPIHandler: void setURIResolver(javax.xml.transform.URIResolver)>($r30);

     label02:
        if r7 == null goto label06;

     label03:
        $r27 = new org.apache.xml.utils.TreeWalker;

        $r29 = new org.apache.xml.utils.DOM2Helper;

        specialinvoke $r29.<org.apache.xml.utils.DOM2Helper: void <init>()>();

        specialinvoke $r27.<org.apache.xml.utils.TreeWalker: void <init>(org.xml.sax.ContentHandler,org.apache.xml.utils.DOMHelper,java.lang.String)>(r8, $r29, r6);

        virtualinvoke $r27.<org.apache.xml.utils.TreeWalker: void traverse(org.w3c.dom.Node)>(r7);

     label04:
        $r28 = virtualinvoke r8.<org.apache.xml.utils.StylesheetPIHandler: javax.xml.transform.Source getAssociatedStylesheet()>();

        return $r28;

     label05:
        r5 = staticinvoke <javax.xml.transform.sax.SAXSource: org.xml.sax.InputSource sourceToInputSource(javax.xml.transform.Source)>(r1);

        r6 = virtualinvoke r5.<org.xml.sax.InputSource: java.lang.String getSystemId()>();

        r7 = null;

        goto label01;

     label06:
        r20 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();

        virtualinvoke r20.<javax.xml.parsers.SAXParserFactory: void setNamespaceAware(boolean)>(1);

        z0 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: boolean m_isSecureProcessing>;

     label07:
        if z0 == 0 goto label09;

     label08:
        virtualinvoke r20.<javax.xml.parsers.SAXParserFactory: void setFeature(java.lang.String,boolean)>("http://javax.xml.XMLConstants/feature/secure-processing", 1);

     label09:
        $r26 = virtualinvoke r20.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();

        r22 = virtualinvoke $r26.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();

     label10:
        r10 = r22;

     label11:
        if r10 != null goto label13;

     label12:
        r10 = staticinvoke <org.xml.sax.helpers.XMLReaderFactory: org.xml.sax.XMLReader createXMLReader()>();

     label13:
        interfaceinvoke r10.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>(r8);

        interfaceinvoke r10.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>(r5);

     label14:
        goto label04;

     label15:
        $r36 := @caughtexception;

        r19 = $r36;

     label16:
        $r42 = new org.xml.sax.SAXException;

        specialinvoke $r42.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>(r19);

        r18 = $r42;

        throw r18;

     label17:
        $r37 := @caughtexception;

        r13 = $r37;

        $r38 = new javax.xml.transform.TransformerConfigurationException;

        specialinvoke $r38.<javax.xml.transform.TransformerConfigurationException: void <init>(java.lang.String,java.lang.Throwable)>("getAssociatedStylesheets failed", r13);

        r14 = $r38;

        throw r14;

     label18:
        $r40 := @caughtexception;

        r16 = $r40;

     label19:
        $r39 = new org.xml.sax.SAXException;

        $r43 = virtualinvoke r16.<javax.xml.parsers.FactoryConfigurationError: java.lang.String toString()>();

        specialinvoke $r39.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r43);

        throw $r39;

     label20:
        $r34 := @caughtexception;

        r11 = $r34;

        $r31 = new javax.xml.transform.TransformerConfigurationException;

        specialinvoke $r31.<javax.xml.transform.TransformerConfigurationException: void <init>(java.lang.String,java.lang.Throwable)>("getAssociatedStylesheets failed", r11);

        r12 = $r31;

        throw r12;

     label21:
        $r41 := @caughtexception;

        r10 = null;

        goto label11;

     label22:
        $r35 := @caughtexception;

        r10 = null;

        goto label11;

     label23:
        $r32 := @caughtexception;

        goto label09;

     label24:
        $r33 := @caughtexception;

        goto label04;

        catch org.apache.xml.utils.StopParseException from label03 to label04 with label24;
        catch org.xml.sax.SAXException from label03 to label04 with label17;
        catch java.io.IOException from label03 to label04 with label20;
        catch javax.xml.parsers.ParserConfigurationException from label06 to label07 with label15;
        catch javax.xml.parsers.FactoryConfigurationError from label06 to label07 with label18;
        catch java.lang.NoSuchMethodError from label06 to label07 with label22;
        catch java.lang.AbstractMethodError from label06 to label07 with label21;
        catch org.apache.xml.utils.StopParseException from label06 to label07 with label24;
        catch org.xml.sax.SAXException from label06 to label07 with label17;
        catch java.io.IOException from label06 to label07 with label20;
        catch org.xml.sax.SAXException from label08 to label09 with label23;
        catch javax.xml.parsers.ParserConfigurationException from label08 to label09 with label15;
        catch javax.xml.parsers.FactoryConfigurationError from label08 to label09 with label18;
        catch java.lang.NoSuchMethodError from label08 to label09 with label22;
        catch java.lang.AbstractMethodError from label08 to label09 with label21;
        catch org.apache.xml.utils.StopParseException from label08 to label09 with label24;
        catch java.io.IOException from label08 to label09 with label20;
        catch javax.xml.parsers.ParserConfigurationException from label09 to label10 with label15;
        catch javax.xml.parsers.FactoryConfigurationError from label09 to label10 with label18;
        catch java.lang.NoSuchMethodError from label09 to label10 with label22;
        catch java.lang.AbstractMethodError from label09 to label10 with label21;
        catch org.apache.xml.utils.StopParseException from label09 to label10 with label24;
        catch org.xml.sax.SAXException from label09 to label10 with label17;
        catch java.io.IOException from label09 to label10 with label20;
        catch org.apache.xml.utils.StopParseException from label12 to label13 with label24;
        catch org.xml.sax.SAXException from label12 to label13 with label17;
        catch java.io.IOException from label12 to label13 with label20;
        catch org.apache.xml.utils.StopParseException from label13 to label14 with label24;
        catch org.xml.sax.SAXException from label13 to label14 with label17;
        catch java.io.IOException from label13 to label14 with label20;
        catch org.apache.xml.utils.StopParseException from label16 to label17 with label24;
        catch org.xml.sax.SAXException from label16 to label17 with label17;
        catch java.io.IOException from label16 to label17 with label20;
        catch org.apache.xml.utils.StopParseException from label19 to label20 with label24;
        catch org.xml.sax.SAXException from label19 to label20 with label17;
        catch java.io.IOException from label19 to label20 with label20;
    }

    public java.lang.Object getAttribute(java.lang.String) throws java.lang.IllegalArgumentException
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        java.lang.String r1, $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.IllegalArgumentException $r2;
        java.lang.Object[] $r3;
        java.lang.Boolean $r5, $r6, $r7;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.apache.org/xalan/features/incremental");

        if $z0 == 0 goto label1;

        $r7 = new java.lang.Boolean;

        $z5 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: boolean m_incremental>;

        specialinvoke $r7.<java.lang.Boolean: void <init>(boolean)>($z5);

        return $r7;

     label1:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.apache.org/xalan/features/optimize");

        if $z1 == 0 goto label2;

        $r6 = new java.lang.Boolean;

        $z4 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: boolean m_optimize>;

        specialinvoke $r6.<java.lang.Boolean: void <init>(boolean)>($z4);

        return $r6;

     label2:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.apache.org/xalan/properties/source-location");

        if $z2 == 0 goto label3;

        $r5 = new java.lang.Boolean;

        $z3 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: boolean m_source_location>;

        specialinvoke $r5.<java.lang.Boolean: void <init>(boolean)>($z3);

        return $r5;

     label3:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r1;

        $r4 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_ATTRIB_VALUE_NOT_RECOGNIZED", $r3);

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r2;
    }

    java.lang.String getDOMsystemID()
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        $r1 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: java.lang.String m_DOMsystemID>;

        return $r1;
    }

    public javax.xml.transform.ErrorListener getErrorListener()
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        javax.xml.transform.ErrorListener $r1;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        $r1 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        return $r1;
    }

    public boolean getFeature(java.lang.String)
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        java.lang.String r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.lang.NullPointerException $r11;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r11 = new java.lang.NullPointerException;

        $r10 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_GET_FEATURE_NULL_NAME", null);

        specialinvoke $r11.<java.lang.NullPointerException: void <init>(java.lang.String)>($r10);

        throw $r11;

     label1:
        if "http://javax.xml.transform.dom.DOMResult/feature" == r1 goto label2;

        if "http://javax.xml.transform.dom.DOMSource/feature" == r1 goto label2;

        if "http://javax.xml.transform.sax.SAXResult/feature" == r1 goto label2;

        if "http://javax.xml.transform.sax.SAXSource/feature" == r1 goto label2;

        if "http://javax.xml.transform.stream.StreamResult/feature" == r1 goto label2;

        if "http://javax.xml.transform.stream.StreamSource/feature" == r1 goto label2;

        if "http://javax.xml.transform.sax.SAXTransformerFactory/feature" == r1 goto label2;

        if "http://javax.xml.transform.sax.SAXTransformerFactory/feature/xmlfilter" != r1 goto label3;

     label2:
        return 1;

     label3:
        $r2 = "http://javax.xml.transform.dom.DOMResult/feature";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        $r3 = "http://javax.xml.transform.dom.DOMSource/feature";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 != 0 goto label2;

        $r4 = "http://javax.xml.transform.sax.SAXResult/feature";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 != 0 goto label2;

        $r5 = "http://javax.xml.transform.sax.SAXSource/feature";

        $z3 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z3 != 0 goto label2;

        $r6 = "http://javax.xml.transform.stream.StreamResult/feature";

        $z4 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z4 != 0 goto label2;

        $r7 = "http://javax.xml.transform.stream.StreamSource/feature";

        $z5 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z5 != 0 goto label2;

        $r8 = "http://javax.xml.transform.sax.SAXTransformerFactory/feature";

        $z6 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z6 != 0 goto label2;

        $r9 = "http://javax.xml.transform.sax.SAXTransformerFactory/feature/xmlfilter";

        $z7 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z7 != 0 goto label2;

        $z9 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://javax.xml.XMLConstants/feature/secure-processing");

        if $z9 == 0 goto label4;

        $z8 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: boolean m_isSecureProcessing>;

        return $z8;

     label4:
        return 0;
    }

    public javax.xml.transform.URIResolver getURIResolver()
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        javax.xml.transform.URIResolver $r1;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        $r1 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.URIResolver m_uriResolver>;

        return $r1;
    }

    public boolean isSecureProcessing()
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        $z0 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: boolean m_isSecureProcessing>;

        return $z0;
    }

    public javax.xml.transform.Templates newTemplates(javax.xml.transform.Source) throws javax.xml.transform.TransformerConfigurationException
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        javax.xml.transform.Source r1;
        java.lang.String r2, $r27, $r39, $r47, $r49;
        javax.xml.transform.sax.TemplatesHandler r3;
        java.lang.Exception r4, $r44;
        javax.xml.transform.TransformerException r5, r8, $r28, $r34, $r46, $r48;
        javax.xml.transform.TransformerConfigurationException r6, r9, $r29, $r35, $r40, $r43, $r50, $r53;
        org.xml.sax.SAXException r7, $r33, $r36, $r38, $r42;
        org.xml.sax.InputSource r10;
        boolean z0, z1, $z2;
        org.xml.sax.XMLReader r11, r12, r19;
        javax.xml.parsers.ParserConfigurationException r15, $r37;
        javax.xml.parsers.FactoryConfigurationError r16, $r32;
        javax.xml.parsers.SAXParserFactory r17;
        org.w3c.dom.Node r20;
        javax.xml.transform.Templates $r21, $r25;
        javax.xml.parsers.SAXParser $r22;
        javax.xml.transform.dom.DOMSource $r23;
        javax.xml.transform.sax.SAXSource $r24;
        java.lang.IllegalArgumentException $r26;
        java.lang.AbstractMethodError $r30;
        java.lang.NoSuchMethodError $r31;
        javax.xml.transform.ErrorListener $r41, $r45, $r51, $r52;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r1 := @parameter0: javax.xml.transform.Source;

        r2 = interfaceinvoke r1.<javax.xml.transform.Source: java.lang.String getSystemId()>();

        if r2 == null goto label01;

        r2 = staticinvoke <org.apache.xml.utils.SystemIDResolver: java.lang.String getAbsoluteURI(java.lang.String)>(r2);

     label01:
        $z2 = r1 instanceof javax.xml.transform.dom.DOMSource;

        if $z2 == 0 goto label03;

        $r23 = (javax.xml.transform.dom.DOMSource) r1;

        r20 = virtualinvoke $r23.<javax.xml.transform.dom.DOMSource: org.w3c.dom.Node getNode()>();

        if r20 == null goto label02;

        $r25 = virtualinvoke r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.Templates processFromNode(org.w3c.dom.Node,java.lang.String)>(r20, r2);

        return $r25;

     label02:
        $r26 = new java.lang.IllegalArgumentException;

        $r27 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_ILLEGAL_DOMSOURCE_INPUT", null);

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r27);

        throw $r26;

     label03:
        r3 = virtualinvoke r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.sax.TemplatesHandler newTemplatesHandler()>();

        interfaceinvoke r3.<javax.xml.transform.sax.TemplatesHandler: void setSystemId(java.lang.String)>(r2);

     label04:
        r10 = staticinvoke <javax.xml.transform.sax.SAXSource: org.xml.sax.InputSource sourceToInputSource(javax.xml.transform.Source)>(r1);

        virtualinvoke r10.<org.xml.sax.InputSource: void setSystemId(java.lang.String)>(r2);

        z0 = r1 instanceof javax.xml.transform.sax.SAXSource;

     label05:
        r11 = null;

        if z0 == 0 goto label08;

     label06:
        $r24 = (javax.xml.transform.sax.SAXSource) r1;

        r12 = virtualinvoke $r24.<javax.xml.transform.sax.SAXSource: org.xml.sax.XMLReader getXMLReader()>();

     label07:
        r11 = r12;

     label08:
        if r11 != null goto label14;

     label09:
        r17 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();

        virtualinvoke r17.<javax.xml.parsers.SAXParserFactory: void setNamespaceAware(boolean)>(1);

        z1 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: boolean m_isSecureProcessing>;

     label10:
        if z1 == 0 goto label12;

     label11:
        virtualinvoke r17.<javax.xml.parsers.SAXParserFactory: void setFeature(java.lang.String,boolean)>("http://javax.xml.XMLConstants/feature/secure-processing", 1);

     label12:
        $r22 = virtualinvoke r17.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();

        r19 = virtualinvoke $r22.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();

     label13:
        r11 = r19;

     label14:
        if r11 != null goto label16;

     label15:
        r11 = staticinvoke <org.xml.sax.helpers.XMLReaderFactory: org.xml.sax.XMLReader createXMLReader()>();

     label16:
        interfaceinvoke r11.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>(r3);

        interfaceinvoke r11.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>(r10);

     label17:
        $r21 = interfaceinvoke r3.<javax.xml.transform.sax.TemplatesHandler: javax.xml.transform.Templates getTemplates()>();

        return $r21;

     label18:
        $r37 := @caughtexception;

        r15 = $r37;

     label19:
        $r36 = new org.xml.sax.SAXException;

        specialinvoke $r36.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>(r15);

        throw $r36;

     label20:
        $r42 := @caughtexception;

        r7 = $r42;

        $r41 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        if $r41 == null goto label30;

     label21:
        $r45 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        $r46 = new javax.xml.transform.TransformerException;

        specialinvoke $r46.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r7);

        interfaceinvoke $r45.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>($r46);

     label22:
        goto label17;

     label23:
        $r43 := @caughtexception;

        r9 = $r43;

        throw r9;

     label24:
        $r32 := @caughtexception;

        r16 = $r32;

     label25:
        $r33 = new org.xml.sax.SAXException;

        $r39 = virtualinvoke r16.<javax.xml.parsers.FactoryConfigurationError: java.lang.String toString()>();

        specialinvoke $r33.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r39);

        throw $r33;

     label26:
        $r44 := @caughtexception;

        r4 = $r44;

        $r51 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        if $r51 == null goto label33;

     label27:
        $r52 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        $r48 = new javax.xml.transform.TransformerException;

        specialinvoke $r48.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r4);

        interfaceinvoke $r52.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>($r48);

     label28:
        return null;

     label29:
        $r28 := @caughtexception;

        r8 = $r28;

        $r29 = new javax.xml.transform.TransformerConfigurationException;

        specialinvoke $r29.<javax.xml.transform.TransformerConfigurationException: void <init>(java.lang.Throwable)>(r8);

        throw $r29;

     label30:
        $r40 = new javax.xml.transform.TransformerConfigurationException;

        $r47 = virtualinvoke r7.<org.xml.sax.SAXException: java.lang.String getMessage()>();

        specialinvoke $r40.<javax.xml.transform.TransformerConfigurationException: void <init>(java.lang.String,java.lang.Throwable)>($r47, r7);

        throw $r40;

     label31:
        $r53 := @caughtexception;

        r6 = $r53;

        throw r6;

     label32:
        $r34 := @caughtexception;

        r5 = $r34;

        $r35 = new javax.xml.transform.TransformerConfigurationException;

        specialinvoke $r35.<javax.xml.transform.TransformerConfigurationException: void <init>(java.lang.Throwable)>(r5);

        throw $r35;

     label33:
        $r50 = new javax.xml.transform.TransformerConfigurationException;

        $r49 = virtualinvoke r4.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r50.<javax.xml.transform.TransformerConfigurationException: void <init>(java.lang.String,java.lang.Throwable)>($r49, r4);

        throw $r50;

     label34:
        $r30 := @caughtexception;

        goto label14;

     label35:
        $r31 := @caughtexception;

        goto label14;

     label36:
        $r38 := @caughtexception;

        goto label12;

        catch org.xml.sax.SAXException from label04 to label05 with label20;
        catch java.lang.Exception from label04 to label05 with label26;
        catch org.xml.sax.SAXException from label06 to label07 with label20;
        catch java.lang.Exception from label06 to label07 with label26;
        catch javax.xml.parsers.ParserConfigurationException from label09 to label10 with label18;
        catch javax.xml.parsers.FactoryConfigurationError from label09 to label10 with label24;
        catch java.lang.NoSuchMethodError from label09 to label10 with label35;
        catch java.lang.AbstractMethodError from label09 to label10 with label34;
        catch org.xml.sax.SAXException from label09 to label10 with label20;
        catch java.lang.Exception from label09 to label10 with label26;
        catch org.xml.sax.SAXException from label11 to label12 with label36;
        catch javax.xml.parsers.ParserConfigurationException from label11 to label12 with label18;
        catch javax.xml.parsers.FactoryConfigurationError from label11 to label12 with label24;
        catch java.lang.NoSuchMethodError from label11 to label12 with label35;
        catch java.lang.AbstractMethodError from label11 to label12 with label34;
        catch java.lang.Exception from label11 to label12 with label26;
        catch javax.xml.parsers.ParserConfigurationException from label12 to label13 with label18;
        catch javax.xml.parsers.FactoryConfigurationError from label12 to label13 with label24;
        catch java.lang.NoSuchMethodError from label12 to label13 with label35;
        catch java.lang.AbstractMethodError from label12 to label13 with label34;
        catch org.xml.sax.SAXException from label12 to label13 with label20;
        catch java.lang.Exception from label12 to label13 with label26;
        catch org.xml.sax.SAXException from label15 to label16 with label20;
        catch java.lang.Exception from label15 to label16 with label26;
        catch org.xml.sax.SAXException from label16 to label17 with label20;
        catch java.lang.Exception from label16 to label17 with label26;
        catch org.xml.sax.SAXException from label19 to label20 with label20;
        catch java.lang.Exception from label19 to label20 with label26;
        catch javax.xml.transform.TransformerConfigurationException from label21 to label22 with label23;
        catch javax.xml.transform.TransformerException from label21 to label22 with label29;
        catch org.xml.sax.SAXException from label25 to label26 with label20;
        catch java.lang.Exception from label25 to label26 with label26;
        catch javax.xml.transform.TransformerConfigurationException from label27 to label28 with label31;
        catch javax.xml.transform.TransformerException from label27 to label28 with label32;
    }

    public javax.xml.transform.sax.TemplatesHandler newTemplatesHandler() throws javax.xml.transform.TransformerConfigurationException
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        org.apache.xalan.processor.StylesheetHandler $r1;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        $r1 = new org.apache.xalan.processor.StylesheetHandler;

        specialinvoke $r1.<org.apache.xalan.processor.StylesheetHandler: void <init>(org.apache.xalan.processor.TransformerFactoryImpl)>(r0);

        return $r1;
    }

    public javax.xml.transform.Transformer newTransformer() throws javax.xml.transform.TransformerConfigurationException
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        org.apache.xalan.transformer.TransformerIdentityImpl $r1;
        boolean $z0;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        $r1 = new org.apache.xalan.transformer.TransformerIdentityImpl;

        $z0 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: boolean m_isSecureProcessing>;

        specialinvoke $r1.<org.apache.xalan.transformer.TransformerIdentityImpl: void <init>(boolean)>($z0);

        return $r1;
    }

    public javax.xml.transform.Transformer newTransformer(javax.xml.transform.Source) throws javax.xml.transform.TransformerConfigurationException
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        javax.xml.transform.Source r1;
        javax.xml.transform.TransformerConfigurationException r2, r4, $r9, $r10, $r11;
        javax.xml.transform.TransformerException r3, $r8;
        javax.xml.transform.Templates r5;
        javax.xml.transform.Transformer r6;
        javax.xml.transform.URIResolver $r7;
        javax.xml.transform.ErrorListener $r12, $r13;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r1 := @parameter0: javax.xml.transform.Source;

     label01:
        r5 = virtualinvoke r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)>(r1);

     label02:
        if r5 != null goto label03;

        return null;

     label03:
        r6 = interfaceinvoke r5.<javax.xml.transform.Templates: javax.xml.transform.Transformer newTransformer()>();

        $r7 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.URIResolver m_uriResolver>;

        virtualinvoke r6.<javax.xml.transform.Transformer: void setURIResolver(javax.xml.transform.URIResolver)>($r7);

     label04:
        return r6;

     label05:
        $r11 := @caughtexception;

        r2 = $r11;

        $r12 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        if $r12 == null goto label10;

     label06:
        $r13 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        interfaceinvoke $r13.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>(r2);

     label07:
        return null;

     label08:
        $r10 := @caughtexception;

        r4 = $r10;

        throw r4;

     label09:
        $r8 := @caughtexception;

        r3 = $r8;

        $r9 = new javax.xml.transform.TransformerConfigurationException;

        specialinvoke $r9.<javax.xml.transform.TransformerConfigurationException: void <init>(java.lang.Throwable)>(r3);

        throw $r9;

     label10:
        throw r2;

        catch javax.xml.transform.TransformerConfigurationException from label01 to label02 with label05;
        catch javax.xml.transform.TransformerConfigurationException from label03 to label04 with label05;
        catch javax.xml.transform.TransformerConfigurationException from label06 to label07 with label08;
        catch javax.xml.transform.TransformerException from label06 to label07 with label09;
    }

    public javax.xml.transform.sax.TransformerHandler newTransformerHandler() throws javax.xml.transform.TransformerConfigurationException
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        org.apache.xalan.transformer.TransformerIdentityImpl $r1;
        boolean $z0;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        $r1 = new org.apache.xalan.transformer.TransformerIdentityImpl;

        $z0 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: boolean m_isSecureProcessing>;

        specialinvoke $r1.<org.apache.xalan.transformer.TransformerIdentityImpl: void <init>(boolean)>($z0);

        return $r1;
    }

    public javax.xml.transform.sax.TransformerHandler newTransformerHandler(javax.xml.transform.Source) throws javax.xml.transform.TransformerConfigurationException
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        javax.xml.transform.Source r1;
        javax.xml.transform.Templates r2;
        javax.xml.transform.sax.TransformerHandler $r3;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r1 := @parameter0: javax.xml.transform.Source;

        r2 = virtualinvoke r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.sax.TransformerHandler newTransformerHandler(javax.xml.transform.Templates)>(r2);

        return $r3;
    }

    public javax.xml.transform.sax.TransformerHandler newTransformerHandler(javax.xml.transform.Templates) throws javax.xml.transform.TransformerConfigurationException
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        javax.xml.transform.Templates r1;
        javax.xml.transform.TransformerConfigurationException r2, r4, $r11, $r12, $r15;
        javax.xml.transform.TransformerException r3, $r10;
        org.apache.xalan.transformer.TransformerImpl r5;
        javax.xml.transform.sax.TransformerHandler r6;
        javax.xml.transform.Transformer $r7;
        javax.xml.transform.URIResolver $r8;
        org.xml.sax.ContentHandler $r9;
        javax.xml.transform.ErrorListener $r13, $r14;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r1 := @parameter0: javax.xml.transform.Templates;

     label1:
        $r7 = interfaceinvoke r1.<javax.xml.transform.Templates: javax.xml.transform.Transformer newTransformer()>();

        r5 = (org.apache.xalan.transformer.TransformerImpl) $r7;

        $r8 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.URIResolver m_uriResolver>;

        virtualinvoke r5.<org.apache.xalan.transformer.TransformerImpl: void setURIResolver(javax.xml.transform.URIResolver)>($r8);

        $r9 = virtualinvoke r5.<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ContentHandler getInputContentHandler(boolean)>(1);

        r6 = (javax.xml.transform.sax.TransformerHandler) $r9;

     label2:
        return r6;

     label3:
        $r12 := @caughtexception;

        r2 = $r12;

        $r13 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        if $r13 == null goto label8;

     label4:
        $r14 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        interfaceinvoke $r14.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>(r2);

     label5:
        return null;

     label6:
        $r15 := @caughtexception;

        r4 = $r15;

        throw r4;

     label7:
        $r10 := @caughtexception;

        r3 = $r10;

        $r11 = new javax.xml.transform.TransformerConfigurationException;

        specialinvoke $r11.<javax.xml.transform.TransformerConfigurationException: void <init>(java.lang.Throwable)>(r3);

        throw $r11;

     label8:
        throw r2;

        catch javax.xml.transform.TransformerConfigurationException from label1 to label2 with label3;
        catch javax.xml.transform.TransformerConfigurationException from label4 to label5 with label6;
        catch javax.xml.transform.TransformerException from label4 to label5 with label7;
    }

    public org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Source) throws javax.xml.transform.TransformerConfigurationException
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        javax.xml.transform.Source r1;
        javax.xml.transform.Templates r2;
        org.xml.sax.XMLFilter $r3;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r1 := @parameter0: javax.xml.transform.Source;

        r2 = virtualinvoke r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke r0.<org.apache.xalan.processor.TransformerFactoryImpl: org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Templates)>(r2);

        return $r3;
    }

    public org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Templates) throws javax.xml.transform.TransformerConfigurationException
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        javax.xml.transform.Templates r1;
        org.apache.xalan.transformer.TrAXFilter r2, $r6;
        javax.xml.transform.TransformerConfigurationException r3, r5, $r7, $r8, $r12;
        javax.xml.transform.TransformerException r4, $r11;
        javax.xml.transform.ErrorListener $r9, $r10;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r1 := @parameter0: javax.xml.transform.Templates;

     label1:
        $r6 = new org.apache.xalan.transformer.TrAXFilter;

        specialinvoke $r6.<org.apache.xalan.transformer.TrAXFilter: void <init>(javax.xml.transform.Templates)>(r1);

        r2 = $r6;

     label2:
        return r2;

     label3:
        $r8 := @caughtexception;

        r3 = $r8;

        $r9 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        if $r9 == null goto label8;

     label4:
        $r10 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        interfaceinvoke $r10.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>(r3);

     label5:
        return null;

     label6:
        $r7 := @caughtexception;

        r5 = $r7;

        throw r5;

     label7:
        $r11 := @caughtexception;

        r4 = $r11;

        $r12 = new javax.xml.transform.TransformerConfigurationException;

        specialinvoke $r12.<javax.xml.transform.TransformerConfigurationException: void <init>(java.lang.Throwable)>(r4);

        throw $r12;

     label8:
        throw r3;

        catch javax.xml.transform.TransformerConfigurationException from label1 to label2 with label3;
        catch javax.xml.transform.TransformerConfigurationException from label4 to label5 with label6;
        catch javax.xml.transform.TransformerException from label4 to label5 with label7;
    }

    public javax.xml.transform.Templates processFromNode(org.w3c.dom.Node) throws javax.xml.transform.TransformerConfigurationException
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        org.w3c.dom.Node r1;
        java.lang.Exception r2, $r20;
        javax.xml.transform.TransformerException r3, r7, $r14, $r16, $r24, $r32;
        javax.xml.transform.TransformerConfigurationException r4, r5, r8, $r15, $r17, $r18, $r19, $r21, $r22, $r28;
        org.xml.sax.SAXException r6, $r26;
        javax.xml.transform.sax.TemplatesHandler r9;
        javax.xml.transform.Templates r10;
        org.apache.xml.utils.TreeWalker $r11;
        org.apache.xml.utils.DOM2Helper $r12;
        java.lang.String $r13, $r25, $r31;
        javax.xml.transform.ErrorListener $r23, $r27, $r29, $r30;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r1 := @parameter0: org.w3c.dom.Node;

     label01:
        r9 = virtualinvoke r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.sax.TemplatesHandler newTemplatesHandler()>();

        $r11 = new org.apache.xml.utils.TreeWalker;

        $r12 = new org.apache.xml.utils.DOM2Helper;

        specialinvoke $r12.<org.apache.xml.utils.DOM2Helper: void <init>()>();

        $r13 = interfaceinvoke r9.<javax.xml.transform.sax.TemplatesHandler: java.lang.String getSystemId()>();

        specialinvoke $r11.<org.apache.xml.utils.TreeWalker: void <init>(org.xml.sax.ContentHandler,org.apache.xml.utils.DOMHelper,java.lang.String)>(r9, $r12, $r13);

        virtualinvoke $r11.<org.apache.xml.utils.TreeWalker: void traverse(org.w3c.dom.Node)>(r1);

        r10 = interfaceinvoke r9.<javax.xml.transform.sax.TemplatesHandler: javax.xml.transform.Templates getTemplates()>();

     label02:
        return r10;

     label03:
        $r26 := @caughtexception;

        r6 = $r26;

        $r29 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        if $r29 == null goto label08;

     label04:
        $r30 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        $r32 = new javax.xml.transform.TransformerException;

        specialinvoke $r32.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r6);

        interfaceinvoke $r30.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>($r32);

     label05:
        return null;

     label06:
        $r21 := @caughtexception;

        r8 = $r21;

        throw r8;

     label07:
        $r14 := @caughtexception;

        r7 = $r14;

        $r17 = new javax.xml.transform.TransformerConfigurationException;

        specialinvoke $r17.<javax.xml.transform.TransformerConfigurationException: void <init>(java.lang.Throwable)>(r7);

        throw $r17;

     label08:
        $r28 = new javax.xml.transform.TransformerConfigurationException;

        $r31 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_PROCESSFROMNODE_FAILED", null);

        specialinvoke $r28.<javax.xml.transform.TransformerConfigurationException: void <init>(java.lang.String,java.lang.Throwable)>($r31, r6);

        throw $r28;

     label09:
        $r15 := @caughtexception;

        r5 = $r15;

        throw r5;

     label10:
        $r20 := @caughtexception;

        r2 = $r20;

        $r23 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        if $r23 == null goto label15;

     label11:
        $r27 = r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener>;

        $r24 = new javax.xml.transform.TransformerException;

        specialinvoke $r24.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r2);

        interfaceinvoke $r27.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>($r24);

     label12:
        return null;

     label13:
        $r18 := @caughtexception;

        r4 = $r18;

        throw r4;

     label14:
        $r16 := @caughtexception;

        r3 = $r16;

        $r19 = new javax.xml.transform.TransformerConfigurationException;

        specialinvoke $r19.<javax.xml.transform.TransformerConfigurationException: void <init>(java.lang.Throwable)>(r3);

        throw $r19;

     label15:
        $r22 = new javax.xml.transform.TransformerConfigurationException;

        $r25 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_PROCESSFROMNODE_FAILED", null);

        specialinvoke $r22.<javax.xml.transform.TransformerConfigurationException: void <init>(java.lang.String,java.lang.Throwable)>($r25, r2);

        throw $r22;

        catch org.xml.sax.SAXException from label01 to label02 with label03;
        catch javax.xml.transform.TransformerConfigurationException from label01 to label02 with label09;
        catch java.lang.Exception from label01 to label02 with label10;
        catch javax.xml.transform.TransformerConfigurationException from label04 to label05 with label06;
        catch javax.xml.transform.TransformerException from label04 to label05 with label07;
        catch javax.xml.transform.TransformerConfigurationException from label11 to label12 with label13;
        catch javax.xml.transform.TransformerException from label11 to label12 with label14;
    }

    javax.xml.transform.Templates processFromNode(org.w3c.dom.Node, java.lang.String) throws javax.xml.transform.TransformerConfigurationException
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        org.w3c.dom.Node r1;
        java.lang.String r2;
        javax.xml.transform.Templates $r3;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r1 := @parameter0: org.w3c.dom.Node;

        r2 := @parameter1: java.lang.String;

        r0.<org.apache.xalan.processor.TransformerFactoryImpl: java.lang.String m_DOMsystemID> = r2;

        $r3 = virtualinvoke r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.Templates processFromNode(org.w3c.dom.Node)>(r1);

        return $r3;
    }

    public void setAttribute(java.lang.String, java.lang.Object) throws java.lang.IllegalArgumentException
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        java.lang.String r1, $r5, $r8, $r10, $r13, $r15, $r20, $r22;
        java.lang.Object r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        java.lang.IllegalArgumentException $r3, $r6, $r12, $r18;
        java.lang.Object[] $r4, $r7, $r14, $r21;
        java.lang.Boolean $r9, $r11, $r16, $r17, $r19, $r23;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.apache.org/xalan/features/incremental");

        if $z0 == 0 goto label3;

        $z10 = r2 instanceof java.lang.Boolean;

        if $z10 == 0 goto label1;

        $r23 = (java.lang.Boolean) r2;

        $z13 = virtualinvoke $r23.<java.lang.Boolean: boolean booleanValue()>();

        r0.<org.apache.xalan.processor.TransformerFactoryImpl: boolean m_incremental> = $z13;

        return;

     label1:
        $z12 = r2 instanceof java.lang.String;

        if $z12 == 0 goto label2;

        $r19 = new java.lang.Boolean;

        $r20 = (java.lang.String) r2;

        specialinvoke $r19.<java.lang.Boolean: void <init>(java.lang.String)>($r20);

        $z14 = virtualinvoke $r19.<java.lang.Boolean: boolean booleanValue()>();

        r0.<org.apache.xalan.processor.TransformerFactoryImpl: boolean m_incremental> = $z14;

        return;

     label2:
        $r18 = new java.lang.IllegalArgumentException;

        $r21 = newarray (java.lang.Object)[2];

        $r21[0] = r1;

        $r21[1] = r2;

        $r22 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_BAD_VALUE", $r21);

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);

        throw $r18;

     label3:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.apache.org/xalan/features/optimize");

        if $z1 == 0 goto label6;

        $z6 = r2 instanceof java.lang.Boolean;

        if $z6 == 0 goto label4;

        $r17 = (java.lang.Boolean) r2;

        $z11 = virtualinvoke $r17.<java.lang.Boolean: boolean booleanValue()>();

        r0.<org.apache.xalan.processor.TransformerFactoryImpl: boolean m_optimize> = $z11;

        return;

     label4:
        $z8 = r2 instanceof java.lang.String;

        if $z8 == 0 goto label5;

        $r16 = new java.lang.Boolean;

        $r15 = (java.lang.String) r2;

        specialinvoke $r16.<java.lang.Boolean: void <init>(java.lang.String)>($r15);

        $z9 = virtualinvoke $r16.<java.lang.Boolean: boolean booleanValue()>();

        r0.<org.apache.xalan.processor.TransformerFactoryImpl: boolean m_optimize> = $z9;

        return;

     label5:
        $r12 = new java.lang.IllegalArgumentException;

        $r14 = newarray (java.lang.Object)[2];

        $r14[0] = r1;

        $r14[1] = r2;

        $r13 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_BAD_VALUE", $r14);

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r12;

     label6:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.apache.org/xalan/properties/source-location");

        if $z2 == 0 goto label9;

        $z3 = r2 instanceof java.lang.Boolean;

        if $z3 == 0 goto label7;

        $r11 = (java.lang.Boolean) r2;

        $z7 = virtualinvoke $r11.<java.lang.Boolean: boolean booleanValue()>();

        r0.<org.apache.xalan.processor.TransformerFactoryImpl: boolean m_source_location> = $z7;

        return;

     label7:
        $z4 = r2 instanceof java.lang.String;

        if $z4 == 0 goto label8;

        $r9 = new java.lang.Boolean;

        $r10 = (java.lang.String) r2;

        specialinvoke $r9.<java.lang.Boolean: void <init>(java.lang.String)>($r10);

        $z5 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

        r0.<org.apache.xalan.processor.TransformerFactoryImpl: boolean m_source_location> = $z5;

        return;

     label8:
        $r6 = new java.lang.IllegalArgumentException;

        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = r1;

        $r7[1] = r2;

        $r8 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_BAD_VALUE", $r7);

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r6;

     label9:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = r1;

        $r5 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_NOT_SUPPORTED", $r4);

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r3;
    }

    public void setErrorListener(javax.xml.transform.ErrorListener) throws java.lang.IllegalArgumentException
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        javax.xml.transform.ErrorListener r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r1 := @parameter0: javax.xml.transform.ErrorListener;

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_ERRORLISTENER", null);

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label1:
        r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener m_errorListener> = r1;

        return;
    }

    public void setFeature(java.lang.String, boolean) throws javax.xml.transform.TransformerConfigurationException
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        java.lang.String r1, $r4, $r6;
        boolean z0, $z1;
        javax.xml.transform.TransformerConfigurationException $r2;
        java.lang.Object[] $r3;
        java.lang.NullPointerException $r5;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if r1 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        $r6 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_SET_FEATURE_NULL_NAME", null);

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label1:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://javax.xml.XMLConstants/feature/secure-processing");

        if $z1 == 0 goto label2;

        r0.<org.apache.xalan.processor.TransformerFactoryImpl: boolean m_isSecureProcessing> = z0;

        return;

     label2:
        $r2 = new javax.xml.transform.TransformerConfigurationException;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r1;

        $r4 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_UNSUPPORTED_FEATURE", $r3);

        specialinvoke $r2.<javax.xml.transform.TransformerConfigurationException: void <init>(java.lang.String)>($r4);

        throw $r2;
    }

    public void setURIResolver(javax.xml.transform.URIResolver)
    {
        org.apache.xalan.processor.TransformerFactoryImpl r0;
        javax.xml.transform.URIResolver r1;

        r0 := @this: org.apache.xalan.processor.TransformerFactoryImpl;

        r1 := @parameter0: javax.xml.transform.URIResolver;

        r0.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.URIResolver m_uriResolver> = r1;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.xalan.processor.TransformerFactoryImpl: java.lang.String XSLT_PROPERTIES> = "org/apache/xalan/res/XSLTInfo.properties";

        <org.apache.xalan.processor.TransformerFactoryImpl: java.lang.String FEATURE_SOURCE_LOCATION> = "http://xml.apache.org/xalan/properties/source-location";

        <org.apache.xalan.processor.TransformerFactoryImpl: java.lang.String FEATURE_OPTIMIZE> = "http://xml.apache.org/xalan/features/optimize";

        <org.apache.xalan.processor.TransformerFactoryImpl: java.lang.String FEATURE_INCREMENTAL> = "http://xml.apache.org/xalan/features/incremental";

        return;
    }
}
