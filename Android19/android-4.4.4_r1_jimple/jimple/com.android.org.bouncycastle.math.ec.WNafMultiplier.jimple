class com.android.org.bouncycastle.math.ec.WNafMultiplier extends java.lang.Object implements com.android.org.bouncycastle.math.ec.ECMultiplier
{

    void <init>()
    {
        com.android.org.bouncycastle.math.ec.WNafMultiplier r0;

        r0 := @this: com.android.org.bouncycastle.math.ec.WNafMultiplier;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.android.org.bouncycastle.math.ec.ECPoint multiply(com.android.org.bouncycastle.math.ec.ECPoint, java.math.BigInteger, com.android.org.bouncycastle.math.ec.PreCompInfo)
    {
        com.android.org.bouncycastle.math.ec.WNafMultiplier r0;
        com.android.org.bouncycastle.math.ec.ECPoint r1, r6, r8, $r12, $r13, $r14, $r16;
        java.math.BigInteger r2;
        com.android.org.bouncycastle.math.ec.PreCompInfo r3;
        com.android.org.bouncycastle.math.ec.WNafPreCompInfo r4, $r10;
        int i0, i3, i4, i5, i6, $i10, $i12, $i13, $i14, $i16;
        byte b1, b2, $b7, $b8, $b9, $b11, $b15;
        com.android.org.bouncycastle.math.ec.ECPoint[] r5, r9, $r15;
        byte[] r7;
        com.android.org.bouncycastle.math.ec.ECCurve $r11;
        boolean $z0;

        r0 := @this: com.android.org.bouncycastle.math.ec.WNafMultiplier;

        r1 := @parameter0: com.android.org.bouncycastle.math.ec.ECPoint;

        r2 := @parameter1: java.math.BigInteger;

        r3 := @parameter2: com.android.org.bouncycastle.math.ec.PreCompInfo;

        if r3 == null goto label06;

        $z0 = r3 instanceof com.android.org.bouncycastle.math.ec.WNafPreCompInfo;

        if $z0 == 0 goto label06;

        r4 = (com.android.org.bouncycastle.math.ec.WNafPreCompInfo) r3;

     label01:
        i0 = virtualinvoke r2.<java.math.BigInteger: int bitLength()>();

        if i0 >= 13 goto label07;

        b1 = 2;

        b2 = 1;

     label02:
        i3 = 1;

        r5 = virtualinvoke r4.<com.android.org.bouncycastle.math.ec.WNafPreCompInfo: com.android.org.bouncycastle.math.ec.ECPoint[] getPreComp()>();

        r6 = virtualinvoke r4.<com.android.org.bouncycastle.math.ec.WNafPreCompInfo: com.android.org.bouncycastle.math.ec.ECPoint getTwiceP()>();

        if r5 != null goto label13;

        $r15 = newarray (com.android.org.bouncycastle.math.ec.ECPoint)[1];

        $r15[0] = r1;

        r5 = $r15;

     label03:
        if r6 != null goto label04;

        r6 = virtualinvoke r1.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECPoint twice()>();

     label04:
        if i3 >= b2 goto label14;

        r9 = r5;

        r5 = newarray (com.android.org.bouncycastle.math.ec.ECPoint)[b2];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r9, 0, r5, 0, i3);

        i6 = i3;

     label05:
        if i6 >= b2 goto label14;

        $i16 = i6 - 1;

        $r13 = r5[$i16];

        $r16 = virtualinvoke r6.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECPoint add(com.android.org.bouncycastle.math.ec.ECPoint)>($r13);

        r5[i6] = $r16;

        i6 = i6 + 1;

        goto label05;

     label06:
        $r10 = new com.android.org.bouncycastle.math.ec.WNafPreCompInfo;

        specialinvoke $r10.<com.android.org.bouncycastle.math.ec.WNafPreCompInfo: void <init>()>();

        r4 = $r10;

        goto label01;

     label07:
        if i0 >= 41 goto label08;

        b1 = 3;

        b2 = 2;

        goto label02;

     label08:
        if i0 >= 121 goto label09;

        b1 = 4;

        b2 = 4;

        goto label02;

     label09:
        if i0 >= 337 goto label10;

        b1 = 5;

        b2 = 8;

        goto label02;

     label10:
        if i0 >= 897 goto label11;

        b1 = 6;

        b2 = 16;

        goto label02;

     label11:
        if i0 >= 2305 goto label12;

        b1 = 7;

        b2 = 32;

        goto label02;

     label12:
        b1 = 8;

        b2 = 127;

        goto label02;

     label13:
        i3 = lengthof r5;

        goto label03;

     label14:
        r7 = virtualinvoke r0.<com.android.org.bouncycastle.math.ec.WNafMultiplier: byte[] windowNaf(byte,java.math.BigInteger)>(b1, r2);

        i4 = lengthof r7;

        $r11 = virtualinvoke r1.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECCurve getCurve()>();

        r8 = virtualinvoke $r11.<com.android.org.bouncycastle.math.ec.ECCurve: com.android.org.bouncycastle.math.ec.ECPoint getInfinity()>();

        i5 = i4 - 1;

     label15:
        if i5 < 0 goto label18;

        r8 = virtualinvoke r8.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECPoint twice()>();

        $b7 = r7[i5];

        if $b7 == 0 goto label16;

        $b9 = r7[i5];

        if $b9 <= 0 goto label17;

        $b15 = r7[i5];

        $i13 = -1 + $b15;

        $i14 = $i13 / 2;

        $r14 = r5[$i14];

        r8 = virtualinvoke r8.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECPoint add(com.android.org.bouncycastle.math.ec.ECPoint)>($r14);

     label16:
        i5 = i5 + -1;

        goto label15;

     label17:
        $b8 = r7[i5];

        $b11 = neg $b8;

        $i10 = -1 + $b11;

        $i12 = $i10 / 2;

        $r12 = r5[$i12];

        r8 = virtualinvoke r8.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECPoint subtract(com.android.org.bouncycastle.math.ec.ECPoint)>($r12);

        goto label16;

     label18:
        virtualinvoke r4.<com.android.org.bouncycastle.math.ec.WNafPreCompInfo: void setPreComp(com.android.org.bouncycastle.math.ec.ECPoint[])>(r5);

        virtualinvoke r4.<com.android.org.bouncycastle.math.ec.WNafPreCompInfo: void setTwiceP(com.android.org.bouncycastle.math.ec.ECPoint)>(r6);

        virtualinvoke r1.<com.android.org.bouncycastle.math.ec.ECPoint: void setPreCompInfo(com.android.org.bouncycastle.math.ec.PreCompInfo)>(r4);

        return r8;
    }

    public byte[] windowNaf(byte, java.math.BigInteger)
    {
        com.android.org.bouncycastle.math.ec.WNafMultiplier r0;
        byte b0, $b12, $b13, $b16;
        java.math.BigInteger r1, r3, r5, $r6;
        byte[] r2, r4;
        short s1;
        int i2, i3, i4, $i5, $i6, $i7, $i9, $i10, $i11, $i15, $i17;
        long $l8, $l14;
        boolean $z0, $z1;

        r0 := @this: com.android.org.bouncycastle.math.ec.WNafMultiplier;

        b0 := @parameter0: byte;

        r1 := @parameter1: java.math.BigInteger;

        $i5 = virtualinvoke r1.<java.math.BigInteger: int bitLength()>();

        $i6 = 1 + $i5;

        r2 = newarray (byte)[$i6];

        $i7 = 1 << b0;

        s1 = (short) $i7;

        $l8 = (long) s1;

        r3 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l8);

        i2 = 0;

        i3 = 0;

     label1:
        $i9 = virtualinvoke r1.<java.math.BigInteger: int signum()>();

        if $i9 <= 0 goto label6;

        $z0 = virtualinvoke r1.<java.math.BigInteger: boolean testBit(int)>(0);

        if $z0 == 0 goto label5;

        r5 = virtualinvoke r1.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r3);

        $i10 = b0 - 1;

        $z1 = virtualinvoke r5.<java.math.BigInteger: boolean testBit(int)>($i10);

        if $z1 == 0 goto label4;

        $i15 = virtualinvoke r5.<java.math.BigInteger: int intValue()>();

        $i17 = $i15 - s1;

        $b16 = (byte) $i17;

        r2[i2] = $b16;

     label2:
        $b12 = r2[i2];

        $l14 = (long) $b12;

        $r6 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l14);

        r1 = virtualinvoke r1.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r6);

        i3 = i2;

     label3:
        r1 = virtualinvoke r1.<java.math.BigInteger: java.math.BigInteger shiftRight(int)>(1);

        i2 = i2 + 1;

        goto label1;

     label4:
        $i11 = virtualinvoke r5.<java.math.BigInteger: int intValue()>();

        $b13 = (byte) $i11;

        r2[i2] = $b13;

        goto label2;

     label5:
        r2[i2] = 0;

        goto label3;

     label6:
        i4 = i3 + 1;

        r4 = newarray (byte)[i4];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r4, 0, i4);

        return r4;
    }
}
