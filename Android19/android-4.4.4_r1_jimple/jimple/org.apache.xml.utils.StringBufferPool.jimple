public class org.apache.xml.utils.StringBufferPool extends java.lang.Object
{
    private static org.apache.xml.utils.ObjectPool m_stringBufPool;

    static void <clinit>()
    {
        org.apache.xml.utils.ObjectPool $r0;

        $r0 = new org.apache.xml.utils.ObjectPool;

        specialinvoke $r0.<org.apache.xml.utils.ObjectPool: void <init>(java.lang.Class)>(class "org/apache/xml/utils/FastStringBuffer");

        <org.apache.xml.utils.StringBufferPool: org.apache.xml.utils.ObjectPool m_stringBufPool> = $r0;

        return;
    }

    public void <init>()
    {
        org.apache.xml.utils.StringBufferPool r0;

        r0 := @this: org.apache.xml.utils.StringBufferPool;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void free(org.apache.xml.utils.FastStringBuffer)
    {
        org.apache.xml.utils.FastStringBuffer r0;
        java.lang.Throwable r1, $r3;
        org.apache.xml.utils.ObjectPool $r2;

        r0 := @parameter0: org.apache.xml.utils.FastStringBuffer;

        entermonitor class "org/apache/xml/utils/StringBufferPool";

     label1:
        virtualinvoke r0.<org.apache.xml.utils.FastStringBuffer: void setLength(int)>(0);

        $r2 = <org.apache.xml.utils.StringBufferPool: org.apache.xml.utils.ObjectPool m_stringBufPool>;

        virtualinvoke $r2.<org.apache.xml.utils.ObjectPool: void freeInstance(java.lang.Object)>(r0);

     label2:
        exitmonitor class "org/apache/xml/utils/StringBufferPool";

        return;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        exitmonitor class "org/apache/xml/utils/StringBufferPool";

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static org.apache.xml.utils.FastStringBuffer get()
    {
        java.lang.Throwable r0, $r4;
        org.apache.xml.utils.FastStringBuffer r1;
        org.apache.xml.utils.ObjectPool $r2;
        java.lang.Object $r3;

        entermonitor class "org/apache/xml/utils/StringBufferPool";

     label1:
        $r2 = <org.apache.xml.utils.StringBufferPool: org.apache.xml.utils.ObjectPool m_stringBufPool>;

        $r3 = virtualinvoke $r2.<org.apache.xml.utils.ObjectPool: java.lang.Object getInstance()>();

        r1 = (org.apache.xml.utils.FastStringBuffer) $r3;

     label2:
        exitmonitor class "org/apache/xml/utils/StringBufferPool";

        return r1;

     label3:
        $r4 := @caughtexception;

        r0 = $r4;

        exitmonitor class "org/apache/xml/utils/StringBufferPool";

        throw r0;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
