public class android.webkit.WebChromeClient extends java.lang.Object
{

    public void <init>()
    {
        android.webkit.WebChromeClient r0;

        r0 := @this: android.webkit.WebChromeClient;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.graphics.Bitmap getDefaultVideoPoster()
    {
        android.webkit.WebChromeClient r0;

        r0 := @this: android.webkit.WebChromeClient;

        return null;
    }

    public android.view.View getVideoLoadingProgressView()
    {
        android.webkit.WebChromeClient r0;

        r0 := @this: android.webkit.WebChromeClient;

        return null;
    }

    public void getVisitedHistory(android.webkit.ValueCallback)
    {
        android.webkit.WebChromeClient r0;
        android.webkit.ValueCallback r1;

        r0 := @this: android.webkit.WebChromeClient;

        r1 := @parameter0: android.webkit.ValueCallback;

        return;
    }

    public void onCloseWindow(android.webkit.WebView)
    {
        android.webkit.WebChromeClient r0;
        android.webkit.WebView r1;

        r0 := @this: android.webkit.WebChromeClient;

        r1 := @parameter0: android.webkit.WebView;

        return;
    }

    public void onConsoleMessage(java.lang.String, int, java.lang.String)
    {
        android.webkit.WebChromeClient r0;
        java.lang.String r1, r2;
        int i0;

        r0 := @this: android.webkit.WebChromeClient;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        return;
    }

    public boolean onConsoleMessage(android.webkit.ConsoleMessage)
    {
        android.webkit.WebChromeClient r0;
        android.webkit.ConsoleMessage r1;
        java.lang.String $r2, $r3;
        int $i0;

        r0 := @this: android.webkit.WebChromeClient;

        r1 := @parameter0: android.webkit.ConsoleMessage;

        $r2 = virtualinvoke r1.<android.webkit.ConsoleMessage: java.lang.String message()>();

        $i0 = virtualinvoke r1.<android.webkit.ConsoleMessage: int lineNumber()>();

        $r3 = virtualinvoke r1.<android.webkit.ConsoleMessage: java.lang.String sourceId()>();

        virtualinvoke r0.<android.webkit.WebChromeClient: void onConsoleMessage(java.lang.String,int,java.lang.String)>($r2, $i0, $r3);

        return 0;
    }

    public boolean onCreateWindow(android.webkit.WebView, boolean, boolean, android.os.Message)
    {
        android.webkit.WebChromeClient r0;
        android.webkit.WebView r1;
        boolean z0, z1;
        android.os.Message r2;

        r0 := @this: android.webkit.WebChromeClient;

        r1 := @parameter0: android.webkit.WebView;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        r2 := @parameter3: android.os.Message;

        return 0;
    }

    public void onExceededDatabaseQuota(java.lang.String, java.lang.String, long, long, long, android.webkit.WebStorage$QuotaUpdater)
    {
        android.webkit.WebChromeClient r0;
        java.lang.String r1, r2;
        long l0, l1, l2;
        android.webkit.WebStorage$QuotaUpdater r3;

        r0 := @this: android.webkit.WebChromeClient;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        l2 := @parameter4: long;

        r3 := @parameter5: android.webkit.WebStorage$QuotaUpdater;

        interfaceinvoke r3.<android.webkit.WebStorage$QuotaUpdater: void updateQuota(long)>(l0);

        return;
    }

    public void onGeolocationPermissionsHidePrompt()
    {
        android.webkit.WebChromeClient r0;

        r0 := @this: android.webkit.WebChromeClient;

        return;
    }

    public void onGeolocationPermissionsShowPrompt(java.lang.String, android.webkit.GeolocationPermissions$Callback)
    {
        android.webkit.WebChromeClient r0;
        java.lang.String r1;
        android.webkit.GeolocationPermissions$Callback r2;

        r0 := @this: android.webkit.WebChromeClient;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.webkit.GeolocationPermissions$Callback;

        return;
    }

    public void onHideCustomView()
    {
        android.webkit.WebChromeClient r0;

        r0 := @this: android.webkit.WebChromeClient;

        return;
    }

    public boolean onJsAlert(android.webkit.WebView, java.lang.String, java.lang.String, android.webkit.JsResult)
    {
        android.webkit.WebChromeClient r0;
        android.webkit.WebView r1;
        java.lang.String r2, r3;
        android.webkit.JsResult r4;

        r0 := @this: android.webkit.WebChromeClient;

        r1 := @parameter0: android.webkit.WebView;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.webkit.JsResult;

        return 0;
    }

    public boolean onJsBeforeUnload(android.webkit.WebView, java.lang.String, java.lang.String, android.webkit.JsResult)
    {
        android.webkit.WebChromeClient r0;
        android.webkit.WebView r1;
        java.lang.String r2, r3;
        android.webkit.JsResult r4;

        r0 := @this: android.webkit.WebChromeClient;

        r1 := @parameter0: android.webkit.WebView;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.webkit.JsResult;

        return 0;
    }

    public boolean onJsConfirm(android.webkit.WebView, java.lang.String, java.lang.String, android.webkit.JsResult)
    {
        android.webkit.WebChromeClient r0;
        android.webkit.WebView r1;
        java.lang.String r2, r3;
        android.webkit.JsResult r4;

        r0 := @this: android.webkit.WebChromeClient;

        r1 := @parameter0: android.webkit.WebView;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.webkit.JsResult;

        return 0;
    }

    public boolean onJsPrompt(android.webkit.WebView, java.lang.String, java.lang.String, java.lang.String, android.webkit.JsPromptResult)
    {
        android.webkit.WebChromeClient r0;
        android.webkit.WebView r1;
        java.lang.String r2, r3, r4;
        android.webkit.JsPromptResult r5;

        r0 := @this: android.webkit.WebChromeClient;

        r1 := @parameter0: android.webkit.WebView;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: android.webkit.JsPromptResult;

        return 0;
    }

    public boolean onJsTimeout()
    {
        android.webkit.WebChromeClient r0;

        r0 := @this: android.webkit.WebChromeClient;

        return 1;
    }

    public void onProgressChanged(android.webkit.WebView, int)
    {
        android.webkit.WebChromeClient r0;
        android.webkit.WebView r1;
        int i0;

        r0 := @this: android.webkit.WebChromeClient;

        r1 := @parameter0: android.webkit.WebView;

        i0 := @parameter1: int;

        return;
    }

    public void onReachedMaxAppCacheSize(long, long, android.webkit.WebStorage$QuotaUpdater)
    {
        android.webkit.WebChromeClient r0;
        long l0, l1;
        android.webkit.WebStorage$QuotaUpdater r1;

        r0 := @this: android.webkit.WebChromeClient;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r1 := @parameter2: android.webkit.WebStorage$QuotaUpdater;

        interfaceinvoke r1.<android.webkit.WebStorage$QuotaUpdater: void updateQuota(long)>(l1);

        return;
    }

    public void onReceivedIcon(android.webkit.WebView, android.graphics.Bitmap)
    {
        android.webkit.WebChromeClient r0;
        android.webkit.WebView r1;
        android.graphics.Bitmap r2;

        r0 := @this: android.webkit.WebChromeClient;

        r1 := @parameter0: android.webkit.WebView;

        r2 := @parameter1: android.graphics.Bitmap;

        return;
    }

    public void onReceivedTitle(android.webkit.WebView, java.lang.String)
    {
        android.webkit.WebChromeClient r0;
        android.webkit.WebView r1;
        java.lang.String r2;

        r0 := @this: android.webkit.WebChromeClient;

        r1 := @parameter0: android.webkit.WebView;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public void onReceivedTouchIconUrl(android.webkit.WebView, java.lang.String, boolean)
    {
        android.webkit.WebChromeClient r0;
        android.webkit.WebView r1;
        java.lang.String r2;
        boolean z0;

        r0 := @this: android.webkit.WebChromeClient;

        r1 := @parameter0: android.webkit.WebView;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        return;
    }

    public void onRequestFocus(android.webkit.WebView)
    {
        android.webkit.WebChromeClient r0;
        android.webkit.WebView r1;

        r0 := @this: android.webkit.WebChromeClient;

        r1 := @parameter0: android.webkit.WebView;

        return;
    }

    public void onShowCustomView(android.view.View, int, android.webkit.WebChromeClient$CustomViewCallback)
    {
        android.webkit.WebChromeClient r0;
        android.view.View r1;
        int i0;
        android.webkit.WebChromeClient$CustomViewCallback r2;

        r0 := @this: android.webkit.WebChromeClient;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: android.webkit.WebChromeClient$CustomViewCallback;

        return;
    }

    public void onShowCustomView(android.view.View, android.webkit.WebChromeClient$CustomViewCallback)
    {
        android.webkit.WebChromeClient r0;
        android.view.View r1;
        android.webkit.WebChromeClient$CustomViewCallback r2;

        r0 := @this: android.webkit.WebChromeClient;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.webkit.WebChromeClient$CustomViewCallback;

        return;
    }

    public void openFileChooser(android.webkit.ValueCallback, java.lang.String, java.lang.String)
    {
        android.webkit.WebChromeClient r0;
        android.webkit.ValueCallback r1;
        java.lang.String r2, r3;

        r0 := @this: android.webkit.WebChromeClient;

        r1 := @parameter0: android.webkit.ValueCallback;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        interfaceinvoke r1.<android.webkit.ValueCallback: void onReceiveValue(java.lang.Object)>(null);

        return;
    }

    public void setupAutoFill(android.os.Message)
    {
        android.webkit.WebChromeClient r0;
        android.os.Message r1;

        r0 := @this: android.webkit.WebChromeClient;

        r1 := @parameter0: android.os.Message;

        return;
    }
}
