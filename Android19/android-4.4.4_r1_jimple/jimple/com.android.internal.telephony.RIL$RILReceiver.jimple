class com.android.internal.telephony.RIL$RILReceiver extends java.lang.Object implements java.lang.Runnable
{
    byte[] buffer;
    final com.android.internal.telephony.RIL this$0;

    void <init>(com.android.internal.telephony.RIL)
    {
        com.android.internal.telephony.RIL$RILReceiver r0;
        com.android.internal.telephony.RIL r1;
        byte[] $r2;

        r0 := @this: com.android.internal.telephony.RIL$RILReceiver;

        r1 := @parameter0: com.android.internal.telephony.RIL;

        r0.<com.android.internal.telephony.RIL$RILReceiver: com.android.internal.telephony.RIL this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = newarray (byte)[8192];

        r0.<com.android.internal.telephony.RIL$RILReceiver: byte[] buffer> = $r2;

        return;
    }

    public void run()
    {
        com.android.internal.telephony.RIL$RILReceiver r0;
        int i0, i1, i2;
        android.net.LocalSocket r1, r2, $r12, $r17, $r27;
        java.lang.Throwable r4, r7, $r36, $r38, $r44;
        java.io.IOException r8, $r30, $r39, $r43, $r45, $r46;
        java.io.InputStream r10;
        android.os.Parcel r11;
        android.net.LocalSocketAddress$Namespace $r14;
        android.net.LocalSocketAddress $r15;
        com.android.internal.telephony.RIL $r16, $r18, $r21, $r22, $r23, $r25, $r28, $r35;
        byte[] $r19, $r20;
        com.android.internal.telephony.CommandsInterface$RadioState $r24;
        java.lang.InterruptedException $r26;
        java.lang.StringBuilder $r29, $r32, $r33, $r34, $r37, $r40, $r41, $r42, $r48;
        java.lang.String $r31, $r47, $r49;

        r0 := @this: com.android.internal.telephony.RIL$RILReceiver;

        i0 = 0;

     label01:
        r1 = null;

     label02:
        $r12 = new android.net.LocalSocket;

        specialinvoke $r12.<android.net.LocalSocket: void <init>()>();

        r2 = $r12;

     label03:
        $r15 = new android.net.LocalSocketAddress;

        $r14 = <android.net.LocalSocketAddress$Namespace: android.net.LocalSocketAddress$Namespace RESERVED>;

        specialinvoke $r15.<android.net.LocalSocketAddress: void <init>(java.lang.String,android.net.LocalSocketAddress$Namespace)>("rild", $r14);

        virtualinvoke r2.<android.net.LocalSocket: void connect(android.net.LocalSocketAddress)>($r15);

     label04:
        $r16 = r0.<com.android.internal.telephony.RIL$RILReceiver: com.android.internal.telephony.RIL this$0>;

        $r16.<com.android.internal.telephony.RIL: android.net.LocalSocket mSocket> = r2;

        staticinvoke <android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("RILJ", "Connected to \'rild\' socket");

     label05:
        i1 = 0;

     label06:
        $r18 = r0.<com.android.internal.telephony.RIL$RILReceiver: com.android.internal.telephony.RIL this$0>;

        $r17 = $r18.<com.android.internal.telephony.RIL: android.net.LocalSocket mSocket>;

        r10 = virtualinvoke $r17.<android.net.LocalSocket: java.io.InputStream getInputStream()>();

     label07:
        $r19 = r0.<com.android.internal.telephony.RIL$RILReceiver: byte[] buffer>;

        i2 = staticinvoke <com.android.internal.telephony.RIL: int access$400(java.io.InputStream,byte[])>(r10, $r19);

     label08:
        i1 = i2;

        if i1 >= 0 goto label26;

     label09:
        staticinvoke <android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("RILJ", "Disconnected from \'rild\' socket");

        $r22 = r0.<com.android.internal.telephony.RIL$RILReceiver: com.android.internal.telephony.RIL this$0>;

        $r24 = <com.android.internal.telephony.CommandsInterface$RadioState: com.android.internal.telephony.CommandsInterface$RadioState RADIO_UNAVAILABLE>;

        virtualinvoke $r22.<com.android.internal.telephony.RIL: void setRadioState(com.android.internal.telephony.CommandsInterface$RadioState)>($r24);

     label10:
        $r23 = r0.<com.android.internal.telephony.RIL$RILReceiver: com.android.internal.telephony.RIL this$0>;

        $r27 = $r23.<com.android.internal.telephony.RIL: android.net.LocalSocket mSocket>;

        virtualinvoke $r27.<android.net.LocalSocket: void close()>();

     label11:
        $r28 = r0.<com.android.internal.telephony.RIL$RILReceiver: com.android.internal.telephony.RIL this$0>;

        $r28.<com.android.internal.telephony.RIL: android.net.LocalSocket mSocket> = null;

        staticinvoke <com.android.internal.telephony.RILRequest: void resetSerial()>();

        $r25 = r0.<com.android.internal.telephony.RIL$RILReceiver: com.android.internal.telephony.RIL this$0>;

        staticinvoke <com.android.internal.telephony.RIL: void access$600(com.android.internal.telephony.RIL,int,boolean)>($r25, 1, 0);

     label12:
        i0 = 0;

        goto label01;

     label13:
        $r44 := @caughtexception;

        r4 = $r44;

     label14:
        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RILJ", "Uncaught exception", r4);

        $r35 = r0.<com.android.internal.telephony.RIL$RILReceiver: com.android.internal.telephony.RIL this$0>;

        staticinvoke <com.android.internal.telephony.RIL: void access$700(com.android.internal.telephony.RIL,int)>($r35, -1);

        return;

     label15:
        $r30 := @caughtexception;

     label16:
        if r1 == null goto label18;

     label17:
        virtualinvoke r1.<android.net.LocalSocket: void close()>();

     label18:
        if i0 != 8 goto label22;

     label19:
        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t find \'rild\' socket after ");

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" times, continuing to retry silently");

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("RILJ", $r31);

     label20:
        staticinvoke <java.lang.Thread: void sleep(long)>(4000L);

     label21:
        i0 = i0 + 1;

        goto label01;

     label22:
        if i0 <= 0 goto label20;

        if i0 >= 8 goto label20;

     label23:
        staticinvoke <android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("RILJ", "Couldn\'t find \'rild\' socket; retrying after timeout");

     label24:
        goto label20;

     label25:
        $r36 := @caughtexception;

        r4 = $r36;

        goto label14;

     label26:
        r11 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r20 = r0.<com.android.internal.telephony.RIL$RILReceiver: byte[] buffer>;

        virtualinvoke r11.<android.os.Parcel: void unmarshall(byte[],int,int)>($r20, 0, i1);

        virtualinvoke r11.<android.os.Parcel: void setDataPosition(int)>(0);

        $r21 = r0.<com.android.internal.telephony.RIL$RILReceiver: com.android.internal.telephony.RIL this$0>;

        staticinvoke <com.android.internal.telephony.RIL: void access$500(com.android.internal.telephony.RIL,android.os.Parcel)>($r21, r11);

        virtualinvoke r11.<android.os.Parcel: void recycle()>();

     label27:
        goto label07;

     label28:
        $r39 := @caughtexception;

        r8 = $r39;

     label29:
        staticinvoke <android.telephony.Rlog: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("RILJ", "\'rild\' socket closed", r8);

     label30:
        goto label09;

     label31:
        $r38 := @caughtexception;

        r7 = $r38;

     label32:
        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Uncaught exception read length=");

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception:");

        $r47 = virtualinvoke r7.<java.lang.Throwable: java.lang.String toString()>();

        $r48 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("RILJ", $r49);

     label33:
        goto label09;

     label34:
        $r43 := @caughtexception;

        goto label18;

     label35:
        $r26 := @caughtexception;

        goto label21;

     label36:
        $r45 := @caughtexception;

        goto label11;

     label37:
        $r46 := @caughtexception;

        r1 = r2;

        goto label16;

        catch java.io.IOException from label02 to label03 with label15;
        catch java.lang.Throwable from label02 to label03 with label25;
        catch java.io.IOException from label03 to label04 with label37;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.io.IOException from label06 to label07 with label28;
        catch java.lang.Throwable from label06 to label07 with label31;
        catch java.io.IOException from label07 to label08 with label28;
        catch java.lang.Throwable from label07 to label08 with label31;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.io.IOException from label10 to label11 with label36;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.io.IOException from label17 to label18 with label34;
        catch java.lang.Throwable from label17 to label18 with label25;
        catch java.lang.Throwable from label19 to label20 with label25;
        catch java.lang.InterruptedException from label20 to label21 with label35;
        catch java.lang.Throwable from label20 to label21 with label25;
        catch java.lang.Throwable from label23 to label24 with label25;
        catch java.io.IOException from label26 to label27 with label28;
        catch java.lang.Throwable from label26 to label27 with label31;
        catch java.lang.Throwable from label29 to label30 with label13;
        catch java.lang.Throwable from label32 to label33 with label13;
    }
}
