public class org.apache.xalan.templates.ElemExsltFuncResult extends org.apache.xalan.templates.ElemVariable
{
    static final long serialVersionUID;
    private int m_callerFrameSize;
    private boolean m_isResultSet;
    private org.apache.xpath.objects.XObject m_result;

    public void <init>()
    {
        org.apache.xalan.templates.ElemExsltFuncResult r0;

        r0 := @this: org.apache.xalan.templates.ElemExsltFuncResult;

        specialinvoke r0.<org.apache.xalan.templates.ElemVariable: void <init>()>();

        r0.<org.apache.xalan.templates.ElemExsltFuncResult: boolean m_isResultSet> = 0;

        r0.<org.apache.xalan.templates.ElemExsltFuncResult: org.apache.xpath.objects.XObject m_result> = null;

        r0.<org.apache.xalan.templates.ElemExsltFuncResult: int m_callerFrameSize> = 0;

        return;
    }

    public void execute(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemExsltFuncResult r0;
        org.apache.xalan.transformer.TransformerImpl r1;
        org.apache.xpath.XPathContext r2;
        org.apache.xpath.objects.XObject r3;
        boolean $z0;
        int $i0;
        javax.xml.transform.TransformerException $r5;

        r0 := @this: org.apache.xalan.templates.ElemExsltFuncResult;

        r1 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        r2 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        $z0 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: boolean currentFuncResultSeen()>();

        if $z0 == 0 goto label1;

        $r5 = new javax.xml.transform.TransformerException;

        specialinvoke $r5.<javax.xml.transform.TransformerException: void <init>(java.lang.String)>("An EXSLT function cannot set more than one result!");

        throw $r5;

     label1:
        $i0 = virtualinvoke r2.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        r3 = virtualinvoke r0.<org.apache.xalan.templates.ElemExsltFuncResult: org.apache.xpath.objects.XObject getValue(org.apache.xalan.transformer.TransformerImpl,int)>(r1, $i0);

        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: java.lang.Object popCurrentFuncResult()>();

        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: void pushCurrentFuncResult(java.lang.Object)>(r3);

        return;
    }

    public java.lang.String getNodeName()
    {
        org.apache.xalan.templates.ElemExsltFuncResult r0;

        r0 := @this: org.apache.xalan.templates.ElemExsltFuncResult;

        return "result";
    }

    public int getXSLToken()
    {
        org.apache.xalan.templates.ElemExsltFuncResult r0;

        r0 := @this: org.apache.xalan.templates.ElemExsltFuncResult;

        return 89;
    }

    public static void <clinit>()
    {
        <org.apache.xalan.templates.ElemExsltFuncResult: long serialVersionUID> = -3478311949388304563L;

        return;
    }
}
