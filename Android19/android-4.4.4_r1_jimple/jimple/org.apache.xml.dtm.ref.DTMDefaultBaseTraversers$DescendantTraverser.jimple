class org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser extends org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$IndexedDTMAxisTraverser
{
    final org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0;

    private void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser r0;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser;

        r1 := @parameter0: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers;

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0> = r1;

        specialinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$IndexedDTMAxisTraverser: void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers,org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1)>(r1, null);

        return;
    }

    void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers, org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser r0;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers r1;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1 r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser;

        r1 := @parameter0: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers;

        r2 := @parameter1: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1;

        specialinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser: void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers)>(r1);

        return;
    }

    protected boolean axisHasBeenProcessed(int)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser r0;
        int i0, $i1;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers $r1;
        org.apache.xml.utils.SuballocatedIntVector $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $r2 = $r1.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: org.apache.xml.utils.SuballocatedIntVector m_nextsib>;

        $i1 = virtualinvoke $r2.<org.apache.xml.utils.SuballocatedIntVector: int elementAt(int)>(i0);

        if $i1 == -2 goto label1;

        return 1;

     label1:
        return 0;
    }

    public int first(int, int)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser r0;
        int i0, i1, i2, i3, $i4, $i5, $i6;
        boolean $z0;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers $r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser: boolean isIndexed(int)>(i1);

        if $z0 == 0 goto label1;

        i2 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser: int getSubtreeRoot(int)>(i0);

        i3 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser: int getFirstPotential(int)>(i2);

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i5 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser: int getNextIndexed(int,int,int)>(i2, i3, i1);

        $i6 = virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int makeNodeHandle(int)>($i5);

        return $i6;

     label1:
        $i4 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser: int next(int,int,int)>(i0, i0, i1);

        return $i4;
    }

    protected int getFirstPotential(int)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser r0;
        int i0, $i1;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser;

        i0 := @parameter0: int;

        $i1 = i0 + 1;

        return $i1;
    }

    protected int getSubtreeRoot(int)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser r0;
        int i0, $i1;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers $r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i1 = virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int makeNodeIdentity(int)>(i0);

        return $i1;
    }

    protected boolean isAfterAxis(int, int)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser r0;
        int i0, i1;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers $r1;
        org.apache.xml.utils.SuballocatedIntVector $r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

     label1:
        if i1 != i0 goto label2;

        return 0;

     label2:
        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $r2 = $r1.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: org.apache.xml.utils.SuballocatedIntVector m_parent>;

        i1 = virtualinvoke $r2.<org.apache.xml.utils.SuballocatedIntVector: int elementAt(int)>(i1);

        if i1 >= i0 goto label1;

        return 1;
    }

    protected boolean isDescendant(int, int)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser r0;
        int i0, i1, $i2;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers $r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i2 = virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int _parent(int)>(i1);

        if $i2 < i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public int next(int, int)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser r0;
        int i0, i1, i2, i3, $i5, $i6;
        short s4;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser: int getSubtreeRoot(int)>(i0);

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i5 = virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int makeNodeIdentity(int)>(i1);

        i3 = 1 + $i5;

     label1:
        $r2 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        s4 = virtualinvoke $r2.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: short _type(int)>(i3);

        $z0 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser: boolean isDescendant(int,int)>(i2, i3);

        if $z0 != 0 goto label2;

        return -1;

     label2:
        if 2 == s4 goto label3;

        if 13 != s4 goto label4;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        $r3 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i6 = virtualinvoke $r3.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int makeNodeHandle(int)>(i3);

        return $i6;
    }

    public int next(int, int, int)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers $r1, $r2, $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser: int getSubtreeRoot(int)>(i0);

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i6 = virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int makeNodeIdentity(int)>(i1);

        i4 = 1 + $i6;

        $z0 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser: boolean isIndexed(int)>(i2);

        if $z0 == 0 goto label2;

        $r4 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i9 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser: int getNextIndexed(int,int,int)>(i3, i4, i2);

        $i8 = virtualinvoke $r4.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int makeNodeHandle(int)>($i9);

        return $i8;

     label1:
        if i5 == i2 goto label3;

        i4 = i4 + 1;

     label2:
        $r2 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        i5 = virtualinvoke $r2.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int _exptype(int)>(i4);

        $z1 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser: boolean isDescendant(int,int)>(i3, i4);

        if $z1 != 0 goto label1;

        return -1;

     label3:
        $r3 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i7 = virtualinvoke $r3.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int makeNodeHandle(int)>(i4);

        return $i7;
    }
}
