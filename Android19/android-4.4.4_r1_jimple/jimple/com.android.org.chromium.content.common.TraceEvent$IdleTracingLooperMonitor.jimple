final class com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor extends com.android.org.chromium.content.common.TraceEvent$BasicLooperMonitor implements android.os.MessageQueue$IdleHandler
{
    private boolean mIdleMonitorAttached;
    private long mLastIdleStartedAt;
    private long mLastWorkStartedAt;
    private int mNumIdlesSeen;
    private int mNumTasksSeen;
    private int mNumTasksSinceLastIdle;

    private void <init>()
    {
        com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor r0;

        r0 := @this: com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor;

        specialinvoke r0.<com.android.org.chromium.content.common.TraceEvent$BasicLooperMonitor: void <init>(com.android.org.chromium.content.common.TraceEvent$1)>(null);

        r0.<com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor: long mLastIdleStartedAt> = 0L;

        r0.<com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor: long mLastWorkStartedAt> = 0L;

        r0.<com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor: int mNumTasksSeen> = 0;

        r0.<com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor: int mNumIdlesSeen> = 0;

        r0.<com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor: int mNumTasksSinceLastIdle> = 0;

        r0.<com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor: boolean mIdleMonitorAttached> = 0;

        return;
    }

    void <init>(com.android.org.chromium.content.common.TraceEvent$1)
    {
        com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor r0;
        com.android.org.chromium.content.common.TraceEvent$1 r1;

        r0 := @this: com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor;

        r1 := @parameter0: com.android.org.chromium.content.common.TraceEvent$1;

        specialinvoke r0.<com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor: void <init>()>();

        return;
    }

    private final void syncIdleMonitoring()
    {
        com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor r0;
        boolean $z0, $z1, $z2, $z3;
        android.os.MessageQueue $r1, $r2;
        long $l1;

        r0 := @this: com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor;

        $z0 = staticinvoke <com.android.org.chromium.content.common.TraceEvent: boolean access$100()>();

        if $z0 == 0 goto label2;

        $z3 = r0.<com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor: boolean mIdleMonitorAttached>;

        if $z3 != 0 goto label2;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor: long mLastIdleStartedAt> = $l1;

        $r2 = staticinvoke <android.os.Looper: android.os.MessageQueue myQueue()>();

        virtualinvoke $r2.<android.os.MessageQueue: void addIdleHandler(android.os.MessageQueue$IdleHandler)>(r0);

        r0.<com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor: boolean mIdleMonitorAttached> = 1;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("TraceEvent.LooperMonitor", "attached idle handler");

     label1:
        return;

     label2:
        $z1 = r0.<com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor: boolean mIdleMonitorAttached>;

        if $z1 == 0 goto label1;

        $z2 = staticinvoke <com.android.org.chromium.content.common.TraceEvent: boolean access$100()>();

        if $z2 != 0 goto label1;

        $r1 = staticinvoke <android.os.Looper: android.os.MessageQueue myQueue()>();

        virtualinvoke $r1.<android.os.MessageQueue: void removeIdleHandler(android.os.MessageQueue$IdleHandler)>(r0);

        r0.<com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor: boolean mIdleMonitorAttached> = 0;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("TraceEvent.LooperMonitor", "detached idle handler");

        return;
    }

    private static void traceAndLog(int, java.lang.String)
    {
        int i0;
        java.lang.String r0;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        staticinvoke <com.android.org.chromium.content.common.TraceEvent: void instant(java.lang.String,java.lang.String)>("TraceEvent.LooperMonitor:IdleStats", r0);

        staticinvoke <android.util.Log: int println(int,java.lang.String,java.lang.String)>(i0, "TraceEvent.LooperMonitor", r0);

        return;
    }

    final void beginHandling(java.lang.String)
    {
        com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor r0;
        java.lang.String r1;
        int $i0;
        long $l1;

        r0 := @this: com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor;

        r1 := @parameter0: java.lang.String;

        $i0 = r0.<com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor: int mNumTasksSinceLastIdle>;

        if $i0 != 0 goto label1;

        staticinvoke <com.android.org.chromium.content.common.TraceEvent: void end(java.lang.String)>("Looper.queueIdle");

     label1:
        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor: long mLastWorkStartedAt> = $l1;

        specialinvoke r0.<com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor: void syncIdleMonitoring()>();

        specialinvoke r0.<com.android.org.chromium.content.common.TraceEvent$BasicLooperMonitor: void beginHandling(java.lang.String)>(r1);

        return;
    }

    final void endHandling(java.lang.String)
    {
        com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor r0;
        java.lang.String r1, $r6;
        long l0, $l1, $l2;
        byte $b3;
        int $i4, $i5, $i6, $i7;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r7;

        r0 := @this: com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor;

        r1 := @parameter0: java.lang.String;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l2 = r0.<com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor: long mLastWorkStartedAt>;

        l0 = $l1 - $l2;

        $b3 = l0 cmp 16L;

        if $b3 <= 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("observed a task that took ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms: ");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor: void traceAndLog(int,java.lang.String)>(5, $r6);

     label1:
        specialinvoke r0.<com.android.org.chromium.content.common.TraceEvent$BasicLooperMonitor: void endHandling(java.lang.String)>(r1);

        specialinvoke r0.<com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor: void syncIdleMonitoring()>();

        $i4 = r0.<com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor: int mNumTasksSeen>;

        $i5 = 1 + $i4;

        r0.<com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor: int mNumTasksSeen> = $i5;

        $i6 = r0.<com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor: int mNumTasksSinceLastIdle>;

        $i7 = 1 + $i6;

        r0.<com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor: int mNumTasksSinceLastIdle> = $i7;

        return;
    }

    public final boolean queueIdle()
    {
        com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor r0;
        long l0, l1, $l2, $l4;
        byte $b3, $b8;
        int $i5, $i6, $i7, $i9, $i10, $i11;
        java.lang.StringBuilder $r1, $r2, $r3, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r14;
        java.lang.String $r4, $r13;

        r0 := @this: com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l2 = r0.<com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor: long mLastIdleStartedAt>;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label1;

        r0.<com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor: long mLastIdleStartedAt> = l0;

     label1:
        $l4 = r0.<com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor: long mLastIdleStartedAt>;

        l1 = l0 - $l4;

        $i5 = r0.<com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor: int mNumIdlesSeen>;

        $i6 = 1 + $i5;

        r0.<com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor: int mNumIdlesSeen> = $i6;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $i7 = r0.<com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor: int mNumTasksSinceLastIdle>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" tasks since last idle.");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.org.chromium.content.common.TraceEvent: void begin(java.lang.String,java.lang.String)>("Looper.queueIdle", $r4);

        $b8 = l1 cmp 48L;

        if $b8 <= 0 goto label2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $i9 = r0.<com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor: int mNumTasksSeen>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" tasks and ");

        $i10 = r0.<com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor: int mNumIdlesSeen>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" idles processed so far, ");

        $i11 = r0.<com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor: int mNumTasksSinceLastIdle>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" tasks bursted and ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms elapsed since last idle");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor: void traceAndLog(int,java.lang.String)>(3, $r13);

     label2:
        r0.<com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor: long mLastIdleStartedAt> = l0;

        r0.<com.android.org.chromium.content.common.TraceEvent$IdleTracingLooperMonitor: int mNumTasksSinceLastIdle> = 0;

        return 1;
    }
}
