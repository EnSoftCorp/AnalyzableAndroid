class com.android.okhttp.ConnectionPool$1 extends java.lang.Object implements java.util.concurrent.Callable
{
    final com.android.okhttp.ConnectionPool this$0;

    void <init>(com.android.okhttp.ConnectionPool)
    {
        com.android.okhttp.ConnectionPool$1 r0;
        com.android.okhttp.ConnectionPool r1;

        r0 := @this: com.android.okhttp.ConnectionPool$1;

        r1 := @parameter0: com.android.okhttp.ConnectionPool;

        r0.<com.android.okhttp.ConnectionPool$1: com.android.okhttp.ConnectionPool this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public volatile java.lang.Object call() throws java.lang.Exception
    {
        com.android.okhttp.ConnectionPool$1 r0;
        java.lang.Void $r1;

        r0 := @this: com.android.okhttp.ConnectionPool$1;

        $r1 = virtualinvoke r0.<com.android.okhttp.ConnectionPool$1: java.lang.Void call()>();

        return $r1;
    }

    public java.lang.Void call() throws java.lang.Exception
    {
        com.android.okhttp.ConnectionPool$1 r0;
        java.util.ArrayList r1, $r9;
        int i0, $i1, $i2, $i3, $i5;
        com.android.okhttp.ConnectionPool r2, $r10, $r12, $r15, $r17, $r21, $r23;
        java.lang.Throwable r3, $r24;
        java.util.ListIterator r4, r5;
        java.util.Iterator r6;
        com.android.okhttp.Connection r7, r8, $r18;
        java.util.LinkedList $r11, $r13, $r14, $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z7, $z8;
        java.lang.Object $r19, $r20, $r22;
        long $l4;

        r0 := @this: com.android.okhttp.ConnectionPool$1;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>(int)>(2);

        r1 = $r9;

        i0 = 0;

        r2 = r0.<com.android.okhttp.ConnectionPool$1: com.android.okhttp.ConnectionPool this$0>;

        entermonitor r2;

     label01:
        $r10 = r0.<com.android.okhttp.ConnectionPool$1: com.android.okhttp.ConnectionPool this$0>;

        $r11 = staticinvoke <com.android.okhttp.ConnectionPool: java.util.LinkedList access$000(com.android.okhttp.ConnectionPool)>($r10);

        $r12 = r0.<com.android.okhttp.ConnectionPool$1: com.android.okhttp.ConnectionPool this$0>;

        $r13 = staticinvoke <com.android.okhttp.ConnectionPool: java.util.LinkedList access$000(com.android.okhttp.ConnectionPool)>($r12);

        $i1 = virtualinvoke $r13.<java.util.LinkedList: int size()>();

        r4 = virtualinvoke $r11.<java.util.LinkedList: java.util.ListIterator listIterator(int)>($i1);

     label02:
        $z0 = interfaceinvoke r4.<java.util.ListIterator: boolean hasPrevious()>();

        if $z0 == 0 goto label04;

        $r22 = interfaceinvoke r4.<java.util.ListIterator: java.lang.Object previous()>();

        r8 = (com.android.okhttp.Connection) $r22;

        $z4 = virtualinvoke r8.<com.android.okhttp.Connection: boolean isAlive()>();

        if $z4 == 0 goto label03;

        $r23 = r0.<com.android.okhttp.ConnectionPool$1: com.android.okhttp.ConnectionPool this$0>;

        $l4 = staticinvoke <com.android.okhttp.ConnectionPool: long access$100(com.android.okhttp.ConnectionPool)>($r23);

        $z7 = virtualinvoke r8.<com.android.okhttp.Connection: boolean isExpired(long)>($l4);

        if $z7 == 0 goto label07;

     label03:
        interfaceinvoke r4.<java.util.ListIterator: void remove()>();

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r8);

        $i5 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i5 != 2 goto label02;

     label04:
        $r15 = r0.<com.android.okhttp.ConnectionPool$1: com.android.okhttp.ConnectionPool this$0>;

        $r14 = staticinvoke <com.android.okhttp.ConnectionPool: java.util.LinkedList access$000(com.android.okhttp.ConnectionPool)>($r15);

        $r17 = r0.<com.android.okhttp.ConnectionPool$1: com.android.okhttp.ConnectionPool this$0>;

        $r16 = staticinvoke <com.android.okhttp.ConnectionPool: java.util.LinkedList access$000(com.android.okhttp.ConnectionPool)>($r17);

        $i2 = virtualinvoke $r16.<java.util.LinkedList: int size()>();

        r5 = virtualinvoke $r14.<java.util.LinkedList: java.util.ListIterator listIterator(int)>($i2);

     label05:
        $z1 = interfaceinvoke r5.<java.util.ListIterator: boolean hasPrevious()>();

        if $z1 == 0 goto label09;

        $r21 = r0.<com.android.okhttp.ConnectionPool$1: com.android.okhttp.ConnectionPool this$0>;

        $i3 = staticinvoke <com.android.okhttp.ConnectionPool: int access$200(com.android.okhttp.ConnectionPool)>($r21);

        if i0 <= $i3 goto label09;

        $r20 = interfaceinvoke r5.<java.util.ListIterator: java.lang.Object previous()>();

        r7 = (com.android.okhttp.Connection) $r20;

        $z3 = virtualinvoke r7.<com.android.okhttp.Connection: boolean isIdle()>();

        if $z3 == 0 goto label05;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r7);

        interfaceinvoke r5.<java.util.ListIterator: void remove()>();

     label06:
        i0 = i0 + -1;

        goto label05;

     label07:
        $z8 = virtualinvoke r8.<com.android.okhttp.Connection: boolean isIdle()>();

        if $z8 == 0 goto label02;

     label08:
        i0 = i0 + 1;

        goto label02;

     label09:
        exitmonitor r2;

     label10:
        r6 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label15;

        $r19 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        $r18 = (com.android.okhttp.Connection) $r19;

        staticinvoke <com.android.okhttp.internal.Util: void closeQuietly(java.io.Closeable)>($r18);

        goto label11;

     label12:
        $r24 := @caughtexception;

        r3 = $r24;

     label13:
        exitmonitor r2;

     label14:
        throw r3;

     label15:
        return null;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }
}
