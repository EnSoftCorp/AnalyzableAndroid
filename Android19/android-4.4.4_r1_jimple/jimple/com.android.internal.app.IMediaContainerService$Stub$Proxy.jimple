class com.android.internal.app.IMediaContainerService$Stub$Proxy extends java.lang.Object implements com.android.internal.app.IMediaContainerService
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        com.android.internal.app.IMediaContainerService$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: com.android.internal.app.IMediaContainerService$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.app.IMediaContainerService$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        com.android.internal.app.IMediaContainerService$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: com.android.internal.app.IMediaContainerService$Stub$Proxy;

        $r1 = r0.<com.android.internal.app.IMediaContainerService$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public long calculateDirectorySize(java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.app.IMediaContainerService$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        long l0;
        android.os.IBinder $r5;

        r0 := @this: com.android.internal.app.IMediaContainerService$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IMediaContainerService");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r5 = r0.<com.android.internal.app.IMediaContainerService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        l0 = virtualinvoke r3.<android.os.Parcel: long readLong()>();

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return l0;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public long calculateInstalledSize(java.lang.String, boolean) throws android.os.RemoteException
    {
        com.android.internal.app.IMediaContainerService$Stub$Proxy r0;
        java.lang.String r1;
        boolean z0;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        byte b0;
        long l1;
        android.os.IBinder $r5;

        r0 := @this: com.android.internal.app.IMediaContainerService$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IMediaContainerService");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label2:
        b0 = 0;

        if z0 == 0 goto label3;

        b0 = 1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b0);

        $r5 = r0.<com.android.internal.app.IMediaContainerService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        l1 = virtualinvoke r3.<android.os.Parcel: long readLong()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return l1;

     label5:
        $r6 := @caughtexception;

        r4 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean checkExternalFreeStorage(android.net.Uri, boolean) throws android.os.RemoteException
    {
        com.android.internal.app.IMediaContainerService$Stub$Proxy r0;
        android.net.Uri r1;
        boolean z0, z1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        int i0, i1, i2;
        android.os.IBinder $r5;

        r0 := @this: com.android.internal.app.IMediaContainerService$Stub$Proxy;

        r1 := @parameter0: android.net.Uri;

        z0 := @parameter1: boolean;

        z1 = 1;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IMediaContainerService");

     label02:
        if r1 == null goto label08;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label13;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<com.android.internal.app.IMediaContainerService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label06:
        if i1 == 0 goto label12;

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z1;

     label08:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label09:
        goto label13;

     label10:
        $r6 := @caughtexception;

        r4 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label11:
        i0 = 0;

        goto label05;

     label12:
        z1 = 0;

        goto label07;

     label13:
        if z0 == 0 goto label11;

        i2 = (int) 1;

        i0 = i2;

        goto label05;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public boolean checkInternalFreeStorage(android.net.Uri, boolean, long) throws android.os.RemoteException
    {
        com.android.internal.app.IMediaContainerService$Stub$Proxy r0;
        android.net.Uri r1;
        boolean z0, z1;
        long l0;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        int i1, i2, i3;
        android.os.IBinder $r5;

        r0 := @this: com.android.internal.app.IMediaContainerService$Stub$Proxy;

        r1 := @parameter0: android.net.Uri;

        z0 := @parameter1: boolean;

        l0 := @parameter2: long;

        z1 = 1;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IMediaContainerService");

     label02:
        if r1 == null goto label08;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label13;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r2.<android.os.Parcel: void writeLong(long)>(l0);

        $r5 = r0.<com.android.internal.app.IMediaContainerService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label06:
        if i2 == 0 goto label12;

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z1;

     label08:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label09:
        goto label13;

     label10:
        $r6 := @caughtexception;

        r4 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label11:
        i1 = 0;

        goto label05;

     label12:
        z1 = 0;

        goto label07;

     label13:
        if z0 == 0 goto label11;

        i3 = (int) 1;

        i1 = i3;

        goto label05;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public void clearDirectory(java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.app.IMediaContainerService$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: com.android.internal.app.IMediaContainerService$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IMediaContainerService");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r5 = r0.<com.android.internal.app.IMediaContainerService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int copyResource(android.net.Uri, android.content.pm.ContainerEncryptionParams, android.os.ParcelFileDescriptor) throws android.os.RemoteException
    {
        com.android.internal.app.IMediaContainerService$Stub$Proxy r0;
        android.net.Uri r1;
        android.content.pm.ContainerEncryptionParams r2;
        android.os.ParcelFileDescriptor r3;
        android.os.Parcel r4, r5;
        java.lang.Throwable r6, $r8;
        int i0;
        android.os.IBinder $r7;

        r0 := @this: com.android.internal.app.IMediaContainerService$Stub$Proxy;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.pm.ContainerEncryptionParams;

        r3 := @parameter2: android.os.ParcelFileDescriptor;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IMediaContainerService");

     label02:
        if r1 == null goto label10;

     label03:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r4, 0);

     label04:
        if r2 == null goto label13;

     label05:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.content.pm.ContainerEncryptionParams: void writeToParcel(android.os.Parcel,int)>(r4, 0);

     label06:
        if r3 == null goto label15;

     label07:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r3.<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>(r4, 0);

     label08:
        $r7 = r0.<com.android.internal.app.IMediaContainerService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r4, r5, 0);

        virtualinvoke r5.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r5.<android.os.Parcel: int readInt()>();

     label09:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return i0;

     label10:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label11:
        goto label04;

     label12:
        $r8 := @caughtexception;

        r6 = $r8;

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r6;

     label13:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label14:
        goto label06;

     label15:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label16:
        goto label08;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
        catch java.lang.Throwable from label15 to label16 with label12;
    }

    public java.lang.String copyResourceToContainer(android.net.Uri, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean, boolean) throws android.os.RemoteException
    {
        com.android.internal.app.IMediaContainerService$Stub$Proxy r0;
        android.net.Uri r1;
        java.lang.String r2, r3, r4, r5, r9;
        boolean z0, z1;
        byte b0, b1;
        android.os.Parcel r6, r7;
        java.lang.Throwable r8, $r11;
        android.os.IBinder $r10;

        r0 := @this: com.android.internal.app.IMediaContainerService$Stub$Proxy;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        b0 = 1;

        r6 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r7 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r6.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IMediaContainerService");

     label02:
        if r1 == null goto label10;

     label03:
        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r6, 0);

     label04:
        virtualinvoke r6.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        virtualinvoke r6.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        virtualinvoke r6.<android.os.Parcel: void writeString(java.lang.String)>(r4);

        virtualinvoke r6.<android.os.Parcel: void writeString(java.lang.String)>(r5);

     label05:
        if z0 == 0 goto label13;

        b1 = 1;

     label06:
        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(b1);

     label07:
        if z1 == 0 goto label14;

     label08:
        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(b0);

        $r10 = r0.<com.android.internal.app.IMediaContainerService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r10.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r6, r7, 0);

        virtualinvoke r7.<android.os.Parcel: void readException()>();

        r9 = virtualinvoke r7.<android.os.Parcel: java.lang.String readString()>();

     label09:
        virtualinvoke r7.<android.os.Parcel: void recycle()>();

        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        return r9;

     label10:
        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(0);

     label11:
        goto label04;

     label12:
        $r11 := @caughtexception;

        r8 = $r11;

        virtualinvoke r7.<android.os.Parcel: void recycle()>();

        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        throw r8;

     label13:
        b1 = 0;

        goto label06;

     label14:
        b0 = 0;

        goto label08;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
    }

    public long[] getFileSystemStats(java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.app.IMediaContainerService$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r7;
        long[] r5;
        android.os.IBinder $r6;

        r0 := @this: com.android.internal.app.IMediaContainerService$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IMediaContainerService");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r6 = r0.<com.android.internal.app.IMediaContainerService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        r5 = virtualinvoke r3.<android.os.Parcel: long[] createLongArray()>();

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r5;

     label3:
        $r7 := @caughtexception;

        r4 = $r7;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        com.android.internal.app.IMediaContainerService$Stub$Proxy r0;

        r0 := @this: com.android.internal.app.IMediaContainerService$Stub$Proxy;

        return "com.android.internal.app.IMediaContainerService";
    }

    public android.content.pm.PackageInfoLite getMinimalPackageInfo(java.lang.String, int, long) throws android.os.RemoteException
    {
        com.android.internal.app.IMediaContainerService$Stub$Proxy r0;
        java.lang.String r1;
        int i0, $i2;
        long l1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r8;
        android.content.pm.PackageInfoLite r5;
        android.os.IBinder $r6;
        android.os.Parcelable$Creator $r7;
        java.lang.Object $r9;

        r0 := @this: com.android.internal.app.IMediaContainerService$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IMediaContainerService");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeLong(long)>(l1);

        $r6 = r0.<com.android.internal.app.IMediaContainerService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $i2 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label3;

        $r7 = <android.content.pm.PackageInfoLite: android.os.Parcelable$Creator CREATOR>;

        $r9 = interfaceinvoke $r7.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r3);

        r5 = (android.content.pm.PackageInfoLite) $r9;

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r5;

     label3:
        r5 = null;

        goto label2;

     label4:
        $r8 := @caughtexception;

        r4 = $r8;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public android.content.res.ObbInfo getObbInfo(java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.app.IMediaContainerService$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r9;
        android.content.res.ObbInfo r5;
        android.os.IBinder $r6;
        int $i0;
        android.os.Parcelable$Creator $r7;
        java.lang.Object $r8;

        r0 := @this: com.android.internal.app.IMediaContainerService$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IMediaContainerService");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r6 = r0.<com.android.internal.app.IMediaContainerService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label3;

        $r7 = <android.content.res.ObbInfo: android.os.Parcelable$Creator CREATOR>;

        $r8 = interfaceinvoke $r7.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r3);

        r5 = (android.content.res.ObbInfo) $r8;

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r5;

     label3:
        r5 = null;

        goto label2;

     label4:
        $r9 := @caughtexception;

        r4 = $r9;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label4;
    }
}
