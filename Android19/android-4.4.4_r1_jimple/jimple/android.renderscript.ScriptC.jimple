public class android.renderscript.ScriptC extends android.renderscript.Script
{
    private static final java.lang.String CACHE_PATH;
    private static final java.lang.String TAG;
    static java.lang.String mCachePath;

    protected void <init>(int, android.renderscript.RenderScript)
    {
        android.renderscript.ScriptC r0;
        int i0;
        android.renderscript.RenderScript r1;

        r0 := @this: android.renderscript.ScriptC;

        i0 := @parameter0: int;

        r1 := @parameter1: android.renderscript.RenderScript;

        specialinvoke r0.<android.renderscript.Script: void <init>(int,android.renderscript.RenderScript)>(i0, r1);

        return;
    }

    protected void <init>(android.renderscript.RenderScript, android.content.res.Resources, int)
    {
        android.renderscript.ScriptC r0;
        android.renderscript.RenderScript r1;
        android.content.res.Resources r2;
        int i0, i1;
        android.renderscript.RSRuntimeException $r3;

        r0 := @this: android.renderscript.ScriptC;

        r1 := @parameter0: android.renderscript.RenderScript;

        r2 := @parameter1: android.content.res.Resources;

        i0 := @parameter2: int;

        specialinvoke r0.<android.renderscript.Script: void <init>(int,android.renderscript.RenderScript)>(0, r1);

        i1 = staticinvoke <android.renderscript.ScriptC: int internalCreate(android.renderscript.RenderScript,android.content.res.Resources,int)>(r1, r2, i0);

        if i1 != 0 goto label1;

        $r3 = new android.renderscript.RSRuntimeException;

        specialinvoke $r3.<android.renderscript.RSRuntimeException: void <init>(java.lang.String)>("Loading of ScriptC script failed.");

        throw $r3;

     label1:
        virtualinvoke r0.<android.renderscript.ScriptC: void setID(int)>(i1);

        return;
    }

    private static int internalCreate(android.renderscript.RenderScript, android.content.res.Resources, int)
    {
        android.renderscript.RenderScript r0;
        android.content.res.Resources r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.Throwable r2, r4, $r16, $r18;
        java.io.InputStream r3;
        byte[] r6, r7;
        java.lang.String r8, $r10, $r11, $r13;
        java.io.File r9, $r12, $r14;
        java.io.IOException $r15;
        android.content.res.Resources$NotFoundException $r17;

        r0 := @parameter0: android.renderscript.RenderScript;

        r1 := @parameter1: android.content.res.Resources;

        i0 := @parameter2: int;

        entermonitor class "android/renderscript/ScriptC";

     label01:
        r3 = virtualinvoke r1.<android.content.res.Resources: java.io.InputStream openRawResource(int)>(i0);

     label02:
        r6 = newarray (byte)[1024];

     label03:
        i1 = 0;

     label04:
        $i5 = lengthof r6;

        i2 = $i5 - i1;

     label05:
        if i2 != 0 goto label09;

     label06:
        $i6 = lengthof r6;

        $i8 = 2 * $i6;

        r7 = newarray (byte)[$i8];

        $i7 = lengthof r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r6, 0, r7, 0, $i7);

     label07:
        r6 = r7;

     label08:
        $i9 = lengthof r6;

        i2 = $i9 - i1;

     label09:
        i3 = virtualinvoke r3.<java.io.InputStream: int read(byte[],int,int)>(r6, i1, i2);

     label10:
        if i3 > 0 goto label15;

     label11:
        virtualinvoke r3.<java.io.InputStream: void close()>();

     label12:
        r8 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getResourceEntryName(int)>(i0);

        $r11 = <android.renderscript.ScriptC: java.lang.String mCachePath>;

        if $r11 != null goto label13;

        $r12 = new java.io.File;

        $r14 = <android.renderscript.RenderScript: java.io.File mCacheDir>;

        specialinvoke $r12.<java.io.File: void <init>(java.io.File,java.lang.String)>($r14, "com.android.renderscript.cache");

        r9 = $r12;

        $r13 = virtualinvoke r9.<java.io.File: java.lang.String getAbsolutePath()>();

        <android.renderscript.ScriptC: java.lang.String mCachePath> = $r13;

        virtualinvoke r9.<java.io.File: boolean mkdirs()>();

     label13:
        $r10 = <android.renderscript.ScriptC: java.lang.String mCachePath>;

        i4 = virtualinvoke r0.<android.renderscript.RenderScript: int nScriptCCreate(java.lang.String,java.lang.String,byte[],int)>(r8, $r10, r6, i1);

     label14:
        exitmonitor class "android/renderscript/ScriptC";

        return i4;

     label15:
        i1 = i1 + i3;

        goto label04;

     label16:
        $r18 := @caughtexception;

        r4 = $r18;

     label17:
        virtualinvoke r3.<java.io.InputStream: void close()>();

        throw r4;

     label18:
        $r15 := @caughtexception;

     label19:
        $r17 = new android.content.res.Resources$NotFoundException;

        specialinvoke $r17.<android.content.res.Resources$NotFoundException: void <init>()>();

        throw $r17;

     label20:
        $r16 := @caughtexception;

        r2 = $r16;

        exitmonitor class "android/renderscript/ScriptC";

        throw r2;

        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.lang.Throwable from label02 to label03 with label16;
        catch java.lang.Throwable from label04 to label05 with label16;
        catch java.lang.Throwable from label06 to label07 with label16;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.io.IOException from label11 to label12 with label18;
        catch java.lang.Throwable from label11 to label12 with label20;
        catch java.lang.Throwable from label12 to label13 with label20;
        catch java.lang.Throwable from label13 to label14 with label20;
        catch java.io.IOException from label17 to label18 with label18;
        catch java.lang.Throwable from label17 to label18 with label20;
        catch java.lang.Throwable from label19 to label20 with label20;
    }

    public static void <clinit>()
    {
        <android.renderscript.ScriptC: java.lang.String TAG> = "ScriptC";

        <android.renderscript.ScriptC: java.lang.String CACHE_PATH> = "com.android.renderscript.cache";

        return;
    }
}
