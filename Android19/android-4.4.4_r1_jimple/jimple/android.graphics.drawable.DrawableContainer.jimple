public class android.graphics.drawable.DrawableContainer extends android.graphics.drawable.Drawable implements android.graphics.drawable.Drawable$Callback
{
    private static final boolean DEBUG;
    private static final boolean DEFAULT_DITHER;
    private static final java.lang.String TAG;
    private int mAlpha;
    private java.lang.Runnable mAnimationRunnable;
    private android.graphics.ColorFilter mColorFilter;
    private int mCurIndex;
    private android.graphics.drawable.Drawable mCurrDrawable;
    private android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState;
    private long mEnterAnimationEnd;
    private long mExitAnimationEnd;
    private android.graphics.Insets mInsets;
    private android.graphics.drawable.Drawable mLastDrawable;
    private boolean mMutated;

    public void <init>()
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.Insets $r1;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        r0.<android.graphics.drawable.DrawableContainer: int mAlpha> = 255;

        r0.<android.graphics.drawable.DrawableContainer: int mCurIndex> = -1;

        $r1 = <android.graphics.Insets: android.graphics.Insets NONE>;

        r0.<android.graphics.drawable.DrawableContainer: android.graphics.Insets mInsets> = $r1;

        return;
    }

    private boolean needsMirroring()
    {
        android.graphics.drawable.DrawableContainer r0;
        boolean $z0;
        int $i0;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        $z0 = virtualinvoke r0.<android.graphics.drawable.DrawableContainer: boolean isAutoMirrored()>();

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<android.graphics.drawable.DrawableContainer: int getLayoutDirection()>();

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    void animate(boolean)
    {
        android.graphics.drawable.DrawableContainer r0;
        boolean z0, z1;
        long l0, $l4, $l5, $l8, $l9, $l10, $l11, $l17, $l18, $l19, $l20, $l24;
        int i1, i3, $i12, $i13, $i14, $i15, $i16, $i22, $i23, $i25, $i26, $i27, $i28, $i29;
        byte b2, $b6, $b7, $b21;
        android.graphics.drawable.Drawable $r1, $r2, $r5, $r6, $r7, $r9, $r10, $r11, $r12;
        java.lang.Runnable $r3;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r4, $r8;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        z0 := @parameter0: boolean;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r1 == null goto label5;

        $l17 = r0.<android.graphics.drawable.DrawableContainer: long mEnterAnimationEnd>;

        b2 = $l17 cmp 0L;

        z1 = 0;

        if b2 == 0 goto label1;

        $l20 = r0.<android.graphics.drawable.DrawableContainer: long mEnterAnimationEnd>;

        $b21 = $l20 cmp l0;

        if $b21 > 0 goto label4;

        $r11 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        $r12 = virtualinvoke $r11.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        $i29 = r0.<android.graphics.drawable.DrawableContainer: int mAlpha>;

        virtualinvoke $r12.<android.graphics.drawable.Drawable: void setAlpha(int)>($i29);

        r0.<android.graphics.drawable.DrawableContainer: long mEnterAnimationEnd> = 0L;

     label1:
        $r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        if $r2 == null goto label7;

        $l5 = r0.<android.graphics.drawable.DrawableContainer: long mExitAnimationEnd>;

        $b6 = $l5 cmp 0L;

        if $b6 == 0 goto label2;

        $l8 = r0.<android.graphics.drawable.DrawableContainer: long mExitAnimationEnd>;

        $b7 = $l8 cmp l0;

        if $b7 > 0 goto label6;

        $r7 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        virtualinvoke $r7.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(0, 0);

        r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable> = null;

        r0.<android.graphics.drawable.DrawableContainer: long mExitAnimationEnd> = 0L;

     label2:
        if z0 == 0 goto label3;

        if z1 == 0 goto label3;

        $r3 = r0.<android.graphics.drawable.DrawableContainer: java.lang.Runnable mAnimationRunnable>;

        $l4 = 16L + l0;

        virtualinvoke r0.<android.graphics.drawable.DrawableContainer: void scheduleSelf(java.lang.Runnable,long)>($r3, $l4);

     label3:
        return;

     label4:
        $l18 = r0.<android.graphics.drawable.DrawableContainer: long mEnterAnimationEnd>;

        $l19 = $l18 - l0;

        $l24 = 255L * $l19;

        $i23 = (int) $l24;

        $r8 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i22 = $r8.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mEnterFadeDuration>;

        i3 = $i23 / $i22;

        $r9 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        $r10 = virtualinvoke $r9.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        $i26 = 255 - i3;

        $i25 = r0.<android.graphics.drawable.DrawableContainer: int mAlpha>;

        $i27 = $i26 * $i25;

        $i28 = $i27 / 255;

        virtualinvoke $r10.<android.graphics.drawable.Drawable: void setAlpha(int)>($i28);

        z1 = 1;

        goto label1;

     label5:
        r0.<android.graphics.drawable.DrawableContainer: long mEnterAnimationEnd> = 0L;

        z1 = 0;

        goto label1;

     label6:
        $l10 = r0.<android.graphics.drawable.DrawableContainer: long mExitAnimationEnd>;

        $l9 = $l10 - l0;

        $l11 = 255L * $l9;

        $i12 = (int) $l11;

        $r4 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i13 = $r4.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mExitFadeDuration>;

        i1 = $i12 / $i13;

        $r6 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        $r5 = virtualinvoke $r6.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        $i15 = r0.<android.graphics.drawable.DrawableContainer: int mAlpha>;

        $i14 = i1 * $i15;

        $i16 = $i14 / 255;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void setAlpha(int)>($i16);

        z1 = 1;

        goto label2;

     label7:
        r0.<android.graphics.drawable.DrawableContainer: long mExitAnimationEnd> = 0L;

        goto label2;
    }

    public void draw(android.graphics.Canvas)
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.Canvas r1;
        android.graphics.drawable.Drawable $r2, $r3, $r4, $r5;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r2 == null goto label1;

        $r5 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

     label1:
        $r3 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        if $r3 == null goto label2;

        $r4 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

     label2:
        return;
    }

    public int getAlpha()
    {
        android.graphics.drawable.DrawableContainer r0;
        int $i0;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        $i0 = r0.<android.graphics.drawable.DrawableContainer: int mAlpha>;

        return $i0;
    }

    public int getChangingConfigurations()
    {
        android.graphics.drawable.DrawableContainer r0;
        int $i0, $i1, $i2, $i3, $i4;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r1, $r2;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        $i0 = specialinvoke r0.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i1 = $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mChangingConfigurations>;

        $i3 = $i0 | $i1;

        $r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i2 = $r2.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mChildrenChangingConfigurations>;

        $i4 = $i3 | $i2;

        return $i4;
    }

    public android.graphics.drawable.Drawable$ConstantState getConstantState()
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r1, $r2, $r3;
        boolean $z0;
        int $i0;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        $r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean canConstantState()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i0 = virtualinvoke r0.<android.graphics.drawable.DrawableContainer: int getChangingConfigurations()>();

        $r2.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mChangingConfigurations> = $i0;

        $r3 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        return $r3;

     label1:
        return null;
    }

    public android.graphics.drawable.Drawable getCurrent()
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        $r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        return $r1;
    }

    public int getIntrinsicHeight()
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r1, $r4;
        boolean $z0;
        android.graphics.drawable.Drawable $r2, $r3;
        int $i0, $i1;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        $r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean isConstantSize()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i1 = virtualinvoke $r4.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantHeight()>();

        return $i1;

     label1:
        $r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r2 == null goto label2;

        $r3 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        $i0 = virtualinvoke $r3.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        return $i0;

     label2:
        return -1;
    }

    public int getIntrinsicWidth()
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r1, $r4;
        boolean $z0;
        android.graphics.drawable.Drawable $r2, $r3;
        int $i0, $i1;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        $r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean isConstantSize()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i1 = virtualinvoke $r4.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantWidth()>();

        return $i1;

     label1:
        $r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r2 == null goto label2;

        $r3 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        $i0 = virtualinvoke $r3.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        return $i0;

     label2:
        return -1;
    }

    public int getMinimumHeight()
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r1, $r4;
        boolean $z0;
        android.graphics.drawable.Drawable $r2, $r3;
        int $i0, $i1;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        $r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean isConstantSize()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i1 = virtualinvoke $r4.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantMinimumHeight()>();

        return $i1;

     label1:
        $r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r2 == null goto label2;

        $r3 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        $i0 = virtualinvoke $r3.<android.graphics.drawable.Drawable: int getMinimumHeight()>();

        return $i0;

     label2:
        return 0;
    }

    public int getMinimumWidth()
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r1, $r4;
        boolean $z0;
        android.graphics.drawable.Drawable $r2, $r3;
        int $i0, $i1;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        $r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean isConstantSize()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i1 = virtualinvoke $r4.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantMinimumWidth()>();

        return $i1;

     label1:
        $r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r2 == null goto label2;

        $r3 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        $i0 = virtualinvoke $r3.<android.graphics.drawable.Drawable: int getMinimumWidth()>();

        return $i0;

     label2:
        return 0;
    }

    public int getOpacity()
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.drawable.Drawable $r1, $r2;
        boolean $z0;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r3;
        int $i0;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        $r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r1 == null goto label1;

        $r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        $z0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean isVisible()>();

        if $z0 != 0 goto label2;

     label1:
        return -2;

     label2:
        $r3 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i0 = virtualinvoke $r3.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getOpacity()>();

        return $i0;
    }

    public android.graphics.Insets getOpticalInsets()
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.Insets $r1;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        $r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.Insets mInsets>;

        return $r1;
    }

    public boolean getPadding(android.graphics.Rect)
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.Rect r1, r2;
        boolean z0, $z1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r3;
        android.graphics.drawable.Drawable $r4, $r5;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        r1 := @parameter0: android.graphics.Rect;

        $r3 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        r2 = virtualinvoke $r3.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect getConstantPadding()>();

        if r2 == null goto label4;

        virtualinvoke r1.<android.graphics.Rect: void set(android.graphics.Rect)>(r2);

        $i3 = r2.<android.graphics.Rect: int left>;

        $i2 = r2.<android.graphics.Rect: int top>;

        $i6 = $i3 | $i2;

        $i4 = r2.<android.graphics.Rect: int bottom>;

        $i8 = $i6 | $i4;

        $i5 = r2.<android.graphics.Rect: int right>;

        $i7 = $i8 | $i5;

        if $i7 == 0 goto label3;

        z0 = 1;

     label1:
        $z1 = specialinvoke r0.<android.graphics.drawable.DrawableContainer: boolean needsMirroring()>();

        if $z1 == 0 goto label2;

        i0 = r1.<android.graphics.Rect: int left>;

        $i1 = r1.<android.graphics.Rect: int right>;

        r1.<android.graphics.Rect: int left> = $i1;

        r1.<android.graphics.Rect: int right> = i0;

     label2:
        return z0;

     label3:
        z0 = 0;

        goto label1;

     label4:
        $r4 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r4 == null goto label5;

        $r5 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        z0 = virtualinvoke $r5.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>(r1);

        goto label1;

     label5:
        z0 = specialinvoke r0.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>(r1);

        goto label1;
    }

    public void invalidateDrawable(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.drawable.Drawable r1, $r2;
        android.graphics.drawable.Drawable$Callback $r3, $r4;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if r1 != $r2 goto label1;

        $r3 = virtualinvoke r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$Callback getCallback()>();

        if $r3 == null goto label1;

        $r4 = virtualinvoke r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$Callback getCallback()>();

        interfaceinvoke $r4.<android.graphics.drawable.Drawable$Callback: void invalidateDrawable(android.graphics.drawable.Drawable)>(r0);

     label1:
        return;
    }

    public boolean isAutoMirrored()
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r1;
        boolean $z0;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        $r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z0 = $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mAutoMirrored>;

        return $z0;
    }

    public boolean isStateful()
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r1;
        boolean $z0;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        $r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean isStateful()>();

        return $z0;
    }

    public void jumpToCurrentState()
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.drawable.Drawable r1, $r2, $r3, $r4, $r5, $r6;
        boolean z0;
        long $l0, $l2;
        byte $b1, $b3;
        int $i4;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        z0 = 0;

        if r1 == null goto label1;

        $r6 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        virtualinvoke $r6.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

        r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable> = null;

        z0 = 1;

     label1:
        $r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r2 == null goto label2;

        $r3 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

        $r4 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        $r5 = virtualinvoke $r4.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        $i4 = r0.<android.graphics.drawable.DrawableContainer: int mAlpha>;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void setAlpha(int)>($i4);

     label2:
        $l0 = r0.<android.graphics.drawable.DrawableContainer: long mExitAnimationEnd>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label3;

        r0.<android.graphics.drawable.DrawableContainer: long mExitAnimationEnd> = 0L;

        z0 = 1;

     label3:
        $l2 = r0.<android.graphics.drawable.DrawableContainer: long mEnterAnimationEnd>;

        $b3 = $l2 cmp 0L;

        if $b3 == 0 goto label4;

        r0.<android.graphics.drawable.DrawableContainer: long mEnterAnimationEnd> = 0L;

        z0 = 1;

     label4:
        if z0 == 0 goto label5;

        virtualinvoke r0.<android.graphics.drawable.DrawableContainer: void invalidateSelf()>();

     label5:
        return;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        android.graphics.drawable.DrawableContainer r0;
        boolean $z0;
        android.graphics.drawable.Drawable $r1;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r2;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        $z0 = r0.<android.graphics.drawable.DrawableContainer: boolean mMutated>;

        if $z0 != 0 goto label1;

        $r1 = specialinvoke r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        if $r1 != r0 goto label1;

        $r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        virtualinvoke $r2.<android.graphics.drawable.DrawableContainer$DrawableContainerState: void mutate()>();

        r0.<android.graphics.drawable.DrawableContainer: boolean mMutated> = 1;

     label1:
        return r0;
    }

    protected void onBoundsChange(android.graphics.Rect)
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.Rect r1;
        android.graphics.drawable.Drawable $r2, $r3, $r4, $r5;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        if $r2 == null goto label1;

        $r5 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>(r1);

     label1:
        $r3 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r3 == null goto label2;

        $r4 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>(r1);

     label2:
        return;
    }

    protected boolean onLevelChange(int)
    {
        android.graphics.drawable.DrawableContainer r0;
        int i0;
        android.graphics.drawable.Drawable $r1, $r2, $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        if $r1 == null goto label1;

        $r4 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        $z1 = virtualinvoke $r4.<android.graphics.drawable.Drawable: boolean setLevel(int)>(i0);

        return $z1;

     label1:
        $r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r2 == null goto label2;

        $r3 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        $z0 = virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean setLevel(int)>(i0);

        return $z0;

     label2:
        return 0;
    }

    protected boolean onStateChange(int[])
    {
        android.graphics.drawable.DrawableContainer r0;
        int[] r1;
        android.graphics.drawable.Drawable $r2, $r3, $r4, $r5;
        boolean $z0, $z1;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        r1 := @parameter0: int[];

        $r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        if $r2 == null goto label1;

        $r5 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        $z1 = virtualinvoke $r5.<android.graphics.drawable.Drawable: boolean setState(int[])>(r1);

        return $z1;

     label1:
        $r3 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r3 == null goto label2;

        $r4 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        $z0 = virtualinvoke $r4.<android.graphics.drawable.Drawable: boolean setState(int[])>(r1);

        return $z0;

     label2:
        return 0;
    }

    public void scheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable, long)
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.drawable.Drawable r1, $r3;
        java.lang.Runnable r2;
        long l0;
        android.graphics.drawable.Drawable$Callback $r4, $r5;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: java.lang.Runnable;

        l0 := @parameter2: long;

        $r3 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if r1 != $r3 goto label1;

        $r4 = virtualinvoke r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$Callback getCallback()>();

        if $r4 == null goto label1;

        $r5 = virtualinvoke r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$Callback getCallback()>();

        interfaceinvoke $r5.<android.graphics.drawable.Drawable$Callback: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>(r0, r2, l0);

     label1:
        return;
    }

    public boolean selectDrawable(int)
    {
        android.graphics.drawable.DrawableContainer r0;
        int i0, $i2, $i3, $i8, $i9, $i10, $i11, $i12, $i13, $i18;
        long l1, $l4, $l6, $l14, $l15, $l16, $l17;
        android.graphics.drawable.Drawable r1, $r3, $r20, $r22, $r23, $r24, $r25;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r2, $r8, $r9, $r13, $r14, $r18, $r19, $r21;
        android.graphics.Insets $r4, $r10, $r12;
        byte $b5, $b7;
        java.lang.Runnable $r5, $r6;
        android.graphics.drawable.DrawableContainer$1 $r7;
        boolean $z0, $z3, $z5;
        int[] $r15;
        android.graphics.ColorFilter $r16;
        android.graphics.Rect $r17;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        i0 := @parameter0: int;

        $i2 = r0.<android.graphics.drawable.DrawableContainer: int mCurIndex>;

        if i0 != $i2 goto label01;

        return 0;

     label01:
        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i3 = $r2.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mExitFadeDuration>;

        if $i3 <= 0 goto label10;

        $r24 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        if $r24 == null goto label02;

        $r25 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        virtualinvoke $r25.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(0, 0);

     label02:
        $r23 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r23 == null goto label09;

        $r22 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable> = $r22;

        $r21 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i18 = $r21.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mExitFadeDuration>;

        $l17 = (long) $i18;

        $l16 = l1 + $l17;

        r0.<android.graphics.drawable.DrawableContainer: long mExitAnimationEnd> = $l16;

     label03:
        if i0 < 0 goto label13;

        $r8 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i8 = $r8.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        if i0 >= $i8 goto label13;

        $r9 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        r1 = virtualinvoke $r9.<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable getChild(int)>(i0);

        r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable> = r1;

        r0.<android.graphics.drawable.DrawableContainer: int mCurIndex> = i0;

        if r1 == null goto label12;

        $r12 = virtualinvoke r1.<android.graphics.drawable.Drawable: android.graphics.Insets getOpticalInsets()>();

        r0.<android.graphics.drawable.DrawableContainer: android.graphics.Insets mInsets> = $r12;

        virtualinvoke r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        $r13 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i9 = $r13.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mEnterFadeDuration>;

        if $i9 <= 0 goto label11;

        $r18 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i13 = $r18.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mEnterFadeDuration>;

        $l14 = (long) $i13;

        $l15 = l1 + $l14;

        r0.<android.graphics.drawable.DrawableContainer: long mEnterAnimationEnd> = $l15;

     label04:
        $z0 = virtualinvoke r0.<android.graphics.drawable.DrawableContainer: boolean isVisible()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z0, 1);

        $r14 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z3 = $r14.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mDither>;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setDither(boolean)>($z3);

        $r16 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.ColorFilter mColorFilter>;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r16);

        $r15 = virtualinvoke r0.<android.graphics.drawable.DrawableContainer: int[] getState()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r15);

        $i12 = virtualinvoke r0.<android.graphics.drawable.DrawableContainer: int getLevel()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setLevel(int)>($i12);

        $r17 = virtualinvoke r0.<android.graphics.drawable.DrawableContainer: android.graphics.Rect getBounds()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>($r17);

        $i11 = virtualinvoke r0.<android.graphics.drawable.DrawableContainer: int getLayoutDirection()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setLayoutDirection(int)>($i11);

        $r19 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z5 = $r19.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mAutoMirrored>;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setAutoMirrored(boolean)>($z5);

     label05:
        $l4 = r0.<android.graphics.drawable.DrawableContainer: long mEnterAnimationEnd>;

        $b5 = $l4 cmp 0L;

        if $b5 != 0 goto label06;

        $l6 = r0.<android.graphics.drawable.DrawableContainer: long mExitAnimationEnd>;

        $b7 = $l6 cmp 0L;

        if $b7 == 0 goto label08;

     label06:
        $r5 = r0.<android.graphics.drawable.DrawableContainer: java.lang.Runnable mAnimationRunnable>;

        if $r5 != null goto label14;

        $r7 = new android.graphics.drawable.DrawableContainer$1;

        specialinvoke $r7.<android.graphics.drawable.DrawableContainer$1: void <init>(android.graphics.drawable.DrawableContainer)>(r0);

        r0.<android.graphics.drawable.DrawableContainer: java.lang.Runnable mAnimationRunnable> = $r7;

     label07:
        virtualinvoke r0.<android.graphics.drawable.DrawableContainer: void animate(boolean)>(1);

     label08:
        virtualinvoke r0.<android.graphics.drawable.DrawableContainer: void invalidateSelf()>();

        return 1;

     label09:
        r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable> = null;

        r0.<android.graphics.drawable.DrawableContainer: long mExitAnimationEnd> = 0L;

        goto label03;

     label10:
        $r3 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r3 == null goto label03;

        $r20 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        virtualinvoke $r20.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(0, 0);

        goto label03;

     label11:
        $i10 = r0.<android.graphics.drawable.DrawableContainer: int mAlpha>;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i10);

        goto label04;

     label12:
        $r10 = <android.graphics.Insets: android.graphics.Insets NONE>;

        r0.<android.graphics.drawable.DrawableContainer: android.graphics.Insets mInsets> = $r10;

        goto label05;

     label13:
        r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable> = null;

        $r4 = <android.graphics.Insets: android.graphics.Insets NONE>;

        r0.<android.graphics.drawable.DrawableContainer: android.graphics.Insets mInsets> = $r4;

        r0.<android.graphics.drawable.DrawableContainer: int mCurIndex> = -1;

        goto label05;

     label14:
        $r6 = r0.<android.graphics.drawable.DrawableContainer: java.lang.Runnable mAnimationRunnable>;

        virtualinvoke r0.<android.graphics.drawable.DrawableContainer: void unscheduleSelf(java.lang.Runnable)>($r6);

        goto label07;
    }

    public void setAlpha(int)
    {
        android.graphics.drawable.DrawableContainer r0;
        int i0, $i1;
        android.graphics.drawable.Drawable $r1, $r2, $r3;
        long $l2;
        byte $b3;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        i0 := @parameter0: int;

        $i1 = r0.<android.graphics.drawable.DrawableContainer: int mAlpha>;

        if $i1 == i0 goto label1;

        r0.<android.graphics.drawable.DrawableContainer: int mAlpha> = i0;

        $r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r1 == null goto label1;

        $l2 = r0.<android.graphics.drawable.DrawableContainer: long mEnterAnimationEnd>;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label2;

        $r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        $r3 = virtualinvoke $r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setAlpha(int)>(i0);

     label1:
        return;

     label2:
        virtualinvoke r0.<android.graphics.drawable.DrawableContainer: void animate(boolean)>(0);

        return;
    }

    public void setAutoMirrored(boolean)
    {
        android.graphics.drawable.DrawableContainer r0;
        boolean z0, $z1;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r1, $r5;
        android.graphics.drawable.Drawable $r2, $r3, $r4;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mAutoMirrored> = z0;

        $r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r2 == null goto label1;

        $r3 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        $r4 = virtualinvoke $r3.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        $r5 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z1 = $r5.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mAutoMirrored>;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: void setAutoMirrored(boolean)>($z1);

     label1:
        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.ColorFilter r1, $r2;
        android.graphics.drawable.Drawable $r3, $r4, $r5;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.ColorFilter mColorFilter>;

        if $r2 == r1 goto label1;

        r0.<android.graphics.drawable.DrawableContainer: android.graphics.ColorFilter mColorFilter> = r1;

        $r3 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r3 == null goto label1;

        $r4 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        $r5 = virtualinvoke $r4.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>(r1);

     label1:
        return;
    }

    protected void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState)
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.drawable.DrawableContainer$DrawableContainerState r1;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        r1 := @parameter0: android.graphics.drawable.DrawableContainer$DrawableContainerState;

        r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState> = r1;

        return;
    }

    public void setDither(boolean)
    {
        android.graphics.drawable.DrawableContainer r0;
        boolean z0, $z1, $z2;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r1, $r2, $r6;
        android.graphics.drawable.Drawable $r3, $r4, $r5;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z1 = $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mDither>;

        if $z1 == z0 goto label1;

        $r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r2.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mDither> = z0;

        $r3 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r3 == null goto label1;

        $r4 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        $r5 = virtualinvoke $r4.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        $r6 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z2 = $r6.<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mDither>;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void setDither(boolean)>($z2);

     label1:
        return;
    }

    public void setEnterFadeDuration(int)
    {
        android.graphics.drawable.DrawableContainer r0;
        int i0;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r1;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mEnterFadeDuration> = i0;

        return;
    }

    public void setExitFadeDuration(int)
    {
        android.graphics.drawable.DrawableContainer r0;
        int i0;
        android.graphics.drawable.DrawableContainer$DrawableContainerState $r1;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r1.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int mExitFadeDuration> = i0;

        return;
    }

    public boolean setVisible(boolean, boolean)
    {
        android.graphics.drawable.DrawableContainer r0;
        boolean z0, z1, z2;
        android.graphics.drawable.Drawable $r1, $r2, $r3, $r4;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 = specialinvoke r0.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(z0, z1);

        $r1 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        if $r1 == null goto label1;

        $r4 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(z0, z1);

     label1:
        $r2 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r2 == null goto label2;

        $r3 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(z0, z1);

     label2:
        return z2;
    }

    public void unscheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable)
    {
        android.graphics.drawable.DrawableContainer r0;
        android.graphics.drawable.Drawable r1, $r3;
        java.lang.Runnable r2;
        android.graphics.drawable.Drawable$Callback $r4, $r5;

        r0 := @this: android.graphics.drawable.DrawableContainer;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: java.lang.Runnable;

        $r3 = r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if r1 != $r3 goto label1;

        $r4 = virtualinvoke r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$Callback getCallback()>();

        if $r4 == null goto label1;

        $r5 = virtualinvoke r0.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$Callback getCallback()>();

        interfaceinvoke $r5.<android.graphics.drawable.Drawable$Callback: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>(r0, r2);

     label1:
        return;
    }

    public static void <clinit>()
    {
        <android.graphics.drawable.DrawableContainer: java.lang.String TAG> = "DrawableContainer";

        <android.graphics.drawable.DrawableContainer: boolean DEFAULT_DITHER> = 1;

        <android.graphics.drawable.DrawableContainer: boolean DEBUG> = 0;

        return;
    }
}
