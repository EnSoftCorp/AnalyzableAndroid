final class com.android.okhttp.HttpResponseCache$2 extends java.io.FilterInputStream
{
    final com.android.okhttp.internal.DiskLruCache$Snapshot val$snapshot;

    void <init>(java.io.InputStream, com.android.okhttp.internal.DiskLruCache$Snapshot)
    {
        com.android.okhttp.HttpResponseCache$2 r0;
        java.io.InputStream r1;
        com.android.okhttp.internal.DiskLruCache$Snapshot r2;

        r0 := @this: com.android.okhttp.HttpResponseCache$2;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: com.android.okhttp.internal.DiskLruCache$Snapshot;

        r0.<com.android.okhttp.HttpResponseCache$2: com.android.okhttp.internal.DiskLruCache$Snapshot val$snapshot> = r2;

        specialinvoke r0.<java.io.FilterInputStream: void <init>(java.io.InputStream)>(r1);

        return;
    }

    public void close() throws java.io.IOException
    {
        com.android.okhttp.HttpResponseCache$2 r0;
        com.android.okhttp.internal.DiskLruCache$Snapshot $r1;

        r0 := @this: com.android.okhttp.HttpResponseCache$2;

        $r1 = r0.<com.android.okhttp.HttpResponseCache$2: com.android.okhttp.internal.DiskLruCache$Snapshot val$snapshot>;

        virtualinvoke $r1.<com.android.okhttp.internal.DiskLruCache$Snapshot: void close()>();

        specialinvoke r0.<java.io.FilterInputStream: void close()>();

        return;
    }
}
