public class com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi extends javax.crypto.KeyAgreementSpi
{
    private static final java.util.Hashtable algorithms;
    private java.math.BigInteger g;
    private java.math.BigInteger p;
    private java.math.BigInteger result;
    private java.math.BigInteger x;

    static void <clinit>()
    {
        java.lang.Integer r0, r1, r2, r3;
        java.util.Hashtable $r4, $r5, $r7, $r9, $r11;

        $r4 = new java.util.Hashtable;

        specialinvoke $r4.<java.util.Hashtable: void <init>()>();

        <com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi: java.util.Hashtable algorithms> = $r4;

        r0 = staticinvoke <com.android.org.bouncycastle.util.Integers: java.lang.Integer valueOf(int)>(64);

        r1 = staticinvoke <com.android.org.bouncycastle.util.Integers: java.lang.Integer valueOf(int)>(192);

        r2 = staticinvoke <com.android.org.bouncycastle.util.Integers: java.lang.Integer valueOf(int)>(128);

        r3 = staticinvoke <com.android.org.bouncycastle.util.Integers: java.lang.Integer valueOf(int)>(256);

        $r5 = <com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi: java.util.Hashtable algorithms>;

        virtualinvoke $r5.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("DES", r0);

        $r7 = <com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi: java.util.Hashtable algorithms>;

        virtualinvoke $r7.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("DESEDE", r1);

        $r9 = <com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi: java.util.Hashtable algorithms>;

        virtualinvoke $r9.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("BLOWFISH", r2);

        $r11 = <com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi: java.util.Hashtable algorithms>;

        virtualinvoke $r11.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("AES", r3);

        return;
    }

    public void <init>()
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi r0;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi;

        specialinvoke r0.<javax.crypto.KeyAgreementSpi: void <init>()>();

        return;
    }

    private byte[] bigIntToBytes(java.math.BigInteger)
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi r0;
        java.math.BigInteger r1;
        byte[] r2, r3;
        byte $b0;
        int $i1, $i2, $i3;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi;

        r1 := @parameter0: java.math.BigInteger;

        r2 = virtualinvoke r1.<java.math.BigInteger: byte[] toByteArray()>();

        $b0 = r2[0];

        if $b0 != 0 goto label1;

        $i1 = lengthof r2;

        $i2 = -1 + $i1;

        r3 = newarray (byte)[$i2];

        $i3 = lengthof r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 1, r3, 0, $i3);

        return r3;

     label1:
        return r2;
    }

    protected java.security.Key engineDoPhase(java.security.Key, boolean) throws java.security.InvalidKeyException, java.lang.IllegalStateException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi r0;
        java.security.Key r1;
        boolean z0, $z1, $z2, $z3;
        javax.crypto.interfaces.DHPublicKey r2, $r11, $r18;
        java.math.BigInteger $r3, $r5, $r6, $r9, $r10, $r12, $r13, $r14, $r15, $r16, $r20, $r21, $r22, $r23;
        javax.crypto.spec.DHParameterSpec $r4, $r8, $r19;
        java.security.InvalidKeyException $r7, $r25;
        com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey $r17;
        java.lang.IllegalStateException $r24;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi;

        r1 := @parameter0: java.security.Key;

        z0 := @parameter1: boolean;

        $r3 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi: java.math.BigInteger x>;

        if $r3 != null goto label1;

        $r24 = new java.lang.IllegalStateException;

        specialinvoke $r24.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Diffie-Hellman not initialised.");

        throw $r24;

     label1:
        $z1 = r1 instanceof javax.crypto.interfaces.DHPublicKey;

        if $z1 != 0 goto label2;

        $r25 = new java.security.InvalidKeyException;

        specialinvoke $r25.<java.security.InvalidKeyException: void <init>(java.lang.String)>("DHKeyAgreement doPhase requires DHPublicKey");

        throw $r25;

     label2:
        r2 = (javax.crypto.interfaces.DHPublicKey) r1;

        $r4 = interfaceinvoke r2.<javax.crypto.interfaces.DHPublicKey: javax.crypto.spec.DHParameterSpec getParams()>();

        $r5 = virtualinvoke $r4.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getG()>();

        $r6 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi: java.math.BigInteger g>;

        $z2 = virtualinvoke $r5.<java.math.BigInteger: boolean equals(java.lang.Object)>($r6);

        if $z2 == 0 goto label3;

        $r8 = interfaceinvoke r2.<javax.crypto.interfaces.DHPublicKey: javax.crypto.spec.DHParameterSpec getParams()>();

        $r9 = virtualinvoke $r8.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getP()>();

        $r10 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi: java.math.BigInteger p>;

        $z3 = virtualinvoke $r9.<java.math.BigInteger: boolean equals(java.lang.Object)>($r10);

        if $z3 != 0 goto label4;

     label3:
        $r7 = new java.security.InvalidKeyException;

        specialinvoke $r7.<java.security.InvalidKeyException: void <init>(java.lang.String)>("DHPublicKey not for this KeyAgreement!");

        throw $r7;

     label4:
        if z0 == 0 goto label5;

        $r18 = (javax.crypto.interfaces.DHPublicKey) r1;

        $r21 = interfaceinvoke $r18.<javax.crypto.interfaces.DHPublicKey: java.math.BigInteger getY()>();

        $r23 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi: java.math.BigInteger x>;

        $r20 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi: java.math.BigInteger p>;

        $r22 = virtualinvoke $r21.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>($r23, $r20);

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi: java.math.BigInteger result> = $r22;

        return null;

     label5:
        $r11 = (javax.crypto.interfaces.DHPublicKey) r1;

        $r13 = interfaceinvoke $r11.<javax.crypto.interfaces.DHPublicKey: java.math.BigInteger getY()>();

        $r15 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi: java.math.BigInteger x>;

        $r12 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi: java.math.BigInteger p>;

        $r14 = virtualinvoke $r13.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>($r15, $r12);

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi: java.math.BigInteger result> = $r14;

        $r17 = new com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey;

        $r16 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi: java.math.BigInteger result>;

        $r19 = interfaceinvoke r2.<javax.crypto.interfaces.DHPublicKey: javax.crypto.spec.DHParameterSpec getParams()>();

        specialinvoke $r17.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey: void <init>(java.math.BigInteger,javax.crypto.spec.DHParameterSpec)>($r16, $r19);

        return $r17;
    }

    protected int engineGenerateSecret(byte[], int) throws java.lang.IllegalStateException, javax.crypto.ShortBufferException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi r0;
        byte[] r1, r2;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.math.BigInteger $r3, $r4;
        javax.crypto.ShortBufferException $r5;
        java.lang.IllegalStateException $r6;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        $r3 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi: java.math.BigInteger x>;

        if $r3 != null goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Diffie-Hellman not initialised.");

        throw $r6;

     label1:
        $r4 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi: java.math.BigInteger result>;

        r2 = specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi: byte[] bigIntToBytes(java.math.BigInteger)>($r4);

        $i1 = lengthof r1;

        $i3 = $i1 - i0;

        $i2 = lengthof r2;

        if $i3 >= $i2 goto label2;

        $r5 = new javax.crypto.ShortBufferException;

        specialinvoke $r5.<javax.crypto.ShortBufferException: void <init>(java.lang.String)>("DHKeyAgreement - buffer too short");

        throw $r5;

     label2:
        $i4 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r1, i0, $i4);

        $i5 = lengthof r2;

        return $i5;
    }

    protected javax.crypto.SecretKey engineGenerateSecret(java.lang.String)
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi r0;
        java.lang.String r1, r2;
        byte[] r3, r4;
        java.math.BigInteger $r5, $r6;
        java.util.Hashtable $r7, $r9;
        boolean $z0, $z1;
        javax.crypto.spec.SecretKeySpec $r8, $r12;
        java.lang.Object $r10;
        java.lang.Integer $r11;
        int $i0, $i1, $i2;
        java.lang.IllegalStateException $r13;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi;

        r1 := @parameter0: java.lang.String;

        $r5 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi: java.math.BigInteger x>;

        if $r5 != null goto label1;

        $r13 = new java.lang.IllegalStateException;

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Diffie-Hellman not initialised.");

        throw $r13;

     label1:
        r2 = staticinvoke <com.android.org.bouncycastle.util.Strings: java.lang.String toUpperCase(java.lang.String)>(r1);

        $r6 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi: java.math.BigInteger result>;

        r3 = specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi: byte[] bigIntToBytes(java.math.BigInteger)>($r6);

        $r7 = <com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi: java.util.Hashtable algorithms>;

        $z0 = virtualinvoke $r7.<java.util.Hashtable: boolean containsKey(java.lang.Object)>(r2);

        if $z0 == 0 goto label3;

        $r9 = <com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi: java.util.Hashtable algorithms>;

        $r10 = virtualinvoke $r9.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r2);

        $r11 = (java.lang.Integer) $r10;

        $i0 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();

        $i2 = $i0 / 8;

        r4 = newarray (byte)[$i2];

        $i1 = lengthof r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, r4, 0, $i1);

        $z1 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("DES");

        if $z1 == 0 goto label2;

        staticinvoke <com.android.org.bouncycastle.crypto.params.DESParameters: void setOddParity(byte[])>(r4);

     label2:
        $r12 = new javax.crypto.spec.SecretKeySpec;

        specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r4, r1);

        return $r12;

     label3:
        $r8 = new javax.crypto.spec.SecretKeySpec;

        specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, r1);

        return $r8;
    }

    protected byte[] engineGenerateSecret() throws java.lang.IllegalStateException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi r0;
        java.math.BigInteger $r1, $r2;
        byte[] $r3;
        java.lang.IllegalStateException $r4;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi;

        $r1 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi: java.math.BigInteger x>;

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Diffie-Hellman not initialised.");

        throw $r4;

     label1:
        $r2 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi: java.math.BigInteger result>;

        $r3 = specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi: byte[] bigIntToBytes(java.math.BigInteger)>($r2);

        return $r3;
    }

    protected void engineInit(java.security.Key, java.security.SecureRandom) throws java.security.InvalidKeyException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi r0;
        java.security.Key r1;
        java.security.SecureRandom r2;
        javax.crypto.interfaces.DHPrivateKey r3;
        java.math.BigInteger r4, $r6, $r8;
        boolean $z0;
        javax.crypto.spec.DHParameterSpec $r5, $r7;
        java.security.InvalidKeyException $r9;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi;

        r1 := @parameter0: java.security.Key;

        r2 := @parameter1: java.security.SecureRandom;

        $z0 = r1 instanceof javax.crypto.interfaces.DHPrivateKey;

        if $z0 != 0 goto label1;

        $r9 = new java.security.InvalidKeyException;

        specialinvoke $r9.<java.security.InvalidKeyException: void <init>(java.lang.String)>("DHKeyAgreement requires DHPrivateKey");

        throw $r9;

     label1:
        r3 = (javax.crypto.interfaces.DHPrivateKey) r1;

        $r5 = interfaceinvoke r3.<javax.crypto.interfaces.DHPrivateKey: javax.crypto.spec.DHParameterSpec getParams()>();

        $r6 = virtualinvoke $r5.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getP()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi: java.math.BigInteger p> = $r6;

        $r7 = interfaceinvoke r3.<javax.crypto.interfaces.DHPrivateKey: javax.crypto.spec.DHParameterSpec getParams()>();

        $r8 = virtualinvoke $r7.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getG()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi: java.math.BigInteger g> = $r8;

        r4 = interfaceinvoke r3.<javax.crypto.interfaces.DHPrivateKey: java.math.BigInteger getX()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi: java.math.BigInteger result> = r4;

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi: java.math.BigInteger x> = r4;

        return;
    }

    protected void engineInit(java.security.Key, java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi r0;
        java.security.Key r1;
        java.security.spec.AlgorithmParameterSpec r2;
        java.security.SecureRandom r3;
        javax.crypto.interfaces.DHPrivateKey r4;
        java.math.BigInteger r5, $r8, $r10, $r11, $r12;
        javax.crypto.spec.DHParameterSpec r6, $r7, $r9;
        boolean $z0, $z1;
        java.security.InvalidKeyException $r13;
        java.security.InvalidAlgorithmParameterException $r14;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi;

        r1 := @parameter0: java.security.Key;

        r2 := @parameter1: java.security.spec.AlgorithmParameterSpec;

        r3 := @parameter2: java.security.SecureRandom;

        $z0 = r1 instanceof javax.crypto.interfaces.DHPrivateKey;

        if $z0 != 0 goto label1;

        $r13 = new java.security.InvalidKeyException;

        specialinvoke $r13.<java.security.InvalidKeyException: void <init>(java.lang.String)>("DHKeyAgreement requires DHPrivateKey for initialisation");

        throw $r13;

     label1:
        r4 = (javax.crypto.interfaces.DHPrivateKey) r1;

        if r2 == null goto label4;

        $z1 = r2 instanceof javax.crypto.spec.DHParameterSpec;

        if $z1 != 0 goto label2;

        $r14 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r14.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("DHKeyAgreement only accepts DHParameterSpec");

        throw $r14;

     label2:
        r6 = (javax.crypto.spec.DHParameterSpec) r2;

        $r11 = virtualinvoke r6.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getP()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi: java.math.BigInteger p> = $r11;

        $r12 = virtualinvoke r6.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getG()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi: java.math.BigInteger g> = $r12;

     label3:
        r5 = interfaceinvoke r4.<javax.crypto.interfaces.DHPrivateKey: java.math.BigInteger getX()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi: java.math.BigInteger result> = r5;

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi: java.math.BigInteger x> = r5;

        return;

     label4:
        $r7 = interfaceinvoke r4.<javax.crypto.interfaces.DHPrivateKey: javax.crypto.spec.DHParameterSpec getParams()>();

        $r8 = virtualinvoke $r7.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getP()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi: java.math.BigInteger p> = $r8;

        $r9 = interfaceinvoke r4.<javax.crypto.interfaces.DHPrivateKey: javax.crypto.spec.DHParameterSpec getParams()>();

        $r10 = virtualinvoke $r9.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getG()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi: java.math.BigInteger g> = $r10;

        goto label3;
    }
}
