class android.view.GLES20RecordingCanvas extends android.view.GLES20Canvas
{
    private static final int POOL_LIMIT;
    private static final android.util.Pools$SynchronizedPool sPool;
    private android.view.GLES20DisplayList mDisplayList;

    static void <clinit>()
    {
        android.util.Pools$SynchronizedPool $r0;

        <android.view.GLES20RecordingCanvas: int POOL_LIMIT> = 25;

        $r0 = new android.util.Pools$SynchronizedPool;

        specialinvoke $r0.<android.util.Pools$SynchronizedPool: void <init>(int)>(25);

        <android.view.GLES20RecordingCanvas: android.util.Pools$SynchronizedPool sPool> = $r0;

        return;
    }

    private void <init>()
    {
        android.view.GLES20RecordingCanvas r0;

        r0 := @this: android.view.GLES20RecordingCanvas;

        specialinvoke r0.<android.view.GLES20Canvas: void <init>(boolean,boolean)>(1, 1);

        return;
    }

    static android.view.GLES20RecordingCanvas obtain(android.view.GLES20DisplayList)
    {
        android.view.GLES20DisplayList r0;
        android.view.GLES20RecordingCanvas r1, $r4;
        android.util.Pools$SynchronizedPool $r2;
        java.lang.Object $r3;

        r0 := @parameter0: android.view.GLES20DisplayList;

        $r2 = <android.view.GLES20RecordingCanvas: android.util.Pools$SynchronizedPool sPool>;

        $r3 = virtualinvoke $r2.<android.util.Pools$SynchronizedPool: java.lang.Object acquire()>();

        r1 = (android.view.GLES20RecordingCanvas) $r3;

        if r1 != null goto label1;

        $r4 = new android.view.GLES20RecordingCanvas;

        specialinvoke $r4.<android.view.GLES20RecordingCanvas: void <init>()>();

        r1 = $r4;

     label1:
        r1.<android.view.GLES20RecordingCanvas: android.view.GLES20DisplayList mDisplayList> = r0;

        return r1;
    }

    public int drawDisplayList(android.view.DisplayList, android.graphics.Rect, int)
    {
        android.view.GLES20RecordingCanvas r0;
        android.view.DisplayList r1;
        android.graphics.Rect r2;
        int i0, i1;
        android.view.GLES20DisplayList $r3;
        java.util.ArrayList $r4;

        r0 := @this: android.view.GLES20RecordingCanvas;

        r1 := @parameter0: android.view.DisplayList;

        r2 := @parameter1: android.graphics.Rect;

        i0 := @parameter2: int;

        i1 = specialinvoke r0.<android.view.GLES20Canvas: int drawDisplayList(android.view.DisplayList,android.graphics.Rect,int)>(r1, r2, i0);

        $r3 = r0.<android.view.GLES20RecordingCanvas: android.view.GLES20DisplayList mDisplayList>;

        $r4 = virtualinvoke $r3.<android.view.GLES20DisplayList: java.util.ArrayList getChildDisplayLists()>();

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return i1;
    }

    int end(int)
    {
        android.view.GLES20RecordingCanvas r0;
        int i0, $i1;

        r0 := @this: android.view.GLES20RecordingCanvas;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<android.view.GLES20RecordingCanvas: int getDisplayList(int)>(i0);

        return $i1;
    }

    void recycle()
    {
        android.view.GLES20RecordingCanvas r0;
        android.util.Pools$SynchronizedPool $r1;

        r0 := @this: android.view.GLES20RecordingCanvas;

        r0.<android.view.GLES20RecordingCanvas: android.view.GLES20DisplayList mDisplayList> = null;

        virtualinvoke r0.<android.view.GLES20RecordingCanvas: void resetDisplayListRenderer()>();

        $r1 = <android.view.GLES20RecordingCanvas: android.util.Pools$SynchronizedPool sPool>;

        virtualinvoke $r1.<android.util.Pools$SynchronizedPool: boolean release(java.lang.Object)>(r0);

        return;
    }

    void start()
    {
        android.view.GLES20RecordingCanvas r0;
        android.view.GLES20DisplayList $r1;

        r0 := @this: android.view.GLES20RecordingCanvas;

        $r1 = r0.<android.view.GLES20RecordingCanvas: android.view.GLES20DisplayList mDisplayList>;

        virtualinvoke $r1.<android.view.GLES20DisplayList: void clearReferences()>();

        return;
    }
}
