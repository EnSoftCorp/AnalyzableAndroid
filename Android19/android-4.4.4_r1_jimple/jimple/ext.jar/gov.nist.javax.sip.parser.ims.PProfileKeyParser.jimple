public class gov.nist.javax.sip.parser.ims.PProfileKeyParser extends gov.nist.javax.sip.parser.AddressParametersParser implements gov.nist.javax.sip.parser.TokenTypes
{

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.ims.PProfileKeyParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.ims.PProfileKeyParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.AddressParametersParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.ims.PProfileKeyParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.ims.PProfileKeyParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.AddressParametersParser: void <init>(java.lang.String)>(r1);

        return;
    }

    public gov.nist.javax.sip.header.SIPHeader parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.ims.PProfileKeyParser r0;
        java.lang.Throwable r1, $r10;
        gov.nist.javax.sip.header.ims.PProfileKey r2, $r9;
        boolean $z0, $z1, $z2;
        gov.nist.core.LexerCore $r3, $r5, $r6, $r8;

        r0 := @this: gov.nist.javax.sip.parser.ims.PProfileKeyParser;

        $z0 = <gov.nist.javax.sip.parser.ims.PProfileKeyParser: boolean debug>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ims.PProfileKeyParser: void dbg_enter(java.lang.String)>("PProfileKey.parse");

     label1:
        $r3 = r0.<gov.nist.javax.sip.parser.ims.PProfileKeyParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r3.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(2142);

        $r5 = r0.<gov.nist.javax.sip.parser.ims.PProfileKeyParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r5.<gov.nist.core.LexerCore: void SPorHT()>();

        $r6 = r0.<gov.nist.javax.sip.parser.ims.PProfileKeyParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r6.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(58);

        $r8 = r0.<gov.nist.javax.sip.parser.ims.PProfileKeyParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r8.<gov.nist.core.LexerCore: void SPorHT()>();

        $r9 = new gov.nist.javax.sip.header.ims.PProfileKey;

        specialinvoke $r9.<gov.nist.javax.sip.header.ims.PProfileKey: void <init>()>();

        r2 = $r9;

        specialinvoke r0.<gov.nist.javax.sip.parser.AddressParametersParser: void parse(gov.nist.javax.sip.header.AddressParametersHeader)>(r2);

     label2:
        $z1 = <gov.nist.javax.sip.parser.ims.PProfileKeyParser: boolean debug>;

        if $z1 == 0 goto label3;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ims.PProfileKeyParser: void dbg_leave(java.lang.String)>("PProfileKey.parse");

     label3:
        return r2;

     label4:
        $r10 := @caughtexception;

        r1 = $r10;

        $z2 = <gov.nist.javax.sip.parser.ims.PProfileKeyParser: boolean debug>;

        if $z2 == 0 goto label5;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ims.PProfileKeyParser: void dbg_leave(java.lang.String)>("PProfileKey.parse");

     label5:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label4;
    }
}
