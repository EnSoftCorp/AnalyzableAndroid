public class org.apache.http.impl.DefaultHttpResponseFactory extends java.lang.Object implements org.apache.http.HttpResponseFactory
{
    protected final org.apache.http.ReasonPhraseCatalog reasonCatalog;

    public void <init>()
    {
        org.apache.http.impl.DefaultHttpResponseFactory r0;
        org.apache.http.impl.EnglishReasonPhraseCatalog $r1;

        r0 := @this: org.apache.http.impl.DefaultHttpResponseFactory;

        $r1 = <org.apache.http.impl.EnglishReasonPhraseCatalog: org.apache.http.impl.EnglishReasonPhraseCatalog INSTANCE>;

        specialinvoke r0.<org.apache.http.impl.DefaultHttpResponseFactory: void <init>(org.apache.http.ReasonPhraseCatalog)>($r1);

        return;
    }

    public void <init>(org.apache.http.ReasonPhraseCatalog)
    {
        org.apache.http.impl.DefaultHttpResponseFactory r0;
        org.apache.http.ReasonPhraseCatalog r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.http.impl.DefaultHttpResponseFactory;

        r1 := @parameter0: org.apache.http.ReasonPhraseCatalog;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Reason phrase catalog must not be null.");

        throw $r2;

     label1:
        r0.<org.apache.http.impl.DefaultHttpResponseFactory: org.apache.http.ReasonPhraseCatalog reasonCatalog> = r1;

        return;
    }

    protected java.util.Locale determineLocale(org.apache.http.protocol.HttpContext)
    {
        org.apache.http.impl.DefaultHttpResponseFactory r0;
        org.apache.http.protocol.HttpContext r1;
        java.util.Locale $r2;

        r0 := @this: org.apache.http.impl.DefaultHttpResponseFactory;

        r1 := @parameter0: org.apache.http.protocol.HttpContext;

        $r2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        return $r2;
    }

    public org.apache.http.HttpResponse newHttpResponse(org.apache.http.ProtocolVersion, int, org.apache.http.protocol.HttpContext)
    {
        org.apache.http.impl.DefaultHttpResponseFactory r0;
        org.apache.http.ProtocolVersion r1;
        int i0;
        org.apache.http.protocol.HttpContext r2;
        java.util.Locale r3;
        org.apache.http.message.BasicHttpResponse $r4;
        org.apache.http.message.BasicStatusLine $r5;
        org.apache.http.ReasonPhraseCatalog $r6, $r8;
        java.lang.String $r7;
        java.lang.IllegalArgumentException $r9;

        r0 := @this: org.apache.http.impl.DefaultHttpResponseFactory;

        r1 := @parameter0: org.apache.http.ProtocolVersion;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.http.protocol.HttpContext;

        if r1 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP version may not be null");

        throw $r9;

     label1:
        r3 = virtualinvoke r0.<org.apache.http.impl.DefaultHttpResponseFactory: java.util.Locale determineLocale(org.apache.http.protocol.HttpContext)>(r2);

        $r4 = new org.apache.http.message.BasicHttpResponse;

        $r5 = new org.apache.http.message.BasicStatusLine;

        $r6 = r0.<org.apache.http.impl.DefaultHttpResponseFactory: org.apache.http.ReasonPhraseCatalog reasonCatalog>;

        $r7 = interfaceinvoke $r6.<org.apache.http.ReasonPhraseCatalog: java.lang.String getReason(int,java.util.Locale)>(i0, r3);

        specialinvoke $r5.<org.apache.http.message.BasicStatusLine: void <init>(org.apache.http.ProtocolVersion,int,java.lang.String)>(r1, i0, $r7);

        $r8 = r0.<org.apache.http.impl.DefaultHttpResponseFactory: org.apache.http.ReasonPhraseCatalog reasonCatalog>;

        specialinvoke $r4.<org.apache.http.message.BasicHttpResponse: void <init>(org.apache.http.StatusLine,org.apache.http.ReasonPhraseCatalog,java.util.Locale)>($r5, $r8, r3);

        return $r4;
    }

    public org.apache.http.HttpResponse newHttpResponse(org.apache.http.StatusLine, org.apache.http.protocol.HttpContext)
    {
        org.apache.http.impl.DefaultHttpResponseFactory r0;
        org.apache.http.StatusLine r1;
        org.apache.http.protocol.HttpContext r2;
        java.util.Locale r3;
        org.apache.http.message.BasicHttpResponse $r4;
        org.apache.http.ReasonPhraseCatalog $r5;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: org.apache.http.impl.DefaultHttpResponseFactory;

        r1 := @parameter0: org.apache.http.StatusLine;

        r2 := @parameter1: org.apache.http.protocol.HttpContext;

        if r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Status line may not be null");

        throw $r6;

     label1:
        r3 = virtualinvoke r0.<org.apache.http.impl.DefaultHttpResponseFactory: java.util.Locale determineLocale(org.apache.http.protocol.HttpContext)>(r2);

        $r4 = new org.apache.http.message.BasicHttpResponse;

        $r5 = r0.<org.apache.http.impl.DefaultHttpResponseFactory: org.apache.http.ReasonPhraseCatalog reasonCatalog>;

        specialinvoke $r4.<org.apache.http.message.BasicHttpResponse: void <init>(org.apache.http.StatusLine,org.apache.http.ReasonPhraseCatalog,java.util.Locale)>(r1, $r5, r3);

        return $r4;
    }
}
