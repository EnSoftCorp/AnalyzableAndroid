public class org.apache.http.impl.NoConnectionReuseStrategy extends java.lang.Object implements org.apache.http.ConnectionReuseStrategy
{

    public void <init>()
    {
        org.apache.http.impl.NoConnectionReuseStrategy r0;

        r0 := @this: org.apache.http.impl.NoConnectionReuseStrategy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean keepAlive(org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)
    {
        org.apache.http.impl.NoConnectionReuseStrategy r0;
        org.apache.http.HttpResponse r1;
        org.apache.http.protocol.HttpContext r2;
        java.lang.IllegalArgumentException $r3, $r4;

        r0 := @this: org.apache.http.impl.NoConnectionReuseStrategy;

        r1 := @parameter0: org.apache.http.HttpResponse;

        r2 := @parameter1: org.apache.http.protocol.HttpContext;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP response may not be null");

        throw $r4;

     label1:
        if r2 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP context may not be null");

        throw $r3;

     label2:
        return 0;
    }
}
