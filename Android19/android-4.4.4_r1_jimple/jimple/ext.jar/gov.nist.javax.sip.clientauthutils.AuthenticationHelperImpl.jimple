public class gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl extends java.lang.Object implements gov.nist.javax.sip.clientauthutils.AuthenticationHelper
{
    private java.lang.Object accountManager;
    private gov.nist.javax.sip.clientauthutils.CredentialsCache cachedCredentials;
    private javax.sip.header.HeaderFactory headerFactory;
    private gov.nist.javax.sip.SipStackImpl sipStack;
    java.util.Timer timer;

    public void <init>(gov.nist.javax.sip.SipStackImpl, gov.nist.javax.sip.clientauthutils.AccountManager, javax.sip.header.HeaderFactory)
    {
        gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl r0;
        gov.nist.javax.sip.SipStackImpl r1;
        gov.nist.javax.sip.clientauthutils.AccountManager r2;
        javax.sip.header.HeaderFactory r3;
        gov.nist.javax.sip.clientauthutils.CredentialsCache $r4;
        java.util.Timer $r5;

        r0 := @this: gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl;

        r1 := @parameter0: gov.nist.javax.sip.SipStackImpl;

        r2 := @parameter1: gov.nist.javax.sip.clientauthutils.AccountManager;

        r3 := @parameter2: javax.sip.header.HeaderFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl: java.lang.Object accountManager> = null;

        r0.<gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl: java.lang.Object accountManager> = r2;

        r0.<gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl: javax.sip.header.HeaderFactory headerFactory> = r3;

        r0.<gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl: gov.nist.javax.sip.SipStackImpl sipStack> = r1;

        $r4 = new gov.nist.javax.sip.clientauthutils.CredentialsCache;

        $r5 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Timer getTimer()>();

        specialinvoke $r4.<gov.nist.javax.sip.clientauthutils.CredentialsCache: void <init>(java.util.Timer)>($r5);

        r0.<gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl: gov.nist.javax.sip.clientauthutils.CredentialsCache cachedCredentials> = $r4;

        return;
    }

    public void <init>(gov.nist.javax.sip.SipStackImpl, gov.nist.javax.sip.clientauthutils.SecureAccountManager, javax.sip.header.HeaderFactory)
    {
        gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl r0;
        gov.nist.javax.sip.SipStackImpl r1;
        gov.nist.javax.sip.clientauthutils.SecureAccountManager r2;
        javax.sip.header.HeaderFactory r3;
        gov.nist.javax.sip.clientauthutils.CredentialsCache $r4;
        java.util.Timer $r5;

        r0 := @this: gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl;

        r1 := @parameter0: gov.nist.javax.sip.SipStackImpl;

        r2 := @parameter1: gov.nist.javax.sip.clientauthutils.SecureAccountManager;

        r3 := @parameter2: javax.sip.header.HeaderFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl: java.lang.Object accountManager> = null;

        r0.<gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl: java.lang.Object accountManager> = r2;

        r0.<gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl: javax.sip.header.HeaderFactory headerFactory> = r3;

        r0.<gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl: gov.nist.javax.sip.SipStackImpl sipStack> = r1;

        $r4 = new gov.nist.javax.sip.clientauthutils.CredentialsCache;

        $r5 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Timer getTimer()>();

        specialinvoke $r4.<gov.nist.javax.sip.clientauthutils.CredentialsCache: void <init>(java.util.Timer)>($r5);

        r0.<gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl: gov.nist.javax.sip.clientauthutils.CredentialsCache cachedCredentials> = $r4;

        return;
    }

    private javax.sip.header.AuthorizationHeader getAuthorization(java.lang.String, java.lang.String, java.lang.String, javax.sip.header.WWWAuthenticateHeader, gov.nist.javax.sip.clientauthutils.UserCredentialHash)
    {
        gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl r0;
        java.lang.String r1, r2, r3, r6, r7, $r11, $r12, $r13, $r14, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r28;
        javax.sip.header.WWWAuthenticateHeader r4;
        gov.nist.javax.sip.clientauthutils.UserCredentialHash r5;
        javax.sip.header.AuthorizationHeader r9, r10;
        gov.nist.javax.sip.SipStackImpl $r15;
        gov.nist.core.StackLogger $r16;
        javax.sip.header.HeaderFactory $r17, $r27;
        boolean $z0;
        int $i0;
        java.text.ParseException $r26;
        java.lang.RuntimeException $r29;

        r0 := @this: gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: javax.sip.header.WWWAuthenticateHeader;

        r5 := @parameter4: gov.nist.javax.sip.clientauthutils.UserCredentialHash;

        $r11 = interfaceinvoke r4.<javax.sip.header.WWWAuthenticateHeader: java.lang.String getQop()>();

        if $r11 == null goto label12;

        r6 = "auth";

     label01:
        $r12 = interfaceinvoke r4.<javax.sip.header.WWWAuthenticateHeader: java.lang.String getAlgorithm()>();

        $r13 = interfaceinvoke r5.<gov.nist.javax.sip.clientauthutils.UserCredentialHash: java.lang.String getHashUserDomainPassword()>();

        $r14 = interfaceinvoke r4.<javax.sip.header.WWWAuthenticateHeader: java.lang.String getNonce()>();

        $r15 = r0.<gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r16 = virtualinvoke $r15.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        r7 = staticinvoke <gov.nist.javax.sip.clientauthutils.MessageDigestAlgorithm: java.lang.String calculateResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,gov.nist.core.StackLogger)>($r12, $r13, $r14, "00000001", "xyz", r1, r2, r3, r6, $r16);

     label02:
        $z0 = r4 instanceof javax.sip.header.ProxyAuthenticateHeader;

        if $z0 == 0 goto label09;

        $r27 = r0.<gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl: javax.sip.header.HeaderFactory headerFactory>;

        $r28 = interfaceinvoke r4.<javax.sip.header.WWWAuthenticateHeader: java.lang.String getScheme()>();

        r10 = interfaceinvoke $r27.<javax.sip.header.HeaderFactory: javax.sip.header.ProxyAuthorizationHeader createProxyAuthorizationHeader(java.lang.String)>($r28);

     label03:
        $r20 = interfaceinvoke r5.<gov.nist.javax.sip.clientauthutils.UserCredentialHash: java.lang.String getUserName()>();

        interfaceinvoke r10.<javax.sip.header.AuthorizationHeader: void setUsername(java.lang.String)>($r20);

        $r19 = interfaceinvoke r4.<javax.sip.header.WWWAuthenticateHeader: java.lang.String getRealm()>();

        interfaceinvoke r10.<javax.sip.header.AuthorizationHeader: void setRealm(java.lang.String)>($r19);

        $r22 = interfaceinvoke r4.<javax.sip.header.WWWAuthenticateHeader: java.lang.String getNonce()>();

        interfaceinvoke r10.<javax.sip.header.AuthorizationHeader: void setNonce(java.lang.String)>($r22);

        interfaceinvoke r10.<javax.sip.header.AuthorizationHeader: void setParameter(java.lang.String,java.lang.String)>("uri", r2);

        interfaceinvoke r10.<javax.sip.header.AuthorizationHeader: void setResponse(java.lang.String)>(r7);

        $r21 = interfaceinvoke r4.<javax.sip.header.WWWAuthenticateHeader: java.lang.String getAlgorithm()>();

        if $r21 == null goto label04;

        $r24 = interfaceinvoke r4.<javax.sip.header.WWWAuthenticateHeader: java.lang.String getAlgorithm()>();

        interfaceinvoke r10.<javax.sip.header.AuthorizationHeader: void setAlgorithm(java.lang.String)>($r24);

     label04:
        $r23 = interfaceinvoke r4.<javax.sip.header.WWWAuthenticateHeader: java.lang.String getOpaque()>();

        if $r23 == null goto label05;

        $r25 = interfaceinvoke r4.<javax.sip.header.WWWAuthenticateHeader: java.lang.String getOpaque()>();

        interfaceinvoke r10.<javax.sip.header.AuthorizationHeader: void setOpaque(java.lang.String)>($r25);

     label05:
        if r6 == null goto label07;

     label06:
        interfaceinvoke r10.<javax.sip.header.AuthorizationHeader: void setQop(java.lang.String)>(r6);

        interfaceinvoke r10.<javax.sip.header.AuthorizationHeader: void setCNonce(java.lang.String)>("xyz");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>("00000001");

        interfaceinvoke r10.<javax.sip.header.AuthorizationHeader: void setNonceCount(int)>($i0);

     label07:
        interfaceinvoke r10.<javax.sip.header.AuthorizationHeader: void setResponse(java.lang.String)>(r7);

     label08:
        return r10;

     label09:
        $r17 = r0.<gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl: javax.sip.header.HeaderFactory headerFactory>;

        $r18 = interfaceinvoke r4.<javax.sip.header.WWWAuthenticateHeader: java.lang.String getScheme()>();

        r9 = interfaceinvoke $r17.<javax.sip.header.HeaderFactory: javax.sip.header.AuthorizationHeader createAuthorizationHeader(java.lang.String)>($r18);

     label10:
        r10 = r9;

        goto label03;

     label11:
        $r26 := @caughtexception;

        $r29 = new java.lang.RuntimeException;

        specialinvoke $r29.<java.lang.RuntimeException: void <init>(java.lang.String)>("Failed to create an authorization header!");

        throw $r29;

     label12:
        r6 = null;

        goto label01;

        catch java.text.ParseException from label02 to label03 with label11;
        catch java.text.ParseException from label03 to label04 with label11;
        catch java.text.ParseException from label04 to label05 with label11;
        catch java.text.ParseException from label06 to label07 with label11;
        catch java.text.ParseException from label07 to label08 with label11;
        catch java.text.ParseException from label09 to label10 with label11;
    }

    private javax.sip.header.AuthorizationHeader getAuthorization(java.lang.String, java.lang.String, java.lang.String, javax.sip.header.WWWAuthenticateHeader, gov.nist.javax.sip.clientauthutils.UserCredentials)
    {
        gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl r0;
        java.lang.String r1, r2, r3, r6, r7, $r11, $r12, $r13, $r14, $r15, $r17, $r20, $r21, $r22, $r23, $r24, $r25, $r27, $r28, $r29;
        javax.sip.header.WWWAuthenticateHeader r4;
        gov.nist.javax.sip.clientauthutils.UserCredentials r5;
        javax.sip.header.AuthorizationHeader r9, r10;
        gov.nist.javax.sip.SipStackImpl $r16;
        gov.nist.core.StackLogger $r18;
        javax.sip.header.HeaderFactory $r19, $r26;
        boolean $z0;
        int $i0;
        java.lang.RuntimeException $r30;
        java.text.ParseException $r31;

        r0 := @this: gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: javax.sip.header.WWWAuthenticateHeader;

        r5 := @parameter4: gov.nist.javax.sip.clientauthutils.UserCredentials;

        $r11 = interfaceinvoke r4.<javax.sip.header.WWWAuthenticateHeader: java.lang.String getQop()>();

        if $r11 == null goto label12;

        r6 = "auth";

     label01:
        $r12 = interfaceinvoke r4.<javax.sip.header.WWWAuthenticateHeader: java.lang.String getAlgorithm()>();

        $r13 = interfaceinvoke r5.<gov.nist.javax.sip.clientauthutils.UserCredentials: java.lang.String getUserName()>();

        $r14 = interfaceinvoke r4.<javax.sip.header.WWWAuthenticateHeader: java.lang.String getRealm()>();

        $r15 = interfaceinvoke r5.<gov.nist.javax.sip.clientauthutils.UserCredentials: java.lang.String getPassword()>();

        $r17 = interfaceinvoke r4.<javax.sip.header.WWWAuthenticateHeader: java.lang.String getNonce()>();

        $r16 = r0.<gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r18 = virtualinvoke $r16.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        r7 = staticinvoke <gov.nist.javax.sip.clientauthutils.MessageDigestAlgorithm: java.lang.String calculateResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,gov.nist.core.StackLogger)>($r12, $r13, $r14, $r15, $r17, "00000001", "xyz", r1, r2, r3, r6, $r18);

     label02:
        $z0 = r4 instanceof javax.sip.header.ProxyAuthenticateHeader;

        if $z0 == 0 goto label09;

        $r26 = r0.<gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl: javax.sip.header.HeaderFactory headerFactory>;

        $r27 = interfaceinvoke r4.<javax.sip.header.WWWAuthenticateHeader: java.lang.String getScheme()>();

        r10 = interfaceinvoke $r26.<javax.sip.header.HeaderFactory: javax.sip.header.ProxyAuthorizationHeader createProxyAuthorizationHeader(java.lang.String)>($r27);

     label03:
        $r22 = interfaceinvoke r5.<gov.nist.javax.sip.clientauthutils.UserCredentials: java.lang.String getUserName()>();

        interfaceinvoke r10.<javax.sip.header.AuthorizationHeader: void setUsername(java.lang.String)>($r22);

        $r21 = interfaceinvoke r4.<javax.sip.header.WWWAuthenticateHeader: java.lang.String getRealm()>();

        interfaceinvoke r10.<javax.sip.header.AuthorizationHeader: void setRealm(java.lang.String)>($r21);

        $r24 = interfaceinvoke r4.<javax.sip.header.WWWAuthenticateHeader: java.lang.String getNonce()>();

        interfaceinvoke r10.<javax.sip.header.AuthorizationHeader: void setNonce(java.lang.String)>($r24);

        interfaceinvoke r10.<javax.sip.header.AuthorizationHeader: void setParameter(java.lang.String,java.lang.String)>("uri", r2);

        interfaceinvoke r10.<javax.sip.header.AuthorizationHeader: void setResponse(java.lang.String)>(r7);

        $r23 = interfaceinvoke r4.<javax.sip.header.WWWAuthenticateHeader: java.lang.String getAlgorithm()>();

        if $r23 == null goto label04;

        $r29 = interfaceinvoke r4.<javax.sip.header.WWWAuthenticateHeader: java.lang.String getAlgorithm()>();

        interfaceinvoke r10.<javax.sip.header.AuthorizationHeader: void setAlgorithm(java.lang.String)>($r29);

     label04:
        $r25 = interfaceinvoke r4.<javax.sip.header.WWWAuthenticateHeader: java.lang.String getOpaque()>();

        if $r25 == null goto label05;

        $r28 = interfaceinvoke r4.<javax.sip.header.WWWAuthenticateHeader: java.lang.String getOpaque()>();

        interfaceinvoke r10.<javax.sip.header.AuthorizationHeader: void setOpaque(java.lang.String)>($r28);

     label05:
        if r6 == null goto label07;

     label06:
        interfaceinvoke r10.<javax.sip.header.AuthorizationHeader: void setQop(java.lang.String)>(r6);

        interfaceinvoke r10.<javax.sip.header.AuthorizationHeader: void setCNonce(java.lang.String)>("xyz");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>("00000001");

        interfaceinvoke r10.<javax.sip.header.AuthorizationHeader: void setNonceCount(int)>($i0);

     label07:
        interfaceinvoke r10.<javax.sip.header.AuthorizationHeader: void setResponse(java.lang.String)>(r7);

     label08:
        return r10;

     label09:
        $r19 = r0.<gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl: javax.sip.header.HeaderFactory headerFactory>;

        $r20 = interfaceinvoke r4.<javax.sip.header.WWWAuthenticateHeader: java.lang.String getScheme()>();

        r9 = interfaceinvoke $r19.<javax.sip.header.HeaderFactory: javax.sip.header.AuthorizationHeader createAuthorizationHeader(java.lang.String)>($r20);

     label10:
        r10 = r9;

        goto label03;

     label11:
        $r31 := @caughtexception;

        $r30 = new java.lang.RuntimeException;

        specialinvoke $r30.<java.lang.RuntimeException: void <init>(java.lang.String)>("Failed to create an authorization header!");

        throw $r30;

     label12:
        r6 = null;

        goto label01;

        catch java.text.ParseException from label02 to label03 with label11;
        catch java.text.ParseException from label03 to label04 with label11;
        catch java.text.ParseException from label04 to label05 with label11;
        catch java.text.ParseException from label06 to label07 with label11;
        catch java.text.ParseException from label07 to label08 with label11;
        catch java.text.ParseException from label09 to label10 with label11;
    }

    private void removeBranchID(javax.sip.message.Request)
    {
        gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl r0;
        javax.sip.message.Request r1;
        javax.sip.header.Header $r2;
        javax.sip.header.ViaHeader $r3;

        r0 := @this: gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl;

        r1 := @parameter0: javax.sip.message.Request;

        $r2 = interfaceinvoke r1.<javax.sip.message.Request: javax.sip.header.Header getHeader(java.lang.String)>("Via");

        $r3 = (javax.sip.header.ViaHeader) $r2;

        interfaceinvoke $r3.<javax.sip.header.ViaHeader: void removeParameter(java.lang.String)>("branch");

        return;
    }

    public javax.sip.ClientTransaction handleChallenge(javax.sip.message.Response, javax.sip.ClientTransaction, javax.sip.SipProvider, int) throws javax.sip.SipException, java.lang.NullPointerException
    {
        gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl r0;
        javax.sip.message.Response r1;
        javax.sip.ClientTransaction r2, r11;
        javax.sip.SipProvider r3;
        int i0, $i1, $i2, $i5, $i6;
        java.lang.Exception r4, $r105;
        javax.sip.SipException r5, $r63, $r91, $r93, $r102;
        gov.nist.javax.sip.message.SIPRequest r6;
        javax.sip.message.Request r7, $r30, $r41;
        java.util.ListIterator r8, r26, r28;
        javax.sip.header.CSeqHeader r9;
        javax.sip.header.WWWAuthenticateHeader r12;
        java.lang.String r13, r14, r16, r17, r19, r22, r23, r25, r29, $r34, $r50, $r58, $r60, $r66, $r68, $r71, $r73, $r76, $r81, $r103, $r106;
        gov.nist.javax.sip.clientauthutils.UserCredentials r15;
        javax.sip.header.AuthorizationHeader r18;
        javax.sip.address.URI r20, $r40, $r51, $r72;
        gov.nist.javax.sip.clientauthutils.UserCredentialHash r21;
        javax.sip.address.Hop r24, $r78;
        javax.sip.address.SipURI r27, $r39;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        javax.sip.header.Header r31, $r36, $r89;
        gov.nist.javax.sip.SipStackImpl $r32, $r42, $r43, $r54, $r56, $r79, $r87, $r104;
        java.lang.NullPointerException $r33;
        java.lang.Object $r35, $r48, $r49, $r52, $r57, $r62, $r69, $r88, $r90;
        java.lang.IllegalArgumentException $r37, $r77;
        long $l3, $l4, $l7;
        gov.nist.javax.sip.header.RouteList $r38;
        java.lang.StringBuilder $r44, $r45, $r46, $r61, $r64, $r67, $r95, $r96, $r97, $r98, $r100, $r101;
        gov.nist.core.StackLogger $r47, $r65, $r92, $r99;
        gov.nist.javax.sip.clientauthutils.AccountManager $r53;
        gov.nist.javax.sip.clientauthutils.CredentialsCache $r55;
        byte[] $r59, $r75;
        gov.nist.javax.sip.clientauthutils.SecureAccountManager $r70;
        gov.nist.javax.sip.stack.SIPClientTransaction $r74;
        javax.sip.address.Router $r80;
        javax.sip.Dialog $r82, $r85, $r86;
        javax.sip.DialogState $r83, $r84;
        javax.sip.InvalidArgumentException $r94;

        r0 := @this: gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl;

        r1 := @parameter0: javax.sip.message.Response;

        r2 := @parameter1: javax.sip.ClientTransaction;

        r3 := @parameter2: javax.sip.SipProvider;

        i0 := @parameter3: int;

     label01:
        $r32 = r0.<gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z0 = virtualinvoke $r32.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label02;

        $r87 = r0.<gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r99 = virtualinvoke $r87.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r98 = new java.lang.StringBuilder;

        specialinvoke $r98.<java.lang.StringBuilder: void <init>()>();

        $r101 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleChallenge: ");

        $r100 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r103 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r99.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r103);

     label02:
        $r30 = interfaceinvoke r2.<javax.sip.ClientTransaction: javax.sip.message.Request getRequest()>();

        r6 = (gov.nist.javax.sip.message.SIPRequest) $r30;

        $r34 = virtualinvoke r6.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getToTag()>();

        if $r34 != null goto label03;

        $r86 = interfaceinvoke r2.<javax.sip.ClientTransaction: javax.sip.Dialog getDialog()>();

        if $r86 == null goto label03;

        $r85 = interfaceinvoke r2.<javax.sip.ClientTransaction: javax.sip.Dialog getDialog()>();

        $r84 = interfaceinvoke $r85.<javax.sip.Dialog: javax.sip.DialogState getState()>();

        $r83 = <javax.sip.DialogState: javax.sip.DialogState CONFIRMED>;

        if $r84 == $r83 goto label08;

     label03:
        $r35 = virtualinvoke r6.<gov.nist.javax.sip.message.SIPRequest: java.lang.Object clone()>();

        r7 = (javax.sip.message.Request) $r35;

     label04:
        specialinvoke r0.<gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl: void removeBranchID(javax.sip.message.Request)>(r7);

     label05:
        if r1 == null goto label06;

        if r7 != null goto label13;

     label06:
        $r33 = new java.lang.NullPointerException;

        specialinvoke $r33.<java.lang.NullPointerException: void <init>(java.lang.String)>("A null argument was passed to handle challenge.");

        throw $r33;

     label07:
        $r102 := @caughtexception;

        r5 = $r102;

        throw r5;

     label08:
        $r82 = interfaceinvoke r2.<javax.sip.ClientTransaction: javax.sip.Dialog getDialog()>();

        $r81 = virtualinvoke r6.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        r7 = interfaceinvoke $r82.<javax.sip.Dialog: javax.sip.message.Request createRequest(java.lang.String)>($r81);

        r26 = virtualinvoke r6.<gov.nist.javax.sip.message.SIPRequest: java.util.ListIterator getHeaderNames()>();

     label09:
        $z8 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label04;

        $r90 = interfaceinvoke r26.<java.util.Iterator: java.lang.Object next()>();

        r29 = (java.lang.String) $r90;

        $r89 = interfaceinvoke r7.<javax.sip.message.Request: javax.sip.header.Header getHeader(java.lang.String)>(r29);

        if $r89 == null goto label09;

        r28 = interfaceinvoke r7.<javax.sip.message.Request: java.util.ListIterator getHeaders(java.lang.String)>(r29);

     label10:
        $z7 = interfaceinvoke r28.<java.util.ListIterator: boolean hasNext()>();

        if $z7 == 0 goto label09;

        $r88 = interfaceinvoke r28.<java.util.ListIterator: java.lang.Object next()>();

        r31 = (javax.sip.header.Header) $r88;

        interfaceinvoke r7.<javax.sip.message.Request: void addHeader(javax.sip.header.Header)>(r31);

     label11:
        goto label10;

     label12:
        $r105 := @caughtexception;

        r4 = $r105;

        $r104 = r0.<gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r92 = virtualinvoke $r104.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r92.<gov.nist.core.StackLogger: void logError(java.lang.String,java.lang.Exception)>("Unexpected exception ", r4);

        $r91 = new javax.sip.SipException;

        specialinvoke $r91.<javax.sip.SipException: void <init>(java.lang.String,java.lang.Throwable)>("Unexpected exception ", r4);

        throw $r91;

     label13:
        $i1 = interfaceinvoke r1.<javax.sip.message.Response: int getStatusCode()>();

        if $i1 != 401 goto label16;

        r8 = interfaceinvoke r1.<javax.sip.message.Response: java.util.ListIterator getHeaders(java.lang.String)>("WWW-Authenticate");

     label14:
        if r8 != null goto label19;

     label15:
        $r77 = new java.lang.IllegalArgumentException;

        specialinvoke $r77.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Could not find WWWAuthenticate or ProxyAuthenticate headers");

        throw $r77;

     label16:
        $i2 = interfaceinvoke r1.<javax.sip.message.Response: int getStatusCode()>();

        if $i2 != 407 goto label18;

        r8 = interfaceinvoke r1.<javax.sip.message.Response: java.util.ListIterator getHeaders(java.lang.String)>("Proxy-Authenticate");

     label17:
        goto label14;

     label18:
        $r37 = new java.lang.IllegalArgumentException;

        specialinvoke $r37.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unexpected status code ");

        throw $r37;

     label19:
        interfaceinvoke r7.<javax.sip.message.Request: void removeHeader(java.lang.String)>("Authorization");

        interfaceinvoke r7.<javax.sip.message.Request: void removeHeader(java.lang.String)>("Proxy-Authorization");

        $r36 = interfaceinvoke r7.<javax.sip.message.Request: javax.sip.header.Header getHeader(java.lang.String)>("CSeq");

        r9 = (javax.sip.header.CSeqHeader) $r36;

     label20:
        $l4 = interfaceinvoke r9.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        $l3 = 1L + $l4;

        interfaceinvoke r9.<javax.sip.header.CSeqHeader: void setSeqNumber(long)>($l3);

     label21:
        $r38 = virtualinvoke r6.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RouteList getRouteHeaders()>();

        if $r38 != null goto label23;

        $r74 = (gov.nist.javax.sip.stack.SIPClientTransaction) r2;

        r24 = virtualinvoke $r74.<gov.nist.javax.sip.stack.SIPClientTransaction: javax.sip.address.Hop getNextHop()>();

        $r72 = interfaceinvoke r7.<javax.sip.message.Request: javax.sip.address.URI getRequestURI()>();

        r27 = (javax.sip.address.SipURI) $r72;

        $r73 = interfaceinvoke r24.<javax.sip.address.Hop: java.lang.String getHost()>();

        $r71 = interfaceinvoke r27.<javax.sip.address.SipURI: java.lang.String getHost()>();

        $z5 = virtualinvoke $r73.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r71);

        if $z5 != 0 goto label22;

        $r79 = r0.<gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r80 = virtualinvoke $r79.<gov.nist.javax.sip.SipStackImpl: javax.sip.address.Router getRouter(gov.nist.javax.sip.message.SIPRequest)>(r6);

        $r78 = interfaceinvoke $r80.<javax.sip.address.Router: javax.sip.address.Hop getOutboundProxy()>();

        $z6 = virtualinvoke r24.<java.lang.Object: boolean equals(java.lang.Object)>($r78);

        if $z6 != 0 goto label22;

        $r76 = interfaceinvoke r24.<javax.sip.address.Hop: java.lang.String getHost()>();

        interfaceinvoke r27.<javax.sip.address.SipURI: void setMAddrParam(java.lang.String)>($r76);

     label22:
        $i5 = interfaceinvoke r24.<javax.sip.address.Hop: int getPort()>();

        if $i5 == -1 goto label23;

        $i6 = interfaceinvoke r24.<javax.sip.address.Hop: int getPort()>();

        interfaceinvoke r27.<javax.sip.address.SipURI: void setPort(int)>($i6);

     label23:
        r11 = interfaceinvoke r3.<javax.sip.SipProvider: javax.sip.ClientTransaction getNewClientTransaction(javax.sip.message.Request)>(r7);

        $r41 = interfaceinvoke r2.<javax.sip.ClientTransaction: javax.sip.message.Request getRequest()>();

        $r40 = interfaceinvoke $r41.<javax.sip.message.Request: javax.sip.address.URI getRequestURI()>();

        $r39 = (javax.sip.address.SipURI) $r40;

     label24:
        $z2 = interfaceinvoke r8.<java.util.ListIterator: boolean hasNext()>();

        if $z2 == 0 goto label45;

        $r49 = interfaceinvoke r8.<java.util.ListIterator: java.lang.Object next()>();

        r12 = (javax.sip.header.WWWAuthenticateHeader) $r49;

        r13 = interfaceinvoke r12.<javax.sip.header.WWWAuthenticateHeader: java.lang.String getRealm()>();

        $r48 = r0.<gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl: java.lang.Object accountManager>;

        $z3 = $r48 instanceof gov.nist.javax.sip.clientauthutils.SecureAccountManager;

        if $z3 == 0 goto label36;

        $r62 = r0.<gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl: java.lang.Object accountManager>;

        $r70 = (gov.nist.javax.sip.clientauthutils.SecureAccountManager) $r62;

        r21 = interfaceinvoke $r70.<gov.nist.javax.sip.clientauthutils.SecureAccountManager: gov.nist.javax.sip.clientauthutils.UserCredentialHash getCredentialHash(javax.sip.ClientTransaction,java.lang.String)>(r2, r13);

        r20 = interfaceinvoke r7.<javax.sip.message.Request: javax.sip.address.URI getRequestURI()>();

        r14 = interfaceinvoke r21.<gov.nist.javax.sip.clientauthutils.UserCredentialHash: java.lang.String getSipDomain()>();

        r23 = interfaceinvoke r7.<javax.sip.message.Request: java.lang.String getMethod()>();

        r22 = virtualinvoke r20.<java.lang.Object: java.lang.String toString()>();

        $r69 = interfaceinvoke r7.<javax.sip.message.Request: java.lang.Object getContent()>();

        if $r69 != null goto label34;

     label25:
        r25 = "";

     label26:
        r18 = specialinvoke r0.<gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl: javax.sip.header.AuthorizationHeader getAuthorization(java.lang.String,java.lang.String,java.lang.String,javax.sip.header.WWWAuthenticateHeader,gov.nist.javax.sip.clientauthutils.UserCredentialHash)>(r23, r22, r25, r12, r21);

     label27:
        $r54 = r0.<gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z4 = virtualinvoke $r54.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z4 == 0 goto label28;

        $r56 = r0.<gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r65 = virtualinvoke $r56.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Created authorization header: ");

        $r66 = virtualinvoke r18.<java.lang.Object: java.lang.String toString()>();

        $r61 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r66);

        $r60 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r65.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r60);

     label28:
        if i0 == 0 goto label30;

     label29:
        $r55 = r0.<gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl: gov.nist.javax.sip.clientauthutils.CredentialsCache cachedCredentials>;

        virtualinvoke $r55.<gov.nist.javax.sip.clientauthutils.CredentialsCache: void cacheAuthorizationHeader(java.lang.String,javax.sip.header.AuthorizationHeader,int)>(r14, r18, i0);

     label30:
        interfaceinvoke r7.<javax.sip.message.Request: void addHeader(javax.sip.header.Header)>(r18);

     label31:
        goto label24;

     label32:
        $r94 := @caughtexception;

     label33:
        $r93 = new javax.sip.SipException;

        $r96 = new java.lang.StringBuilder;

        specialinvoke $r96.<java.lang.StringBuilder: void <init>()>();

        $r95 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid CSeq -- could not increment : ");

        $l7 = interfaceinvoke r9.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        $r97 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        $r106 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r93.<javax.sip.SipException: void <init>(java.lang.String)>($r106);

        throw $r93;

     label34:
        $r68 = new java.lang.String;

        $r75 = interfaceinvoke r7.<javax.sip.message.Request: byte[] getRawContent()>();

        specialinvoke $r68.<java.lang.String: void <init>(byte[])>($r75);

        r25 = $r68;

     label35:
        goto label26;

     label36:
        $r52 = r0.<gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl: java.lang.Object accountManager>;

        $r53 = (gov.nist.javax.sip.clientauthutils.AccountManager) $r52;

        r15 = interfaceinvoke $r53.<gov.nist.javax.sip.clientauthutils.AccountManager: gov.nist.javax.sip.clientauthutils.UserCredentials getCredentials(javax.sip.ClientTransaction,java.lang.String)>(r2, r13);

        r14 = interfaceinvoke r15.<gov.nist.javax.sip.clientauthutils.UserCredentials: java.lang.String getSipDomain()>();

     label37:
        if r15 != null goto label39;

     label38:
        $r63 = new javax.sip.SipException;

        specialinvoke $r63.<javax.sip.SipException: void <init>(java.lang.String)>("Cannot find user creds for the given user name and realm");

        throw $r63;

     label39:
        r17 = interfaceinvoke r7.<javax.sip.message.Request: java.lang.String getMethod()>();

        $r51 = interfaceinvoke r7.<javax.sip.message.Request: javax.sip.address.URI getRequestURI()>();

        r16 = virtualinvoke $r51.<java.lang.Object: java.lang.String toString()>();

        $r57 = interfaceinvoke r7.<javax.sip.message.Request: java.lang.Object getContent()>();

        if $r57 != null goto label43;

     label40:
        r19 = "";

     label41:
        r18 = specialinvoke r0.<gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl: javax.sip.header.AuthorizationHeader getAuthorization(java.lang.String,java.lang.String,java.lang.String,javax.sip.header.WWWAuthenticateHeader,gov.nist.javax.sip.clientauthutils.UserCredentials)>(r17, r16, r19, r12, r15);

     label42:
        goto label27;

     label43:
        $r58 = new java.lang.String;

        $r59 = interfaceinvoke r7.<javax.sip.message.Request: byte[] getRawContent()>();

        specialinvoke $r58.<java.lang.String: void <init>(byte[])>($r59);

        r19 = $r58;

     label44:
        goto label41;

     label45:
        $r43 = r0.<gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z1 = virtualinvoke $r43.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label46;

        $r42 = r0.<gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r47 = virtualinvoke $r42.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Returning authorization transaction.");

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r50 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r47.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r50);

     label46:
        return r11;

        catch javax.sip.SipException from label01 to label02 with label07;
        catch java.lang.Exception from label01 to label02 with label12;
        catch javax.sip.SipException from label02 to label03 with label07;
        catch java.lang.Exception from label02 to label03 with label12;
        catch javax.sip.SipException from label03 to label04 with label07;
        catch java.lang.Exception from label03 to label04 with label12;
        catch javax.sip.SipException from label04 to label05 with label07;
        catch java.lang.Exception from label04 to label05 with label12;
        catch javax.sip.SipException from label06 to label07 with label07;
        catch java.lang.Exception from label06 to label07 with label12;
        catch javax.sip.SipException from label08 to label09 with label07;
        catch java.lang.Exception from label08 to label09 with label12;
        catch javax.sip.SipException from label09 to label10 with label07;
        catch java.lang.Exception from label09 to label10 with label12;
        catch javax.sip.SipException from label10 to label11 with label07;
        catch java.lang.Exception from label10 to label11 with label12;
        catch javax.sip.SipException from label13 to label14 with label07;
        catch java.lang.Exception from label13 to label14 with label12;
        catch javax.sip.SipException from label15 to label16 with label07;
        catch java.lang.Exception from label15 to label16 with label12;
        catch javax.sip.SipException from label16 to label17 with label07;
        catch java.lang.Exception from label16 to label17 with label12;
        catch javax.sip.SipException from label18 to label19 with label07;
        catch java.lang.Exception from label18 to label19 with label12;
        catch javax.sip.SipException from label19 to label20 with label07;
        catch java.lang.Exception from label19 to label20 with label12;
        catch javax.sip.InvalidArgumentException from label20 to label21 with label32;
        catch javax.sip.SipException from label20 to label21 with label07;
        catch java.lang.Exception from label20 to label21 with label12;
        catch javax.sip.SipException from label21 to label22 with label07;
        catch java.lang.Exception from label21 to label22 with label12;
        catch javax.sip.SipException from label22 to label23 with label07;
        catch java.lang.Exception from label22 to label23 with label12;
        catch javax.sip.SipException from label23 to label24 with label07;
        catch java.lang.Exception from label23 to label24 with label12;
        catch javax.sip.SipException from label24 to label25 with label07;
        catch java.lang.Exception from label24 to label25 with label12;
        catch javax.sip.SipException from label26 to label27 with label07;
        catch java.lang.Exception from label26 to label27 with label12;
        catch javax.sip.SipException from label27 to label28 with label07;
        catch java.lang.Exception from label27 to label28 with label12;
        catch javax.sip.SipException from label29 to label30 with label07;
        catch java.lang.Exception from label29 to label30 with label12;
        catch javax.sip.SipException from label30 to label31 with label07;
        catch java.lang.Exception from label30 to label31 with label12;
        catch javax.sip.SipException from label33 to label34 with label07;
        catch java.lang.Exception from label33 to label34 with label12;
        catch javax.sip.SipException from label34 to label35 with label07;
        catch java.lang.Exception from label34 to label35 with label12;
        catch javax.sip.SipException from label36 to label37 with label07;
        catch java.lang.Exception from label36 to label37 with label12;
        catch javax.sip.SipException from label38 to label39 with label07;
        catch java.lang.Exception from label38 to label39 with label12;
        catch javax.sip.SipException from label39 to label40 with label07;
        catch java.lang.Exception from label39 to label40 with label12;
        catch javax.sip.SipException from label41 to label42 with label07;
        catch java.lang.Exception from label41 to label42 with label12;
        catch javax.sip.SipException from label43 to label44 with label07;
        catch java.lang.Exception from label43 to label44 with label12;
        catch javax.sip.SipException from label45 to label46 with label07;
        catch java.lang.Exception from label45 to label46 with label12;
    }

    public void removeCachedAuthenticationHeaders(java.lang.String)
    {
        gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl r0;
        java.lang.String r1;
        gov.nist.javax.sip.clientauthutils.CredentialsCache $r2;
        java.lang.NullPointerException $r3;

        r0 := @this: gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null callId argument ");

        throw $r3;

     label1:
        $r2 = r0.<gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl: gov.nist.javax.sip.clientauthutils.CredentialsCache cachedCredentials>;

        virtualinvoke $r2.<gov.nist.javax.sip.clientauthutils.CredentialsCache: void removeAuthenticationHeader(java.lang.String)>(r1);

        return;
    }

    public void setAuthenticationHeaders(javax.sip.message.Request)
    {
        gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl r0;
        javax.sip.message.Request r1;
        java.lang.String r2, $r15;
        java.util.Collection r3;
        java.util.Iterator r4;
        gov.nist.javax.sip.message.SIPRequest $r5;
        javax.sip.header.CallIdHeader $r6;
        gov.nist.javax.sip.clientauthutils.CredentialsCache $r7;
        boolean $z0, $z1;
        java.lang.Object $r8;
        javax.sip.header.AuthorizationHeader $r9;
        gov.nist.javax.sip.SipStackImpl $r10, $r12;
        gov.nist.core.StackLogger $r11;
        java.lang.StringBuilder $r13, $r14, $r16;

        r0 := @this: gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl;

        r1 := @parameter0: javax.sip.message.Request;

        $r5 = (gov.nist.javax.sip.message.SIPRequest) r1;

        $r6 = virtualinvoke $r5.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CallIdHeader getCallId()>();

        r2 = interfaceinvoke $r6.<javax.sip.header.CallIdHeader: java.lang.String getCallId()>();

        interfaceinvoke r1.<javax.sip.message.Request: void removeHeader(java.lang.String)>("Authorization");

        $r7 = r0.<gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl: gov.nist.javax.sip.clientauthutils.CredentialsCache cachedCredentials>;

        r3 = virtualinvoke $r7.<gov.nist.javax.sip.clientauthutils.CredentialsCache: java.util.Collection getCachedAuthorizationHeaders(java.lang.String)>(r2);

        if r3 != null goto label2;

        $r10 = r0.<gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z1 = virtualinvoke $r10.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label1;

        $r12 = r0.<gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r11 = virtualinvoke $r12.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find authentication headers for ");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r11.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r15);

     label1:
        return;

     label2:
        r4 = interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (javax.sip.header.AuthorizationHeader) $r8;

        interfaceinvoke r1.<javax.sip.message.Request: void addHeader(javax.sip.header.Header)>($r9);

        goto label3;
    }
}
