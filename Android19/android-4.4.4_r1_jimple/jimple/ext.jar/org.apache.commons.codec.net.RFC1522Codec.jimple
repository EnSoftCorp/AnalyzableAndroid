abstract class org.apache.commons.codec.net.RFC1522Codec extends java.lang.Object
{

    void <init>()
    {
        org.apache.commons.codec.net.RFC1522Codec r0;

        r0 := @this: org.apache.commons.codec.net.RFC1522Codec;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected java.lang.String decodeText(java.lang.String) throws org.apache.commons.codec.DecoderException, java.io.UnsupportedEncodingException
    {
        org.apache.commons.codec.net.RFC1522Codec r0;
        java.lang.String r1, r2, r3, $r7, $r8, $r9, $r18;
        int i0, i1, i2, i3, i4, $i5, $i6;
        boolean $z0, $z1, $z2, $z3;
        org.apache.commons.codec.DecoderException $r4, $r5, $r6, $r13, $r16;
        byte[] $r10, $r11;
        java.lang.StringBuilder $r12, $r14, $r15, $r17;

        r0 := @this: org.apache.commons.codec.net.RFC1522Codec;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        return null;

     label1:
        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("=?");

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>("?=");

        if $z1 != 0 goto label3;

     label2:
        $r4 = new org.apache.commons.codec.DecoderException;

        specialinvoke $r4.<org.apache.commons.codec.DecoderException: void <init>(java.lang.String)>("RFC 1522 violation: malformed encoded content");

        throw $r4;

     label3:
        $i5 = virtualinvoke r1.<java.lang.String: int length()>();

        i0 = -2 + $i5;

        i1 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String,int)>("?", 2);

        if i1 == -1 goto label4;

        if i1 != i0 goto label5;

     label4:
        $r5 = new org.apache.commons.codec.DecoderException;

        specialinvoke $r5.<org.apache.commons.codec.DecoderException: void <init>(java.lang.String)>("RFC 1522 violation: charset token not found");

        throw $r5;

     label5:
        r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(2, i1);

        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z2 == 0 goto label6;

        $r16 = new org.apache.commons.codec.DecoderException;

        specialinvoke $r16.<org.apache.commons.codec.DecoderException: void <init>(java.lang.String)>("RFC 1522 violation: charset not specified");

        throw $r16;

     label6:
        i2 = i1 + 1;

        i3 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String,int)>("?", i2);

        if i3 == -1 goto label7;

        if i3 != i0 goto label8;

     label7:
        $r6 = new org.apache.commons.codec.DecoderException;

        specialinvoke $r6.<org.apache.commons.codec.DecoderException: void <init>(java.lang.String)>("RFC 1522 violation: encoding token not found");

        throw $r6;

     label8:
        r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i2, i3);

        $r7 = virtualinvoke r0.<org.apache.commons.codec.net.RFC1522Codec: java.lang.String getEncoding()>();

        $z3 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r3);

        if $z3 != 0 goto label9;

        $r13 = new org.apache.commons.codec.DecoderException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("This codec cannot decode ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" encoded content");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<org.apache.commons.codec.DecoderException: void <init>(java.lang.String)>($r18);

        throw $r13;

     label9:
        i4 = i3 + 1;

        $r8 = new java.lang.String;

        $i6 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String,int)>("?", i4);

        $r9 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i4, $i6);

        $r11 = virtualinvoke $r9.<java.lang.String: byte[] getBytes(java.lang.String)>("US-ASCII");

        $r10 = virtualinvoke r0.<org.apache.commons.codec.net.RFC1522Codec: byte[] doDecoding(byte[])>($r11);

        specialinvoke $r8.<java.lang.String: void <init>(byte[],java.lang.String)>($r10, r2);

        return $r8;
    }

    protected abstract byte[] doDecoding(byte[]) throws org.apache.commons.codec.DecoderException;

    protected abstract byte[] doEncoding(byte[]) throws org.apache.commons.codec.EncoderException;

    protected java.lang.String encodeText(java.lang.String, java.lang.String) throws org.apache.commons.codec.EncoderException, java.io.UnsupportedEncodingException
    {
        org.apache.commons.codec.net.RFC1522Codec r0;
        java.lang.String r1, r2, $r8, $r11, $r16;
        java.lang.StringBuffer r3, $r4;
        byte[] $r12, $r13;

        r0 := @this: org.apache.commons.codec.net.RFC1522Codec;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r1 != null goto label1;

        return null;

     label1:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        r3 = $r4;

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=?");

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(63);

        $r8 = virtualinvoke r0.<org.apache.commons.codec.net.RFC1522Codec: java.lang.String getEncoding()>();

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(63);

        $r11 = new java.lang.String;

        $r12 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.lang.String)>(r2);

        $r13 = virtualinvoke r0.<org.apache.commons.codec.net.RFC1522Codec: byte[] doEncoding(byte[])>($r12);

        specialinvoke $r11.<java.lang.String: void <init>(byte[],java.lang.String)>($r13, "US-ASCII");

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("?=");

        $r16 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r16;
    }

    protected abstract java.lang.String getEncoding();
}
