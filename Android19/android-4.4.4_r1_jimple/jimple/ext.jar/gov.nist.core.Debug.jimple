public class gov.nist.core.Debug extends java.lang.Object
{
    public static boolean debug;
    public static boolean parserDebug;
    static gov.nist.core.StackLogger stackLogger;

    static void <clinit>()
    {
        <gov.nist.core.Debug: boolean debug> = 0;

        <gov.nist.core.Debug: boolean parserDebug> = 0;

        return;
    }

    public void <init>()
    {
        gov.nist.core.Debug r0;

        r0 := @this: gov.nist.core.Debug;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void logError(java.lang.String, java.lang.Exception)
    {
        java.lang.String r0;
        java.lang.Exception r1;
        boolean $z0, $z1;
        gov.nist.core.StackLogger $r2, $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Exception;

        $z0 = <gov.nist.core.Debug: boolean parserDebug>;

        if $z0 != 0 goto label1;

        $z1 = <gov.nist.core.Debug: boolean debug>;

        if $z1 == 0 goto label2;

     label1:
        $r2 = <gov.nist.core.Debug: gov.nist.core.StackLogger stackLogger>;

        if $r2 == null goto label2;

        $r3 = <gov.nist.core.Debug: gov.nist.core.StackLogger stackLogger>;

        interfaceinvoke $r3.<gov.nist.core.StackLogger: void logError(java.lang.String,java.lang.Exception)>(r0, r1);

     label2:
        return;
    }

    public static void printStackTrace(java.lang.Exception)
    {
        java.lang.Exception r0;
        boolean $z0, $z1;
        gov.nist.core.StackLogger $r1, $r2;

        r0 := @parameter0: java.lang.Exception;

        $z0 = <gov.nist.core.Debug: boolean parserDebug>;

        if $z0 != 0 goto label1;

        $z1 = <gov.nist.core.Debug: boolean debug>;

        if $z1 == 0 goto label2;

     label1:
        $r1 = <gov.nist.core.Debug: gov.nist.core.StackLogger stackLogger>;

        if $r1 == null goto label2;

        $r2 = <gov.nist.core.Debug: gov.nist.core.StackLogger stackLogger>;

        interfaceinvoke $r2.<gov.nist.core.StackLogger: void logError(java.lang.String,java.lang.Exception)>("Stack Trace", r0);

     label2:
        return;
    }

    public static void println(java.lang.String)
    {
        java.lang.String r0, $r6;
        boolean $z0, $z1;
        gov.nist.core.StackLogger $r1, $r3;
        java.lang.StringBuilder $r2, $r4, $r5;

        r0 := @parameter0: java.lang.String;

        $z0 = <gov.nist.core.Debug: boolean parserDebug>;

        if $z0 != 0 goto label1;

        $z1 = <gov.nist.core.Debug: boolean debug>;

        if $z1 == 0 goto label2;

     label1:
        $r1 = <gov.nist.core.Debug: gov.nist.core.StackLogger stackLogger>;

        if $r1 == null goto label2;

        $r3 = <gov.nist.core.Debug: gov.nist.core.StackLogger stackLogger>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r6);

     label2:
        return;
    }

    public static void setStackLogger(gov.nist.core.StackLogger)
    {
        gov.nist.core.StackLogger r0;

        r0 := @parameter0: gov.nist.core.StackLogger;

        <gov.nist.core.Debug: gov.nist.core.StackLogger stackLogger> = r0;

        return;
    }
}
