public class gov.nist.javax.sip.parser.ContentLanguageParser extends gov.nist.javax.sip.parser.HeaderParser
{

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.ContentLanguageParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.ContentLanguageParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.ContentLanguageParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.ContentLanguageParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(java.lang.String)>(r1);

        return;
    }

    public gov.nist.javax.sip.header.SIPHeader parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.ContentLanguageParser r0;
        gov.nist.javax.sip.header.ContentLanguageList r1, $r6;
        java.lang.Throwable r2, $r27;
        java.text.ParseException r3, $r29, $r30;
        gov.nist.javax.sip.header.ContentLanguage r4, r5, $r12, $r25;
        boolean $z0, $z1, $z3;
        gov.nist.core.LexerCore $r7, $r8, $r10, $r11, $r15, $r16, $r18, $r19, $r20, $r21, $r26, $r28;
        char $c0, $c1;
        java.lang.String $r13, $r24, $r31;
        gov.nist.core.Token $r14, $r23;

        r0 := @this: gov.nist.javax.sip.parser.ContentLanguageParser;

        $z0 = <gov.nist.javax.sip.parser.ContentLanguageParser: boolean debug>;

        if $z0 == 0 goto label01;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ContentLanguageParser: void dbg_enter(java.lang.String)>("ContentLanguageParser.parse");

     label01:
        $r6 = new gov.nist.javax.sip.header.ContentLanguageList;

        specialinvoke $r6.<gov.nist.javax.sip.header.ContentLanguageList: void <init>()>();

        r1 = $r6;

     label02:
        virtualinvoke r0.<gov.nist.javax.sip.parser.ContentLanguageParser: void headerName(int)>(2075);

     label03:
        $r7 = r0.<gov.nist.javax.sip.parser.ContentLanguageParser: gov.nist.core.LexerCore lexer>;

        $c0 = virtualinvoke $r7.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c0 == 10 goto label10;

        $r8 = r0.<gov.nist.javax.sip.parser.ContentLanguageParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r8.<gov.nist.core.LexerCore: void SPorHT()>();

        $r10 = r0.<gov.nist.javax.sip.parser.ContentLanguageParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r10.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r12 = new gov.nist.javax.sip.header.ContentLanguage;

        $r11 = r0.<gov.nist.javax.sip.parser.ContentLanguageParser: gov.nist.core.LexerCore lexer>;

        $r14 = virtualinvoke $r11.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        $r13 = virtualinvoke $r14.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        specialinvoke $r12.<gov.nist.javax.sip.header.ContentLanguage: void <init>(java.lang.String)>($r13);

        r4 = $r12;

        $r15 = r0.<gov.nist.javax.sip.parser.ContentLanguageParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r15.<gov.nist.core.LexerCore: void SPorHT()>();

        virtualinvoke r1.<gov.nist.javax.sip.header.ContentLanguageList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r4);

     label04:
        $r16 = r0.<gov.nist.javax.sip.parser.ContentLanguageParser: gov.nist.core.LexerCore lexer>;

        $c1 = virtualinvoke $r16.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c1 != 44 goto label03;

        $r18 = r0.<gov.nist.javax.sip.parser.ContentLanguageParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r18.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(44);

        $r20 = r0.<gov.nist.javax.sip.parser.ContentLanguageParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r20.<gov.nist.core.LexerCore: void SPorHT()>();

        $r19 = r0.<gov.nist.javax.sip.parser.ContentLanguageParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r19.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r21 = r0.<gov.nist.javax.sip.parser.ContentLanguageParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r21.<gov.nist.core.LexerCore: void SPorHT()>();

        $r25 = new gov.nist.javax.sip.header.ContentLanguage;

        $r26 = r0.<gov.nist.javax.sip.parser.ContentLanguageParser: gov.nist.core.LexerCore lexer>;

        $r23 = virtualinvoke $r26.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        $r24 = virtualinvoke $r23.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        specialinvoke $r25.<gov.nist.javax.sip.header.ContentLanguage: void <init>(java.lang.String)>($r24);

        r5 = $r25;

        $r28 = r0.<gov.nist.javax.sip.parser.ContentLanguageParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r28.<gov.nist.core.LexerCore: void SPorHT()>();

        virtualinvoke r1.<gov.nist.javax.sip.header.ContentLanguageList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r5);

     label05:
        goto label04;

     label06:
        $r30 := @caughtexception;

        r3 = $r30;

     label07:
        $r31 = virtualinvoke r3.<java.text.ParseException: java.lang.String getMessage()>();

        $r29 = virtualinvoke r0.<gov.nist.javax.sip.parser.ContentLanguageParser: java.text.ParseException createParseException(java.lang.String)>($r31);

        throw $r29;

     label08:
        $r27 := @caughtexception;

        r2 = $r27;

        $z3 = <gov.nist.javax.sip.parser.ContentLanguageParser: boolean debug>;

        if $z3 == 0 goto label09;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ContentLanguageParser: void dbg_leave(java.lang.String)>("ContentLanguageParser.parse");

     label09:
        throw r2;

     label10:
        $z1 = <gov.nist.javax.sip.parser.ContentLanguageParser: boolean debug>;

        if $z1 == 0 goto label11;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ContentLanguageParser: void dbg_leave(java.lang.String)>("ContentLanguageParser.parse");

     label11:
        return r1;

        catch java.text.ParseException from label02 to label03 with label06;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.text.ParseException from label03 to label04 with label06;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.text.ParseException from label04 to label05 with label06;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label07 to label08 with label08;
    }
}
