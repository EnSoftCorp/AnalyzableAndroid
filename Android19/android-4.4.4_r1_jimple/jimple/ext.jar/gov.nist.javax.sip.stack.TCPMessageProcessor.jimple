public class gov.nist.javax.sip.stack.TCPMessageProcessor extends gov.nist.javax.sip.stack.MessageProcessor
{
    private java.util.ArrayList incomingTcpMessageChannels;
    private boolean isRunning;
    protected int nConnections;
    private java.net.ServerSocket sock;
    private java.util.Hashtable tcpMessageChannels;
    protected int useCount;

    protected void <init>(java.net.InetAddress, gov.nist.javax.sip.stack.SIPTransactionStack, int)
    {
        gov.nist.javax.sip.stack.TCPMessageProcessor r0;
        java.net.InetAddress r1;
        gov.nist.javax.sip.stack.SIPTransactionStack r2;
        int i0;
        java.util.Hashtable $r3;
        java.util.ArrayList $r4;

        r0 := @this: gov.nist.javax.sip.stack.TCPMessageProcessor;

        r1 := @parameter0: java.net.InetAddress;

        r2 := @parameter1: gov.nist.javax.sip.stack.SIPTransactionStack;

        i0 := @parameter2: int;

        specialinvoke r0.<gov.nist.javax.sip.stack.MessageProcessor: void <init>(java.net.InetAddress,int,java.lang.String,gov.nist.javax.sip.stack.SIPTransactionStack)>(r1, i0, "tcp", r2);

        r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack> = r2;

        $r3 = new java.util.Hashtable;

        specialinvoke $r3.<java.util.Hashtable: void <init>()>();

        r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.util.Hashtable tcpMessageChannels> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.util.ArrayList incomingTcpMessageChannels> = $r4;

        return;
    }

    protected void cacheMessageChannel(gov.nist.javax.sip.stack.TCPMessageChannel)
    {
        gov.nist.javax.sip.stack.TCPMessageProcessor r0;
        gov.nist.javax.sip.stack.TCPMessageChannel r1, r4;
        java.lang.Throwable r2, $r23;
        java.lang.String r3, $r14, $r21;
        java.util.Hashtable $r5, $r8;
        java.lang.Object $r6;
        gov.nist.javax.sip.stack.SIPTransactionStack $r7, $r10, $r16, $r18;
        boolean $z0, $z1;
        gov.nist.core.StackLogger $r11, $r17;
        java.lang.StringBuilder $r12, $r13, $r15, $r19, $r20, $r22;

        r0 := @this: gov.nist.javax.sip.stack.TCPMessageProcessor;

        r1 := @parameter0: gov.nist.javax.sip.stack.TCPMessageChannel;

        entermonitor r0;

     label1:
        r3 = virtualinvoke r1.<gov.nist.javax.sip.stack.TCPMessageChannel: java.lang.String getKey()>();

        $r5 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.util.Hashtable tcpMessageChannels>;

        $r6 = virtualinvoke $r5.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (gov.nist.javax.sip.stack.TCPMessageChannel) $r6;

     label2:
        if r4 == null goto label5;

     label3:
        $r16 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = virtualinvoke $r16.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label4;

        $r18 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r17 = virtualinvoke $r18.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Closing ");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r17.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r21);

     label4:
        virtualinvoke r4.<gov.nist.javax.sip.stack.TCPMessageChannel: void close()>();

     label5:
        $r7 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r7.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label6;

        $r10 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r11 = virtualinvoke $r10.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caching ");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r11.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r14);

     label6:
        $r8 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.util.Hashtable tcpMessageChannels>;

        virtualinvoke $r8.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r1);

     label7:
        exitmonitor r0;

        return;

     label8:
        $r23 := @caughtexception;

        r2 = $r23;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public gov.nist.javax.sip.stack.MessageChannel createMessageChannel(gov.nist.core.HostPort) throws java.io.IOException
    {
        gov.nist.javax.sip.stack.TCPMessageProcessor r0;
        gov.nist.core.HostPort r1;
        java.lang.Throwable r2, $r26;
        java.lang.String r3, $r18, $r24;
        gov.nist.javax.sip.stack.TCPMessageChannel r4, r5, $r8;
        java.util.Hashtable $r6, $r11, $r27;
        java.lang.Object $r7, $r28;
        java.net.InetAddress $r9;
        int $i0;
        gov.nist.javax.sip.stack.SIPTransactionStack $r10, $r12, $r15, $r21;
        boolean $z0;
        gov.nist.core.StackLogger $r14, $r20;
        java.lang.StringBuilder $r16, $r17, $r19, $r22, $r23, $r25;

        r0 := @this: gov.nist.javax.sip.stack.TCPMessageProcessor;

        r1 := @parameter0: gov.nist.core.HostPort;

        entermonitor r0;

     label1:
        r3 = staticinvoke <gov.nist.javax.sip.stack.MessageChannel: java.lang.String getKey(gov.nist.core.HostPort,java.lang.String)>(r1, "TCP");

        $r6 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.util.Hashtable tcpMessageChannels>;

        $r7 = virtualinvoke $r6.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r3);

        if $r7 == null goto label3;

        $r27 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.util.Hashtable tcpMessageChannels>;

        $r28 = virtualinvoke $r27.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r3);

        r5 = (gov.nist.javax.sip.stack.TCPMessageChannel) $r28;

     label2:
        exitmonitor r0;

        return r5;

     label3:
        $r8 = new gov.nist.javax.sip.stack.TCPMessageChannel;

        $r9 = virtualinvoke r1.<gov.nist.core.HostPort: java.net.InetAddress getInetAddress()>();

        $i0 = virtualinvoke r1.<gov.nist.core.HostPort: int getPort()>();

        $r10 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        specialinvoke $r8.<gov.nist.javax.sip.stack.TCPMessageChannel: void <init>(java.net.InetAddress,int,gov.nist.javax.sip.stack.SIPTransactionStack,gov.nist.javax.sip.stack.TCPMessageProcessor)>($r9, $i0, $r10, r0);

        r4 = $r8;

        $r11 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.util.Hashtable tcpMessageChannels>;

        virtualinvoke $r11.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r4);

        r4.<gov.nist.javax.sip.stack.TCPMessageChannel: boolean isCached> = 1;

        $r12 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r12.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label4;

        $r15 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r14 = virtualinvoke $r15.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("key ");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r14.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r18);

        $r21 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r20 = virtualinvoke $r21.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating ");

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r20.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r24);

     label4:
        r5 = r4;

        goto label2;

     label5:
        $r26 := @caughtexception;

        r2 = $r26;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public gov.nist.javax.sip.stack.MessageChannel createMessageChannel(java.net.InetAddress, int) throws java.io.IOException
    {
        gov.nist.javax.sip.stack.TCPMessageProcessor r0;
        java.net.InetAddress r1;
        int i0;
        java.lang.Throwable r2, $r31;
        java.net.UnknownHostException r3, $r26;
        java.lang.String r4, $r18, $r24, $r30;
        gov.nist.javax.sip.stack.TCPMessageChannel r5, r6, $r9;
        java.util.Hashtable $r7, $r11, $r28;
        java.lang.Object $r8, $r29;
        gov.nist.javax.sip.stack.SIPTransactionStack $r10, $r12, $r15, $r21;
        boolean $z0;
        gov.nist.core.StackLogger $r14, $r20;
        java.lang.StringBuilder $r16, $r17, $r19, $r22, $r23, $r25;
        java.io.IOException $r27;

        r0 := @this: gov.nist.javax.sip.stack.TCPMessageProcessor;

        r1 := @parameter0: java.net.InetAddress;

        i0 := @parameter1: int;

        entermonitor r0;

     label1:
        r4 = staticinvoke <gov.nist.javax.sip.stack.MessageChannel: java.lang.String getKey(java.net.InetAddress,int,java.lang.String)>(r1, i0, "TCP");

        $r7 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.util.Hashtable tcpMessageChannels>;

        $r8 = virtualinvoke $r7.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r4);

        if $r8 == null goto label3;

        $r28 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.util.Hashtable tcpMessageChannels>;

        $r29 = virtualinvoke $r28.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r4);

        r6 = (gov.nist.javax.sip.stack.TCPMessageChannel) $r29;

     label2:
        exitmonitor r0;

        return r6;

     label3:
        $r9 = new gov.nist.javax.sip.stack.TCPMessageChannel;

        $r10 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        specialinvoke $r9.<gov.nist.javax.sip.stack.TCPMessageChannel: void <init>(java.net.InetAddress,int,gov.nist.javax.sip.stack.SIPTransactionStack,gov.nist.javax.sip.stack.TCPMessageProcessor)>(r1, i0, $r10, r0);

        r5 = $r9;

        $r11 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.util.Hashtable tcpMessageChannels>;

        virtualinvoke $r11.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r5);

        r5.<gov.nist.javax.sip.stack.TCPMessageChannel: boolean isCached> = 1;

        $r12 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r12.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label4;

        $r15 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r14 = virtualinvoke $r15.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("key ");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r14.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r18);

        $r21 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r20 = virtualinvoke $r21.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating ");

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r20.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r24);

     label4:
        r6 = r5;

        goto label2;

     label5:
        $r26 := @caughtexception;

        r3 = $r26;

     label6:
        $r27 = new java.io.IOException;

        $r30 = virtualinvoke r3.<java.net.UnknownHostException: java.lang.String getMessage()>();

        specialinvoke $r27.<java.io.IOException: void <init>(java.lang.String)>($r30);

        throw $r27;

     label7:
        $r31 := @caughtexception;

        r2 = $r31;

        exitmonitor r0;

        throw r2;

        catch java.net.UnknownHostException from label1 to label2 with label5;
        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.net.UnknownHostException from label3 to label4 with label5;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label6 to label7 with label7;
    }

    public int getDefaultTargetPort()
    {
        gov.nist.javax.sip.stack.TCPMessageProcessor r0;

        r0 := @this: gov.nist.javax.sip.stack.TCPMessageProcessor;

        return 5060;
    }

    public int getMaximumMessageSize()
    {
        gov.nist.javax.sip.stack.TCPMessageProcessor r0;

        r0 := @this: gov.nist.javax.sip.stack.TCPMessageProcessor;

        return 2147483647;
    }

    public gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()
    {
        gov.nist.javax.sip.stack.TCPMessageProcessor r0;
        gov.nist.javax.sip.stack.SIPTransactionStack $r1;

        r0 := @this: gov.nist.javax.sip.stack.TCPMessageProcessor;

        $r1 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        return $r1;
    }

    public java.lang.String getTransport()
    {
        gov.nist.javax.sip.stack.TCPMessageProcessor r0;

        r0 := @this: gov.nist.javax.sip.stack.TCPMessageProcessor;

        return "tcp";
    }

    public boolean inUse()
    {
        gov.nist.javax.sip.stack.TCPMessageProcessor r0;
        int $i0;

        r0 := @this: gov.nist.javax.sip.stack.TCPMessageProcessor;

        $i0 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: int useCount>;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isSecure()
    {
        gov.nist.javax.sip.stack.TCPMessageProcessor r0;

        r0 := @this: gov.nist.javax.sip.stack.TCPMessageProcessor;

        return 0;
    }

    protected void remove(gov.nist.javax.sip.stack.TCPMessageChannel)
    {
        gov.nist.javax.sip.stack.TCPMessageProcessor r0;
        gov.nist.javax.sip.stack.TCPMessageChannel r1;
        java.lang.Throwable r2, $r17;
        java.lang.String r3, $r18;
        gov.nist.javax.sip.stack.SIPTransactionStack $r4, $r10;
        boolean $z0;
        java.util.Hashtable $r5, $r8;
        java.lang.Object $r6;
        java.util.ArrayList $r7;
        java.lang.StringBuilder $r11, $r13, $r15, $r16;
        gov.nist.core.StackLogger $r12;
        java.lang.Thread $r14;

        r0 := @this: gov.nist.javax.sip.stack.TCPMessageProcessor;

        r1 := @parameter0: gov.nist.javax.sip.stack.TCPMessageChannel;

        entermonitor r0;

     label1:
        r3 = virtualinvoke r1.<gov.nist.javax.sip.stack.TCPMessageChannel: java.lang.String getKey()>();

        $r4 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r4.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label2;

        $r10 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r12 = virtualinvoke $r10.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r14 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" removing ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r18);

     label2:
        $r5 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.util.Hashtable tcpMessageChannels>;

        $r6 = virtualinvoke $r5.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r3);

        if $r6 != r1 goto label3;

        $r8 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.util.Hashtable tcpMessageChannels>;

        virtualinvoke $r8.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r3);

     label3:
        $r7 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.util.ArrayList incomingTcpMessageChannels>;

        virtualinvoke $r7.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

     label4:
        exitmonitor r0;

        return;

     label5:
        $r17 := @caughtexception;

        r2 = $r17;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void run()
    {
        gov.nist.javax.sip.stack.TCPMessageProcessor r0;
        java.lang.Exception r1, $r19;
        java.io.IOException r2, $r18;
        java.lang.Throwable r4, $r20;
        java.net.Socket r5;
        int i0, i1, $i2, $i3, $i4;
        boolean z0, $z1, $z2, $z4;
        gov.nist.javax.sip.stack.SIPTransactionStack $r7, $r9, $r10, $r14, $r15, $r21, $r23;
        java.net.ServerSocket $r8;
        gov.nist.javax.sip.stack.TCPMessageChannel $r11;
        java.util.ArrayList $r12;
        gov.nist.core.StackLogger $r13, $r22;
        java.lang.InterruptedException $r16;
        java.net.SocketException $r17;

        r0 := @this: gov.nist.javax.sip.stack.TCPMessageProcessor;

     label01:
        $z1 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: boolean isRunning>;

        if $z1 == 0 goto label19;

     label02:
        entermonitor r0;

     label03:
        $r7 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $i2 = $r7.<gov.nist.javax.sip.stack.SIPTransactionStack: int maxConnections>;

        if $i2 == -1 goto label09;

        i0 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: int nConnections>;

        $r15 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        i1 = $r15.<gov.nist.javax.sip.stack.SIPTransactionStack: int maxConnections>;

     label04:
        if i0 < i1 goto label09;

     label05:
        virtualinvoke r0.<java.lang.Object: void wait()>();

        z0 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: boolean isRunning>;

     label06:
        if z0 != 0 goto label03;

     label07:
        exitmonitor r0;

     label08:
        return;

     label09:
        $i3 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: int nConnections>;

        $i4 = 1 + $i3;

        r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: int nConnections> = $i4;

        exitmonitor r0;

     label10:
        $r8 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.net.ServerSocket sock>;

        r5 = virtualinvoke $r8.<java.net.ServerSocket: java.net.Socket accept()>();

        $r9 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z2 = virtualinvoke $r9.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z2 == 0 goto label11;

        $r14 = virtualinvoke r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()>();

        $r13 = virtualinvoke $r14.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r13.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Accepting new connection!");

     label11:
        $r12 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.util.ArrayList incomingTcpMessageChannels>;

        $r11 = new gov.nist.javax.sip.stack.TCPMessageChannel;

        $r10 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        specialinvoke $r11.<gov.nist.javax.sip.stack.TCPMessageChannel: void <init>(java.net.Socket,gov.nist.javax.sip.stack.SIPTransactionStack,gov.nist.javax.sip.stack.TCPMessageProcessor)>(r5, $r10, r0);

        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

     label12:
        goto label01;

     label13:
        $r17 := @caughtexception;

        r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: boolean isRunning> = 0;

        goto label01;

     label14:
        $r20 := @caughtexception;

        r4 = $r20;

     label15:
        exitmonitor r0;

     label16:
        throw r4;

     label17:
        $r18 := @caughtexception;

        r2 = $r18;

        $r23 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z4 = virtualinvoke $r23.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z4 == 0 goto label01;

        $r21 = virtualinvoke r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()>();

        $r22 = virtualinvoke $r21.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r22.<gov.nist.core.StackLogger: void logException(java.lang.Throwable)>(r2);

        goto label01;

     label18:
        $r19 := @caughtexception;

        r1 = $r19;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r1);

        goto label01;

     label19:
        return;

     label20:
        $r16 := @caughtexception;

        goto label09;

        catch java.net.SocketException from label02 to label03 with label13;
        catch java.io.IOException from label02 to label03 with label17;
        catch java.lang.Exception from label02 to label03 with label18;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.InterruptedException from label05 to label06 with label20;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.net.SocketException from label10 to label11 with label13;
        catch java.io.IOException from label10 to label11 with label17;
        catch java.lang.Exception from label10 to label11 with label18;
        catch java.net.SocketException from label11 to label12 with label13;
        catch java.io.IOException from label11 to label12 with label17;
        catch java.lang.Exception from label11 to label12 with label18;
        catch java.lang.Throwable from label15 to label16 with label14;
        catch java.net.SocketException from label16 to label17 with label13;
        catch java.io.IOException from label16 to label17 with label17;
        catch java.lang.Exception from label16 to label17 with label18;
    }

    public void start() throws java.io.IOException
    {
        gov.nist.javax.sip.stack.TCPMessageProcessor r0;
        java.lang.Thread r1, $r2;
        gov.nist.javax.sip.stack.SIPTransactionStack $r3;
        gov.nist.core.net.NetworkLayer $r4;
        int $i0;
        java.net.InetAddress $r5, $r7, $r10, $r11;
        java.net.ServerSocket $r6, $r9;
        java.lang.String $r8, $r12;
        boolean $z0, $z1;

        r0 := @this: gov.nist.javax.sip.stack.TCPMessageProcessor;

        $r2 = new java.lang.Thread;

        specialinvoke $r2.<java.lang.Thread: void <init>(java.lang.Runnable)>(r0);

        r1 = $r2;

        virtualinvoke r1.<java.lang.Thread: void setName(java.lang.String)>("TCPMessageProcessorThread");

        virtualinvoke r1.<java.lang.Thread: void setPriority(int)>(10);

        virtualinvoke r1.<java.lang.Thread: void setDaemon(boolean)>(1);

        $r3 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r4 = virtualinvoke $r3.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.net.NetworkLayer getNetworkLayer()>();

        $i0 = virtualinvoke r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: int getPort()>();

        $r5 = virtualinvoke r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.net.InetAddress getIpAddress()>();

        $r6 = interfaceinvoke $r4.<gov.nist.core.net.NetworkLayer: java.net.ServerSocket createServerSocket(int,int,java.net.InetAddress)>($i0, 0, $r5);

        r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.net.ServerSocket sock> = $r6;

        $r7 = virtualinvoke r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.net.InetAddress getIpAddress()>();

        $r8 = virtualinvoke $r7.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("0.0.0.0");

        if $z0 != 0 goto label1;

        $r11 = virtualinvoke r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.net.InetAddress getIpAddress()>();

        $r12 = virtualinvoke $r11.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("::0");

        if $z1 == 0 goto label2;

     label1:
        $r9 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.net.ServerSocket sock>;

        $r10 = virtualinvoke $r9.<java.net.ServerSocket: java.net.InetAddress getInetAddress()>();

        specialinvoke r0.<gov.nist.javax.sip.stack.MessageProcessor: void setIpAddress(java.net.InetAddress)>($r10);

     label2:
        r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: boolean isRunning> = 1;

        virtualinvoke r1.<java.lang.Thread: void start()>();

        return;
    }

    public void stop()
    {
        gov.nist.javax.sip.stack.TCPMessageProcessor r0;
        java.lang.Throwable r1, $r14;
        java.io.IOException r2, $r12;
        java.util.Iterator r3, r4;
        java.net.ServerSocket $r5;
        java.util.Hashtable $r6;
        java.util.Collection $r7;
        boolean $z0, $z1;
        java.util.ArrayList $r8;
        java.lang.Object $r9, $r10;
        gov.nist.javax.sip.stack.TCPMessageChannel $r11, $r13;

        r0 := @this: gov.nist.javax.sip.stack.TCPMessageProcessor;

        entermonitor r0;

     label01:
        r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: boolean isRunning> = 0;

     label02:
        $r5 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.net.ServerSocket sock>;

        virtualinvoke $r5.<java.net.ServerSocket: void close()>();

     label03:
        $r6 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.util.Hashtable tcpMessageChannels>;

        $r7 = virtualinvoke $r6.<java.util.Hashtable: java.util.Collection values()>();

        r3 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r13 = (gov.nist.javax.sip.stack.TCPMessageChannel) $r10;

        virtualinvoke $r13.<gov.nist.javax.sip.stack.TCPMessageChannel: void close()>();

     label05:
        goto label04;

     label06:
        $r14 := @caughtexception;

        r1 = $r14;

        exitmonitor r0;

        throw r1;

     label07:
        $r12 := @caughtexception;

        r2 = $r12;

     label08:
        virtualinvoke r2.<java.io.IOException: void printStackTrace()>();

     label09:
        goto label03;

     label10:
        $r8 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.util.ArrayList incomingTcpMessageChannels>;

        r4 = virtualinvoke $r8.<java.util.ArrayList: java.util.Iterator iterator()>();

     label11:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label13;

        $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (gov.nist.javax.sip.stack.TCPMessageChannel) $r9;

        virtualinvoke $r11.<gov.nist.javax.sip.stack.TCPMessageChannel: void close()>();

     label12:
        goto label11;

     label13:
        virtualinvoke r0.<java.lang.Object: void notify()>();

     label14:
        exitmonitor r0;

        return;

        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.io.IOException from label02 to label03 with label07;
        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label08 to label09 with label06;
        catch java.lang.Throwable from label10 to label11 with label06;
        catch java.lang.Throwable from label11 to label12 with label06;
        catch java.lang.Throwable from label13 to label14 with label06;
    }
}
