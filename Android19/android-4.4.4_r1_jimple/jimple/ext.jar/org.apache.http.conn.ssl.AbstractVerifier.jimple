public abstract class org.apache.http.conn.ssl.AbstractVerifier extends java.lang.Object implements org.apache.http.conn.ssl.X509HostnameVerifier
{
    private static final java.lang.String[] BAD_COUNTRY_2LDS;

    static void <clinit>()
    {
        java.lang.String[] $r0, $r1;

        $r0 = newarray (java.lang.String)[14];

        $r0[0] = "ac";

        $r0[1] = "co";

        $r0[2] = "com";

        $r0[3] = "ed";

        $r0[4] = "edu";

        $r0[5] = "go";

        $r0[6] = "gouv";

        $r0[7] = "gov";

        $r0[8] = "info";

        $r0[9] = "lg";

        $r0[10] = "ne";

        $r0[11] = "net";

        $r0[12] = "or";

        $r0[13] = "org";

        <org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] BAD_COUNTRY_2LDS> = $r0;

        $r1 = <org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] BAD_COUNTRY_2LDS>;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[])>($r1);

        return;
    }

    public void <init>()
    {
        org.apache.http.conn.ssl.AbstractVerifier r0;

        r0 := @this: org.apache.http.conn.ssl.AbstractVerifier;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean acceptableCountryWildcard(java.lang.String)
    {
        java.lang.String r0, r1;
        int i0, $i1, $i3, $i4;
        char $c2;
        java.lang.String[] $r2;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i0 < 7 goto label1;

        if i0 > 9 goto label1;

        $i1 = i0 - 3;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i1);

        if $c2 != 46 goto label1;

        $i3 = i0 - 3;

        r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(2, $i3);

        $r2 = <org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] BAD_COUNTRY_2LDS>;

        $i4 = staticinvoke <java.util.Arrays: int binarySearch(java.lang.Object[],java.lang.Object)>($r2, r1);

        if $i4 >= 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public static int countDots(java.lang.String)
    {
        java.lang.String r0;
        int i0, i1, $i2;
        char $c3;

        r0 := @parameter0: java.lang.String;

        i0 = 0;

        i1 = 0;

     label1:
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if i1 >= $i2 goto label3;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);

        if $c3 != 46 goto label2;

        i0 = i0 + 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return i0;
    }

    public static java.lang.String[] getCNs(java.security.cert.X509Certificate)
    {
        java.security.cert.X509Certificate r0;
        java.util.LinkedList r1, $r5;
        java.util.StringTokenizer r2, $r6;
        java.lang.String[] r3;
        java.lang.String r4, $r8, $r10;
        int i0, $i1, $i2;
        javax.security.auth.x500.X500Principal $r7;
        boolean $z0, $z1;

        r0 := @parameter0: java.security.cert.X509Certificate;

        $r5 = new java.util.LinkedList;

        specialinvoke $r5.<java.util.LinkedList: void <init>()>();

        r1 = $r5;

        $r6 = new java.util.StringTokenizer;

        $r7 = virtualinvoke r0.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        $r8 = virtualinvoke $r7.<javax.security.auth.x500.X500Principal: java.lang.String toString()>();

        specialinvoke $r6.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r8, ",");

        r2 = $r6;

     label1:
        $z0 = virtualinvoke r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label2;

        r4 = virtualinvoke r2.<java.util.StringTokenizer: java.lang.String nextToken()>();

        i0 = virtualinvoke r4.<java.lang.String: int indexOf(java.lang.String)>("CN=");

        if i0 < 0 goto label1;

        $i2 = i0 + 3;

        $r10 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>($i2);

        virtualinvoke r1.<java.util.LinkedList: boolean add(java.lang.Object)>($r10);

        goto label1;

     label2:
        $z1 = virtualinvoke r1.<java.util.LinkedList: boolean isEmpty()>();

        if $z1 != 0 goto label3;

        $i1 = virtualinvoke r1.<java.util.LinkedList: int size()>();

        r3 = newarray (java.lang.String)[$i1];

        virtualinvoke r1.<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>(r3);

        return r3;

     label3:
        return null;
    }

    public static java.lang.String[] getDNSSubjectAlts(java.security.cert.X509Certificate)
    {
        java.security.cert.X509Certificate r0;
        java.util.LinkedList r1, $r8;
        java.security.cert.CertificateParsingException r2, $r16;
        java.util.Collection r3, r7;
        java.lang.String[] r4;
        java.util.Iterator r5;
        java.util.List r6;
        boolean $z0, $z1;
        int $i0, $i1;
        java.lang.Object $r10, $r12, $r13;
        java.lang.Integer $r11;
        java.lang.String $r14, $r18;
        java.lang.Class $r15;
        java.util.logging.Logger $r17;
        java.util.logging.Level $r19;

        r0 := @parameter0: java.security.cert.X509Certificate;

        $r8 = new java.util.LinkedList;

        specialinvoke $r8.<java.util.LinkedList: void <init>()>();

        r1 = $r8;

     label1:
        r7 = virtualinvoke r0.<java.security.cert.X509Certificate: java.util.Collection getSubjectAlternativeNames()>();

     label2:
        r3 = r7;

     label3:
        if r3 == null goto label6;

        r5 = interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r10 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.List) $r10;

        $r12 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(0);

        $r11 = (java.lang.Integer) $r12;

        $i1 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();

        if $i1 != 2 goto label4;

        $r13 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(1);

        $r14 = (java.lang.String) $r13;

        virtualinvoke r1.<java.util.LinkedList: boolean add(java.lang.Object)>($r14);

        goto label4;

     label5:
        $r16 := @caughtexception;

        r2 = $r16;

        $r15 = class "org/apache/http/conn/ssl/AbstractVerifier";

        $r18 = virtualinvoke $r15.<java.lang.Class: java.lang.String getName()>();

        $r17 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r18);

        $r19 = <java.util.logging.Level: java.util.logging.Level FINE>;

        virtualinvoke $r17.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r19, "Error parsing certificate.", r2);

        r3 = null;

        goto label3;

     label6:
        $z0 = virtualinvoke r1.<java.util.LinkedList: boolean isEmpty()>();

        if $z0 != 0 goto label7;

        $i0 = virtualinvoke r1.<java.util.LinkedList: int size()>();

        r4 = newarray (java.lang.String)[$i0];

        virtualinvoke r1.<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>(r4);

        return r4;

     label7:
        return null;

        catch java.security.cert.CertificateParsingException from label1 to label2 with label5;
    }

    public final void verify(java.lang.String, java.security.cert.X509Certificate) throws javax.net.ssl.SSLException
    {
        org.apache.http.conn.ssl.AbstractVerifier r0;
        java.lang.String r1;
        java.security.cert.X509Certificate r2;
        java.lang.String[] $r3, $r4;

        r0 := @this: org.apache.http.conn.ssl.AbstractVerifier;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.security.cert.X509Certificate;

        $r3 = staticinvoke <org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] getCNs(java.security.cert.X509Certificate)>(r2);

        $r4 = staticinvoke <org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] getDNSSubjectAlts(java.security.cert.X509Certificate)>(r2);

        virtualinvoke r0.<org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])>(r1, $r3, $r4);

        return;
    }

    public final void verify(java.lang.String, javax.net.ssl.SSLSocket) throws java.io.IOException
    {
        org.apache.http.conn.ssl.AbstractVerifier r0;
        java.lang.String r1;
        javax.net.ssl.SSLSocket r2;
        javax.net.ssl.SSLSession $r3;
        java.security.cert.Certificate[] $r4;
        java.security.cert.Certificate $r5;
        java.security.cert.X509Certificate $r6;
        java.lang.NullPointerException $r7;

        r0 := @this: org.apache.http.conn.ssl.AbstractVerifier;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: javax.net.ssl.SSLSocket;

        if r1 != null goto label1;

        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("host to verify is null");

        throw $r7;

     label1:
        $r3 = virtualinvoke r2.<javax.net.ssl.SSLSocket: javax.net.ssl.SSLSession getSession()>();

        $r4 = interfaceinvoke $r3.<javax.net.ssl.SSLSession: java.security.cert.Certificate[] getPeerCertificates()>();

        $r5 = $r4[0];

        $r6 = (java.security.cert.X509Certificate) $r5;

        virtualinvoke r0.<org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)>(r1, $r6);

        return;
    }

    public final void verify(java.lang.String, java.lang.String[], java.lang.String[], boolean) throws javax.net.ssl.SSLException
    {
        org.apache.http.conn.ssl.AbstractVerifier r0;
        java.lang.String r1, r6, r8, r10, $r13, $r22, $r25, $r27, $r33, $r35, $r36;
        java.lang.String[] r2, r3;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.util.LinkedList r4, $r9;
        java.lang.StringBuffer r5, $r11;
        java.util.Iterator r7;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.util.Locale $r12, $r20;
        javax.net.ssl.SSLException $r14, $r32;
        java.lang.StringBuilder $r15, $r16, $r17, $r18, $r21, $r29, $r30, $r31, $r34;
        java.lang.Object $r19;

        r0 := @this: org.apache.http.conn.ssl.AbstractVerifier;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.lang.String[];

        z0 := @parameter3: boolean;

        $r9 = new java.util.LinkedList;

        specialinvoke $r9.<java.util.LinkedList: void <init>()>();

        r4 = $r9;

        if r2 == null goto label01;

        $i5 = lengthof r2;

        if $i5 <= 0 goto label01;

        $r36 = r2[0];

        if $r36 == null goto label01;

        $r35 = r2[0];

        virtualinvoke r4.<java.util.LinkedList: boolean add(java.lang.Object)>($r35);

     label01:
        if r3 == null goto label04;

        i1 = lengthof r3;

        i0 = 0;

     label02:
        if i0 >= i1 goto label04;

        r10 = r3[i0];

        if r10 == null goto label03;

        virtualinvoke r4.<java.util.LinkedList: boolean add(java.lang.Object)>(r10);

     label03:
        i0 = i0 + 1;

        goto label02;

     label04:
        $z3 = virtualinvoke r4.<java.util.LinkedList: boolean isEmpty()>();

        if $z3 == 0 goto label05;

        $r32 = new javax.net.ssl.SSLException;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Certificate for <");

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r34 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> doesn\'t contain CN or DNS subjectAlt");

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<javax.net.ssl.SSLException: void <init>(java.lang.String)>($r33);

        throw $r32;

     label05:
        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        r5 = $r11;

        $r13 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

        $r12 = <java.util.Locale: java.util.Locale ENGLISH>;

        r6 = virtualinvoke $r13.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r12);

        z1 = 0;

        r7 = virtualinvoke r4.<java.util.LinkedList: java.util.Iterator iterator()>();

     label06:
        $z4 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label10;

        $r19 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        $r25 = (java.lang.String) $r19;

        $r20 = <java.util.Locale: java.util.Locale ENGLISH>;

        r8 = virtualinvoke $r25.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r20);

        virtualinvoke r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" <");

        virtualinvoke r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r8);

        virtualinvoke r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(62);

        $z6 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label07;

        virtualinvoke r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" OR");

     label07:
        $z5 = virtualinvoke r8.<java.lang.String: boolean startsWith(java.lang.String)>("*.");

        if $z5 == 0 goto label11;

        $i4 = virtualinvoke r8.<java.lang.String: int indexOf(int,int)>(46, 2);

        if $i4 == -1 goto label11;

        $z8 = staticinvoke <org.apache.http.conn.ssl.AbstractVerifier: boolean acceptableCountryWildcard(java.lang.String)>(r8);

        if $z8 == 0 goto label11;

        $z7 = staticinvoke <org.apache.http.conn.util.InetAddressUtils: boolean isIPv4Address(java.lang.String)>(r1);

        if $z7 != 0 goto label11;

        z2 = 1;

     label08:
        if z2 == 0 goto label13;

        $r27 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int)>(1);

        z1 = virtualinvoke r6.<java.lang.String: boolean endsWith(java.lang.String)>($r27);

        if z1 == 0 goto label09;

        if z0 == 0 goto label09;

        $i2 = staticinvoke <org.apache.http.conn.ssl.AbstractVerifier: int countDots(java.lang.String)>(r6);

        $i3 = staticinvoke <org.apache.http.conn.ssl.AbstractVerifier: int countDots(java.lang.String)>(r8);

        if $i2 != $i3 goto label12;

        z1 = 1;

     label09:
        if z1 == 0 goto label06;

     label10:
        if z1 != 0 goto label14;

        $r14 = new javax.net.ssl.SSLException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hostname in certificate didn\'t match: <");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> !=");

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<javax.net.ssl.SSLException: void <init>(java.lang.String)>($r22);

        throw $r14;

     label11:
        z2 = 0;

        goto label08;

     label12:
        z1 = 0;

        goto label09;

     label13:
        z1 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        goto label09;

     label14:
        return;
    }

    public final boolean verify(java.lang.String, javax.net.ssl.SSLSession)
    {
        org.apache.http.conn.ssl.AbstractVerifier r0;
        java.lang.String r1;
        javax.net.ssl.SSLSession r2;
        java.security.cert.Certificate[] $r4;
        java.security.cert.Certificate $r5;
        java.security.cert.X509Certificate $r6;
        javax.net.ssl.SSLException $r7;

        r0 := @this: org.apache.http.conn.ssl.AbstractVerifier;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: javax.net.ssl.SSLSession;

     label1:
        $r4 = interfaceinvoke r2.<javax.net.ssl.SSLSession: java.security.cert.Certificate[] getPeerCertificates()>();

        $r5 = $r4[0];

        $r6 = (java.security.cert.X509Certificate) $r5;

        virtualinvoke r0.<org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)>(r1, $r6);

     label2:
        return 1;

     label3:
        $r7 := @caughtexception;

        return 0;

        catch javax.net.ssl.SSLException from label1 to label2 with label3;
    }
}
