public class gov.nist.javax.sip.parser.ims.PAssertedIdentityParser extends gov.nist.javax.sip.parser.AddressParametersParser implements gov.nist.javax.sip.parser.TokenTypes
{

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.ims.PAssertedIdentityParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.ims.PAssertedIdentityParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.AddressParametersParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.ims.PAssertedIdentityParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.ims.PAssertedIdentityParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.AddressParametersParser: void <init>(java.lang.String)>(r1);

        return;
    }

    public gov.nist.javax.sip.header.SIPHeader parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.ims.PAssertedIdentityParser r0;
        gov.nist.javax.sip.header.ims.PAssertedIdentityList r1, $r5;
        java.lang.Throwable r2, $r16;
        gov.nist.javax.sip.header.ims.PAssertedIdentity r3, r4, $r6, $r15;
        boolean $z0, $z2, $z4;
        gov.nist.core.LexerCore $r7, $r8, $r9, $r11, $r12, $r13, $r17;
        char $c0;

        r0 := @this: gov.nist.javax.sip.parser.ims.PAssertedIdentityParser;

        $z0 = <gov.nist.javax.sip.parser.ims.PAssertedIdentityParser: boolean debug>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ims.PAssertedIdentityParser: void dbg_enter(java.lang.String)>("AssertedIdentityParser.parse");

     label1:
        $r5 = new gov.nist.javax.sip.header.ims.PAssertedIdentityList;

        specialinvoke $r5.<gov.nist.javax.sip.header.ims.PAssertedIdentityList: void <init>()>();

        r1 = $r5;

     label2:
        virtualinvoke r0.<gov.nist.javax.sip.parser.ims.PAssertedIdentityParser: void headerName(int)>(2121);

        $r6 = new gov.nist.javax.sip.header.ims.PAssertedIdentity;

        specialinvoke $r6.<gov.nist.javax.sip.header.ims.PAssertedIdentity: void <init>()>();

        r3 = $r6;

        virtualinvoke r3.<gov.nist.javax.sip.header.ims.PAssertedIdentity: void setHeaderName(java.lang.String)>("P-Asserted-Identity");

        specialinvoke r0.<gov.nist.javax.sip.parser.AddressParametersParser: void parse(gov.nist.javax.sip.header.AddressParametersHeader)>(r3);

        virtualinvoke r1.<gov.nist.javax.sip.header.ims.PAssertedIdentityList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r3);

        $r7 = r0.<gov.nist.javax.sip.parser.ims.PAssertedIdentityParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r7.<gov.nist.core.LexerCore: void SPorHT()>();

     label3:
        $r8 = r0.<gov.nist.javax.sip.parser.ims.PAssertedIdentityParser: gov.nist.core.LexerCore lexer>;

        $c0 = virtualinvoke $r8.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c0 != 44 goto label7;

        $r12 = r0.<gov.nist.javax.sip.parser.ims.PAssertedIdentityParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r12.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(44);

        $r13 = r0.<gov.nist.javax.sip.parser.ims.PAssertedIdentityParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r13.<gov.nist.core.LexerCore: void SPorHT()>();

        $r15 = new gov.nist.javax.sip.header.ims.PAssertedIdentity;

        specialinvoke $r15.<gov.nist.javax.sip.header.ims.PAssertedIdentity: void <init>()>();

        r4 = $r15;

        specialinvoke r0.<gov.nist.javax.sip.parser.AddressParametersParser: void parse(gov.nist.javax.sip.header.AddressParametersHeader)>(r4);

        virtualinvoke r1.<gov.nist.javax.sip.header.ims.PAssertedIdentityList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r4);

        $r17 = r0.<gov.nist.javax.sip.parser.ims.PAssertedIdentityParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r17.<gov.nist.core.LexerCore: void SPorHT()>();

     label4:
        goto label3;

     label5:
        $r16 := @caughtexception;

        r2 = $r16;

        $z4 = <gov.nist.javax.sip.parser.ims.PAssertedIdentityParser: boolean debug>;

        if $z4 == 0 goto label6;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ims.PAssertedIdentityParser: void dbg_leave(java.lang.String)>("AssertedIdentityParser.parse");

     label6:
        throw r2;

     label7:
        $r9 = r0.<gov.nist.javax.sip.parser.ims.PAssertedIdentityParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r9.<gov.nist.core.LexerCore: void SPorHT()>();

        $r11 = r0.<gov.nist.javax.sip.parser.ims.PAssertedIdentityParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r11.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(10);

     label8:
        $z2 = <gov.nist.javax.sip.parser.ims.PAssertedIdentityParser: boolean debug>;

        if $z2 == 0 goto label9;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ims.PAssertedIdentityParser: void dbg_leave(java.lang.String)>("AssertedIdentityParser.parse");

     label9:
        return r1;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label7 to label8 with label5;
    }
}
