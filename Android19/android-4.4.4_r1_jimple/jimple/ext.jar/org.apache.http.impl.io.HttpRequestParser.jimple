public class org.apache.http.impl.io.HttpRequestParser extends org.apache.http.impl.io.AbstractMessageParser
{
    private final org.apache.http.util.CharArrayBuffer lineBuf;
    private final org.apache.http.HttpRequestFactory requestFactory;

    public void <init>(org.apache.http.io.SessionInputBuffer, org.apache.http.message.LineParser, org.apache.http.HttpRequestFactory, org.apache.http.params.HttpParams)
    {
        org.apache.http.impl.io.HttpRequestParser r0;
        org.apache.http.io.SessionInputBuffer r1;
        org.apache.http.message.LineParser r2;
        org.apache.http.HttpRequestFactory r3;
        org.apache.http.params.HttpParams r4;
        org.apache.http.util.CharArrayBuffer $r5;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: org.apache.http.impl.io.HttpRequestParser;

        r1 := @parameter0: org.apache.http.io.SessionInputBuffer;

        r2 := @parameter1: org.apache.http.message.LineParser;

        r3 := @parameter2: org.apache.http.HttpRequestFactory;

        r4 := @parameter3: org.apache.http.params.HttpParams;

        specialinvoke r0.<org.apache.http.impl.io.AbstractMessageParser: void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.message.LineParser,org.apache.http.params.HttpParams)>(r1, r2, r4);

        if r3 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Request factory may not be null");

        throw $r6;

     label1:
        r0.<org.apache.http.impl.io.HttpRequestParser: org.apache.http.HttpRequestFactory requestFactory> = r3;

        $r5 = new org.apache.http.util.CharArrayBuffer;

        specialinvoke $r5.<org.apache.http.util.CharArrayBuffer: void <init>(int)>(128);

        r0.<org.apache.http.impl.io.HttpRequestParser: org.apache.http.util.CharArrayBuffer lineBuf> = $r5;

        return;
    }

    protected org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer) throws java.io.IOException, org.apache.http.HttpException, org.apache.http.ParseException
    {
        org.apache.http.impl.io.HttpRequestParser r0;
        org.apache.http.io.SessionInputBuffer r1;
        org.apache.http.message.ParserCursor r2, $r6;
        org.apache.http.RequestLine r3;
        org.apache.http.util.CharArrayBuffer $r4, $r5, $r7, $r8;
        int $i0, $i1;
        org.apache.http.message.LineParser $r9;
        org.apache.http.HttpRequestFactory $r10;
        org.apache.http.HttpRequest $r11;
        org.apache.http.ConnectionClosedException $r12;

        r0 := @this: org.apache.http.impl.io.HttpRequestParser;

        r1 := @parameter0: org.apache.http.io.SessionInputBuffer;

        $r4 = r0.<org.apache.http.impl.io.HttpRequestParser: org.apache.http.util.CharArrayBuffer lineBuf>;

        virtualinvoke $r4.<org.apache.http.util.CharArrayBuffer: void clear()>();

        $r5 = r0.<org.apache.http.impl.io.HttpRequestParser: org.apache.http.util.CharArrayBuffer lineBuf>;

        $i0 = interfaceinvoke r1.<org.apache.http.io.SessionInputBuffer: int readLine(org.apache.http.util.CharArrayBuffer)>($r5);

        if $i0 != -1 goto label1;

        $r12 = new org.apache.http.ConnectionClosedException;

        specialinvoke $r12.<org.apache.http.ConnectionClosedException: void <init>(java.lang.String)>("Client closed connection");

        throw $r12;

     label1:
        $r6 = new org.apache.http.message.ParserCursor;

        $r7 = r0.<org.apache.http.impl.io.HttpRequestParser: org.apache.http.util.CharArrayBuffer lineBuf>;

        $i1 = virtualinvoke $r7.<org.apache.http.util.CharArrayBuffer: int length()>();

        specialinvoke $r6.<org.apache.http.message.ParserCursor: void <init>(int,int)>(0, $i1);

        r2 = $r6;

        $r9 = r0.<org.apache.http.impl.io.HttpRequestParser: org.apache.http.message.LineParser lineParser>;

        $r8 = r0.<org.apache.http.impl.io.HttpRequestParser: org.apache.http.util.CharArrayBuffer lineBuf>;

        r3 = interfaceinvoke $r9.<org.apache.http.message.LineParser: org.apache.http.RequestLine parseRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>($r8, r2);

        $r10 = r0.<org.apache.http.impl.io.HttpRequestParser: org.apache.http.HttpRequestFactory requestFactory>;

        $r11 = interfaceinvoke $r10.<org.apache.http.HttpRequestFactory: org.apache.http.HttpRequest newHttpRequest(org.apache.http.RequestLine)>(r3);

        return $r11;
    }
}
