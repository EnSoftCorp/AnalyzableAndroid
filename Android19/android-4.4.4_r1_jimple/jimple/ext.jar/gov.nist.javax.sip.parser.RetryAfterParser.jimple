public class gov.nist.javax.sip.parser.RetryAfterParser extends gov.nist.javax.sip.parser.HeaderParser
{

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.RetryAfterParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.RetryAfterParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.RetryAfterParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.RetryAfterParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(java.lang.String)>(r1);

        return;
    }

    public gov.nist.javax.sip.header.SIPHeader parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.RetryAfterParser r0;
        gov.nist.javax.sip.header.RetryAfter r1, $r11;
        java.lang.Throwable r2, $r42;
        java.lang.String r3, r6, r7, $r33, $r37, $r39, $r44, $r47, $r50;
        javax.sip.InvalidArgumentException r4, r8, $r38, $r45;
        java.lang.NumberFormatException r5, r9, $r41, $r49;
        boolean $z0, $z1, $z2, $z3;
        gov.nist.core.LexerCore $r10, $r12, $r13, $r14, $r15, $r16, $r17, $r20, $r21, $r24, $r25, $r26, $r27, $r29, $r31, $r34, $r35, $r36, $r40;
        int $i0, $i3;
        char $c1, $c2;
        gov.nist.core.Token $r22, $r28;
        java.text.ParseException $r43, $r46, $r48, $r51;

        r0 := @this: gov.nist.javax.sip.parser.RetryAfterParser;

        $z0 = <gov.nist.javax.sip.parser.RetryAfterParser: boolean debug>;

        if $z0 == 0 goto label01;

        virtualinvoke r0.<gov.nist.javax.sip.parser.RetryAfterParser: void dbg_enter(java.lang.String)>("RetryAfterParser.parse");

     label01:
        $r11 = new gov.nist.javax.sip.header.RetryAfter;

        specialinvoke $r11.<gov.nist.javax.sip.header.RetryAfter: void <init>()>();

        r1 = $r11;

     label02:
        virtualinvoke r0.<gov.nist.javax.sip.parser.RetryAfterParser: void headerName(int)>(2073);

        $r10 = r0.<gov.nist.javax.sip.parser.RetryAfterParser: gov.nist.core.LexerCore lexer>;

        r3 = virtualinvoke $r10.<gov.nist.core.LexerCore: java.lang.String number()>();

     label03:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

        virtualinvoke r1.<gov.nist.javax.sip.header.RetryAfter: void setRetryAfter(int)>($i0);

     label04:
        $r13 = r0.<gov.nist.javax.sip.parser.RetryAfterParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r13.<gov.nist.core.LexerCore: void SPorHT()>();

        $r12 = r0.<gov.nist.javax.sip.parser.RetryAfterParser: gov.nist.core.LexerCore lexer>;

        $c1 = virtualinvoke $r12.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c1 != 40 goto label05;

        $r40 = r0.<gov.nist.javax.sip.parser.RetryAfterParser: gov.nist.core.LexerCore lexer>;

        $r39 = virtualinvoke $r40.<gov.nist.core.LexerCore: java.lang.String comment()>();

        virtualinvoke r1.<gov.nist.javax.sip.header.RetryAfter: void setComment(java.lang.String)>($r39);

     label05:
        $r14 = r0.<gov.nist.javax.sip.parser.RetryAfterParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r14.<gov.nist.core.LexerCore: void SPorHT()>();

     label06:
        $r15 = r0.<gov.nist.javax.sip.parser.RetryAfterParser: gov.nist.core.LexerCore lexer>;

        $c2 = virtualinvoke $r15.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c2 != 59 goto label22;

        $r16 = r0.<gov.nist.javax.sip.parser.RetryAfterParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r16.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(59);

        $r17 = r0.<gov.nist.javax.sip.parser.RetryAfterParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r17.<gov.nist.core.LexerCore: void SPorHT()>();

        $r20 = r0.<gov.nist.javax.sip.parser.RetryAfterParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r20.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r21 = r0.<gov.nist.javax.sip.parser.RetryAfterParser: gov.nist.core.LexerCore lexer>;

        $r22 = virtualinvoke $r21.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        r6 = virtualinvoke $r22.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        $z2 = virtualinvoke r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("duration");

        if $z2 == 0 goto label20;

        $r31 = r0.<gov.nist.javax.sip.parser.RetryAfterParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r31.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(61);

        $r36 = r0.<gov.nist.javax.sip.parser.RetryAfterParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r36.<gov.nist.core.LexerCore: void SPorHT()>();

        $r35 = r0.<gov.nist.javax.sip.parser.RetryAfterParser: gov.nist.core.LexerCore lexer>;

        r7 = virtualinvoke $r35.<gov.nist.core.LexerCore: java.lang.String number()>();

     label07:
        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r7);

        virtualinvoke r1.<gov.nist.javax.sip.header.RetryAfter: void setDuration(int)>($i3);

     label08:
        $r34 = r0.<gov.nist.javax.sip.parser.RetryAfterParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r34.<gov.nist.core.LexerCore: void SPorHT()>();

     label09:
        goto label06;

     label10:
        $r42 := @caughtexception;

        r2 = $r42;

        $z3 = <gov.nist.javax.sip.parser.RetryAfterParser: boolean debug>;

        if $z3 == 0 goto label11;

        virtualinvoke r0.<gov.nist.javax.sip.parser.RetryAfterParser: void dbg_leave(java.lang.String)>("RetryAfterParser.parse");

     label11:
        throw r2;

     label12:
        $r41 := @caughtexception;

        r5 = $r41;

     label13:
        $r47 = virtualinvoke r5.<java.lang.NumberFormatException: java.lang.String getMessage()>();

        $r46 = virtualinvoke r0.<gov.nist.javax.sip.parser.RetryAfterParser: java.text.ParseException createParseException(java.lang.String)>($r47);

        throw $r46;

     label14:
        $r45 := @caughtexception;

        r4 = $r45;

     label15:
        $r44 = virtualinvoke r4.<javax.sip.InvalidArgumentException: java.lang.String getMessage()>();

        $r48 = virtualinvoke r0.<gov.nist.javax.sip.parser.RetryAfterParser: java.text.ParseException createParseException(java.lang.String)>($r44);

        throw $r48;

     label16:
        $r49 := @caughtexception;

        r9 = $r49;

     label17:
        $r50 = virtualinvoke r9.<java.lang.NumberFormatException: java.lang.String getMessage()>();

        $r51 = virtualinvoke r0.<gov.nist.javax.sip.parser.RetryAfterParser: java.text.ParseException createParseException(java.lang.String)>($r50);

        throw $r51;

     label18:
        $r38 := @caughtexception;

        r8 = $r38;

     label19:
        $r37 = virtualinvoke r8.<javax.sip.InvalidArgumentException: java.lang.String getMessage()>();

        $r43 = virtualinvoke r0.<gov.nist.javax.sip.parser.RetryAfterParser: java.text.ParseException createParseException(java.lang.String)>($r37);

        throw $r43;

     label20:
        $r25 = r0.<gov.nist.javax.sip.parser.RetryAfterParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r25.<gov.nist.core.LexerCore: void SPorHT()>();

        $r26 = r0.<gov.nist.javax.sip.parser.RetryAfterParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r26.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(61);

        $r24 = r0.<gov.nist.javax.sip.parser.RetryAfterParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r24.<gov.nist.core.LexerCore: void SPorHT()>();

        $r29 = r0.<gov.nist.javax.sip.parser.RetryAfterParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r29.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r27 = r0.<gov.nist.javax.sip.parser.RetryAfterParser: gov.nist.core.LexerCore lexer>;

        $r28 = virtualinvoke $r27.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        $r33 = virtualinvoke $r28.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        virtualinvoke r1.<gov.nist.javax.sip.header.RetryAfter: void setParameter(java.lang.String,java.lang.String)>(r6, $r33);

     label21:
        goto label08;

     label22:
        $z1 = <gov.nist.javax.sip.parser.RetryAfterParser: boolean debug>;

        if $z1 == 0 goto label23;

        virtualinvoke r0.<gov.nist.javax.sip.parser.RetryAfterParser: void dbg_leave(java.lang.String)>("RetryAfterParser.parse");

     label23:
        return r1;

        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.NumberFormatException from label03 to label04 with label12;
        catch javax.sip.InvalidArgumentException from label03 to label04 with label14;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.NumberFormatException from label07 to label08 with label16;
        catch javax.sip.InvalidArgumentException from label07 to label08 with label18;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label13 to label14 with label10;
        catch java.lang.Throwable from label15 to label16 with label10;
        catch java.lang.Throwable from label17 to label18 with label10;
        catch java.lang.Throwable from label19 to label20 with label10;
        catch java.lang.Throwable from label20 to label21 with label10;
    }
}
