public class org.apache.http.client.protocol.RequestDefaultHeaders extends java.lang.Object implements org.apache.http.HttpRequestInterceptor
{

    public void <init>()
    {
        org.apache.http.client.protocol.RequestDefaultHeaders r0;

        r0 := @this: org.apache.http.client.protocol.RequestDefaultHeaders;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void process(org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException
    {
        org.apache.http.client.protocol.RequestDefaultHeaders r0;
        org.apache.http.HttpRequest r1;
        org.apache.http.protocol.HttpContext r2;
        java.util.Collection r3;
        java.util.Iterator r4;
        org.apache.http.params.HttpParams $r5;
        java.lang.Object $r6, $r7;
        boolean $z0;
        org.apache.http.Header $r8;
        java.lang.IllegalArgumentException $r9;

        r0 := @this: org.apache.http.client.protocol.RequestDefaultHeaders;

        r1 := @parameter0: org.apache.http.HttpRequest;

        r2 := @parameter1: org.apache.http.protocol.HttpContext;

        if r1 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP request may not be null");

        throw $r9;

     label1:
        $r5 = interfaceinvoke r1.<org.apache.http.HttpRequest: org.apache.http.params.HttpParams getParams()>();

        $r6 = interfaceinvoke $r5.<org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>("http.default-headers");

        r3 = (java.util.Collection) $r6;

        if r3 == null goto label3;

        r4 = interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (org.apache.http.Header) $r7;

        interfaceinvoke r1.<org.apache.http.HttpRequest: void addHeader(org.apache.http.Header)>($r8);

        goto label2;

     label3:
        return;
    }
}
