public final class com.android.commands.pm.Pm extends java.lang.Object
{
    private static final java.lang.String PM_NOT_RUNNING_ERR;
    private java.lang.String[] mArgs;
    private java.lang.String mCurArgData;
    private int mNextArg;
    android.content.pm.IPackageManager mPm;
    private java.util.WeakHashMap mResourceCache;
    android.os.IUserManager mUm;

    public void <init>()
    {
        com.android.commands.pm.Pm r0;
        java.util.WeakHashMap $r1;

        r0 := @this: com.android.commands.pm.Pm;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.WeakHashMap;

        specialinvoke $r1.<java.util.WeakHashMap: void <init>()>();

        r0.<com.android.commands.pm.Pm: java.util.WeakHashMap mResourceCache> = $r1;

        return;
    }

    private boolean deletePackage(java.lang.String, int)
    {
        com.android.commands.pm.Pm r0;
        java.lang.String r1, $r10;
        int i0;
        com.android.commands.pm.Pm$PackageDeleteObserver r2, $r6;
        android.os.RemoteException r3, $r8;
        java.lang.Throwable r4, $r11;
        boolean z0, $z1;
        android.content.pm.IPackageManager $r7;
        java.io.PrintStream $r9, $r12;
        java.lang.InterruptedException $r13;

        r0 := @this: com.android.commands.pm.Pm;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r6 = new com.android.commands.pm.Pm$PackageDeleteObserver;

        specialinvoke $r6.<com.android.commands.pm.Pm$PackageDeleteObserver: void <init>(com.android.commands.pm.Pm)>(r0);

        r2 = $r6;

     label01:
        $r7 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        interfaceinvoke $r7.<android.content.pm.IPackageManager: void deletePackageAsUser(java.lang.String,android.content.pm.IPackageDeleteObserver,int,int)>(r1, r2, 0, i0);

        entermonitor r2;

     label02:
        z0 = r2.<com.android.commands.pm.Pm$PackageDeleteObserver: boolean finished>;

     label03:
        if z0 != 0 goto label07;

     label04:
        virtualinvoke r2.<java.lang.Object: void wait()>();

     label05:
        goto label02;

     label06:
        $r13 := @caughtexception;

        goto label02;

     label07:
        exitmonitor r2;

     label08:
        $z1 = r2.<com.android.commands.pm.Pm$PackageDeleteObserver: boolean result>;

        return $z1;

     label09:
        $r11 := @caughtexception;

        r4 = $r11;

     label10:
        exitmonitor r2;

     label11:
        throw r4;

     label12:
        $r8 := @caughtexception;

        r3 = $r8;

        $r9 = <java.lang.System: java.io.PrintStream err>;

        $r10 = virtualinvoke r3.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r10);

        $r12 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

        goto label08;

        catch android.os.RemoteException from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.InterruptedException from label04 to label05 with label06;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch android.os.RemoteException from label11 to label12 with label12;
    }

    private void displayPackageFilePath(java.lang.String)
    {
        com.android.commands.pm.Pm r0;
        java.lang.String r1, $r8, $r12;
        android.os.RemoteException r2, $r10;
        android.content.pm.PackageInfo r3;
        android.content.pm.IPackageManager $r4;
        android.content.pm.ApplicationInfo $r5, $r7;
        java.io.PrintStream $r6, $r9, $r11, $r13;

        r0 := @this: com.android.commands.pm.Pm;

        r1 := @parameter0: java.lang.String;

     label1:
        $r4 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        r3 = interfaceinvoke $r4.<android.content.pm.IPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>(r1, 0, 0);

     label2:
        if r3 == null goto label4;

     label3:
        $r5 = r3.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        if $r5 == null goto label4;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void print(java.lang.String)>("package:");

        $r9 = <java.lang.System: java.io.PrintStream out>;

        $r7 = r3.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r8 = $r7.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r8);

     label4:
        return;

     label5:
        $r10 := @caughtexception;

        r2 = $r10;

        $r11 = <java.lang.System: java.io.PrintStream err>;

        $r12 = virtualinvoke r2.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r12);

        $r13 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

        return;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    private void doListPermissions(java.util.ArrayList, boolean, boolean, boolean, int, int) throws android.os.RemoteException
    {
        com.android.commands.pm.Pm r0;
        java.util.ArrayList r1;
        boolean z0, z1, z2, z3;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        java.lang.String r2, r3, r9, r10, r14, $r19, $r25, $r27, $r30, $r35, $r41, $r43, $r52, $r54, $r55, $r58, $r60, $r62, $r63, $r71, $r73, $r77, $r79, $r83, $r84, $r92, $r97, $r98, $r101, $r105, $r111, $r112;
        java.util.List r4;
        android.content.pm.PermissionInfo r5;
        java.lang.StringBuilder r6, r11, r15, $r22, $r23, $r24, $r26, $r28, $r29, $r32, $r33, $r36, $r37, $r38, $r40, $r42, $r45, $r46, $r48, $r50, $r51, $r53, $r61, $r64, $r65, $r69, $r70, $r72, $r74, $r76, $r78, $r80, $r82, $r85, $r88, $r90, $r91, $r94, $r96, $r99, $r100, $r103, $r108, $r110, $r113;
        java.io.PrintStream r7, r8, r12, $r21, $r31, $r39, $r47, $r49, $r56, $r67, $r68, $r81, $r87, $r95, $r102, $r106, $r107;
        android.content.pm.PermissionGroupInfo r13;
        java.lang.Object $r16, $r17, $r20;
        android.content.pm.IPackageManager $r18, $r75;
        android.content.res.Resources $r34, $r57, $r89, $r104;
        java.lang.CharSequence $r44, $r59, $r66, $r86, $r93, $r109;

        r0 := @this: com.android.commands.pm.Pm;

        r1 := @parameter0: java.util.ArrayList;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        i2 = 0;

     label01:
        $i6 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i2 >= $i6 goto label24;

        $r16 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r2 = (java.lang.String) $r16;

        r3 = "";

        if z0 == 0 goto label04;

        if i2 <= 0 goto label02;

        $r106 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r106.<java.io.PrintStream: void println(java.lang.String)>("");

     label02:
        if r2 == null goto label11;

        $r75 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        r13 = interfaceinvoke $r75.<android.content.pm.IPackageManager: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)>(r2, 0);

        if z2 == 0 goto label08;

        $r104 = specialinvoke r0.<com.android.commands.pm.Pm: android.content.res.Resources getResources(android.content.pm.PackageItemInfo)>(r13);

        if $r104 == null goto label07;

        $r107 = <java.lang.System: java.io.PrintStream out>;

        $r108 = new java.lang.StringBuilder;

        specialinvoke $r108.<java.lang.StringBuilder: void <init>()>();

        $i14 = r13.<android.content.pm.PermissionGroupInfo: int labelRes>;

        $r109 = r13.<android.content.pm.PermissionGroupInfo: java.lang.CharSequence nonLocalizedLabel>;

        $r111 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String loadText(android.content.pm.PackageItemInfo,int,java.lang.CharSequence)>(r13, $i14, $r109);

        $r110 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r111);

        $r113 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r112 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r107.<java.io.PrintStream: void print(java.lang.String)>($r112);

     label03:
        r3 = "  ";

     label04:
        $r18 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        $r17 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r19 = (java.lang.String) $r17;

        r4 = interfaceinvoke $r18.<android.content.pm.IPackageManager: java.util.List queryPermissionsByGroup(java.lang.String,int)>($r19, 0);

        i3 = interfaceinvoke r4.<java.util.List: int size()>();

        z3 = 1;

        i4 = 0;

     label05:
        if i4 >= i3 goto label22;

        $r20 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i4);

        r5 = (android.content.pm.PermissionInfo) $r20;

        if z0 == 0 goto label14;

        if r2 != null goto label14;

        $r62 = r5.<android.content.pm.PermissionInfo: java.lang.String group>;

        if $r62 == null goto label14;

     label06:
        i4 = i4 + 1;

        goto label05;

     label07:
        $r102 = <java.lang.System: java.io.PrintStream out>;

        $r103 = new java.lang.StringBuilder;

        specialinvoke $r103.<java.lang.StringBuilder: void <init>()>();

        $r101 = r13.<android.content.pm.PermissionGroupInfo: java.lang.String name>;

        $r100 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r101);

        $r99 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r98 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r102.<java.io.PrintStream: void print(java.lang.String)>($r98);

        goto label03;

     label08:
        r12 = <java.lang.System: java.io.PrintStream out>;

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        r15 = $r70;

        if z1 == 0 goto label10;

        r14 = "+ ";

     label09:
        $r69 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        $r72 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("group:");

        $r71 = r13.<android.content.pm.PermissionGroupInfo: java.lang.String name>;

        $r82 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r12.<java.io.PrintStream: void println(java.lang.String)>($r83);

        if z1 == 0 goto label03;

        $r81 = <java.lang.System: java.io.PrintStream out>;

        $r80 = new java.lang.StringBuilder;

        specialinvoke $r80.<java.lang.StringBuilder: void <init>()>();

        $r78 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  package:");

        $r79 = r13.<android.content.pm.PermissionGroupInfo: java.lang.String packageName>;

        $r76 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r79);

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r81.<java.io.PrintStream: void println(java.lang.String)>($r77);

        $r89 = specialinvoke r0.<com.android.commands.pm.Pm: android.content.res.Resources getResources(android.content.pm.PackageItemInfo)>(r13);

        if $r89 == null goto label03;

        $r87 = <java.lang.System: java.io.PrintStream out>;

        $r90 = new java.lang.StringBuilder;

        specialinvoke $r90.<java.lang.StringBuilder: void <init>()>();

        $r88 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  label:");

        $i12 = r13.<android.content.pm.PermissionGroupInfo: int labelRes>;

        $r86 = r13.<android.content.pm.PermissionGroupInfo: java.lang.CharSequence nonLocalizedLabel>;

        $r84 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String loadText(android.content.pm.PackageItemInfo,int,java.lang.CharSequence)>(r13, $i12, $r86);

        $r85 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r84);

        $r97 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r87.<java.io.PrintStream: void println(java.lang.String)>($r97);

        $r95 = <java.lang.System: java.io.PrintStream out>;

        $r96 = new java.lang.StringBuilder;

        specialinvoke $r96.<java.lang.StringBuilder: void <init>()>();

        $r94 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  description:");

        $i13 = r13.<android.content.pm.PermissionGroupInfo: int descriptionRes>;

        $r93 = r13.<android.content.pm.PermissionGroupInfo: java.lang.CharSequence nonLocalizedDescription>;

        $r92 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String loadText(android.content.pm.PackageItemInfo,int,java.lang.CharSequence)>(r13, $i13, $r93);

        $r91 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r92);

        $r105 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r95.<java.io.PrintStream: void println(java.lang.String)>($r105);

        goto label03;

     label10:
        r14 = "";

        goto label09;

     label11:
        r8 = <java.lang.System: java.io.PrintStream out>;

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        r11 = $r65;

        if z1 == 0 goto label13;

        if z2 != 0 goto label13;

        r10 = "+ ";

     label12:
        $r64 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r74 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ungrouped:");

        $r73 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r8.<java.io.PrintStream: void println(java.lang.String)>($r73);

        goto label03;

     label13:
        r10 = "";

        goto label12;

     label14:
        $i7 = r5.<android.content.pm.PermissionInfo: int protectionLevel>;

        i5 = 15 & $i7;

        if i5 < i0 goto label06;

        if i5 > i1 goto label06;

        if z2 == 0 goto label18;

        if z3 == 0 goto label16;

        z3 = 0;

     label15:
        $r57 = specialinvoke r0.<com.android.commands.pm.Pm: android.content.res.Resources getResources(android.content.pm.PackageItemInfo)>(r5);

        if $r57 == null goto label17;

        $r68 = <java.lang.System: java.io.PrintStream out>;

        $i11 = r5.<android.content.pm.PermissionInfo: int labelRes>;

        $r66 = r5.<android.content.pm.PermissionInfo: java.lang.CharSequence nonLocalizedLabel>;

        $r63 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String loadText(android.content.pm.PackageItemInfo,int,java.lang.CharSequence)>(r5, $i11, $r66);

        virtualinvoke $r68.<java.io.PrintStream: void print(java.lang.String)>($r63);

        goto label06;

     label16:
        $r56 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r56.<java.io.PrintStream: void print(java.lang.String)>(", ");

        goto label15;

     label17:
        $r67 = <java.lang.System: java.io.PrintStream out>;

        $r58 = r5.<android.content.pm.PermissionInfo: java.lang.String name>;

        virtualinvoke $r67.<java.io.PrintStream: void print(java.lang.String)>($r58);

        goto label06;

     label18:
        r7 = <java.lang.System: java.io.PrintStream out>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        r6 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        if z1 == 0 goto label21;

        r9 = "+ ";

     label19:
        $r22 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("permission:");

        $r27 = r5.<android.content.pm.PermissionInfo: java.lang.String name>;

        $r28 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r25 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r7.<java.io.PrintStream: void println(java.lang.String)>($r25);

        if z1 == 0 goto label06;

        $r31 = <java.lang.System: java.io.PrintStream out>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r29 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  package:");

        $r30 = r5.<android.content.pm.PermissionInfo: java.lang.String packageName>;

        $r36 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>($r35);

        $r34 = specialinvoke r0.<com.android.commands.pm.Pm: android.content.res.Resources getResources(android.content.pm.PackageItemInfo)>(r5);

        if $r34 == null goto label20;

        $r47 = <java.lang.System: java.io.PrintStream out>;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  label:");

        $i9 = r5.<android.content.pm.PermissionInfo: int labelRes>;

        $r44 = r5.<android.content.pm.PermissionInfo: java.lang.CharSequence nonLocalizedLabel>;

        $r52 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String loadText(android.content.pm.PackageItemInfo,int,java.lang.CharSequence)>(r5, $i9, $r44);

        $r53 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r47.<java.io.PrintStream: void println(java.lang.String)>($r54);

        $r49 = <java.lang.System: java.io.PrintStream out>;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  description:");

        $i10 = r5.<android.content.pm.PermissionInfo: int descriptionRes>;

        $r59 = r5.<android.content.pm.PermissionInfo: java.lang.CharSequence nonLocalizedDescription>;

        $r60 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String loadText(android.content.pm.PackageItemInfo,int,java.lang.CharSequence)>(r5, $i10, $r59);

        $r61 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

        $r55 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r49.<java.io.PrintStream: void println(java.lang.String)>($r55);

     label20:
        $r39 = <java.lang.System: java.io.PrintStream out>;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  protectionLevel:");

        $i8 = r5.<android.content.pm.PermissionInfo: int protectionLevel>;

        $r43 = staticinvoke <android.content.pm.PermissionInfo: java.lang.String protectionToString(int)>($i8);

        $r42 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r39.<java.io.PrintStream: void println(java.lang.String)>($r41);

        goto label06;

     label21:
        r9 = "";

        goto label19;

     label22:
        if z2 == 0 goto label23;

        $r21 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>("");

     label23:
        i2 = i2 + 1;

        goto label01;

     label24:
        return;
    }

    private static java.lang.String enabledSettingToString(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            default: goto label1;
        };

     label1:
        return "unknown";

     label2:
        return "default";

     label3:
        return "enabled";

     label4:
        return "disabled";

     label5:
        return "disabled-user";

     label6:
        return "disabled-until-used";
    }

    private java.util.List getInstalledPackages(android.content.pm.IPackageManager, int, int) throws android.os.RemoteException
    {
        com.android.commands.pm.Pm r0;
        android.content.pm.IPackageManager r1;
        int i0, i1;
        android.content.pm.ParceledListSlice $r2;
        java.util.List $r3;

        r0 := @this: com.android.commands.pm.Pm;

        r1 := @parameter0: android.content.pm.IPackageManager;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = interfaceinvoke r1.<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice getInstalledPackages(int,int)>(i0, i1);

        $r3 = virtualinvoke $r2.<android.content.pm.ParceledListSlice: java.util.List getList()>();

        return $r3;
    }

    private android.content.res.Resources getResources(android.content.pm.PackageItemInfo)
    {
        com.android.commands.pm.Pm r0;
        android.content.pm.PackageItemInfo r1;
        android.content.res.Resources r2, r6, $r14;
        android.os.RemoteException r3, $r17, $r21;
        android.content.pm.ApplicationInfo r4;
        android.content.res.AssetManager r5, $r12;
        java.lang.String $r7, $r10, $r13, $r16, $r19;
        java.util.WeakHashMap $r8, $r15;
        java.lang.Object $r9;
        android.content.pm.IPackageManager $r11;
        java.io.PrintStream $r20, $r22;

        r0 := @this: com.android.commands.pm.Pm;

        r1 := @parameter0: android.content.pm.PackageItemInfo;

        $r8 = r0.<com.android.commands.pm.Pm: java.util.WeakHashMap mResourceCache>;

        $r7 = r1.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $r9 = virtualinvoke $r8.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>($r7);

        r2 = (android.content.res.Resources) $r9;

        if r2 == null goto label1;

        return r2;

     label1:
        $r11 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        $r10 = r1.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        r4 = interfaceinvoke $r11.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>($r10, 0, 0);

        $r12 = new android.content.res.AssetManager;

        specialinvoke $r12.<android.content.res.AssetManager: void <init>()>();

        r5 = $r12;

        $r13 = r4.<android.content.pm.ApplicationInfo: java.lang.String publicSourceDir>;

        virtualinvoke r5.<android.content.res.AssetManager: int addAssetPath(java.lang.String)>($r13);

        $r14 = new android.content.res.Resources;

        specialinvoke $r14.<android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>(r5, null, null);

        r6 = $r14;

     label2:
        $r15 = r0.<com.android.commands.pm.Pm: java.util.WeakHashMap mResourceCache>;

        $r16 = r1.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        virtualinvoke $r15.<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, r6);

     label3:
        return r6;

     label4:
        $r17 := @caughtexception;

        r3 = $r17;

     label5:
        $r20 = <java.lang.System: java.io.PrintStream err>;

        $r19 = virtualinvoke r3.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>($r19);

        $r22 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

        return null;

     label6:
        $r21 := @caughtexception;

        r3 = $r21;

        goto label5;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.RemoteException from label2 to label3 with label6;
    }

    private byte[] hexToBytes(java.lang.String)
    {
        com.android.commands.pm.Pm r0;
        java.lang.String r1, $r3;
        byte[] r2;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        byte $b8;
        java.io.PrintStream $r4;

        r0 := @this: com.android.commands.pm.Pm;

        r1 := @parameter0: java.lang.String;

        r2 = null;

        if r1 != null goto label2;

     label1:
        return r2;

     label2:
        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $i4 = i0 % 2;

        if $i4 == 0 goto label3;

        $r4 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r4.<java.io.PrintStream: void print(java.lang.String)>("Invalid length; must be multiple of 2");

        return null;

     label3:
        $i5 = i0 / 2;

        r2 = newarray (byte)[$i5];

        i1 = 0;

        i2 = 0;

     label4:
        if i1 >= i0 goto label1;

        i3 = i2 + 1;

        $i6 = i1 + 2;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i1, $i6);

        $i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r3, 16);

        $b8 = (byte) $i7;

        r2[i2] = $b8;

        i1 = i1 + 2;

        i2 = i3;

        goto label4;
    }

    private java.lang.String installFailureToString(int)
    {
        com.android.commands.pm.Pm r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7;
        java.lang.reflect.Field[] r1;
        java.lang.reflect.Field r2;
        java.lang.String r3, $r6;
        java.lang.Class $r5, $r7, $r8;
        boolean $z0, $z1;
        java.lang.IllegalAccessException $r9;

        r0 := @this: com.android.commands.pm.Pm;

        i0 := @parameter0: int;

        $r5 = class "android/content/pm/PackageManager";

        r1 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Field[] getFields()>();

        i1 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i1 goto label6;

        r2 = r1[i2];

        $r7 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.Class getType()>();

        $r8 = <java.lang.Integer: java.lang.Class TYPE>;

        if $r7 != $r8 goto label5;

        i3 = virtualinvoke r2.<java.lang.reflect.Field: int getModifiers()>();

        $i6 = i3 & 16;

        if $i6 == 0 goto label5;

        $i5 = i3 & 1;

        if $i5 == 0 goto label5;

        $i7 = i3 & 8;

        if $i7 == 0 goto label5;

        r3 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.String getName()>();

        $z0 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("INSTALL_FAILED_");

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("INSTALL_PARSE_FAILED_");

        if $z1 == 0 goto label5;

     label2:
        i4 = virtualinvoke r2.<java.lang.reflect.Field: int getInt(java.lang.Object)>(null);

     label3:
        if i0 != i4 goto label5;

        return r3;

     label4:
        $r9 := @caughtexception;

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        return $r6;

        catch java.lang.IllegalAccessException from label2 to label3 with label4;
    }

    private static boolean isNumber(java.lang.String)
    {
        java.lang.String r0;
        java.lang.NumberFormatException $r2;

        r0 := @parameter0: java.lang.String;

     label1:
        staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r0);

     label2:
        return 1;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private java.lang.String loadText(android.content.pm.PackageItemInfo, int, java.lang.CharSequence)
    {
        com.android.commands.pm.Pm r0;
        android.content.pm.PackageItemInfo r1;
        int i0;
        java.lang.CharSequence r2;
        android.content.res.Resources r3;
        java.lang.String $r4, $r5;

        r0 := @this: com.android.commands.pm.Pm;

        r1 := @parameter0: android.content.pm.PackageItemInfo;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.CharSequence;

        if r2 == null goto label1;

        $r5 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        return $r5;

     label1:
        if i0 == 0 goto label2;

        r3 = specialinvoke r0.<com.android.commands.pm.Pm: android.content.res.Resources getResources(android.content.pm.PackageItemInfo)>(r1);

        if r3 == null goto label2;

        $r4 = virtualinvoke r3.<android.content.res.Resources: java.lang.String getString(int)>(i0);

        return $r4;

     label2:
        return null;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;
        com.android.commands.pm.Pm $r1;

        r0 := @parameter0: java.lang.String[];

        $r1 = new com.android.commands.pm.Pm;

        specialinvoke $r1.<com.android.commands.pm.Pm: void <init>()>();

        virtualinvoke $r1.<com.android.commands.pm.Pm: void run(java.lang.String[])>(r0);

        return;
    }

    private java.lang.String nextArg()
    {
        com.android.commands.pm.Pm r0;
        java.lang.String r1;
        java.lang.String[] $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.android.commands.pm.Pm;

        $i1 = r0.<com.android.commands.pm.Pm: int mNextArg>;

        $r2 = r0.<com.android.commands.pm.Pm: java.lang.String[] mArgs>;

        $i0 = lengthof $r2;

        if $i1 < $i0 goto label1;

        return null;

     label1:
        $r3 = r0.<com.android.commands.pm.Pm: java.lang.String[] mArgs>;

        $i2 = r0.<com.android.commands.pm.Pm: int mNextArg>;

        r1 = $r3[$i2];

        $i3 = r0.<com.android.commands.pm.Pm: int mNextArg>;

        $i4 = 1 + $i3;

        r0.<com.android.commands.pm.Pm: int mNextArg> = $i4;

        return r1;
    }

    private java.lang.String nextOption()
    {
        com.android.commands.pm.Pm r0;
        java.lang.String r1, $r4, $r5;
        java.lang.String[] $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7;
        boolean $z0, $z1;
        char $c6;

        r0 := @this: com.android.commands.pm.Pm;

        $i1 = r0.<com.android.commands.pm.Pm: int mNextArg>;

        $r2 = r0.<com.android.commands.pm.Pm: java.lang.String[] mArgs>;

        $i0 = lengthof $r2;

        if $i1 < $i0 goto label1;

        return null;

     label1:
        $r3 = r0.<com.android.commands.pm.Pm: java.lang.String[] mArgs>;

        $i2 = r0.<com.android.commands.pm.Pm: int mNextArg>;

        r1 = $r3[$i2];

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("-");

        if $z0 != 0 goto label2;

        return null;

     label2:
        $i3 = r0.<com.android.commands.pm.Pm: int mNextArg>;

        $i4 = 1 + $i3;

        r0.<com.android.commands.pm.Pm: int mNextArg> = $i4;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--");

        if $z1 == 0 goto label3;

        return null;

     label3:
        $i5 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i5 <= 1 goto label5;

        $c6 = virtualinvoke r1.<java.lang.String: char charAt(int)>(1);

        if $c6 == 45 goto label5;

        $i7 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i7 <= 2 goto label4;

        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(2);

        r0.<com.android.commands.pm.Pm: java.lang.String mCurArgData> = $r4;

        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, 2);

        return $r5;

     label4:
        r0.<com.android.commands.pm.Pm: java.lang.String mCurArgData> = null;

        return r1;

     label5:
        r0.<com.android.commands.pm.Pm: java.lang.String mCurArgData> = null;

        return r1;
    }

    private java.lang.String nextOptionData()
    {
        com.android.commands.pm.Pm r0;
        java.lang.String r1, $r2, $r5;
        java.lang.String[] $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.android.commands.pm.Pm;

        $r2 = r0.<com.android.commands.pm.Pm: java.lang.String mCurArgData>;

        if $r2 == null goto label1;

        $r5 = r0.<com.android.commands.pm.Pm: java.lang.String mCurArgData>;

        return $r5;

     label1:
        $i1 = r0.<com.android.commands.pm.Pm: int mNextArg>;

        $r3 = r0.<com.android.commands.pm.Pm: java.lang.String[] mArgs>;

        $i0 = lengthof $r3;

        if $i1 < $i0 goto label2;

        return null;

     label2:
        $r4 = r0.<com.android.commands.pm.Pm: java.lang.String[] mArgs>;

        $i2 = r0.<com.android.commands.pm.Pm: int mNextArg>;

        r1 = $r4[$i2];

        $i3 = r0.<com.android.commands.pm.Pm: int mNextArg>;

        $i4 = 1 + $i3;

        r0.<com.android.commands.pm.Pm: int mNextArg> = $i4;

        return r1;
    }

    private void runClear()
    {
        com.android.commands.pm.Pm r0;
        java.lang.String r1, r2, r7, $r17;
        int i0;
        com.android.commands.pm.Pm$ClearDataObserver r3, $r8;
        android.os.RemoteException r4, $r15;
        java.lang.Throwable r5, $r19;
        boolean z0, z1, $z3, $z4;
        android.app.IActivityManager $r9;
        java.io.PrintStream $r10, $r11, $r12, $r13, $r14, $r16;
        java.lang.InterruptedException $r18;

        r0 := @this: com.android.commands.pm.Pm;

        r1 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOption()>();

        i0 = 0;

        if r1 == null goto label03;

        z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        i0 = 0;

        if z1 == 0 goto label03;

        r7 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOptionData()>();

        if r7 == null goto label01;

        $z4 = staticinvoke <com.android.commands.pm.Pm: boolean isNumber(java.lang.String)>(r7);

        if $z4 != 0 goto label02;

     label01:
        $r13 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>("Error: no USER_ID specified");

        staticinvoke <com.android.commands.pm.Pm: void showUsage()>();

        return;

     label02:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r7);

     label03:
        r2 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        if r2 != null goto label04;

        $r12 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>("Error: no package specified");

        staticinvoke <com.android.commands.pm.Pm: void showUsage()>();

        return;

     label04:
        $r8 = new com.android.commands.pm.Pm$ClearDataObserver;

        specialinvoke $r8.<com.android.commands.pm.Pm$ClearDataObserver: void <init>()>();

        r3 = $r8;

     label05:
        $r9 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        interfaceinvoke $r9.<android.app.IActivityManager: boolean clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver,int)>(r2, r3, i0);

        entermonitor r3;

     label06:
        z0 = r3.<com.android.commands.pm.Pm$ClearDataObserver: boolean finished>;

     label07:
        if z0 != 0 goto label11;

     label08:
        virtualinvoke r3.<java.lang.Object: void wait()>();

     label09:
        goto label06;

     label10:
        $r18 := @caughtexception;

        goto label06;

     label11:
        exitmonitor r3;

     label12:
        $z3 = r3.<com.android.commands.pm.Pm$ClearDataObserver: boolean result>;

        if $z3 == 0 goto label18;

        $r10 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("Success");

     label13:
        return;

     label14:
        $r15 := @caughtexception;

        r4 = $r15;

        $r14 = <java.lang.System: java.io.PrintStream err>;

        $r17 = virtualinvoke r4.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r17);

        $r16 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

        return;

     label15:
        $r19 := @caughtexception;

        r5 = $r19;

     label16:
        exitmonitor r3;

     label17:
        throw r5;

     label18:
        $r11 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("Failed");

     label19:
        return;

        catch android.os.RemoteException from label05 to label06 with label14;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.InterruptedException from label08 to label09 with label10;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch android.os.RemoteException from label12 to label13 with label14;
        catch java.lang.Throwable from label16 to label17 with label15;
        catch android.os.RemoteException from label17 to label18 with label14;
        catch android.os.RemoteException from label18 to label19 with label14;
    }

    private void runDump()
    {
        com.android.commands.pm.Pm r0;
        java.lang.String r1;
        java.io.FileDescriptor $r2;
        java.io.PrintStream $r3;

        r0 := @this: com.android.commands.pm.Pm;

        r1 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        if r1 != null goto label1;

        $r3 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("Error: no package specified");

        return;

     label1:
        $r2 = <java.io.FileDescriptor: java.io.FileDescriptor out>;

        staticinvoke <android.app.ActivityManager: void dumpPackageStateStatic(java.io.FileDescriptor,java.lang.String)>($r2, r1);

        return;
    }

    private void runGetInstallLocation()
    {
        com.android.commands.pm.Pm r0;
        android.os.RemoteException r1, $r11;
        int i0;
        java.lang.String r2, $r10, $r13;
        android.content.pm.IPackageManager $r3;
        java.lang.StringBuilder $r4, $r6, $r7, $r8, $r9;
        java.io.PrintStream $r5, $r12, $r14;

        r0 := @this: com.android.commands.pm.Pm;

     label1:
        $r3 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        i0 = interfaceinvoke $r3.<android.content.pm.IPackageManager: int getInstallLocation()>();

     label2:
        r2 = "invalid";

        if i0 != 0 goto label7;

        r2 = "auto";

     label3:
        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r10);

     label4:
        return;

     label5:
        if i0 != 2 goto label3;

        r2 = "external";

        goto label3;

     label6:
        $r11 := @caughtexception;

        r1 = $r11;

        $r12 = <java.lang.System: java.io.PrintStream err>;

        $r13 = virtualinvoke r1.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r13);

        $r14 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

        return;

     label7:
        if i0 != 1 goto label5;

        r2 = "internal";

        goto label3;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label6;
    }

    private void runGrantRevokePermission(boolean)
    {
        com.android.commands.pm.Pm r0;
        boolean z0;
        java.lang.String r1, r2, $r13, $r15, $r20, $r26, $r27;
        java.lang.SecurityException r3, $r22;
        java.lang.IllegalArgumentException r4, $r10;
        android.os.RemoteException r5, $r18;
        android.content.pm.IPackageManager $r6, $r7;
        java.io.PrintStream $r8, $r9, $r12, $r17, $r19, $r24;
        java.lang.StringBuilder $r11, $r14, $r16, $r21, $r23, $r25;

        r0 := @this: com.android.commands.pm.Pm;

        z0 := @parameter0: boolean;

        r1 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        if r1 != null goto label1;

        $r9 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>("Error: no package specified");

        staticinvoke <com.android.commands.pm.Pm: void showUsage()>();

        return;

     label1:
        r2 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        if r2 != null goto label2;

        $r8 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>("Error: no permission specified");

        staticinvoke <com.android.commands.pm.Pm: void showUsage()>();

        return;

     label2:
        if z0 == 0 goto label6;

     label3:
        $r7 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        interfaceinvoke $r7.<android.content.pm.IPackageManager: void grantPermission(java.lang.String,java.lang.String)>(r1, r2);

     label4:
        return;

     label5:
        $r18 := @caughtexception;

        r5 = $r18;

        $r17 = <java.lang.System: java.io.PrintStream err>;

        $r20 = virtualinvoke r5.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r20);

        $r19 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

        return;

     label6:
        $r6 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        interfaceinvoke $r6.<android.content.pm.IPackageManager: void revokePermission(java.lang.String,java.lang.String)>(r1, r2);

     label7:
        return;

     label8:
        $r10 := @caughtexception;

        r4 = $r10;

        $r12 = <java.lang.System: java.io.PrintStream err>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad argument: ");

        $r13 = virtualinvoke r4.<java.lang.IllegalArgumentException: java.lang.String toString()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r15);

        staticinvoke <com.android.commands.pm.Pm: void showUsage()>();

        return;

     label9:
        $r22 := @caughtexception;

        r3 = $r22;

        $r24 = <java.lang.System: java.io.PrintStream err>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Operation not allowed: ");

        $r26 = virtualinvoke r3.<java.lang.SecurityException: java.lang.String toString()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r27);

        return;

        catch android.os.RemoteException from label3 to label4 with label5;
        catch java.lang.IllegalArgumentException from label3 to label4 with label8;
        catch java.lang.SecurityException from label3 to label4 with label9;
        catch android.os.RemoteException from label6 to label7 with label5;
        catch java.lang.IllegalArgumentException from label6 to label7 with label8;
        catch java.lang.SecurityException from label6 to label7 with label9;
    }

    private void runInstall()
    {
        com.android.commands.pm.Pm r0;
        short s0;
        java.lang.String r1, r2, r5, r8, r9, r10, r18, r20, $r33, $r46, $r49, $r50, $r60, $r61, $r64, $r68, $r73, $r76;
        byte[] r3, r4, r6, r7;
        javax.crypto.spec.SecretKeySpec r11, r13, $r27, $r54;
        java.security.InvalidAlgorithmParameterException r12, $r79;
        android.content.pm.ContainerEncryptionParams r14, $r30;
        android.net.Uri r15, r16, r17, r19;
        android.content.pm.VerificationParams r21, $r40;
        com.android.commands.pm.Pm$PackageInstallObserver r22, $r39;
        java.lang.Throwable r23, $r74;
        android.os.RemoteException r24, $r78;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        java.io.PrintStream $r26, $r28, $r34, $r36, $r42, $r48, $r53, $r58, $r59, $r63, $r65, $r66, $r67, $r69, $r70, $r71, $r72, $r75, $r77;
        java.lang.StringBuilder $r29, $r32, $r35, $r41, $r43, $r44, $r45, $r47, $r51, $r52, $r56, $r57, $r62;
        javax.crypto.spec.IvParameterSpec $r31;
        java.io.File $r37, $r55;
        android.content.pm.IPackageManager $r38;
        int $i1, $i2, $i3;
        java.lang.InterruptedException $r80;

        r0 := @this: com.android.commands.pm.Pm;

        s0 = 64;

        r1 = null;

        r2 = null;

        r3 = null;

        r4 = null;

        r5 = null;

        r6 = null;

        r7 = null;

        r8 = null;

        r9 = null;

     label01:
        r10 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOption()>();

        if r10 == null goto label17;

        $z1 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("-l");

        if $z1 == 0 goto label02;

        s0 = s0 | 1;

        goto label01;

     label02:
        $z2 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("-r");

        if $z2 == 0 goto label03;

        s0 = s0 | 2;

        goto label01;

     label03:
        $z7 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("-i");

        if $z7 == 0 goto label04;

        r1 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOptionData()>();

        if r1 != null goto label01;

        $r69 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r69.<java.io.PrintStream: void println(java.lang.String)>("Error: no value specified for -i");

        return;

     label04:
        $z8 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("-t");

        if $z8 == 0 goto label05;

        s0 = s0 | 4;

        goto label01;

     label05:
        $z9 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("-s");

        if $z9 == 0 goto label06;

        s0 = s0 | 8;

        goto label01;

     label06:
        $z10 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("-f");

        if $z10 == 0 goto label07;

        s0 = s0 | 16;

        goto label01;

     label07:
        $z3 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("-d");

        if $z3 == 0 goto label08;

        s0 = 128 | s0;

        goto label01;

     label08:
        $z4 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("--algo");

        if $z4 == 0 goto label09;

        r2 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOptionData()>();

        if r2 != null goto label01;

        $r70 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r70.<java.io.PrintStream: void println(java.lang.String)>("Error: must supply argument for --algo");

        return;

     label09:
        $z5 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("--iv");

        if $z5 == 0 goto label10;

        $r73 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOptionData()>();

        r3 = specialinvoke r0.<com.android.commands.pm.Pm: byte[] hexToBytes(java.lang.String)>($r73);

        if r3 != null goto label01;

        $r71 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r71.<java.io.PrintStream: void println(java.lang.String)>("Error: must supply argument for --iv");

        return;

     label10:
        $z6 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("--key");

        if $z6 == 0 goto label11;

        $r64 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOptionData()>();

        r4 = specialinvoke r0.<com.android.commands.pm.Pm: byte[] hexToBytes(java.lang.String)>($r64);

        if r4 != null goto label01;

        $r72 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r72.<java.io.PrintStream: void println(java.lang.String)>("Error: must supply argument for --key");

        return;

     label11:
        $z13 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("--macalgo");

        if $z13 == 0 goto label12;

        r5 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOptionData()>();

        if r5 != null goto label01;

        $r65 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r65.<java.io.PrintStream: void println(java.lang.String)>("Error: must supply argument for --macalgo");

        return;

     label12:
        $z12 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("--mackey");

        if $z12 == 0 goto label13;

        $r68 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOptionData()>();

        r6 = specialinvoke r0.<com.android.commands.pm.Pm: byte[] hexToBytes(java.lang.String)>($r68);

        if r6 != null goto label01;

        $r66 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r66.<java.io.PrintStream: void println(java.lang.String)>("Error: must supply argument for --mackey");

        return;

     label13:
        $z15 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("--tag");

        if $z15 == 0 goto label14;

        $r60 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOptionData()>();

        r7 = specialinvoke r0.<com.android.commands.pm.Pm: byte[] hexToBytes(java.lang.String)>($r60);

        if r7 != null goto label01;

        $r67 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r67.<java.io.PrintStream: void println(java.lang.String)>("Error: must supply argument for --tag");

        return;

     label14:
        $z14 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("--originating-uri");

        if $z14 == 0 goto label15;

        r8 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOptionData()>();

        if r8 != null goto label01;

        $r59 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r59.<java.io.PrintStream: void println(java.lang.String)>("Error: must supply argument for --originating-uri");

        return;

     label15:
        $z11 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("--referrer");

        if $z11 == 0 goto label16;

        r9 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOptionData()>();

        if r9 != null goto label01;

        $r63 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r63.<java.io.PrintStream: void println(java.lang.String)>("Error: must supply argument for --referrer");

        return;

     label16:
        $r58 = <java.lang.System: java.io.PrintStream err>;

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown option: ");

        $r62 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r61 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r58.<java.io.PrintStream: void println(java.lang.String)>($r61);

        return;

     label17:
        if r2 != null goto label18;

        if r3 != null goto label18;

        if r4 != null goto label18;

        if r5 != null goto label18;

        if r6 != null goto label18;

        if r7 == null goto label41;

     label18:
        if r2 == null goto label19;

        if r3 == null goto label19;

        if r4 != null goto label20;

     label19:
        $r26 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>("Error: all of --algo, --iv, and --key must be specified");

        return;

     label20:
        if r5 != null goto label21;

        if r6 != null goto label21;

        if r7 == null goto label23;

     label21:
        if r5 == null goto label22;

        if r6 == null goto label22;

        if r7 != null goto label23;

     label22:
        $r28 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>("Error: all of --macalgo, --mackey, and --tag must be specified");

        return;

     label23:
        $r27 = new javax.crypto.spec.SecretKeySpec;

        specialinvoke $r27.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r4, "RAW");

        r11 = $r27;

     label24:
        if r6 == null goto label55;

     label25:
        $i3 = lengthof r6;

        if $i3 != 0 goto label38;

     label26:
        goto label55;

     label27:
        $r30 = new android.content.pm.ContainerEncryptionParams;

        $r31 = new javax.crypto.spec.IvParameterSpec;

        specialinvoke $r31.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r3);

        specialinvoke $r30.<android.content.pm.ContainerEncryptionParams: void <init>(java.lang.String,java.security.spec.AlgorithmParameterSpec,javax.crypto.SecretKey,java.lang.String,java.security.spec.AlgorithmParameterSpec,javax.crypto.SecretKey,byte[],long,long,long)>(r2, $r31, r11, r5, null, r13, r7, -1L, -1L, -1L);

        r14 = $r30;

     label28:
        if r8 == null goto label42;

        r16 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r8);

     label29:
        if r9 == null goto label43;

        r15 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r9);

     label30:
        r18 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        $r34 = <java.lang.System: java.io.PrintStream err>;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tpkg: ");

        $r32 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>($r33);

        if r18 == null goto label44;

        $r37 = new java.io.File;

        specialinvoke $r37.<java.io.File: void <init>(java.lang.String)>(r18);

        r17 = staticinvoke <android.net.Uri: android.net.Uri fromFile(java.io.File)>($r37);

        r20 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        if r20 == null goto label45;

        $r53 = <java.lang.System: java.io.PrintStream err>;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tver: ");

        $r51 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        $r50 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r53.<java.io.PrintStream: void println(java.lang.String)>($r50);

        $r55 = new java.io.File;

        specialinvoke $r55.<java.io.File: void <init>(java.lang.String)>(r20);

        r19 = staticinvoke <android.net.Uri: android.net.Uri fromFile(java.io.File)>($r55);

     label31:
        $r39 = new com.android.commands.pm.Pm$PackageInstallObserver;

        specialinvoke $r39.<com.android.commands.pm.Pm$PackageInstallObserver: void <init>(com.android.commands.pm.Pm)>(r0);

        r22 = $r39;

     label32:
        $r40 = new android.content.pm.VerificationParams;

        specialinvoke $r40.<android.content.pm.VerificationParams: void <init>(android.net.Uri,android.net.Uri,android.net.Uri,int,android.content.pm.ManifestDigest)>(r19, r16, r15, -1, null);

        r21 = $r40;

        $r38 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        interfaceinvoke $r38.<android.content.pm.IPackageManager: void installPackageWithVerificationAndEncryption(android.net.Uri,android.content.pm.IPackageInstallObserver,int,java.lang.String,android.content.pm.VerificationParams,android.content.pm.ContainerEncryptionParams)>(r17, r22, s0, r1, r21, r14);

        entermonitor r22;

     label33:
        z0 = r22.<com.android.commands.pm.Pm$PackageInstallObserver: boolean finished>;

     label34:
        if z0 != 0 goto label46;

     label35:
        virtualinvoke r22.<java.lang.Object: void wait()>();

     label36:
        goto label33;

     label37:
        $r80 := @caughtexception;

        goto label33;

     label38:
        $r54 = new javax.crypto.spec.SecretKeySpec;

        specialinvoke $r54.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r6, "RAW");

        r13 = $r54;

     label39:
        goto label27;

     label40:
        $r79 := @caughtexception;

        r12 = $r79;

        virtualinvoke r12.<java.security.InvalidAlgorithmParameterException: void printStackTrace()>();

        return;

     label41:
        r14 = null;

        goto label28;

     label42:
        r16 = null;

        goto label29;

     label43:
        r15 = null;

        goto label30;

     label44:
        $r36 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r36.<java.io.PrintStream: void println(java.lang.String)>("Error: no package specified");

        return;

     label45:
        r19 = null;

        goto label31;

     label46:
        $i1 = r22.<com.android.commands.pm.Pm$PackageInstallObserver: int result>;

        if $i1 != 1 goto label53;

        $r48 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r48.<java.io.PrintStream: void println(java.lang.String)>("Success");

     label47:
        exitmonitor r22;

     label48:
        return;

     label49:
        $r74 := @caughtexception;

        r23 = $r74;

     label50:
        exitmonitor r22;

     label51:
        throw r23;

     label52:
        $r78 := @caughtexception;

        r24 = $r78;

        $r77 = <java.lang.System: java.io.PrintStream err>;

        $r76 = virtualinvoke r24.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r77.<java.io.PrintStream: void println(java.lang.String)>($r76);

        $r75 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r75.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

        return;

     label53:
        $r42 = <java.lang.System: java.io.PrintStream err>;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure [");

        $i2 = r22.<com.android.commands.pm.Pm$PackageInstallObserver: int result>;

        $r46 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String installFailureToString(int)>($i2);

        $r45 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r49 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>($r49);

     label54:
        goto label47;

     label55:
        r13 = null;

        goto label27;

        catch java.security.InvalidAlgorithmParameterException from label23 to label24 with label40;
        catch java.security.InvalidAlgorithmParameterException from label25 to label26 with label40;
        catch java.security.InvalidAlgorithmParameterException from label27 to label28 with label40;
        catch android.os.RemoteException from label32 to label33 with label52;
        catch java.lang.Throwable from label33 to label34 with label49;
        catch java.lang.InterruptedException from label35 to label36 with label37;
        catch java.lang.Throwable from label35 to label36 with label49;
        catch java.security.InvalidAlgorithmParameterException from label38 to label39 with label40;
        catch java.lang.Throwable from label46 to label47 with label49;
        catch java.lang.Throwable from label47 to label48 with label49;
        catch java.lang.Throwable from label50 to label51 with label49;
        catch android.os.RemoteException from label51 to label52 with label52;
        catch java.lang.Throwable from label53 to label54 with label49;
    }

    private void runList()
    {
        com.android.commands.pm.Pm r0;
        java.lang.String r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.StringBuilder $r10, $r11, $r13, $r14;
        java.io.PrintStream $r12, $r15;

        r0 := @this: com.android.commands.pm.Pm;

        r1 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        if r1 != null goto label1;

        $r15 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>("Error: didn\'t specify type of data to list");

        return;

     label1:
        $r2 = "package";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        $r3 = "packages";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label3;

     label2:
        specialinvoke r0.<com.android.commands.pm.Pm: void runListPackages(boolean)>(0);

        return;

     label3:
        $r4 = "permission-groups";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label4;

        specialinvoke r0.<com.android.commands.pm.Pm: void runListPermissionGroups()>();

        return;

     label4:
        $r5 = "permissions";

        $z3 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z3 == 0 goto label5;

        specialinvoke r0.<com.android.commands.pm.Pm: void runListPermissions()>();

        return;

     label5:
        $r6 = "features";

        $z4 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z4 == 0 goto label6;

        specialinvoke r0.<com.android.commands.pm.Pm: void runListFeatures()>();

        return;

     label6:
        $r7 = "libraries";

        $z5 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z5 == 0 goto label7;

        specialinvoke r0.<com.android.commands.pm.Pm: void runListLibraries()>();

        return;

     label7:
        $r8 = "instrumentation";

        $z6 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z6 == 0 goto label8;

        specialinvoke r0.<com.android.commands.pm.Pm: void runListInstrumentation()>();

        return;

     label8:
        $r9 = "users";

        $z7 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z7 == 0 goto label9;

        virtualinvoke r0.<com.android.commands.pm.Pm: void runListUsers()>();

        return;

     label9:
        $r12 = <java.lang.System: java.io.PrintStream err>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: unknown list type \'");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r16);

        return;
    }

    private void runListFeatures()
    {
        com.android.commands.pm.Pm r0;
        java.util.ArrayList r1, $r5;
        android.os.RemoteException r2, $r21;
        android.content.pm.FeatureInfo[] r3;
        int i0, i1, i2, $i3, $i4;
        android.content.pm.FeatureInfo r4, $r19;
        android.content.pm.IPackageManager $r6;
        com.android.commands.pm.Pm$1 $r7;
        java.lang.Object $r8;
        java.io.PrintStream $r9, $r11, $r18, $r20, $r22;
        java.lang.String $r10, $r15, $r16, $r17, $r23;
        java.lang.StringBuilder $r12, $r13, $r14;

        r0 := @this: com.android.commands.pm.Pm;

     label01:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r1 = $r5;

        $r6 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        r3 = interfaceinvoke $r6.<android.content.pm.IPackageManager: android.content.pm.FeatureInfo[] getSystemAvailableFeatures()>();

     label02:
        i0 = 0;

     label03:
        $i3 = lengthof r3;

        if i0 >= $i3 goto label05;

        $r19 = r3[i0];

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r19);

     label04:
        i0 = i0 + 1;

        goto label03;

     label05:
        $r7 = new com.android.commands.pm.Pm$1;

        specialinvoke $r7.<com.android.commands.pm.Pm$1: void <init>(com.android.commands.pm.Pm)>(r0);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r1, $r7);

     label06:
        if r1 == null goto label18;

     label07:
        i1 = interfaceinvoke r1.<java.util.List: int size()>();

     label08:
        goto label16;

     label09:
        if i2 >= i1 goto label15;

     label10:
        $r8 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        r4 = (android.content.pm.FeatureInfo) $r8;

        $r9 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r9.<java.io.PrintStream: void print(java.lang.String)>("feature:");

        $r10 = r4.<android.content.pm.FeatureInfo: java.lang.String name>;

        if $r10 == null goto label12;

        $r18 = <java.lang.System: java.io.PrintStream out>;

        $r16 = r4.<android.content.pm.FeatureInfo: java.lang.String name>;

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r16);

     label11:
        goto label17;

     label12:
        $r11 = <java.lang.System: java.io.PrintStream out>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("reqGlEsVersion=0x");

        $i4 = r4.<android.content.pm.FeatureInfo: int reqGlEsVersion>;

        $r15 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i4);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r17);

     label13:
        goto label17;

     label14:
        $r21 := @caughtexception;

        r2 = $r21;

        $r20 = <java.lang.System: java.io.PrintStream err>;

        $r23 = virtualinvoke r2.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>($r23);

        $r22 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

     label15:
        return;

     label16:
        i2 = 0;

        goto label09;

     label17:
        i2 = i2 + 1;

        goto label09;

     label18:
        i1 = 0;

        goto label16;

        catch android.os.RemoteException from label01 to label02 with label14;
        catch android.os.RemoteException from label03 to label04 with label14;
        catch android.os.RemoteException from label05 to label06 with label14;
        catch android.os.RemoteException from label07 to label08 with label14;
        catch android.os.RemoteException from label10 to label11 with label14;
        catch android.os.RemoteException from label12 to label13 with label14;
    }

    private void runListInstrumentation()
    {
        com.android.commands.pm.Pm r0;
        boolean z0, $z1;
        java.lang.String r1, r3, $r13, $r14, $r15, $r17, $r22, $r30, $r33, $r35, $r36;
        java.lang.RuntimeException r2, $r31;
        android.os.RemoteException r4, $r38;
        java.util.List r5;
        int i0, i1;
        android.content.pm.InstrumentationInfo r6;
        android.content.ComponentName r7, $r11;
        android.content.pm.IPackageManager $r8;
        com.android.commands.pm.Pm$3 $r9;
        java.lang.Object $r10;
        java.io.PrintStream $r12, $r16, $r18, $r19, $r20, $r21, $r23, $r27, $r29, $r37, $r39;
        char $c2;
        java.lang.StringBuilder $r24, $r25, $r26, $r28, $r32, $r34;

        r0 := @this: com.android.commands.pm.Pm;

        z0 = 0;

        r1 = null;

     label01:
        r3 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

     label02:
        if r3 == null goto label10;

     label03:
        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("-f");

        if $z1 == 0 goto label05;

     label04:
        z0 = 1;

        goto label01;

     label05:
        $c2 = virtualinvoke r3.<java.lang.String: char charAt(int)>(0);

        if $c2 == 45 goto label07;

     label06:
        r1 = r3;

        goto label01;

     label07:
        $r27 = <java.lang.System: java.io.PrintStream err>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown option: ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>($r30);

     label08:
        return;

     label09:
        $r31 := @caughtexception;

        r2 = $r31;

        $r29 = <java.lang.System: java.io.PrintStream err>;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: ");

        $r35 = virtualinvoke r2.<java.lang.RuntimeException: java.lang.String toString()>();

        $r32 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>($r33);

        return;

     label10:
        $r8 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        r5 = interfaceinvoke $r8.<android.content.pm.IPackageManager: java.util.List queryInstrumentation(java.lang.String,int)>(r1, 0);

        $r9 = new com.android.commands.pm.Pm$3;

        specialinvoke $r9.<com.android.commands.pm.Pm$3: void <init>(com.android.commands.pm.Pm)>(r0);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r5, $r9);

     label11:
        i0 = 0;

        if r5 == null goto label21;

     label12:
        i0 = interfaceinvoke r5.<java.util.List: int size()>();

     label13:
        goto label21;

     label14:
        if i1 >= i0 goto label08;

     label15:
        $r10 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i1);

        r6 = (android.content.pm.InstrumentationInfo) $r10;

        $r12 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r12.<java.io.PrintStream: void print(java.lang.String)>("instrumentation:");

     label16:
        if z0 == 0 goto label18;

     label17:
        $r21 = <java.lang.System: java.io.PrintStream out>;

        $r22 = r6.<android.content.pm.InstrumentationInfo: java.lang.String sourceDir>;

        virtualinvoke $r21.<java.io.PrintStream: void print(java.lang.String)>($r22);

        $r23 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r23.<java.io.PrintStream: void print(java.lang.String)>("=");

     label18:
        $r11 = new android.content.ComponentName;

        $r13 = r6.<android.content.pm.InstrumentationInfo: java.lang.String packageName>;

        $r14 = r6.<android.content.pm.InstrumentationInfo: java.lang.String name>;

        specialinvoke $r11.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r13, $r14);

        r7 = $r11;

        $r16 = <java.lang.System: java.io.PrintStream out>;

        $r15 = virtualinvoke r7.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke $r16.<java.io.PrintStream: void print(java.lang.String)>($r15);

        $r18 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r18.<java.io.PrintStream: void print(java.lang.String)>(" (target=");

        $r20 = <java.lang.System: java.io.PrintStream out>;

        $r17 = r6.<android.content.pm.InstrumentationInfo: java.lang.String targetPackage>;

        virtualinvoke $r20.<java.io.PrintStream: void print(java.lang.String)>($r17);

        $r19 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>(")");

     label19:
        i1 = i1 + 1;

        goto label14;

     label20:
        $r38 := @caughtexception;

        r4 = $r38;

        $r39 = <java.lang.System: java.io.PrintStream err>;

        $r36 = virtualinvoke r4.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r39.<java.io.PrintStream: void println(java.lang.String)>($r36);

        $r37 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r37.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

        return;

     label21:
        i1 = 0;

        goto label14;

        catch java.lang.RuntimeException from label01 to label02 with label09;
        catch java.lang.RuntimeException from label03 to label04 with label09;
        catch java.lang.RuntimeException from label05 to label06 with label09;
        catch java.lang.RuntimeException from label07 to label08 with label09;
        catch android.os.RemoteException from label10 to label11 with label20;
        catch android.os.RemoteException from label12 to label13 with label20;
        catch android.os.RemoteException from label15 to label16 with label20;
        catch android.os.RemoteException from label17 to label18 with label20;
        catch android.os.RemoteException from label18 to label19 with label20;
    }

    private void runListLibraries()
    {
        com.android.commands.pm.Pm r0;
        java.util.ArrayList r1, $r5;
        android.os.RemoteException r2, $r12;
        java.lang.String[] r3;
        int i0, i1, i2, $i3;
        java.lang.String r4, $r11, $r13;
        android.content.pm.IPackageManager $r6;
        com.android.commands.pm.Pm$2 $r7;
        java.lang.Object $r8;
        java.io.PrintStream $r9, $r10, $r14, $r15;

        r0 := @this: com.android.commands.pm.Pm;

     label01:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r1 = $r5;

        $r6 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        r3 = interfaceinvoke $r6.<android.content.pm.IPackageManager: java.lang.String[] getSystemSharedLibraryNames()>();

     label02:
        i0 = 0;

     label03:
        $i3 = lengthof r3;

        if i0 >= $i3 goto label05;

        $r11 = r3[i0];

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r11);

     label04:
        i0 = i0 + 1;

        goto label03;

     label05:
        $r7 = new com.android.commands.pm.Pm$2;

        specialinvoke $r7.<com.android.commands.pm.Pm$2: void <init>(com.android.commands.pm.Pm)>(r0);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r1, $r7);

     label06:
        if r1 == null goto label12;

     label07:
        i1 = interfaceinvoke r1.<java.util.List: int size()>();

     label08:
        goto label15;

     label09:
        if i2 >= i1 goto label14;

     label10:
        $r8 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        r4 = (java.lang.String) $r8;

        $r9 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r9.<java.io.PrintStream: void print(java.lang.String)>("library:");

        $r10 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>(r4);

     label11:
        i2 = i2 + 1;

        goto label09;

     label12:
        i1 = 0;

        goto label15;

     label13:
        $r12 := @caughtexception;

        r2 = $r12;

        $r14 = <java.lang.System: java.io.PrintStream err>;

        $r13 = virtualinvoke r2.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r13);

        $r15 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

     label14:
        return;

     label15:
        i2 = 0;

        goto label09;

        catch android.os.RemoteException from label01 to label02 with label13;
        catch android.os.RemoteException from label03 to label04 with label13;
        catch android.os.RemoteException from label05 to label06 with label13;
        catch android.os.RemoteException from label07 to label08 with label13;
        catch android.os.RemoteException from label10 to label11 with label13;
    }

    private void runListPackages(boolean)
    {
        com.android.commands.pm.Pm r0;
        boolean z0, z1, z2, z3, z4, z5, z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19;
        short s0;
        int i1, i2, i3, $i4, $i5;
        java.lang.RuntimeException r1, $r40;
        java.lang.String r2, r3, $r12, $r16, $r17, $r22, $r25, $r31, $r32, $r36, $r38, $r42;
        android.os.RemoteException r4, $r30;
        java.util.List r5;
        android.content.pm.PackageInfo r6;
        android.content.pm.IPackageManager $r7, $r18;
        java.lang.Object $r8;
        android.content.pm.ApplicationInfo $r9, $r21, $r23, $r24;
        java.io.PrintStream $r10, $r11, $r13, $r14, $r15, $r19, $r20, $r28, $r34, $r37, $r39;
        java.lang.StringBuilder $r26, $r27, $r29, $r33, $r35, $r41;

        r0 := @this: com.android.commands.pm.Pm;

        z0 := @parameter0: boolean;

        s0 = 0;

        z1 = 0;

        z2 = 0;

        z3 = 0;

        z4 = 0;

        z5 = 0;

        i1 = 0;

     label01:
        r2 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOption()>();

     label02:
        if r2 == null goto label24;

     label03:
        $z9 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("-l");

        if $z9 != 0 goto label01;

        $z10 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("-lf");

        if $z10 == 0 goto label05;

     label04:
        z0 = 1;

        goto label01;

     label05:
        $z15 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("-f");

        if $z15 == 0 goto label07;

     label06:
        z0 = 1;

        goto label01;

     label07:
        $z14 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("-d");

        if $z14 == 0 goto label09;

     label08:
        z1 = 1;

        goto label01;

     label09:
        $z13 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("-e");

        if $z13 == 0 goto label11;

     label10:
        z2 = 1;

        goto label01;

     label11:
        $z12 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("-s");

        if $z12 == 0 goto label13;

     label12:
        z3 = 1;

        goto label01;

     label13:
        $z19 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("-3");

        if $z19 == 0 goto label15;

     label14:
        z4 = 1;

        goto label01;

     label15:
        $z18 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("-i");

        if $z18 == 0 goto label17;

     label16:
        z5 = 1;

        goto label01;

     label17:
        $z17 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        if $z17 == 0 goto label19;

        $r31 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r31);

     label18:
        goto label01;

     label19:
        $z16 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("-u");

        if $z16 == 0 goto label21;

     label20:
        s0 = s0 | 8192;

        goto label01;

     label21:
        $r28 = <java.lang.System: java.io.PrintStream err>;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown option: ");

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r32 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>($r32);

     label22:
        return;

     label23:
        $r40 := @caughtexception;

        r1 = $r40;

        $r34 = <java.lang.System: java.io.PrintStream err>;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: ");

        $r36 = virtualinvoke r1.<java.lang.RuntimeException: java.lang.String toString()>();

        $r41 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>($r42);

        return;

     label24:
        r3 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

     label25:
        $r7 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        r5 = specialinvoke r0.<com.android.commands.pm.Pm: java.util.List getInstalledPackages(android.content.pm.IPackageManager,int,int)>($r7, s0, i1);

        i2 = interfaceinvoke r5.<java.util.List: int size()>();

     label26:
        i3 = 0;

     label27:
        if i3 >= i2 goto label22;

     label28:
        $r8 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i3);

        r6 = (android.content.pm.PackageInfo) $r8;

     label29:
        if r3 == null goto label32;

     label30:
        $r25 = r6.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $z11 = virtualinvoke $r25.<java.lang.String: boolean contains(java.lang.CharSequence)>(r3);

        if $z11 != 0 goto label32;

     label31:
        goto label49;

     label32:
        $r9 = r6.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i4 = $r9.<android.content.pm.ApplicationInfo: int flags>;

        $i5 = 1 & $i4;

        if $i5 == 0 goto label48;

     label33:
        z6 = 1;

     label34:
        if z1 == 0 goto label36;

     label35:
        $r23 = r6.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $z7 = $r23.<android.content.pm.ApplicationInfo: boolean enabled>;

        if $z7 != 0 goto label49;

     label36:
        if z2 == 0 goto label50;

     label37:
        $r24 = r6.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $z8 = $r24.<android.content.pm.ApplicationInfo: boolean enabled>;

        if $z8 == 0 goto label49;

     label38:
        goto label50;

     label39:
        $r10 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r10.<java.io.PrintStream: void print(java.lang.String)>("package:");

     label40:
        if z0 == 0 goto label42;

     label41:
        $r19 = <java.lang.System: java.io.PrintStream out>;

        $r21 = r6.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r22 = $r21.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        virtualinvoke $r19.<java.io.PrintStream: void print(java.lang.String)>($r22);

        $r20 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r20.<java.io.PrintStream: void print(java.lang.String)>("=");

     label42:
        $r11 = <java.lang.System: java.io.PrintStream out>;

        $r12 = r6.<android.content.pm.PackageInfo: java.lang.String packageName>;

        virtualinvoke $r11.<java.io.PrintStream: void print(java.lang.String)>($r12);

     label43:
        if z5 == 0 goto label45;

     label44:
        $r13 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r13.<java.io.PrintStream: void print(java.lang.String)>("  installer=");

        $r15 = <java.lang.System: java.io.PrintStream out>;

        $r18 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        $r17 = r6.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $r16 = interfaceinvoke $r18.<android.content.pm.IPackageManager: java.lang.String getInstallerPackageName(java.lang.String)>($r17);

        virtualinvoke $r15.<java.io.PrintStream: void print(java.lang.String)>($r16);

     label45:
        $r14 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r14.<java.io.PrintStream: void println()>();

     label46:
        goto label49;

     label47:
        $r30 := @caughtexception;

        r4 = $r30;

        $r37 = <java.lang.System: java.io.PrintStream err>;

        $r38 = virtualinvoke r4.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r37.<java.io.PrintStream: void println(java.lang.String)>($r38);

        $r39 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r39.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

        return;

     label48:
        z6 = 0;

        goto label34;

     label49:
        i3 = i3 + 1;

        goto label27;

     label50:
        if z3 == 0 goto label51;

        if z6 == 0 goto label49;

     label51:
        if z4 == 0 goto label39;

        if z6 != 0 goto label49;

        goto label39;

        catch java.lang.RuntimeException from label01 to label02 with label23;
        catch java.lang.RuntimeException from label03 to label04 with label23;
        catch java.lang.RuntimeException from label05 to label06 with label23;
        catch java.lang.RuntimeException from label07 to label08 with label23;
        catch java.lang.RuntimeException from label09 to label10 with label23;
        catch java.lang.RuntimeException from label11 to label12 with label23;
        catch java.lang.RuntimeException from label13 to label14 with label23;
        catch java.lang.RuntimeException from label15 to label16 with label23;
        catch java.lang.RuntimeException from label17 to label18 with label23;
        catch java.lang.RuntimeException from label19 to label20 with label23;
        catch java.lang.RuntimeException from label21 to label22 with label23;
        catch android.os.RemoteException from label25 to label26 with label47;
        catch android.os.RemoteException from label28 to label29 with label47;
        catch android.os.RemoteException from label30 to label31 with label47;
        catch android.os.RemoteException from label32 to label33 with label47;
        catch android.os.RemoteException from label35 to label36 with label47;
        catch android.os.RemoteException from label37 to label38 with label47;
        catch android.os.RemoteException from label39 to label40 with label47;
        catch android.os.RemoteException from label41 to label42 with label47;
        catch android.os.RemoteException from label42 to label43 with label47;
        catch android.os.RemoteException from label44 to label45 with label47;
        catch android.os.RemoteException from label45 to label46 with label47;
    }

    private void runListPermissionGroups()
    {
        com.android.commands.pm.Pm r0;
        android.os.RemoteException r1, $r9;
        java.util.List r2;
        int i0, i1;
        android.content.pm.PermissionGroupInfo r3;
        android.content.pm.IPackageManager $r4;
        java.lang.Object $r5;
        java.io.PrintStream $r6, $r8, $r10, $r12;
        java.lang.String $r7, $r11;

        r0 := @this: com.android.commands.pm.Pm;

     label1:
        $r4 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        r2 = interfaceinvoke $r4.<android.content.pm.IPackageManager: java.util.List getAllPermissionGroups(int)>(0);

        i0 = interfaceinvoke r2.<java.util.List: int size()>();

     label2:
        i1 = 0;

     label3:
        if i1 >= i0 goto label7;

     label4:
        $r5 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        r3 = (android.content.pm.PermissionGroupInfo) $r5;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void print(java.lang.String)>("permission group:");

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r7 = r3.<android.content.pm.PermissionGroupInfo: java.lang.String name>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r7);

     label5:
        i1 = i1 + 1;

        goto label3;

     label6:
        $r9 := @caughtexception;

        r1 = $r9;

        $r10 = <java.lang.System: java.io.PrintStream err>;

        $r11 = virtualinvoke r1.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r11);

        $r12 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

     label7:
        return;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    private void runListPermissions()
    {
        com.android.commands.pm.Pm r0;
        boolean z0, z1, z2, z3, z4, $z8, $z9, $z10, $z11, $z12;
        android.os.RemoteException r1, $r22;
        java.lang.String r2, r3, $r18, $r25, $r26;
        java.util.ArrayList r4, $r6;
        java.util.List r5;
        int i0, $i1;
        java.io.PrintStream $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r19, $r23, $r27;
        android.content.pm.IPackageManager $r15;
        android.content.pm.PermissionGroupInfo $r16;
        java.lang.Object $r17;
        java.lang.StringBuilder $r20, $r21, $r24;

        r0 := @this: com.android.commands.pm.Pm;

        z0 = 0;

        z1 = 0;

        z2 = 0;

        z3 = 0;

        z4 = 0;

     label01:
        r2 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOption()>();

     label02:
        if r2 == null goto label15;

     label03:
        $z10 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("-f");

        if $z10 == 0 goto label05;

     label04:
        z0 = 1;

        goto label01;

     label05:
        $z11 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("-g");

        if $z11 == 0 goto label07;

     label06:
        z1 = 1;

        goto label01;

     label07:
        $z8 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("-s");

        if $z8 == 0 goto label09;

     label08:
        z1 = 1;

        z0 = 1;

        z3 = 1;

        goto label01;

     label09:
        $z9 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("-u");

        if $z9 == 0 goto label11;

     label10:
        z2 = 1;

        goto label01;

     label11:
        $z12 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("-d");

        if $z12 == 0 goto label13;

     label12:
        z4 = 1;

        goto label01;

     label13:
        $r19 = <java.lang.System: java.io.PrintStream err>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown option: ");

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r25);

     label14:
        return;

     label15:
        r3 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOption()>();

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r4 = $r6;

     label16:
        if z1 == 0 goto label28;

     label17:
        $r15 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        r5 = interfaceinvoke $r15.<android.content.pm.IPackageManager: java.util.List getAllPermissionGroups(int)>(0);

     label18:
        i0 = 0;

     label19:
        $i1 = interfaceinvoke r5.<java.util.List: int size()>();

        if i0 >= $i1 goto label21;

        $r17 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i0);

        $r16 = (android.content.pm.PermissionGroupInfo) $r17;

        $r18 = $r16.<android.content.pm.PermissionGroupInfo: java.lang.String name>;

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r18);

     label20:
        i0 = i0 + 1;

        goto label19;

     label21:
        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>(null);

     label22:
        if z4 == 0 goto label30;

     label23:
        $r12 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>("Dangerous Permissions:");

        $r11 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("");

        specialinvoke r0.<com.android.commands.pm.Pm: void doListPermissions(java.util.ArrayList,boolean,boolean,boolean,int,int)>(r4, z1, z0, z3, 1, 1);

     label24:
        if z2 == 0 goto label34;

     label25:
        $r14 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>("Normal Permissions:");

        $r13 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>("");

        specialinvoke r0.<com.android.commands.pm.Pm: void doListPermissions(java.util.ArrayList,boolean,boolean,boolean,int,int)>(r4, z1, z0, z3, 0, 0);

     label26:
        return;

     label27:
        $r22 := @caughtexception;

        r1 = $r22;

        $r23 = <java.lang.System: java.io.PrintStream err>;

        $r26 = virtualinvoke r1.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r26);

        $r27 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

        return;

     label28:
        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

     label29:
        goto label22;

     label30:
        if z2 == 0 goto label33;

     label31:
        $r10 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("Dangerous and Normal Permissions:");

        $r9 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>("");

        specialinvoke r0.<com.android.commands.pm.Pm: void doListPermissions(java.util.ArrayList,boolean,boolean,boolean,int,int)>(r4, z1, z0, z3, 0, 1);

     label32:
        return;

     label33:
        $r8 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>("All Permissions:");

        $r7 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("");

        specialinvoke r0.<com.android.commands.pm.Pm: void doListPermissions(java.util.ArrayList,boolean,boolean,boolean,int,int)>(r4, z1, z0, z3, -10000, 10000);

     label34:
        return;

        catch android.os.RemoteException from label01 to label02 with label27;
        catch android.os.RemoteException from label03 to label04 with label27;
        catch android.os.RemoteException from label05 to label06 with label27;
        catch android.os.RemoteException from label07 to label08 with label27;
        catch android.os.RemoteException from label09 to label10 with label27;
        catch android.os.RemoteException from label11 to label12 with label27;
        catch android.os.RemoteException from label13 to label14 with label27;
        catch android.os.RemoteException from label15 to label16 with label27;
        catch android.os.RemoteException from label17 to label18 with label27;
        catch android.os.RemoteException from label19 to label20 with label27;
        catch android.os.RemoteException from label21 to label22 with label27;
        catch android.os.RemoteException from label23 to label24 with label27;
        catch android.os.RemoteException from label25 to label26 with label27;
        catch android.os.RemoteException from label28 to label29 with label27;
        catch android.os.RemoteException from label31 to label32 with label27;
        catch android.os.RemoteException from label33 to label34 with label27;
    }

    private void runPath()
    {
        com.android.commands.pm.Pm r0;
        java.lang.String r1;
        java.io.PrintStream $r2;

        r0 := @this: com.android.commands.pm.Pm;

        r1 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        if r1 != null goto label1;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("Error: no package specified");

        return;

     label1:
        specialinvoke r0.<com.android.commands.pm.Pm: void displayPackageFilePath(java.lang.String)>(r1);

        return;
    }

    private void runSetBlockedSetting(boolean)
    {
        com.android.commands.pm.Pm r0;
        boolean z0, z1, $z3, $z4;
        java.lang.String r1, r2, r4, $r12, $r19;
        int i0;
        android.os.RemoteException r3, $r17;
        android.content.pm.IPackageManager $r5, $r11;
        java.lang.StringBuilder $r6, $r8, $r9, $r10, $r13;
        java.io.PrintStream $r7, $r14, $r15, $r16, $r18;

        r0 := @this: com.android.commands.pm.Pm;

        z0 := @parameter0: boolean;

        r1 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOption()>();

        i0 = 0;

        if r1 == null goto label3;

        z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        i0 = 0;

        if z1 == 0 goto label3;

        r4 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOptionData()>();

        if r4 == null goto label1;

        $z4 = staticinvoke <com.android.commands.pm.Pm: boolean isNumber(java.lang.String)>(r4);

        if $z4 != 0 goto label2;

     label1:
        $r15 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>("Error: no USER_ID specified");

        staticinvoke <com.android.commands.pm.Pm: void showUsage()>();

        return;

     label2:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r4);

     label3:
        r2 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        if r2 != null goto label4;

        $r14 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>("Error: no package or component specified");

        staticinvoke <com.android.commands.pm.Pm: void showUsage()>();

        return;

     label4:
        $r5 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        interfaceinvoke $r5.<android.content.pm.IPackageManager: boolean setApplicationBlockedSettingAsUser(java.lang.String,boolean,int)>(r2, z0, i0);

        $r7 = <java.lang.System: java.io.PrintStream err>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" new blocked state: ");

        $r11 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        $z3 = interfaceinvoke $r11.<android.content.pm.IPackageManager: boolean getApplicationBlockedSettingAsUser(java.lang.String,int)>(r2, i0);

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r12);

     label5:
        return;

     label6:
        $r17 := @caughtexception;

        r3 = $r17;

        $r16 = <java.lang.System: java.io.PrintStream err>;

        $r19 = virtualinvoke r3.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r19);

        $r18 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

        return;

        catch android.os.RemoteException from label4 to label5 with label6;
    }

    private void runSetEnabledSetting(int)
    {
        com.android.commands.pm.Pm r0;
        int i0, i1, $i2, $i3, $i4;
        java.lang.String r1, r2, r6, $r10, $r16, $r18, $r21, $r27, $r32, $r35, $r39;
        android.content.ComponentName r3;
        android.os.RemoteException r4, r5, $r37, $r41;
        boolean z0, $z1;
        android.content.pm.IPackageManager $r7, $r14, $r19, $r29;
        java.lang.StringBuilder $r8, $r11, $r12, $r13, $r15, $r17, $r20, $r22, $r23, $r24, $r25, $r28, $r31;
        java.io.PrintStream $r9, $r26, $r30, $r33, $r34, $r36, $r38, $r40;

        r0 := @this: com.android.commands.pm.Pm;

        i0 := @parameter0: int;

        r1 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOption()>();

        i1 = 0;

        if r1 == null goto label03;

        z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--user");

        i1 = 0;

        if z0 == 0 goto label03;

        r6 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOptionData()>();

        if r6 == null goto label01;

        $z1 = staticinvoke <com.android.commands.pm.Pm: boolean isNumber(java.lang.String)>(r6);

        if $z1 != 0 goto label02;

     label01:
        $r33 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>("Error: no USER_ID specified");

        staticinvoke <com.android.commands.pm.Pm: void showUsage()>();

        return;

     label02:
        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r6);

     label03:
        r2 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        if r2 != null goto label04;

        $r30 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>("Error: no package or component specified");

        staticinvoke <com.android.commands.pm.Pm: void showUsage()>();

        return;

     label04:
        r3 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>(r2);

        if r3 != null goto label08;

     label05:
        $r19 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("shell:");

        $i3 = staticinvoke <android.os.Process: int myUid()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r19.<android.content.pm.IPackageManager: void setApplicationEnabledSetting(java.lang.String,int,int,int,java.lang.String)>(r2, i0, 0, i1, $r21);

        $r26 = <java.lang.System: java.io.PrintStream err>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" new state: ");

        $r29 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        $i4 = interfaceinvoke $r29.<android.content.pm.IPackageManager: int getApplicationEnabledSetting(java.lang.String,int)>(r2, i1);

        $r27 = staticinvoke <com.android.commands.pm.Pm: java.lang.String enabledSettingToString(int)>($i4);

        $r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r32);

     label06:
        return;

     label07:
        $r37 := @caughtexception;

        r5 = $r37;

        $r36 = <java.lang.System: java.io.PrintStream err>;

        $r35 = virtualinvoke r5.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r36.<java.io.PrintStream: void println(java.lang.String)>($r35);

        $r34 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

        return;

     label08:
        $r7 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        interfaceinvoke $r7.<android.content.pm.IPackageManager: void setComponentEnabledSetting(android.content.ComponentName,int,int,int)>(r3, i0, 0, i1);

        $r9 = <java.lang.System: java.io.PrintStream err>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Component ");

        $r10 = virtualinvoke r3.<android.content.ComponentName: java.lang.String toShortString()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" new state: ");

        $r14 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        $i2 = interfaceinvoke $r14.<android.content.pm.IPackageManager: int getComponentEnabledSetting(android.content.ComponentName,int)>(r3, i1);

        $r16 = staticinvoke <com.android.commands.pm.Pm: java.lang.String enabledSettingToString(int)>($i2);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r18);

     label09:
        return;

     label10:
        $r41 := @caughtexception;

        r4 = $r41;

        $r40 = <java.lang.System: java.io.PrintStream err>;

        $r39 = virtualinvoke r4.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r40.<java.io.PrintStream: void println(java.lang.String)>($r39);

        $r38 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r38.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

        return;

        catch android.os.RemoteException from label05 to label06 with label07;
        catch android.os.RemoteException from label08 to label09 with label10;
    }

    private void runSetInstallLocation()
    {
        com.android.commands.pm.Pm r0;
        java.lang.String r1, $r9;
        int i0;
        android.os.RemoteException r3, $r7;
        android.content.pm.IPackageManager $r4;
        boolean $z0;
        java.io.PrintStream $r5, $r6, $r8, $r10, $r12;
        java.lang.NumberFormatException $r11;

        r0 := @this: com.android.commands.pm.Pm;

        r1 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        if r1 != null goto label2;

        $r6 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("Error: no install location specified.");

     label1:
        return;

     label2:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

     label3:
        $r4 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        $z0 = interfaceinvoke $r4.<android.content.pm.IPackageManager: boolean setInstallLocation(int)>(i0);

        if $z0 != 0 goto label1;

        $r5 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("Error: install location has to be a number.");

     label4:
        return;

     label5:
        $r7 := @caughtexception;

        r3 = $r7;

        $r8 = <java.lang.System: java.io.PrintStream err>;

        $r9 = virtualinvoke r3.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r9);

        $r10 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

        return;

     label6:
        $r11 := @caughtexception;

        $r12 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>("Error: install location has to be a number.");

        return;

        catch java.lang.NumberFormatException from label2 to label3 with label6;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    private void runSetPermissionEnforced()
    {
        com.android.commands.pm.Pm r0;
        java.lang.String r1, r2, $r11, $r16, $r18, $r25, $r26;
        boolean z0;
        java.lang.SecurityException r3, $r12;
        java.lang.IllegalArgumentException r4, $r21;
        android.os.RemoteException r5, $r9;
        android.content.pm.IPackageManager $r6;
        java.io.PrintStream $r7, $r8, $r10, $r13, $r14, $r23;
        java.lang.StringBuilder $r15, $r17, $r19, $r20, $r22, $r24;

        r0 := @this: com.android.commands.pm.Pm;

        r1 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        if r1 != null goto label1;

        $r8 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>("Error: no permission specified");

        staticinvoke <com.android.commands.pm.Pm: void showUsage()>();

        return;

     label1:
        r2 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        if r2 != null goto label2;

        $r7 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("Error: no enforcement specified");

        staticinvoke <com.android.commands.pm.Pm: void showUsage()>();

        return;

     label2:
        z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r2);

     label3:
        $r6 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        interfaceinvoke $r6.<android.content.pm.IPackageManager: void setPermissionEnforced(java.lang.String,boolean)>(r1, z0);

     label4:
        return;

     label5:
        $r9 := @caughtexception;

        r5 = $r9;

        $r10 = <java.lang.System: java.io.PrintStream err>;

        $r11 = virtualinvoke r5.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r11);

        $r13 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

        return;

     label6:
        $r21 := @caughtexception;

        r4 = $r21;

        $r23 = <java.lang.System: java.io.PrintStream err>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad argument: ");

        $r25 = virtualinvoke r4.<java.lang.IllegalArgumentException: java.lang.String toString()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r26);

        staticinvoke <com.android.commands.pm.Pm: void showUsage()>();

        return;

     label7:
        $r12 := @caughtexception;

        r3 = $r12;

        $r14 = <java.lang.System: java.io.PrintStream err>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Operation not allowed: ");

        $r16 = virtualinvoke r3.<java.lang.SecurityException: java.lang.String toString()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r18);

        return;

        catch android.os.RemoteException from label3 to label4 with label5;
        catch java.lang.IllegalArgumentException from label3 to label4 with label6;
        catch java.lang.SecurityException from label3 to label4 with label7;
    }

    private void runTrimCaches()
    {
        com.android.commands.pm.Pm r0;
        java.lang.String r1, $r17, $r19, $r25, $r29, $r37, $r38, $r40;
        int i0, $i5, $i6;
        long l1, l2, l3;
        com.android.commands.pm.Pm$ClearDataObserver r3, $r9;
        java.lang.SecurityException r4, $r36;
        java.lang.IllegalArgumentException r5, $r15;
        android.os.RemoteException r6, $r23;
        java.lang.Throwable r7, $r42;
        boolean z0;
        char c4;
        android.content.pm.IPackageManager $r10;
        java.lang.StringBuilder $r11, $r12, $r16, $r18, $r20, $r24, $r30, $r31, $r33, $r35, $r39, $r41;
        java.io.PrintStream $r13, $r14, $r21, $r26, $r28, $r32, $r34;
        java.lang.InterruptedException $r22;
        java.lang.NumberFormatException $r27;

        r0 := @this: com.android.commands.pm.Pm;

        r1 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        if r1 != null goto label01;

        $r14 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>("Error: no size specified");

        staticinvoke <com.android.commands.pm.Pm: void showUsage()>();

        return;

     label01:
        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        l1 = 1L;

        if i0 <= 1 goto label04;

        $i5 = i0 - 1;

        c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i5);

        if c4 == 75 goto label02;

        if c4 != 107 goto label12;

     label02:
        l1 = 1024L;

     label03:
        $i6 = i0 - 1;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i6);

     label04:
        l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r1);

     label05:
        l3 = l2 * l1;

        $r9 = new com.android.commands.pm.Pm$ClearDataObserver;

        specialinvoke $r9.<com.android.commands.pm.Pm$ClearDataObserver: void <init>()>();

        r3 = $r9;

     label06:
        $r10 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        interfaceinvoke $r10.<android.content.pm.IPackageManager: void freeStorageAndNotify(long,android.content.pm.IPackageDataObserver)>(l3, r3);

        entermonitor r3;

     label07:
        z0 = r3.<com.android.commands.pm.Pm$ClearDataObserver: boolean finished>;

     label08:
        if z0 != 0 goto label18;

     label09:
        virtualinvoke r3.<java.lang.Object: void wait()>();

     label10:
        goto label07;

     label11:
        $r22 := @caughtexception;

        goto label07;

     label12:
        if c4 == 77 goto label13;

        if c4 != 109 goto label14;

     label13:
        l1 = 1048576L;

        goto label03;

     label14:
        if c4 == 71 goto label15;

        if c4 != 103 goto label16;

     label15:
        l1 = 1073741824L;

        goto label03;

     label16:
        $r13 = <java.lang.System: java.io.PrintStream err>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid suffix: ");

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c4);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r17);

        staticinvoke <com.android.commands.pm.Pm: void showUsage()>();

        return;

     label17:
        $r27 := @caughtexception;

        $r32 = <java.lang.System: java.io.PrintStream err>;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: expected number at: ");

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r37 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>($r37);

        staticinvoke <com.android.commands.pm.Pm: void showUsage()>();

        return;

     label18:
        exitmonitor r3;

     label19:
        return;

     label20:
        $r42 := @caughtexception;

        r7 = $r42;

     label21:
        exitmonitor r3;

     label22:
        throw r7;

     label23:
        $r23 := @caughtexception;

        r6 = $r23;

        $r28 = <java.lang.System: java.io.PrintStream err>;

        $r29 = virtualinvoke r6.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>($r29);

        $r26 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

        return;

     label24:
        $r15 := @caughtexception;

        r5 = $r15;

        $r21 = <java.lang.System: java.io.PrintStream err>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad argument: ");

        $r19 = virtualinvoke r5.<java.lang.IllegalArgumentException: java.lang.String toString()>();

        $r24 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r25);

        staticinvoke <com.android.commands.pm.Pm: void showUsage()>();

        return;

     label25:
        $r36 := @caughtexception;

        r4 = $r36;

        $r34 = <java.lang.System: java.io.PrintStream err>;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Operation not allowed: ");

        $r40 = virtualinvoke r4.<java.lang.SecurityException: java.lang.String toString()>();

        $r39 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>($r38);

        return;

        catch java.lang.NumberFormatException from label04 to label05 with label17;
        catch android.os.RemoteException from label06 to label07 with label23;
        catch java.lang.IllegalArgumentException from label06 to label07 with label24;
        catch java.lang.SecurityException from label06 to label07 with label25;
        catch java.lang.Throwable from label07 to label08 with label20;
        catch java.lang.InterruptedException from label09 to label10 with label11;
        catch java.lang.Throwable from label09 to label10 with label20;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label21 to label22 with label20;
        catch android.os.RemoteException from label22 to label23 with label23;
        catch java.lang.IllegalArgumentException from label22 to label23 with label24;
        catch java.lang.SecurityException from label22 to label23 with label25;
    }

    private void runUninstall()
    {
        com.android.commands.pm.Pm r0;
        byte b0;
        java.lang.String r1, r2, $r10;
        boolean $z0, $z1;
        java.io.PrintStream $r3, $r4, $r5, $r7;
        java.lang.StringBuilder $r6, $r8, $r9;

        r0 := @this: com.android.commands.pm.Pm;

        b0 = 2;

     label1:
        r1 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextOption()>();

        if r1 == null goto label3;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("-k");

        if $z1 == 0 goto label2;

        b0 = b0 | 1;

        goto label1;

     label2:
        $r7 = <java.lang.System: java.io.PrintStream err>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown option: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r10);

        return;

     label3:
        r2 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        if r2 != null goto label4;

        $r5 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("Error: no package specified");

        staticinvoke <com.android.commands.pm.Pm: void showUsage()>();

        return;

     label4:
        $z0 = specialinvoke r0.<com.android.commands.pm.Pm: boolean deletePackage(java.lang.String,int)>(r2, b0);

        if $z0 == 0 goto label5;

        $r4 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>("Success");

        return;

     label5:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("Failure");

        return;
    }

    private static void showUsage()
    {
        java.io.PrintStream $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r98, $r99, $r100, $r101, $r102, $r103;

        $r0 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("usage: pm list packages [-f] [-d] [-e] [-s] [-3] [-i] [-u] [--user USER_ID] [FILTER]");

        $r1 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("       pm list permission-groups");

        $r2 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("       pm list permissions [-g] [-f] [-d] [-u] [GROUP]");

        $r3 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("       pm list instrumentation [-f] [TARGET-PACKAGE]");

        $r4 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>("       pm list features");

        $r5 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("       pm list libraries");

        $r6 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("       pm list users");

        $r7 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("       pm path PACKAGE");

        $r8 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>("       pm dump PACKAGE");

        $r9 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>("       pm install [-l] [-r] [-t] [-i INSTALLER_PACKAGE_NAME] [-s] [-f]");

        $r10 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("                  [--algo <algorithm name> --key <key-in-hex> --iv <IV-in-hex>]");

        $r11 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("                  [--originating-uri <URI>] [--referrer <URI>] PATH");

        $r12 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>("       pm uninstall [-k] PACKAGE");

        $r13 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>("       pm clear [--user USER_ID] PACKAGE");

        $r14 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>("       pm enable [--user USER_ID] PACKAGE_OR_COMPONENT");

        $r15 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>("       pm disable [--user USER_ID] PACKAGE_OR_COMPONENT");

        $r17 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>("       pm disable-user [--user USER_ID] PACKAGE_OR_COMPONENT");

        $r16 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>("       pm disable-until-used [--user USER_ID] PACKAGE_OR_COMPONENT");

        $r19 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>("       pm block [--user USER_ID] PACKAGE_OR_COMPONENT");

        $r18 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>("       pm unblock [--user USER_ID] PACKAGE_OR_COMPONENT");

        $r21 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>("       pm grant PACKAGE PERMISSION");

        $r20 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>("       pm revoke PACKAGE PERMISSION");

        $r23 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>("       pm set-install-location [0/auto] [1/internal] [2/external]");

        $r22 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>("       pm get-install-location");

        $r25 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>("       pm set-permission-enforced PERMISSION [true|false]");

        $r24 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>("       pm trim-caches DESIRED_FREE_SPACE");

        $r27 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>("       pm create-user USER_NAME");

        $r26 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>("       pm remove-user USER_ID");

        $r29 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>("       pm get-max-users");

        $r28 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>("");

        $r31 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>("pm list packages: prints all packages, optionally only");

        $r30 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>("  those whose package name contains the text in FILTER.  Options:");

        $r34 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>("    -f: see their associated file.");

        $r35 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r35.<java.io.PrintStream: void println(java.lang.String)>("    -d: filter to only show disbled packages.");

        $r32 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>("    -e: filter to only show enabled packages.");

        $r33 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>("    -s: filter to only show system packages.");

        $r38 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r38.<java.io.PrintStream: void println(java.lang.String)>("    -3: filter to only show third party packages.");

        $r39 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r39.<java.io.PrintStream: void println(java.lang.String)>("    -i: see the installer for the packages.");

        $r36 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r36.<java.io.PrintStream: void println(java.lang.String)>("    -u: also include uninstalled packages.");

        $r37 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r37.<java.io.PrintStream: void println(java.lang.String)>("");

        $r42 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>("pm list permission-groups: prints all known permission groups.");

        $r43 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r43.<java.io.PrintStream: void println(java.lang.String)>("");

        $r40 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r40.<java.io.PrintStream: void println(java.lang.String)>("pm list permissions: prints all known permissions, optionally only");

        $r41 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r41.<java.io.PrintStream: void println(java.lang.String)>("  those in GROUP.  Options:");

        $r46 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r46.<java.io.PrintStream: void println(java.lang.String)>("    -g: organize by group.");

        $r47 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r47.<java.io.PrintStream: void println(java.lang.String)>("    -f: print all information.");

        $r44 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r44.<java.io.PrintStream: void println(java.lang.String)>("    -s: short summary.");

        $r45 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r45.<java.io.PrintStream: void println(java.lang.String)>("    -d: only list dangerous permissions.");

        $r51 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r51.<java.io.PrintStream: void println(java.lang.String)>("    -u: list only the permissions users will see.");

        $r50 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r50.<java.io.PrintStream: void println(java.lang.String)>("");

        $r49 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r49.<java.io.PrintStream: void println(java.lang.String)>("pm list instrumentation: use to list all test packages; optionally");

        $r48 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r48.<java.io.PrintStream: void println(java.lang.String)>("  supply <TARGET-PACKAGE> to list the test packages for a particular");

        $r55 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r55.<java.io.PrintStream: void println(java.lang.String)>("  application.  Options:");

        $r54 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r54.<java.io.PrintStream: void println(java.lang.String)>("    -f: list the .apk file for the test package.");

        $r53 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r53.<java.io.PrintStream: void println(java.lang.String)>("");

        $r52 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r52.<java.io.PrintStream: void println(java.lang.String)>("pm list features: prints all features of the system.");

        $r59 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r59.<java.io.PrintStream: void println(java.lang.String)>("");

        $r58 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r58.<java.io.PrintStream: void println(java.lang.String)>("pm list users: prints all users on the system.");

        $r57 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r57.<java.io.PrintStream: void println(java.lang.String)>("");

        $r56 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r56.<java.io.PrintStream: void println(java.lang.String)>("pm path: print the path to the .apk of the given PACKAGE.");

        $r63 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r63.<java.io.PrintStream: void println(java.lang.String)>("");

        $r62 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r62.<java.io.PrintStream: void println(java.lang.String)>("pm dump: print system state associated w ith the given PACKAGE.");

        $r61 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r61.<java.io.PrintStream: void println(java.lang.String)>("");

        $r60 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r60.<java.io.PrintStream: void println(java.lang.String)>("pm install: installs a package to the system.  Options:");

        $r68 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r68.<java.io.PrintStream: void println(java.lang.String)>("    -l: install the package with FORWARD_LOCK.");

        $r69 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r69.<java.io.PrintStream: void println(java.lang.String)>("    -r: reinstall an exisiting app, keeping its data.");

        $r70 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r70.<java.io.PrintStream: void println(java.lang.String)>("    -t: allow test .apks to be installed.");

        $r71 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r71.<java.io.PrintStream: void println(java.lang.String)>("    -i: specify the installer package name.");

        $r64 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r64.<java.io.PrintStream: void println(java.lang.String)>("    -s: install package on sdcard.");

        $r65 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r65.<java.io.PrintStream: void println(java.lang.String)>("    -f: install package on internal flash.");

        $r66 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r66.<java.io.PrintStream: void println(java.lang.String)>("    -d: allow version code downgrade.");

        $r67 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r67.<java.io.PrintStream: void println(java.lang.String)>("");

        $r76 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r76.<java.io.PrintStream: void println(java.lang.String)>("pm uninstall: removes a package from the system. Options:");

        $r77 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r77.<java.io.PrintStream: void println(java.lang.String)>("    -k: keep the data and cache directories around after package removal.");

        $r78 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r78.<java.io.PrintStream: void println(java.lang.String)>("");

        $r79 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r79.<java.io.PrintStream: void println(java.lang.String)>("pm clear: deletes all data associated with a package.");

        $r72 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r72.<java.io.PrintStream: void println(java.lang.String)>("");

        $r73 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r73.<java.io.PrintStream: void println(java.lang.String)>("pm enable, disable, disable-user, disable-until-used: these commands");

        $r74 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r74.<java.io.PrintStream: void println(java.lang.String)>("  change the enabled state of a given package or component (written");

        $r75 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r75.<java.io.PrintStream: void println(java.lang.String)>("  as \"package/class\").");

        $r85 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r85.<java.io.PrintStream: void println(java.lang.String)>("");

        $r84 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r84.<java.io.PrintStream: void println(java.lang.String)>("pm grant, revoke: these commands either grant or revoke permissions");

        $r87 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r87.<java.io.PrintStream: void println(java.lang.String)>("  to applications.  Only optional permissions the application has");

        $r86 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r86.<java.io.PrintStream: void println(java.lang.String)>("  declared can be granted or revoked.");

        $r81 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r81.<java.io.PrintStream: void println(java.lang.String)>("");

        $r80 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r80.<java.io.PrintStream: void println(java.lang.String)>("pm get-install-location: returns the current install location.");

        $r83 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r83.<java.io.PrintStream: void println(java.lang.String)>("    0 [auto]: Let system decide the best location");

        $r82 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r82.<java.io.PrintStream: void println(java.lang.String)>("    1 [internal]: Install on internal device storage");

        $r93 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r93.<java.io.PrintStream: void println(java.lang.String)>("    2 [external]: Install on external media");

        $r92 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r92.<java.io.PrintStream: void println(java.lang.String)>("");

        $r95 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r95.<java.io.PrintStream: void println(java.lang.String)>("pm set-install-location: changes the default install location.");

        $r94 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r94.<java.io.PrintStream: void println(java.lang.String)>("  NOTE: this is only intended for debugging; using this can cause");

        $r89 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r89.<java.io.PrintStream: void println(java.lang.String)>("  applications to break and other undersireable behavior.");

        $r88 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r88.<java.io.PrintStream: void println(java.lang.String)>("    0 [auto]: Let system decide the best location");

        $r91 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r91.<java.io.PrintStream: void println(java.lang.String)>("    1 [internal]: Install on internal device storage");

        $r90 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r90.<java.io.PrintStream: void println(java.lang.String)>("    2 [external]: Install on external media");

        $r102 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r102.<java.io.PrintStream: void println(java.lang.String)>("");

        $r103 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r103.<java.io.PrintStream: void println(java.lang.String)>("pm trim-caches: trim cache files to reach the given free space.");

        $r100 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r100.<java.io.PrintStream: void println(java.lang.String)>("");

        $r101 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r101.<java.io.PrintStream: void println(java.lang.String)>("pm create-user: create a new user with the given USER_NAME,");

        $r98 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r98.<java.io.PrintStream: void println(java.lang.String)>("  printing the new user identifier of the user.");

        $r99 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r99.<java.io.PrintStream: void println(java.lang.String)>("");

        $r96 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r96.<java.io.PrintStream: void println(java.lang.String)>("pm remove-user: remove the user with the given USER_IDENTIFIER,");

        $r97 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r97.<java.io.PrintStream: void println(java.lang.String)>("  deleting all data associated with that user");

        return;
    }

    public void run(java.lang.String[])
    {
        com.android.commands.pm.Pm r0;
        java.lang.String[] r1;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24;
        java.lang.String r2, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r33, $r34, $r37, $r40, $r41, $r43;
        java.lang.Throwable r3, $r39;
        int i0, $i1, $i2;
        android.os.IBinder $r4, $r6;
        android.os.IUserManager $r5;
        android.content.pm.IPackageManager $r7, $r8;
        java.lang.StringBuilder $r30, $r32, $r35, $r36, $r42, $r44, $r46, $r47;
        java.io.PrintStream $r31, $r38, $r45;

        r0 := @this: com.android.commands.pm.Pm;

        r1 := @parameter0: java.lang.String[];

        z0 = 0;

        $i1 = lengthof r1;

        if $i1 >= 1 goto label02;

        staticinvoke <com.android.commands.pm.Pm: void showUsage()>();

     label01:
        return;

     label02:
        $r4 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("user");

        $r5 = staticinvoke <android.os.IUserManager$Stub: android.os.IUserManager asInterface(android.os.IBinder)>($r4);

        r0.<com.android.commands.pm.Pm: android.os.IUserManager mUm> = $r5;

        $r6 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("package");

        $r7 = staticinvoke <android.content.pm.IPackageManager$Stub: android.content.pm.IPackageManager asInterface(android.os.IBinder)>($r6);

        r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm> = $r7;

        $r8 = r0.<com.android.commands.pm.Pm: android.content.pm.IPackageManager mPm>;

        if $r8 != null goto label03;

        $r38 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r38.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

        return;

     label03:
        r0.<com.android.commands.pm.Pm: java.lang.String[] mArgs> = r1;

        r2 = r1[0];

        r0.<com.android.commands.pm.Pm: int mNextArg> = 1;

        $r9 = "list";

        $z3 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z3 == 0 goto label04;

        specialinvoke r0.<com.android.commands.pm.Pm: void runList()>();

        return;

     label04:
        $r10 = "path";

        $z4 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z4 == 0 goto label05;

        specialinvoke r0.<com.android.commands.pm.Pm: void runPath()>();

        return;

     label05:
        $r11 = "dump";

        $z5 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z5 == 0 goto label06;

        specialinvoke r0.<com.android.commands.pm.Pm: void runDump()>();

        return;

     label06:
        $r12 = "install";

        $z6 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z6 == 0 goto label07;

        specialinvoke r0.<com.android.commands.pm.Pm: void runInstall()>();

        return;

     label07:
        $r13 = "uninstall";

        $z7 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z7 == 0 goto label08;

        specialinvoke r0.<com.android.commands.pm.Pm: void runUninstall()>();

        return;

     label08:
        $r14 = "clear";

        $z8 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z8 == 0 goto label09;

        specialinvoke r0.<com.android.commands.pm.Pm: void runClear()>();

        return;

     label09:
        $r15 = "enable";

        $z9 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z9 == 0 goto label10;

        specialinvoke r0.<com.android.commands.pm.Pm: void runSetEnabledSetting(int)>(1);

        return;

     label10:
        $r16 = "disable";

        $z10 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z10 == 0 goto label11;

        specialinvoke r0.<com.android.commands.pm.Pm: void runSetEnabledSetting(int)>(2);

        return;

     label11:
        $r17 = "disable-user";

        $z11 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z11 == 0 goto label12;

        specialinvoke r0.<com.android.commands.pm.Pm: void runSetEnabledSetting(int)>(3);

        return;

     label12:
        $r19 = "disable-until-used";

        $z13 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z13 == 0 goto label13;

        specialinvoke r0.<com.android.commands.pm.Pm: void runSetEnabledSetting(int)>(4);

        return;

     label13:
        $r18 = "block";

        $z12 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z12 == 0 goto label14;

        specialinvoke r0.<com.android.commands.pm.Pm: void runSetBlockedSetting(boolean)>(1);

        return;

     label14:
        $r21 = "unblock";

        $z15 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z15 == 0 goto label15;

        specialinvoke r0.<com.android.commands.pm.Pm: void runSetBlockedSetting(boolean)>(0);

        return;

     label15:
        $r20 = "grant";

        $z14 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z14 == 0 goto label16;

        specialinvoke r0.<com.android.commands.pm.Pm: void runGrantRevokePermission(boolean)>(1);

        return;

     label16:
        $r23 = "revoke";

        $z17 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z17 == 0 goto label17;

        specialinvoke r0.<com.android.commands.pm.Pm: void runGrantRevokePermission(boolean)>(0);

        return;

     label17:
        $r22 = "set-permission-enforced";

        $z16 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z16 == 0 goto label18;

        specialinvoke r0.<com.android.commands.pm.Pm: void runSetPermissionEnforced()>();

        return;

     label18:
        $r25 = "set-install-location";

        $z19 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z19 == 0 goto label19;

        specialinvoke r0.<com.android.commands.pm.Pm: void runSetInstallLocation()>();

        return;

     label19:
        $r24 = "get-install-location";

        $z18 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z18 == 0 goto label20;

        specialinvoke r0.<com.android.commands.pm.Pm: void runGetInstallLocation()>();

        return;

     label20:
        $r27 = "trim-caches";

        $z21 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z21 == 0 goto label21;

        specialinvoke r0.<com.android.commands.pm.Pm: void runTrimCaches()>();

        return;

     label21:
        $r26 = "create-user";

        $z20 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z20 == 0 goto label22;

        virtualinvoke r0.<com.android.commands.pm.Pm: void runCreateUser()>();

        return;

     label22:
        $r29 = "remove-user";

        $z23 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z23 == 0 goto label23;

        virtualinvoke r0.<com.android.commands.pm.Pm: void runRemoveUser()>();

        return;

     label23:
        $r28 = "get-max-users";

        $z22 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z22 == 0 goto label24;

        virtualinvoke r0.<com.android.commands.pm.Pm: void runGetMaxUsers()>();

        return;

     label24:
        $i2 = lengthof r1;

        if $i2 != 1 goto label36;

        $r41 = r1[0];

        $z24 = virtualinvoke $r41.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("-l");

        if $z24 == 0 goto label29;

     label25:
        z0 = 1;

     label26:
        specialinvoke r0.<com.android.commands.pm.Pm: void runListPackages(boolean)>(0);

     label27:
        if z0 != 0 goto label01;

        if r2 == null goto label28;

        $r31 = <java.lang.System: java.io.PrintStream err>;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: unknown command \'");

        $r36 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>($r34);

     label28:
        staticinvoke <com.android.commands.pm.Pm: void showUsage()>();

        return;

     label29:
        $r37 = r1[0];

        z2 = virtualinvoke $r37.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("-lf");

     label30:
        z0 = 0;

        if z2 == 0 goto label27;

        z0 = 1;

     label31:
        specialinvoke r0.<com.android.commands.pm.Pm: void runListPackages(boolean)>(1);

     label32:
        goto label27;

     label33:
        $r39 := @caughtexception;

        r3 = $r39;

        if z0 != 0 goto label35;

        if r2 == null goto label34;

        $r45 = <java.lang.System: java.io.PrintStream err>;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: unknown command \'");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r42 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r45.<java.io.PrintStream: void println(java.lang.String)>($r43);

     label34:
        staticinvoke <com.android.commands.pm.Pm: void showUsage()>();

     label35:
        throw r3;

     label36:
        i0 = lengthof r1;

     label37:
        z0 = 0;

        if i0 != 2 goto label27;

     label38:
        $r33 = r1[0];

        z1 = virtualinvoke $r33.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("-p");

     label39:
        z0 = 0;

        if z1 == 0 goto label27;

        z0 = 1;

     label40:
        $r40 = r1[1];

        specialinvoke r0.<com.android.commands.pm.Pm: void displayPackageFilePath(java.lang.String)>($r40);

     label41:
        goto label27;

        catch java.lang.Throwable from label24 to label25 with label33;
        catch java.lang.Throwable from label26 to label27 with label33;
        catch java.lang.Throwable from label29 to label30 with label33;
        catch java.lang.Throwable from label31 to label32 with label33;
        catch java.lang.Throwable from label36 to label37 with label33;
        catch java.lang.Throwable from label38 to label39 with label33;
        catch java.lang.Throwable from label40 to label41 with label33;
    }

    public void runCreateUser()
    {
        com.android.commands.pm.Pm r0;
        java.lang.String r1, $r10, $r13;
        android.os.RemoteException r2, $r12;
        android.content.pm.UserInfo r3;
        android.os.IUserManager $r4;
        java.io.PrintStream $r5, $r7, $r11, $r14, $r15;
        java.lang.StringBuilder $r6, $r8, $r9;
        int $i0;

        r0 := @this: com.android.commands.pm.Pm;

        r1 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        if r1 != null goto label1;

        $r11 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("Error: no user name specified.");

        return;

     label1:
        $r4 = r0.<com.android.commands.pm.Pm: android.os.IUserManager mUm>;

        r3 = interfaceinvoke $r4.<android.os.IUserManager: android.content.pm.UserInfo createUser(java.lang.String,int)>(r1, 0);

     label2:
        if r3 == null goto label6;

     label3:
        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Success: created user id ");

        $i0 = r3.<android.content.pm.UserInfo: int id>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r10);

     label4:
        return;

     label5:
        $r12 := @caughtexception;

        r2 = $r12;

        $r14 = <java.lang.System: java.io.PrintStream err>;

        $r13 = virtualinvoke r2.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r13);

        $r15 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

        return;

     label6:
        $r5 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("Error: couldn\'t create User.");

     label7:
        return;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
        catch android.os.RemoteException from label6 to label7 with label5;
    }

    public void runGetMaxUsers()
    {
        com.android.commands.pm.Pm r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.io.PrintStream $r2;
        int $i0;
        java.lang.String $r5;

        r0 := @this: com.android.commands.pm.Pm;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Maximum supported users: ");

        $i0 = staticinvoke <android.os.UserManager: int getMaxSupportedUsers()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r5);

        return;
    }

    public void runListUsers()
    {
        com.android.commands.pm.Pm r0;
        android.os.RemoteException r1, $r13;
        java.util.List r2;
        int i0, $i1;
        android.os.IUserManager $r3;
        java.io.PrintStream $r4, $r6, $r14, $r16, $r17;
        java.lang.StringBuilder $r5, $r7, $r11;
        java.lang.Object $r8;
        android.content.pm.UserInfo $r9;
        java.lang.String $r10, $r12, $r15;

        r0 := @this: com.android.commands.pm.Pm;

     label01:
        $r3 = r0.<com.android.commands.pm.Pm: android.os.IUserManager mUm>;

        r2 = interfaceinvoke $r3.<android.os.IUserManager: java.util.List getUsers(boolean)>(0);

     label02:
        if r2 != null goto label05;

     label03:
        $r14 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>("Error: couldn\'t get users");

     label04:
        return;

     label05:
        $r4 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>("Users:");

     label06:
        i0 = 0;

     label07:
        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        if i0 >= $i1 goto label10;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r8 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i0);

        $r9 = (android.content.pm.UserInfo) $r8;

        $r10 = virtualinvoke $r9.<android.content.pm.UserInfo: java.lang.String toString()>();

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r12);

     label08:
        i0 = i0 + 1;

        goto label07;

     label09:
        $r13 := @caughtexception;

        r1 = $r13;

        $r16 = <java.lang.System: java.io.PrintStream err>;

        $r15 = virtualinvoke r1.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r15);

        $r17 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

     label10:
        return;

        catch android.os.RemoteException from label01 to label02 with label09;
        catch android.os.RemoteException from label03 to label04 with label09;
        catch android.os.RemoteException from label05 to label06 with label09;
        catch android.os.RemoteException from label07 to label08 with label09;
    }

    public void runRemoveUser()
    {
        com.android.commands.pm.Pm r0;
        java.lang.String r1, $r9, $r15, $r22;
        int i0;
        android.os.RemoteException r3, $r13;
        android.os.IUserManager $r4;
        boolean $z0;
        java.lang.StringBuilder $r5, $r7, $r8, $r16, $r18, $r20, $r21;
        java.io.PrintStream $r6, $r10, $r11, $r12, $r14, $r19;
        java.lang.NumberFormatException $r17;

        r0 := @this: com.android.commands.pm.Pm;

        r1 = specialinvoke r0.<com.android.commands.pm.Pm: java.lang.String nextArg()>();

        if r1 != null goto label1;

        $r11 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("Error: no user id specified.");

        return;

     label1:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

     label2:
        $r4 = r0.<com.android.commands.pm.Pm: android.os.IUserManager mUm>;

        $z0 = interfaceinvoke $r4.<android.os.IUserManager: boolean removeUser(int)>(i0);

        if $z0 == 0 goto label6;

        $r10 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("Success: removed user");

     label3:
        return;

     label4:
        $r13 := @caughtexception;

        r3 = $r13;

        $r12 = <java.lang.System: java.io.PrintStream err>;

        $r15 = virtualinvoke r3.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r15);

        $r14 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Package Manager.  Is the system running?");

        return;

     label5:
        $r17 := @caughtexception;

        $r19 = <java.lang.System: java.io.PrintStream err>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: user id \'");

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' is not a number.");

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r22);

        return;

     label6:
        $r6 = <java.lang.System: java.io.PrintStream err>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: couldn\'t remove user id ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r9);

     label7:
        return;

        catch java.lang.NumberFormatException from label1 to label2 with label5;
        catch android.os.RemoteException from label2 to label3 with label4;
        catch android.os.RemoteException from label6 to label7 with label4;
    }

    public static void <clinit>()
    {
        <com.android.commands.pm.Pm: java.lang.String PM_NOT_RUNNING_ERR> = "Error: Could not access the Package Manager.  Is the system running?";

        return;
    }
}
