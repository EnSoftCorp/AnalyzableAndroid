final class java.util.Hashtable$KeyEnumeration extends java.util.Hashtable$HashIterator implements java.util.Enumeration
{
    final java.util.Hashtable this$0;

    private void <init>(java.util.Hashtable)
    {
        java.util.Hashtable$KeyEnumeration r0;
        java.util.Hashtable r1;

        r0 := @this: java.util.Hashtable$KeyEnumeration;

        r1 := @parameter0: java.util.Hashtable;

        r0.<java.util.Hashtable$KeyEnumeration: java.util.Hashtable this$0> = r1;

        specialinvoke r0.<java.util.Hashtable$HashIterator: void <init>(java.util.Hashtable)>(r1);

        return;
    }

    void <init>(java.util.Hashtable, java.util.Hashtable$1)
    {
        java.util.Hashtable$KeyEnumeration r0;
        java.util.Hashtable r1;
        java.util.Hashtable$1 r2;

        r0 := @this: java.util.Hashtable$KeyEnumeration;

        r1 := @parameter0: java.util.Hashtable;

        r2 := @parameter1: java.util.Hashtable$1;

        specialinvoke r0.<java.util.Hashtable$KeyEnumeration: void <init>(java.util.Hashtable)>(r1);

        return;
    }

    public boolean hasMoreElements()
    {
        java.util.Hashtable$KeyEnumeration r0;
        boolean $z0;

        r0 := @this: java.util.Hashtable$KeyEnumeration;

        $z0 = virtualinvoke r0.<java.util.Hashtable$KeyEnumeration: boolean hasNext()>();

        return $z0;
    }

    public java.lang.Object nextElement()
    {
        java.util.Hashtable$KeyEnumeration r0;
        java.util.Hashtable$HashtableEntry $r1;
        java.lang.Object $r2;

        r0 := @this: java.util.Hashtable$KeyEnumeration;

        $r1 = virtualinvoke r0.<java.util.Hashtable$KeyEnumeration: java.util.Hashtable$HashtableEntry nextEntryNotFailFast()>();

        $r2 = $r1.<java.util.Hashtable$HashtableEntry: java.lang.Object key>;

        return $r2;
    }
}
