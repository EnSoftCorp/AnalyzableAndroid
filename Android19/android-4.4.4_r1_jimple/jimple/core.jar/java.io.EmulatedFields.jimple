class java.io.EmulatedFields extends java.lang.Object
{
    private java.io.ObjectStreamField[] declaredFields;
    private java.io.EmulatedFields$ObjectSlot[] slotsToSerialize;

    public void <init>(java.io.ObjectStreamField[], java.io.ObjectStreamField[])
    {
        java.io.EmulatedFields r0;
        java.io.ObjectStreamField[] r1, r2;

        r0 := @this: java.io.EmulatedFields;

        r1 := @parameter0: java.io.ObjectStreamField[];

        r2 := @parameter1: java.io.ObjectStreamField[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        specialinvoke r0.<java.io.EmulatedFields: void buildSlots(java.io.ObjectStreamField[])>(r1);

        r0.<java.io.EmulatedFields: java.io.ObjectStreamField[] declaredFields> = r2;

        return;
    }

    private void buildSlots(java.io.ObjectStreamField[])
    {
        java.io.EmulatedFields r0;
        java.io.ObjectStreamField[] r1;
        int i0, $i1, $i2;
        java.io.EmulatedFields$ObjectSlot r2, $r4;
        java.io.EmulatedFields$ObjectSlot[] $r3, $r5;
        java.io.ObjectStreamField $r6;

        r0 := @this: java.io.EmulatedFields;

        r1 := @parameter0: java.io.ObjectStreamField[];

        $i1 = lengthof r1;

        $r3 = newarray (java.io.EmulatedFields$ObjectSlot)[$i1];

        r0.<java.io.EmulatedFields: java.io.EmulatedFields$ObjectSlot[] slotsToSerialize> = $r3;

        i0 = 0;

     label1:
        $i2 = lengthof r1;

        if i0 >= $i2 goto label2;

        $r4 = new java.io.EmulatedFields$ObjectSlot;

        specialinvoke $r4.<java.io.EmulatedFields$ObjectSlot: void <init>()>();

        r2 = $r4;

        $r5 = r0.<java.io.EmulatedFields: java.io.EmulatedFields$ObjectSlot[] slotsToSerialize>;

        $r5[i0] = r2;

        $r6 = r1[i0];

        r2.<java.io.EmulatedFields$ObjectSlot: java.io.ObjectStreamField field> = $r6;

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    private java.io.EmulatedFields$ObjectSlot findMandatorySlot(java.lang.String, java.lang.Class)
    {
        java.io.EmulatedFields r0;
        java.lang.String r1, $r10;
        java.lang.Class r2, $r12;
        java.io.EmulatedFields$ObjectSlot r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9;
        java.io.ObjectStreamField $r11;
        boolean $z0;

        r0 := @this: java.io.EmulatedFields;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        r3 = specialinvoke r0.<java.io.EmulatedFields: java.io.EmulatedFields$ObjectSlot findSlot(java.lang.String,java.lang.Class)>(r1, r2);

        if r3 == null goto label1;

        if r2 != null goto label2;

        $r11 = r3.<java.io.EmulatedFields$ObjectSlot: java.io.ObjectStreamField field>;

        $r12 = virtualinvoke $r11.<java.io.ObjectStreamField: java.lang.Class getType()>();

        $z0 = virtualinvoke $r12.<java.lang.Class: boolean isPrimitive()>();

        if $z0 == 0 goto label2;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no field \'");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' of type ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r4;

     label2:
        return r3;
    }

    private java.io.EmulatedFields$ObjectSlot findSlot(java.lang.String, java.lang.Class)
    {
        java.io.EmulatedFields r0;
        java.lang.String r1, $r10, $r15;
        java.lang.Class r2, $r12, $r14, $r18, $r19;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        int i0, i1, $i2, $i3;
        java.io.ObjectStreamField r3, $r16, $r17, $r20;
        java.io.EmulatedFields$ObjectSlot r4, r5, $r11;
        java.io.EmulatedFields$ObjectSlot[] $r6, $r13;
        java.io.ObjectStreamField[] $r7, $r8, $r9;

        r0 := @this: java.io.EmulatedFields;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        if r2 == null goto label04;

        $z5 = virtualinvoke r2.<java.lang.Class: boolean isPrimitive()>();

        if $z5 == 0 goto label04;

        z0 = 1;

     label01:
        i0 = 0;

     label02:
        $r6 = r0.<java.io.EmulatedFields: java.io.EmulatedFields$ObjectSlot[] slotsToSerialize>;

        $i2 = lengthof $r6;

        if i0 >= $i2 goto label07;

        $r13 = r0.<java.io.EmulatedFields: java.io.EmulatedFields$ObjectSlot[] slotsToSerialize>;

        r5 = $r13[i0];

        $r16 = r5.<java.io.EmulatedFields$ObjectSlot: java.io.ObjectStreamField field>;

        $r15 = virtualinvoke $r16.<java.io.ObjectStreamField: java.lang.String getName()>();

        $z3 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z3 == 0 goto label06;

        if z0 == 0 goto label05;

        $r20 = r5.<java.io.EmulatedFields$ObjectSlot: java.io.ObjectStreamField field>;

        $r19 = virtualinvoke $r20.<java.io.ObjectStreamField: java.lang.Class getType()>();

        if $r19 != r2 goto label06;

     label03:
        return r5;

     label04:
        z0 = 0;

        goto label01;

     label05:
        if r2 == null goto label03;

        $r17 = r5.<java.io.EmulatedFields$ObjectSlot: java.io.ObjectStreamField field>;

        $r18 = virtualinvoke $r17.<java.io.ObjectStreamField: java.lang.Class getType()>();

        $z4 = virtualinvoke $r18.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2);

        if $z4 != 0 goto label03;

     label06:
        i0 = i0 + 1;

        goto label02;

     label07:
        $r7 = r0.<java.io.EmulatedFields: java.io.ObjectStreamField[] declaredFields>;

        if $r7 == null goto label12;

        i1 = 0;

     label08:
        $r8 = r0.<java.io.EmulatedFields: java.io.ObjectStreamField[] declaredFields>;

        $i3 = lengthof $r8;

        if i1 >= $i3 goto label12;

        $r9 = r0.<java.io.EmulatedFields: java.io.ObjectStreamField[] declaredFields>;

        r3 = $r9[i1];

        $r10 = virtualinvoke r3.<java.io.ObjectStreamField: java.lang.String getName()>();

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label11;

        if z0 == 0 goto label10;

        $r14 = virtualinvoke r3.<java.io.ObjectStreamField: java.lang.Class getType()>();

        if r2 != $r14 goto label11;

     label09:
        $r11 = new java.io.EmulatedFields$ObjectSlot;

        specialinvoke $r11.<java.io.EmulatedFields$ObjectSlot: void <init>()>();

        r4 = $r11;

        r4.<java.io.EmulatedFields$ObjectSlot: java.io.ObjectStreamField field> = r3;

        r4.<java.io.EmulatedFields$ObjectSlot: boolean defaulted> = 1;

        return r4;

     label10:
        if r2 == null goto label09;

        $r12 = virtualinvoke r3.<java.io.ObjectStreamField: java.lang.Class getType()>();

        $z2 = virtualinvoke $r12.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2);

        if $z2 != 0 goto label09;

     label11:
        i1 = i1 + 1;

        goto label08;

     label12:
        return null;
    }

    public boolean defaulted(java.lang.String) throws java.lang.IllegalArgumentException
    {
        java.io.EmulatedFields r0;
        java.lang.String r1, $r8;
        java.io.EmulatedFields$ObjectSlot r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;

        r0 := @this: java.io.EmulatedFields;

        r1 := @parameter0: java.lang.String;

        r2 = specialinvoke r0.<java.io.EmulatedFields: java.io.EmulatedFields$ObjectSlot findSlot(java.lang.String,java.lang.Class)>(r1, null);

        if r2 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no field \'");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label1:
        $z0 = r2.<java.io.EmulatedFields$ObjectSlot: boolean defaulted>;

        return $z0;
    }

    public byte get(java.lang.String, byte) throws java.lang.IllegalArgumentException
    {
        java.io.EmulatedFields r0;
        java.lang.String r1;
        byte b0, $b1;
        java.io.EmulatedFields$ObjectSlot r2;
        java.lang.Class $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Byte $r5;

        r0 := @this: java.io.EmulatedFields;

        r1 := @parameter0: java.lang.String;

        b0 := @parameter1: byte;

        $r3 = <java.lang.Byte: java.lang.Class TYPE>;

        r2 = specialinvoke r0.<java.io.EmulatedFields: java.io.EmulatedFields$ObjectSlot findMandatorySlot(java.lang.String,java.lang.Class)>(r1, $r3);

        $z0 = r2.<java.io.EmulatedFields$ObjectSlot: boolean defaulted>;

        if $z0 == 0 goto label1;

        return b0;

     label1:
        $r4 = r2.<java.io.EmulatedFields$ObjectSlot: java.lang.Object fieldValue>;

        $r5 = (java.lang.Byte) $r4;

        $b1 = virtualinvoke $r5.<java.lang.Byte: byte byteValue()>();

        return $b1;
    }

    public char get(java.lang.String, char) throws java.lang.IllegalArgumentException
    {
        java.io.EmulatedFields r0;
        java.lang.String r1;
        char c0, $c1;
        java.io.EmulatedFields$ObjectSlot r2;
        java.lang.Class $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Character $r5;

        r0 := @this: java.io.EmulatedFields;

        r1 := @parameter0: java.lang.String;

        c0 := @parameter1: char;

        $r3 = <java.lang.Character: java.lang.Class TYPE>;

        r2 = specialinvoke r0.<java.io.EmulatedFields: java.io.EmulatedFields$ObjectSlot findMandatorySlot(java.lang.String,java.lang.Class)>(r1, $r3);

        $z0 = r2.<java.io.EmulatedFields$ObjectSlot: boolean defaulted>;

        if $z0 == 0 goto label1;

        return c0;

     label1:
        $r4 = r2.<java.io.EmulatedFields$ObjectSlot: java.lang.Object fieldValue>;

        $r5 = (java.lang.Character) $r4;

        $c1 = virtualinvoke $r5.<java.lang.Character: char charValue()>();

        return $c1;
    }

    public double get(java.lang.String, double) throws java.lang.IllegalArgumentException
    {
        java.io.EmulatedFields r0;
        java.lang.String r1;
        double d0, $d1;
        java.io.EmulatedFields$ObjectSlot r2;
        java.lang.Class $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Double $r5;

        r0 := @this: java.io.EmulatedFields;

        r1 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        $r3 = <java.lang.Double: java.lang.Class TYPE>;

        r2 = specialinvoke r0.<java.io.EmulatedFields: java.io.EmulatedFields$ObjectSlot findMandatorySlot(java.lang.String,java.lang.Class)>(r1, $r3);

        $z0 = r2.<java.io.EmulatedFields$ObjectSlot: boolean defaulted>;

        if $z0 == 0 goto label1;

        return d0;

     label1:
        $r4 = r2.<java.io.EmulatedFields$ObjectSlot: java.lang.Object fieldValue>;

        $r5 = (java.lang.Double) $r4;

        $d1 = virtualinvoke $r5.<java.lang.Double: double doubleValue()>();

        return $d1;
    }

    public float get(java.lang.String, float) throws java.lang.IllegalArgumentException
    {
        java.io.EmulatedFields r0;
        java.lang.String r1;
        float f0, $f1;
        java.io.EmulatedFields$ObjectSlot r2;
        java.lang.Class $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Float $r5;

        r0 := @this: java.io.EmulatedFields;

        r1 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        $r3 = <java.lang.Float: java.lang.Class TYPE>;

        r2 = specialinvoke r0.<java.io.EmulatedFields: java.io.EmulatedFields$ObjectSlot findMandatorySlot(java.lang.String,java.lang.Class)>(r1, $r3);

        $z0 = r2.<java.io.EmulatedFields$ObjectSlot: boolean defaulted>;

        if $z0 == 0 goto label1;

        return f0;

     label1:
        $r4 = r2.<java.io.EmulatedFields$ObjectSlot: java.lang.Object fieldValue>;

        $r5 = (java.lang.Float) $r4;

        $f1 = virtualinvoke $r5.<java.lang.Float: float floatValue()>();

        return $f1;
    }

    public int get(java.lang.String, int) throws java.lang.IllegalArgumentException
    {
        java.io.EmulatedFields r0;
        java.lang.String r1;
        int i0, $i1;
        java.io.EmulatedFields$ObjectSlot r2;
        java.lang.Class $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Integer $r5;

        r0 := @this: java.io.EmulatedFields;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r3 = <java.lang.Integer: java.lang.Class TYPE>;

        r2 = specialinvoke r0.<java.io.EmulatedFields: java.io.EmulatedFields$ObjectSlot findMandatorySlot(java.lang.String,java.lang.Class)>(r1, $r3);

        $z0 = r2.<java.io.EmulatedFields$ObjectSlot: boolean defaulted>;

        if $z0 == 0 goto label1;

        return i0;

     label1:
        $r4 = r2.<java.io.EmulatedFields$ObjectSlot: java.lang.Object fieldValue>;

        $r5 = (java.lang.Integer) $r4;

        $i1 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        return $i1;
    }

    public long get(java.lang.String, long) throws java.lang.IllegalArgumentException
    {
        java.io.EmulatedFields r0;
        java.lang.String r1;
        long l0, $l1;
        java.io.EmulatedFields$ObjectSlot r2;
        java.lang.Class $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Long $r5;

        r0 := @this: java.io.EmulatedFields;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r3 = <java.lang.Long: java.lang.Class TYPE>;

        r2 = specialinvoke r0.<java.io.EmulatedFields: java.io.EmulatedFields$ObjectSlot findMandatorySlot(java.lang.String,java.lang.Class)>(r1, $r3);

        $z0 = r2.<java.io.EmulatedFields$ObjectSlot: boolean defaulted>;

        if $z0 == 0 goto label1;

        return l0;

     label1:
        $r4 = r2.<java.io.EmulatedFields$ObjectSlot: java.lang.Object fieldValue>;

        $r5 = (java.lang.Long) $r4;

        $l1 = virtualinvoke $r5.<java.lang.Long: long longValue()>();

        return $l1;
    }

    public java.lang.Object get(java.lang.String, java.lang.Object) throws java.lang.IllegalArgumentException
    {
        java.io.EmulatedFields r0;
        java.lang.String r1;
        java.lang.Object r2, $r4;
        java.io.EmulatedFields$ObjectSlot r3;
        boolean $z0;

        r0 := @this: java.io.EmulatedFields;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 = specialinvoke r0.<java.io.EmulatedFields: java.io.EmulatedFields$ObjectSlot findMandatorySlot(java.lang.String,java.lang.Class)>(r1, null);

        $z0 = r3.<java.io.EmulatedFields$ObjectSlot: boolean defaulted>;

        if $z0 == 0 goto label1;

        return r2;

     label1:
        $r4 = r3.<java.io.EmulatedFields$ObjectSlot: java.lang.Object fieldValue>;

        return $r4;
    }

    public short get(java.lang.String, short) throws java.lang.IllegalArgumentException
    {
        java.io.EmulatedFields r0;
        java.lang.String r1;
        short s0, $s1;
        java.io.EmulatedFields$ObjectSlot r2;
        java.lang.Class $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Short $r5;

        r0 := @this: java.io.EmulatedFields;

        r1 := @parameter0: java.lang.String;

        s0 := @parameter1: short;

        $r3 = <java.lang.Short: java.lang.Class TYPE>;

        r2 = specialinvoke r0.<java.io.EmulatedFields: java.io.EmulatedFields$ObjectSlot findMandatorySlot(java.lang.String,java.lang.Class)>(r1, $r3);

        $z0 = r2.<java.io.EmulatedFields$ObjectSlot: boolean defaulted>;

        if $z0 == 0 goto label1;

        return s0;

     label1:
        $r4 = r2.<java.io.EmulatedFields$ObjectSlot: java.lang.Object fieldValue>;

        $r5 = (java.lang.Short) $r4;

        $s1 = virtualinvoke $r5.<java.lang.Short: short shortValue()>();

        return $s1;
    }

    public boolean get(java.lang.String, boolean) throws java.lang.IllegalArgumentException
    {
        java.io.EmulatedFields r0;
        java.lang.String r1;
        boolean z0, $z1, $z2;
        java.io.EmulatedFields$ObjectSlot r2;
        java.lang.Class $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;

        r0 := @this: java.io.EmulatedFields;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r3 = <java.lang.Boolean: java.lang.Class TYPE>;

        r2 = specialinvoke r0.<java.io.EmulatedFields: java.io.EmulatedFields$ObjectSlot findMandatorySlot(java.lang.String,java.lang.Class)>(r1, $r3);

        $z1 = r2.<java.io.EmulatedFields$ObjectSlot: boolean defaulted>;

        if $z1 == 0 goto label1;

        return z0;

     label1:
        $r4 = r2.<java.io.EmulatedFields$ObjectSlot: java.lang.Object fieldValue>;

        $r5 = (java.lang.Boolean) $r4;

        $z2 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        return $z2;
    }

    public void put(java.lang.String, byte) throws java.lang.IllegalArgumentException
    {
        java.io.EmulatedFields r0;
        java.lang.String r1;
        byte b0;
        java.io.EmulatedFields$ObjectSlot r2;
        java.lang.Class $r3;
        java.lang.Byte $r4;

        r0 := @this: java.io.EmulatedFields;

        r1 := @parameter0: java.lang.String;

        b0 := @parameter1: byte;

        $r3 = <java.lang.Byte: java.lang.Class TYPE>;

        r2 = specialinvoke r0.<java.io.EmulatedFields: java.io.EmulatedFields$ObjectSlot findMandatorySlot(java.lang.String,java.lang.Class)>(r1, $r3);

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(b0);

        r2.<java.io.EmulatedFields$ObjectSlot: java.lang.Object fieldValue> = $r4;

        r2.<java.io.EmulatedFields$ObjectSlot: boolean defaulted> = 0;

        return;
    }

    public void put(java.lang.String, char) throws java.lang.IllegalArgumentException
    {
        java.io.EmulatedFields r0;
        java.lang.String r1;
        char c0;
        java.io.EmulatedFields$ObjectSlot r2;
        java.lang.Class $r3;
        java.lang.Character $r4;

        r0 := @this: java.io.EmulatedFields;

        r1 := @parameter0: java.lang.String;

        c0 := @parameter1: char;

        $r3 = <java.lang.Character: java.lang.Class TYPE>;

        r2 = specialinvoke r0.<java.io.EmulatedFields: java.io.EmulatedFields$ObjectSlot findMandatorySlot(java.lang.String,java.lang.Class)>(r1, $r3);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c0);

        r2.<java.io.EmulatedFields$ObjectSlot: java.lang.Object fieldValue> = $r4;

        r2.<java.io.EmulatedFields$ObjectSlot: boolean defaulted> = 0;

        return;
    }

    public void put(java.lang.String, double) throws java.lang.IllegalArgumentException
    {
        java.io.EmulatedFields r0;
        java.lang.String r1;
        double d0;
        java.io.EmulatedFields$ObjectSlot r2;
        java.lang.Class $r3;
        java.lang.Double $r4;

        r0 := @this: java.io.EmulatedFields;

        r1 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        $r3 = <java.lang.Double: java.lang.Class TYPE>;

        r2 = specialinvoke r0.<java.io.EmulatedFields: java.io.EmulatedFields$ObjectSlot findMandatorySlot(java.lang.String,java.lang.Class)>(r1, $r3);

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        r2.<java.io.EmulatedFields$ObjectSlot: java.lang.Object fieldValue> = $r4;

        r2.<java.io.EmulatedFields$ObjectSlot: boolean defaulted> = 0;

        return;
    }

    public void put(java.lang.String, float) throws java.lang.IllegalArgumentException
    {
        java.io.EmulatedFields r0;
        java.lang.String r1;
        float f0;
        java.io.EmulatedFields$ObjectSlot r2;
        java.lang.Class $r3;
        java.lang.Float $r4;

        r0 := @this: java.io.EmulatedFields;

        r1 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        $r3 = <java.lang.Float: java.lang.Class TYPE>;

        r2 = specialinvoke r0.<java.io.EmulatedFields: java.io.EmulatedFields$ObjectSlot findMandatorySlot(java.lang.String,java.lang.Class)>(r1, $r3);

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        r2.<java.io.EmulatedFields$ObjectSlot: java.lang.Object fieldValue> = $r4;

        r2.<java.io.EmulatedFields$ObjectSlot: boolean defaulted> = 0;

        return;
    }

    public void put(java.lang.String, int) throws java.lang.IllegalArgumentException
    {
        java.io.EmulatedFields r0;
        java.lang.String r1;
        int i0;
        java.io.EmulatedFields$ObjectSlot r2;
        java.lang.Class $r3;
        java.lang.Integer $r4;

        r0 := @this: java.io.EmulatedFields;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r3 = <java.lang.Integer: java.lang.Class TYPE>;

        r2 = specialinvoke r0.<java.io.EmulatedFields: java.io.EmulatedFields$ObjectSlot findMandatorySlot(java.lang.String,java.lang.Class)>(r1, $r3);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r2.<java.io.EmulatedFields$ObjectSlot: java.lang.Object fieldValue> = $r4;

        r2.<java.io.EmulatedFields$ObjectSlot: boolean defaulted> = 0;

        return;
    }

    public void put(java.lang.String, long) throws java.lang.IllegalArgumentException
    {
        java.io.EmulatedFields r0;
        java.lang.String r1;
        long l0;
        java.io.EmulatedFields$ObjectSlot r2;
        java.lang.Class $r3;
        java.lang.Long $r4;

        r0 := @this: java.io.EmulatedFields;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r3 = <java.lang.Long: java.lang.Class TYPE>;

        r2 = specialinvoke r0.<java.io.EmulatedFields: java.io.EmulatedFields$ObjectSlot findMandatorySlot(java.lang.String,java.lang.Class)>(r1, $r3);

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        r2.<java.io.EmulatedFields$ObjectSlot: java.lang.Object fieldValue> = $r4;

        r2.<java.io.EmulatedFields$ObjectSlot: boolean defaulted> = 0;

        return;
    }

    public void put(java.lang.String, java.lang.Object) throws java.lang.IllegalArgumentException
    {
        java.io.EmulatedFields r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.lang.Class r3;
        java.io.EmulatedFields$ObjectSlot r4;

        r0 := @this: java.io.EmulatedFields;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 = null;

        if r2 == null goto label1;

        r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

     label1:
        r4 = specialinvoke r0.<java.io.EmulatedFields: java.io.EmulatedFields$ObjectSlot findMandatorySlot(java.lang.String,java.lang.Class)>(r1, r3);

        r4.<java.io.EmulatedFields$ObjectSlot: java.lang.Object fieldValue> = r2;

        r4.<java.io.EmulatedFields$ObjectSlot: boolean defaulted> = 0;

        return;
    }

    public void put(java.lang.String, short) throws java.lang.IllegalArgumentException
    {
        java.io.EmulatedFields r0;
        java.lang.String r1;
        short s0;
        java.io.EmulatedFields$ObjectSlot r2;
        java.lang.Class $r3;
        java.lang.Short $r4;

        r0 := @this: java.io.EmulatedFields;

        r1 := @parameter0: java.lang.String;

        s0 := @parameter1: short;

        $r3 = <java.lang.Short: java.lang.Class TYPE>;

        r2 = specialinvoke r0.<java.io.EmulatedFields: java.io.EmulatedFields$ObjectSlot findMandatorySlot(java.lang.String,java.lang.Class)>(r1, $r3);

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(s0);

        r2.<java.io.EmulatedFields$ObjectSlot: java.lang.Object fieldValue> = $r4;

        r2.<java.io.EmulatedFields$ObjectSlot: boolean defaulted> = 0;

        return;
    }

    public void put(java.lang.String, boolean) throws java.lang.IllegalArgumentException
    {
        java.io.EmulatedFields r0;
        java.lang.String r1;
        boolean z0;
        java.io.EmulatedFields$ObjectSlot r2;
        java.lang.Class $r3;
        java.lang.Boolean $r4;

        r0 := @this: java.io.EmulatedFields;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r3 = <java.lang.Boolean: java.lang.Class TYPE>;

        r2 = specialinvoke r0.<java.io.EmulatedFields: java.io.EmulatedFields$ObjectSlot findMandatorySlot(java.lang.String,java.lang.Class)>(r1, $r3);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r2.<java.io.EmulatedFields$ObjectSlot: java.lang.Object fieldValue> = $r4;

        r2.<java.io.EmulatedFields$ObjectSlot: boolean defaulted> = 0;

        return;
    }

    public java.io.EmulatedFields$ObjectSlot[] slots()
    {
        java.io.EmulatedFields r0;
        java.io.EmulatedFields$ObjectSlot[] $r1;

        r0 := @this: java.io.EmulatedFields;

        $r1 = r0.<java.io.EmulatedFields: java.io.EmulatedFields$ObjectSlot[] slotsToSerialize>;

        return $r1;
    }
}
