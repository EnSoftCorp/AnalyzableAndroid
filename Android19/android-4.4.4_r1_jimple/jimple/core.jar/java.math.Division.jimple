class java.math.Division extends java.lang.Object
{

    void <init>()
    {
        java.math.Division r0;

        r0 := @this: java.math.Division;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static int divideArrayByInt(int[], int[], int, int)
    {
        int[] r0, r1;
        int i0, i1, i4, $i10, $i11, $i17, $i21, $i23;
        long l2, l3, l5, l6, l7, l8, $l9, $l12, $l13, $l15, $l16, $l18, $l19, $l20, $l24, $l25, $l26, $l28;
        byte $b14, $b22, $b27;

        r0 := @parameter0: int[];

        r1 := @parameter1: int[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        l2 = 0L;

        $l9 = (long) i1;

        l3 = 4294967295L & $l9;

        i4 = i0 - 1;

     label1:
        if i4 < 0 goto label6;

        $l15 = l2 << 32;

        $i10 = r1[i4];

        $l13 = (long) $i10;

        $l12 = 4294967295L & $l13;

        l5 = $l15 | $l12;

        $b14 = l5 cmp 0L;

        if $b14 < 0 goto label3;

        l8 = l5 / l3;

        l2 = l5 % l3;

     label2:
        $l20 = 4294967295L & l8;

        $i23 = (int) $l20;

        r0[i4] = $i23;

        i4 = i4 + -1;

        goto label1;

     label3:
        l6 = l5 >>> 1;

        $i17 = i1 >>> 1;

        l7 = (long) $i17;

        l8 = l6 / l7;

        $l16 = l6 % l7;

        $l18 = $l16 << 1;

        $l19 = 1L & l5;

        l2 = $l18 + $l19;

        $i21 = i1 & 1;

        if $i21 == 0 goto label2;

        $b22 = l8 cmp l2;

        if $b22 > 0 goto label4;

        l2 = l2 - l8;

        goto label2;

     label4:
        $l26 = l8 - l2;

        $b27 = $l26 cmp l3;

        if $b27 > 0 goto label5;

        $l28 = l3 - l8;

        l2 = l2 + $l28;

        l8 = l8 - 1L;

        goto label2;

     label5:
        $l24 = l3 << 1;

        $l25 = $l24 - l8;

        l2 = l2 + $l25;

        l8 = l8 - 2L;

        goto label2;

     label6:
        $i11 = (int) l2;

        return $i11;
    }
}
