class java.text.AttributedString$AttributedIterator extends java.lang.Object implements java.text.AttributedCharacterIterator
{
    private java.text.AttributedString attrString;
    private java.util.HashSet attributesAllowed;
    private int begin;
    private int end;
    private int offset;

    void <init>(java.text.AttributedString)
    {
        java.text.AttributedString$AttributedIterator r0;
        java.text.AttributedString r1;
        java.lang.String $r2;
        int $i0;

        r0 := @this: java.text.AttributedString$AttributedIterator;

        r1 := @parameter0: java.text.AttributedString;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.text.AttributedString$AttributedIterator: java.text.AttributedString attrString> = r1;

        r0.<java.text.AttributedString$AttributedIterator: int begin> = 0;

        $r2 = r1.<java.text.AttributedString: java.lang.String text>;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        r0.<java.text.AttributedString$AttributedIterator: int end> = $i0;

        r0.<java.text.AttributedString$AttributedIterator: int offset> = 0;

        return;
    }

    void <init>(java.text.AttributedString, java.text.AttributedCharacterIterator$Attribute[], int, int)
    {
        java.text.AttributedString$AttributedIterator r0;
        java.text.AttributedString r1;
        java.text.AttributedCharacterIterator$Attribute[] r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        java.util.HashSet r3, $r6;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;
        java.text.AttributedCharacterIterator$Attribute $r7;

        r0 := @this: java.text.AttributedString$AttributedIterator;

        r1 := @parameter0: java.text.AttributedString;

        r2 := @parameter1: java.text.AttributedCharacterIterator$Attribute[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 < 0 goto label1;

        $r5 = r1.<java.text.AttributedString: java.lang.String text>;

        $i3 = virtualinvoke $r5.<java.lang.String: int length()>();

        if i1 > $i3 goto label1;

        if i0 <= i1 goto label2;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label2:
        r0.<java.text.AttributedString$AttributedIterator: int begin> = i0;

        r0.<java.text.AttributedString$AttributedIterator: int end> = i1;

        r0.<java.text.AttributedString$AttributedIterator: int offset> = i0;

        r0.<java.text.AttributedString$AttributedIterator: java.text.AttributedString attrString> = r1;

        if r2 == null goto label5;

        $r6 = new java.util.HashSet;

        $i4 = lengthof r2;

        $i5 = 4 * $i4;

        $i6 = $i5 / 3;

        $i7 = 1 + $i6;

        specialinvoke $r6.<java.util.HashSet: void <init>(int)>($i7);

        r3 = $r6;

        i2 = lengthof r2;

     label3:
        i2 = i2 + -1;

        if i2 < 0 goto label4;

        $r7 = r2[i2];

        virtualinvoke r3.<java.util.HashSet: boolean add(java.lang.Object)>($r7);

        goto label3;

     label4:
        r0.<java.text.AttributedString$AttributedIterator: java.util.HashSet attributesAllowed> = r3;

     label5:
        return;
    }

    private java.lang.Object currentValue(java.util.List)
    {
        java.text.AttributedString$AttributedIterator r0;
        java.util.List r1;
        java.util.Iterator r2;
        boolean z0, z1;
        java.lang.Object r3, $r5;
        java.text.AttributedString$Range r4;
        int $i0, $i1, $i2, $i3;

        r0 := @this: java.text.AttributedString$AttributedIterator;

        r1 := @parameter0: java.util.List;

        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        r3 = null;

        if z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.text.AttributedString$Range) $r5;

        $i1 = r0.<java.text.AttributedString$AttributedIterator: int offset>;

        $i0 = r4.<java.text.AttributedString$Range: int start>;

        if $i1 < $i0 goto label1;

        $i3 = r0.<java.text.AttributedString$AttributedIterator: int offset>;

        $i2 = r4.<java.text.AttributedString$Range: int end>;

        if $i3 >= $i2 goto label1;

        z1 = specialinvoke r0.<java.text.AttributedString$AttributedIterator: boolean inRange(java.text.AttributedString$Range)>(r4);

        r3 = null;

        if z1 == 0 goto label2;

        r3 = r4.<java.text.AttributedString$Range: java.lang.Object value>;

     label2:
        return r3;
    }

    private boolean inRange(java.text.AttributedString$Range)
    {
        java.text.AttributedString$AttributedIterator r0;
        java.text.AttributedString$Range r1;
        java.lang.Object $r2;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: java.text.AttributedString$AttributedIterator;

        r1 := @parameter0: java.text.AttributedString$Range;

        $r2 = r1.<java.text.AttributedString$Range: java.lang.Object value>;

        $z0 = $r2 instanceof java.text.Annotation;

        if $z0 != 0 goto label2;

     label1:
        return 1;

     label2:
        $i1 = r1.<java.text.AttributedString$Range: int start>;

        $i0 = r0.<java.text.AttributedString$AttributedIterator: int begin>;

        if $i1 < $i0 goto label3;

        $i3 = r1.<java.text.AttributedString$Range: int start>;

        $i2 = r0.<java.text.AttributedString$AttributedIterator: int end>;

        if $i3 >= $i2 goto label3;

        $i5 = r1.<java.text.AttributedString$Range: int end>;

        $i4 = r0.<java.text.AttributedString$AttributedIterator: int begin>;

        if $i5 <= $i4 goto label3;

        $i7 = r1.<java.text.AttributedString$Range: int end>;

        $i6 = r0.<java.text.AttributedString$AttributedIterator: int end>;

        if $i7 <= $i6 goto label1;

     label3:
        return 0;
    }

    private boolean inRange(java.util.List)
    {
        java.text.AttributedString$AttributedIterator r0;
        java.util.List r1;
        java.util.Iterator r2;
        boolean z0, z1, $z2, $z3;
        java.text.AttributedString$Range r3;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        java.lang.Object $r4, $r5, $r6;

        r0 := @this: java.text.AttributedString$AttributedIterator;

        r1 := @parameter0: java.util.List;

        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        z1 = 0;

        if z0 == 0 goto label3;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.text.AttributedString$Range) $r4;

        $i10 = r3.<java.text.AttributedString$Range: int start>;

        $i8 = r0.<java.text.AttributedString$AttributedIterator: int begin>;

        if $i10 < $i8 goto label4;

        $i15 = r3.<java.text.AttributedString$Range: int start>;

        $i14 = r0.<java.text.AttributedString$AttributedIterator: int end>;

        if $i15 >= $i14 goto label4;

        $r6 = r3.<java.text.AttributedString$Range: java.lang.Object value>;

        $z3 = $r6 instanceof java.text.Annotation;

        if $z3 == 0 goto label2;

        i4 = r3.<java.text.AttributedString$Range: int end>;

        i5 = r0.<java.text.AttributedString$AttributedIterator: int begin>;

        z1 = 0;

        if i4 <= i5 goto label3;

        i6 = r3.<java.text.AttributedString$Range: int end>;

        i7 = r0.<java.text.AttributedString$AttributedIterator: int end>;

        z1 = 0;

        if i6 > i7 goto label3;

     label2:
        z1 = 1;

     label3:
        return z1;

     label4:
        $i12 = r3.<java.text.AttributedString$Range: int end>;

        $i9 = r0.<java.text.AttributedString$AttributedIterator: int begin>;

        if $i12 <= $i9 goto label1;

        $i13 = r3.<java.text.AttributedString$Range: int end>;

        $i11 = r0.<java.text.AttributedString$AttributedIterator: int end>;

        if $i13 > $i11 goto label1;

        $r5 = r3.<java.text.AttributedString$Range: java.lang.Object value>;

        $z2 = $r5 instanceof java.text.Annotation;

        if $z2 == 0 goto label5;

        i0 = r3.<java.text.AttributedString$Range: int start>;

        i1 = r0.<java.text.AttributedString$AttributedIterator: int begin>;

        z1 = 0;

        if i0 < i1 goto label3;

        i2 = r3.<java.text.AttributedString$Range: int start>;

        i3 = r0.<java.text.AttributedString$AttributedIterator: int end>;

        z1 = 0;

        if i2 >= i3 goto label3;

     label5:
        return 1;
    }

    private int runLimit(java.util.List)
    {
        java.text.AttributedString$AttributedIterator r0;
        java.util.List r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.util.ListIterator r2;
        java.text.AttributedString$Range r3;
        boolean $z0, $z1;
        java.lang.Object $r4;

        r0 := @this: java.text.AttributedString$AttributedIterator;

        r1 := @parameter0: java.util.List;

        i0 = r0.<java.text.AttributedString$AttributedIterator: int end>;

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        r2 = interfaceinvoke r1.<java.util.List: java.util.ListIterator listIterator(int)>($i1);

     label1:
        $z0 = interfaceinvoke r2.<java.util.ListIterator: boolean hasPrevious()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r2.<java.util.ListIterator: java.lang.Object previous()>();

        r3 = (java.text.AttributedString$Range) $r4;

        $i3 = r3.<java.text.AttributedString$Range: int end>;

        $i2 = r0.<java.text.AttributedString$AttributedIterator: int begin>;

        if $i3 > $i2 goto label3;

     label2:
        return i0;

     label3:
        $i5 = r0.<java.text.AttributedString$AttributedIterator: int offset>;

        $i4 = r3.<java.text.AttributedString$Range: int start>;

        if $i5 < $i4 goto label4;

        $i9 = r0.<java.text.AttributedString$AttributedIterator: int offset>;

        $i8 = r3.<java.text.AttributedString$Range: int end>;

        if $i9 >= $i8 goto label4;

        $z1 = specialinvoke r0.<java.text.AttributedString$AttributedIterator: boolean inRange(java.text.AttributedString$Range)>(r3);

        if $z1 == 0 goto label2;

        $i10 = r3.<java.text.AttributedString$Range: int end>;

        return $i10;

     label4:
        $i7 = r0.<java.text.AttributedString$AttributedIterator: int offset>;

        $i6 = r3.<java.text.AttributedString$Range: int end>;

        if $i7 >= $i6 goto label2;

        i0 = r3.<java.text.AttributedString$Range: int start>;

        goto label1;
    }

    private int runStart(java.util.List)
    {
        java.text.AttributedString$AttributedIterator r0;
        java.util.List r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.util.Iterator r2;
        java.text.AttributedString$Range r3;
        boolean $z0, $z1;
        java.lang.Object $r4;

        r0 := @this: java.text.AttributedString$AttributedIterator;

        r1 := @parameter0: java.util.List;

        i0 = r0.<java.text.AttributedString$AttributedIterator: int begin>;

        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.text.AttributedString$Range) $r4;

        $i2 = r3.<java.text.AttributedString$Range: int start>;

        $i1 = r0.<java.text.AttributedString$AttributedIterator: int end>;

        if $i2 < $i1 goto label3;

     label2:
        return i0;

     label3:
        $i4 = r0.<java.text.AttributedString$AttributedIterator: int offset>;

        $i3 = r3.<java.text.AttributedString$Range: int start>;

        if $i4 < $i3 goto label4;

        $i8 = r0.<java.text.AttributedString$AttributedIterator: int offset>;

        $i7 = r3.<java.text.AttributedString$Range: int end>;

        if $i8 >= $i7 goto label4;

        $z1 = specialinvoke r0.<java.text.AttributedString$AttributedIterator: boolean inRange(java.text.AttributedString$Range)>(r3);

        if $z1 == 0 goto label2;

        $i9 = r3.<java.text.AttributedString$Range: int start>;

        return $i9;

     label4:
        $i6 = r0.<java.text.AttributedString$AttributedIterator: int offset>;

        $i5 = r3.<java.text.AttributedString$Range: int start>;

        if $i6 < $i5 goto label2;

        i0 = r3.<java.text.AttributedString$Range: int end>;

        goto label1;
    }

    public java.lang.Object clone()
    {
        java.text.AttributedString$AttributedIterator r0, r2;
        java.lang.CloneNotSupportedException r1, $r8;
        java.lang.Object $r3, $r6;
        java.util.HashSet $r4, $r5, $r7;
        java.lang.AssertionError $r9;

        r0 := @this: java.text.AttributedString$AttributedIterator;

     label1:
        $r3 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r2 = (java.text.AttributedString$AttributedIterator) $r3;

        $r4 = r0.<java.text.AttributedString$AttributedIterator: java.util.HashSet attributesAllowed>;

        if $r4 == null goto label2;

        $r5 = r0.<java.text.AttributedString$AttributedIterator: java.util.HashSet attributesAllowed>;

        $r6 = virtualinvoke $r5.<java.util.HashSet: java.lang.Object clone()>();

        $r7 = (java.util.HashSet) $r6;

        r2.<java.text.AttributedString$AttributedIterator: java.util.HashSet attributesAllowed> = $r7;

     label2:
        return r2;

     label3:
        $r8 := @caughtexception;

        r1 = $r8;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>(java.lang.Object)>(r1);

        throw $r9;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public char current()
    {
        java.text.AttributedString$AttributedIterator r0;
        int $i0, $i1, $i2;
        java.text.AttributedString $r1;
        java.lang.String $r2;
        char $c3;

        r0 := @this: java.text.AttributedString$AttributedIterator;

        $i1 = r0.<java.text.AttributedString$AttributedIterator: int offset>;

        $i0 = r0.<java.text.AttributedString$AttributedIterator: int end>;

        if $i1 != $i0 goto label1;

        return 65535;

     label1:
        $r1 = r0.<java.text.AttributedString$AttributedIterator: java.text.AttributedString attrString>;

        $r2 = $r1.<java.text.AttributedString: java.lang.String text>;

        $i2 = r0.<java.text.AttributedString$AttributedIterator: int offset>;

        $c3 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i2);

        return $c3;
    }

    public char first()
    {
        java.text.AttributedString$AttributedIterator r0;
        int $i0, $i1, $i2, $i3;
        java.text.AttributedString $r1;
        java.lang.String $r2;
        char $c4;

        r0 := @this: java.text.AttributedString$AttributedIterator;

        $i1 = r0.<java.text.AttributedString$AttributedIterator: int begin>;

        $i0 = r0.<java.text.AttributedString$AttributedIterator: int end>;

        if $i1 != $i0 goto label1;

        return 65535;

     label1:
        $i2 = r0.<java.text.AttributedString$AttributedIterator: int begin>;

        r0.<java.text.AttributedString$AttributedIterator: int offset> = $i2;

        $r1 = r0.<java.text.AttributedString$AttributedIterator: java.text.AttributedString attrString>;

        $r2 = $r1.<java.text.AttributedString: java.lang.String text>;

        $i3 = r0.<java.text.AttributedString$AttributedIterator: int offset>;

        $c4 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i3);

        return $c4;
    }

    public java.util.Set getAllAttributeKeys()
    {
        java.text.AttributedString$AttributedIterator r0;
        java.util.Set r1, $r9;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.util.HashSet $r4, $r12, $r16, $r21;
        java.text.AttributedString $r5, $r7, $r17, $r19;
        java.util.Map $r6, $r8, $r20;
        java.lang.Object $r10, $r11, $r14, $r15;
        boolean $z0, $z1, $z3;
        java.util.List $r13;
        java.lang.String $r18;

        r0 := @this: java.text.AttributedString$AttributedIterator;

        $i0 = r0.<java.text.AttributedString$AttributedIterator: int begin>;

        if $i0 != 0 goto label2;

        $i5 = r0.<java.text.AttributedString$AttributedIterator: int end>;

        $r17 = r0.<java.text.AttributedString$AttributedIterator: java.text.AttributedString attrString>;

        $r18 = $r17.<java.text.AttributedString: java.lang.String text>;

        $i6 = virtualinvoke $r18.<java.lang.String: int length()>();

        if $i5 != $i6 goto label2;

        $r21 = r0.<java.text.AttributedString$AttributedIterator: java.util.HashSet attributesAllowed>;

        if $r21 != null goto label2;

        $r19 = r0.<java.text.AttributedString$AttributedIterator: java.text.AttributedString attrString>;

        $r20 = $r19.<java.text.AttributedString: java.util.Map attributeMap>;

        r1 = interfaceinvoke $r20.<java.util.Map: java.util.Set keySet()>();

     label1:
        return r1;

     label2:
        $r4 = new java.util.HashSet;

        $r5 = r0.<java.text.AttributedString$AttributedIterator: java.text.AttributedString attrString>;

        $r6 = $r5.<java.text.AttributedString: java.util.Map attributeMap>;

        $i1 = interfaceinvoke $r6.<java.util.Map: int size()>();

        $i2 = 4 * $i1;

        $i3 = $i2 / 3;

        $i4 = 1 + $i3;

        specialinvoke $r4.<java.util.HashSet: void <init>(int)>($i4);

        r1 = $r4;

        $r7 = r0.<java.text.AttributedString$AttributedIterator: java.text.AttributedString attrString>;

        $r8 = $r7.<java.text.AttributedString: java.util.Map attributeMap>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r10;

        $r12 = r0.<java.text.AttributedString$AttributedIterator: java.util.HashSet attributesAllowed>;

        if $r12 == null goto label4;

        $r16 = r0.<java.text.AttributedString$AttributedIterator: java.util.HashSet attributesAllowed>;

        $r15 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z3 = virtualinvoke $r16.<java.util.HashSet: boolean contains(java.lang.Object)>($r15);

        if $z3 == 0 goto label3;

     label4:
        $r11 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = (java.util.List) $r11;

        $z1 = specialinvoke r0.<java.text.AttributedString$AttributedIterator: boolean inRange(java.util.List)>($r13);

        if $z1 == 0 goto label3;

        $r14 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r14);

        goto label3;
    }

    public java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)
    {
        java.text.AttributedString$AttributedIterator r0;
        java.text.AttributedCharacterIterator$Attribute r1;
        java.util.ArrayList r2;
        java.util.HashSet $r3, $r8;
        java.text.AttributedString $r4;
        java.util.Map $r5;
        java.lang.Object $r6, $r7;
        boolean $z0;

        r0 := @this: java.text.AttributedString$AttributedIterator;

        r1 := @parameter0: java.text.AttributedCharacterIterator$Attribute;

        $r3 = r0.<java.text.AttributedString$AttributedIterator: java.util.HashSet attributesAllowed>;

        if $r3 == null goto label2;

        $r8 = r0.<java.text.AttributedString$AttributedIterator: java.util.HashSet attributesAllowed>;

        $z0 = virtualinvoke $r8.<java.util.HashSet: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

     label1:
        return null;

     label2:
        $r4 = r0.<java.text.AttributedString$AttributedIterator: java.text.AttributedString attrString>;

        $r5 = $r4.<java.text.AttributedString: java.util.Map attributeMap>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.util.ArrayList) $r6;

        if r2 == null goto label1;

        $r7 = specialinvoke r0.<java.text.AttributedString$AttributedIterator: java.lang.Object currentValue(java.util.List)>(r2);

        return $r7;
    }

    public java.util.Map getAttributes()
    {
        java.text.AttributedString$AttributedIterator r0;
        java.util.HashMap r1, $r5;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.lang.Object r4, $r11, $r12, $r16, $r17;
        java.text.AttributedString $r6, $r8;
        java.util.Map $r7, $r9;
        int $i0, $i1, $i2, $i3;
        java.util.Set $r10;
        boolean $z0, $z1;
        java.util.HashSet $r13, $r18;
        java.util.List $r14;

        r0 := @this: java.text.AttributedString$AttributedIterator;

        $r5 = new java.util.HashMap;

        $r6 = r0.<java.text.AttributedString$AttributedIterator: java.text.AttributedString attrString>;

        $r7 = $r6.<java.text.AttributedString: java.util.Map attributeMap>;

        $i0 = interfaceinvoke $r7.<java.util.Map: int size()>();

        $i1 = 4 * $i0;

        $i2 = $i1 / 3;

        $i3 = 1 + $i2;

        specialinvoke $r5.<java.util.HashMap: void <init>(int)>($i3);

        r1 = $r5;

        $r8 = r0.<java.text.AttributedString$AttributedIterator: java.text.AttributedString attrString>;

        $r9 = $r8.<java.text.AttributedString: java.util.Map attributeMap>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r11 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r11;

        $r13 = r0.<java.text.AttributedString$AttributedIterator: java.util.HashSet attributesAllowed>;

        if $r13 == null goto label2;

        $r18 = r0.<java.text.AttributedString$AttributedIterator: java.util.HashSet attributesAllowed>;

        $r17 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z1 = virtualinvoke $r18.<java.util.HashSet: boolean contains(java.lang.Object)>($r17);

        if $z1 == 0 goto label1;

     label2:
        $r12 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r14 = (java.util.List) $r12;

        r4 = specialinvoke r0.<java.text.AttributedString$AttributedIterator: java.lang.Object currentValue(java.util.List)>($r14);

        if r4 == null goto label1;

        $r16 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, r4);

        goto label1;

     label3:
        return r1;
    }

    public int getBeginIndex()
    {
        java.text.AttributedString$AttributedIterator r0;
        int $i0;

        r0 := @this: java.text.AttributedString$AttributedIterator;

        $i0 = r0.<java.text.AttributedString$AttributedIterator: int begin>;

        return $i0;
    }

    public int getEndIndex()
    {
        java.text.AttributedString$AttributedIterator r0;
        int $i0;

        r0 := @this: java.text.AttributedString$AttributedIterator;

        $i0 = r0.<java.text.AttributedString$AttributedIterator: int end>;

        return $i0;
    }

    public int getIndex()
    {
        java.text.AttributedString$AttributedIterator r0;
        int $i0;

        r0 := @this: java.text.AttributedString$AttributedIterator;

        $i0 = r0.<java.text.AttributedString$AttributedIterator: int offset>;

        return $i0;
    }

    public int getRunLimit()
    {
        java.text.AttributedString$AttributedIterator r0;
        java.util.Set $r1;
        int $i0;

        r0 := @this: java.text.AttributedString$AttributedIterator;

        $r1 = virtualinvoke r0.<java.text.AttributedString$AttributedIterator: java.util.Set getAllAttributeKeys()>();

        $i0 = virtualinvoke r0.<java.text.AttributedString$AttributedIterator: int getRunLimit(java.util.Set)>($r1);

        return $i0;
    }

    public int getRunLimit(java.text.AttributedCharacterIterator$Attribute)
    {
        java.text.AttributedString$AttributedIterator r0;
        java.text.AttributedCharacterIterator$Attribute r1;
        java.util.ArrayList r2;
        java.util.HashSet $r3, $r7;
        java.text.AttributedString $r4;
        java.util.Map $r5;
        java.lang.Object $r6;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: java.text.AttributedString$AttributedIterator;

        r1 := @parameter0: java.text.AttributedCharacterIterator$Attribute;

        $r3 = r0.<java.text.AttributedString$AttributedIterator: java.util.HashSet attributesAllowed>;

        if $r3 == null goto label1;

        $r7 = r0.<java.text.AttributedString$AttributedIterator: java.util.HashSet attributesAllowed>;

        $z0 = virtualinvoke $r7.<java.util.HashSet: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $i2 = r0.<java.text.AttributedString$AttributedIterator: int end>;

        return $i2;

     label1:
        $r4 = r0.<java.text.AttributedString$AttributedIterator: java.text.AttributedString attrString>;

        $r5 = $r4.<java.text.AttributedString: java.util.Map attributeMap>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.util.ArrayList) $r6;

        if r2 != null goto label2;

        $i1 = r0.<java.text.AttributedString$AttributedIterator: int end>;

        return $i1;

     label2:
        $i0 = specialinvoke r0.<java.text.AttributedString$AttributedIterator: int runLimit(java.util.List)>(r2);

        return $i0;
    }

    public int getRunLimit(java.util.Set)
    {
        java.text.AttributedString$AttributedIterator r0;
        java.util.Set r1;
        int i0, i1;
        java.util.Iterator r2;
        boolean $z0;
        java.lang.Object $r3;
        java.text.AttributedCharacterIterator$Attribute $r4;

        r0 := @this: java.text.AttributedString$AttributedIterator;

        r1 := @parameter0: java.util.Set;

        i0 = r0.<java.text.AttributedString$AttributedIterator: int end>;

        r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.text.AttributedCharacterIterator$Attribute) $r3;

        i1 = virtualinvoke r0.<java.text.AttributedString$AttributedIterator: int getRunLimit(java.text.AttributedCharacterIterator$Attribute)>($r4);

        if i1 >= i0 goto label1;

        i0 = i1;

        goto label1;

     label2:
        return i0;
    }

    public int getRunStart()
    {
        java.text.AttributedString$AttributedIterator r0;
        java.util.Set $r1;
        int $i0;

        r0 := @this: java.text.AttributedString$AttributedIterator;

        $r1 = virtualinvoke r0.<java.text.AttributedString$AttributedIterator: java.util.Set getAllAttributeKeys()>();

        $i0 = virtualinvoke r0.<java.text.AttributedString$AttributedIterator: int getRunStart(java.util.Set)>($r1);

        return $i0;
    }

    public int getRunStart(java.text.AttributedCharacterIterator$Attribute)
    {
        java.text.AttributedString$AttributedIterator r0;
        java.text.AttributedCharacterIterator$Attribute r1;
        java.util.ArrayList r2;
        java.util.HashSet $r3, $r7;
        java.text.AttributedString $r4;
        java.util.Map $r5;
        java.lang.Object $r6;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: java.text.AttributedString$AttributedIterator;

        r1 := @parameter0: java.text.AttributedCharacterIterator$Attribute;

        $r3 = r0.<java.text.AttributedString$AttributedIterator: java.util.HashSet attributesAllowed>;

        if $r3 == null goto label1;

        $r7 = r0.<java.text.AttributedString$AttributedIterator: java.util.HashSet attributesAllowed>;

        $z0 = virtualinvoke $r7.<java.util.HashSet: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $i2 = r0.<java.text.AttributedString$AttributedIterator: int begin>;

        return $i2;

     label1:
        $r4 = r0.<java.text.AttributedString$AttributedIterator: java.text.AttributedString attrString>;

        $r5 = $r4.<java.text.AttributedString: java.util.Map attributeMap>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.util.ArrayList) $r6;

        if r2 != null goto label2;

        $i1 = r0.<java.text.AttributedString$AttributedIterator: int begin>;

        return $i1;

     label2:
        $i0 = specialinvoke r0.<java.text.AttributedString$AttributedIterator: int runStart(java.util.List)>(r2);

        return $i0;
    }

    public int getRunStart(java.util.Set)
    {
        java.text.AttributedString$AttributedIterator r0;
        java.util.Set r1;
        int i0, i1;
        java.util.Iterator r2;
        boolean $z0;
        java.lang.Object $r3;
        java.text.AttributedCharacterIterator$Attribute $r4;

        r0 := @this: java.text.AttributedString$AttributedIterator;

        r1 := @parameter0: java.util.Set;

        i0 = r0.<java.text.AttributedString$AttributedIterator: int begin>;

        r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.text.AttributedCharacterIterator$Attribute) $r3;

        i1 = virtualinvoke r0.<java.text.AttributedString$AttributedIterator: int getRunStart(java.text.AttributedCharacterIterator$Attribute)>($r4);

        if i1 <= i0 goto label1;

        i0 = i1;

        goto label1;

     label2:
        return i0;
    }

    public char last()
    {
        java.text.AttributedString$AttributedIterator r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.text.AttributedString $r1;
        java.lang.String $r2;
        char $c5;

        r0 := @this: java.text.AttributedString$AttributedIterator;

        $i1 = r0.<java.text.AttributedString$AttributedIterator: int begin>;

        $i0 = r0.<java.text.AttributedString$AttributedIterator: int end>;

        if $i1 != $i0 goto label1;

        return 65535;

     label1:
        $i2 = r0.<java.text.AttributedString$AttributedIterator: int end>;

        $i3 = -1 + $i2;

        r0.<java.text.AttributedString$AttributedIterator: int offset> = $i3;

        $r1 = r0.<java.text.AttributedString$AttributedIterator: java.text.AttributedString attrString>;

        $r2 = $r1.<java.text.AttributedString: java.lang.String text>;

        $i4 = r0.<java.text.AttributedString$AttributedIterator: int offset>;

        $c5 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i4);

        return $c5;
    }

    public char next()
    {
        java.text.AttributedString$AttributedIterator r0;
        java.lang.String r1;
        int i0, $i1, $i2, $i3, $i4, $i6;
        java.text.AttributedString $r2;
        char $c5;

        r0 := @this: java.text.AttributedString$AttributedIterator;

        $i3 = r0.<java.text.AttributedString$AttributedIterator: int offset>;

        $i1 = r0.<java.text.AttributedString$AttributedIterator: int end>;

        $i2 = -1 + $i1;

        if $i3 < $i2 goto label1;

        $i6 = r0.<java.text.AttributedString$AttributedIterator: int end>;

        r0.<java.text.AttributedString$AttributedIterator: int offset> = $i6;

        return 65535;

     label1:
        $r2 = r0.<java.text.AttributedString$AttributedIterator: java.text.AttributedString attrString>;

        r1 = $r2.<java.text.AttributedString: java.lang.String text>;

        $i4 = r0.<java.text.AttributedString$AttributedIterator: int offset>;

        i0 = 1 + $i4;

        r0.<java.text.AttributedString$AttributedIterator: int offset> = i0;

        $c5 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);

        return $c5;
    }

    public char previous()
    {
        java.text.AttributedString$AttributedIterator r0;
        java.lang.String r1;
        int i0, $i1, $i2, $i3;
        java.text.AttributedString $r2;
        char $c4;

        r0 := @this: java.text.AttributedString$AttributedIterator;

        $i2 = r0.<java.text.AttributedString$AttributedIterator: int offset>;

        $i1 = r0.<java.text.AttributedString$AttributedIterator: int begin>;

        if $i2 != $i1 goto label1;

        return 65535;

     label1:
        $r2 = r0.<java.text.AttributedString$AttributedIterator: java.text.AttributedString attrString>;

        r1 = $r2.<java.text.AttributedString: java.lang.String text>;

        $i3 = r0.<java.text.AttributedString$AttributedIterator: int offset>;

        i0 = -1 + $i3;

        r0.<java.text.AttributedString$AttributedIterator: int offset> = i0;

        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);

        return $c4;
    }

    public char setIndex(int)
    {
        java.text.AttributedString$AttributedIterator r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.IllegalArgumentException $r1;
        java.text.AttributedString $r2;
        java.lang.String $r3;
        char $c6;

        r0 := @this: java.text.AttributedString$AttributedIterator;

        i0 := @parameter0: int;

        $i1 = r0.<java.text.AttributedString$AttributedIterator: int begin>;

        if i0 < $i1 goto label1;

        $i2 = r0.<java.text.AttributedString$AttributedIterator: int end>;

        if i0 <= $i2 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r1;

     label2:
        r0.<java.text.AttributedString$AttributedIterator: int offset> = i0;

        $i4 = r0.<java.text.AttributedString$AttributedIterator: int offset>;

        $i3 = r0.<java.text.AttributedString$AttributedIterator: int end>;

        if $i4 != $i3 goto label3;

        return 65535;

     label3:
        $r2 = r0.<java.text.AttributedString$AttributedIterator: java.text.AttributedString attrString>;

        $r3 = $r2.<java.text.AttributedString: java.lang.String text>;

        $i5 = r0.<java.text.AttributedString$AttributedIterator: int offset>;

        $c6 = virtualinvoke $r3.<java.lang.String: char charAt(int)>($i5);

        return $c6;
    }
}
