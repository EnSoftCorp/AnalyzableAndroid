class java.lang.Daemons$ReferenceQueueDaemon extends java.lang.Daemons$Daemon
{
    private static final java.lang.Daemons$ReferenceQueueDaemon INSTANCE;

    static void <clinit>()
    {
        java.lang.Daemons$ReferenceQueueDaemon $r0;

        $r0 = new java.lang.Daemons$ReferenceQueueDaemon;

        specialinvoke $r0.<java.lang.Daemons$ReferenceQueueDaemon: void <init>()>();

        <java.lang.Daemons$ReferenceQueueDaemon: java.lang.Daemons$ReferenceQueueDaemon INSTANCE> = $r0;

        return;
    }

    private void <init>()
    {
        java.lang.Daemons$ReferenceQueueDaemon r0;

        r0 := @this: java.lang.Daemons$ReferenceQueueDaemon;

        specialinvoke r0.<java.lang.Daemons$Daemon: void <init>(java.lang.Daemons$1)>(null);

        return;
    }

    static java.lang.Daemons$ReferenceQueueDaemon access$000()
    {
        java.lang.Daemons$ReferenceQueueDaemon $r0;

        $r0 = <java.lang.Daemons$ReferenceQueueDaemon: java.lang.Daemons$ReferenceQueueDaemon INSTANCE>;

        return $r0;
    }

    private void enqueue(java.lang.ref.Reference)
    {
        java.lang.Daemons$ReferenceQueueDaemon r0;
        java.lang.ref.Reference r1, r2, $r3, $r4;

        r0 := @this: java.lang.Daemons$ReferenceQueueDaemon;

        r1 := @parameter0: java.lang.ref.Reference;

     label1:
        if r1 == null goto label4;

        $r3 = r1.<java.lang.ref.Reference: java.lang.ref.Reference pendingNext>;

        if r1 != $r3 goto label3;

        r2 = r1;

        r2.<java.lang.ref.Reference: java.lang.ref.Reference pendingNext> = null;

        r1 = null;

     label2:
        virtualinvoke r2.<java.lang.ref.Reference: boolean enqueueInternal()>();

        goto label1;

     label3:
        r2 = r1.<java.lang.ref.Reference: java.lang.ref.Reference pendingNext>;

        $r4 = r2.<java.lang.ref.Reference: java.lang.ref.Reference pendingNext>;

        r1.<java.lang.ref.Reference: java.lang.ref.Reference pendingNext> = $r4;

        r2.<java.lang.ref.Reference: java.lang.ref.Reference pendingNext> = null;

        goto label2;

     label4:
        return;
    }

    public void run()
    {
        java.lang.Daemons$ReferenceQueueDaemon r0;
        java.lang.Throwable r2, $r7;
        java.lang.ref.Reference r3, $r4;
        boolean $z0;
        java.lang.Class $r5;
        java.lang.InterruptedException $r6;

        r0 := @this: java.lang.Daemons$ReferenceQueueDaemon;

     label01:
        $z0 = virtualinvoke r0.<java.lang.Daemons$ReferenceQueueDaemon: boolean isRunning()>();

        if $z0 == 0 goto label11;

     label02:
        entermonitor class "java/lang/ref/ReferenceQueue";

     label03:
        $r4 = <java.lang.ref.ReferenceQueue: java.lang.ref.Reference unenqueued>;

        if $r4 != null goto label09;

        $r5 = class "java/lang/ref/ReferenceQueue";

        virtualinvoke $r5.<java.lang.Object: void wait()>();

     label04:
        goto label03;

     label05:
        $r7 := @caughtexception;

        r2 = $r7;

     label06:
        exitmonitor class "java/lang/ref/ReferenceQueue";

     label07:
        throw r2;

     label08:
        $r6 := @caughtexception;

        goto label01;

     label09:
        r3 = <java.lang.ref.ReferenceQueue: java.lang.ref.Reference unenqueued>;

        <java.lang.ref.ReferenceQueue: java.lang.ref.Reference unenqueued> = null;

        exitmonitor class "java/lang/ref/ReferenceQueue";

     label10:
        specialinvoke r0.<java.lang.Daemons$ReferenceQueueDaemon: void enqueue(java.lang.ref.Reference)>(r3);

        goto label01;

     label11:
        return;

        catch java.lang.InterruptedException from label02 to label03 with label08;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.InterruptedException from label07 to label08 with label08;
        catch java.lang.Throwable from label09 to label10 with label05;
    }
}
