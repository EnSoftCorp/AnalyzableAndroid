public class org.apache.harmony.security.provider.crypto.SHA1withDSA_SignatureImpl extends java.security.Signature
{
    private java.security.interfaces.DSAKey dsaKey;
    private java.security.MessageDigest msgDigest;

    public void <init>() throws java.security.NoSuchAlgorithmException
    {
        org.apache.harmony.security.provider.crypto.SHA1withDSA_SignatureImpl r0;
        java.security.MessageDigest $r1;

        r0 := @this: org.apache.harmony.security.provider.crypto.SHA1withDSA_SignatureImpl;

        specialinvoke r0.<java.security.Signature: void <init>(java.lang.String)>("SHA1withDSA");

        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA1");

        r0.<org.apache.harmony.security.provider.crypto.SHA1withDSA_SignatureImpl: java.security.MessageDigest msgDigest> = $r1;

        return;
    }

    private boolean checkSignature(byte[], int, int) throws java.security.SignatureException
    {
        org.apache.harmony.security.provider.crypto.SHA1withDSA_SignatureImpl r0;
        byte[] r1, r3, r4, r6;
        int i0, i1, i2, i5, $i6, $i7, $i9, $i10, $i11, $i13, $i14, $i15, $i17, $i19, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i31;
        byte b3, b4, $b8, $b12, $b16, $b18, $b20, $b30;
        java.math.BigInteger r5, r7, r9, r10, r11, r12, r13, r14, r15, r16, $r18, $r20, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31;
        java.security.interfaces.DSAParams r8;
        java.security.SignatureException $r17, $r33;
        java.security.MessageDigest $r19;
        java.security.interfaces.DSAKey $r21, $r23;
        java.security.interfaces.DSAPublicKey $r22;
        java.lang.ArrayIndexOutOfBoundsException $r32;

        r0 := @this: org.apache.harmony.security.provider.crypto.SHA1withDSA_SignatureImpl;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = i0 + 3;

     label01:
        b3 = r1[i2];

        $i7 = i0 + b3;

        $i6 = 5 + $i7;

        b4 = r1[$i6];

        $i9 = i0 + 0;

        $b8 = r1[$i9];

        if $b8 != 48 goto label04;

        $i10 = i0 + 2;

        $b12 = r1[$i10];

        if $b12 != 2 goto label04;

        $i11 = i0 + b3;

        $i15 = 4 + $i11;

        $b16 = r1[$i15];

        if $b16 != 2 goto label04;

        $i13 = i0 + 1;

        $b20 = r1[$i13];

        $i14 = b3 + b4;

        $i19 = 4 + $i14;

        if $b20 != $i19 goto label04;

     label02:
        if b3 > 21 goto label04;

        if b4 > 21 goto label04;

        if i1 == 0 goto label06;

     label03:
        $i29 = i0 + 1;

        $b30 = r1[$i29];

        $i31 = 2 + $b30;

        if $i31 <= i1 goto label06;

     label04:
        $r17 = new java.security.SignatureException;

        specialinvoke $r17.<java.security.SignatureException: void <init>(java.lang.String)>("signature bytes have invalid encoding");

        throw $r17;

     label05:
        $r32 := @caughtexception;

        $r33 = new java.security.SignatureException;

        specialinvoke $r33.<java.security.SignatureException: void <init>(java.lang.String)>("bad argument: byte[] is too small");

        throw $r33;

     label06:
        $i17 = b3 + 5;

        i5 = b4 + $i17;

     label07:
        $b18 = r1[i5];

     label08:
        $r19 = r0.<org.apache.harmony.security.provider.crypto.SHA1withDSA_SignatureImpl: java.security.MessageDigest msgDigest>;

        r3 = virtualinvoke $r19.<java.security.MessageDigest: byte[] digest()>();

        r4 = newarray (byte)[b3];

        $i21 = i0 + 4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, $i21, r4, 0, b3);

        $r18 = new java.math.BigInteger;

        specialinvoke $r18.<java.math.BigInteger: void <init>(byte[])>(r4);

        r5 = $r18;

        r6 = newarray (byte)[b4];

        $i22 = i0 + 6;

        $i23 = b3 + $i22;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, $i23, r6, 0, b4);

        $r20 = new java.math.BigInteger;

        specialinvoke $r20.<java.math.BigInteger: void <init>(byte[])>(r6);

        r7 = $r20;

        $r21 = r0.<org.apache.harmony.security.provider.crypto.SHA1withDSA_SignatureImpl: java.security.interfaces.DSAKey dsaKey>;

        r8 = interfaceinvoke $r21.<java.security.interfaces.DSAKey: java.security.interfaces.DSAParams getParams()>();

        r10 = interfaceinvoke r8.<java.security.interfaces.DSAParams: java.math.BigInteger getP()>();

        r9 = interfaceinvoke r8.<java.security.interfaces.DSAParams: java.math.BigInteger getQ()>();

        r12 = interfaceinvoke r8.<java.security.interfaces.DSAParams: java.math.BigInteger getG()>();

        $r23 = r0.<org.apache.harmony.security.provider.crypto.SHA1withDSA_SignatureImpl: java.security.interfaces.DSAKey dsaKey>;

        $r22 = (java.security.interfaces.DSAPublicKey) $r23;

        r11 = interfaceinvoke $r22.<java.security.interfaces.DSAPublicKey: java.math.BigInteger getY()>();

        $i24 = virtualinvoke r5.<java.math.BigInteger: int signum()>();

        if $i24 != 1 goto label09;

        $i27 = virtualinvoke r5.<java.math.BigInteger: int compareTo(java.math.BigInteger)>(r9);

        if $i27 != -1 goto label09;

        $i26 = virtualinvoke r7.<java.math.BigInteger: int signum()>();

        if $i26 != 1 goto label09;

        $i25 = virtualinvoke r7.<java.math.BigInteger: int compareTo(java.math.BigInteger)>(r9);

        if $i25 == -1 goto label10;

     label09:
        return 0;

     label10:
        r14 = virtualinvoke r7.<java.math.BigInteger: java.math.BigInteger modInverse(java.math.BigInteger)>(r9);

        $r26 = new java.math.BigInteger;

        specialinvoke $r26.<java.math.BigInteger: void <init>(int,byte[])>(1, r3);

        r13 = $r26;

        $r25 = virtualinvoke r13.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r14);

        r16 = virtualinvoke $r25.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r9);

        $r24 = virtualinvoke r5.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r14);

        r15 = virtualinvoke $r24.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r9);

        $r29 = virtualinvoke r12.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>(r16, r10);

        $r30 = virtualinvoke r11.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>(r15, r10);

        $r31 = virtualinvoke $r29.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r30);

        $r27 = virtualinvoke $r31.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r10);

        $r28 = virtualinvoke $r27.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r9);

        $i28 = virtualinvoke $r28.<java.math.BigInteger: int compareTo(java.math.BigInteger)>(r5);

        if $i28 == 0 goto label11;

        return 0;

     label11:
        return 1;

        catch java.lang.ArrayIndexOutOfBoundsException from label01 to label02 with label05;
        catch java.lang.ArrayIndexOutOfBoundsException from label03 to label04 with label05;
        catch java.lang.ArrayIndexOutOfBoundsException from label04 to label05 with label05;
        catch java.lang.ArrayIndexOutOfBoundsException from label07 to label08 with label05;
    }

    protected java.lang.Object engineGetParameter(java.lang.String) throws java.security.InvalidParameterException
    {
        org.apache.harmony.security.provider.crypto.SHA1withDSA_SignatureImpl r0;
        java.lang.String r1;
        java.lang.NullPointerException $r2;

        r0 := @this: org.apache.harmony.security.provider.crypto.SHA1withDSA_SignatureImpl;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("param == null");

        throw $r2;

     label1:
        return null;
    }

    protected void engineInitSign(java.security.PrivateKey) throws java.security.InvalidKeyException
    {
        org.apache.harmony.security.provider.crypto.SHA1withDSA_SignatureImpl r0;
        java.security.PrivateKey r1;
        java.security.interfaces.DSAParams r2;
        java.math.BigInteger r3, r4, r5, $r9;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.security.InvalidKeyException $r6, $r10, $r11, $r14;
        boolean $z0;
        java.security.interfaces.DSAPrivateKey $r7, $r8;
        java.security.MessageDigest $r12;
        java.security.interfaces.DSAKey $r13;

        r0 := @this: org.apache.harmony.security.provider.crypto.SHA1withDSA_SignatureImpl;

        r1 := @parameter0: java.security.PrivateKey;

        if r1 == null goto label1;

        $z0 = r1 instanceof java.security.interfaces.DSAPrivateKey;

        if $z0 != 0 goto label2;

     label1:
        $r6 = new java.security.InvalidKeyException;

        specialinvoke $r6.<java.security.InvalidKeyException: void <init>()>();

        throw $r6;

     label2:
        $r7 = (java.security.interfaces.DSAPrivateKey) r1;

        r2 = interfaceinvoke $r7.<java.security.interfaces.DSAPrivateKey: java.security.interfaces.DSAParams getParams()>();

        r3 = interfaceinvoke r2.<java.security.interfaces.DSAParams: java.math.BigInteger getP()>();

        r4 = interfaceinvoke r2.<java.security.interfaces.DSAParams: java.math.BigInteger getQ()>();

        $r8 = (java.security.interfaces.DSAPrivateKey) r1;

        r5 = interfaceinvoke $r8.<java.security.interfaces.DSAPrivateKey: java.math.BigInteger getX()>();

        i0 = virtualinvoke r3.<java.math.BigInteger: int bitLength()>();

        $r9 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(1L);

        $i1 = virtualinvoke r3.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r9);

        if $i1 != 1 goto label3;

        if i0 < 512 goto label3;

        if i0 > 1024 goto label3;

        $i2 = i0 & 63;

        if $i2 == 0 goto label4;

     label3:
        $r10 = new java.security.InvalidKeyException;

        specialinvoke $r10.<java.security.InvalidKeyException: void <init>(java.lang.String)>("bad p");

        throw $r10;

     label4:
        $i4 = virtualinvoke r4.<java.math.BigInteger: int signum()>();

        if $i4 == 1 goto label5;

        $i6 = virtualinvoke r4.<java.math.BigInteger: int bitLength()>();

        if $i6 == 160 goto label5;

        $r14 = new java.security.InvalidKeyException;

        specialinvoke $r14.<java.security.InvalidKeyException: void <init>(java.lang.String)>("bad q");

        throw $r14;

     label5:
        $i3 = virtualinvoke r5.<java.math.BigInteger: int signum()>();

        if $i3 != 1 goto label6;

        $i5 = virtualinvoke r5.<java.math.BigInteger: int compareTo(java.math.BigInteger)>(r4);

        if $i5 == -1 goto label7;

     label6:
        $r11 = new java.security.InvalidKeyException;

        specialinvoke $r11.<java.security.InvalidKeyException: void <init>(java.lang.String)>("x <= 0 || x >= q");

        throw $r11;

     label7:
        $r13 = (java.security.interfaces.DSAKey) r1;

        r0.<org.apache.harmony.security.provider.crypto.SHA1withDSA_SignatureImpl: java.security.interfaces.DSAKey dsaKey> = $r13;

        $r12 = r0.<org.apache.harmony.security.provider.crypto.SHA1withDSA_SignatureImpl: java.security.MessageDigest msgDigest>;

        virtualinvoke $r12.<java.security.MessageDigest: void reset()>();

        return;
    }

    protected void engineInitVerify(java.security.PublicKey) throws java.security.InvalidKeyException
    {
        org.apache.harmony.security.provider.crypto.SHA1withDSA_SignatureImpl r0;
        java.security.PublicKey r1;
        java.security.interfaces.DSAParams r2;
        java.math.BigInteger r3, r4, r5, $r9;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.security.InvalidKeyException $r6, $r10, $r11, $r14;
        boolean $z0;
        java.security.interfaces.DSAPublicKey $r7, $r8;
        java.security.MessageDigest $r12;
        java.security.interfaces.DSAKey $r13;

        r0 := @this: org.apache.harmony.security.provider.crypto.SHA1withDSA_SignatureImpl;

        r1 := @parameter0: java.security.PublicKey;

        if r1 == null goto label1;

        $z0 = r1 instanceof java.security.interfaces.DSAPublicKey;

        if $z0 != 0 goto label2;

     label1:
        $r6 = new java.security.InvalidKeyException;

        specialinvoke $r6.<java.security.InvalidKeyException: void <init>(java.lang.String)>("publicKey is not an instance of DSAPublicKey");

        throw $r6;

     label2:
        $r7 = (java.security.interfaces.DSAPublicKey) r1;

        r2 = interfaceinvoke $r7.<java.security.interfaces.DSAPublicKey: java.security.interfaces.DSAParams getParams()>();

        r3 = interfaceinvoke r2.<java.security.interfaces.DSAParams: java.math.BigInteger getP()>();

        r4 = interfaceinvoke r2.<java.security.interfaces.DSAParams: java.math.BigInteger getQ()>();

        $r8 = (java.security.interfaces.DSAPublicKey) r1;

        r5 = interfaceinvoke $r8.<java.security.interfaces.DSAPublicKey: java.math.BigInteger getY()>();

        i0 = virtualinvoke r3.<java.math.BigInteger: int bitLength()>();

        $r9 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(1L);

        $i1 = virtualinvoke r3.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r9);

        if $i1 != 1 goto label3;

        if i0 < 512 goto label3;

        if i0 > 1024 goto label3;

        $i2 = i0 & 63;

        if $i2 == 0 goto label4;

     label3:
        $r10 = new java.security.InvalidKeyException;

        specialinvoke $r10.<java.security.InvalidKeyException: void <init>(java.lang.String)>("bad p");

        throw $r10;

     label4:
        $i3 = virtualinvoke r4.<java.math.BigInteger: int signum()>();

        if $i3 != 1 goto label5;

        $i5 = virtualinvoke r4.<java.math.BigInteger: int bitLength()>();

        if $i5 == 160 goto label6;

     label5:
        $r11 = new java.security.InvalidKeyException;

        specialinvoke $r11.<java.security.InvalidKeyException: void <init>(java.lang.String)>("bad q");

        throw $r11;

     label6:
        $i4 = virtualinvoke r5.<java.math.BigInteger: int signum()>();

        if $i4 == 1 goto label7;

        $r14 = new java.security.InvalidKeyException;

        specialinvoke $r14.<java.security.InvalidKeyException: void <init>(java.lang.String)>("y <= 0");

        throw $r14;

     label7:
        $r13 = (java.security.interfaces.DSAKey) r1;

        r0.<org.apache.harmony.security.provider.crypto.SHA1withDSA_SignatureImpl: java.security.interfaces.DSAKey dsaKey> = $r13;

        $r12 = r0.<org.apache.harmony.security.provider.crypto.SHA1withDSA_SignatureImpl: java.security.MessageDigest msgDigest>;

        virtualinvoke $r12.<java.security.MessageDigest: void reset()>();

        return;
    }

    protected void engineSetParameter(java.lang.String, java.lang.Object) throws java.security.InvalidParameterException
    {
        org.apache.harmony.security.provider.crypto.SHA1withDSA_SignatureImpl r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.security.InvalidParameterException $r3;
        java.lang.NullPointerException $r4;

        r0 := @this: org.apache.harmony.security.provider.crypto.SHA1withDSA_SignatureImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        if r1 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("param == null");

        throw $r4;

     label1:
        $r3 = new java.security.InvalidParameterException;

        specialinvoke $r3.<java.security.InvalidParameterException: void <init>(java.lang.String)>("invalid parameter for this engine");

        throw $r3;
    }

    protected byte[] engineSign() throws java.security.SignatureException
    {
        org.apache.harmony.security.provider.crypto.SHA1withDSA_SignatureImpl r0;
        java.security.interfaces.DSAParams r1;
        java.math.BigInteger r2, r3, r4, r5, r6, r8, r9, r10, $r18, $r22, $r23, $r24, $r25, $r26, $r27, $r28;
        byte[] r7, r11, r12, r13, $r21;
        int i0, i1, i2, $i4, $i5, $i6, $i9, $i10, $i15, $i16, $i17, $i18, $i20, $i21, $i22, $i23;
        byte b3, $b8, $b12, $b13, $b14, $b19;
        java.security.interfaces.DSAKey $r14, $r17;
        java.security.SecureRandom $r15, $r20, $r29;
        java.security.interfaces.DSAPrivateKey $r16;
        java.security.MessageDigest $r19;
        short $s7, $s11;

        r0 := @this: org.apache.harmony.security.provider.crypto.SHA1withDSA_SignatureImpl;

        $r15 = r0.<org.apache.harmony.security.provider.crypto.SHA1withDSA_SignatureImpl: java.security.SecureRandom appRandom>;

        if $r15 != null goto label1;

        $r29 = new java.security.SecureRandom;

        specialinvoke $r29.<java.security.SecureRandom: void <init>()>();

        r0.<org.apache.harmony.security.provider.crypto.SHA1withDSA_SignatureImpl: java.security.SecureRandom appRandom> = $r29;

     label1:
        $r14 = r0.<org.apache.harmony.security.provider.crypto.SHA1withDSA_SignatureImpl: java.security.interfaces.DSAKey dsaKey>;

        r1 = interfaceinvoke $r14.<java.security.interfaces.DSAKey: java.security.interfaces.DSAParams getParams()>();

        r2 = interfaceinvoke r1.<java.security.interfaces.DSAParams: java.math.BigInteger getP()>();

        r3 = interfaceinvoke r1.<java.security.interfaces.DSAParams: java.math.BigInteger getQ()>();

        r4 = interfaceinvoke r1.<java.security.interfaces.DSAParams: java.math.BigInteger getG()>();

        $r17 = r0.<org.apache.harmony.security.provider.crypto.SHA1withDSA_SignatureImpl: java.security.interfaces.DSAKey dsaKey>;

        $r16 = (java.security.interfaces.DSAPrivateKey) $r17;

        r5 = interfaceinvoke $r16.<java.security.interfaces.DSAPrivateKey: java.math.BigInteger getX()>();

        $r18 = new java.math.BigInteger;

        $r19 = r0.<org.apache.harmony.security.provider.crypto.SHA1withDSA_SignatureImpl: java.security.MessageDigest msgDigest>;

        $r21 = virtualinvoke $r19.<java.security.MessageDigest: byte[] digest()>();

        specialinvoke $r18.<java.math.BigInteger: void <init>(int,byte[])>(1, $r21);

        r6 = $r18;

        r7 = newarray (byte)[20];

     label2:
        $r20 = r0.<org.apache.harmony.security.provider.crypto.SHA1withDSA_SignatureImpl: java.security.SecureRandom appRandom>;

        virtualinvoke $r20.<java.security.SecureRandom: void nextBytes(byte[])>(r7);

        $r23 = new java.math.BigInteger;

        specialinvoke $r23.<java.math.BigInteger: void <init>(int,byte[])>(1, r7);

        r8 = $r23;

        $i4 = virtualinvoke r8.<java.math.BigInteger: int compareTo(java.math.BigInteger)>(r3);

        if $i4 != -1 goto label2;

        $r22 = virtualinvoke r4.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>(r8, r2);

        r9 = virtualinvoke $r22.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r3);

        $i5 = virtualinvoke r9.<java.math.BigInteger: int signum()>();

        if $i5 == 0 goto label2;

        $r26 = virtualinvoke r8.<java.math.BigInteger: java.math.BigInteger modInverse(java.math.BigInteger)>(r3);

        $r24 = virtualinvoke r5.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r9);

        $r25 = virtualinvoke r6.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r24);

        $r27 = virtualinvoke $r25.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r3);

        $r28 = virtualinvoke $r26.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r27);

        r10 = virtualinvoke $r28.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r3);

        $i6 = virtualinvoke r10.<java.math.BigInteger: int signum()>();

        if $i6 == 0 goto label2;

        r11 = virtualinvoke r9.<java.math.BigInteger: byte[] toByteArray()>();

        i0 = lengthof r11;

        $b8 = r11[0];

        $s7 = 128 & $b8;

        if $s7 == 0 goto label3;

        i0 = i0 + 1;

     label3:
        r12 = virtualinvoke r10.<java.math.BigInteger: byte[] toByteArray()>();

        i1 = lengthof r12;

        $b12 = r12[0];

        $s11 = 128 & $b12;

        if $s11 == 0 goto label4;

        i1 = i1 + 1;

     label4:
        $i10 = i0 + 6;

        $i9 = i1 + $i10;

        r13 = newarray (byte)[$i9];

        r13[0] = 48;

        $i16 = i0 + 4;

        $i15 = i1 + $i16;

        $b14 = (byte) $i15;

        r13[1] = $b14;

        r13[2] = 2;

        $b13 = (byte) i0;

        r13[3] = $b13;

        $i20 = i0 + 4;

        r13[$i20] = 2;

        $i18 = i0 + 5;

        $b19 = (byte) i1;

        r13[$i18] = $b19;

        $i17 = lengthof r11;

        if i0 != $i17 goto label7;

        b3 = 4;

     label5:
        $i23 = lengthof r11;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r11, 0, r13, b3, $i23);

        $i22 = lengthof r12;

        if i1 != $i22 goto label8;

        i2 = i0 + 6;

     label6:
        $i21 = lengthof r12;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r12, 0, r13, i2, $i21);

        return r13;

     label7:
        b3 = 5;

        goto label5;

     label8:
        i2 = i0 + 7;

        goto label6;
    }

    protected void engineUpdate(byte) throws java.security.SignatureException
    {
        org.apache.harmony.security.provider.crypto.SHA1withDSA_SignatureImpl r0;
        byte b0;
        java.security.MessageDigest $r1;

        r0 := @this: org.apache.harmony.security.provider.crypto.SHA1withDSA_SignatureImpl;

        b0 := @parameter0: byte;

        $r1 = r0.<org.apache.harmony.security.provider.crypto.SHA1withDSA_SignatureImpl: java.security.MessageDigest msgDigest>;

        virtualinvoke $r1.<java.security.MessageDigest: void update(byte)>(b0);

        return;
    }

    protected void engineUpdate(byte[], int, int) throws java.security.SignatureException
    {
        org.apache.harmony.security.provider.crypto.SHA1withDSA_SignatureImpl r0;
        byte[] r1;
        int i0, i1;
        java.security.MessageDigest $r2;

        r0 := @this: org.apache.harmony.security.provider.crypto.SHA1withDSA_SignatureImpl;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.apache.harmony.security.provider.crypto.SHA1withDSA_SignatureImpl: java.security.MessageDigest msgDigest>;

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[],int,int)>(r1, i0, i1);

        return;
    }

    protected boolean engineVerify(byte[]) throws java.security.SignatureException
    {
        org.apache.harmony.security.provider.crypto.SHA1withDSA_SignatureImpl r0;
        byte[] r1;
        boolean $z0;
        java.lang.NullPointerException $r2;

        r0 := @this: org.apache.harmony.security.provider.crypto.SHA1withDSA_SignatureImpl;

        r1 := @parameter0: byte[];

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("sigBytes == null");

        throw $r2;

     label1:
        $z0 = specialinvoke r0.<org.apache.harmony.security.provider.crypto.SHA1withDSA_SignatureImpl: boolean checkSignature(byte[],int,int)>(r1, 0, 0);

        return $z0;
    }

    protected boolean engineVerify(byte[], int, int) throws java.security.SignatureException
    {
        org.apache.harmony.security.provider.crypto.SHA1withDSA_SignatureImpl r0;
        byte[] r1;
        int i0, i1;
        boolean $z0;

        r0 := @this: org.apache.harmony.security.provider.crypto.SHA1withDSA_SignatureImpl;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = specialinvoke r0.<org.apache.harmony.security.provider.crypto.SHA1withDSA_SignatureImpl: boolean checkSignature(byte[],int,int)>(r1, i0, i1);

        return $z0;
    }
}
