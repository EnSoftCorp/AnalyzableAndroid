public interface  libcore.io.Os extends java.lang.Object
{

    public abstract java.io.FileDescriptor accept(java.io.FileDescriptor, java.net.InetSocketAddress) throws libcore.io.ErrnoException, java.net.SocketException;

    public abstract boolean access(java.lang.String, int) throws libcore.io.ErrnoException;

    public abstract void bind(java.io.FileDescriptor, java.net.InetAddress, int) throws libcore.io.ErrnoException, java.net.SocketException;

    public abstract void chmod(java.lang.String, int) throws libcore.io.ErrnoException;

    public abstract void chown(java.lang.String, int, int) throws libcore.io.ErrnoException;

    public abstract void close(java.io.FileDescriptor) throws libcore.io.ErrnoException;

    public abstract void connect(java.io.FileDescriptor, java.net.InetAddress, int) throws libcore.io.ErrnoException, java.net.SocketException;

    public abstract java.io.FileDescriptor dup(java.io.FileDescriptor) throws libcore.io.ErrnoException;

    public abstract java.io.FileDescriptor dup2(java.io.FileDescriptor, int) throws libcore.io.ErrnoException;

    public abstract java.lang.String[] environ();

    public abstract void execv(java.lang.String, java.lang.String[]) throws libcore.io.ErrnoException;

    public abstract void execve(java.lang.String, java.lang.String[], java.lang.String[]) throws libcore.io.ErrnoException;

    public abstract void fchmod(java.io.FileDescriptor, int) throws libcore.io.ErrnoException;

    public abstract void fchown(java.io.FileDescriptor, int, int) throws libcore.io.ErrnoException;

    public abstract int fcntlFlock(java.io.FileDescriptor, int, libcore.io.StructFlock) throws libcore.io.ErrnoException;

    public abstract int fcntlLong(java.io.FileDescriptor, int, long) throws libcore.io.ErrnoException;

    public abstract int fcntlVoid(java.io.FileDescriptor, int) throws libcore.io.ErrnoException;

    public abstract void fdatasync(java.io.FileDescriptor) throws libcore.io.ErrnoException;

    public abstract libcore.io.StructStat fstat(java.io.FileDescriptor) throws libcore.io.ErrnoException;

    public abstract libcore.io.StructStatVfs fstatvfs(java.io.FileDescriptor) throws libcore.io.ErrnoException;

    public abstract void fsync(java.io.FileDescriptor) throws libcore.io.ErrnoException;

    public abstract void ftruncate(java.io.FileDescriptor, long) throws libcore.io.ErrnoException;

    public abstract java.lang.String gai_strerror(int);

    public abstract java.net.InetAddress[] getaddrinfo(java.lang.String, libcore.io.StructAddrinfo) throws libcore.io.GaiException;

    public abstract int getegid();

    public abstract java.lang.String getenv(java.lang.String);

    public abstract int geteuid();

    public abstract int getgid();

    public abstract java.lang.String getnameinfo(java.net.InetAddress, int) throws libcore.io.GaiException;

    public abstract java.net.SocketAddress getpeername(java.io.FileDescriptor) throws libcore.io.ErrnoException;

    public abstract int getpid();

    public abstract int getppid();

    public abstract libcore.io.StructPasswd getpwnam(java.lang.String) throws libcore.io.ErrnoException;

    public abstract libcore.io.StructPasswd getpwuid(int) throws libcore.io.ErrnoException;

    public abstract java.net.SocketAddress getsockname(java.io.FileDescriptor) throws libcore.io.ErrnoException;

    public abstract int getsockoptByte(java.io.FileDescriptor, int, int) throws libcore.io.ErrnoException;

    public abstract java.net.InetAddress getsockoptInAddr(java.io.FileDescriptor, int, int) throws libcore.io.ErrnoException;

    public abstract int getsockoptInt(java.io.FileDescriptor, int, int) throws libcore.io.ErrnoException;

    public abstract libcore.io.StructLinger getsockoptLinger(java.io.FileDescriptor, int, int) throws libcore.io.ErrnoException;

    public abstract libcore.io.StructTimeval getsockoptTimeval(java.io.FileDescriptor, int, int) throws libcore.io.ErrnoException;

    public abstract libcore.io.StructUcred getsockoptUcred(java.io.FileDescriptor, int, int) throws libcore.io.ErrnoException;

    public abstract int gettid();

    public abstract int getuid();

    public abstract java.lang.String if_indextoname(int);

    public abstract java.net.InetAddress inet_pton(int, java.lang.String);

    public abstract java.net.InetAddress ioctlInetAddress(java.io.FileDescriptor, int, java.lang.String) throws libcore.io.ErrnoException;

    public abstract int ioctlInt(java.io.FileDescriptor, int, libcore.util.MutableInt) throws libcore.io.ErrnoException;

    public abstract boolean isatty(java.io.FileDescriptor);

    public abstract void kill(int, int) throws libcore.io.ErrnoException;

    public abstract void lchown(java.lang.String, int, int) throws libcore.io.ErrnoException;

    public abstract void listen(java.io.FileDescriptor, int) throws libcore.io.ErrnoException;

    public abstract long lseek(java.io.FileDescriptor, long, int) throws libcore.io.ErrnoException;

    public abstract libcore.io.StructStat lstat(java.lang.String) throws libcore.io.ErrnoException;

    public abstract void mincore(long, long, byte[]) throws libcore.io.ErrnoException;

    public abstract void mkdir(java.lang.String, int) throws libcore.io.ErrnoException;

    public abstract void mlock(long, long) throws libcore.io.ErrnoException;

    public abstract long mmap(long, long, int, int, java.io.FileDescriptor, long) throws libcore.io.ErrnoException;

    public abstract void msync(long, long, int) throws libcore.io.ErrnoException;

    public abstract void munlock(long, long) throws libcore.io.ErrnoException;

    public abstract void munmap(long, long) throws libcore.io.ErrnoException;

    public abstract java.io.FileDescriptor open(java.lang.String, int, int) throws libcore.io.ErrnoException;

    public abstract java.io.FileDescriptor[] pipe() throws libcore.io.ErrnoException;

    public abstract int poll(libcore.io.StructPollfd[], int) throws libcore.io.ErrnoException;

    public abstract int pread(java.io.FileDescriptor, java.nio.ByteBuffer, long) throws libcore.io.ErrnoException;

    public abstract int pread(java.io.FileDescriptor, byte[], int, int, long) throws libcore.io.ErrnoException;

    public abstract int pwrite(java.io.FileDescriptor, java.nio.ByteBuffer, long) throws libcore.io.ErrnoException;

    public abstract int pwrite(java.io.FileDescriptor, byte[], int, int, long) throws libcore.io.ErrnoException;

    public abstract int read(java.io.FileDescriptor, java.nio.ByteBuffer) throws libcore.io.ErrnoException;

    public abstract int read(java.io.FileDescriptor, byte[], int, int) throws libcore.io.ErrnoException;

    public abstract int readv(java.io.FileDescriptor, java.lang.Object[], int[], int[]) throws libcore.io.ErrnoException;

    public abstract int recvfrom(java.io.FileDescriptor, java.nio.ByteBuffer, int, java.net.InetSocketAddress) throws libcore.io.ErrnoException, java.net.SocketException;

    public abstract int recvfrom(java.io.FileDescriptor, byte[], int, int, int, java.net.InetSocketAddress) throws libcore.io.ErrnoException, java.net.SocketException;

    public abstract void remove(java.lang.String) throws libcore.io.ErrnoException;

    public abstract void rename(java.lang.String, java.lang.String) throws libcore.io.ErrnoException;

    public abstract long sendfile(java.io.FileDescriptor, java.io.FileDescriptor, libcore.util.MutableLong, long) throws libcore.io.ErrnoException;

    public abstract int sendto(java.io.FileDescriptor, java.nio.ByteBuffer, int, java.net.InetAddress, int) throws libcore.io.ErrnoException, java.net.SocketException;

    public abstract int sendto(java.io.FileDescriptor, byte[], int, int, int, java.net.InetAddress, int) throws libcore.io.ErrnoException, java.net.SocketException;

    public abstract void setegid(int) throws libcore.io.ErrnoException;

    public abstract void setenv(java.lang.String, java.lang.String, boolean) throws libcore.io.ErrnoException;

    public abstract void seteuid(int) throws libcore.io.ErrnoException;

    public abstract void setgid(int) throws libcore.io.ErrnoException;

    public abstract int setsid() throws libcore.io.ErrnoException;

    public abstract void setsockoptByte(java.io.FileDescriptor, int, int, int) throws libcore.io.ErrnoException;

    public abstract void setsockoptGroupReq(java.io.FileDescriptor, int, int, libcore.io.StructGroupReq) throws libcore.io.ErrnoException;

    public abstract void setsockoptIfreq(java.io.FileDescriptor, int, int, java.lang.String) throws libcore.io.ErrnoException;

    public abstract void setsockoptInt(java.io.FileDescriptor, int, int, int) throws libcore.io.ErrnoException;

    public abstract void setsockoptIpMreqn(java.io.FileDescriptor, int, int, int) throws libcore.io.ErrnoException;

    public abstract void setsockoptLinger(java.io.FileDescriptor, int, int, libcore.io.StructLinger) throws libcore.io.ErrnoException;

    public abstract void setsockoptTimeval(java.io.FileDescriptor, int, int, libcore.io.StructTimeval) throws libcore.io.ErrnoException;

    public abstract void setuid(int) throws libcore.io.ErrnoException;

    public abstract void shutdown(java.io.FileDescriptor, int) throws libcore.io.ErrnoException;

    public abstract java.io.FileDescriptor socket(int, int, int) throws libcore.io.ErrnoException;

    public abstract void socketpair(int, int, int, java.io.FileDescriptor, java.io.FileDescriptor) throws libcore.io.ErrnoException;

    public abstract libcore.io.StructStat stat(java.lang.String) throws libcore.io.ErrnoException;

    public abstract libcore.io.StructStatVfs statvfs(java.lang.String) throws libcore.io.ErrnoException;

    public abstract java.lang.String strerror(int);

    public abstract java.lang.String strsignal(int);

    public abstract void symlink(java.lang.String, java.lang.String) throws libcore.io.ErrnoException;

    public abstract long sysconf(int);

    public abstract void tcdrain(java.io.FileDescriptor) throws libcore.io.ErrnoException;

    public abstract void tcsendbreak(java.io.FileDescriptor, int) throws libcore.io.ErrnoException;

    public abstract int umask(int);

    public abstract libcore.io.StructUtsname uname();

    public abstract void unsetenv(java.lang.String) throws libcore.io.ErrnoException;

    public abstract int waitpid(int, libcore.util.MutableInt, int) throws libcore.io.ErrnoException;

    public abstract int write(java.io.FileDescriptor, java.nio.ByteBuffer) throws libcore.io.ErrnoException;

    public abstract int write(java.io.FileDescriptor, byte[], int, int) throws libcore.io.ErrnoException;

    public abstract int writev(java.io.FileDescriptor, java.lang.Object[], int[], int[]) throws libcore.io.ErrnoException;
}
