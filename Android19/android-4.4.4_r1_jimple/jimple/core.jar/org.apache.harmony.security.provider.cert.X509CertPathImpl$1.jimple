final class org.apache.harmony.security.provider.cert.X509CertPathImpl$1 extends org.apache.harmony.security.asn1.ASN1SequenceOf
{

    void <init>(org.apache.harmony.security.asn1.ASN1Type)
    {
        org.apache.harmony.security.provider.cert.X509CertPathImpl$1 r0;
        org.apache.harmony.security.asn1.ASN1Type r1;

        r0 := @this: org.apache.harmony.security.provider.cert.X509CertPathImpl$1;

        r1 := @parameter0: org.apache.harmony.security.asn1.ASN1Type;

        specialinvoke r0.<org.apache.harmony.security.asn1.ASN1SequenceOf: void <init>(org.apache.harmony.security.asn1.ASN1Type)>(r1);

        return;
    }

    public java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream) throws java.io.IOException
    {
        org.apache.harmony.security.provider.cert.X509CertPathImpl$1 r0;
        org.apache.harmony.security.asn1.BerInputStream r1;
        java.util.List r2;
        int i0, i1;
        java.util.ArrayList r3, $r5;
        java.lang.Object $r4, $r10, $r12;
        org.apache.harmony.security.provider.cert.X509CertPathImpl $r6;
        org.apache.harmony.security.provider.cert.X509CertPathImpl$Encoding $r7;
        org.apache.harmony.security.provider.cert.X509CertImpl $r8;
        org.apache.harmony.security.asn1.ASN1Sequence $r9;
        byte[] $r11;
        org.apache.harmony.security.x509.Certificate $r13;

        r0 := @this: org.apache.harmony.security.provider.cert.X509CertPathImpl$1;

        r1 := @parameter0: org.apache.harmony.security.asn1.BerInputStream;

        $r4 = r1.<org.apache.harmony.security.asn1.BerInputStream: java.lang.Object content>;

        r2 = (java.util.List) $r4;

        i0 = interfaceinvoke r2.<java.util.List: int size()>();

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>(i0);

        r3 = $r5;

        i1 = i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r8 = new org.apache.harmony.security.provider.cert.X509CertImpl;

        $r9 = <org.apache.harmony.security.x509.Certificate: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        $r10 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        $r11 = (byte[]) $r10;

        $r12 = virtualinvoke $r9.<org.apache.harmony.security.asn1.ASN1Sequence: java.lang.Object decode(byte[])>($r11);

        $r13 = (org.apache.harmony.security.x509.Certificate) $r12;

        specialinvoke $r8.<org.apache.harmony.security.provider.cert.X509CertImpl: void <init>(org.apache.harmony.security.x509.Certificate)>($r13);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r8);

        i1 = i1 + -1;

        goto label1;

     label2:
        $r6 = new org.apache.harmony.security.provider.cert.X509CertPathImpl;

        $r7 = <org.apache.harmony.security.provider.cert.X509CertPathImpl$Encoding: org.apache.harmony.security.provider.cert.X509CertPathImpl$Encoding PKI_PATH>;

        specialinvoke $r6.<org.apache.harmony.security.provider.cert.X509CertPathImpl: void <init>(java.util.List,org.apache.harmony.security.provider.cert.X509CertPathImpl$Encoding,org.apache.harmony.security.provider.cert.X509CertPathImpl$1)>(r3, $r7, null);

        return $r6;
    }

    public java.util.Collection getValues(java.lang.Object)
    {
        org.apache.harmony.security.provider.cert.X509CertPathImpl$1 r0;
        java.lang.Object r1, $r9;
        org.apache.harmony.security.provider.cert.X509CertPathImpl r2;
        int i0, i1;
        java.util.List r3, $r5, $r6, $r8;
        java.security.cert.CertificateEncodingException r4, $r12;
        java.util.ArrayList $r7;
        java.security.cert.X509Certificate $r10;
        byte[] $r11;
        java.lang.IllegalArgumentException $r13;

        r0 := @this: org.apache.harmony.security.provider.cert.X509CertPathImpl$1;

        r1 := @parameter0: java.lang.Object;

        r2 = (org.apache.harmony.security.provider.cert.X509CertPathImpl) r1;

        $r5 = staticinvoke <org.apache.harmony.security.provider.cert.X509CertPathImpl: java.util.List access$200(org.apache.harmony.security.provider.cert.X509CertPathImpl)>(r2);

        if $r5 != null goto label2;

        r3 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label1:
        return r3;

     label2:
        $r6 = staticinvoke <org.apache.harmony.security.provider.cert.X509CertPathImpl: java.util.List access$200(org.apache.harmony.security.provider.cert.X509CertPathImpl)>(r2);

        i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>(i0);

        r3 = $r7;

        i1 = i0 - 1;

     label3:
        if i1 < 0 goto label1;

     label4:
        $r8 = staticinvoke <org.apache.harmony.security.provider.cert.X509CertPathImpl: java.util.List access$200(org.apache.harmony.security.provider.cert.X509CertPathImpl)>(r2);

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i1);

        $r10 = (java.security.cert.X509Certificate) $r9;

        $r11 = virtualinvoke $r10.<java.security.cert.X509Certificate: byte[] getEncoded()>();

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r11);

     label5:
        i1 = i1 + -1;

        goto label3;

     label6:
        $r12 := @caughtexception;

        r4 = $r12;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>("Encoding error occurred", r4);

        throw $r13;

        catch java.security.cert.CertificateEncodingException from label4 to label5 with label6;
    }
}
