final class java.util.LinkedList$LinkIterator extends java.lang.Object implements java.util.ListIterator
{
    int expectedModCount;
    java.util.LinkedList$Link lastLink;
    java.util.LinkedList$Link link;
    final java.util.LinkedList list;
    int pos;

    void <init>(java.util.LinkedList, int)
    {
        java.util.LinkedList$LinkIterator r0;
        java.util.LinkedList r1, $r2, $r4, $r5, $r7, $r8;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        java.lang.IndexOutOfBoundsException $r3;
        java.util.LinkedList$Link $r6, $r9, $r10, $r11, $r12;

        r0 := @this: java.util.LinkedList$LinkIterator;

        r1 := @parameter0: java.util.LinkedList;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList list> = r1;

        $r2 = r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList list>;

        $i1 = $r2.<java.util.LinkedList: int modCount>;

        r0.<java.util.LinkedList$LinkIterator: int expectedModCount> = $i1;

        if i0 < 0 goto label4;

        $r4 = r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList list>;

        $i2 = $r4.<java.util.LinkedList: int size>;

        if i0 > $i2 goto label4;

        $r5 = r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList list>;

        $r6 = $r5.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList$Link link> = $r6;

        $r7 = r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList list>;

        $i3 = $r7.<java.util.LinkedList: int size>;

        $i4 = $i3 / 2;

        if i0 >= $i4 goto label2;

        r0.<java.util.LinkedList$LinkIterator: int pos> = -1;

     label1:
        $i10 = r0.<java.util.LinkedList$LinkIterator: int pos>;

        $i9 = 1 + $i10;

        if $i9 >= i0 goto label5;

        $r12 = r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList$Link link>;

        $r11 = $r12.<java.util.LinkedList$Link: java.util.LinkedList$Link next>;

        r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList$Link link> = $r11;

        $i12 = r0.<java.util.LinkedList$LinkIterator: int pos>;

        $i11 = 1 + $i12;

        r0.<java.util.LinkedList$LinkIterator: int pos> = $i11;

        goto label1;

     label2:
        $r8 = r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList list>;

        $i5 = $r8.<java.util.LinkedList: int size>;

        r0.<java.util.LinkedList$LinkIterator: int pos> = $i5;

     label3:
        $i6 = r0.<java.util.LinkedList$LinkIterator: int pos>;

        if $i6 < i0 goto label5;

        $r10 = r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList$Link link>;

        $r9 = $r10.<java.util.LinkedList$Link: java.util.LinkedList$Link previous>;

        r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList$Link link> = $r9;

        $i8 = r0.<java.util.LinkedList$LinkIterator: int pos>;

        $i7 = -1 + $i8;

        r0.<java.util.LinkedList$LinkIterator: int pos> = $i7;

        goto label3;

     label4:
        $r3 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r3.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r3;

     label5:
        return;
    }

    public void add(java.lang.Object)
    {
        java.util.LinkedList$LinkIterator r0;
        java.lang.Object r1;
        java.util.LinkedList$Link r2, r3, $r8, $r9, $r10, $r11;
        java.util.LinkedList r4, r5, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.util.ConcurrentModificationException $r7;

        r0 := @this: java.util.LinkedList$LinkIterator;

        r1 := @parameter0: java.lang.Object;

        $i1 = r0.<java.util.LinkedList$LinkIterator: int expectedModCount>;

        $r6 = r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList list>;

        $i0 = $r6.<java.util.LinkedList: int modCount>;

        if $i1 != $i0 goto label1;

        $r8 = r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList$Link link>;

        r2 = $r8.<java.util.LinkedList$Link: java.util.LinkedList$Link next>;

        $r9 = new java.util.LinkedList$Link;

        $r10 = r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList$Link link>;

        specialinvoke $r9.<java.util.LinkedList$Link: void <init>(java.lang.Object,java.util.LinkedList$Link,java.util.LinkedList$Link)>(r1, $r10, r2);

        r3 = $r9;

        $r11 = r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList$Link link>;

        $r11.<java.util.LinkedList$Link: java.util.LinkedList$Link next> = r3;

        r2.<java.util.LinkedList$Link: java.util.LinkedList$Link previous> = r3;

        r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList$Link link> = r3;

        r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList$Link lastLink> = null;

        $i2 = r0.<java.util.LinkedList$LinkIterator: int pos>;

        $i3 = 1 + $i2;

        r0.<java.util.LinkedList$LinkIterator: int pos> = $i3;

        $i5 = r0.<java.util.LinkedList$LinkIterator: int expectedModCount>;

        $i4 = 1 + $i5;

        r0.<java.util.LinkedList$LinkIterator: int expectedModCount> = $i4;

        r4 = r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList list>;

        $i7 = r4.<java.util.LinkedList: int size>;

        $i6 = 1 + $i7;

        r4.<java.util.LinkedList: int size> = $i6;

        r5 = r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList list>;

        $i9 = r5.<java.util.LinkedList: int modCount>;

        $i8 = 1 + $i9;

        r5.<java.util.LinkedList: int modCount> = $i8;

        return;

     label1:
        $r7 = new java.util.ConcurrentModificationException;

        specialinvoke $r7.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r7;
    }

    public boolean hasNext()
    {
        java.util.LinkedList$LinkIterator r0;
        java.util.LinkedList$Link $r1, $r3, $r4;
        java.util.LinkedList $r2;

        r0 := @this: java.util.LinkedList$LinkIterator;

        $r1 = r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList$Link link>;

        $r4 = $r1.<java.util.LinkedList$Link: java.util.LinkedList$Link next>;

        $r2 = r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList list>;

        $r3 = $r2.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        if $r4 == $r3 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean hasPrevious()
    {
        java.util.LinkedList$LinkIterator r0;
        java.util.LinkedList $r1;
        java.util.LinkedList$Link $r2, $r3;

        r0 := @this: java.util.LinkedList$LinkIterator;

        $r3 = r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList$Link link>;

        $r1 = r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList list>;

        $r2 = $r1.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        if $r3 == $r2 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.Object next()
    {
        java.util.LinkedList$LinkIterator r0;
        java.util.LinkedList$Link r1, $r4, $r6, $r8;
        java.util.LinkedList $r2, $r5;
        int $i0, $i1, $i2, $i3;
        java.util.ConcurrentModificationException $r3;
        java.util.NoSuchElementException $r7;
        java.lang.Object $r9;

        r0 := @this: java.util.LinkedList$LinkIterator;

        $i1 = r0.<java.util.LinkedList$LinkIterator: int expectedModCount>;

        $r2 = r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList list>;

        $i0 = $r2.<java.util.LinkedList: int modCount>;

        if $i1 != $i0 goto label2;

        $r4 = r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList$Link link>;

        r1 = $r4.<java.util.LinkedList$Link: java.util.LinkedList$Link next>;

        $r5 = r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList list>;

        $r6 = $r5.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        if r1 == $r6 goto label1;

        r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList$Link link> = r1;

        r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList$Link lastLink> = r1;

        $i2 = r0.<java.util.LinkedList$LinkIterator: int pos>;

        $i3 = 1 + $i2;

        r0.<java.util.LinkedList$LinkIterator: int pos> = $i3;

        $r8 = r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList$Link link>;

        $r9 = $r8.<java.util.LinkedList$Link: java.lang.Object data>;

        return $r9;

     label1:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        throw $r7;

     label2:
        $r3 = new java.util.ConcurrentModificationException;

        specialinvoke $r3.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r3;
    }

    public int nextIndex()
    {
        java.util.LinkedList$LinkIterator r0;
        int $i0, $i1;

        r0 := @this: java.util.LinkedList$LinkIterator;

        $i0 = r0.<java.util.LinkedList$LinkIterator: int pos>;

        $i1 = 1 + $i0;

        return $i1;
    }

    public java.lang.Object previous()
    {
        java.util.LinkedList$LinkIterator r0;
        java.util.LinkedList $r1, $r3;
        int $i0, $i1, $i2, $i3;
        java.util.ConcurrentModificationException $r2;
        java.util.LinkedList$Link $r4, $r5, $r7, $r8, $r9, $r10;
        java.util.NoSuchElementException $r6;
        java.lang.Object $r11;

        r0 := @this: java.util.LinkedList$LinkIterator;

        $i1 = r0.<java.util.LinkedList$LinkIterator: int expectedModCount>;

        $r1 = r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList list>;

        $i0 = $r1.<java.util.LinkedList: int modCount>;

        if $i1 != $i0 goto label2;

        $r5 = r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList$Link link>;

        $r3 = r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList list>;

        $r4 = $r3.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        if $r5 == $r4 goto label1;

        $r7 = r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList$Link link>;

        r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList$Link lastLink> = $r7;

        $r8 = r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList$Link link>;

        $r9 = $r8.<java.util.LinkedList$Link: java.util.LinkedList$Link previous>;

        r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList$Link link> = $r9;

        $i2 = r0.<java.util.LinkedList$LinkIterator: int pos>;

        $i3 = -1 + $i2;

        r0.<java.util.LinkedList$LinkIterator: int pos> = $i3;

        $r10 = r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList$Link lastLink>;

        $r11 = $r10.<java.util.LinkedList$Link: java.lang.Object data>;

        return $r11;

     label1:
        $r6 = new java.util.NoSuchElementException;

        specialinvoke $r6.<java.util.NoSuchElementException: void <init>()>();

        throw $r6;

     label2:
        $r2 = new java.util.ConcurrentModificationException;

        specialinvoke $r2.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r2;
    }

    public int previousIndex()
    {
        java.util.LinkedList$LinkIterator r0;
        int $i0;

        r0 := @this: java.util.LinkedList$LinkIterator;

        $i0 = r0.<java.util.LinkedList$LinkIterator: int pos>;

        return $i0;
    }

    public void remove()
    {
        java.util.LinkedList$LinkIterator r0;
        java.util.LinkedList$Link r1, r2, $r7, $r9, $r10, $r11, $r12;
        java.util.LinkedList r3, r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.util.ConcurrentModificationException $r6;
        java.lang.IllegalStateException $r8;

        r0 := @this: java.util.LinkedList$LinkIterator;

        $i1 = r0.<java.util.LinkedList$LinkIterator: int expectedModCount>;

        $r5 = r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList list>;

        $i0 = $r5.<java.util.LinkedList: int modCount>;

        if $i1 != $i0 goto label3;

        $r7 = r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList$Link lastLink>;

        if $r7 == null goto label2;

        $r9 = r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList$Link lastLink>;

        r1 = $r9.<java.util.LinkedList$Link: java.util.LinkedList$Link next>;

        $r10 = r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList$Link lastLink>;

        r2 = $r10.<java.util.LinkedList$Link: java.util.LinkedList$Link previous>;

        r1.<java.util.LinkedList$Link: java.util.LinkedList$Link previous> = r2;

        r2.<java.util.LinkedList$Link: java.util.LinkedList$Link next> = r1;

        $r12 = r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList$Link lastLink>;

        $r11 = r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList$Link link>;

        if $r12 != $r11 goto label1;

        $i7 = r0.<java.util.LinkedList$LinkIterator: int pos>;

        $i9 = -1 + $i7;

        r0.<java.util.LinkedList$LinkIterator: int pos> = $i9;

     label1:
        r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList$Link link> = r2;

        r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList$Link lastLink> = null;

        $i2 = r0.<java.util.LinkedList$LinkIterator: int expectedModCount>;

        $i4 = 1 + $i2;

        r0.<java.util.LinkedList$LinkIterator: int expectedModCount> = $i4;

        r3 = r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList list>;

        $i3 = r3.<java.util.LinkedList: int size>;

        $i6 = -1 + $i3;

        r3.<java.util.LinkedList: int size> = $i6;

        r4 = r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList list>;

        $i5 = r4.<java.util.LinkedList: int modCount>;

        $i8 = 1 + $i5;

        r4.<java.util.LinkedList: int modCount> = $i8;

        return;

     label2:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>()>();

        throw $r8;

     label3:
        $r6 = new java.util.ConcurrentModificationException;

        specialinvoke $r6.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r6;
    }

    public void set(java.lang.Object)
    {
        java.util.LinkedList$LinkIterator r0;
        java.lang.Object r1;
        java.util.LinkedList $r2;
        int $i0, $i1;
        java.util.ConcurrentModificationException $r3;
        java.util.LinkedList$Link $r4, $r6;
        java.lang.IllegalStateException $r5;

        r0 := @this: java.util.LinkedList$LinkIterator;

        r1 := @parameter0: java.lang.Object;

        $i1 = r0.<java.util.LinkedList$LinkIterator: int expectedModCount>;

        $r2 = r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList list>;

        $i0 = $r2.<java.util.LinkedList: int modCount>;

        if $i1 != $i0 goto label2;

        $r4 = r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList$Link lastLink>;

        if $r4 == null goto label1;

        $r6 = r0.<java.util.LinkedList$LinkIterator: java.util.LinkedList$Link lastLink>;

        $r6.<java.util.LinkedList$Link: java.lang.Object data> = r1;

        return;

     label1:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>()>();

        throw $r5;

     label2:
        $r3 = new java.util.ConcurrentModificationException;

        specialinvoke $r3.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r3;
    }
}
