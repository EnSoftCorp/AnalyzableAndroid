public abstract class java.net.DatagramSocketImpl extends java.lang.Object implements java.net.SocketOptions
{
    protected java.io.FileDescriptor fd;
    protected int localPort;

    public void <init>()
    {
        java.net.DatagramSocketImpl r0;

        r0 := @this: java.net.DatagramSocketImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.net.DatagramSocketImpl: int localPort> = -1;

        return;
    }

    protected abstract void bind(int, java.net.InetAddress) throws java.net.SocketException;

    protected abstract void close();

    protected void connect(java.net.InetAddress, int) throws java.net.SocketException
    {
        java.net.DatagramSocketImpl r0;
        java.net.InetAddress r1;
        int i0;

        r0 := @this: java.net.DatagramSocketImpl;

        r1 := @parameter0: java.net.InetAddress;

        i0 := @parameter1: int;

        return;
    }

    protected abstract void create() throws java.net.SocketException;

    protected void disconnect()
    {
        java.net.DatagramSocketImpl r0;

        r0 := @this: java.net.DatagramSocketImpl;

        return;
    }

    protected java.io.FileDescriptor getFileDescriptor()
    {
        java.net.DatagramSocketImpl r0;
        java.io.FileDescriptor $r1;

        r0 := @this: java.net.DatagramSocketImpl;

        $r1 = r0.<java.net.DatagramSocketImpl: java.io.FileDescriptor fd>;

        return $r1;
    }

    protected int getLocalPort()
    {
        java.net.DatagramSocketImpl r0;
        int $i0;

        r0 := @this: java.net.DatagramSocketImpl;

        $i0 = r0.<java.net.DatagramSocketImpl: int localPort>;

        return $i0;
    }

    protected abstract byte getTTL() throws java.io.IOException;

    protected abstract int getTimeToLive() throws java.io.IOException;

    protected abstract void join(java.net.InetAddress) throws java.io.IOException;

    protected abstract void joinGroup(java.net.SocketAddress, java.net.NetworkInterface) throws java.io.IOException;

    protected abstract void leave(java.net.InetAddress) throws java.io.IOException;

    protected abstract void leaveGroup(java.net.SocketAddress, java.net.NetworkInterface) throws java.io.IOException;

    protected abstract int peek(java.net.InetAddress) throws java.io.IOException;

    protected abstract int peekData(java.net.DatagramPacket) throws java.io.IOException;

    protected abstract void receive(java.net.DatagramPacket) throws java.io.IOException;

    protected abstract void send(java.net.DatagramPacket) throws java.io.IOException;

    protected abstract void setTTL(byte) throws java.io.IOException;

    protected abstract void setTimeToLive(int) throws java.io.IOException;
}
