public class org.apache.harmony.xml.ExpatReader extends java.lang.Object implements org.xml.sax.XMLReader
{
    private static final java.lang.String LEXICAL_HANDLER_PROPERTY;
    org.xml.sax.ContentHandler contentHandler;
    org.xml.sax.DTDHandler dtdHandler;
    org.xml.sax.EntityResolver entityResolver;
    org.xml.sax.ErrorHandler errorHandler;
    org.xml.sax.ext.LexicalHandler lexicalHandler;
    private boolean processNamespacePrefixes;
    private boolean processNamespaces;

    public void <init>()
    {
        org.apache.harmony.xml.ExpatReader r0;

        r0 := @this: org.apache.harmony.xml.ExpatReader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.harmony.xml.ExpatReader: boolean processNamespaces> = 1;

        r0.<org.apache.harmony.xml.ExpatReader: boolean processNamespacePrefixes> = 0;

        return;
    }

    private void parse(java.io.InputStream, java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException, org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatReader r0;
        java.io.InputStream r1;
        java.lang.String r2, r3, r4;
        org.apache.harmony.xml.ExpatParser $r5;
        boolean $z0;

        r0 := @this: org.apache.harmony.xml.ExpatReader;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        $r5 = new org.apache.harmony.xml.ExpatParser;

        $z0 = r0.<org.apache.harmony.xml.ExpatReader: boolean processNamespaces>;

        specialinvoke $r5.<org.apache.harmony.xml.ExpatParser: void <init>(java.lang.String,org.apache.harmony.xml.ExpatReader,boolean,java.lang.String,java.lang.String)>(r2, r0, $z0, r3, r4);

        virtualinvoke $r5.<org.apache.harmony.xml.ExpatParser: void parseDocument(java.io.InputStream)>(r1);

        return;
    }

    private void parse(java.io.Reader, java.lang.String, java.lang.String) throws java.io.IOException, org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatReader r0;
        java.io.Reader r1;
        java.lang.String r2, r3;
        org.apache.harmony.xml.ExpatParser $r4;
        boolean $z0;

        r0 := @this: org.apache.harmony.xml.ExpatReader;

        r1 := @parameter0: java.io.Reader;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = new org.apache.harmony.xml.ExpatParser;

        $z0 = r0.<org.apache.harmony.xml.ExpatReader: boolean processNamespaces>;

        specialinvoke $r4.<org.apache.harmony.xml.ExpatParser: void <init>(java.lang.String,org.apache.harmony.xml.ExpatReader,boolean,java.lang.String,java.lang.String)>("UTF-16", r0, $z0, r2, r3);

        virtualinvoke $r4.<org.apache.harmony.xml.ExpatParser: void parseDocument(java.io.Reader)>(r1);

        return;
    }

    public org.xml.sax.ContentHandler getContentHandler()
    {
        org.apache.harmony.xml.ExpatReader r0;
        org.xml.sax.ContentHandler $r1;

        r0 := @this: org.apache.harmony.xml.ExpatReader;

        $r1 = r0.<org.apache.harmony.xml.ExpatReader: org.xml.sax.ContentHandler contentHandler>;

        return $r1;
    }

    public org.xml.sax.DTDHandler getDTDHandler()
    {
        org.apache.harmony.xml.ExpatReader r0;
        org.xml.sax.DTDHandler $r1;

        r0 := @this: org.apache.harmony.xml.ExpatReader;

        $r1 = r0.<org.apache.harmony.xml.ExpatReader: org.xml.sax.DTDHandler dtdHandler>;

        return $r1;
    }

    public org.xml.sax.EntityResolver getEntityResolver()
    {
        org.apache.harmony.xml.ExpatReader r0;
        org.xml.sax.EntityResolver $r1;

        r0 := @this: org.apache.harmony.xml.ExpatReader;

        $r1 = r0.<org.apache.harmony.xml.ExpatReader: org.xml.sax.EntityResolver entityResolver>;

        return $r1;
    }

    public org.xml.sax.ErrorHandler getErrorHandler()
    {
        org.apache.harmony.xml.ExpatReader r0;
        org.xml.sax.ErrorHandler $r1;

        r0 := @this: org.apache.harmony.xml.ExpatReader;

        $r1 = r0.<org.apache.harmony.xml.ExpatReader: org.xml.sax.ErrorHandler errorHandler>;

        return $r1;
    }

    public boolean getFeature(java.lang.String) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.apache.harmony.xml.ExpatReader r0;
        java.lang.String r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.xml.sax.SAXNotRecognizedException $r2;
        java.lang.NullPointerException $r3;

        r0 := @this: org.apache.harmony.xml.ExpatReader;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("name == null");

        throw $r3;

     label1:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.org/sax/features/validation");

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.org/sax/features/external-general-entities");

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.org/sax/features/external-parameter-entities");

        if $z2 == 0 goto label3;

     label2:
        return 0;

     label3:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.org/sax/features/namespaces");

        if $z3 == 0 goto label4;

        $z7 = r0.<org.apache.harmony.xml.ExpatReader: boolean processNamespaces>;

        return $z7;

     label4:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.org/sax/features/namespace-prefixes");

        if $z4 == 0 goto label5;

        $z6 = r0.<org.apache.harmony.xml.ExpatReader: boolean processNamespacePrefixes>;

        return $z6;

     label5:
        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.org/sax/features/string-interning");

        if $z5 == 0 goto label6;

        return 1;

     label6:
        $r2 = new org.xml.sax.SAXNotRecognizedException;

        specialinvoke $r2.<org.xml.sax.SAXNotRecognizedException: void <init>(java.lang.String)>(r1);

        throw $r2;
    }

    public org.xml.sax.ext.LexicalHandler getLexicalHandler()
    {
        org.apache.harmony.xml.ExpatReader r0;
        org.xml.sax.ext.LexicalHandler $r1;

        r0 := @this: org.apache.harmony.xml.ExpatReader;

        $r1 = r0.<org.apache.harmony.xml.ExpatReader: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        return $r1;
    }

    public java.lang.Object getProperty(java.lang.String) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.apache.harmony.xml.ExpatReader r0;
        java.lang.String r1;
        boolean $z0;
        org.xml.sax.SAXNotRecognizedException $r2;
        org.xml.sax.ext.LexicalHandler $r3;
        java.lang.NullPointerException $r4;

        r0 := @this: org.apache.harmony.xml.ExpatReader;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("name == null");

        throw $r4;

     label1:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.org/sax/properties/lexical-handler");

        if $z0 == 0 goto label2;

        $r3 = r0.<org.apache.harmony.xml.ExpatReader: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        return $r3;

     label2:
        $r2 = new org.xml.sax.SAXNotRecognizedException;

        specialinvoke $r2.<org.xml.sax.SAXNotRecognizedException: void <init>(java.lang.String)>(r1);

        throw $r2;
    }

    public boolean isNamespaceProcessingEnabled()
    {
        org.apache.harmony.xml.ExpatReader r0;
        boolean $z0;

        r0 := @this: org.apache.harmony.xml.ExpatReader;

        $z0 = r0.<org.apache.harmony.xml.ExpatReader: boolean processNamespaces>;

        return $z0;
    }

    public void parse(java.lang.String) throws java.io.IOException, org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatReader r0;
        java.lang.String r1;
        org.xml.sax.InputSource $r2;

        r0 := @this: org.apache.harmony.xml.ExpatReader;

        r1 := @parameter0: java.lang.String;

        $r2 = new org.xml.sax.InputSource;

        specialinvoke $r2.<org.xml.sax.InputSource: void <init>(java.lang.String)>(r1);

        virtualinvoke r0.<org.apache.harmony.xml.ExpatReader: void parse(org.xml.sax.InputSource)>($r2);

        return;
    }

    public void parse(org.xml.sax.InputSource) throws java.io.IOException, org.xml.sax.SAXException
    {
        org.apache.harmony.xml.ExpatReader r0;
        org.xml.sax.InputSource r1;
        java.io.Reader r2;
        java.io.InputStream r3, r6;
        java.lang.String r4, r5, $r11, $r12, $r13, $r14, $r15;
        java.lang.Throwable r7, r8, r9, $r17, $r18, $r19;
        boolean $z0, $z1;
        org.xml.sax.SAXException $r10;
        org.xml.sax.SAXNotSupportedException $r16;

        r0 := @this: org.apache.harmony.xml.ExpatReader;

        r1 := @parameter0: org.xml.sax.InputSource;

        $z0 = r0.<org.apache.harmony.xml.ExpatReader: boolean processNamespacePrefixes>;

        if $z0 == 0 goto label01;

        $z1 = r0.<org.apache.harmony.xml.ExpatReader: boolean processNamespaces>;

        if $z1 == 0 goto label01;

        $r16 = new org.xml.sax.SAXNotSupportedException;

        specialinvoke $r16.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>("The \'namespace-prefix\' feature is not supported while the \'namespaces\' feature is enabled.");

        throw $r16;

     label01:
        r2 = virtualinvoke r1.<org.xml.sax.InputSource: java.io.Reader getCharacterStream()>();

        if r2 == null goto label05;

     label02:
        $r15 = virtualinvoke r1.<org.xml.sax.InputSource: java.lang.String getPublicId()>();

        $r14 = virtualinvoke r1.<org.xml.sax.InputSource: java.lang.String getSystemId()>();

        specialinvoke r0.<org.apache.harmony.xml.ExpatReader: void parse(java.io.Reader,java.lang.String,java.lang.String)>(r2, $r15, $r14);

     label03:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r2);

        return;

     label04:
        $r17 := @caughtexception;

        r9 = $r17;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r2);

        throw r9;

     label05:
        r3 = virtualinvoke r1.<org.xml.sax.InputSource: java.io.InputStream getByteStream()>();

        r4 = virtualinvoke r1.<org.xml.sax.InputSource: java.lang.String getEncoding()>();

        if r3 == null goto label09;

     label06:
        $r13 = virtualinvoke r1.<org.xml.sax.InputSource: java.lang.String getPublicId()>();

        $r12 = virtualinvoke r1.<org.xml.sax.InputSource: java.lang.String getSystemId()>();

        specialinvoke r0.<org.apache.harmony.xml.ExpatReader: void parse(java.io.InputStream,java.lang.String,java.lang.String,java.lang.String)>(r3, r4, $r13, $r12);

     label07:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r3);

        return;

     label08:
        $r19 := @caughtexception;

        r8 = $r19;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r3);

        throw r8;

     label09:
        r5 = virtualinvoke r1.<org.xml.sax.InputSource: java.lang.String getSystemId()>();

        if r5 != null goto label10;

        $r10 = new org.xml.sax.SAXException;

        specialinvoke $r10.<org.xml.sax.SAXException: void <init>(java.lang.String)>("No input specified.");

        throw $r10;

     label10:
        r6 = staticinvoke <org.apache.harmony.xml.ExpatParser: java.io.InputStream openUrl(java.lang.String)>(r5);

     label11:
        $r11 = virtualinvoke r1.<org.xml.sax.InputSource: java.lang.String getPublicId()>();

        specialinvoke r0.<org.apache.harmony.xml.ExpatReader: void parse(java.io.InputStream,java.lang.String,java.lang.String,java.lang.String)>(r6, r4, $r11, r5);

     label12:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r6);

        return;

     label13:
        $r18 := @caughtexception;

        r7 = $r18;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r6);

        throw r7;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label11 to label12 with label13;
    }

    public void setContentHandler(org.xml.sax.ContentHandler)
    {
        org.apache.harmony.xml.ExpatReader r0;
        org.xml.sax.ContentHandler r1;

        r0 := @this: org.apache.harmony.xml.ExpatReader;

        r1 := @parameter0: org.xml.sax.ContentHandler;

        r0.<org.apache.harmony.xml.ExpatReader: org.xml.sax.ContentHandler contentHandler> = r1;

        return;
    }

    public void setDTDHandler(org.xml.sax.DTDHandler)
    {
        org.apache.harmony.xml.ExpatReader r0;
        org.xml.sax.DTDHandler r1;

        r0 := @this: org.apache.harmony.xml.ExpatReader;

        r1 := @parameter0: org.xml.sax.DTDHandler;

        r0.<org.apache.harmony.xml.ExpatReader: org.xml.sax.DTDHandler dtdHandler> = r1;

        return;
    }

    public void setEntityResolver(org.xml.sax.EntityResolver)
    {
        org.apache.harmony.xml.ExpatReader r0;
        org.xml.sax.EntityResolver r1;

        r0 := @this: org.apache.harmony.xml.ExpatReader;

        r1 := @parameter0: org.xml.sax.EntityResolver;

        r0.<org.apache.harmony.xml.ExpatReader: org.xml.sax.EntityResolver entityResolver> = r1;

        return;
    }

    public void setErrorHandler(org.xml.sax.ErrorHandler)
    {
        org.apache.harmony.xml.ExpatReader r0;
        org.xml.sax.ErrorHandler r1;

        r0 := @this: org.apache.harmony.xml.ExpatReader;

        r1 := @parameter0: org.xml.sax.ErrorHandler;

        r0.<org.apache.harmony.xml.ExpatReader: org.xml.sax.ErrorHandler errorHandler> = r1;

        return;
    }

    public void setFeature(java.lang.String, boolean) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.apache.harmony.xml.ExpatReader r0;
        java.lang.String r1, $r6, $r11;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.xml.sax.SAXNotSupportedException $r2, $r8;
        java.lang.StringBuilder $r3, $r4, $r5, $r9, $r10, $r12;
        org.xml.sax.SAXNotRecognizedException $r7;
        java.lang.NullPointerException $r13;

        r0 := @this: org.apache.harmony.xml.ExpatReader;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if r1 != null goto label1;

        $r13 = new java.lang.NullPointerException;

        specialinvoke $r13.<java.lang.NullPointerException: void <init>(java.lang.String)>("name == null");

        throw $r13;

     label1:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.org/sax/features/validation");

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.org/sax/features/external-general-entities");

        if $z2 != 0 goto label2;

        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.org/sax/features/external-parameter-entities");

        if $z3 == 0 goto label3;

     label2:
        if z0 == 0 goto label4;

        $r2 = new org.xml.sax.SAXNotSupportedException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot enable ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label3:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.org/sax/features/namespaces");

        if $z4 == 0 goto label5;

        r0.<org.apache.harmony.xml.ExpatReader: boolean processNamespaces> = z0;

     label4:
        return;

     label5:
        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.org/sax/features/namespace-prefixes");

        if $z5 == 0 goto label6;

        r0.<org.apache.harmony.xml.ExpatReader: boolean processNamespacePrefixes> = z0;

        return;

     label6:
        $z6 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.org/sax/features/string-interning");

        if $z6 == 0 goto label7;

        if z0 != 0 goto label4;

        $r8 = new org.xml.sax.SAXNotSupportedException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot disable ");

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>($r11);

        throw $r8;

     label7:
        $r7 = new org.xml.sax.SAXNotRecognizedException;

        specialinvoke $r7.<org.xml.sax.SAXNotRecognizedException: void <init>(java.lang.String)>(r1);

        throw $r7;
    }

    public void setLexicalHandler(org.xml.sax.ext.LexicalHandler)
    {
        org.apache.harmony.xml.ExpatReader r0;
        org.xml.sax.ext.LexicalHandler r1;

        r0 := @this: org.apache.harmony.xml.ExpatReader;

        r1 := @parameter0: org.xml.sax.ext.LexicalHandler;

        r0.<org.apache.harmony.xml.ExpatReader: org.xml.sax.ext.LexicalHandler lexicalHandler> = r1;

        return;
    }

    public void setNamespaceProcessingEnabled(boolean)
    {
        org.apache.harmony.xml.ExpatReader r0;
        boolean z0;

        r0 := @this: org.apache.harmony.xml.ExpatReader;

        z0 := @parameter0: boolean;

        r0.<org.apache.harmony.xml.ExpatReader: boolean processNamespaces> = z0;

        return;
    }

    public void setProperty(java.lang.String, java.lang.Object) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.apache.harmony.xml.ExpatReader r0;
        java.lang.String r1;
        java.lang.Object r2;
        boolean $z0, $z1;
        org.xml.sax.SAXNotRecognizedException $r3;
        org.xml.sax.ext.LexicalHandler $r4;
        org.xml.sax.SAXNotSupportedException $r5;
        java.lang.NullPointerException $r6;

        r0 := @this: org.apache.harmony.xml.ExpatReader;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        if r1 != null goto label1;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("name == null");

        throw $r6;

     label1:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.org/sax/properties/lexical-handler");

        if $z0 == 0 goto label4;

        $z1 = r2 instanceof org.xml.sax.ext.LexicalHandler;

        if $z1 != 0 goto label2;

        if r2 != null goto label3;

     label2:
        $r4 = (org.xml.sax.ext.LexicalHandler) r2;

        r0.<org.apache.harmony.xml.ExpatReader: org.xml.sax.ext.LexicalHandler lexicalHandler> = $r4;

        return;

     label3:
        $r5 = new org.xml.sax.SAXNotSupportedException;

        specialinvoke $r5.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>("value doesn\'t implement org.xml.sax.ext.LexicalHandler");

        throw $r5;

     label4:
        $r3 = new org.xml.sax.SAXNotRecognizedException;

        specialinvoke $r3.<org.xml.sax.SAXNotRecognizedException: void <init>(java.lang.String)>(r1);

        throw $r3;
    }

    public static void <clinit>()
    {
        <org.apache.harmony.xml.ExpatReader: java.lang.String LEXICAL_HANDLER_PROPERTY> = "http://xml.org/sax/properties/lexical-handler";

        return;
    }
}
