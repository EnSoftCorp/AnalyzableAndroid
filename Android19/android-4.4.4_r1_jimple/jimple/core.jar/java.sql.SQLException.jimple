public class java.sql.SQLException extends java.lang.Exception implements java.io.Serializable, java.lang.Iterable
{
    private static final long serialVersionUID;
    private java.lang.String SQLState;
    private java.sql.SQLException next;
    private int vendorCode;

    public void <init>()
    {
        java.sql.SQLException r0;

        r0 := @this: java.sql.SQLException;

        specialinvoke r0.<java.lang.Exception: void <init>()>();

        r0.<java.sql.SQLException: java.lang.String SQLState> = null;

        r0.<java.sql.SQLException: int vendorCode> = 0;

        r0.<java.sql.SQLException: java.sql.SQLException next> = null;

        return;
    }

    public void <init>(java.lang.String)
    {
        java.sql.SQLException r0;
        java.lang.String r1;

        r0 := @this: java.sql.SQLException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.sql.SQLException: void <init>(java.lang.String,java.lang.String,int)>(r1, null, 0);

        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        java.sql.SQLException r0;
        java.lang.String r1, r2;

        r0 := @this: java.sql.SQLException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.sql.SQLException: void <init>(java.lang.String,java.lang.String,int)>(r1, r2, 0);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, int)
    {
        java.sql.SQLException r0;
        java.lang.String r1, r2;
        int i0;

        r0 := @this: java.sql.SQLException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>(r1);

        r0.<java.sql.SQLException: java.lang.String SQLState> = null;

        r0.<java.sql.SQLException: int vendorCode> = 0;

        r0.<java.sql.SQLException: java.sql.SQLException next> = null;

        r0.<java.sql.SQLException: java.lang.String SQLState> = r2;

        r0.<java.sql.SQLException: int vendorCode> = i0;

        return;
    }

    public void <init>(java.lang.String, java.lang.String, int, java.lang.Throwable)
    {
        java.sql.SQLException r0;
        java.lang.String r1, r2;
        int i0;
        java.lang.Throwable r3;

        r0 := @this: java.sql.SQLException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.Throwable;

        specialinvoke r0.<java.sql.SQLException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>(r1, r2, r3);

        r0.<java.sql.SQLException: int vendorCode> = i0;

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.Throwable)
    {
        java.sql.SQLException r0;
        java.lang.String r1, r2;
        java.lang.Throwable r3;

        r0 := @this: java.sql.SQLException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Throwable;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>(r1, r3);

        r0.<java.sql.SQLException: java.lang.String SQLState> = null;

        r0.<java.sql.SQLException: int vendorCode> = 0;

        r0.<java.sql.SQLException: java.sql.SQLException next> = null;

        r0.<java.sql.SQLException: java.lang.String SQLState> = r2;

        return;
    }

    public void <init>(java.lang.String, java.lang.Throwable)
    {
        java.sql.SQLException r0;
        java.lang.String r1;
        java.lang.Throwable r2;

        r0 := @this: java.sql.SQLException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>(r1, r2);

        r0.<java.sql.SQLException: java.lang.String SQLState> = null;

        r0.<java.sql.SQLException: int vendorCode> = 0;

        r0.<java.sql.SQLException: java.sql.SQLException next> = null;

        return;
    }

    public void <init>(java.lang.Throwable)
    {
        java.sql.SQLException r0;
        java.lang.Throwable r1;
        java.lang.String r2;

        r0 := @this: java.sql.SQLException;

        r1 := @parameter0: java.lang.Throwable;

        if r1 != null goto label2;

        r2 = null;

     label1:
        specialinvoke r0.<java.sql.SQLException: void <init>(java.lang.String,java.lang.String,int,java.lang.Throwable)>(r2, null, 0, r1);

        return;

     label2:
        r2 = virtualinvoke r1.<java.lang.Throwable: java.lang.String toString()>();

        goto label1;
    }

    static java.sql.SQLException access$000(java.sql.SQLException)
    {
        java.sql.SQLException r0, $r1;

        r0 := @parameter0: java.sql.SQLException;

        $r1 = r0.<java.sql.SQLException: java.sql.SQLException next>;

        return $r1;
    }

    public int getErrorCode()
    {
        java.sql.SQLException r0;
        int $i0;

        r0 := @this: java.sql.SQLException;

        $i0 = r0.<java.sql.SQLException: int vendorCode>;

        return $i0;
    }

    public java.sql.SQLException getNextException()
    {
        java.sql.SQLException r0, $r1;

        r0 := @this: java.sql.SQLException;

        $r1 = r0.<java.sql.SQLException: java.sql.SQLException next>;

        return $r1;
    }

    public java.lang.String getSQLState()
    {
        java.sql.SQLException r0;
        java.lang.String $r1;

        r0 := @this: java.sql.SQLException;

        $r1 = r0.<java.sql.SQLException: java.lang.String SQLState>;

        return $r1;
    }

    public java.util.Iterator iterator()
    {
        java.sql.SQLException r0;
        java.sql.SQLException$InternalIterator $r1;

        r0 := @this: java.sql.SQLException;

        $r1 = new java.sql.SQLException$InternalIterator;

        specialinvoke $r1.<java.sql.SQLException$InternalIterator: void <init>(java.sql.SQLException)>(r0);

        return $r1;
    }

    public void setNextException(java.sql.SQLException)
    {
        java.sql.SQLException r0, r1, $r2, $r3;

        r0 := @this: java.sql.SQLException;

        r1 := @parameter0: java.sql.SQLException;

        $r2 = r0.<java.sql.SQLException: java.sql.SQLException next>;

        if $r2 == null goto label1;

        $r3 = r0.<java.sql.SQLException: java.sql.SQLException next>;

        virtualinvoke $r3.<java.sql.SQLException: void setNextException(java.sql.SQLException)>(r1);

        return;

     label1:
        r0.<java.sql.SQLException: java.sql.SQLException next> = r1;

        return;
    }

    public static void <clinit>()
    {
        <java.sql.SQLException: long serialVersionUID> = 2135244094396331484L;

        return;
    }
}
