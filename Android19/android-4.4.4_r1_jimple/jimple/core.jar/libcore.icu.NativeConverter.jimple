public final class libcore.icu.NativeConverter extends java.lang.Object
{

    public void <init>()
    {
        libcore.icu.NativeConverter r0;

        r0 := @this: libcore.icu.NativeConverter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static native java.nio.charset.Charset charsetForName(java.lang.String);

    public static native void closeConverter(long);

    public static native boolean contains(java.lang.String, java.lang.String);

    public static native int decode(long, byte[], int, char[], int, int[], boolean);

    public static native int encode(long, char[], int, byte[], int, int[], boolean);

    public static native java.lang.String[] getAvailableCharsetNames();

    public static native float getAveBytesPerChar(long);

    public static native float getAveCharsPerByte(long);

    public static native int getMaxBytesPerChar(long);

    public static native int getMinBytesPerChar(long);

    public static native byte[] getSubstitutionBytes(long);

    public static native long openConverter(java.lang.String);

    public static native void resetByteToChar(long);

    public static native void resetCharToByte(long);

    private static native void setCallbackDecode(long, int, int, java.lang.String);

    public static void setCallbackDecode(long, java.nio.charset.CharsetDecoder)
    {
        long l0;
        java.nio.charset.CharsetDecoder r0;
        java.nio.charset.CodingErrorAction $r1, $r2;
        int $i1, $i2;
        java.lang.String $r3;

        l0 := @parameter0: long;

        r0 := @parameter1: java.nio.charset.CharsetDecoder;

        $r1 = virtualinvoke r0.<java.nio.charset.CharsetDecoder: java.nio.charset.CodingErrorAction malformedInputAction()>();

        $i1 = staticinvoke <libcore.icu.NativeConverter: int translateCodingErrorAction(java.nio.charset.CodingErrorAction)>($r1);

        $r2 = virtualinvoke r0.<java.nio.charset.CharsetDecoder: java.nio.charset.CodingErrorAction unmappableCharacterAction()>();

        $i2 = staticinvoke <libcore.icu.NativeConverter: int translateCodingErrorAction(java.nio.charset.CodingErrorAction)>($r2);

        $r3 = virtualinvoke r0.<java.nio.charset.CharsetDecoder: java.lang.String replacement()>();

        staticinvoke <libcore.icu.NativeConverter: void setCallbackDecode(long,int,int,java.lang.String)>(l0, $i1, $i2, $r3);

        return;
    }

    private static native void setCallbackEncode(long, int, int, byte[]);

    public static void setCallbackEncode(long, java.nio.charset.CharsetEncoder)
    {
        long l0;
        java.nio.charset.CharsetEncoder r0;
        java.nio.charset.CodingErrorAction $r1, $r2;
        int $i1, $i2;
        byte[] $r3;

        l0 := @parameter0: long;

        r0 := @parameter1: java.nio.charset.CharsetEncoder;

        $r1 = virtualinvoke r0.<java.nio.charset.CharsetEncoder: java.nio.charset.CodingErrorAction malformedInputAction()>();

        $i1 = staticinvoke <libcore.icu.NativeConverter: int translateCodingErrorAction(java.nio.charset.CodingErrorAction)>($r1);

        $r2 = virtualinvoke r0.<java.nio.charset.CharsetEncoder: java.nio.charset.CodingErrorAction unmappableCharacterAction()>();

        $i2 = staticinvoke <libcore.icu.NativeConverter: int translateCodingErrorAction(java.nio.charset.CodingErrorAction)>($r2);

        $r3 = virtualinvoke r0.<java.nio.charset.CharsetEncoder: byte[] replacement()>();

        staticinvoke <libcore.icu.NativeConverter: void setCallbackEncode(long,int,int,byte[])>(l0, $i1, $i2, $r3);

        return;
    }

    private static int translateCodingErrorAction(java.nio.charset.CodingErrorAction)
    {
        java.nio.charset.CodingErrorAction r0, $r1, $r2, $r3;
        java.lang.AssertionError $r4;

        r0 := @parameter0: java.nio.charset.CodingErrorAction;

        $r1 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPORT>;

        if r0 != $r1 goto label1;

        return 0;

     label1:
        $r2 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction IGNORE>;

        if r0 != $r2 goto label2;

        return 1;

     label2:
        $r3 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPLACE>;

        if r0 != $r3 goto label3;

        return 2;

     label3:
        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;
    }
}
