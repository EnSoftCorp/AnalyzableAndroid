public class java.text.NumberFormat$Field extends java.text.Format$Field
{
    public static final java.text.NumberFormat$Field CURRENCY;
    public static final java.text.NumberFormat$Field DECIMAL_SEPARATOR;
    public static final java.text.NumberFormat$Field EXPONENT;
    public static final java.text.NumberFormat$Field EXPONENT_SIGN;
    public static final java.text.NumberFormat$Field EXPONENT_SYMBOL;
    public static final java.text.NumberFormat$Field FRACTION;
    public static final java.text.NumberFormat$Field GROUPING_SEPARATOR;
    public static final java.text.NumberFormat$Field INTEGER;
    public static final java.text.NumberFormat$Field PERCENT;
    public static final java.text.NumberFormat$Field PERMILLE;
    public static final java.text.NumberFormat$Field SIGN;
    private static final long serialVersionUID;

    static void <clinit>()
    {
        java.text.NumberFormat$Field $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        <java.text.NumberFormat$Field: long serialVersionUID> = 7494728892700160890L;

        $r0 = new java.text.NumberFormat$Field;

        specialinvoke $r0.<java.text.NumberFormat$Field: void <init>(java.lang.String)>("sign");

        <java.text.NumberFormat$Field: java.text.NumberFormat$Field SIGN> = $r0;

        $r1 = new java.text.NumberFormat$Field;

        specialinvoke $r1.<java.text.NumberFormat$Field: void <init>(java.lang.String)>("integer");

        <java.text.NumberFormat$Field: java.text.NumberFormat$Field INTEGER> = $r1;

        $r2 = new java.text.NumberFormat$Field;

        specialinvoke $r2.<java.text.NumberFormat$Field: void <init>(java.lang.String)>("fraction");

        <java.text.NumberFormat$Field: java.text.NumberFormat$Field FRACTION> = $r2;

        $r3 = new java.text.NumberFormat$Field;

        specialinvoke $r3.<java.text.NumberFormat$Field: void <init>(java.lang.String)>("exponent");

        <java.text.NumberFormat$Field: java.text.NumberFormat$Field EXPONENT> = $r3;

        $r4 = new java.text.NumberFormat$Field;

        specialinvoke $r4.<java.text.NumberFormat$Field: void <init>(java.lang.String)>("exponent sign");

        <java.text.NumberFormat$Field: java.text.NumberFormat$Field EXPONENT_SIGN> = $r4;

        $r5 = new java.text.NumberFormat$Field;

        specialinvoke $r5.<java.text.NumberFormat$Field: void <init>(java.lang.String)>("exponent symbol");

        <java.text.NumberFormat$Field: java.text.NumberFormat$Field EXPONENT_SYMBOL> = $r5;

        $r6 = new java.text.NumberFormat$Field;

        specialinvoke $r6.<java.text.NumberFormat$Field: void <init>(java.lang.String)>("decimal separator");

        <java.text.NumberFormat$Field: java.text.NumberFormat$Field DECIMAL_SEPARATOR> = $r6;

        $r7 = new java.text.NumberFormat$Field;

        specialinvoke $r7.<java.text.NumberFormat$Field: void <init>(java.lang.String)>("grouping separator");

        <java.text.NumberFormat$Field: java.text.NumberFormat$Field GROUPING_SEPARATOR> = $r7;

        $r8 = new java.text.NumberFormat$Field;

        specialinvoke $r8.<java.text.NumberFormat$Field: void <init>(java.lang.String)>("percent");

        <java.text.NumberFormat$Field: java.text.NumberFormat$Field PERCENT> = $r8;

        $r9 = new java.text.NumberFormat$Field;

        specialinvoke $r9.<java.text.NumberFormat$Field: void <init>(java.lang.String)>("per mille");

        <java.text.NumberFormat$Field: java.text.NumberFormat$Field PERMILLE> = $r9;

        $r10 = new java.text.NumberFormat$Field;

        specialinvoke $r10.<java.text.NumberFormat$Field: void <init>(java.lang.String)>("currency");

        <java.text.NumberFormat$Field: java.text.NumberFormat$Field CURRENCY> = $r10;

        return;
    }

    protected void <init>(java.lang.String)
    {
        java.text.NumberFormat$Field r0;
        java.lang.String r1;

        r0 := @this: java.text.NumberFormat$Field;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.text.Format$Field: void <init>(java.lang.String)>(r1);

        return;
    }
}
