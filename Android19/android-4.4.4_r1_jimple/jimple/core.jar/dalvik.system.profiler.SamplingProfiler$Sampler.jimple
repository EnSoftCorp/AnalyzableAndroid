class dalvik.system.profiler.SamplingProfiler$Sampler extends java.util.TimerTask
{
    private boolean stop;
    private boolean stopped;
    final dalvik.system.profiler.SamplingProfiler this$0;
    private java.lang.Thread timerThread;

    private void <init>(dalvik.system.profiler.SamplingProfiler)
    {
        dalvik.system.profiler.SamplingProfiler$Sampler r0;
        dalvik.system.profiler.SamplingProfiler r1;

        r0 := @this: dalvik.system.profiler.SamplingProfiler$Sampler;

        r1 := @parameter0: dalvik.system.profiler.SamplingProfiler;

        r0.<dalvik.system.profiler.SamplingProfiler$Sampler: dalvik.system.profiler.SamplingProfiler this$0> = r1;

        specialinvoke r0.<java.util.TimerTask: void <init>()>();

        return;
    }

    void <init>(dalvik.system.profiler.SamplingProfiler, dalvik.system.profiler.SamplingProfiler$1)
    {
        dalvik.system.profiler.SamplingProfiler$Sampler r0;
        dalvik.system.profiler.SamplingProfiler r1;
        dalvik.system.profiler.SamplingProfiler$1 r2;

        r0 := @this: dalvik.system.profiler.SamplingProfiler$Sampler;

        r1 := @parameter0: dalvik.system.profiler.SamplingProfiler;

        r2 := @parameter1: dalvik.system.profiler.SamplingProfiler$1;

        specialinvoke r0.<dalvik.system.profiler.SamplingProfiler$Sampler: void <init>(dalvik.system.profiler.SamplingProfiler)>(r1);

        return;
    }

    static boolean access$102(dalvik.system.profiler.SamplingProfiler$Sampler, boolean)
    {
        dalvik.system.profiler.SamplingProfiler$Sampler r0;
        boolean z0;

        r0 := @parameter0: dalvik.system.profiler.SamplingProfiler$Sampler;

        z0 := @parameter1: boolean;

        r0.<dalvik.system.profiler.SamplingProfiler$Sampler: boolean stop> = z0;

        return z0;
    }

    static boolean access$200(dalvik.system.profiler.SamplingProfiler$Sampler)
    {
        dalvik.system.profiler.SamplingProfiler$Sampler r0;
        boolean $z0;

        r0 := @parameter0: dalvik.system.profiler.SamplingProfiler$Sampler;

        $z0 = r0.<dalvik.system.profiler.SamplingProfiler$Sampler: boolean stopped>;

        return $z0;
    }

    private void addEndThread(java.lang.Thread)
    {
        dalvik.system.profiler.SamplingProfiler$Sampler r0;
        java.lang.Thread r1;
        java.lang.Integer r2;
        dalvik.system.profiler.HprofData$ThreadEvent r3;
        dalvik.system.profiler.SamplingProfiler $r4, $r7;
        java.util.Map $r5;
        java.lang.Object $r6;
        int $i0;
        dalvik.system.profiler.HprofData $r8;
        java.lang.IllegalArgumentException $r9;
        java.lang.StringBuilder $r10, $r11, $r12;
        java.lang.String $r13;
        java.lang.NullPointerException $r14;

        r0 := @this: dalvik.system.profiler.SamplingProfiler$Sampler;

        r1 := @parameter0: java.lang.Thread;

        if r1 != null goto label1;

        $r14 = new java.lang.NullPointerException;

        specialinvoke $r14.<java.lang.NullPointerException: void <init>(java.lang.String)>("thread == null");

        throw $r14;

     label1:
        $r4 = r0.<dalvik.system.profiler.SamplingProfiler$Sampler: dalvik.system.profiler.SamplingProfiler this$0>;

        $r5 = staticinvoke <dalvik.system.profiler.SamplingProfiler: java.util.Map access$600(dalvik.system.profiler.SamplingProfiler)>($r4);

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        r2 = (java.lang.Integer) $r6;

        if r2 != null goto label2;

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown thread ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r9;

     label2:
        $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        r3 = staticinvoke <dalvik.system.profiler.HprofData$ThreadEvent: dalvik.system.profiler.HprofData$ThreadEvent end(int)>($i0);

        $r7 = r0.<dalvik.system.profiler.SamplingProfiler$Sampler: dalvik.system.profiler.SamplingProfiler this$0>;

        $r8 = staticinvoke <dalvik.system.profiler.SamplingProfiler: dalvik.system.profiler.HprofData access$1000(dalvik.system.profiler.SamplingProfiler)>($r7);

        virtualinvoke $r8.<dalvik.system.profiler.HprofData: void addThreadEvent(dalvik.system.profiler.HprofData$ThreadEvent)>(r3);

        return;
    }

    private void addStartThread(java.lang.Thread)
    {
        dalvik.system.profiler.SamplingProfiler$Sampler r0;
        java.lang.Thread r1;
        int i0, $i1;
        java.lang.Integer r2, $r12;
        java.lang.String r3, r5, r7, $r22;
        java.lang.ThreadGroup r4, r6;
        dalvik.system.profiler.HprofData$ThreadEvent r8;
        dalvik.system.profiler.SamplingProfiler $r9, $r10, $r14, $r16;
        java.util.Map $r11;
        java.lang.Object $r13;
        dalvik.system.profiler.HprofData $r15;
        java.lang.StringBuilder $r17, $r19, $r20;
        java.lang.IllegalArgumentException $r18;
        java.lang.NullPointerException $r21;

        r0 := @this: dalvik.system.profiler.SamplingProfiler$Sampler;

        r1 := @parameter0: java.lang.Thread;

        if r1 != null goto label1;

        $r21 = new java.lang.NullPointerException;

        specialinvoke $r21.<java.lang.NullPointerException: void <init>(java.lang.String)>("thread == null");

        throw $r21;

     label1:
        $r9 = r0.<dalvik.system.profiler.SamplingProfiler$Sampler: dalvik.system.profiler.SamplingProfiler this$0>;

        i0 = staticinvoke <dalvik.system.profiler.SamplingProfiler: int access$1108(dalvik.system.profiler.SamplingProfiler)>($r9);

        $r10 = r0.<dalvik.system.profiler.SamplingProfiler$Sampler: dalvik.system.profiler.SamplingProfiler this$0>;

        $r11 = staticinvoke <dalvik.system.profiler.SamplingProfiler: java.util.Map access$600(dalvik.system.profiler.SamplingProfiler)>($r10);

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r13 = interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r12);

        r2 = (java.lang.Integer) $r13;

        if r2 == null goto label2;

        $r18 = new java.lang.IllegalArgumentException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Thread already registered as ");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);

        throw $r18;

     label2:
        r3 = virtualinvoke r1.<java.lang.Thread: java.lang.String getName()>();

        r4 = virtualinvoke r1.<java.lang.Thread: java.lang.ThreadGroup getThreadGroup()>();

        if r4 != null goto label6;

        r5 = null;

     label3:
        if r4 != null goto label7;

        r6 = null;

     label4:
        r7 = null;

        if r6 != null goto label8;

     label5:
        $r14 = r0.<dalvik.system.profiler.SamplingProfiler$Sampler: dalvik.system.profiler.SamplingProfiler this$0>;

        $i1 = staticinvoke <dalvik.system.profiler.SamplingProfiler: int access$1208(dalvik.system.profiler.SamplingProfiler)>($r14);

        r8 = staticinvoke <dalvik.system.profiler.HprofData$ThreadEvent: dalvik.system.profiler.HprofData$ThreadEvent start(int,int,java.lang.String,java.lang.String,java.lang.String)>($i1, i0, r3, r5, r7);

        $r16 = r0.<dalvik.system.profiler.SamplingProfiler$Sampler: dalvik.system.profiler.SamplingProfiler this$0>;

        $r15 = staticinvoke <dalvik.system.profiler.SamplingProfiler: dalvik.system.profiler.HprofData access$1000(dalvik.system.profiler.SamplingProfiler)>($r16);

        virtualinvoke $r15.<dalvik.system.profiler.HprofData: void addThreadEvent(dalvik.system.profiler.HprofData$ThreadEvent)>(r8);

        return;

     label6:
        r5 = virtualinvoke r4.<java.lang.ThreadGroup: java.lang.String getName()>();

        goto label3;

     label7:
        r6 = virtualinvoke r4.<java.lang.ThreadGroup: java.lang.ThreadGroup getParent()>();

        goto label4;

     label8:
        r7 = virtualinvoke r6.<java.lang.ThreadGroup: java.lang.String getName()>();

        goto label5;
    }

    private void recordStackTrace(java.lang.Thread, java.lang.StackTraceElement[])
    {
        dalvik.system.profiler.SamplingProfiler$Sampler r0;
        java.lang.Thread r1;
        java.lang.StackTraceElement[] r2, r5;
        java.lang.Integer r3;
        int[] r4;
        dalvik.system.profiler.HprofData$StackTrace r6, $r11, $r13, $r18, $r19;
        dalvik.system.profiler.SamplingProfiler $r7, $r10, $r12, $r14, $r15, $r21, $r22;
        java.util.Map $r8, $r16;
        java.lang.Object $r9, $r17, $r20;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.IllegalArgumentException $r23;
        dalvik.system.profiler.HprofData $r24;
        java.lang.StringBuilder $r25, $r26, $r27;
        java.lang.String $r28;

        r0 := @this: dalvik.system.profiler.SamplingProfiler$Sampler;

        r1 := @parameter0: java.lang.Thread;

        r2 := @parameter1: java.lang.StackTraceElement[];

        $r7 = r0.<dalvik.system.profiler.SamplingProfiler$Sampler: dalvik.system.profiler.SamplingProfiler this$0>;

        $r8 = staticinvoke <dalvik.system.profiler.SamplingProfiler: java.util.Map access$600(dalvik.system.profiler.SamplingProfiler)>($r7);

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (java.lang.Integer) $r9;

        if r3 != null goto label1;

        $r23 = new java.lang.IllegalArgumentException;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown thread ");

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r28);

        throw $r23;

     label1:
        $r10 = r0.<dalvik.system.profiler.SamplingProfiler$Sampler: dalvik.system.profiler.SamplingProfiler this$0>;

        $r11 = staticinvoke <dalvik.system.profiler.SamplingProfiler: dalvik.system.profiler.HprofData$StackTrace access$700(dalvik.system.profiler.SamplingProfiler)>($r10);

        $i0 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        $r11.<dalvik.system.profiler.HprofData$StackTrace: int threadId> = $i0;

        $r12 = r0.<dalvik.system.profiler.SamplingProfiler$Sampler: dalvik.system.profiler.SamplingProfiler this$0>;

        $r13 = staticinvoke <dalvik.system.profiler.SamplingProfiler: dalvik.system.profiler.HprofData$StackTrace access$700(dalvik.system.profiler.SamplingProfiler)>($r12);

        $r13.<dalvik.system.profiler.HprofData$StackTrace: java.lang.StackTraceElement[] stackFrames> = r2;

        $r14 = r0.<dalvik.system.profiler.SamplingProfiler$Sampler: dalvik.system.profiler.SamplingProfiler this$0>;

        $r16 = staticinvoke <dalvik.system.profiler.SamplingProfiler: java.util.Map access$800(dalvik.system.profiler.SamplingProfiler)>($r14);

        $r15 = r0.<dalvik.system.profiler.SamplingProfiler$Sampler: dalvik.system.profiler.SamplingProfiler this$0>;

        $r18 = staticinvoke <dalvik.system.profiler.SamplingProfiler: dalvik.system.profiler.HprofData$StackTrace access$700(dalvik.system.profiler.SamplingProfiler)>($r15);

        $r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>($r18);

        r4 = (int[]) $r17;

        if r4 != null goto label2;

        r4 = newarray (int)[1];

        $r20 = virtualinvoke r2.<java.lang.Object: java.lang.Object clone()>();

        r5 = (java.lang.StackTraceElement[]) $r20;

        $r19 = new dalvik.system.profiler.HprofData$StackTrace;

        $r21 = r0.<dalvik.system.profiler.SamplingProfiler$Sampler: dalvik.system.profiler.SamplingProfiler this$0>;

        $i3 = staticinvoke <dalvik.system.profiler.SamplingProfiler: int access$908(dalvik.system.profiler.SamplingProfiler)>($r21);

        $i4 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        specialinvoke $r19.<dalvik.system.profiler.HprofData$StackTrace: void <init>(int,int,java.lang.StackTraceElement[])>($i3, $i4, r5);

        r6 = $r19;

        $r22 = r0.<dalvik.system.profiler.SamplingProfiler$Sampler: dalvik.system.profiler.SamplingProfiler this$0>;

        $r24 = staticinvoke <dalvik.system.profiler.SamplingProfiler: dalvik.system.profiler.HprofData access$1000(dalvik.system.profiler.SamplingProfiler)>($r22);

        virtualinvoke $r24.<dalvik.system.profiler.HprofData: void addStackTrace(dalvik.system.profiler.HprofData$StackTrace,int[])>(r6, r4);

     label2:
        $i2 = r4[0];

        $i1 = 1 + $i2;

        r4[0] = $i1;

        return;
    }

    private void updateThreadHistory(java.lang.Thread[], java.lang.Thread[])
    {
        dalvik.system.profiler.SamplingProfiler$Sampler r0;
        java.lang.Thread[] r1, r2;
        java.util.HashSet r3, r4, r5, r6, $r11, $r13, $r14, $r16;
        java.util.Iterator r7, r8;
        java.lang.Thread r9, r10, $r19, $r20;
        java.util.List $r12, $r15;
        boolean $z2, $z3;
        java.lang.Object $r17, $r18;

        r0 := @this: dalvik.system.profiler.SamplingProfiler$Sampler;

        r1 := @parameter0: java.lang.Thread[];

        r2 := @parameter1: java.lang.Thread[];

        $r11 = new java.util.HashSet;

        $r12 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r2);

        specialinvoke $r11.<java.util.HashSet: void <init>(java.util.Collection)>($r12);

        r3 = $r11;

        $r13 = new java.util.HashSet;

        $r15 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        specialinvoke $r13.<java.util.HashSet: void <init>(java.util.Collection)>($r15);

        r4 = $r13;

        $r14 = new java.util.HashSet;

        specialinvoke $r14.<java.util.HashSet: void <init>(java.util.Collection)>(r3);

        r5 = $r14;

        interfaceinvoke r5.<java.util.Set: boolean removeAll(java.util.Collection)>(r4);

        $r16 = new java.util.HashSet;

        specialinvoke $r16.<java.util.HashSet: void <init>(java.util.Collection)>(r4);

        r6 = $r16;

        interfaceinvoke r6.<java.util.Set: boolean removeAll(java.util.Collection)>(r3);

        r7 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        $r18 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.lang.Thread) $r18;

        if r10 == null goto label1;

        $r20 = r0.<dalvik.system.profiler.SamplingProfiler$Sampler: java.lang.Thread timerThread>;

        if r10 == $r20 goto label1;

        specialinvoke r0.<dalvik.system.profiler.SamplingProfiler$Sampler: void addStartThread(java.lang.Thread)>(r10);

        goto label1;

     label2:
        r8 = interfaceinvoke r6.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z3 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label4;

        $r17 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.lang.Thread) $r17;

        if r9 == null goto label3;

        $r19 = r0.<dalvik.system.profiler.SamplingProfiler$Sampler: java.lang.Thread timerThread>;

        if r9 == $r19 goto label3;

        specialinvoke r0.<dalvik.system.profiler.SamplingProfiler$Sampler: void addEndThread(java.lang.Thread)>(r9);

        goto label3;

     label4:
        return;
    }

    public void run()
    {
        dalvik.system.profiler.SamplingProfiler$Sampler r0;
        java.lang.Throwable r1, $r22;
        java.lang.Thread[] r2, r3, $r10, $r15, $r20;
        int i0, i1;
        java.lang.Thread r4, $r6, $r13, $r21;
        java.lang.StackTraceElement[] r5;
        boolean $z0, $z1;
        dalvik.system.profiler.SamplingProfiler $r7, $r9, $r11, $r12, $r16, $r18;
        dalvik.system.profiler.SamplingProfiler$ThreadSet $r8;
        dalvik.system.profiler.ThreadSampler $r14;
        java.lang.Object $r17;

        r0 := @this: dalvik.system.profiler.SamplingProfiler$Sampler;

        entermonitor r0;

     label01:
        $z0 = r0.<dalvik.system.profiler.SamplingProfiler$Sampler: boolean stop>;

        if $z0 == 0 goto label03;

        virtualinvoke r0.<dalvik.system.profiler.SamplingProfiler$Sampler: boolean cancel()>();

        r0.<dalvik.system.profiler.SamplingProfiler$Sampler: boolean stopped> = 1;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r0;

     label02:
        return;

     label03:
        exitmonitor r0;

     label04:
        $r6 = r0.<dalvik.system.profiler.SamplingProfiler$Sampler: java.lang.Thread timerThread>;

        if $r6 != null goto label05;

        $r21 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r0.<dalvik.system.profiler.SamplingProfiler$Sampler: java.lang.Thread timerThread> = $r21;

     label05:
        $r7 = r0.<dalvik.system.profiler.SamplingProfiler$Sampler: dalvik.system.profiler.SamplingProfiler this$0>;

        $r8 = staticinvoke <dalvik.system.profiler.SamplingProfiler: dalvik.system.profiler.SamplingProfiler$ThreadSet access$300(dalvik.system.profiler.SamplingProfiler)>($r7);

        r2 = interfaceinvoke $r8.<dalvik.system.profiler.SamplingProfiler$ThreadSet: java.lang.Thread[] threads()>();

        $r9 = r0.<dalvik.system.profiler.SamplingProfiler$Sampler: dalvik.system.profiler.SamplingProfiler this$0>;

        $r10 = staticinvoke <dalvik.system.profiler.SamplingProfiler: java.lang.Thread[] access$400(dalvik.system.profiler.SamplingProfiler)>($r9);

        $z1 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r10, r2);

        if $z1 != 0 goto label06;

        $r16 = r0.<dalvik.system.profiler.SamplingProfiler$Sampler: dalvik.system.profiler.SamplingProfiler this$0>;

        $r15 = staticinvoke <dalvik.system.profiler.SamplingProfiler: java.lang.Thread[] access$400(dalvik.system.profiler.SamplingProfiler)>($r16);

        specialinvoke r0.<dalvik.system.profiler.SamplingProfiler$Sampler: void updateThreadHistory(java.lang.Thread[],java.lang.Thread[])>($r15, r2);

        $r18 = r0.<dalvik.system.profiler.SamplingProfiler$Sampler: dalvik.system.profiler.SamplingProfiler this$0>;

        $r17 = virtualinvoke r2.<java.lang.Object: java.lang.Object clone()>();

        $r20 = (java.lang.Thread[]) $r17;

        staticinvoke <dalvik.system.profiler.SamplingProfiler: java.lang.Thread[] access$402(dalvik.system.profiler.SamplingProfiler,java.lang.Thread[])>($r18, $r20);

     label06:
        $r11 = r0.<dalvik.system.profiler.SamplingProfiler$Sampler: dalvik.system.profiler.SamplingProfiler this$0>;

        r3 = staticinvoke <dalvik.system.profiler.SamplingProfiler: java.lang.Thread[] access$400(dalvik.system.profiler.SamplingProfiler)>($r11);

        i0 = lengthof r3;

        i1 = 0;

     label07:
        if i1 >= i0 goto label13;

        r4 = r3[i1];

        if r4 == null goto label13;

        $r13 = r0.<dalvik.system.profiler.SamplingProfiler$Sampler: java.lang.Thread timerThread>;

        if r4 != $r13 goto label12;

     label08:
        i1 = i1 + 1;

        goto label07;

     label09:
        $r22 := @caughtexception;

        r1 = $r22;

     label10:
        exitmonitor r0;

     label11:
        throw r1;

     label12:
        $r12 = r0.<dalvik.system.profiler.SamplingProfiler$Sampler: dalvik.system.profiler.SamplingProfiler this$0>;

        $r14 = staticinvoke <dalvik.system.profiler.SamplingProfiler: dalvik.system.profiler.ThreadSampler access$500(dalvik.system.profiler.SamplingProfiler)>($r12);

        r5 = interfaceinvoke $r14.<dalvik.system.profiler.ThreadSampler: java.lang.StackTraceElement[] getStackTrace(java.lang.Thread)>(r4);

        if r5 == null goto label08;

        specialinvoke r0.<dalvik.system.profiler.SamplingProfiler$Sampler: void recordStackTrace(java.lang.Thread,java.lang.StackTraceElement[])>(r4, r5);

        goto label08;

     label13:
        return;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }
}
