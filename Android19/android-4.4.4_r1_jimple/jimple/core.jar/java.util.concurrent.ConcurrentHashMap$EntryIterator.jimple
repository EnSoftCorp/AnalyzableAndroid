final class java.util.concurrent.ConcurrentHashMap$EntryIterator extends java.util.concurrent.ConcurrentHashMap$HashIterator implements java.util.Iterator
{
    final java.util.concurrent.ConcurrentHashMap this$0;

    void <init>(java.util.concurrent.ConcurrentHashMap)
    {
        java.util.concurrent.ConcurrentHashMap$EntryIterator r0;
        java.util.concurrent.ConcurrentHashMap r1;

        r0 := @this: java.util.concurrent.ConcurrentHashMap$EntryIterator;

        r1 := @parameter0: java.util.concurrent.ConcurrentHashMap;

        r0.<java.util.concurrent.ConcurrentHashMap$EntryIterator: java.util.concurrent.ConcurrentHashMap this$0> = r1;

        specialinvoke r0.<java.util.concurrent.ConcurrentHashMap$HashIterator: void <init>(java.util.concurrent.ConcurrentHashMap)>(r1);

        return;
    }

    public volatile java.lang.Object next()
    {
        java.util.concurrent.ConcurrentHashMap$EntryIterator r0;
        java.util.Map$Entry $r1;

        r0 := @this: java.util.concurrent.ConcurrentHashMap$EntryIterator;

        $r1 = virtualinvoke r0.<java.util.concurrent.ConcurrentHashMap$EntryIterator: java.util.Map$Entry next()>();

        return $r1;
    }

    public java.util.Map$Entry next()
    {
        java.util.concurrent.ConcurrentHashMap$EntryIterator r0;
        java.util.concurrent.ConcurrentHashMap$HashEntry r1;
        java.util.concurrent.ConcurrentHashMap$WriteThroughEntry $r2;
        java.lang.Object $r3, $r4;
        java.util.concurrent.ConcurrentHashMap $r5;

        r0 := @this: java.util.concurrent.ConcurrentHashMap$EntryIterator;

        r1 = specialinvoke r0.<java.util.concurrent.ConcurrentHashMap$HashIterator: java.util.concurrent.ConcurrentHashMap$HashEntry nextEntry()>();

        $r2 = new java.util.concurrent.ConcurrentHashMap$WriteThroughEntry;

        $r5 = r0.<java.util.concurrent.ConcurrentHashMap$EntryIterator: java.util.concurrent.ConcurrentHashMap this$0>;

        $r4 = r1.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object key>;

        $r3 = r1.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>;

        specialinvoke $r2.<java.util.concurrent.ConcurrentHashMap$WriteThroughEntry: void <init>(java.util.concurrent.ConcurrentHashMap,java.lang.Object,java.lang.Object)>($r5, $r4, $r3);

        return $r2;
    }
}
