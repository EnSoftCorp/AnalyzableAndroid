public class java.util.concurrent.ExecutorCompletionService extends java.lang.Object implements java.util.concurrent.CompletionService
{
    private final java.util.concurrent.AbstractExecutorService aes;
    private final java.util.concurrent.BlockingQueue completionQueue;
    private final java.util.concurrent.Executor executor;

    public void <init>(java.util.concurrent.Executor)
    {
        java.util.concurrent.ExecutorCompletionService r0;
        java.util.concurrent.Executor r1;
        java.util.concurrent.AbstractExecutorService r2;
        boolean $z0;
        java.util.concurrent.LinkedBlockingQueue $r3;
        java.lang.NullPointerException $r4;

        r0 := @this: java.util.concurrent.ExecutorCompletionService;

        r1 := @parameter0: java.util.concurrent.Executor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>()>();

        throw $r4;

     label1:
        r0.<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.Executor executor> = r1;

        $z0 = r1 instanceof java.util.concurrent.AbstractExecutorService;

        if $z0 == 0 goto label3;

        r2 = (java.util.concurrent.AbstractExecutorService) r1;

     label2:
        r0.<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.AbstractExecutorService aes> = r2;

        $r3 = new java.util.concurrent.LinkedBlockingQueue;

        specialinvoke $r3.<java.util.concurrent.LinkedBlockingQueue: void <init>()>();

        r0.<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.BlockingQueue completionQueue> = $r3;

        return;

     label3:
        r2 = null;

        goto label2;
    }

    public void <init>(java.util.concurrent.Executor, java.util.concurrent.BlockingQueue)
    {
        java.util.concurrent.ExecutorCompletionService r0;
        java.util.concurrent.Executor r1;
        java.util.concurrent.BlockingQueue r2;
        java.util.concurrent.AbstractExecutorService r3;
        java.lang.NullPointerException $r4;
        boolean $z0;

        r0 := @this: java.util.concurrent.ExecutorCompletionService;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: java.util.concurrent.BlockingQueue;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>()>();

        throw $r4;

     label2:
        r0.<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.Executor executor> = r1;

        $z0 = r1 instanceof java.util.concurrent.AbstractExecutorService;

        if $z0 == 0 goto label4;

        r3 = (java.util.concurrent.AbstractExecutorService) r1;

     label3:
        r0.<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.AbstractExecutorService aes> = r3;

        r0.<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.BlockingQueue completionQueue> = r2;

        return;

     label4:
        r3 = null;

        goto label3;
    }

    static java.util.concurrent.BlockingQueue access$000(java.util.concurrent.ExecutorCompletionService)
    {
        java.util.concurrent.ExecutorCompletionService r0;
        java.util.concurrent.BlockingQueue $r1;

        r0 := @parameter0: java.util.concurrent.ExecutorCompletionService;

        $r1 = r0.<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.BlockingQueue completionQueue>;

        return $r1;
    }

    private java.util.concurrent.RunnableFuture newTaskFor(java.lang.Runnable, java.lang.Object)
    {
        java.util.concurrent.ExecutorCompletionService r0;
        java.lang.Runnable r1;
        java.lang.Object r2;
        java.util.concurrent.AbstractExecutorService $r3, $r4;
        java.util.concurrent.RunnableFuture $r5;
        java.util.concurrent.FutureTask $r6;

        r0 := @this: java.util.concurrent.ExecutorCompletionService;

        r1 := @parameter0: java.lang.Runnable;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.AbstractExecutorService aes>;

        if $r3 != null goto label1;

        $r6 = new java.util.concurrent.FutureTask;

        specialinvoke $r6.<java.util.concurrent.FutureTask: void <init>(java.lang.Runnable,java.lang.Object)>(r1, r2);

        return $r6;

     label1:
        $r4 = r0.<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.AbstractExecutorService aes>;

        $r5 = virtualinvoke $r4.<java.util.concurrent.AbstractExecutorService: java.util.concurrent.RunnableFuture newTaskFor(java.lang.Runnable,java.lang.Object)>(r1, r2);

        return $r5;
    }

    private java.util.concurrent.RunnableFuture newTaskFor(java.util.concurrent.Callable)
    {
        java.util.concurrent.ExecutorCompletionService r0;
        java.util.concurrent.Callable r1;
        java.util.concurrent.AbstractExecutorService $r2, $r3;
        java.util.concurrent.RunnableFuture $r4;
        java.util.concurrent.FutureTask $r5;

        r0 := @this: java.util.concurrent.ExecutorCompletionService;

        r1 := @parameter0: java.util.concurrent.Callable;

        $r2 = r0.<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.AbstractExecutorService aes>;

        if $r2 != null goto label1;

        $r5 = new java.util.concurrent.FutureTask;

        specialinvoke $r5.<java.util.concurrent.FutureTask: void <init>(java.util.concurrent.Callable)>(r1);

        return $r5;

     label1:
        $r3 = r0.<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.AbstractExecutorService aes>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.AbstractExecutorService: java.util.concurrent.RunnableFuture newTaskFor(java.util.concurrent.Callable)>(r1);

        return $r4;
    }

    public java.util.concurrent.Future poll()
    {
        java.util.concurrent.ExecutorCompletionService r0;
        java.util.concurrent.BlockingQueue $r1;
        java.lang.Object $r2;
        java.util.concurrent.Future $r3;

        r0 := @this: java.util.concurrent.ExecutorCompletionService;

        $r1 = r0.<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.BlockingQueue completionQueue>;

        $r2 = interfaceinvoke $r1.<java.util.concurrent.BlockingQueue: java.lang.Object poll()>();

        $r3 = (java.util.concurrent.Future) $r2;

        return $r3;
    }

    public java.util.concurrent.Future poll(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException
    {
        java.util.concurrent.ExecutorCompletionService r0;
        long l0;
        java.util.concurrent.TimeUnit r1;
        java.util.concurrent.BlockingQueue $r2;
        java.lang.Object $r3;
        java.util.concurrent.Future $r4;

        r0 := @this: java.util.concurrent.ExecutorCompletionService;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 = r0.<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.BlockingQueue completionQueue>;

        $r3 = interfaceinvoke $r2.<java.util.concurrent.BlockingQueue: java.lang.Object poll(long,java.util.concurrent.TimeUnit)>(l0, r1);

        $r4 = (java.util.concurrent.Future) $r3;

        return $r4;
    }

    public java.util.concurrent.Future submit(java.lang.Runnable, java.lang.Object)
    {
        java.util.concurrent.ExecutorCompletionService r0;
        java.lang.Runnable r1;
        java.lang.Object r2;
        java.util.concurrent.RunnableFuture r3;
        java.util.concurrent.ExecutorCompletionService$QueueingFuture $r4;
        java.util.concurrent.Executor $r5;
        java.lang.NullPointerException $r6;

        r0 := @this: java.util.concurrent.ExecutorCompletionService;

        r1 := @parameter0: java.lang.Runnable;

        r2 := @parameter1: java.lang.Object;

        if r1 != null goto label1;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>()>();

        throw $r6;

     label1:
        r3 = specialinvoke r0.<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.RunnableFuture newTaskFor(java.lang.Runnable,java.lang.Object)>(r1, r2);

        $r5 = r0.<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.Executor executor>;

        $r4 = new java.util.concurrent.ExecutorCompletionService$QueueingFuture;

        specialinvoke $r4.<java.util.concurrent.ExecutorCompletionService$QueueingFuture: void <init>(java.util.concurrent.ExecutorCompletionService,java.util.concurrent.RunnableFuture)>(r0, r3);

        interfaceinvoke $r5.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r4);

        return r3;
    }

    public java.util.concurrent.Future submit(java.util.concurrent.Callable)
    {
        java.util.concurrent.ExecutorCompletionService r0;
        java.util.concurrent.Callable r1;
        java.util.concurrent.RunnableFuture r2;
        java.util.concurrent.ExecutorCompletionService$QueueingFuture $r3;
        java.util.concurrent.Executor $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: java.util.concurrent.ExecutorCompletionService;

        r1 := @parameter0: java.util.concurrent.Callable;

        if r1 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>()>();

        throw $r5;

     label1:
        r2 = specialinvoke r0.<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.RunnableFuture newTaskFor(java.util.concurrent.Callable)>(r1);

        $r4 = r0.<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.Executor executor>;

        $r3 = new java.util.concurrent.ExecutorCompletionService$QueueingFuture;

        specialinvoke $r3.<java.util.concurrent.ExecutorCompletionService$QueueingFuture: void <init>(java.util.concurrent.ExecutorCompletionService,java.util.concurrent.RunnableFuture)>(r0, r2);

        interfaceinvoke $r4.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r3);

        return r2;
    }

    public java.util.concurrent.Future take() throws java.lang.InterruptedException
    {
        java.util.concurrent.ExecutorCompletionService r0;
        java.util.concurrent.BlockingQueue $r1;
        java.lang.Object $r2;
        java.util.concurrent.Future $r3;

        r0 := @this: java.util.concurrent.ExecutorCompletionService;

        $r1 = r0.<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.BlockingQueue completionQueue>;

        $r2 = interfaceinvoke $r1.<java.util.concurrent.BlockingQueue: java.lang.Object take()>();

        $r3 = (java.util.concurrent.Future) $r2;

        return $r3;
    }
}
