public abstract class java.security.MessageDigest extends java.security.MessageDigestSpi
{
    private static final org.apache.harmony.security.fortress.Engine ENGINE;
    private java.lang.String algorithm;
    private java.security.Provider provider;

    static void <clinit>()
    {
        org.apache.harmony.security.fortress.Engine $r0;

        $r0 = new org.apache.harmony.security.fortress.Engine;

        specialinvoke $r0.<org.apache.harmony.security.fortress.Engine: void <init>(java.lang.String)>("MessageDigest");

        <java.security.MessageDigest: org.apache.harmony.security.fortress.Engine ENGINE> = $r0;

        return;
    }

    protected void <init>(java.lang.String)
    {
        java.security.MessageDigest r0;
        java.lang.String r1;

        r0 := @this: java.security.MessageDigest;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.security.MessageDigestSpi: void <init>()>();

        r0.<java.security.MessageDigest: java.lang.String algorithm> = r1;

        return;
    }

    static java.security.Provider access$102(java.security.MessageDigest, java.security.Provider)
    {
        java.security.MessageDigest r0;
        java.security.Provider r1;

        r0 := @parameter0: java.security.MessageDigest;

        r1 := @parameter1: java.security.Provider;

        r0.<java.security.MessageDigest: java.security.Provider provider> = r1;

        return r1;
    }

    public static java.security.MessageDigest getInstance(java.lang.String) throws java.security.NoSuchAlgorithmException
    {
        java.lang.String r0;
        org.apache.harmony.security.fortress.Engine$SpiAndProvider r1;
        java.lang.Object r2, $r7;
        java.security.Provider r3, $r8;
        java.security.MessageDigest r4;
        org.apache.harmony.security.fortress.Engine $r5;
        boolean $z0;
        java.security.MessageDigest$MessageDigestImpl $r6;
        java.security.MessageDigestSpi $r9;
        java.lang.NullPointerException $r10;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r10 = new java.lang.NullPointerException;

        specialinvoke $r10.<java.lang.NullPointerException: void <init>(java.lang.String)>("algorithm == null");

        throw $r10;

     label1:
        $r5 = <java.security.MessageDigest: org.apache.harmony.security.fortress.Engine ENGINE>;

        r1 = virtualinvoke $r5.<org.apache.harmony.security.fortress.Engine: org.apache.harmony.security.fortress.Engine$SpiAndProvider getInstance(java.lang.String,java.lang.Object)>(r0, null);

        r2 = r1.<org.apache.harmony.security.fortress.Engine$SpiAndProvider: java.lang.Object spi>;

        r3 = r1.<org.apache.harmony.security.fortress.Engine$SpiAndProvider: java.security.Provider provider>;

        $z0 = r2 instanceof java.security.MessageDigest;

        if $z0 == 0 goto label2;

        r4 = (java.security.MessageDigest) r2;

        r4.<java.security.MessageDigest: java.lang.String algorithm> = r0;

        r4.<java.security.MessageDigest: java.security.Provider provider> = r3;

        return r4;

     label2:
        $r6 = new java.security.MessageDigest$MessageDigestImpl;

        $r7 = r1.<org.apache.harmony.security.fortress.Engine$SpiAndProvider: java.lang.Object spi>;

        $r9 = (java.security.MessageDigestSpi) $r7;

        $r8 = r1.<org.apache.harmony.security.fortress.Engine$SpiAndProvider: java.security.Provider provider>;

        specialinvoke $r6.<java.security.MessageDigest$MessageDigestImpl: void <init>(java.security.MessageDigestSpi,java.security.Provider,java.lang.String,java.security.MessageDigest$1)>($r9, $r8, r0, null);

        return $r6;
    }

    public static java.security.MessageDigest getInstance(java.lang.String, java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException
    {
        java.lang.String r0, r1;
        java.security.Provider r2;
        java.lang.IllegalArgumentException $r3;
        boolean $z0;
        java.security.MessageDigest $r4;
        java.security.NoSuchProviderException $r5;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label2:
        r2 = staticinvoke <java.security.Security: java.security.Provider getProvider(java.lang.String)>(r1);

        if r2 != null goto label3;

        $r5 = new java.security.NoSuchProviderException;

        specialinvoke $r5.<java.security.NoSuchProviderException: void <init>(java.lang.String)>(r1);

        throw $r5;

     label3:
        $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>(r0, r2);

        return $r4;
    }

    public static java.security.MessageDigest getInstance(java.lang.String, java.security.Provider) throws java.security.NoSuchAlgorithmException
    {
        java.lang.String r0;
        java.security.Provider r1;
        java.lang.Object r2;
        java.security.MessageDigest r3;
        org.apache.harmony.security.fortress.Engine $r4;
        boolean $z0;
        java.security.MessageDigest$MessageDigestImpl $r5;
        java.security.MessageDigestSpi $r6;
        java.lang.NullPointerException $r7;
        java.lang.IllegalArgumentException $r8;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.security.Provider;

        if r1 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("provider == null");

        throw $r8;

     label1:
        if r0 != null goto label2;

        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("algorithm == null");

        throw $r7;

     label2:
        $r4 = <java.security.MessageDigest: org.apache.harmony.security.fortress.Engine ENGINE>;

        r2 = virtualinvoke $r4.<org.apache.harmony.security.fortress.Engine: java.lang.Object getInstance(java.lang.String,java.security.Provider,java.lang.Object)>(r0, r1, null);

        $z0 = r2 instanceof java.security.MessageDigest;

        if $z0 == 0 goto label3;

        r3 = (java.security.MessageDigest) r2;

        r3.<java.security.MessageDigest: java.lang.String algorithm> = r0;

        r3.<java.security.MessageDigest: java.security.Provider provider> = r1;

        return r3;

     label3:
        $r5 = new java.security.MessageDigest$MessageDigestImpl;

        $r6 = (java.security.MessageDigestSpi) r2;

        specialinvoke $r5.<java.security.MessageDigest$MessageDigestImpl: void <init>(java.security.MessageDigestSpi,java.security.Provider,java.lang.String,java.security.MessageDigest$1)>($r6, r1, r0, null);

        return $r5;
    }

    public static boolean isEqual(byte[], byte[])
    {
        byte[] r0, r1;
        int i0, $i1, $i2, $i3;
        byte $b4, $b5;

        r0 := @parameter0: byte[];

        r1 := @parameter1: byte[];

        $i2 = lengthof r0;

        $i1 = lengthof r1;

        if $i2 == $i1 goto label2;

     label1:
        return 0;

     label2:
        i0 = 0;

     label3:
        $i3 = lengthof r0;

        if i0 >= $i3 goto label4;

        $b5 = r0[i0];

        $b4 = r1[i0];

        if $b5 != $b4 goto label1;

        i0 = i0 + 1;

        goto label3;

     label4:
        return 1;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        java.security.MessageDigest r0;
        boolean $z0;
        java.lang.CloneNotSupportedException $r1;
        java.lang.Object $r2;

        r0 := @this: java.security.MessageDigest;

        $z0 = r0 instanceof java.lang.Cloneable;

        if $z0 == 0 goto label1;

        $r2 = specialinvoke r0.<java.security.MessageDigestSpi: java.lang.Object clone()>();

        return $r2;

     label1:
        $r1 = new java.lang.CloneNotSupportedException;

        specialinvoke $r1.<java.lang.CloneNotSupportedException: void <init>()>();

        throw $r1;
    }

    public int digest(byte[], int, int) throws java.security.DigestException
    {
        java.security.MessageDigest r0;
        byte[] r1;
        int i0, i1, $i4, $i8;
        java.lang.IllegalArgumentException $r2;
        long $l2, $l3, $l5, $l6;
        byte $b7;

        r0 := @this: java.security.MessageDigest;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 == null goto label1;

        $l3 = (long) i0;

        $l2 = (long) i1;

        $l6 = $l3 + $l2;

        $i4 = lengthof r1;

        $l5 = (long) $i4;

        $b7 = $l6 cmp $l5;

        if $b7 <= 0 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label2:
        $i8 = virtualinvoke r0.<java.security.MessageDigest: int engineDigest(byte[],int,int)>(r1, i0, i1);

        return $i8;
    }

    public byte[] digest()
    {
        java.security.MessageDigest r0;
        byte[] $r1;

        r0 := @this: java.security.MessageDigest;

        $r1 = virtualinvoke r0.<java.security.MessageDigest: byte[] engineDigest()>();

        return $r1;
    }

    public byte[] digest(byte[])
    {
        java.security.MessageDigest r0;
        byte[] r1, $r2;

        r0 := @this: java.security.MessageDigest;

        r1 := @parameter0: byte[];

        virtualinvoke r0.<java.security.MessageDigest: void update(byte[])>(r1);

        $r2 = virtualinvoke r0.<java.security.MessageDigest: byte[] digest()>();

        return $r2;
    }

    public final java.lang.String getAlgorithm()
    {
        java.security.MessageDigest r0;
        java.lang.String $r1;

        r0 := @this: java.security.MessageDigest;

        $r1 = r0.<java.security.MessageDigest: java.lang.String algorithm>;

        return $r1;
    }

    public final int getDigestLength()
    {
        java.security.MessageDigest r0, $r3;
        int i0, i1;
        boolean $z0;
        java.lang.Object $r2;
        byte[] $r4;
        java.lang.CloneNotSupportedException $r5;

        r0 := @this: java.security.MessageDigest;

        i0 = virtualinvoke r0.<java.security.MessageDigest: int engineGetDigestLength()>();

        if i0 == 0 goto label1;

        return i0;

     label1:
        $z0 = r0 instanceof java.lang.Cloneable;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<java.security.MessageDigest: java.lang.Object clone()>();

        $r3 = (java.security.MessageDigest) $r2;

        $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>();

        i1 = lengthof $r4;

     label3:
        return i1;

     label4:
        $r5 := @caughtexception;

        return 0;

        catch java.lang.CloneNotSupportedException from label2 to label3 with label4;
    }

    public final java.security.Provider getProvider()
    {
        java.security.MessageDigest r0;
        java.security.Provider $r1;

        r0 := @this: java.security.MessageDigest;

        $r1 = r0.<java.security.MessageDigest: java.security.Provider provider>;

        return $r1;
    }

    public void reset()
    {
        java.security.MessageDigest r0;

        r0 := @this: java.security.MessageDigest;

        virtualinvoke r0.<java.security.MessageDigest: void engineReset()>();

        return;
    }

    public java.lang.String toString()
    {
        java.security.MessageDigest r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String $r3, $r5;

        r0 := @this: java.security.MessageDigest;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MESSAGE DIGEST ");

        $r3 = r0.<java.security.MessageDigest: java.lang.String algorithm>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public void update(byte)
    {
        java.security.MessageDigest r0;
        byte b0;

        r0 := @this: java.security.MessageDigest;

        b0 := @parameter0: byte;

        virtualinvoke r0.<java.security.MessageDigest: void engineUpdate(byte)>(b0);

        return;
    }

    public final void update(java.nio.ByteBuffer)
    {
        java.security.MessageDigest r0;
        java.nio.ByteBuffer r1;

        r0 := @this: java.security.MessageDigest;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<java.security.MessageDigest: void engineUpdate(java.nio.ByteBuffer)>(r1);

        return;
    }

    public void update(byte[])
    {
        java.security.MessageDigest r0;
        byte[] r1;
        int $i0;
        java.lang.NullPointerException $r2;

        r0 := @this: java.security.MessageDigest;

        r1 := @parameter0: byte[];

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("input == null");

        throw $r2;

     label1:
        $i0 = lengthof r1;

        virtualinvoke r0.<java.security.MessageDigest: void engineUpdate(byte[],int,int)>(r1, 0, $i0);

        return;
    }

    public void update(byte[], int, int)
    {
        java.security.MessageDigest r0;
        byte[] r1;
        int i0, i1, $i4;
        java.lang.IllegalArgumentException $r2;
        long $l2, $l3, $l5, $l6;
        byte $b7;

        r0 := @this: java.security.MessageDigest;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 == null goto label1;

        $l3 = (long) i0;

        $l2 = (long) i1;

        $l6 = $l3 + $l2;

        $i4 = lengthof r1;

        $l5 = (long) $i4;

        $b7 = $l6 cmp $l5;

        if $b7 <= 0 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label2:
        virtualinvoke r0.<java.security.MessageDigest: void engineUpdate(byte[],int,int)>(r1, i0, i1);

        return;
    }
}
