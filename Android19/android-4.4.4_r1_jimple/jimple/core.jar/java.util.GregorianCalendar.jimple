public class java.util.GregorianCalendar extends java.util.Calendar
{
    public static final int AD;
    public static final int BC;
    static byte[] DaysInMonth;
    private static int[] DaysInYear;
    private static final long defaultGregorianCutover;
    private static int[] leastMaximums;
    private static int[] maximums;
    private static int[] minimums;
    private static final long serialVersionUID;
    private transient int changeYear;
    private int currentYearSkew;
    private long gregorianCutover;
    private transient int julianSkew;
    private int lastYearSkew;

    static void <clinit>()
    {
        byte[] $r0;
        int[] $r1, $r2, $r3, $r4;

        <java.util.GregorianCalendar: long serialVersionUID> = -8125100834729963327L;

        <java.util.GregorianCalendar: long defaultGregorianCutover> = -12219292800000L;

        <java.util.GregorianCalendar: int BC> = 0;

        <java.util.GregorianCalendar: int AD> = 1;

        $r0 = newarray (byte)[12];

        $r0[0] = 31;

        $r0[1] = 28;

        $r0[2] = 31;

        $r0[3] = 30;

        $r0[4] = 31;

        $r0[5] = 30;

        $r0[6] = 31;

        $r0[7] = 31;

        $r0[8] = 30;

        $r0[9] = 31;

        $r0[10] = 30;

        $r0[11] = 31;

        <java.util.GregorianCalendar: byte[] DaysInMonth> = $r0;

        $r1 = newarray (int)[12];

        $r1[0] = 0;

        $r1[1] = 31;

        $r1[2] = 59;

        $r1[3] = 90;

        $r1[4] = 120;

        $r1[5] = 151;

        $r1[6] = 181;

        $r1[7] = 212;

        $r1[8] = 243;

        $r1[9] = 273;

        $r1[10] = 304;

        $r1[11] = 334;

        <java.util.GregorianCalendar: int[] DaysInYear> = $r1;

        $r2 = newarray (int)[17];

        $r2[0] = 1;

        $r2[1] = 292278994;

        $r2[2] = 11;

        $r2[3] = 53;

        $r2[4] = 6;

        $r2[5] = 31;

        $r2[6] = 366;

        $r2[7] = 7;

        $r2[8] = 6;

        $r2[9] = 1;

        $r2[10] = 11;

        $r2[11] = 23;

        $r2[12] = 59;

        $r2[13] = 59;

        $r2[14] = 999;

        $r2[15] = 50400000;

        $r2[16] = 7200000;

        <java.util.GregorianCalendar: int[] maximums> = $r2;

        $r3 = newarray (int)[17];

        $r3[0] = 0;

        $r3[1] = 1;

        $r3[2] = 0;

        $r3[3] = 1;

        $r3[4] = 0;

        $r3[5] = 1;

        $r3[6] = 1;

        $r3[7] = 1;

        $r3[8] = 1;

        $r3[9] = 0;

        $r3[10] = 0;

        $r3[11] = 0;

        $r3[12] = 0;

        $r3[13] = 0;

        $r3[14] = 0;

        $r3[15] = -46800000;

        $r3[16] = 0;

        <java.util.GregorianCalendar: int[] minimums> = $r3;

        $r4 = newarray (int)[17];

        $r4[0] = 1;

        $r4[1] = 292269054;

        $r4[2] = 11;

        $r4[3] = 50;

        $r4[4] = 3;

        $r4[5] = 28;

        $r4[6] = 355;

        $r4[7] = 7;

        $r4[8] = 3;

        $r4[9] = 1;

        $r4[10] = 11;

        $r4[11] = 23;

        $r4[12] = 59;

        $r4[13] = 59;

        $r4[14] = 999;

        $r4[15] = 50400000;

        $r4[16] = 1200000;

        <java.util.GregorianCalendar: int[] leastMaximums> = $r4;

        return;
    }

    public void <init>()
    {
        java.util.GregorianCalendar r0;
        java.util.TimeZone $r1;
        java.util.Locale $r2;

        r0 := @this: java.util.GregorianCalendar;

        $r1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        $r2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        specialinvoke r0.<java.util.GregorianCalendar: void <init>(java.util.TimeZone,java.util.Locale)>($r1, $r2);

        return;
    }

    public void <init>(int, int, int)
    {
        java.util.GregorianCalendar r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.util.TimeZone $r1;
        java.util.Locale $r2;

        r0 := @this: java.util.GregorianCalendar;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        $r2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        specialinvoke r0.<java.util.Calendar: void <init>(java.util.TimeZone,java.util.Locale)>($r1, $r2);

        r0.<java.util.GregorianCalendar: long gregorianCutover> = -12219292800000L;

        r0.<java.util.GregorianCalendar: int changeYear> = 1582;

        $i3 = r0.<java.util.GregorianCalendar: int changeYear>;

        $i4 = -2000 + $i3;

        $i5 = $i4 / 400;

        $i6 = specialinvoke r0.<java.util.GregorianCalendar: int julianError()>();

        $i10 = $i5 + $i6;

        $i7 = r0.<java.util.GregorianCalendar: int changeYear>;

        $i8 = -2000 + $i7;

        $i9 = $i8 / 100;

        $i11 = $i10 - $i9;

        r0.<java.util.GregorianCalendar: int julianSkew> = $i11;

        r0.<java.util.GregorianCalendar: int currentYearSkew> = 10;

        r0.<java.util.GregorianCalendar: int lastYearSkew> = 0;

        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int,int)>(i0, i1, i2);

        return;
    }

    public void <init>(int, int, int, int, int)
    {
        java.util.GregorianCalendar r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.util.TimeZone $r1;
        java.util.Locale $r2;

        r0 := @this: java.util.GregorianCalendar;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        $r1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        $r2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        specialinvoke r0.<java.util.Calendar: void <init>(java.util.TimeZone,java.util.Locale)>($r1, $r2);

        r0.<java.util.GregorianCalendar: long gregorianCutover> = -12219292800000L;

        r0.<java.util.GregorianCalendar: int changeYear> = 1582;

        $i5 = r0.<java.util.GregorianCalendar: int changeYear>;

        $i6 = -2000 + $i5;

        $i7 = $i6 / 400;

        $i8 = specialinvoke r0.<java.util.GregorianCalendar: int julianError()>();

        $i12 = $i7 + $i8;

        $i9 = r0.<java.util.GregorianCalendar: int changeYear>;

        $i10 = -2000 + $i9;

        $i11 = $i10 / 100;

        $i13 = $i12 - $i11;

        r0.<java.util.GregorianCalendar: int julianSkew> = $i13;

        r0.<java.util.GregorianCalendar: int currentYearSkew> = 10;

        r0.<java.util.GregorianCalendar: int lastYearSkew> = 0;

        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int,int,int,int)>(i0, i1, i2, i3, i4);

        return;
    }

    public void <init>(int, int, int, int, int, int)
    {
        java.util.GregorianCalendar r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        java.util.TimeZone $r1;
        java.util.Locale $r2;

        r0 := @this: java.util.GregorianCalendar;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        $r1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        $r2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        specialinvoke r0.<java.util.Calendar: void <init>(java.util.TimeZone,java.util.Locale)>($r1, $r2);

        r0.<java.util.GregorianCalendar: long gregorianCutover> = -12219292800000L;

        r0.<java.util.GregorianCalendar: int changeYear> = 1582;

        $i6 = r0.<java.util.GregorianCalendar: int changeYear>;

        $i7 = -2000 + $i6;

        $i8 = $i7 / 400;

        $i9 = specialinvoke r0.<java.util.GregorianCalendar: int julianError()>();

        $i14 = $i8 + $i9;

        $i10 = r0.<java.util.GregorianCalendar: int changeYear>;

        $i11 = -2000 + $i10;

        $i12 = $i11 / 100;

        $i13 = $i14 - $i12;

        r0.<java.util.GregorianCalendar: int julianSkew> = $i13;

        r0.<java.util.GregorianCalendar: int currentYearSkew> = 10;

        r0.<java.util.GregorianCalendar: int lastYearSkew> = 0;

        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int,int,int,int,int)>(i0, i1, i2, i3, i4, i5);

        return;
    }

    void <init>(long)
    {
        java.util.GregorianCalendar r0;
        long l0;

        r0 := @this: java.util.GregorianCalendar;

        l0 := @parameter0: long;

        specialinvoke r0.<java.util.GregorianCalendar: void <init>(boolean)>(0);

        virtualinvoke r0.<java.util.GregorianCalendar: void setTimeInMillis(long)>(l0);

        return;
    }

    public void <init>(java.util.Locale)
    {
        java.util.GregorianCalendar r0;
        java.util.Locale r1;
        java.util.TimeZone $r2;

        r0 := @this: java.util.GregorianCalendar;

        r1 := @parameter0: java.util.Locale;

        $r2 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        specialinvoke r0.<java.util.GregorianCalendar: void <init>(java.util.TimeZone,java.util.Locale)>($r2, r1);

        return;
    }

    public void <init>(java.util.TimeZone)
    {
        java.util.GregorianCalendar r0;
        java.util.TimeZone r1;
        java.util.Locale $r2;

        r0 := @this: java.util.GregorianCalendar;

        r1 := @parameter0: java.util.TimeZone;

        $r2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        specialinvoke r0.<java.util.GregorianCalendar: void <init>(java.util.TimeZone,java.util.Locale)>(r1, $r2);

        return;
    }

    public void <init>(java.util.TimeZone, java.util.Locale)
    {
        java.util.GregorianCalendar r0;
        java.util.TimeZone r1;
        java.util.Locale r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        long $l9;

        r0 := @this: java.util.GregorianCalendar;

        r1 := @parameter0: java.util.TimeZone;

        r2 := @parameter1: java.util.Locale;

        specialinvoke r0.<java.util.Calendar: void <init>(java.util.TimeZone,java.util.Locale)>(r1, r2);

        r0.<java.util.GregorianCalendar: long gregorianCutover> = -12219292800000L;

        r0.<java.util.GregorianCalendar: int changeYear> = 1582;

        $i0 = r0.<java.util.GregorianCalendar: int changeYear>;

        $i1 = -2000 + $i0;

        $i2 = $i1 / 400;

        $i3 = specialinvoke r0.<java.util.GregorianCalendar: int julianError()>();

        $i7 = $i2 + $i3;

        $i4 = r0.<java.util.GregorianCalendar: int changeYear>;

        $i5 = -2000 + $i4;

        $i6 = $i5 / 100;

        $i8 = $i7 - $i6;

        r0.<java.util.GregorianCalendar: int julianSkew> = $i8;

        r0.<java.util.GregorianCalendar: int currentYearSkew> = 10;

        r0.<java.util.GregorianCalendar: int lastYearSkew> = 0;

        $l9 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke r0.<java.util.GregorianCalendar: void setTimeInMillis(long)>($l9);

        return;
    }

    void <init>(boolean)
    {
        java.util.GregorianCalendar r0;
        boolean z0;
        java.util.TimeZone $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: java.util.GregorianCalendar;

        z0 := @parameter0: boolean;

        $r1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        specialinvoke r0.<java.util.Calendar: void <init>(java.util.TimeZone)>($r1);

        r0.<java.util.GregorianCalendar: long gregorianCutover> = -12219292800000L;

        r0.<java.util.GregorianCalendar: int changeYear> = 1582;

        $i0 = r0.<java.util.GregorianCalendar: int changeYear>;

        $i1 = -2000 + $i0;

        $i2 = $i1 / 400;

        $i3 = specialinvoke r0.<java.util.GregorianCalendar: int julianError()>();

        $i7 = $i2 + $i3;

        $i4 = r0.<java.util.GregorianCalendar: int changeYear>;

        $i5 = -2000 + $i4;

        $i6 = $i5 / 100;

        $i8 = $i7 - $i6;

        r0.<java.util.GregorianCalendar: int julianSkew> = $i8;

        r0.<java.util.GregorianCalendar: int currentYearSkew> = 10;

        r0.<java.util.GregorianCalendar: int lastYearSkew> = 0;

        virtualinvoke r0.<java.util.GregorianCalendar: void setFirstDayOfWeek(int)>(1);

        virtualinvoke r0.<java.util.GregorianCalendar: void setMinimalDaysInFirstWeek(int)>(1);

        return;
    }

    private int computeYearAndDay(long, long)
    {
        java.util.GregorianCalendar r0;
        long l0, l1, l3, $l5, $l7, $l11, $l13, $l14, $l15;
        int i2, i4, $i9, $i10, $i12, $i16;
        byte $b6, $b8;
        int[] $r1;

        r0 := @this: java.util.GregorianCalendar;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 = 1970;

        l3 = l0;

        $l5 = r0.<java.util.GregorianCalendar: long gregorianCutover>;

        $b6 = l1 cmp $l5;

        if $b6 >= 0 goto label1;

        $i16 = r0.<java.util.GregorianCalendar: int julianSkew>;

        $l15 = (long) $i16;

        l3 = l3 - $l15;

     label1:
        $l7 = l3 / 365L;

        i4 = (int) $l7;

        if i4 == 0 goto label2;

        i2 = i2 + i4;

        $l14 = (long) i2;

        $l13 = specialinvoke r0.<java.util.GregorianCalendar: long daysFromBaseYear(long)>($l14);

        l3 = l0 - $l13;

        goto label1;

     label2:
        $b8 = l3 cmp 0L;

        if $b8 >= 0 goto label3;

        i2 = i2 + -1;

        $i12 = specialinvoke r0.<java.util.GregorianCalendar: int daysInYear(int)>(i2);

        $l11 = (long) $i12;

        l3 = l3 + $l11;

     label3:
        $r1 = r0.<java.util.GregorianCalendar: int[] fields>;

        $r1[1] = i2;

        $i9 = (int) l3;

        $i10 = 1 + $i9;

        return $i10;
    }

    private long daysFromBaseYear(long)
    {
        java.util.GregorianCalendar r0;
        long l0, l1, $l4, $l6, $l7, $l8, $l9, $l10, $l11, $l12, $l13, $l14, $l15, $l16, $l17, $l18, $l19, $l20, $l21, $l23, $l24, $l25, $l26, $l27, $l28, $l32, $l35, $l38, $l39, $l41, $l42, $l43, $l45, $l46, $l47, $l49, $l50, $l51, $l52, $l53;
        byte $b2, $b5, $b29, $b36, $b40;
        int $i3, $i22, $i30, $i31, $i33, $i34, $i37, $i44, $i48;

        r0 := @this: java.util.GregorianCalendar;

        l0 := @parameter0: long;

        $b2 = l0 cmp 1970L;

        if $b2 < 0 goto label4;

        $l26 = l0 - 1970L;

        $l27 = 365L * $l26;

        $l25 = l0 - 1969L;

        $l28 = $l25 / 4L;

        l1 = $l27 + $l28;

        $i31 = r0.<java.util.GregorianCalendar: int changeYear>;

        $l32 = (long) $i31;

        $b29 = l0 cmp $l32;

        if $b29 <= 0 goto label1;

        $l45 = l0 - 1901L;

        $l50 = $l45 / 100L;

        $l52 = l0 - 1601L;

        $l51 = $l52 / 400L;

        $l49 = $l50 - $l51;

        $l53 = l1 - $l49;

        return $l53;

     label1:
        $i30 = r0.<java.util.GregorianCalendar: int changeYear>;

        $l35 = (long) $i30;

        $b36 = l0 cmp $l35;

        if $b36 != 0 goto label2;

        $i48 = r0.<java.util.GregorianCalendar: int currentYearSkew>;

        $l47 = (long) $i48;

        $l46 = l1 + $l47;

        return $l46;

     label2:
        $i33 = r0.<java.util.GregorianCalendar: int changeYear>;

        $i34 = -1 + $i33;

        $l39 = (long) $i34;

        $b40 = l0 cmp $l39;

        if $b40 != 0 goto label3;

        $i44 = r0.<java.util.GregorianCalendar: int lastYearSkew>;

        $l41 = (long) $i44;

        $l42 = l1 + $l41;

        return $l42;

     label3:
        $i37 = r0.<java.util.GregorianCalendar: int julianSkew>;

        $l38 = (long) $i37;

        $l43 = l1 + $l38;

        return $l43;

     label4:
        $i3 = r0.<java.util.GregorianCalendar: int changeYear>;

        $l4 = (long) $i3;

        $b5 = l0 cmp $l4;

        if $b5 > 0 goto label5;

        $l18 = l0 - 1970L;

        $l19 = 365L * $l18;

        $l17 = l0 - 1972L;

        $l20 = $l17 / 4L;

        $l24 = $l19 + $l20;

        $i22 = r0.<java.util.GregorianCalendar: int julianSkew>;

        $l21 = (long) $i22;

        $l23 = $l24 + $l21;

        return $l23;

     label5:
        $l6 = l0 - 1970L;

        $l9 = 365L * $l6;

        $l7 = l0 - 1972L;

        $l8 = $l7 / 4L;

        $l12 = $l9 + $l8;

        $l10 = l0 - 2000L;

        $l11 = $l10 / 100L;

        $l16 = $l12 - $l11;

        $l14 = l0 - 2000L;

        $l13 = $l14 / 400L;

        $l15 = $l16 + $l13;

        return $l15;
    }

    private int daysInMonth()
    {
        java.util.GregorianCalendar r0;
        int[] $r1, $r2;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: java.util.GregorianCalendar;

        $r1 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i0 = $r1[1];

        $z0 = virtualinvoke r0.<java.util.GregorianCalendar: boolean isLeapYear(int)>($i0);

        $r2 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i1 = $r2[2];

        $i2 = specialinvoke r0.<java.util.GregorianCalendar: int daysInMonth(boolean,int)>($z0, $i1);

        return $i2;
    }

    private int daysInMonth(boolean, int)
    {
        java.util.GregorianCalendar r0;
        boolean z0;
        int i0, $i3;
        byte[] $r1, $r2;
        byte $b1, $b2;

        r0 := @this: java.util.GregorianCalendar;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        if z0 == 0 goto label1;

        if i0 != 1 goto label1;

        $r2 = <java.util.GregorianCalendar: byte[] DaysInMonth>;

        $b2 = $r2[i0];

        $i3 = 1 + $b2;

        return $i3;

     label1:
        $r1 = <java.util.GregorianCalendar: byte[] DaysInMonth>;

        $b1 = $r1[i0];

        return $b1;
    }

    private int daysInYear(int)
    {
        java.util.GregorianCalendar r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0;

        r0 := @this: java.util.GregorianCalendar;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<java.util.GregorianCalendar: boolean isLeapYear(int)>(i0);

        if $z0 == 0 goto label4;

        i1 = 366;

     label1:
        $i2 = r0.<java.util.GregorianCalendar: int changeYear>;

        if i0 != $i2 goto label2;

        $i6 = r0.<java.util.GregorianCalendar: int currentYearSkew>;

        i1 = i1 - $i6;

     label2:
        $i3 = r0.<java.util.GregorianCalendar: int changeYear>;

        $i4 = -1 + $i3;

        if i0 != $i4 goto label3;

        $i5 = r0.<java.util.GregorianCalendar: int lastYearSkew>;

        i1 = i1 - $i5;

     label3:
        return i1;

     label4:
        i1 = 365;

        goto label1;
    }

    private int daysInYear(boolean, int)
    {
        java.util.GregorianCalendar r0;
        boolean z0;
        int i0, $i1, $i2, $i3;
        int[] $r1, $r2;

        r0 := @this: java.util.GregorianCalendar;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        if z0 == 0 goto label1;

        if i0 <= 1 goto label1;

        $r2 = <java.util.GregorianCalendar: int[] DaysInYear>;

        $i2 = $r2[i0];

        $i3 = 1 + $i2;

        return $i3;

     label1:
        $r1 = <java.util.GregorianCalendar: int[] DaysInYear>;

        $i1 = $r1[i0];

        return $i1;
    }

    private void fullFieldsCalc(long, int)
    {
        java.util.GregorianCalendar r0;
        long l0, l3, l23, $l24, $l25, $l27, $l28, $l33, $l51, $l53, $l56, $l60, $l63, $l66, $l67, $l68, $l75, $l76, $l80, $l84, $l88, $l94, $l95, $l102, $l103, $l104, $l108, $l109, $l110, $l111, $l115, $l117, $l122, $l123;
        int i1, i2, i4, i5, i6, i7, i8, i9, i10, i11, i13, i14, i15, i18, i26, $i29, $i30, $i31, $i32, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i52, $i54, $i55, $i57, $i58, $i59, $i61, $i62, $i64, $i65, $i69, $i70, $i71, $i72, $i73, $i74, $i77, $i78, $i79, $i81, $i82, $i83, $i85, $i86, $i87, $i89, $i90, $i91, $i92, $i93, $i96, $i97, $i98, $i99, $i100, $i105, $i106, $i107, $i112, $i113, $i114, $i116, $i119, $i121;
        boolean z0, $z1;
        byte b12, b16, b19, b20, b21, b22, $b101, $b118, $b120;
        int[] r1, r2, r3, $r4, $r5, $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38;
        short s17;
        java.util.TimeZone $r8;

        r0 := @this: java.util.GregorianCalendar;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $l27 = r0.<java.util.GregorianCalendar: long time>;

        $l24 = $l27 % 86400000L;

        i2 = (int) $l24;

        l3 = l0 / 86400000L;

        if i2 >= 0 goto label01;

        i2 = i2 + 86400000;

        l3 = l3 - 1L;

     label01:
        i4 = i2 + i1;

     label02:
        if i4 >= 0 goto label03;

        i4 = i4 + 86400000;

        l3 = l3 - 1L;

        goto label02;

     label03:
        if i4 < 86400000 goto label04;

        i4 = i4 - 86400000;

        l3 = l3 + 1L;

        goto label03;

     label04:
        $l25 = (long) i1;

        $l28 = l0 + $l25;

        i5 = specialinvoke r0.<java.util.GregorianCalendar: int computeYearAndDay(long,long)>(l3, $l28);

        $r4 = r0.<java.util.GregorianCalendar: int[] fields>;

        $r4[6] = i5;

        $r5 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i31 = $r5[1];

        $i30 = r0.<java.util.GregorianCalendar: int changeYear>;

        if $i31 != $i30 goto label05;

        $l123 = r0.<java.util.GregorianCalendar: long gregorianCutover>;

        $l117 = (long) i1;

        $l122 = l0 + $l117;

        $b120 = $l123 cmp $l122;

        if $b120 > 0 goto label05;

        $i121 = r0.<java.util.GregorianCalendar: int currentYearSkew>;

        i5 = i5 + $i121;

     label05:
        i6 = i5 / 32;

        $r6 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i29 = $r6[1];

        z0 = virtualinvoke r0.<java.util.GregorianCalendar: boolean isLeapYear(int)>($i29);

        $i34 = specialinvoke r0.<java.util.GregorianCalendar: int daysInYear(boolean,int)>(z0, i6);

        i7 = i5 - $i34;

        $i32 = specialinvoke r0.<java.util.GregorianCalendar: int daysInMonth(boolean,int)>(z0, i6);

        if i7 <= $i32 goto label06;

        $i116 = specialinvoke r0.<java.util.GregorianCalendar: int daysInMonth(boolean,int)>(z0, i6);

        i7 = i7 - $i116;

        i6 = i6 + 1;

     label06:
        $r7 = r0.<java.util.GregorianCalendar: int[] fields>;

        $l33 = l3 - 3L;

        $i35 = specialinvoke r0.<java.util.GregorianCalendar: int mod7(long)>($l33);

        $i37 = 1 + $i35;

        $r7[7] = $i37;

        $r9 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i36 = $r9[1];

        if $i36 > 0 goto label18;

        i8 = 0;

     label07:
        $r13 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i40 = $r13[1];

        if $i40 <= 0 goto label08;

        i8 = i8 - i1;

     label08:
        $r12 = r0.<java.util.GregorianCalendar: int[] fields>;

        $r12[16] = i8;

        if i8 == 0 goto label12;

        l23 = l3;

        i4 = i4 + i8;

        if i4 >= 0 goto label19;

        i4 = i4 + 86400000;

        l3 = l3 - 1L;

     label09:
        $b101 = l23 cmp l3;

        if $b101 == 0 goto label12;

        $l102 = (long) i1;

        $l94 = l0 - $l102;

        $l103 = (long) i8;

        $l95 = $l94 + $l103;

        i26 = specialinvoke r0.<java.util.GregorianCalendar: int computeYearAndDay(long,long)>(l3, $l95);

        $r33 = r0.<java.util.GregorianCalendar: int[] fields>;

        $r33[6] = i26;

        $r34 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i97 = $r34[1];

        $i96 = r0.<java.util.GregorianCalendar: int changeYear>;

        if $i97 != $i96 goto label10;

        $l108 = r0.<java.util.GregorianCalendar: long gregorianCutover>;

        $l104 = (long) i1;

        $l110 = l0 - $l104;

        $l111 = (long) i8;

        $l109 = $l110 + $l111;

        $b118 = $l108 cmp $l109;

        if $b118 > 0 goto label10;

        $i119 = r0.<java.util.GregorianCalendar: int currentYearSkew>;

        i26 = i26 + $i119;

     label10:
        i6 = i26 / 32;

        $r35 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i114 = $r35[1];

        z0 = virtualinvoke r0.<java.util.GregorianCalendar: boolean isLeapYear(int)>($i114);

        $i113 = specialinvoke r0.<java.util.GregorianCalendar: int daysInYear(boolean,int)>(z0, i6);

        i7 = i26 - $i113;

        $i112 = specialinvoke r0.<java.util.GregorianCalendar: int daysInMonth(boolean,int)>(z0, i6);

        if i7 <= $i112 goto label11;

        $i105 = specialinvoke r0.<java.util.GregorianCalendar: int daysInMonth(boolean,int)>(z0, i6);

        i7 = i7 - $i105;

        i6 = i6 + 1;

     label11:
        $r38 = r0.<java.util.GregorianCalendar: int[] fields>;

        $l115 = l3 - 3L;

        $i107 = specialinvoke r0.<java.util.GregorianCalendar: int mod7(long)>($l115);

        $i106 = 1 + $i107;

        $r38[7] = $i106;

     label12:
        $r16 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i43 = i4 % 1000;

        $r16[14] = $i43;

        i9 = i4 / 1000;

        $r17 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i44 = i9 % 60;

        $r17[13] = $i44;

        i10 = i9 / 60;

        $r14 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i41 = i10 % 60;

        $r14[12] = $i41;

        i11 = i10 / 60;

        $r15 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i42 = i11 % 24;

        $r15[11] = $i42;

        r1 = r0.<java.util.GregorianCalendar: int[] fields>;

        $r20 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i47 = $r20[11];

        if $i47 <= 11 goto label20;

        b12 = 1;

     label13:
        r1[9] = b12;

        $r18 = r0.<java.util.GregorianCalendar: int[] fields>;

        $r21 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i48 = $r21[11];

        $i45 = $i48 % 12;

        $r18[10] = $i45;

        $r19 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i46 = $r19[1];

        if $i46 > 0 goto label21;

        $r31 = r0.<java.util.GregorianCalendar: int[] fields>;

        $r31[0] = 0;

        $r37 = r0.<java.util.GregorianCalendar: int[] fields>;

        $r36 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i98 = $r36[1];

        $i99 = neg $i98;

        $i100 = 1 + $i99;

        $r37[1] = $i100;

     label14:
        $r23 = r0.<java.util.GregorianCalendar: int[] fields>;

        $r23[2] = i6;

        $r25 = r0.<java.util.GregorianCalendar: int[] fields>;

        $r25[5] = i7;

        $r22 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i52 = i7 - 1;

        $i50 = $i52 / 7;

        $i49 = 1 + $i50;

        $r22[8] = $i49;

        $r26 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i54 = i7 - 1;

        $l51 = (long) i7;

        $l56 = l3 - $l51;

        $l53 = $l56 - 2L;

        $i55 = virtualinvoke r0.<java.util.GregorianCalendar: int getFirstDayOfWeek()>();

        $i62 = -1 + $i55;

        $l63 = (long) $i62;

        $l60 = $l53 - $l63;

        $i61 = specialinvoke r0.<java.util.GregorianCalendar: int mod7(long)>($l60);

        $i58 = $i54 + $i61;

        $i59 = $i58 / 7;

        $i57 = 1 + $i59;

        $r26[4] = $i57;

        $l68 = l3 - 3L;

        $r27 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i69 = $r27[6];

        $i70 = -1 + $i69;

        $l67 = (long) $i70;

        $l66 = $l68 - $l67;

        $i64 = virtualinvoke r0.<java.util.GregorianCalendar: int getFirstDayOfWeek()>();

        $i65 = -1 + $i64;

        $l76 = (long) $i65;

        $l75 = $l66 - $l76;

        i14 = specialinvoke r0.<java.util.GregorianCalendar: int mod7(long)>($l75);

        $r28 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i74 = $r28[6];

        $i73 = -1 + $i74;

        $i72 = i14 + $i73;

        i13 = $i72 / 7;

        $i71 = 7 - i14;

        $i82 = virtualinvoke r0.<java.util.GregorianCalendar: int getMinimalDaysInFirstWeek()>();

        if $i71 < $i82 goto label22;

        b16 = 1;

     label15:
        i15 = i13 + b16;

        if i15 != 0 goto label25;

        r3 = r0.<java.util.GregorianCalendar: int[] fields>;

        $r32 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i93 = $r32[1];

        $i92 = -1 + $i93;

        $z1 = virtualinvoke r0.<java.util.GregorianCalendar: boolean isLeapYear(int)>($i92);

        if $z1 == 0 goto label23;

        b22 = 2;

     label16:
        $i83 = i14 - b22;

        $l84 = (long) $i83;

        $i86 = specialinvoke r0.<java.util.GregorianCalendar: int mod7(long)>($l84);

        $i85 = 7 - $i86;

        $i87 = virtualinvoke r0.<java.util.GregorianCalendar: int getMinimalDaysInFirstWeek()>();

        if $i85 < $i87 goto label24;

        b21 = 53;

     label17:
        r3[3] = b21;

        return;

     label18:
        $r8 = virtualinvoke r0.<java.util.GregorianCalendar: java.util.TimeZone getTimeZone()>();

        $r11 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i38 = $r11[1];

        $r10 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i39 = $r10[7];

        i8 = virtualinvoke $r8.<java.util.TimeZone: int getOffset(int,int,int,int,int,int)>(1, $i38, i6, i7, $i39, i4);

        goto label07;

     label19:
        if i4 < 86400000 goto label09;

        i4 = i4 - 86400000;

        l3 = l3 + 1L;

        goto label09;

     label20:
        b12 = 0;

        goto label13;

     label21:
        $r24 = r0.<java.util.GregorianCalendar: int[] fields>;

        $r24[0] = 1;

        goto label14;

     label22:
        b16 = 0;

        goto label15;

     label23:
        b22 = 1;

        goto label16;

     label24:
        b21 = 52;

        goto label17;

     label25:
        $r30 = r0.<java.util.GregorianCalendar: int[] fields>;

        i18 = $r30[6];

        if z0 == 0 goto label30;

        s17 = 367;

     label26:
        if z0 == 0 goto label31;

        b19 = 2;

     label27:
        $i81 = b19 + i14;

        $l80 = (long) $i81;

        $i79 = specialinvoke r0.<java.util.GregorianCalendar: int mod7(long)>($l80);

        $i78 = s17 - $i79;

        if i18 < $i78 goto label33;

        r2 = r0.<java.util.GregorianCalendar: int[] fields>;

        if z0 == 0 goto label32;

        b20 = 2;

     label28:
        $i77 = b20 + i14;

        $l88 = (long) $i77;

        $i90 = specialinvoke r0.<java.util.GregorianCalendar: int mod7(long)>($l88);

        $i89 = 7 - $i90;

        $i91 = virtualinvoke r0.<java.util.GregorianCalendar: int getMinimalDaysInFirstWeek()>();

        if $i89 < $i91 goto label29;

        i15 = 1;

     label29:
        r2[3] = i15;

        return;

     label30:
        s17 = 366;

        goto label26;

     label31:
        b19 = 1;

        goto label27;

     label32:
        b20 = 1;

        goto label28;

     label33:
        $r29 = r0.<java.util.GregorianCalendar: int[] fields>;

        $r29[3] = i15;

        return;
    }

    private int getOffset(long)
    {
        java.util.GregorianCalendar r0;
        long l0, l1, l4, l9, $l10, $l12, $l14, $l18, $l25, $l26, $l27, $l28, $l31, $l32;
        java.util.TimeZone r1;
        int i2, i3, i5, i6, i7, i8, $i15, $i16, $i17, $i19, $i20, $i21, $i22, $i23, $i24, $i30, $i33;
        boolean z0, z1, $z2;
        byte $b11, $b13, $b29;

        r0 := @this: java.util.GregorianCalendar;

        l0 := @parameter0: long;

        r1 = virtualinvoke r0.<java.util.GregorianCalendar: java.util.TimeZone getTimeZone()>();

        l1 = l0 / 86400000L;

        $l10 = l0 % 86400000L;

        i2 = (int) $l10;

        if i2 >= 0 goto label1;

        i2 = i2 + 86400000;

        l1 = l1 - 1L;

     label1:
        i3 = 1970;

        l4 = l1;

        $l12 = r0.<java.util.GregorianCalendar: long gregorianCutover>;

        $b11 = l0 cmp $l12;

        if $b11 >= 0 goto label2;

        $i33 = r0.<java.util.GregorianCalendar: int julianSkew>;

        $l31 = (long) $i33;

        l4 = l4 - $l31;

     label2:
        $l14 = l4 / 365L;

        i5 = (int) $l14;

        if i5 == 0 goto label3;

        i3 = i3 + i5;

        $l28 = (long) i3;

        $l32 = specialinvoke r0.<java.util.GregorianCalendar: long daysFromBaseYear(long)>($l28);

        l4 = l1 - $l32;

        goto label2;

     label3:
        $b13 = l4 cmp 0L;

        if $b13 >= 0 goto label5;

        i3 = i3 + -1;

        l9 = 365L + l4;

        $z2 = virtualinvoke r0.<java.util.GregorianCalendar: boolean isLeapYear(int)>(i3);

        if $z2 == 0 goto label6;

        z1 = 1;

     label4:
        $l26 = (long) z1;

        l4 = l9 + $l26;

        $i24 = r0.<java.util.GregorianCalendar: int changeYear>;

        if i3 != $i24 goto label5;

        $l25 = r0.<java.util.GregorianCalendar: long gregorianCutover>;

        $b29 = l0 cmp $l25;

        if $b29 >= 0 goto label5;

        $i30 = specialinvoke r0.<java.util.GregorianCalendar: int julianError()>();

        $l27 = (long) $i30;

        l4 = l4 - $l27;

     label5:
        if i3 > 0 goto label7;

        $i21 = virtualinvoke r1.<java.util.TimeZone: int getRawOffset()>();

        return $i21;

     label6:
        z1 = 0;

        goto label4;

     label7:
        $i15 = (int) l4;

        i6 = 1 + $i15;

        i7 = i6 / 32;

        z0 = virtualinvoke r0.<java.util.GregorianCalendar: boolean isLeapYear(int)>(i3);

        $i17 = specialinvoke r0.<java.util.GregorianCalendar: int daysInYear(boolean,int)>(z0, i7);

        i8 = i6 - $i17;

        $i16 = specialinvoke r0.<java.util.GregorianCalendar: int daysInMonth(boolean,int)>(z0, i7);

        if i8 <= $i16 goto label8;

        $i20 = specialinvoke r0.<java.util.GregorianCalendar: int daysInMonth(boolean,int)>(z0, i7);

        i8 = i8 - $i20;

        i7 = i7 + 1;

     label8:
        $l18 = l1 - 3L;

        $i19 = specialinvoke r0.<java.util.GregorianCalendar: int mod7(long)>($l18);

        $i22 = 1 + $i19;

        $i23 = virtualinvoke r1.<java.util.TimeZone: int getOffset(int,int,int,int,int,int)>(1, i3, i7, i8, $i22, i2);

        return $i23;
    }

    private int julianError()
    {
        java.util.GregorianCalendar r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: java.util.GregorianCalendar;

        $i0 = r0.<java.util.GregorianCalendar: int changeYear>;

        $i3 = $i0 / 100;

        $i1 = r0.<java.util.GregorianCalendar: int changeYear>;

        $i2 = $i1 / 400;

        $i4 = $i3 - $i2;

        $i5 = -2 + $i4;

        return $i5;
    }

    private int mod(int, int)
    {
        java.util.GregorianCalendar r0;
        int i0, i1, i2;

        r0 := @this: java.util.GregorianCalendar;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = i0 % i1;

        if i0 >= 0 goto label1;

        if i2 >= 0 goto label1;

        i2 = i2 + i1;

     label1:
        return i2;
    }

    private int mod7(long)
    {
        java.util.GregorianCalendar r0;
        long l0, $l2;
        int i1;
        byte $b3;

        r0 := @this: java.util.GregorianCalendar;

        l0 := @parameter0: long;

        $l2 = l0 % 7L;

        i1 = (int) $l2;

        $b3 = l0 cmp 0L;

        if $b3 >= 0 goto label1;

        if i1 >= 0 goto label1;

        i1 = i1 + 7;

     label1:
        return i1;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.util.GregorianCalendar r0;
        java.io.ObjectInputStream r1;
        java.util.Date $r2;
        long $l0;

        r0 := @this: java.util.GregorianCalendar;

        r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        $r2 = new java.util.Date;

        $l0 = r0.<java.util.GregorianCalendar: long gregorianCutover>;

        specialinvoke $r2.<java.util.Date: void <init>(long)>($l0);

        virtualinvoke r0.<java.util.GregorianCalendar: void setGregorianChange(java.util.Date)>($r2);

        return;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.util.GregorianCalendar r0;
        java.io.ObjectOutputStream r1;

        r0 := @this: java.util.GregorianCalendar;

        r1 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        return;
    }

    public void add(int, int)
    {
        java.util.GregorianCalendar r0;
        int i0, i1, i2, i3, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i38, $i54;
        long l4, l5, $l19, $l22, $l23, $l24, $l25, $l26, $l27, $l28, $l29, $l30, $l31, $l32, $l33, $l34, $l35, $l36, $l37, $l39, $l40, $l41, $l42, $l43, $l44, $l45, $l46, $l47, $l48, $l49, $l50, $l51, $l52, $l53;
        java.lang.IllegalArgumentException $r1;
        int[] $r2, $r3, $r4, $r5, $r6, $r8;
        boolean $z0;
        java.util.TimeZone $r7;
        byte $b21;

        r0 := @this: java.util.GregorianCalendar;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 != 0 goto label02;

     label01:
        return;

     label02:
        if i0 < 0 goto label03;

        if i0 < 15 goto label04;

     label03:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r1;

     label04:
        if i0 != 0 goto label07;

        virtualinvoke r0.<java.util.GregorianCalendar: void complete()>();

        $r8 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i54 = $r8[0];

        if $i54 != 1 goto label06;

        if i1 >= 0 goto label01;

        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(0, 0);

     label05:
        virtualinvoke r0.<java.util.GregorianCalendar: void complete()>();

        return;

     label06:
        if i1 <= 0 goto label01;

        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(0, 1);

        goto label05;

     label07:
        if i0 == 1 goto label08;

        if i0 != 2 goto label13;

     label08:
        virtualinvoke r0.<java.util.GregorianCalendar: void complete()>();

        if i0 != 2 goto label10;

        $r6 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i16 = $r6[2];

        i3 = i1 + $i16;

        if i3 >= 0 goto label12;

        $i18 = i3 - 11;

        i1 = $i18 / 12;

        $i17 = i3 % 12;

        i3 = 12 + $i17;

     label09:
        $i15 = i3 % 12;

        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(2, $i15);

     label10:
        $r2 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i10 = $r2[1];

        $i11 = i1 + $i10;

        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(1, $i11);

        $r3 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i12 = $r3[1];

        $z0 = virtualinvoke r0.<java.util.GregorianCalendar: boolean isLeapYear(int)>($i12);

        $r4 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i13 = $r4[2];

        i2 = specialinvoke r0.<java.util.GregorianCalendar: int daysInMonth(boolean,int)>($z0, $i13);

        $r5 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i14 = $r5[5];

        if $i14 <= i2 goto label11;

        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(5, i2);

     label11:
        virtualinvoke r0.<java.util.GregorianCalendar: void complete()>();

        return;

     label12:
        i1 = i3 / 12;

        goto label09;

     label13:
        l4 = 0L;

        virtualinvoke r0.<java.util.GregorianCalendar: long getTimeInMillis()>();

        tableswitch(i0)
        {
            case 3: goto label21;
            case 4: goto label21;
            case 5: goto label20;
            case 6: goto label20;
            case 7: goto label20;
            case 8: goto label21;
            case 9: goto label19;
            case 10: goto label18;
            case 11: goto label18;
            case 12: goto label17;
            case 13: goto label16;
            case 14: goto label15;
            default: goto label14;
        };

     label14:
        $b21 = l4 cmp 0L;

        if $b21 != 0 goto label22;

        r0.<java.util.GregorianCalendar: boolean areFieldsSet> = 0;

        virtualinvoke r0.<java.util.GregorianCalendar: void complete()>();

        return;

     label15:
        $l41 = r0.<java.util.GregorianCalendar: long time>;

        $l42 = (long) i1;

        $l40 = $l41 + $l42;

        r0.<java.util.GregorianCalendar: long time> = $l40;

        goto label14;

     label16:
        $l45 = r0.<java.util.GregorianCalendar: long time>;

        $l39 = (long) i1;

        $l46 = 1000L * $l39;

        $l44 = $l45 + $l46;

        r0.<java.util.GregorianCalendar: long time> = $l44;

        goto label14;

     label17:
        $l51 = r0.<java.util.GregorianCalendar: long time>;

        $l43 = (long) i1;

        $l50 = 60000L * $l43;

        $l52 = $l51 + $l50;

        r0.<java.util.GregorianCalendar: long time> = $l52;

        goto label14;

     label18:
        $l48 = r0.<java.util.GregorianCalendar: long time>;

        $l53 = (long) i1;

        $l47 = 3600000L * $l53;

        $l49 = $l48 + $l47;

        r0.<java.util.GregorianCalendar: long time> = $l49;

        goto label14;

     label19:
        l4 = 43200000L;

        goto label14;

     label20:
        l4 = 86400000L;

        goto label14;

     label21:
        l4 = 604800000L;

        goto label14;

     label22:
        $l19 = (long) i1;

        l5 = l4 * $l19;

        $r7 = virtualinvoke r0.<java.util.GregorianCalendar: java.util.TimeZone getTimeZone()>();

        i6 = virtualinvoke $r7.<java.util.TimeZone: int getRawOffset()>();

        $l22 = r0.<java.util.GregorianCalendar: long time>;

        $l24 = (long) i6;

        $l23 = $l22 + $l24;

        i7 = specialinvoke r0.<java.util.GregorianCalendar: int getOffset(long)>($l23);

        $l25 = r0.<java.util.GregorianCalendar: long time>;

        $l27 = (long) i6;

        $l26 = $l25 + $l27;

        $l30 = l5 + $l26;

        i8 = specialinvoke r0.<java.util.GregorianCalendar: int getOffset(long)>($l30);

        i9 = i7 - i8;

        $l29 = r0.<java.util.GregorianCalendar: long time>;

        $l28 = (long) i6;

        $l34 = $l29 + $l28;

        $l32 = l5 + $l34;

        $l33 = (long) i9;

        $l31 = $l32 + $l33;

        $i38 = specialinvoke r0.<java.util.GregorianCalendar: int getOffset(long)>($l31);

        if $i38 != i8 goto label23;

        $l35 = (long) i9;

        l5 = l5 + $l35;

     label23:
        $l37 = r0.<java.util.GregorianCalendar: long time>;

        $l36 = l5 + $l37;

        r0.<java.util.GregorianCalendar: long time> = $l36;

        r0.<java.util.GregorianCalendar: boolean areFieldsSet> = 0;

        virtualinvoke r0.<java.util.GregorianCalendar: void complete()>();

        return;
    }

    protected void computeFields()
    {
        java.util.GregorianCalendar r0;
        java.util.TimeZone r1;
        int i0, i1, i2;
        java.util.Date $r2;
        long $l3, $l4;
        boolean $z0;
        int[] $r3, $r4;
        boolean[] $r5;

        r0 := @this: java.util.GregorianCalendar;

        r1 = virtualinvoke r0.<java.util.GregorianCalendar: java.util.TimeZone getTimeZone()>();

        $r2 = new java.util.Date;

        $l3 = r0.<java.util.GregorianCalendar: long time>;

        specialinvoke $r2.<java.util.Date: void <init>(long)>($l3);

        $z0 = virtualinvoke r1.<java.util.TimeZone: boolean inDaylightTime(java.util.Date)>($r2);

        if $z0 == 0 goto label3;

        i0 = virtualinvoke r1.<java.util.TimeZone: int getDSTSavings()>();

     label1:
        i1 = virtualinvoke r1.<java.util.TimeZone: int getRawOffset()>();

        $r3 = r0.<java.util.GregorianCalendar: int[] fields>;

        $r3[16] = i0;

        $r4 = r0.<java.util.GregorianCalendar: int[] fields>;

        $r4[15] = i1;

        $l4 = r0.<java.util.GregorianCalendar: long time>;

        specialinvoke r0.<java.util.GregorianCalendar: void fullFieldsCalc(long,int)>($l4, i1);

        i2 = 0;

     label2:
        if i2 >= 17 goto label4;

        $r5 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $r5[i2] = 1;

        i2 = i2 + 1;

        goto label2;

     label3:
        i0 = 0;

        goto label1;

     label4:
        return;
    }

    protected void computeTime()
    {
        java.util.GregorianCalendar r0;
        long l0, l1, l3, l4, l6, l7, $l17, $l19, $l21, $l22, $l24, $l26, $l27, $l29, $l31, $l32, $l33, $l35, $l38, $l40, $l42, $l43, $l47, $l50, $l55, $l57, $l58, $l63, $l64, $l65, $l72, $l74, $l75, $l77, $l78, $l79, $l82, $l83, $l86, $l87, $l89, $l90, $l91, $l96, $l98, $l100, $l103, $l108, $l109, $l110, $l112, $l114, $l118, $l120, $l121, $l123, $l127, $l129, $l136, $l143, $l149, $l150, $l152, $l153;
        int i2, i5, i9, i10, i11, i12, i13, i14, i15, i16, $i18, $i20, $i23, $i25, $i28, $i34, $i37, $i39, $i41, $i44, $i45, $i46, $i48, $i49, $i51, $i52, $i53, $i54, $i56, $i59, $i60, $i61, $i62, $i66, $i67, $i68, $i69, $i70, $i71, $i73, $i76, $i80, $i81, $i84, $i85, $i88, $i92, $i93, $i94, $i95, $i97, $i99, $i101, $i102, $i104, $i105, $i106, $i107, $i111, $i113, $i115, $i116, $i117, $i119, $i122, $i124, $i125, $i126, $i128, $i130, $i131, $i132, $i133, $i134, $i135, $i137, $i138, $i139, $i140, $i141, $i142, $i144, $i145, $i146, $i147, $i148, $i151, $i154, $i155, $i156, $i157, $i158, $i159, $i160, $i161, $i162, $i163, $i164, $i165, $i166, $i167, $i168, $i169, $i170, $i171, $i172, $i173, $i174, $i175, $i176, $i177, $i178, $i179, $i180, $i181, $i182, $i183, $i184, $i185, $i186, $i187, $i188;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42, $z43, $z44, $z45, $z46, $z47, $z48, $z49;
        byte b8, $b30, $b36;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r19, $r21, $r22, $r24, $r25, $r26, $r28, $r29, $r34, $r40, $r41, $r42, $r43, $r44, $r45, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r67, $r76, $r77, $r78, $r79, $r80;
        java.util.TimeZone $r13;
        int[] $r14, $r15, $r17, $r18, $r20, $r23, $r27, $r30, $r31, $r32, $r33, $r36, $r37, $r38, $r39, $r46, $r47, $r49, $r50, $r51, $r62, $r63, $r64, $r65, $r66, $r68, $r69, $r71, $r72, $r74, $r75, $r81, $r83, $r84, $r85, $r87, $r88, $r89, $r91, $r92, $r95, $r96, $r98, $r100, $r102, $r103, $r104, $r105, $r107, $r108, $r109, $r112, $r114, $r115;
        java.lang.IllegalArgumentException $r16, $r35, $r48, $r70, $r73, $r82, $r86, $r90, $r93, $r94, $r97, $r99, $r101, $r106, $r110, $r111, $r113;

        r0 := @this: java.util.GregorianCalendar;

        $z5 = virtualinvoke r0.<java.util.GregorianCalendar: boolean isLenient()>();

        if $z5 != 0 goto label27;

        $r55 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z36 = $r55[11];

        if $z36 == 0 goto label02;

        $r104 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i181 = $r104[11];

        if $i181 < 0 goto label01;

        $r105 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i180 = $r105[11];

        if $i180 <= 23 goto label04;

     label01:
        $r106 = new java.lang.IllegalArgumentException;

        specialinvoke $r106.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r106;

     label02:
        $r54 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z38 = $r54[10];

        if $z38 == 0 goto label04;

        $r115 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i186 = $r115[10];

        if $i186 < 0 goto label03;

        $r112 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i187 = $r112[10];

        if $i187 <= 11 goto label04;

     label03:
        $r111 = new java.lang.IllegalArgumentException;

        specialinvoke $r111.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r111;

     label04:
        $r57 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z37 = $r57[12];

        if $z37 == 0 goto label06;

        $r108 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i183 = $r108[12];

        if $i183 < 0 goto label05;

        $r114 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i188 = $r114[12];

        if $i188 <= 59 goto label06;

     label05:
        $r113 = new java.lang.IllegalArgumentException;

        specialinvoke $r113.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r113;

     label06:
        $r56 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z40 = $r56[13];

        if $z40 == 0 goto label08;

        $r109 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i185 = $r109[13];

        if $i185 < 0 goto label07;

        $r107 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i182 = $r107[13];

        if $i182 <= 59 goto label08;

     label07:
        $r110 = new java.lang.IllegalArgumentException;

        specialinvoke $r110.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r110;

     label08:
        $r59 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z39 = $r59[14];

        if $z39 == 0 goto label10;

        $r91 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i171 = $r91[14];

        if $i171 < 0 goto label09;

        $r89 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i184 = $r89[14];

        if $i184 <= 999 goto label10;

     label09:
        $r90 = new java.lang.IllegalArgumentException;

        specialinvoke $r90.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r90;

     label10:
        $r58 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z42 = $r58[3];

        if $z42 == 0 goto label12;

        $r84 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i173 = $r84[3];

        if $i173 < 1 goto label11;

        $r92 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i172 = $r92[3];

        if $i172 <= 53 goto label12;

     label11:
        $r93 = new java.lang.IllegalArgumentException;

        specialinvoke $r93.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r93;

     label12:
        $r61 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z41 = $r61[7];

        if $z41 == 0 goto label14;

        $r87 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i169 = $r87[7];

        if $i169 < 1 goto label13;

        $r85 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i168 = $r85[7];

        if $i168 <= 7 goto label14;

     label13:
        $r86 = new java.lang.IllegalArgumentException;

        specialinvoke $r86.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r86;

     label14:
        $r60 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z44 = $r60[8];

        if $z44 == 0 goto label16;

        $r100 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i177 = $r100[8];

        if $i177 < 1 goto label15;

        $r88 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i170 = $r88[8];

        if $i170 <= 6 goto label16;

     label15:
        $r99 = new java.lang.IllegalArgumentException;

        specialinvoke $r99.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r99;

     label16:
        $r76 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z45 = $r76[4];

        if $z45 == 0 goto label18;

        $r103 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i179 = $r103[4];

        if $i179 < 1 goto label17;

        $r102 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i178 = $r102[4];

        if $i178 <= 6 goto label18;

     label17:
        $r101 = new java.lang.IllegalArgumentException;

        specialinvoke $r101.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r101;

     label18:
        $r77 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z46 = $r77[9];

        if $z46 == 0 goto label19;

        $r96 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i175 = $r96[9];

        if $i175 == 0 goto label19;

        $r95 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i174 = $r95[9];

        if $i174 == 1 goto label19;

        $r94 = new java.lang.IllegalArgumentException;

        specialinvoke $r94.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r94;

     label19:
        $r78 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z47 = $r78[10];

        if $z47 == 0 goto label21;

        $r75 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i165 = $r75[10];

        if $i165 < 0 goto label20;

        $r98 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i176 = $r98[10];

        if $i176 <= 11 goto label21;

     label20:
        $r97 = new java.lang.IllegalArgumentException;

        specialinvoke $r97.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r97;

     label21:
        $r79 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z48 = $r79[1];

        if $z48 == 0 goto label25;

        $r67 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z43 = $r67[0];

        if $z43 == 0 goto label23;

        $r71 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i162 = $r71[0];

        if $i162 != 0 goto label23;

        $r72 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i163 = $r72[1];

        if $i163 < 1 goto label22;

        $r74 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i164 = $r74[1];

        if $i164 <= 292269054 goto label23;

     label22:
        $r73 = new java.lang.IllegalArgumentException;

        specialinvoke $r73.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r73;

     label23:
        $r68 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i160 = $r68[1];

        if $i160 < 1 goto label24;

        $r69 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i161 = $r69[1];

        if $i161 <= 292278994 goto label25;

     label24:
        $r70 = new java.lang.IllegalArgumentException;

        specialinvoke $r70.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r70;

     label25:
        $r80 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z49 = $r80[2];

        if $z49 == 0 goto label27;

        $r81 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i166 = $r81[2];

        if $i166 < 0 goto label26;

        $r83 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i167 = $r83[2];

        if $i167 <= 11 goto label27;

     label26:
        $r82 = new java.lang.IllegalArgumentException;

        specialinvoke $r82.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r82;

     label27:
        l0 = 0L;

        $r1 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z6 = $r1[11];

        if $z6 == 0 goto label33;

        $i157 = r0.<java.util.GregorianCalendar: int lastTimeFieldSet>;

        if $i157 == 10 goto label33;

        $r66 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i148 = $r66[11];

        l0 = (long) $i148;

     label28:
        l1 = l0 * 3600000L;

        $r2 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z7 = $r2[12];

        if $z7 == 0 goto label29;

        $r63 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i154 = $r63[12];

        $l152 = (long) $i154;

        $l153 = 60000L * $l152;

        l1 = l1 + $l153;

     label29:
        $r5 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z10 = $r5[13];

        if $z10 == 0 goto label30;

        $r62 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i151 = $r62[13];

        $l149 = (long) $i151;

        $l150 = 1000L * $l149;

        l1 = l1 + $l150;

     label30:
        $r4 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z9 = $r4[14];

        if $z9 == 0 goto label31;

        $r47 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i142 = $r47[14];

        $l143 = (long) $i142;

        l1 = l1 + $l143;

     label31:
        $r7 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z12 = $r7[1];

        if $z12 == 0 goto label34;

        $r46 = r0.<java.util.GregorianCalendar: int[] fields>;

        i2 = $r46[1];

     label32:
        $r6 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z11 = $r6[0];

        if $z11 == 0 goto label36;

        $r51 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i146 = $r51[0];

        if $i146 == 0 goto label35;

        $r49 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i144 = $r49[0];

        if $i144 == 1 goto label35;

        $r48 = new java.lang.IllegalArgumentException;

        specialinvoke $r48.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r48;

     label33:
        $r3 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z8 = $r3[10];

        if $z8 == 0 goto label28;

        $r65 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i156 = $r65[9];

        $i158 = 12 * $i156;

        $r64 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i155 = $r64[10];

        $i159 = $i158 + $i155;

        l0 = (long) $i159;

        goto label28;

     label34:
        i2 = 1970;

        goto label32;

     label35:
        $r50 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i145 = $r50[0];

        if $i145 != 0 goto label36;

        i2 = 1 - i2;

     label36:
        $r9 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z14 = $r9[4];

        if $z14 != 0 goto label37;

        $r52 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z34 = $r52[8];

        if $z34 == 0 goto label48;

     label37:
        z0 = 1;

     label38:
        $r8 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z13 = $r8[5];

        if $z13 != 0 goto label39;

        $r53 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z35 = $r53[2];

        if $z35 != 0 goto label39;

        if z0 == 0 goto label49;

     label39:
        $i18 = r0.<java.util.GregorianCalendar: int lastDateFieldSet>;

        if $i18 == 6 goto label49;

        z1 = 1;

     label40:
        if z1 == 0 goto label42;

        $i139 = r0.<java.util.GregorianCalendar: int lastDateFieldSet>;

        if $i139 == 7 goto label41;

        $i147 = r0.<java.util.GregorianCalendar: int lastDateFieldSet>;

        if $i147 != 3 goto label42;

     label41:
        $r45 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z33 = $r45[3];

        if $z33 == 0 goto label51;

        $r41 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z29 = $r41[7];

        if $z29 == 0 goto label51;

        $i138 = r0.<java.util.GregorianCalendar: int lastDateFieldSet>;

        if $i138 == 3 goto label50;

        if z0 == 0 goto label50;

        $r40 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z28 = $r40[7];

        if $z28 == 0 goto label50;

        z1 = 1;

     label42:
        if z1 == 0 goto label65;

        $r27 = r0.<java.util.GregorianCalendar: int[] fields>;

        i13 = $r27[2];

        $i71 = i13 / 12;

        i2 = i2 + $i71;

        i12 = i13 % 12;

        if i12 >= 0 goto label43;

        i2 = i2 + -1;

        i12 = i12 + 12;

     label43:
        z4 = virtualinvoke r0.<java.util.GregorianCalendar: boolean isLeapYear(int)>(i2);

        $l72 = (long) i2;

        $l74 = specialinvoke r0.<java.util.GregorianCalendar: long daysFromBaseYear(long)>($l72);

        $i73 = specialinvoke r0.<java.util.GregorianCalendar: int daysInYear(boolean,int)>(z4, i12);

        $l75 = (long) $i73;

        l3 = $l74 + $l75;

        $r28 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        z3 = $r28[5];

        if z3 == 0 goto label46;

        $i131 = r0.<java.util.GregorianCalendar: int lastDateFieldSet>;

        if $i131 == 7 goto label44;

        $i141 = r0.<java.util.GregorianCalendar: int lastDateFieldSet>;

        if $i141 == 4 goto label44;

        $i140 = r0.<java.util.GregorianCalendar: int lastDateFieldSet>;

        if $i140 != 8 goto label46;

     label44:
        $r34 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z26 = $r34[7];

        if $z26 == 0 goto label45;

        if z0 != 0 goto label54;

     label45:
        z3 = 1;

     label46:
        if z3 == 0 goto label59;

        $z27 = virtualinvoke r0.<java.util.GregorianCalendar: boolean isLenient()>();

        if $z27 != 0 goto label55;

        $r37 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i132 = $r37[5];

        if $i132 < 1 goto label47;

        $r36 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i133 = $r36[5];

        $i130 = specialinvoke r0.<java.util.GregorianCalendar: int daysInMonth(boolean,int)>(z4, i12);

        if $i133 <= $i130 goto label55;

     label47:
        $r35 = new java.lang.IllegalArgumentException;

        specialinvoke $r35.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r35;

     label48:
        z0 = 0;

        goto label38;

     label49:
        z1 = 0;

        goto label40;

     label50:
        z1 = 0;

        goto label42;

     label51:
        $r44 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z32 = $r44[6];

        if $z32 == 0 goto label42;

        $r43 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z31 = $r43[5];

        if $z31 == 0 goto label53;

        $r42 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z30 = $r42[2];

        if $z30 == 0 goto label53;

        z1 = 1;

     label52:
        goto label42;

     label53:
        z1 = 0;

        goto label52;

     label54:
        z3 = 0;

        goto label46;

     label55:
        $r39 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i134 = $r39[5];

        $i135 = -1 + $i134;

        $l136 = (long) $i135;

        l3 = l3 + $l136;

     label56:
        r0.<java.util.GregorianCalendar: int lastDateFieldSet> = 0;

        $l21 = 86400000L * l3;

        l4 = l1 + $l21;

        i5 = r0.<java.util.GregorianCalendar: int changeYear>;

        if i2 != i5 goto label57;

        $l31 = r0.<java.util.GregorianCalendar: long gregorianCutover>;

        $i25 = specialinvoke r0.<java.util.GregorianCalendar: int julianError()>();

        $l26 = (long) $i25;

        $l27 = 86400000L * $l26;

        $l35 = $l31 + $l27;

        $b36 = l4 cmp $l35;

        if $b36 < 0 goto label57;

        $i37 = specialinvoke r0.<java.util.GregorianCalendar: int julianError()>();

        $l32 = (long) $i37;

        $l33 = 86400000L * $l32;

        l4 = l4 - $l33;

     label57:
        $i20 = specialinvoke r0.<java.util.GregorianCalendar: int getOffset(long)>(l4);

        $l19 = (long) $i20;

        $l24 = l4 - $l19;

        $r13 = virtualinvoke r0.<java.util.GregorianCalendar: java.util.TimeZone getTimeZone()>();

        $i23 = virtualinvoke $r13.<java.util.TimeZone: int getRawOffset()>();

        $l22 = (long) $i23;

        l6 = $l24 + $l22;

        $i28 = specialinvoke r0.<java.util.GregorianCalendar: int getOffset(long)>(l6);

        $l29 = (long) $i28;

        l7 = l4 - $l29;

        r0.<java.util.GregorianCalendar: long time> = l7;

        $b30 = l6 cmp l7;

        if $b30 == 0 goto label58;

        virtualinvoke r0.<java.util.GregorianCalendar: void computeFields()>();

        r0.<java.util.GregorianCalendar: boolean areFieldsSet> = 1;

     label58:
        return;

     label59:
        $r24 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z22 = $r24[7];

        if $z22 == 0 goto label61;

        $r38 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i137 = $r38[7];

        i15 = -1 + $i137;

     label60:
        $r25 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z23 = $r25[4];

        if $z23 == 0 goto label62;

        $i107 = r0.<java.util.GregorianCalendar: int lastDateFieldSet>;

        if $i107 == 8 goto label62;

        $l108 = l3 - 3L;

        $i106 = virtualinvoke r0.<java.util.GregorianCalendar: int getFirstDayOfWeek()>();

        $i128 = -1 + $i106;

        $l127 = (long) $i128;

        $l129 = $l108 - $l127;

        i16 = specialinvoke r0.<java.util.GregorianCalendar: int mod7(long)>($l129);

        $r33 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i124 = $r33[4];

        $i126 = -1 + $i124;

        $i122 = 7 * $i126;

        $i125 = i16 + i15;

        $l120 = (long) $i125;

        $l121 = l3 - 3L;

        $l123 = $l120 - $l121;

        $i117 = specialinvoke r0.<java.util.GregorianCalendar: int mod7(long)>($l123);

        $i116 = $i122 + $i117;

        $i119 = $i116 - i16;

        $l118 = (long) $i119;

        l3 = l3 + $l118;

        goto label56;

     label61:
        $i70 = virtualinvoke r0.<java.util.GregorianCalendar: int getFirstDayOfWeek()>();

        i15 = -1 + $i70;

        goto label60;

     label62:
        $r26 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z24 = $r26[8];

        if $z24 == 0 goto label64;

        $r31 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i95 = $r31[8];

        if $i95 < 0 goto label63;

        $l110 = (long) i15;

        $l109 = l3 - 3L;

        $l114 = $l110 - $l109;

        $i115 = specialinvoke r0.<java.util.GregorianCalendar: int mod7(long)>($l114);

        $r32 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i113 = $r32[8];

        $i104 = -1 + $i113;

        $i105 = 7 * $i104;

        $i102 = $i115 + $i105;

        $l103 = (long) $i102;

        l3 = l3 + $l103;

        goto label56;

     label63:
        $i101 = specialinvoke r0.<java.util.GregorianCalendar: int daysInMonth(boolean,int)>(z4, i12);

        $l100 = (long) i15;

        $i99 = specialinvoke r0.<java.util.GregorianCalendar: int daysInMonth(boolean,int)>(z4, i12);

        $l98 = (long) $i99;

        $l91 = l3 + $l98;

        $l90 = $l91 - 3L;

        $l89 = $l100 - $l90;

        $i88 = specialinvoke r0.<java.util.GregorianCalendar: int mod7(long)>($l89);

        $i92 = $i101 + $i88;

        $r30 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i94 = $r30[8];

        $i93 = 7 * $i94;

        $i111 = $i92 + $i93;

        $l112 = (long) $i111;

        l3 = l3 + $l112;

        goto label56;

     label64:
        $r29 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z25 = $r29[7];

        if $z25 == 0 goto label56;

        $l83 = l3 - 3L;

        $i84 = virtualinvoke r0.<java.util.GregorianCalendar: int getFirstDayOfWeek()>();

        $i85 = -1 + $i84;

        $l86 = (long) $i85;

        $l87 = $l83 - $l86;

        i14 = specialinvoke r0.<java.util.GregorianCalendar: int mod7(long)>($l87);

        $i76 = i14 + i15;

        $l78 = (long) $i76;

        $l77 = l3 - 3L;

        $l79 = $l78 - $l77;

        $i80 = specialinvoke r0.<java.util.GregorianCalendar: int mod7(long)>($l79);

        $i81 = $i80 - i14;

        $l82 = (long) $i81;

        $i97 = specialinvoke r0.<java.util.GregorianCalendar: int mod7(long)>($l82);

        $l96 = (long) $i97;

        l3 = l3 + $l96;

        goto label56;

     label65:
        $r10 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z15 = $r10[3];

        if $z15 == 0 goto label69;

        $i66 = r0.<java.util.GregorianCalendar: int lastDateFieldSet>;

        if $i66 == 6 goto label69;

        z2 = 1;

     label66:
        if z2 == 0 goto label67;

        $r22 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z21 = $r22[6];

        if $z21 == 0 goto label67;

        $r21 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        z2 = $r21[7];

     label67:
        $l17 = (long) i2;

        l3 = specialinvoke r0.<java.util.GregorianCalendar: long daysFromBaseYear(long)>($l17);

        if z2 == 0 goto label71;

        $r19 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z20 = $r19[7];

        if $z20 == 0 goto label70;

        $r23 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i67 = $r23[7];

        i11 = -1 + $i67;

     label68:
        $l50 = l3 - 3L;

        $i48 = virtualinvoke r0.<java.util.GregorianCalendar: int getFirstDayOfWeek()>();

        $i56 = -1 + $i48;

        $l57 = (long) $i56;

        $l55 = $l50 - $l57;

        i10 = specialinvoke r0.<java.util.GregorianCalendar: int mod7(long)>($l55);

        $r20 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i54 = $r20[3];

        $i52 = -1 + $i54;

        $i62 = 7 * $i52;

        $i53 = i10 + i11;

        $l64 = (long) $i53;

        $l65 = l3 - 3L;

        $l63 = $l64 - $l65;

        $i61 = specialinvoke r0.<java.util.GregorianCalendar: int mod7(long)>($l63);

        $i60 = $i62 + $i61;

        $i59 = $i60 - i10;

        $l58 = (long) $i59;

        l3 = l3 + $l58;

        $i69 = 7 - i10;

        $i68 = virtualinvoke r0.<java.util.GregorianCalendar: int getMinimalDaysInFirstWeek()>();

        if $i69 >= $i68 goto label56;

        l3 = l3 + 7L;

        goto label56;

     label69:
        z2 = 0;

        goto label66;

     label70:
        $i49 = virtualinvoke r0.<java.util.GregorianCalendar: int getFirstDayOfWeek()>();

        i11 = -1 + $i49;

        goto label68;

     label71:
        $r12 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z16 = $r12[6];

        if $z16 == 0 goto label76;

        $z18 = virtualinvoke r0.<java.util.GregorianCalendar: boolean isLenient()>();

        if $z18 != 0 goto label75;

        $r18 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i44 = $r18[6];

        if $i44 < 1 goto label73;

        $r17 = r0.<java.util.GregorianCalendar: int[] fields>;

        i9 = $r17[6];

        $z19 = virtualinvoke r0.<java.util.GregorianCalendar: boolean isLeapYear(int)>(i2);

        if $z19 == 0 goto label74;

        b8 = 1;

     label72:
        $i51 = 365 + b8;

        if i9 <= $i51 goto label75;

     label73:
        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r16;

     label74:
        b8 = 0;

        goto label72;

     label75:
        $r15 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i46 = $r15[6];

        $i45 = -1 + $i46;

        $l47 = (long) $i45;

        l3 = l3 + $l47;

        goto label56;

     label76:
        $r11 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z17 = $r11[7];

        if $z17 == 0 goto label56;

        $r14 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i34 = $r14[7];

        $i41 = -1 + $i34;

        $l43 = (long) $i41;

        $l40 = l3 - 3L;

        $l42 = $l43 - $l40;

        $i39 = specialinvoke r0.<java.util.GregorianCalendar: int mod7(long)>($l42);

        $l38 = (long) $i39;

        l3 = l3 + $l38;

        goto label56;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.GregorianCalendar r0, $r2;
        java.lang.Object r1;
        boolean z0, $z1, $z2;
        long $l0, $l1;
        byte $b2;

        r0 := @this: java.util.GregorianCalendar;

        r1 := @parameter0: java.lang.Object;

        z0 = 1;

        $z1 = r1 instanceof java.util.GregorianCalendar;

        if $z1 != 0 goto label2;

        z0 = 0;

     label1:
        return z0;

     label2:
        if r1 == r0 goto label1;

        $z2 = specialinvoke r0.<java.util.Calendar: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label3;

        $l1 = r0.<java.util.GregorianCalendar: long gregorianCutover>;

        $r2 = (java.util.GregorianCalendar) r1;

        $l0 = $r2.<java.util.GregorianCalendar: long gregorianCutover>;

        $b2 = $l1 cmp $l0;

        if $b2 == 0 goto label1;

     label3:
        return 0;
    }

    public int getActualMaximum(int)
    {
        java.util.GregorianCalendar r0, r1;
        int i0, i1, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        long l2;
        int[] $r2, $r3, $r4;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: java.util.GregorianCalendar;

        i0 := @parameter0: int;

        $r2 = <java.util.GregorianCalendar: int[] maximums>;

        i1 = $r2[i0];

        $r3 = <java.util.GregorianCalendar: int[] leastMaximums>;

        $i4 = $r3[i0];

        if i1 != $i4 goto label01;

        return i1;

     label01:
        virtualinvoke r0.<java.util.GregorianCalendar: void complete()>();

        l2 = r0.<java.util.GregorianCalendar: long time>;

        i3 = 0;

        tableswitch(i0)
        {
            case 1: goto label09;
            case 2: goto label02;
            case 3: goto label03;
            case 4: goto label05;
            case 5: goto label06;
            case 6: goto label07;
            case 7: goto label02;
            case 8: goto label08;
            case 9: goto label02;
            case 10: goto label02;
            case 11: goto label02;
            case 12: goto label02;
            case 13: goto label02;
            case 14: goto label02;
            case 15: goto label02;
            case 16: goto label12;
            default: goto label02;
        };

     label02:
        r0.<java.util.GregorianCalendar: long time> = l2;

        return i3;

     label03:
        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(5, 31);

        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(2, 11);

        i3 = virtualinvoke r0.<java.util.GregorianCalendar: int get(int)>(3);

        if i3 != 1 goto label04;

        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(5, 24);

        i3 = virtualinvoke r0.<java.util.GregorianCalendar: int get(int)>(3);

     label04:
        r0.<java.util.GregorianCalendar: boolean areFieldsSet> = 0;

        goto label02;

     label05:
        $i13 = specialinvoke r0.<java.util.GregorianCalendar: int daysInMonth()>();

        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(5, $i13);

        i3 = virtualinvoke r0.<java.util.GregorianCalendar: int get(int)>(4);

        r0.<java.util.GregorianCalendar: boolean areFieldsSet> = 0;

        goto label02;

     label06:
        $i11 = specialinvoke r0.<java.util.GregorianCalendar: int daysInMonth()>();

        return $i11;

     label07:
        $r4 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i10 = $r4[1];

        $i12 = specialinvoke r0.<java.util.GregorianCalendar: int daysInYear(int)>($i10);

        return $i12;

     label08:
        $i5 = virtualinvoke r0.<java.util.GregorianCalendar: int get(int)>(8);

        $i6 = specialinvoke r0.<java.util.GregorianCalendar: int daysInMonth()>();

        $i7 = virtualinvoke r0.<java.util.GregorianCalendar: int get(int)>(5);

        $i8 = $i6 - $i7;

        $i9 = $i8 / 7;

        i3 = $i5 + $i9;

        goto label02;

     label09:
        $r5 = virtualinvoke r0.<java.util.GregorianCalendar: java.lang.Object clone()>();

        r1 = (java.util.GregorianCalendar) $r5;

        $i14 = virtualinvoke r0.<java.util.GregorianCalendar: int get(int)>(0);

        if $i14 != 1 goto label11;

        virtualinvoke r1.<java.util.GregorianCalendar: void setTimeInMillis(long)>(9223372036854775807L);

     label10:
        i3 = virtualinvoke r1.<java.util.GregorianCalendar: int get(int)>(1);

        $i15 = virtualinvoke r0.<java.util.GregorianCalendar: int get(int)>(1);

        virtualinvoke r1.<java.util.GregorianCalendar: void set(int,int)>(1, $i15);

        $z0 = virtualinvoke r1.<java.util.GregorianCalendar: boolean before(java.lang.Object)>(r0);

        if $z0 == 0 goto label02;

        i3 = i3 + -1;

        goto label02;

     label11:
        virtualinvoke r1.<java.util.GregorianCalendar: void setTimeInMillis(long)>(-9223372036854775808L);

        goto label10;

     label12:
        i3 = virtualinvoke r0.<java.util.GregorianCalendar: int getMaximum(int)>(16);

        goto label02;
    }

    public int getActualMinimum(int)
    {
        java.util.GregorianCalendar r0;
        int i0, $i1;

        r0 := @this: java.util.GregorianCalendar;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<java.util.GregorianCalendar: int getMinimum(int)>(i0);

        return $i1;
    }

    public int getGreatestMinimum(int)
    {
        java.util.GregorianCalendar r0;
        int i0, $i1;
        int[] $r1;

        r0 := @this: java.util.GregorianCalendar;

        i0 := @parameter0: int;

        $r1 = <java.util.GregorianCalendar: int[] minimums>;

        $i1 = $r1[i0];

        return $i1;
    }

    public final java.util.Date getGregorianChange()
    {
        java.util.GregorianCalendar r0;
        java.util.Date $r1;
        long $l0;

        r0 := @this: java.util.GregorianCalendar;

        $r1 = new java.util.Date;

        $l0 = r0.<java.util.GregorianCalendar: long gregorianCutover>;

        specialinvoke $r1.<java.util.Date: void <init>(long)>($l0);

        return $r1;
    }

    public int getLeastMaximum(int)
    {
        java.util.GregorianCalendar r0;
        int i0, i2, $i5;
        long l1, $l3, $l6;
        byte $b4;
        int[] $r1;

        r0 := @this: java.util.GregorianCalendar;

        i0 := @parameter0: int;

        $l3 = r0.<java.util.GregorianCalendar: long gregorianCutover>;

        $b4 = $l3 cmp -12219292800000L;

        if $b4 == 0 goto label1;

        if i0 != 3 goto label1;

        l1 = r0.<java.util.GregorianCalendar: long time>;

        $l6 = r0.<java.util.GregorianCalendar: long gregorianCutover>;

        virtualinvoke r0.<java.util.GregorianCalendar: void setTimeInMillis(long)>($l6);

        i2 = virtualinvoke r0.<java.util.GregorianCalendar: int getActualMaximum(int)>(i0);

        virtualinvoke r0.<java.util.GregorianCalendar: void setTimeInMillis(long)>(l1);

        return i2;

     label1:
        $r1 = <java.util.GregorianCalendar: int[] leastMaximums>;

        $i5 = $r1[i0];

        return $i5;
    }

    public int getMaximum(int)
    {
        java.util.GregorianCalendar r0;
        int i0, $i1;
        int[] $r1;

        r0 := @this: java.util.GregorianCalendar;

        i0 := @parameter0: int;

        $r1 = <java.util.GregorianCalendar: int[] maximums>;

        $i1 = $r1[i0];

        return $i1;
    }

    public int getMinimum(int)
    {
        java.util.GregorianCalendar r0;
        int i0, $i1;
        int[] $r1;

        r0 := @this: java.util.GregorianCalendar;

        i0 := @parameter0: int;

        $r1 = <java.util.GregorianCalendar: int[] minimums>;

        $i1 = $r1[i0];

        return $i1;
    }

    public int hashCode()
    {
        java.util.GregorianCalendar r0;
        int $i0, $i4, $i5, $i6, $i7;
        long $l1, $l2, $l3;

        r0 := @this: java.util.GregorianCalendar;

        $i0 = specialinvoke r0.<java.util.Calendar: int hashCode()>();

        $l1 = r0.<java.util.GregorianCalendar: long gregorianCutover>;

        $l2 = $l1 >>> 32;

        $i5 = (int) $l2;

        $l3 = r0.<java.util.GregorianCalendar: long gregorianCutover>;

        $i4 = (int) $l3;

        $i6 = $i5 ^ $i4;

        $i7 = $i0 + $i6;

        return $i7;
    }

    public boolean isLeapYear(int)
    {
        java.util.GregorianCalendar r0;
        int i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: java.util.GregorianCalendar;

        i0 := @parameter0: int;

        $i1 = r0.<java.util.GregorianCalendar: int changeYear>;

        if i0 <= $i1 goto label3;

        $i3 = i0 % 4;

        if $i3 != 0 goto label2;

        $i4 = i0 % 100;

        if $i4 != 0 goto label1;

        $i5 = i0 % 400;

        if $i5 != 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;

     label3:
        $i2 = i0 % 4;

        if $i2 == 0 goto label1;

        return 0;
    }

    public void roll(int, int)
    {
        java.util.GregorianCalendar r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94;
        java.lang.IllegalArgumentException $r1;
        int[] $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26;
        long $l31, $l60;

        r0 := @this: java.util.GregorianCalendar;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 != 0 goto label01;

        return;

     label01:
        if i0 < 0 goto label02;

        if i0 < 15 goto label03;

     label02:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r1;

     label03:
        virtualinvoke r0.<java.util.GregorianCalendar: void complete()>();

        i2 = -1;

        tableswitch(i0)
        {
            case 0: goto label21;
            case 1: goto label06;
            case 2: goto label21;
            case 3: goto label07;
            case 4: goto label12;
            case 5: goto label17;
            case 6: goto label18;
            case 7: goto label19;
            case 8: goto label20;
            case 9: goto label21;
            case 10: goto label21;
            case 11: goto label21;
            case 12: goto label21;
            case 13: goto label21;
            case 14: goto label21;
            default: goto label04;
        };

     label04:
        if i2 == -1 goto label05;

        $r2 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i12 = $r2[i0];

        $i14 = -1 + $i12;

        $i13 = i1 + $i14;

        $i15 = specialinvoke r0.<java.util.GregorianCalendar: int mod(int,int)>($i13, i2);

        $i16 = 1 + $i15;

        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(i0, $i16);

     label05:
        virtualinvoke r0.<java.util.GregorianCalendar: void complete()>();

        return;

     label06:
        $r24 = <java.util.GregorianCalendar: int[] maximums>;

        i2 = $r24[i0];

        goto label04;

     label07:
        $r15 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i59 = $r15[1];

        i7 = specialinvoke r0.<java.util.GregorianCalendar: int daysInYear(int)>($i59);

        $r16 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i58 = $r16[7];

        $r14 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i56 = $r14[6];

        $i57 = $i58 - $i56;

        $i63 = virtualinvoke r0.<java.util.GregorianCalendar: int getFirstDayOfWeek()>();

        $i65 = -1 + $i63;

        $i64 = $i57 - $i65;

        $l60 = (long) $i64;

        i8 = specialinvoke r0.<java.util.GregorianCalendar: int mod7(long)>($l60);

        $i62 = i7 - 1;

        $i61 = i8 + $i62;

        $i70 = $i61 / 7;

        i9 = 1 + $i70;

        $r18 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i68 = $r18[i0];

        $i69 = -1 + $i68;

        $i67 = i1 + $i69;

        $i66 = specialinvoke r0.<java.util.GregorianCalendar: int mod(int,int)>($i67, i9);

        i10 = 1 + $i66;

        if i10 != i9 goto label09;

        $r21 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i80 = $r21[i0];

        $i79 = i10 - $i80;

        i11 = 7 * $i79;

        $r20 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i78 = $r20[6];

        if $i78 <= i11 goto label08;

        $r25 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i86 = $r25[6];

        $i85 = i11 + $i86;

        if $i85 <= i7 goto label08;

        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(i0, 1);

        goto label04;

     label08:
        $i87 = i10 - 1;

        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(i0, $i87);

        goto label04;

     label09:
        if i10 != 1 goto label11;

        $r17 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i74 = $r17[6];

        $r19 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i77 = $r19[6];

        $i75 = -1 + $i77;

        $i76 = $i75 / 7;

        $i73 = 7 * $i76;

        $i71 = $i74 - $i73;

        $i72 = -1 + $i71;

        $i83 = i8 + $i72;

        $i82 = $i83 / 7;

        $i81 = 1 + $i82;

        if $i81 <= 1 goto label10;

        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(i0, 1);

        goto label04;

     label10:
        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(i0, i10);

        goto label04;

     label11:
        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(i0, i10);

        goto label04;

     label12:
        i3 = specialinvoke r0.<java.util.GregorianCalendar: int daysInMonth()>();

        $r8 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i29 = $r8[7];

        $r7 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i27 = $r7[5];

        $i30 = $i29 - $i27;

        $i28 = virtualinvoke r0.<java.util.GregorianCalendar: int getFirstDayOfWeek()>();

        $i33 = -1 + $i28;

        $i32 = $i30 - $i33;

        $l31 = (long) $i32;

        i4 = specialinvoke r0.<java.util.GregorianCalendar: int mod7(long)>($l31);

        $i36 = i3 - 1;

        $i35 = i4 + $i36;

        $i34 = $i35 / 7;

        i5 = 1 + $i34;

        $r9 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i39 = $r9[i0];

        $i38 = -1 + $i39;

        $i37 = i1 + $i38;

        $i41 = specialinvoke r0.<java.util.GregorianCalendar: int mod(int,int)>($i37, i5);

        i6 = 1 + $i41;

        if i6 != i5 goto label14;

        $r12 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i52 = $r12[5];

        $r13 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i55 = $r13[i0];

        $i50 = i6 - $i55;

        $i51 = 7 * $i50;

        $i53 = $i52 + $i51;

        if $i53 <= i3 goto label13;

        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(5, i3);

        goto label04;

     label13:
        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(i0, i6);

        goto label04;

     label14:
        if i6 != 1 goto label16;

        $r11 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i49 = $r11[5];

        $r10 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i40 = $r10[5];

        $i46 = -1 + $i40;

        $i47 = $i46 / 7;

        $i48 = 7 * $i47;

        $i42 = $i49 - $i48;

        $i43 = -1 + $i42;

        $i44 = i4 + $i43;

        $i45 = $i44 / 7;

        $i54 = 1 + $i45;

        if $i54 <= 1 goto label15;

        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(5, 1);

        goto label04;

     label15:
        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(i0, i6);

        goto label04;

     label16:
        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(i0, i6);

        goto label04;

     label17:
        i2 = specialinvoke r0.<java.util.GregorianCalendar: int daysInMonth()>();

        goto label04;

     label18:
        $r6 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i26 = $r6[1];

        i2 = specialinvoke r0.<java.util.GregorianCalendar: int daysInYear(int)>($i26);

        goto label04;

     label19:
        $r5 = <java.util.GregorianCalendar: int[] maximums>;

        i2 = $r5[i0];

        r0.<java.util.GregorianCalendar: int lastDateFieldSet> = 4;

        goto label04;

     label20:
        $r3 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i17 = $r3[5];

        $i18 = specialinvoke r0.<java.util.GregorianCalendar: int daysInMonth()>();

        $r4 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i20 = $r4[5];

        $i19 = $i18 - $i20;

        $i22 = $i19 / 7;

        $i21 = 7 * $i22;

        $i24 = $i17 + $i21;

        $i25 = -1 + $i24;

        $i23 = $i25 / 7;

        i2 = 1 + $i23;

        goto label04;

     label21:
        $r23 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i84 = $r23[i0];

        $i92 = i1 + $i84;

        $r22 = <java.util.GregorianCalendar: int[] maximums>;

        $i90 = $r22[i0];

        $i89 = 1 + $i90;

        $i91 = specialinvoke r0.<java.util.GregorianCalendar: int mod(int,int)>($i92, $i89);

        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(i0, $i91);

        if i0 != 2 goto label22;

        $r26 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i93 = $r26[5];

        $i94 = specialinvoke r0.<java.util.GregorianCalendar: int daysInMonth()>();

        if $i93 <= $i94 goto label22;

        $i88 = specialinvoke r0.<java.util.GregorianCalendar: int daysInMonth()>();

        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(5, $i88);

        goto label04;

     label22:
        if i0 != 9 goto label04;

        r0.<java.util.GregorianCalendar: int lastTimeFieldSet> = 10;

        goto label04;
    }

    public void roll(int, boolean)
    {
        java.util.GregorianCalendar r0;
        int i0;
        boolean z0;
        byte b1;

        r0 := @this: java.util.GregorianCalendar;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label2;

        b1 = 1;

     label1:
        virtualinvoke r0.<java.util.GregorianCalendar: void roll(int,int)>(i0, b1);

        return;

     label2:
        b1 = -1;

        goto label1;
    }

    public void setGregorianChange(java.util.Date)
    {
        java.util.GregorianCalendar r0, r2, $r3;
        java.util.Date r1;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        long $l1;
        java.util.TimeZone $r4;

        r0 := @this: java.util.GregorianCalendar;

        r1 := @parameter0: java.util.Date;

        $l1 = virtualinvoke r1.<java.util.Date: long getTime()>();

        r0.<java.util.GregorianCalendar: long gregorianCutover> = $l1;

        $r3 = new java.util.GregorianCalendar;

        $r4 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        specialinvoke $r3.<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>($r4);

        r2 = $r3;

        virtualinvoke r2.<java.util.GregorianCalendar: void setTime(java.util.Date)>(r1);

        $i2 = virtualinvoke r2.<java.util.GregorianCalendar: int get(int)>(1);

        r0.<java.util.GregorianCalendar: int changeYear> = $i2;

        $i3 = virtualinvoke r2.<java.util.GregorianCalendar: int get(int)>(0);

        if $i3 != 0 goto label1;

        $i18 = r0.<java.util.GregorianCalendar: int changeYear>;

        $i20 = 1 - $i18;

        r0.<java.util.GregorianCalendar: int changeYear> = $i20;

     label1:
        $i4 = r0.<java.util.GregorianCalendar: int changeYear>;

        $i5 = -2000 + $i4;

        $i6 = $i5 / 400;

        $i7 = specialinvoke r0.<java.util.GregorianCalendar: int julianError()>();

        $i12 = $i6 + $i7;

        $i8 = r0.<java.util.GregorianCalendar: int changeYear>;

        $i9 = -2000 + $i8;

        $i10 = $i9 / 100;

        $i11 = $i12 - $i10;

        r0.<java.util.GregorianCalendar: int julianSkew> = $i11;

        i0 = virtualinvoke r2.<java.util.GregorianCalendar: int get(int)>(6);

        $i13 = r0.<java.util.GregorianCalendar: int julianSkew>;

        if i0 >= $i13 goto label2;

        $i14 = i0 - 1;

        r0.<java.util.GregorianCalendar: int currentYearSkew> = $i14;

        $i17 = r0.<java.util.GregorianCalendar: int julianSkew>;

        $i16 = $i17 - i0;

        $i19 = 1 + $i16;

        r0.<java.util.GregorianCalendar: int lastYearSkew> = $i19;

        return;

     label2:
        r0.<java.util.GregorianCalendar: int lastYearSkew> = 0;

        $i15 = r0.<java.util.GregorianCalendar: int julianSkew>;

        r0.<java.util.GregorianCalendar: int currentYearSkew> = $i15;

        return;
    }
}
