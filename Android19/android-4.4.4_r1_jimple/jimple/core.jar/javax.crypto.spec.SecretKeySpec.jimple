public class javax.crypto.spec.SecretKeySpec extends java.lang.Object implements javax.crypto.SecretKey, java.security.spec.KeySpec, java.io.Serializable
{
    private static final long serialVersionUID;
    private final java.lang.String algorithm;
    private final byte[] key;

    public void <init>(byte[], int, int, java.lang.String)
    {
        javax.crypto.spec.SecretKeySpec r0;
        byte[] r1, $r4, $r5;
        int i0, i1, $i2, $i3, $i4;
        java.lang.String r2;
        java.lang.ArrayIndexOutOfBoundsException $r3;
        java.lang.IllegalArgumentException $r6, $r7, $r8, $r9;

        r0 := @this: javax.crypto.spec.SecretKeySpec;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("key == null");

        throw $r9;

     label1:
        $i2 = lengthof r1;

        if $i2 != 0 goto label2;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("key.length == 0");

        throw $r8;

     label2:
        if i1 < 0 goto label3;

        if i0 >= 0 goto label4;

     label3:
        $r3 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r3.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>("len < 0 || offset < 0");

        throw $r3;

     label4:
        $i3 = lengthof r1;

        $i4 = $i3 - i0;

        if $i4 >= i1 goto label5;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("key too short");

        throw $r7;

     label5:
        if r2 != null goto label6;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("algorithm == null");

        throw $r6;

     label6:
        r0.<javax.crypto.spec.SecretKeySpec: java.lang.String algorithm> = r2;

        $r4 = newarray (byte)[i1];

        r0.<javax.crypto.spec.SecretKeySpec: byte[] key> = $r4;

        $r5 = r0.<javax.crypto.spec.SecretKeySpec: byte[] key>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, $r5, 0, i1);

        return;
    }

    public void <init>(byte[], java.lang.String)
    {
        javax.crypto.spec.SecretKeySpec r0;
        byte[] r1, $r3, $r4;
        java.lang.String r2;
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r5, $r6, $r7;

        r0 := @this: javax.crypto.spec.SecretKeySpec;

        r1 := @parameter0: byte[];

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("key == null");

        throw $r7;

     label1:
        $i0 = lengthof r1;

        if $i0 != 0 goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("key.length == 0");

        throw $r6;

     label2:
        if r2 != null goto label3;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("algorithm == null");

        throw $r5;

     label3:
        r0.<javax.crypto.spec.SecretKeySpec: java.lang.String algorithm> = r2;

        $i1 = lengthof r1;

        $r3 = newarray (byte)[$i1];

        r0.<javax.crypto.spec.SecretKeySpec: byte[] key> = $r3;

        $r4 = r0.<javax.crypto.spec.SecretKeySpec: byte[] key>;

        $i2 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r4, 0, $i2);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        javax.crypto.spec.SecretKeySpec r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        java.lang.String $r3, $r4;
        byte[] $r5, $r6;

        r0 := @this: javax.crypto.spec.SecretKeySpec;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label2;

     label1:
        return 1;

     label2:
        $z0 = r1 instanceof javax.crypto.spec.SecretKeySpec;

        if $z0 != 0 goto label3;

        return 0;

     label3:
        r2 = (javax.crypto.spec.SecretKeySpec) r1;

        $r4 = r0.<javax.crypto.spec.SecretKeySpec: java.lang.String algorithm>;

        $r3 = r2.<javax.crypto.spec.SecretKeySpec: java.lang.String algorithm>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        if $z1 == 0 goto label4;

        $r6 = r0.<javax.crypto.spec.SecretKeySpec: byte[] key>;

        $r5 = r2.<javax.crypto.spec.SecretKeySpec: byte[] key>;

        $z2 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r6, $r5);

        if $z2 != 0 goto label1;

     label4:
        return 0;
    }

    public java.lang.String getAlgorithm()
    {
        javax.crypto.spec.SecretKeySpec r0;
        java.lang.String $r1;

        r0 := @this: javax.crypto.spec.SecretKeySpec;

        $r1 = r0.<javax.crypto.spec.SecretKeySpec: java.lang.String algorithm>;

        return $r1;
    }

    public byte[] getEncoded()
    {
        javax.crypto.spec.SecretKeySpec r0;
        byte[] r1, $r2, $r3, $r4;
        int $i0, $i1;

        r0 := @this: javax.crypto.spec.SecretKeySpec;

        $r2 = r0.<javax.crypto.spec.SecretKeySpec: byte[] key>;

        $i0 = lengthof $r2;

        r1 = newarray (byte)[$i0];

        $r4 = r0.<javax.crypto.spec.SecretKeySpec: byte[] key>;

        $r3 = r0.<javax.crypto.spec.SecretKeySpec: byte[] key>;

        $i1 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r1, 0, $i1);

        return r1;
    }

    public java.lang.String getFormat()
    {
        javax.crypto.spec.SecretKeySpec r0;

        r0 := @this: javax.crypto.spec.SecretKeySpec;

        return "RAW";
    }

    public int hashCode()
    {
        javax.crypto.spec.SecretKeySpec r0;
        int i0, i1, i2;
        byte[] r1;
        java.lang.String $r2;
        byte $b3;

        r0 := @this: javax.crypto.spec.SecretKeySpec;

        $r2 = r0.<javax.crypto.spec.SecretKeySpec: java.lang.String algorithm>;

        i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        r1 = r0.<javax.crypto.spec.SecretKeySpec: byte[] key>;

        i1 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $b3 = r1[i2];

        i0 = i0 + $b3;

        i2 = i2 + 1;

        goto label1;

     label2:
        return i0;
    }

    public static void <clinit>()
    {
        <javax.crypto.spec.SecretKeySpec: long serialVersionUID> = 6577238317307289933L;

        return;
    }
}
