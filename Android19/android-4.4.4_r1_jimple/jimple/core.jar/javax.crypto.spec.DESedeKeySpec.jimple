public class javax.crypto.spec.DESedeKeySpec extends java.lang.Object implements java.security.spec.KeySpec
{
    public static final int DES_EDE_KEY_LEN;
    private final byte[] key;

    public void <init>(byte[]) throws java.security.InvalidKeyException
    {
        javax.crypto.spec.DESedeKeySpec r0;
        byte[] r1, $r2, $r3;
        int $i0;
        java.security.InvalidKeyException $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: javax.crypto.spec.DESedeKeySpec;

        r1 := @parameter0: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("key == null");

        throw $r5;

     label1:
        $i0 = lengthof r1;

        if $i0 >= 24 goto label2;

        $r4 = new java.security.InvalidKeyException;

        specialinvoke $r4.<java.security.InvalidKeyException: void <init>()>();

        throw $r4;

     label2:
        $r2 = newarray (byte)[24];

        r0.<javax.crypto.spec.DESedeKeySpec: byte[] key> = $r2;

        $r3 = r0.<javax.crypto.spec.DESedeKeySpec: byte[] key>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r3, 0, 24);

        return;
    }

    public void <init>(byte[], int) throws java.security.InvalidKeyException
    {
        javax.crypto.spec.DESedeKeySpec r0;
        byte[] r1, $r2, $r3;
        int i0, $i1, $i2;
        java.security.InvalidKeyException $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: javax.crypto.spec.DESedeKeySpec;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("key == null");

        throw $r5;

     label1:
        $i1 = lengthof r1;

        $i2 = $i1 - i0;

        if $i2 >= 24 goto label2;

        $r4 = new java.security.InvalidKeyException;

        specialinvoke $r4.<java.security.InvalidKeyException: void <init>()>();

        throw $r4;

     label2:
        $r2 = newarray (byte)[24];

        r0.<javax.crypto.spec.DESedeKeySpec: byte[] key> = $r2;

        $r3 = r0.<javax.crypto.spec.DESedeKeySpec: byte[] key>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, $r3, 0, 24);

        return;
    }

    public static boolean isParityAdjusted(byte[], int) throws java.security.InvalidKeyException
    {
        byte[] r0;
        int i0, i1, $i3, $i4, $i5, $i11, $i14, $i18, $i19, $i23, $i24, $i27;
        byte b2, $b6, $b7, $b8, $b9, $b10, $b12, $b13, $b15, $b16, $b17, $b20, $b21, $b22;
        short $s25, $s26;
        java.security.InvalidKeyException $r1;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i3 = lengthof r0;

        $i4 = $i3 - i0;

        if $i4 >= 24 goto label1;

        $r1 = new java.security.InvalidKeyException;

        specialinvoke $r1.<java.security.InvalidKeyException: void <init>()>();

        throw $r1;

     label1:
        i1 = i0;

     label2:
        $i5 = i0 + 24;

        if i1 >= $i5 goto label4;

        b2 = r0[i1];

        $b8 = b2 & 1;

        $b6 = b2 & 2;

        $b7 = $b6 >> 1;

        $i11 = $b8 + $b7;

        $b9 = b2 & 4;

        $b10 = $b9 >> 2;

        $i14 = $i11 + $b10;

        $b12 = b2 & 8;

        $b13 = $b12 >> 3;

        $i18 = $i14 + $b13;

        $b16 = b2 & 16;

        $b15 = $b16 >> 4;

        $i19 = $i18 + $b15;

        $b17 = b2 & 32;

        $b20 = $b17 >> 5;

        $i24 = $i19 + $b20;

        $b22 = b2 & 64;

        $b21 = $b22 >> 6;

        $i23 = $i24 + $b21;

        $i27 = 1 & $i23;

        $s26 = b2 & 128;

        $s25 = $s26 >> 7;

        if $i27 != $s25 goto label3;

        return 0;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 1;
    }

    public byte[] getKey()
    {
        javax.crypto.spec.DESedeKeySpec r0;
        byte[] r1, $r2;

        r0 := @this: javax.crypto.spec.DESedeKeySpec;

        r1 = newarray (byte)[24];

        $r2 = r0.<javax.crypto.spec.DESedeKeySpec: byte[] key>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, 24);

        return r1;
    }

    public static void <clinit>()
    {
        <javax.crypto.spec.DESedeKeySpec: int DES_EDE_KEY_LEN> = 24;

        return;
    }
}
