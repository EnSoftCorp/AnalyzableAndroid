final class org.apache.harmony.security.x509.AuthorityKeyIdentifier$1 extends org.apache.harmony.security.asn1.ASN1Sequence
{

    void <init>(org.apache.harmony.security.asn1.ASN1Type[])
    {
        org.apache.harmony.security.x509.AuthorityKeyIdentifier$1 r0;
        org.apache.harmony.security.asn1.ASN1Type[] r1;

        r0 := @this: org.apache.harmony.security.x509.AuthorityKeyIdentifier$1;

        r1 := @parameter0: org.apache.harmony.security.asn1.ASN1Type[];

        specialinvoke r0.<org.apache.harmony.security.asn1.ASN1Sequence: void <init>(org.apache.harmony.security.asn1.ASN1Type[])>(r1);

        virtualinvoke r0.<org.apache.harmony.security.x509.AuthorityKeyIdentifier$1: void setOptional(int)>(0);

        virtualinvoke r0.<org.apache.harmony.security.x509.AuthorityKeyIdentifier$1: void setOptional(int)>(1);

        virtualinvoke r0.<org.apache.harmony.security.x509.AuthorityKeyIdentifier$1: void setOptional(int)>(2);

        return;
    }

    protected java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream) throws java.io.IOException
    {
        org.apache.harmony.security.x509.AuthorityKeyIdentifier$1 r0;
        org.apache.harmony.security.asn1.BerInputStream r1;
        java.lang.Object[] r2, $r6;
        byte[] r3, $r8, $r11, $r14;
        java.math.BigInteger r4, $r15;
        java.lang.Object $r5, $r7, $r10, $r12;
        org.apache.harmony.security.x509.AuthorityKeyIdentifier $r9;
        org.apache.harmony.security.x509.GeneralNames $r13;

        r0 := @this: org.apache.harmony.security.x509.AuthorityKeyIdentifier$1;

        r1 := @parameter0: org.apache.harmony.security.asn1.BerInputStream;

        $r5 = r1.<org.apache.harmony.security.asn1.BerInputStream: java.lang.Object content>;

        $r6 = (java.lang.Object[]) $r5;

        r2 = (java.lang.Object[]) $r6;

        $r7 = r2[2];

        $r8 = (byte[]) $r7;

        r3 = (byte[]) $r8;

        r4 = null;

        if r3 == null goto label1;

        $r15 = new java.math.BigInteger;

        specialinvoke $r15.<java.math.BigInteger: void <init>(byte[])>(r3);

        r4 = $r15;

     label1:
        $r9 = new org.apache.harmony.security.x509.AuthorityKeyIdentifier;

        $r10 = r2[0];

        $r11 = (byte[]) $r10;

        $r14 = (byte[]) $r11;

        $r12 = r2[1];

        $r13 = (org.apache.harmony.security.x509.GeneralNames) $r12;

        specialinvoke $r9.<org.apache.harmony.security.x509.AuthorityKeyIdentifier: void <init>(byte[],org.apache.harmony.security.x509.GeneralNames,java.math.BigInteger)>($r14, $r13, r4);

        return $r9;
    }

    protected void getValues(java.lang.Object, java.lang.Object[])
    {
        org.apache.harmony.security.x509.AuthorityKeyIdentifier$1 r0;
        java.lang.Object r1;
        java.lang.Object[] r2;
        org.apache.harmony.security.x509.AuthorityKeyIdentifier r3;
        byte[] $r4, $r8;
        org.apache.harmony.security.x509.GeneralNames $r5;
        java.math.BigInteger $r6, $r7;

        r0 := @this: org.apache.harmony.security.x509.AuthorityKeyIdentifier$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object[];

        r3 = (org.apache.harmony.security.x509.AuthorityKeyIdentifier) r1;

        $r4 = staticinvoke <org.apache.harmony.security.x509.AuthorityKeyIdentifier: byte[] access$000(org.apache.harmony.security.x509.AuthorityKeyIdentifier)>(r3);

        r2[0] = $r4;

        $r5 = staticinvoke <org.apache.harmony.security.x509.AuthorityKeyIdentifier: org.apache.harmony.security.x509.GeneralNames access$100(org.apache.harmony.security.x509.AuthorityKeyIdentifier)>(r3);

        r2[1] = $r5;

        $r6 = staticinvoke <org.apache.harmony.security.x509.AuthorityKeyIdentifier: java.math.BigInteger access$200(org.apache.harmony.security.x509.AuthorityKeyIdentifier)>(r3);

        if $r6 == null goto label1;

        $r7 = staticinvoke <org.apache.harmony.security.x509.AuthorityKeyIdentifier: java.math.BigInteger access$200(org.apache.harmony.security.x509.AuthorityKeyIdentifier)>(r3);

        $r8 = virtualinvoke $r7.<java.math.BigInteger: byte[] toByteArray()>();

        r2[2] = $r8;

     label1:
        return;
    }
}
