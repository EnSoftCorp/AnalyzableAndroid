public abstract class java.util.concurrent.AbstractExecutorService extends java.lang.Object implements java.util.concurrent.ExecutorService
{
    static final boolean $assertionsDisabled;

    static void <clinit>()
    {
        boolean z0, $z1;
        java.lang.Class $r0;

        $r0 = class "java/util/concurrent/AbstractExecutorService";

        $z1 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z1 != 0 goto label2;

        z0 = 1;

     label1:
        <java.util.concurrent.AbstractExecutorService: boolean $assertionsDisabled> = z0;

        return;

     label2:
        z0 = 0;

        goto label1;
    }

    public void <init>()
    {
        java.util.concurrent.AbstractExecutorService r0;

        r0 := @this: java.util.concurrent.AbstractExecutorService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private java.lang.Object doInvokeAny(java.util.Collection, boolean, long) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException
    {
        java.util.concurrent.AbstractExecutorService r0;
        java.util.Collection r1;
        boolean z0;
        long l0, l2, $l9, $l10;
        int i1, i3, i4, i5, i6, i7, i8;
        java.util.ArrayList r2, $r17;
        java.util.concurrent.ExecutorCompletionService r3, $r16;
        java.lang.Throwable r4, r5, r8, $r33, $r36;
        java.util.Iterator r6;
        java.util.concurrent.ExecutionException r7, r9, r11, r14, $r24, $r29, $r34;
        java.util.concurrent.Future r10, $r18, $r22, $r26, $r35;
        java.lang.RuntimeException r12, $r28;
        java.lang.Object r13, $r19, $r21, $r23, $r32;
        java.util.concurrent.TimeUnit r15;
        java.util.concurrent.Callable $r20, $r27;
        java.util.concurrent.TimeoutException $r25;
        java.lang.NullPointerException $r30;
        java.lang.IllegalArgumentException $r31;

        r0 := @this: java.util.concurrent.AbstractExecutorService;

        r1 := @parameter0: java.util.Collection;

        z0 := @parameter1: boolean;

        l0 := @parameter2: long;

        if r1 != null goto label01;

        $r30 = new java.lang.NullPointerException;

        specialinvoke $r30.<java.lang.NullPointerException: void <init>()>();

        throw $r30;

     label01:
        i1 = interfaceinvoke r1.<java.util.Collection: int size()>();

        if i1 != 0 goto label02;

        $r31 = new java.lang.IllegalArgumentException;

        specialinvoke $r31.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r31;

     label02:
        $r17 = new java.util.ArrayList;

        specialinvoke $r17.<java.util.ArrayList: void <init>(int)>(i1);

        r2 = $r17;

        $r16 = new java.util.concurrent.ExecutorCompletionService;

        specialinvoke $r16.<java.util.concurrent.ExecutorCompletionService: void <init>(java.util.concurrent.Executor)>(r0);

        r3 = $r16;

        if z0 == 0 goto label14;

     label03:
        $l10 = staticinvoke <java.lang.System: long nanoTime()>();

        l2 = l0 + $l10;

     label04:
        r6 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

        $r19 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        $r20 = (java.util.concurrent.Callable) $r19;

        $r18 = virtualinvoke r3.<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>($r20);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r18);

     label05:
        i5 = i1 - 1;

        i6 = 1;

        r7 = null;

     label06:
        r10 = virtualinvoke r3.<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.Future poll()>();

     label07:
        if r10 != null goto label10;

        if i5 <= 0 goto label15;

        i5 = i5 + -1;

     label08:
        $r23 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        $r27 = (java.util.concurrent.Callable) $r23;

        $r26 = virtualinvoke r3.<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>($r27);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r26);

     label09:
        i6 = i6 + 1;

     label10:
        if r10 == null goto label35;

        i6 = i6 + -1;

     label11:
        r13 = interfaceinvoke r10.<java.util.concurrent.Future: java.lang.Object get()>();

     label12:
        i7 = 0;

        i8 = virtualinvoke r2.<java.util.ArrayList: int size()>();

     label13:
        if i7 >= i8 goto label33;

        $r21 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        $r22 = (java.util.concurrent.Future) $r21;

        interfaceinvoke $r22.<java.util.concurrent.Future: boolean cancel(boolean)>(1);

        i7 = i7 + 1;

        goto label13;

     label14:
        l2 = 0L;

        goto label04;

     label15:
        if i6 != 0 goto label21;

        if r7 != null goto label34;

     label16:
        $r24 = new java.util.concurrent.ExecutionException;

        specialinvoke $r24.<java.util.concurrent.ExecutionException: void <init>()>();

        r14 = $r24;

     label17:
        throw r14;

     label18:
        $r33 := @caughtexception;

        r4 = $r33;

        r5 = r4;

     label19:
        i3 = 0;

        i4 = virtualinvoke r2.<java.util.ArrayList: int size()>();

     label20:
        if i3 >= i4 goto label32;

        $r32 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r35 = (java.util.concurrent.Future) $r32;

        interfaceinvoke $r35.<java.util.concurrent.Future: boolean cancel(boolean)>(1);

        i3 = i3 + 1;

        goto label20;

     label21:
        if z0 == 0 goto label27;

     label22:
        r15 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        r10 = virtualinvoke r3.<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.Future poll(long,java.util.concurrent.TimeUnit)>(l0, r15);

     label23:
        if r10 != null goto label25;

     label24:
        $r25 = new java.util.concurrent.TimeoutException;

        specialinvoke $r25.<java.util.concurrent.TimeoutException: void <init>()>();

        throw $r25;

     label25:
        $l9 = staticinvoke <java.lang.System: long nanoTime()>();

        l0 = l2 - $l9;

     label26:
        goto label10;

     label27:
        r10 = virtualinvoke r3.<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.Future take()>();

     label28:
        goto label10;

     label29:
        $r28 := @caughtexception;

        r12 = $r28;

     label30:
        $r34 = new java.util.concurrent.ExecutionException;

        specialinvoke $r34.<java.util.concurrent.ExecutionException: void <init>(java.lang.Throwable)>(r12);

        r9 = $r34;

     label31:
        goto label38;

     label32:
        throw r5;

     label33:
        return r13;

     label34:
        r14 = r7;

        goto label17;

     label35:
        r9 = r7;

        goto label38;

     label36:
        $r36 := @caughtexception;

        r8 = $r36;

        r5 = r8;

        goto label19;

     label37:
        $r29 := @caughtexception;

        r11 = $r29;

        r9 = r11;

     label38:
        r7 = r9;

        goto label06;

        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label04 to label05 with label18;
        catch java.lang.Throwable from label06 to label07 with label36;
        catch java.lang.Throwable from label08 to label09 with label36;
        catch java.util.concurrent.ExecutionException from label11 to label12 with label37;
        catch java.lang.RuntimeException from label11 to label12 with label29;
        catch java.lang.Throwable from label11 to label12 with label36;
        catch java.lang.Throwable from label16 to label17 with label36;
        catch java.lang.Throwable from label17 to label18 with label18;
        catch java.lang.Throwable from label22 to label23 with label36;
        catch java.lang.Throwable from label24 to label25 with label36;
        catch java.lang.Throwable from label25 to label26 with label36;
        catch java.lang.Throwable from label27 to label28 with label36;
        catch java.lang.Throwable from label30 to label31 with label36;
    }

    public java.util.List invokeAll(java.util.Collection) throws java.lang.InterruptedException
    {
        java.util.concurrent.AbstractExecutorService r0;
        java.util.Collection r1;
        java.util.ArrayList r2, $r8;
        java.lang.Throwable r3, $r17;
        int i0, i1, i2, i3, $i6;
        java.util.Iterator r4;
        java.util.concurrent.Future r5, $r21;
        boolean z0, $z1;
        java.util.concurrent.RunnableFuture r9;
        java.lang.Object $r12, $r13, $r20;
        java.lang.NullPointerException $r15;
        java.util.concurrent.Callable $r16;
        java.util.concurrent.CancellationException $r18;
        java.util.concurrent.ExecutionException $r19;

        r0 := @this: java.util.concurrent.AbstractExecutorService;

        r1 := @parameter0: java.util.Collection;

        if r1 != null goto label01;

        $r15 = new java.lang.NullPointerException;

        specialinvoke $r15.<java.lang.NullPointerException: void <init>()>();

        throw $r15;

     label01:
        $r8 = new java.util.ArrayList;

        $i6 = interfaceinvoke r1.<java.util.Collection: int size()>();

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i6);

        r2 = $r8;

     label02:
        r4 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label07;

        $r13 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r16 = (java.util.concurrent.Callable) $r13;

        r9 = virtualinvoke r0.<java.util.concurrent.AbstractExecutorService: java.util.concurrent.RunnableFuture newTaskFor(java.util.concurrent.Callable)>($r16);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r9);

        virtualinvoke r0.<java.util.concurrent.AbstractExecutorService: void execute(java.lang.Runnable)>(r9);

     label04:
        goto label03;

     label05:
        $r17 := @caughtexception;

        r3 = $r17;

        i0 = 0;

        i1 = virtualinvoke r2.<java.util.ArrayList: int size()>();

     label06:
        if i0 >= i1 goto label15;

        $r20 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r21 = (java.util.concurrent.Future) $r20;

        interfaceinvoke $r21.<java.util.concurrent.Future: boolean cancel(boolean)>(1);

        i0 = i0 + 1;

        goto label06;

     label07:
        i2 = 0;

     label08:
        i3 = virtualinvoke r2.<java.util.ArrayList: int size()>();

     label09:
        if i2 >= i3 goto label14;

     label10:
        $r12 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r5 = (java.util.concurrent.Future) $r12;

        z0 = interfaceinvoke r5.<java.util.concurrent.Future: boolean isDone()>();

     label11:
        if z0 != 0 goto label13;

     label12:
        interfaceinvoke r5.<java.util.concurrent.Future: java.lang.Object get()>();

     label13:
        i2 = i2 + 1;

        goto label09;

     label14:
        goto label18;

     label15:
        throw r3;

     label16:
        $r18 := @caughtexception;

        goto label13;

     label17:
        $r19 := @caughtexception;

        goto label13;

     label18:
        return r2;

        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label08 to label09 with label05;
        catch java.lang.Throwable from label10 to label11 with label05;
        catch java.util.concurrent.CancellationException from label12 to label13 with label16;
        catch java.util.concurrent.ExecutionException from label12 to label13 with label17;
        catch java.lang.Throwable from label12 to label13 with label05;
    }

    public java.util.List invokeAll(java.util.Collection, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException
    {
        java.util.concurrent.AbstractExecutorService r0;
        java.util.Collection r1;
        long l0, l1, l4, l6, l13, $l19;
        java.util.concurrent.TimeUnit r2, $r15;
        java.util.ArrayList r3, $r10;
        java.lang.Throwable r4, $r29;
        int i2, i3, i5, i7, i8, i9, i11, i14, i15, i16, i17, $i18;
        java.util.Iterator r5;
        boolean z0, $z1;
        java.util.concurrent.Future r6, $r16, $r24, $r25, $r33;
        java.lang.Object $r12, $r17, $r19, $r20, $r23, $r30, $r32;
        byte $b20, $b21;
        java.lang.Runnable $r18;
        java.util.concurrent.Callable $r21;
        java.util.concurrent.RunnableFuture $r22;
        java.util.concurrent.ExecutionException $r26;
        java.util.concurrent.TimeoutException $r27;
        java.lang.NullPointerException $r28;
        java.util.concurrent.CancellationException $r31;

        r0 := @this: java.util.concurrent.AbstractExecutorService;

        r1 := @parameter0: java.util.Collection;

        l0 := @parameter1: long;

        r2 := @parameter2: java.util.concurrent.TimeUnit;

        if r1 != null goto label01;

        $r28 = new java.lang.NullPointerException;

        specialinvoke $r28.<java.lang.NullPointerException: void <init>()>();

        throw $r28;

     label01:
        l1 = virtualinvoke r2.<java.util.concurrent.TimeUnit: long toNanos(long)>(l0);

        $r10 = new java.util.ArrayList;

        $i18 = interfaceinvoke r1.<java.util.Collection: int size()>();

        specialinvoke $r10.<java.util.ArrayList: void <init>(int)>($i18);

        r3 = $r10;

     label02:
        r5 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label07;

        $r20 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        $r21 = (java.util.concurrent.Callable) $r20;

        $r22 = virtualinvoke r0.<java.util.concurrent.AbstractExecutorService: java.util.concurrent.RunnableFuture newTaskFor(java.util.concurrent.Callable)>($r21);

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r22);

     label04:
        goto label03;

     label05:
        $r29 := @caughtexception;

        r4 = $r29;

        i2 = 0;

        i3 = virtualinvoke r3.<java.util.ArrayList: int size()>();

     label06:
        if i2 >= i3 goto label26;

        $r30 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r25 = (java.util.concurrent.Future) $r30;

        interfaceinvoke $r25.<java.util.concurrent.Future: boolean cancel(boolean)>(1);

        i2 = i2 + 1;

        goto label06;

     label07:
        $l19 = staticinvoke <java.lang.System: long nanoTime()>();

        l4 = l1 + $l19;

        i5 = virtualinvoke r3.<java.util.ArrayList: int size()>();

     label08:
        i7 = 0;

     label09:
        if i7 >= i5 goto label14;

     label10:
        $r19 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        $r18 = (java.lang.Runnable) $r19;

        virtualinvoke r0.<java.util.concurrent.AbstractExecutorService: void execute(java.lang.Runnable)>($r18);

        l6 = staticinvoke <java.lang.System: long nanoTime()>();

     label11:
        l1 = l4 - l6;

        $b21 = l1 cmp 0L;

        if $b21 > 0 goto label13;

        i8 = 0;

        i9 = virtualinvoke r3.<java.util.ArrayList: int size()>();

     label12:
        if i8 >= i9 goto label27;

        $r23 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i8);

        $r24 = (java.util.concurrent.Future) $r23;

        interfaceinvoke $r24.<java.util.concurrent.Future: boolean cancel(boolean)>(1);

        i8 = i8 + 1;

        goto label12;

     label13:
        i7 = i7 + 1;

        goto label09;

     label14:
        i11 = 0;

     label15:
        if i11 >= i5 goto label25;

     label16:
        $r12 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i11);

        r6 = (java.util.concurrent.Future) $r12;

        z0 = interfaceinvoke r6.<java.util.concurrent.Future: boolean isDone()>();

     label17:
        if z0 != 0 goto label22;

        $b20 = l1 cmp 0L;

        if $b20 > 0 goto label19;

        i17 = 0;

        i16 = virtualinvoke r3.<java.util.ArrayList: int size()>();

     label18:
        if i17 >= i16 goto label27;

        $r17 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i17);

        $r16 = (java.util.concurrent.Future) $r17;

        interfaceinvoke $r16.<java.util.concurrent.Future: boolean cancel(boolean)>(1);

        i17 = i17 + 1;

        goto label18;

     label19:
        $r15 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        interfaceinvoke r6.<java.util.concurrent.Future: java.lang.Object get(long,java.util.concurrent.TimeUnit)>(l1, $r15);

     label20:
        l13 = staticinvoke <java.lang.System: long nanoTime()>();

     label21:
        l1 = l4 - l13;

     label22:
        i11 = i11 + 1;

        goto label15;

     label23:
        $r27 := @caughtexception;

        i15 = 0;

        i14 = virtualinvoke r3.<java.util.ArrayList: int size()>();

     label24:
        if i15 >= i14 goto label27;

        $r32 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i15);

        $r33 = (java.util.concurrent.Future) $r32;

        interfaceinvoke $r33.<java.util.concurrent.Future: boolean cancel(boolean)>(1);

        i15 = i15 + 1;

        goto label24;

     label25:
        goto label27;

     label26:
        throw r4;

     label27:
        return r3;

     label28:
        $r26 := @caughtexception;

        goto label20;

     label29:
        $r31 := @caughtexception;

        goto label20;

        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label07 to label08 with label05;
        catch java.lang.Throwable from label10 to label11 with label05;
        catch java.lang.Throwable from label16 to label17 with label05;
        catch java.util.concurrent.CancellationException from label19 to label20 with label29;
        catch java.util.concurrent.ExecutionException from label19 to label20 with label28;
        catch java.util.concurrent.TimeoutException from label19 to label20 with label23;
        catch java.lang.Throwable from label19 to label20 with label05;
        catch java.lang.Throwable from label20 to label21 with label05;
    }

    public java.lang.Object invokeAny(java.util.Collection) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException
    {
        java.util.concurrent.AbstractExecutorService r0;
        java.util.Collection r1;
        java.lang.Object r3;
        java.util.concurrent.TimeoutException $r4;
        boolean $z0;
        java.lang.AssertionError $r5;

        r0 := @this: java.util.concurrent.AbstractExecutorService;

        r1 := @parameter0: java.util.Collection;

     label1:
        r3 = specialinvoke r0.<java.util.concurrent.AbstractExecutorService: java.lang.Object doInvokeAny(java.util.Collection,boolean,long)>(r1, 0, 0L);

     label2:
        return r3;

     label3:
        $r4 := @caughtexception;

        $z0 = <java.util.concurrent.AbstractExecutorService: boolean $assertionsDisabled>;

        if $z0 != 0 goto label4;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label4:
        return null;

        catch java.util.concurrent.TimeoutException from label1 to label2 with label3;
    }

    public java.lang.Object invokeAny(java.util.Collection, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException
    {
        java.util.concurrent.AbstractExecutorService r0;
        java.util.Collection r1;
        long l0, $l1;
        java.util.concurrent.TimeUnit r2;
        java.lang.Object $r3;

        r0 := @this: java.util.concurrent.AbstractExecutorService;

        r1 := @parameter0: java.util.Collection;

        l0 := @parameter1: long;

        r2 := @parameter2: java.util.concurrent.TimeUnit;

        $l1 = virtualinvoke r2.<java.util.concurrent.TimeUnit: long toNanos(long)>(l0);

        $r3 = specialinvoke r0.<java.util.concurrent.AbstractExecutorService: java.lang.Object doInvokeAny(java.util.Collection,boolean,long)>(r1, 1, $l1);

        return $r3;
    }

    protected java.util.concurrent.RunnableFuture newTaskFor(java.lang.Runnable, java.lang.Object)
    {
        java.util.concurrent.AbstractExecutorService r0;
        java.lang.Runnable r1;
        java.lang.Object r2;
        java.util.concurrent.FutureTask $r3;

        r0 := @this: java.util.concurrent.AbstractExecutorService;

        r1 := @parameter0: java.lang.Runnable;

        r2 := @parameter1: java.lang.Object;

        $r3 = new java.util.concurrent.FutureTask;

        specialinvoke $r3.<java.util.concurrent.FutureTask: void <init>(java.lang.Runnable,java.lang.Object)>(r1, r2);

        return $r3;
    }

    protected java.util.concurrent.RunnableFuture newTaskFor(java.util.concurrent.Callable)
    {
        java.util.concurrent.AbstractExecutorService r0;
        java.util.concurrent.Callable r1;
        java.util.concurrent.FutureTask $r2;

        r0 := @this: java.util.concurrent.AbstractExecutorService;

        r1 := @parameter0: java.util.concurrent.Callable;

        $r2 = new java.util.concurrent.FutureTask;

        specialinvoke $r2.<java.util.concurrent.FutureTask: void <init>(java.util.concurrent.Callable)>(r1);

        return $r2;
    }

    public java.util.concurrent.Future submit(java.lang.Runnable)
    {
        java.util.concurrent.AbstractExecutorService r0;
        java.lang.Runnable r1;
        java.util.concurrent.RunnableFuture r2;
        java.lang.NullPointerException $r3;

        r0 := @this: java.util.concurrent.AbstractExecutorService;

        r1 := @parameter0: java.lang.Runnable;

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>()>();

        throw $r3;

     label1:
        r2 = virtualinvoke r0.<java.util.concurrent.AbstractExecutorService: java.util.concurrent.RunnableFuture newTaskFor(java.lang.Runnable,java.lang.Object)>(r1, null);

        virtualinvoke r0.<java.util.concurrent.AbstractExecutorService: void execute(java.lang.Runnable)>(r2);

        return r2;
    }

    public java.util.concurrent.Future submit(java.lang.Runnable, java.lang.Object)
    {
        java.util.concurrent.AbstractExecutorService r0;
        java.lang.Runnable r1;
        java.lang.Object r2;
        java.util.concurrent.RunnableFuture r3;
        java.lang.NullPointerException $r4;

        r0 := @this: java.util.concurrent.AbstractExecutorService;

        r1 := @parameter0: java.lang.Runnable;

        r2 := @parameter1: java.lang.Object;

        if r1 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>()>();

        throw $r4;

     label1:
        r3 = virtualinvoke r0.<java.util.concurrent.AbstractExecutorService: java.util.concurrent.RunnableFuture newTaskFor(java.lang.Runnable,java.lang.Object)>(r1, r2);

        virtualinvoke r0.<java.util.concurrent.AbstractExecutorService: void execute(java.lang.Runnable)>(r3);

        return r3;
    }

    public java.util.concurrent.Future submit(java.util.concurrent.Callable)
    {
        java.util.concurrent.AbstractExecutorService r0;
        java.util.concurrent.Callable r1;
        java.util.concurrent.RunnableFuture r2;
        java.lang.NullPointerException $r3;

        r0 := @this: java.util.concurrent.AbstractExecutorService;

        r1 := @parameter0: java.util.concurrent.Callable;

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>()>();

        throw $r3;

     label1:
        r2 = virtualinvoke r0.<java.util.concurrent.AbstractExecutorService: java.util.concurrent.RunnableFuture newTaskFor(java.util.concurrent.Callable)>(r1);

        virtualinvoke r0.<java.util.concurrent.AbstractExecutorService: void execute(java.lang.Runnable)>(r2);

        return r2;
    }
}
