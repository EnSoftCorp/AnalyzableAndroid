class java.lang.System$SystemEnvironment extends java.util.AbstractMap
{
    private final java.util.Map map;

    public void <init>(java.util.Map)
    {
        java.lang.System$SystemEnvironment r0;
        java.util.Map r1, $r2;

        r0 := @this: java.lang.System$SystemEnvironment;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<java.util.AbstractMap: void <init>()>();

        $r2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(r1);

        r0.<java.lang.System$SystemEnvironment: java.util.Map map> = $r2;

        return;
    }

    private java.lang.String toNonNullString(java.lang.Object)
    {
        java.lang.System$SystemEnvironment r0;
        java.lang.Object r1;
        java.lang.String $r2;
        java.lang.NullPointerException $r3;

        r0 := @this: java.lang.System$SystemEnvironment;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("o == null");

        throw $r3;

     label1:
        $r2 = (java.lang.String) r1;

        return $r2;
    }

    public boolean containsKey(java.lang.Object)
    {
        java.lang.System$SystemEnvironment r0;
        java.lang.Object r1;
        java.util.Map $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: java.lang.System$SystemEnvironment;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<java.lang.System$SystemEnvironment: java.util.Map map>;

        $r3 = specialinvoke r0.<java.lang.System$SystemEnvironment: java.lang.String toNonNullString(java.lang.Object)>(r1);

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r3);

        return $z0;
    }

    public boolean containsValue(java.lang.Object)
    {
        java.lang.System$SystemEnvironment r0;
        java.lang.Object r1;
        java.util.Map $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: java.lang.System$SystemEnvironment;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<java.lang.System$SystemEnvironment: java.util.Map map>;

        $r3 = specialinvoke r0.<java.lang.System$SystemEnvironment: java.lang.String toNonNullString(java.lang.Object)>(r1);

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsValue(java.lang.Object)>($r3);

        return $z0;
    }

    public java.util.Set entrySet()
    {
        java.lang.System$SystemEnvironment r0;
        java.util.Map $r1;
        java.util.Set $r2;

        r0 := @this: java.lang.System$SystemEnvironment;

        $r1 = r0.<java.lang.System$SystemEnvironment: java.util.Map map>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        return $r2;
    }

    public volatile java.lang.Object get(java.lang.Object)
    {
        java.lang.System$SystemEnvironment r0;
        java.lang.Object r1;
        java.lang.String $r2;

        r0 := @this: java.lang.System$SystemEnvironment;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<java.lang.System$SystemEnvironment: java.lang.String get(java.lang.Object)>(r1);

        return $r2;
    }

    public java.lang.String get(java.lang.Object)
    {
        java.lang.System$SystemEnvironment r0;
        java.lang.Object r1, $r4;
        java.util.Map $r2;
        java.lang.String $r3, $r5;

        r0 := @this: java.lang.System$SystemEnvironment;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<java.lang.System$SystemEnvironment: java.util.Map map>;

        $r3 = specialinvoke r0.<java.lang.System$SystemEnvironment: java.lang.String toNonNullString(java.lang.Object)>(r1);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (java.lang.String) $r4;

        return $r5;
    }
}
