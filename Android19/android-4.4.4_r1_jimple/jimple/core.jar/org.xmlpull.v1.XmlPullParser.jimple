public interface  org.xmlpull.v1.XmlPullParser extends java.lang.Object
{
    public static final int CDSECT;
    public static final int COMMENT;
    public static final int DOCDECL;
    public static final int END_DOCUMENT;
    public static final int END_TAG;
    public static final int ENTITY_REF;
    public static final java.lang.String FEATURE_PROCESS_DOCDECL;
    public static final java.lang.String FEATURE_PROCESS_NAMESPACES;
    public static final java.lang.String FEATURE_REPORT_NAMESPACE_ATTRIBUTES;
    public static final java.lang.String FEATURE_VALIDATION;
    public static final int IGNORABLE_WHITESPACE;
    public static final java.lang.String NO_NAMESPACE;
    public static final int PROCESSING_INSTRUCTION;
    public static final int START_DOCUMENT;
    public static final int START_TAG;
    public static final int TEXT;
    public static final java.lang.String[] TYPES;

    static void <clinit>()
    {
        java.lang.String[] $r0;

        <org.xmlpull.v1.XmlPullParser: int TEXT> = 4;

        <org.xmlpull.v1.XmlPullParser: int START_TAG> = 2;

        <org.xmlpull.v1.XmlPullParser: int START_DOCUMENT> = 0;

        <org.xmlpull.v1.XmlPullParser: int PROCESSING_INSTRUCTION> = 8;

        <org.xmlpull.v1.XmlPullParser: java.lang.String NO_NAMESPACE> = "";

        <org.xmlpull.v1.XmlPullParser: int IGNORABLE_WHITESPACE> = 7;

        <org.xmlpull.v1.XmlPullParser: java.lang.String FEATURE_VALIDATION> = "http://xmlpull.org/v1/doc/features.html#validation";

        <org.xmlpull.v1.XmlPullParser: java.lang.String FEATURE_REPORT_NAMESPACE_ATTRIBUTES> = "http://xmlpull.org/v1/doc/features.html#report-namespace-prefixes";

        <org.xmlpull.v1.XmlPullParser: java.lang.String FEATURE_PROCESS_NAMESPACES> = "http://xmlpull.org/v1/doc/features.html#process-namespaces";

        <org.xmlpull.v1.XmlPullParser: java.lang.String FEATURE_PROCESS_DOCDECL> = "http://xmlpull.org/v1/doc/features.html#process-docdecl";

        <org.xmlpull.v1.XmlPullParser: int ENTITY_REF> = 6;

        <org.xmlpull.v1.XmlPullParser: int END_TAG> = 3;

        <org.xmlpull.v1.XmlPullParser: int END_DOCUMENT> = 1;

        <org.xmlpull.v1.XmlPullParser: int DOCDECL> = 10;

        <org.xmlpull.v1.XmlPullParser: int COMMENT> = 9;

        <org.xmlpull.v1.XmlPullParser: int CDSECT> = 5;

        $r0 = newarray (java.lang.String)[11];

        $r0[0] = "START_DOCUMENT";

        $r0[1] = "END_DOCUMENT";

        $r0[2] = "START_TAG";

        $r0[3] = "END_TAG";

        $r0[4] = "TEXT";

        $r0[5] = "CDSECT";

        $r0[6] = "ENTITY_REF";

        $r0[7] = "IGNORABLE_WHITESPACE";

        $r0[8] = "PROCESSING_INSTRUCTION";

        $r0[9] = "COMMENT";

        $r0[10] = "DOCDECL";

        <org.xmlpull.v1.XmlPullParser: java.lang.String[] TYPES> = $r0;

        return;
    }

    public abstract void defineEntityReplacementText(java.lang.String, java.lang.String) throws org.xmlpull.v1.XmlPullParserException;

    public abstract int getAttributeCount();

    public abstract java.lang.String getAttributeName(int);

    public abstract java.lang.String getAttributeNamespace(int);

    public abstract java.lang.String getAttributePrefix(int);

    public abstract java.lang.String getAttributeType(int);

    public abstract java.lang.String getAttributeValue(int);

    public abstract java.lang.String getAttributeValue(java.lang.String, java.lang.String);

    public abstract int getColumnNumber();

    public abstract int getDepth();

    public abstract int getEventType() throws org.xmlpull.v1.XmlPullParserException;

    public abstract boolean getFeature(java.lang.String);

    public abstract java.lang.String getInputEncoding();

    public abstract int getLineNumber();

    public abstract java.lang.String getName();

    public abstract java.lang.String getNamespace();

    public abstract java.lang.String getNamespace(java.lang.String);

    public abstract int getNamespaceCount(int) throws org.xmlpull.v1.XmlPullParserException;

    public abstract java.lang.String getNamespacePrefix(int) throws org.xmlpull.v1.XmlPullParserException;

    public abstract java.lang.String getNamespaceUri(int) throws org.xmlpull.v1.XmlPullParserException;

    public abstract java.lang.String getPositionDescription();

    public abstract java.lang.String getPrefix();

    public abstract java.lang.Object getProperty(java.lang.String);

    public abstract java.lang.String getText();

    public abstract char[] getTextCharacters(int[]);

    public abstract boolean isAttributeDefault(int);

    public abstract boolean isEmptyElementTag() throws org.xmlpull.v1.XmlPullParserException;

    public abstract boolean isWhitespace() throws org.xmlpull.v1.XmlPullParserException;

    public abstract int next() throws org.xmlpull.v1.XmlPullParserException, java.io.IOException;

    public abstract int nextTag() throws org.xmlpull.v1.XmlPullParserException, java.io.IOException;

    public abstract java.lang.String nextText() throws org.xmlpull.v1.XmlPullParserException, java.io.IOException;

    public abstract int nextToken() throws org.xmlpull.v1.XmlPullParserException, java.io.IOException;

    public abstract void require(int, java.lang.String, java.lang.String) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException;

    public abstract void setFeature(java.lang.String, boolean) throws org.xmlpull.v1.XmlPullParserException;

    public abstract void setInput(java.io.InputStream, java.lang.String) throws org.xmlpull.v1.XmlPullParserException;

    public abstract void setInput(java.io.Reader) throws org.xmlpull.v1.XmlPullParserException;

    public abstract void setProperty(java.lang.String, java.lang.Object) throws org.xmlpull.v1.XmlPullParserException;
}
