public class java.util.jar.Attributes extends java.lang.Object implements java.lang.Cloneable, java.util.Map
{
    protected java.util.Map map;

    public void <init>()
    {
        java.util.jar.Attributes r0;
        java.util.HashMap $r1;

        r0 := @this: java.util.jar.Attributes;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<java.util.jar.Attributes: java.util.Map map> = $r1;

        return;
    }

    public void <init>(int)
    {
        java.util.jar.Attributes r0;
        int i0;
        java.util.HashMap $r1;

        r0 := @this: java.util.jar.Attributes;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>(int)>(i0);

        r0.<java.util.jar.Attributes: java.util.Map map> = $r1;

        return;
    }

    public void <init>(java.util.jar.Attributes)
    {
        java.util.jar.Attributes r0, r1;
        java.util.Map $r2, $r5;
        java.util.HashMap $r3;
        java.lang.Object $r4;

        r0 := @this: java.util.jar.Attributes;

        r1 := @parameter0: java.util.jar.Attributes;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r1.<java.util.jar.Attributes: java.util.Map map>;

        $r3 = (java.util.HashMap) $r2;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object clone()>();

        $r5 = (java.util.Map) $r4;

        r0.<java.util.jar.Attributes: java.util.Map map> = $r5;

        return;
    }

    public void clear()
    {
        java.util.jar.Attributes r0;
        java.util.Map $r1;

        r0 := @this: java.util.jar.Attributes;

        $r1 = r0.<java.util.jar.Attributes: java.util.Map map>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        return;
    }

    public java.lang.Object clone()
    {
        java.util.jar.Attributes r0, r2;
        java.lang.CloneNotSupportedException r1, $r8;
        java.lang.Object $r3, $r6;
        java.util.Map $r4, $r7;
        java.util.HashMap $r5;
        java.lang.AssertionError $r9;

        r0 := @this: java.util.jar.Attributes;

     label1:
        $r3 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r2 = (java.util.jar.Attributes) $r3;

     label2:
        $r4 = r0.<java.util.jar.Attributes: java.util.Map map>;

        $r5 = (java.util.HashMap) $r4;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object clone()>();

        $r7 = (java.util.Map) $r6;

        r2.<java.util.jar.Attributes: java.util.Map map> = $r7;

        return r2;

     label3:
        $r8 := @caughtexception;

        r1 = $r8;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>(java.lang.Object)>(r1);

        throw $r9;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public boolean containsKey(java.lang.Object)
    {
        java.util.jar.Attributes r0;
        java.lang.Object r1;
        java.util.Map $r2;
        boolean $z0;

        r0 := @this: java.util.jar.Attributes;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<java.util.jar.Attributes: java.util.Map map>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean containsValue(java.lang.Object)
    {
        java.util.jar.Attributes r0;
        java.lang.Object r1;
        java.util.Map $r2;
        boolean $z0;

        r0 := @this: java.util.jar.Attributes;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<java.util.jar.Attributes: java.util.Map map>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsValue(java.lang.Object)>(r1);

        return $z0;
    }

    public java.util.Set entrySet()
    {
        java.util.jar.Attributes r0;
        java.util.Map $r1;
        java.util.Set $r2;

        r0 := @this: java.util.jar.Attributes;

        $r1 = r0.<java.util.jar.Attributes: java.util.Map map>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.jar.Attributes r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.util.Map $r3, $r4;

        r0 := @this: java.util.jar.Attributes;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof java.util.jar.Attributes;

        if $z0 == 0 goto label2;

        $r4 = r0.<java.util.jar.Attributes: java.util.Map map>;

        $r2 = (java.util.jar.Attributes) r1;

        $r3 = $r2.<java.util.jar.Attributes: java.util.Map map>;

        $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        return $z1;

     label2:
        return 0;
    }

    public java.lang.Object get(java.lang.Object)
    {
        java.util.jar.Attributes r0;
        java.lang.Object r1, $r3;
        java.util.Map $r2;

        r0 := @this: java.util.jar.Attributes;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<java.util.jar.Attributes: java.util.Map map>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        return $r3;
    }

    public java.lang.String getValue(java.lang.String)
    {
        java.util.jar.Attributes r0;
        java.lang.String r1, $r3;
        java.util.jar.Attributes$Name $r2;

        r0 := @this: java.util.jar.Attributes;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.util.jar.Attributes$Name;

        specialinvoke $r2.<java.util.jar.Attributes$Name: void <init>(java.lang.String)>(r1);

        $r3 = virtualinvoke r0.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r2);

        return $r3;
    }

    public java.lang.String getValue(java.util.jar.Attributes$Name)
    {
        java.util.jar.Attributes r0;
        java.util.jar.Attributes$Name r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String $r4;

        r0 := @this: java.util.jar.Attributes;

        r1 := @parameter0: java.util.jar.Attributes$Name;

        $r2 = r0.<java.util.jar.Attributes: java.util.Map map>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public int hashCode()
    {
        java.util.jar.Attributes r0;
        java.util.Map $r1;
        int $i0;

        r0 := @this: java.util.jar.Attributes;

        $r1 = r0.<java.util.jar.Attributes: java.util.Map map>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public boolean isEmpty()
    {
        java.util.jar.Attributes r0;
        java.util.Map $r1;
        boolean $z0;

        r0 := @this: java.util.jar.Attributes;

        $r1 = r0.<java.util.jar.Attributes: java.util.Map map>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        return $z0;
    }

    public java.util.Set keySet()
    {
        java.util.jar.Attributes r0;
        java.util.Map $r1;
        java.util.Set $r2;

        r0 := @this: java.util.jar.Attributes;

        $r1 = r0.<java.util.jar.Attributes: java.util.Map map>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        return $r2;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        java.util.jar.Attributes r0;
        java.lang.Object r1, r2, $r6;
        java.lang.String $r3;
        java.util.jar.Attributes$Name $r4;
        java.util.Map $r5;

        r0 := @this: java.util.jar.Attributes;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r5 = r0.<java.util.jar.Attributes: java.util.Map map>;

        $r4 = (java.util.jar.Attributes$Name) r1;

        $r3 = (java.lang.String) r2;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r3);

        return $r6;
    }

    public void putAll(java.util.Map)
    {
        java.util.jar.Attributes r0;
        java.util.Map r1, $r9;
        java.lang.ClassCastException $r2;
        java.lang.StringBuilder $r3, $r6, $r7;
        java.lang.Class $r4;
        java.lang.String $r5, $r8;
        boolean $z0;

        r0 := @this: java.util.jar.Attributes;

        r1 := @parameter0: java.util.Map;

        if r1 == null goto label1;

        $z0 = r1 instanceof java.util.jar.Attributes;

        if $z0 != 0 goto label2;

     label1:
        $r2 = new java.lang.ClassCastException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not an Attributes");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.ClassCastException: void <init>(java.lang.String)>($r8);

        throw $r2;

     label2:
        $r9 = r0.<java.util.jar.Attributes: java.util.Map map>;

        interfaceinvoke $r9.<java.util.Map: void putAll(java.util.Map)>(r1);

        return;
    }

    public java.lang.String putValue(java.lang.String, java.lang.String)
    {
        java.util.jar.Attributes r0;
        java.lang.String r1, r2, $r6;
        java.util.jar.Attributes$Name $r3;
        java.util.Map $r4;
        java.lang.Object $r5;

        r0 := @this: java.util.jar.Attributes;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r4 = r0.<java.util.jar.Attributes: java.util.Map map>;

        $r3 = new java.util.jar.Attributes$Name;

        specialinvoke $r3.<java.util.jar.Attributes$Name: void <init>(java.lang.String)>(r1);

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r2);

        $r6 = (java.lang.String) $r5;

        return $r6;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        java.util.jar.Attributes r0;
        java.lang.Object r1, $r3;
        java.util.Map $r2;

        r0 := @this: java.util.jar.Attributes;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<java.util.jar.Attributes: java.util.Map map>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        return $r3;
    }

    public int size()
    {
        java.util.jar.Attributes r0;
        java.util.Map $r1;
        int $i0;

        r0 := @this: java.util.jar.Attributes;

        $r1 = r0.<java.util.jar.Attributes: java.util.Map map>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        return $i0;
    }

    public java.util.Collection values()
    {
        java.util.jar.Attributes r0;
        java.util.Map $r1;
        java.util.Collection $r2;

        r0 := @this: java.util.jar.Attributes;

        $r1 = r0.<java.util.jar.Attributes: java.util.Map map>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        return $r2;
    }
}
