public final class libcore.reflect.AnnotationFactory extends java.lang.Object implements java.lang.reflect.InvocationHandler, java.io.Serializable
{
    private static final transient java.util.Map cache;
    private libcore.reflect.AnnotationMember[] elements;
    private final java.lang.Class klazz;

    static void <clinit>()
    {
        java.util.WeakHashMap $r0;

        $r0 = new java.util.WeakHashMap;

        specialinvoke $r0.<java.util.WeakHashMap: void <init>()>();

        <libcore.reflect.AnnotationFactory: java.util.Map cache> = $r0;

        return;
    }

    private void <init>(java.lang.Class, libcore.reflect.AnnotationMember[])
    {
        libcore.reflect.AnnotationFactory r0;
        java.lang.Class r1, $r5;
        libcore.reflect.AnnotationMember[] r2, r3, $r6, $r7, $r9, $r13;
        int i0, i1, i2, $i3, $i4;
        libcore.reflect.AnnotationMember r4, $r8, $r11, $r14, $r15;
        java.lang.String $r10, $r12;
        boolean $z0;

        r0 := @this: libcore.reflect.AnnotationFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: libcore.reflect.AnnotationMember[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<libcore.reflect.AnnotationFactory: java.lang.Class klazz> = r1;

        $r5 = r0.<libcore.reflect.AnnotationFactory: java.lang.Class klazz>;

        r3 = staticinvoke <libcore.reflect.AnnotationFactory: libcore.reflect.AnnotationMember[] getElementsDescription(java.lang.Class)>($r5);

        if r2 != null goto label2;

        r0.<libcore.reflect.AnnotationFactory: libcore.reflect.AnnotationMember[] elements> = r3;

     label1:
        return;

     label2:
        $i3 = lengthof r3;

        $r6 = newarray (libcore.reflect.AnnotationMember)[$i3];

        r0.<libcore.reflect.AnnotationFactory: libcore.reflect.AnnotationMember[] elements> = $r6;

        $r7 = r0.<libcore.reflect.AnnotationFactory: libcore.reflect.AnnotationMember[] elements>;

        $i4 = lengthof $r7;

        i0 = -1 + $i4;

     label3:
        if i0 < 0 goto label1;

        i1 = lengthof r2;

        i2 = 0;

     label4:
        if i2 >= i1 goto label7;

        r4 = r2[i2];

        $r12 = r4.<libcore.reflect.AnnotationMember: java.lang.String name>;

        $r11 = r3[i0];

        $r10 = $r11.<libcore.reflect.AnnotationMember: java.lang.String name>;

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z0 == 0 goto label6;

        $r13 = r0.<libcore.reflect.AnnotationFactory: libcore.reflect.AnnotationMember[] elements>;

        $r14 = r3[i0];

        $r15 = virtualinvoke r4.<libcore.reflect.AnnotationMember: libcore.reflect.AnnotationMember setDefinition(libcore.reflect.AnnotationMember)>($r14);

        $r13[i0] = $r15;

     label5:
        i0 = i0 + -1;

        goto label3;

     label6:
        i2 = i2 + 1;

        goto label4;

     label7:
        $r9 = r0.<libcore.reflect.AnnotationFactory: libcore.reflect.AnnotationMember[] elements>;

        $r8 = r3[i0];

        $r9[i0] = $r8;

        goto label5;
    }

    public static java.lang.annotation.Annotation createAnnotation(java.lang.Class, libcore.reflect.AnnotationMember[])
    {
        java.lang.Class r0;
        libcore.reflect.AnnotationMember[] r1;
        libcore.reflect.AnnotationFactory r2, $r3;
        java.lang.ClassLoader $r4;
        java.lang.Class[] $r5;
        java.lang.Object $r6;
        java.lang.annotation.Annotation $r7;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: libcore.reflect.AnnotationMember[];

        $r3 = new libcore.reflect.AnnotationFactory;

        specialinvoke $r3.<libcore.reflect.AnnotationFactory: void <init>(java.lang.Class,libcore.reflect.AnnotationMember[])>(r0, r1);

        r2 = $r3;

        $r4 = virtualinvoke r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r5 = newarray (java.lang.Class)[1];

        $r5[0] = r0;

        $r6 = staticinvoke <java.lang.reflect.Proxy: java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)>($r4, $r5, r2);

        $r7 = (java.lang.annotation.Annotation) $r6;

        return $r7;
    }

    public static libcore.reflect.AnnotationMember[] getElementsDescription(java.lang.Class)
    {
        java.lang.Class r0, r10;
        java.util.Map r1, r6, $r12, $r14;
        java.lang.Throwable r2, r7, r11, $r25, $r26, $r27;
        libcore.reflect.AnnotationMember[] r3, r5;
        java.lang.reflect.Method[] r4;
        int i0, $i1, $i2;
        java.lang.reflect.Method r8;
        java.lang.String r9, $r21, $r23;
        java.lang.Object $r13, $r16;
        boolean $z0;
        libcore.reflect.AnnotationMember $r17, $r24;
        java.lang.StringBuilder $r18, $r20, $r22;
        java.lang.IllegalArgumentException $r19;

        r0 := @parameter0: java.lang.Class;

        r1 = <libcore.reflect.AnnotationFactory: java.util.Map cache>;

        entermonitor r1;

     label01:
        $r12 = <libcore.reflect.AnnotationFactory: java.util.Map cache>;

        $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r3 = (libcore.reflect.AnnotationMember[]) $r13;

     label02:
        if r3 == null goto label05;

     label03:
        exitmonitor r1;

     label04:
        return r3;

     label05:
        exitmonitor r1;

     label06:
        $z0 = virtualinvoke r0.<java.lang.Class: boolean isAnnotation()>();

        if $z0 != 0 goto label10;

        $r19 = new java.lang.IllegalArgumentException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Type is not annotation: ");

        $r23 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21);

        throw $r19;

     label07:
        $r25 := @caughtexception;

        r2 = $r25;

     label08:
        exitmonitor r1;

     label09:
        throw r2;

     label10:
        r4 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();

        $i2 = lengthof r4;

        r5 = newarray (libcore.reflect.AnnotationMember)[$i2];

        i0 = 0;

     label11:
        $i1 = lengthof r4;

        if i0 >= $i1 goto label15;

        r8 = r4[i0];

        r9 = virtualinvoke r8.<java.lang.reflect.Method: java.lang.String getName()>();

        r10 = virtualinvoke r8.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

     label12:
        $r17 = new libcore.reflect.AnnotationMember;

        $r16 = virtualinvoke r8.<java.lang.reflect.Method: java.lang.Object getDefaultValue()>();

        specialinvoke $r17.<libcore.reflect.AnnotationMember: void <init>(java.lang.String,java.lang.Object,java.lang.Class,java.lang.reflect.Method)>(r9, $r16, r10, r8);

        r5[i0] = $r17;

     label13:
        i0 = i0 + 1;

        goto label11;

     label14:
        $r26 := @caughtexception;

        r11 = $r26;

        $r24 = new libcore.reflect.AnnotationMember;

        specialinvoke $r24.<libcore.reflect.AnnotationMember: void <init>(java.lang.String,java.lang.Object,java.lang.Class,java.lang.reflect.Method)>(r9, r11, r10, r8);

        r5[i0] = $r24;

        goto label13;

     label15:
        r6 = <libcore.reflect.AnnotationFactory: java.util.Map cache>;

        entermonitor r6;

     label16:
        $r14 = <libcore.reflect.AnnotationFactory: java.util.Map cache>;

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r5);

        exitmonitor r6;

     label17:
        return r5;

     label18:
        $r27 := @caughtexception;

        r7 = $r27;

     label19:
        exitmonitor r6;

     label20:
        throw r7;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        libcore.reflect.AnnotationFactory r0;
        java.io.ObjectInputStream r1;
        libcore.reflect.AnnotationMember[] r2, r3, $r10, $r11;
        java.util.ArrayList r4, $r9;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11;
        libcore.reflect.AnnotationMember r5, r6, r7, $r15, $r16;
        java.lang.Class $r8;
        java.lang.Object[] $r12;
        java.lang.String $r13, $r14, $r17, $r18;
        boolean $z1, $z4;

        r0 := @this: libcore.reflect.AnnotationFactory;

        r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        $r8 = r0.<libcore.reflect.AnnotationFactory: java.lang.Class klazz>;

        r2 = staticinvoke <libcore.reflect.AnnotationFactory: libcore.reflect.AnnotationMember[] getElementsDescription(java.lang.Class)>($r8);

        r3 = r0.<libcore.reflect.AnnotationFactory: libcore.reflect.AnnotationMember[] elements>;

        $r9 = new java.util.ArrayList;

        $i10 = lengthof r2;

        $i8 = lengthof r3;

        $i9 = $i10 + $i8;

        specialinvoke $r9.<java.util.ArrayList: void <init>(int)>($i9);

        r4 = $r9;

        i0 = lengthof r3;

        i1 = 0;

     label01:
        if i1 >= i0 goto label06;

        r7 = r3[i1];

        i7 = lengthof r2;

        i6 = 0;

     label02:
        if i6 >= i7 goto label05;

        $r15 = r2[i6];

        $r18 = $r15.<libcore.reflect.AnnotationMember: java.lang.String name>;

        $r17 = r7.<libcore.reflect.AnnotationMember: java.lang.String name>;

        $z4 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z4 == 0 goto label04;

     label03:
        i1 = i1 + 1;

        goto label01;

     label04:
        i6 = i6 + 1;

        goto label02;

     label05:
        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r7);

        goto label03;

     label06:
        i2 = lengthof r2;

        i3 = 0;

     label07:
        if i3 >= i2 goto label12;

        r5 = r2[i3];

        i4 = lengthof r3;

        i5 = 0;

     label08:
        if i5 >= i4 goto label11;

        r6 = r3[i5];

        $r14 = r6.<libcore.reflect.AnnotationMember: java.lang.String name>;

        $r13 = r5.<libcore.reflect.AnnotationMember: java.lang.String name>;

        $z1 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z1 == 0 goto label10;

        $r16 = virtualinvoke r6.<libcore.reflect.AnnotationMember: libcore.reflect.AnnotationMember setDefinition(libcore.reflect.AnnotationMember)>(r5);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r16);

     label09:
        i3 = i3 + 1;

        goto label07;

     label10:
        i5 = i5 + 1;

        goto label08;

     label11:
        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r5);

        goto label09;

     label12:
        $i11 = interfaceinvoke r4.<java.util.List: int size()>();

        $r10 = newarray (libcore.reflect.AnnotationMember)[$i11];

        $r12 = interfaceinvoke r4.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10);

        $r11 = (libcore.reflect.AnnotationMember[]) $r12;

        r0.<libcore.reflect.AnnotationFactory: libcore.reflect.AnnotationMember[] elements> = $r11;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        libcore.reflect.AnnotationFactory r0, r9;
        java.lang.Object r1, r5, r6, r7, $r18;
        libcore.reflect.AnnotationMember[] r2, r10, r12, $r20, $r21;
        int i0, i1, i2, i3, i4, i5, $i8, $i9;
        libcore.reflect.AnnotationMember r3, r11, $r23;
        java.lang.reflect.InvocationHandler r8;
        java.lang.Class $r13, $r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        char $c6, $c7;
        java.lang.reflect.Method $r15, $r16, $r19;
        java.lang.Object[] $r17;
        java.lang.Throwable $r22;

        r0 := @this: libcore.reflect.AnnotationFactory;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label01;

        return 1;

     label01:
        $r13 = r0.<libcore.reflect.AnnotationFactory: java.lang.Class klazz>;

        $z0 = virtualinvoke $r13.<java.lang.Class: boolean isInstance(java.lang.Object)>(r1);

        if $z0 != 0 goto label02;

        return 0;

     label02:
        $r14 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = staticinvoke <java.lang.reflect.Proxy: boolean isProxyClass(java.lang.Class)>($r14);

        if $z1 == 0 goto label09;

        r8 = staticinvoke <java.lang.reflect.Proxy: java.lang.reflect.InvocationHandler getInvocationHandler(java.lang.Object)>(r1);

        $z4 = r8 instanceof libcore.reflect.AnnotationFactory;

        if $z4 == 0 goto label09;

        r9 = (libcore.reflect.AnnotationFactory) r8;

        $r20 = r0.<libcore.reflect.AnnotationFactory: libcore.reflect.AnnotationMember[] elements>;

        $i9 = lengthof $r20;

        $r21 = r9.<libcore.reflect.AnnotationFactory: libcore.reflect.AnnotationMember[] elements>;

        $i8 = lengthof $r21;

        if $i9 == $i8 goto label03;

        return 0;

     label03:
        r10 = r0.<libcore.reflect.AnnotationFactory: libcore.reflect.AnnotationMember[] elements>;

        i2 = lengthof r10;

        i3 = 0;

     label04:
        if i3 >= i2 goto label08;

        r11 = r10[i3];

        r12 = r9.<libcore.reflect.AnnotationFactory: libcore.reflect.AnnotationMember[] elements>;

        i4 = lengthof r12;

        i5 = 0;

     label05:
        if i5 >= i4 goto label07;

        $r23 = r12[i5];

        $z6 = virtualinvoke r11.<libcore.reflect.AnnotationMember: boolean equals(java.lang.Object)>($r23);

        if $z6 == 0 goto label06;

        i3 = i3 + 1;

        goto label04;

     label06:
        i5 = i5 + 1;

        goto label05;

     label07:
        return 0;

     label08:
        return 1;

     label09:
        r2 = r0.<libcore.reflect.AnnotationFactory: libcore.reflect.AnnotationMember[] elements>;

        i0 = lengthof r2;

        i1 = 0;

     label10:
        if i1 >= i0 goto label22;

        r3 = r2[i1];

        $c6 = r3.<libcore.reflect.AnnotationMember: char tag>;

        if $c6 != 33 goto label11;

        return 0;

     label11:
        $r15 = r3.<libcore.reflect.AnnotationMember: java.lang.reflect.Method definingMethod>;

        $z2 = virtualinvoke $r15.<java.lang.reflect.Method: boolean isAccessible()>();

        if $z2 != 0 goto label12;

        $r19 = r3.<libcore.reflect.AnnotationMember: java.lang.reflect.Method definingMethod>;

        virtualinvoke $r19.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label12:
        $r16 = r3.<libcore.reflect.AnnotationMember: java.lang.reflect.Method definingMethod>;

        $r17 = newarray (java.lang.Object)[0];

        r5 = virtualinvoke $r16.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r17);

     label13:
        if r5 == null goto label18;

     label14:
        $c7 = r3.<libcore.reflect.AnnotationMember: char tag>;

        if $c7 != 91 goto label16;

        $z5 = virtualinvoke r3.<libcore.reflect.AnnotationMember: boolean equalArrayValue(java.lang.Object)>(r5);

        if $z5 != 0 goto label21;

     label15:
        return 0;

     label16:
        $r18 = r3.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $z3 = virtualinvoke $r18.<java.lang.Object: boolean equals(java.lang.Object)>(r5);

        if $z3 != 0 goto label21;

     label17:
        return 0;

     label18:
        r6 = r3.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        r7 = <libcore.reflect.AnnotationMember: java.lang.Object NO_VALUE>;

     label19:
        if r6 == r7 goto label21;

        return 0;

     label20:
        $r22 := @caughtexception;

        return 0;

     label21:
        i1 = i1 + 1;

        goto label10;

     label22:
        return 1;

        catch java.lang.Throwable from label11 to label12 with label20;
        catch java.lang.Throwable from label12 to label13 with label20;
        catch java.lang.Throwable from label14 to label15 with label20;
        catch java.lang.Throwable from label16 to label17 with label20;
        catch java.lang.Throwable from label18 to label19 with label20;
    }

    public int hashCode()
    {
        libcore.reflect.AnnotationFactory r0;
        int i0, i1, i2, $i3;
        libcore.reflect.AnnotationMember[] r1;
        libcore.reflect.AnnotationMember $r2;

        r0 := @this: libcore.reflect.AnnotationFactory;

        i0 = 0;

        r1 = r0.<libcore.reflect.AnnotationFactory: libcore.reflect.AnnotationMember[] elements>;

        i1 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r2 = r1[i2];

        $i3 = virtualinvoke $r2.<libcore.reflect.AnnotationMember: int hashCode()>();

        i0 = i0 + $i3;

        i2 = i2 + 1;

        goto label1;

     label2:
        return i0;
    }

    public java.lang.Object invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]) throws java.lang.Throwable
    {
        libcore.reflect.AnnotationFactory r0;
        java.lang.Object r1, r8, $r17;
        java.lang.reflect.Method r2, $r23;
        java.lang.Object[] r3;
        java.lang.String r4, $r15, $r16, $r18, $r20, $r21, $r22, $r28, $r29;
        java.lang.Class[] r5;
        libcore.reflect.AnnotationMember[] r6;
        int i0, i1, $i2, $i3, $i4;
        libcore.reflect.AnnotationMember r7, r9;
        java.lang.StringBuilder $r10, $r12, $r13;
        java.lang.IllegalArgumentException $r11, $r24;
        java.lang.Class $r14, $r26;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.Boolean $r19;
        java.lang.annotation.IncompleteAnnotationException $r25;
        java.lang.Integer $r27;

        r0 := @this: libcore.reflect.AnnotationFactory;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.reflect.Method;

        r3 := @parameter2: java.lang.Object[];

        r4 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.String getName()>();

        r5 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i2 = lengthof r5;

        if $i2 != 0 goto label10;

        $r18 = "annotationType";

        $z2 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z2 == 0 goto label02;

        r8 = r0.<libcore.reflect.AnnotationFactory: java.lang.Class klazz>;

     label01:
        return r8;

     label02:
        $r20 = "toString";

        $z3 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z3 == 0 goto label03;

        $r29 = virtualinvoke r0.<libcore.reflect.AnnotationFactory: java.lang.String toString()>();

        return $r29;

     label03:
        $r21 = "hashCode";

        $z4 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z4 == 0 goto label04;

        $i4 = virtualinvoke r0.<libcore.reflect.AnnotationFactory: int hashCode()>();

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        return $r27;

     label04:
        r6 = r0.<libcore.reflect.AnnotationFactory: libcore.reflect.AnnotationMember[] elements>;

        i0 = lengthof r6;

        i1 = 0;

     label05:
        r7 = null;

        if i1 >= i0 goto label06;

        r9 = r6[i1];

        $r28 = r9.<libcore.reflect.AnnotationMember: java.lang.String name>;

        $z6 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r28);

        if $z6 == 0 goto label08;

        r7 = r9;

     label06:
        if r7 == null goto label07;

        $r23 = r7.<libcore.reflect.AnnotationMember: java.lang.reflect.Method definingMethod>;

        $z5 = virtualinvoke r2.<java.lang.reflect.Method: boolean equals(java.lang.Object)>($r23);

        if $z5 != 0 goto label09;

     label07:
        $r24 = new java.lang.IllegalArgumentException;

        $r22 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.String toString()>();

        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);

        throw $r24;

     label08:
        i1 = i1 + 1;

        goto label05;

     label09:
        r8 = virtualinvoke r7.<libcore.reflect.AnnotationMember: java.lang.Object validateValue()>();

        if r8 != null goto label01;

        $r25 = new java.lang.annotation.IncompleteAnnotationException;

        $r26 = r0.<libcore.reflect.AnnotationFactory: java.lang.Class klazz>;

        specialinvoke $r25.<java.lang.annotation.IncompleteAnnotationException: void <init>(java.lang.Class,java.lang.String)>($r26, r4);

        throw $r25;

     label10:
        $i3 = lengthof r5;

        if $i3 != 1 goto label11;

        $r14 = r5[0];

        if $r14 != class "java/lang/Object" goto label11;

        $r16 = "equals";

        $z0 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label11;

        $r17 = r3[0];

        $z1 = virtualinvoke r0.<libcore.reflect.AnnotationFactory: boolean equals(java.lang.Object)>($r17);

        $r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        return $r19;

     label11:
        $r11 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid method for annotation type: ");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r11;
    }

    public java.lang.String toString()
    {
        libcore.reflect.AnnotationFactory r0;
        java.lang.StringBuilder r1, $r2;
        int i0, $i1;
        java.lang.Class $r4;
        java.lang.String $r5, $r10;
        libcore.reflect.AnnotationMember[] $r8, $r12;
        libcore.reflect.AnnotationMember $r11;

        r0 := @this: libcore.reflect.AnnotationFactory;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(64);

        $r4 = r0.<libcore.reflect.AnnotationFactory: java.lang.Class klazz>;

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        i0 = 0;

     label1:
        $r8 = r0.<libcore.reflect.AnnotationFactory: libcore.reflect.AnnotationMember[] elements>;

        $i1 = lengthof $r8;

        if i0 >= $i1 goto label3;

        if i0 == 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label2:
        $r12 = r0.<libcore.reflect.AnnotationFactory: libcore.reflect.AnnotationMember[] elements>;

        $r11 = $r12[i0];

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        i0 = i0 + 1;

        goto label1;

     label3:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r10 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }
}
