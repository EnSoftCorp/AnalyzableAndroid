public class org.apache.harmony.security.asn1.BerOutputStream extends java.lang.Object
{
    public java.lang.Object content;
    public byte[] encoded;
    public int length;
    protected int offset;

    public void <init>()
    {
        org.apache.harmony.security.asn1.BerOutputStream r0;

        r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void encodeANY()
    {
        org.apache.harmony.security.asn1.BerOutputStream r0;
        int $i0, $i1, $i2, $i3, $i4;
        byte[] $r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        $r2 = r0.<org.apache.harmony.security.asn1.BerOutputStream: java.lang.Object content>;

        $r1 = r0.<org.apache.harmony.security.asn1.BerOutputStream: byte[] encoded>;

        $i1 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i0 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, $i1, $i0);

        $i3 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i2 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        $i4 = $i3 + $i2;

        r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset> = $i4;

        return;
    }

    public void encodeBitString()
    {
        org.apache.harmony.security.asn1.BerOutputStream r0;
        org.apache.harmony.security.asn1.BitString r1;
        java.lang.Object $r2;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        byte $b1;
        byte[] $r3, $r4, $r5;

        r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        $r2 = r0.<org.apache.harmony.security.asn1.BerOutputStream: java.lang.Object content>;

        r1 = (org.apache.harmony.security.asn1.BitString) $r2;

        $r3 = r0.<org.apache.harmony.security.asn1.BerOutputStream: byte[] encoded>;

        $i2 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i0 = r1.<org.apache.harmony.security.asn1.BitString: int unusedBits>;

        $b1 = (byte) $i0;

        $r3[$i2] = $b1;

        $r5 = r1.<org.apache.harmony.security.asn1.BitString: byte[] bytes>;

        $r4 = r0.<org.apache.harmony.security.asn1.BerOutputStream: byte[] encoded>;

        $i3 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i6 = 1 + $i3;

        $i4 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        $i5 = -1 + $i4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r4, $i6, $i5);

        $i8 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i7 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        $i9 = $i8 + $i7;

        r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset> = $i9;

        return;
    }

    public void encodeBoolean()
    {
        org.apache.harmony.security.asn1.BerOutputStream r0;
        java.lang.Object $r1;
        java.lang.Boolean $r2;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        byte[] $r3, $r4;

        r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        $r1 = r0.<org.apache.harmony.security.asn1.BerOutputStream: java.lang.Object content>;

        $r2 = (java.lang.Boolean) $r1;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r4 = r0.<org.apache.harmony.security.asn1.BerOutputStream: byte[] encoded>;

        $i3 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $r4[$i3] = -1;

     label1:
        $i1 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i2 = 1 + $i1;

        r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset> = $i2;

        return;

     label2:
        $r3 = r0.<org.apache.harmony.security.asn1.BerOutputStream: byte[] encoded>;

        $i0 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $r3[$i0] = 0;

        goto label1;
    }

    public void encodeChoice(org.apache.harmony.security.asn1.ASN1Choice)
    {
        org.apache.harmony.security.asn1.BerOutputStream r0;
        org.apache.harmony.security.asn1.ASN1Choice r1;
        java.lang.RuntimeException $r2;

        r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        r1 := @parameter0: org.apache.harmony.security.asn1.ASN1Choice;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Is not implemented yet");

        throw $r2;
    }

    public void encodeExplicit(org.apache.harmony.security.asn1.ASN1Explicit)
    {
        org.apache.harmony.security.asn1.BerOutputStream r0;
        org.apache.harmony.security.asn1.ASN1Explicit r1;
        java.lang.RuntimeException $r2;

        r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        r1 := @parameter0: org.apache.harmony.security.asn1.ASN1Explicit;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Is not implemented yet");

        throw $r2;
    }

    public void encodeGeneralizedTime()
    {
        org.apache.harmony.security.asn1.BerOutputStream r0;
        int $i0, $i1, $i2, $i3, $i4;
        byte[] $r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        $r2 = r0.<org.apache.harmony.security.asn1.BerOutputStream: java.lang.Object content>;

        $r1 = r0.<org.apache.harmony.security.asn1.BerOutputStream: byte[] encoded>;

        $i1 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i0 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, $i1, $i0);

        $i3 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i2 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        $i4 = $i3 + $i2;

        r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset> = $i4;

        return;
    }

    public void encodeInteger()
    {
        org.apache.harmony.security.asn1.BerOutputStream r0;
        int $i0, $i1, $i2, $i3, $i4;
        byte[] $r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        $r2 = r0.<org.apache.harmony.security.asn1.BerOutputStream: java.lang.Object content>;

        $r1 = r0.<org.apache.harmony.security.asn1.BerOutputStream: byte[] encoded>;

        $i1 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i0 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, $i1, $i0);

        $i3 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i2 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        $i4 = $i3 + $i2;

        r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset> = $i4;

        return;
    }

    public void encodeOID()
    {
        org.apache.harmony.security.asn1.BerOutputStream r0;
        int[] r1, $r3;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i15, $i16, $i17, $i18, $i20, $i21, $i22, $i23, $i25, $i26, $i27, $i28, $i29, $i31, $i33, $i34, $i35, $i36, $i37, $i38, $i39;
        java.lang.Object $r2;
        byte $b13, $b19, $b24, $b30, $b32, $b40;
        byte[] $r4, $r5, $r6, $r7, $r8, $r9;

        r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        $r2 = r0.<org.apache.harmony.security.asn1.BerOutputStream: java.lang.Object content>;

        $r3 = (int[]) $r2;

        r1 = (int[]) $r3;

        i0 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        $i6 = lengthof r1;

        i1 = -1 + $i6;

     label1:
        if i1 <= 1 goto label5;

        i4 = r1[i1];

        if i4 <= 127 goto label3;

        $r8 = r0.<org.apache.harmony.security.asn1.BerOutputStream: byte[] encoded>;

        $i29 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i34 = i0 + $i29;

        $i33 = -1 + $i34;

        $i35 = i4 & 127;

        $b32 = (byte) $i35;

        $r8[$i33] = $b32;

        i5 = i4 >> 7;

     label2:
        if i5 <= 0 goto label4;

        i0 = i0 + -1;

        $r9 = r0.<org.apache.harmony.security.asn1.BerOutputStream: byte[] encoded>;

        $i38 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i36 = i0 + $i38;

        $i39 = -1 + $i36;

        $i37 = i5 | 128;

        $b40 = (byte) $i37;

        $r9[$i39] = $b40;

        i5 = i5 >> 7;

        goto label2;

     label3:
        $r7 = r0.<org.apache.harmony.security.asn1.BerOutputStream: byte[] encoded>;

        $i26 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i27 = i0 + $i26;

        $i31 = -1 + $i27;

        $b30 = (byte) i4;

        $r7[$i31] = $b30;

     label4:
        i1 = i1 + -1;

        i0 = i0 + -1;

        goto label1;

     label5:
        $i7 = r1[0];

        $i9 = 40 * $i7;

        $i8 = r1[1];

        i2 = $i9 + $i8;

        if i2 <= 127 goto label7;

        $r5 = r0.<org.apache.harmony.security.asn1.BerOutputStream: byte[] encoded>;

        $i18 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i17 = i0 + $i18;

        $i21 = -1 + $i17;

        $i20 = i2 & 127;

        $b19 = (byte) $i20;

        $r5[$i21] = $b19;

        i3 = i2 >> 7;

     label6:
        if i3 <= 0 goto label8;

        i0 = i0 + -1;

        $r6 = r0.<org.apache.harmony.security.asn1.BerOutputStream: byte[] encoded>;

        $i23 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i22 = i0 + $i23;

        $i28 = -1 + $i22;

        $i25 = i3 | 128;

        $b24 = (byte) $i25;

        $r6[$i28] = $b24;

        i3 = i3 >> 7;

        goto label6;

     label7:
        $r4 = r0.<org.apache.harmony.security.asn1.BerOutputStream: byte[] encoded>;

        $i10 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i11 = i0 + $i10;

        $i12 = -1 + $i11;

        $b13 = (byte) i2;

        $r4[$i12] = $b13;

     label8:
        $i16 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i14 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        $i15 = $i16 + $i14;

        r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset> = $i15;

        return;
    }

    public void encodeOctetString()
    {
        org.apache.harmony.security.asn1.BerOutputStream r0;
        int $i0, $i1, $i2, $i3, $i4;
        byte[] $r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        $r2 = r0.<org.apache.harmony.security.asn1.BerOutputStream: java.lang.Object content>;

        $r1 = r0.<org.apache.harmony.security.asn1.BerOutputStream: byte[] encoded>;

        $i1 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i0 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, $i1, $i0);

        $i3 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i2 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        $i4 = $i3 + $i2;

        r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset> = $i4;

        return;
    }

    public void encodeSequence(org.apache.harmony.security.asn1.ASN1Sequence)
    {
        org.apache.harmony.security.asn1.BerOutputStream r0;
        org.apache.harmony.security.asn1.ASN1Sequence r1;
        java.lang.RuntimeException $r2;

        r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        r1 := @parameter0: org.apache.harmony.security.asn1.ASN1Sequence;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Is not implemented yet");

        throw $r2;
    }

    public void encodeSequenceOf(org.apache.harmony.security.asn1.ASN1SequenceOf)
    {
        org.apache.harmony.security.asn1.BerOutputStream r0;
        org.apache.harmony.security.asn1.ASN1SequenceOf r1;
        java.lang.RuntimeException $r2;

        r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        r1 := @parameter0: org.apache.harmony.security.asn1.ASN1SequenceOf;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Is not implemented yet");

        throw $r2;
    }

    public void encodeSet(org.apache.harmony.security.asn1.ASN1Set)
    {
        org.apache.harmony.security.asn1.BerOutputStream r0;
        org.apache.harmony.security.asn1.ASN1Set r1;
        java.lang.RuntimeException $r2;

        r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        r1 := @parameter0: org.apache.harmony.security.asn1.ASN1Set;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Is not implemented yet");

        throw $r2;
    }

    public void encodeSetOf(org.apache.harmony.security.asn1.ASN1SetOf)
    {
        org.apache.harmony.security.asn1.BerOutputStream r0;
        org.apache.harmony.security.asn1.ASN1SetOf r1;
        java.lang.RuntimeException $r2;

        r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        r1 := @parameter0: org.apache.harmony.security.asn1.ASN1SetOf;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Is not implemented yet");

        throw $r2;
    }

    public void encodeString()
    {
        org.apache.harmony.security.asn1.BerOutputStream r0;
        int $i0, $i1, $i2, $i3, $i4;
        byte[] $r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        $r2 = r0.<org.apache.harmony.security.asn1.BerOutputStream: java.lang.Object content>;

        $r1 = r0.<org.apache.harmony.security.asn1.BerOutputStream: byte[] encoded>;

        $i1 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i0 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, $i1, $i0);

        $i3 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i2 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        $i4 = $i3 + $i2;

        r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset> = $i4;

        return;
    }

    public final void encodeTag(int)
    {
        org.apache.harmony.security.asn1.BerOutputStream r0;
        int i0, i1, i2, i3, i5, i6, i7, $i8, $i10, $i11, $i12, $i13, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i26;
        byte[] r1, r2, $r3, $r4;
        byte b4, $b9, $b14, $b15, $b25;
        short $s16;

        r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        i0 := @parameter0: int;

        r1 = r0.<org.apache.harmony.security.asn1.BerOutputStream: byte[] encoded>;

        i1 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i8 = i1 + 1;

        r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset> = $i8;

        $b9 = (byte) i0;

        r1[i1] = $b9;

        $i10 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        if $i10 <= 127 goto label5;

        $i13 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        i3 = $i13 >> 8;

        b4 = 1;

     label1:
        if i3 <= 0 goto label2;

        $i26 = b4 + 1;

        b4 = (byte) $i26;

        i3 = i3 >> 8;

        goto label1;

     label2:
        $r3 = r0.<org.apache.harmony.security.asn1.BerOutputStream: byte[] encoded>;

        $i17 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $s16 = b4 | 128;

        $b15 = (byte) $s16;

        $r3[$i17] = $b15;

        $i19 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i18 = 1 + $i19;

        r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset> = $i18;

        i5 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        $i21 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i20 = b4 + $i21;

        i6 = -1 + $i20;

        i7 = 0;

     label3:
        if i7 >= b4 goto label4;

        $r4 = r0.<org.apache.harmony.security.asn1.BerOutputStream: byte[] encoded>;

        $i24 = i6 - i7;

        $b25 = (byte) i5;

        $r4[$i24] = $b25;

        i7 = i7 + 1;

        i5 = i5 >> 8;

        goto label3;

     label4:
        $i23 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i22 = b4 + $i23;

        r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset> = $i22;

        return;

     label5:
        r2 = r0.<org.apache.harmony.security.asn1.BerOutputStream: byte[] encoded>;

        i2 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i11 = i2 + 1;

        r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset> = $i11;

        $i12 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        $b14 = (byte) $i12;

        r2[i2] = $b14;

        return;
    }

    public void encodeUTCTime()
    {
        org.apache.harmony.security.asn1.BerOutputStream r0;
        int $i0, $i1, $i2, $i3, $i4;
        byte[] $r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        $r2 = r0.<org.apache.harmony.security.asn1.BerOutputStream: java.lang.Object content>;

        $r1 = r0.<org.apache.harmony.security.asn1.BerOutputStream: byte[] encoded>;

        $i1 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i0 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, $i1, $i0);

        $i3 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset>;

        $i2 = r0.<org.apache.harmony.security.asn1.BerOutputStream: int length>;

        $i4 = $i3 + $i2;

        r0.<org.apache.harmony.security.asn1.BerOutputStream: int offset> = $i4;

        return;
    }

    public void getChoiceLength(org.apache.harmony.security.asn1.ASN1Choice)
    {
        org.apache.harmony.security.asn1.BerOutputStream r0;
        org.apache.harmony.security.asn1.ASN1Choice r1;
        java.lang.RuntimeException $r2;

        r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        r1 := @parameter0: org.apache.harmony.security.asn1.ASN1Choice;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Is not implemented yet");

        throw $r2;
    }

    public void getExplicitLength(org.apache.harmony.security.asn1.ASN1Explicit)
    {
        org.apache.harmony.security.asn1.BerOutputStream r0;
        org.apache.harmony.security.asn1.ASN1Explicit r1;
        java.lang.RuntimeException $r2;

        r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        r1 := @parameter0: org.apache.harmony.security.asn1.ASN1Explicit;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Is not implemented yet");

        throw $r2;
    }

    public void getSequenceLength(org.apache.harmony.security.asn1.ASN1Sequence)
    {
        org.apache.harmony.security.asn1.BerOutputStream r0;
        org.apache.harmony.security.asn1.ASN1Sequence r1;
        java.lang.RuntimeException $r2;

        r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        r1 := @parameter0: org.apache.harmony.security.asn1.ASN1Sequence;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Is not implemented yet");

        throw $r2;
    }

    public void getSequenceOfLength(org.apache.harmony.security.asn1.ASN1SequenceOf)
    {
        org.apache.harmony.security.asn1.BerOutputStream r0;
        org.apache.harmony.security.asn1.ASN1SequenceOf r1;
        java.lang.RuntimeException $r2;

        r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        r1 := @parameter0: org.apache.harmony.security.asn1.ASN1SequenceOf;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Is not implemented yet");

        throw $r2;
    }

    public void getSetLength(org.apache.harmony.security.asn1.ASN1Set)
    {
        org.apache.harmony.security.asn1.BerOutputStream r0;
        org.apache.harmony.security.asn1.ASN1Set r1;
        java.lang.RuntimeException $r2;

        r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        r1 := @parameter0: org.apache.harmony.security.asn1.ASN1Set;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Is not implemented yet");

        throw $r2;
    }

    public void getSetOfLength(org.apache.harmony.security.asn1.ASN1SetOf)
    {
        org.apache.harmony.security.asn1.BerOutputStream r0;
        org.apache.harmony.security.asn1.ASN1SetOf r1;
        java.lang.RuntimeException $r2;

        r0 := @this: org.apache.harmony.security.asn1.BerOutputStream;

        r1 := @parameter0: org.apache.harmony.security.asn1.ASN1SetOf;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Is not implemented yet");

        throw $r2;
    }
}
