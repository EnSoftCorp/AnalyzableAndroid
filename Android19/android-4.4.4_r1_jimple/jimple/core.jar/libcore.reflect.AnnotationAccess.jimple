public final class libcore.reflect.AnnotationAccess extends java.lang.Object
{
    private static final java.lang.Class[] NO_ARGUMENTS;
    private static final byte VISIBILITY_BUILD;
    private static final byte VISIBILITY_RUNTIME;
    private static final byte VISIBILITY_SYSTEM;

    static void <clinit>()
    {
        <libcore.reflect.AnnotationAccess: byte VISIBILITY_SYSTEM> = 2;

        <libcore.reflect.AnnotationAccess: byte VISIBILITY_RUNTIME> = 1;

        <libcore.reflect.AnnotationAccess: byte VISIBILITY_BUILD> = 0;

        <libcore.reflect.AnnotationAccess: java.lang.Class[] NO_ARGUMENTS> = null;

        return;
    }

    private void <init>()
    {
        libcore.reflect.AnnotationAccess r0;

        r0 := @this: libcore.reflect.AnnotationAccess;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.util.List annotationSetToAnnotations(java.lang.Class, int)
    {
        java.lang.Class r0, r5;
        int i0, i1, i2, $i3, $i4;
        com.android.dex.Dex r1;
        com.android.dex.Dex$Section r2, $r7;
        java.util.List r3;
        com.android.dex.Annotation r4;
        java.util.ArrayList $r6;
        byte $b5;
        com.android.dex.EncodedValueReader $r8;
        java.lang.annotation.Annotation $r9;

        r0 := @parameter0: java.lang.Class;

        i0 := @parameter1: int;

        if i0 != 0 goto label2;

        r3 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label1:
        return r3;

     label2:
        r1 = virtualinvoke r0.<java.lang.Class: com.android.dex.Dex getDex()>();

        r2 = virtualinvoke r1.<com.android.dex.Dex: com.android.dex.Dex$Section open(int)>(i0);

        i1 = virtualinvoke r2.<com.android.dex.Dex$Section: int readInt()>();

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>(i1);

        r3 = $r6;

        i2 = 0;

     label3:
        if i2 >= i1 goto label1;

        $i3 = virtualinvoke r2.<com.android.dex.Dex$Section: int readInt()>();

        $r7 = virtualinvoke r1.<com.android.dex.Dex: com.android.dex.Dex$Section open(int)>($i3);

        r4 = virtualinvoke $r7.<com.android.dex.Dex$Section: com.android.dex.Annotation readAnnotation()>();

        $b5 = virtualinvoke r4.<com.android.dex.Annotation: byte getVisibility()>();

        if $b5 == 1 goto label5;

     label4:
        i2 = i2 + 1;

        goto label3;

     label5:
        $i4 = virtualinvoke r4.<com.android.dex.Annotation: int getTypeIndex()>();

        r5 = staticinvoke <libcore.reflect.AnnotationAccess: java.lang.Class getAnnotationClass(java.lang.Class,com.android.dex.Dex,int)>(r0, r1, $i4);

        if r5 == null goto label4;

        $r8 = virtualinvoke r4.<com.android.dex.Annotation: com.android.dex.EncodedValueReader getReader()>();

        $r9 = staticinvoke <libcore.reflect.AnnotationAccess: java.lang.annotation.Annotation toAnnotationInstance(java.lang.Class,com.android.dex.Dex,java.lang.Class,com.android.dex.EncodedValueReader)>(r0, r1, r5, $r8);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r9);

        goto label4;
    }

    private static java.lang.Object decodeValue(java.lang.Class, java.lang.Class, com.android.dex.Dex, com.android.dex.EncodedValueReader)
    {
        java.lang.Class r0, r1, r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r21, $r33;
        com.android.dex.Dex r2;
        com.android.dex.EncodedValueReader r3;
        int i0, i1, i2, $i6, $i7, $i9, $i10;
        com.android.dex.FieldId r4;
        java.lang.String r5, $r26, $r36;
        java.lang.IllegalAccessException r6, $r44;
        java.lang.IllegalAccessError r7, $r45;
        java.lang.NoSuchFieldException r8, $r47;
        java.lang.NoSuchFieldError r9, $r42;
        java.lang.Object r10, r11, $r38, $r41, $r46;
        boolean $z0, $z1, $z2, $z3;
        java.lang.AssertionError $r20;
        java.lang.StringBuilder $r22, $r23, $r25;
        java.lang.Boolean $r24;
        double $d0;
        java.lang.Double $r27;
        char $c3;
        java.lang.Character $r28;
        long $l4;
        java.lang.Long $r29;
        float $f0;
        java.lang.Float $r30;
        short $s5;
        java.lang.Short $r31;
        java.lang.Integer $r32;
        java.lang.Byte $r34;
        byte $b8;
        java.lang.annotation.Annotation $r35;
        java.util.List $r37, $r39;
        java.lang.reflect.Field $r40;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: com.android.dex.Dex;

        r3 := @parameter3: com.android.dex.EncodedValueReader;

        $z1 = virtualinvoke r1.<java.lang.Class: boolean isArray()>();

        if $z1 == 0 goto label02;

        i1 = virtualinvoke r3.<com.android.dex.EncodedValueReader: int readArray()>();

        r12 = virtualinvoke r1.<java.lang.Class: java.lang.Class getComponentType()>();

        r11 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r12, i1);

        i2 = 0;

     label01:
        if i2 >= i1 goto label05;

        $r46 = staticinvoke <libcore.reflect.AnnotationAccess: java.lang.Object decodeValue(java.lang.Class,java.lang.Class,com.android.dex.Dex,com.android.dex.EncodedValueReader)>(r0, r12, r2, r3);

        staticinvoke <java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>(r11, i2, $r46);

        i2 = i2 + 1;

        goto label01;

     label02:
        $z0 = virtualinvoke r1.<java.lang.Class: boolean isEnum()>();

        if $z0 == 0 goto label08;

        i0 = virtualinvoke r3.<com.android.dex.EncodedValueReader: int readEnum()>();

        $r39 = virtualinvoke r2.<com.android.dex.Dex: java.util.List fieldIds()>();

        $r38 = interfaceinvoke $r39.<java.util.List: java.lang.Object get(int)>(i0);

        r4 = (com.android.dex.FieldId) $r38;

        $r37 = virtualinvoke r2.<com.android.dex.Dex: java.util.List strings()>();

        $i10 = virtualinvoke r4.<com.android.dex.FieldId: int getNameIndex()>();

        $r41 = interfaceinvoke $r37.<java.util.List: java.lang.Object get(int)>($i10);

        r5 = (java.lang.String) $r41;

     label03:
        $r40 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>(r5);

        r10 = virtualinvoke $r40.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

     label04:
        r11 = r10;

     label05:
        return r11;

     label06:
        $r47 := @caughtexception;

        r8 = $r47;

        $r42 = new java.lang.NoSuchFieldError;

        specialinvoke $r42.<java.lang.NoSuchFieldError: void <init>()>();

        r9 = $r42;

        virtualinvoke r9.<java.lang.NoSuchFieldError: java.lang.Throwable initCause(java.lang.Throwable)>(r8);

        throw r9;

     label07:
        $r44 := @caughtexception;

        r6 = $r44;

        $r45 = new java.lang.IllegalAccessError;

        specialinvoke $r45.<java.lang.IllegalAccessError: void <init>()>();

        r7 = $r45;

        virtualinvoke r7.<java.lang.IllegalAccessError: java.lang.Throwable initCause(java.lang.Throwable)>(r6);

        throw r7;

     label08:
        $z2 = virtualinvoke r1.<java.lang.Class: boolean isAnnotation()>();

        if $z2 == 0 goto label09;

        $r35 = staticinvoke <libcore.reflect.AnnotationAccess: java.lang.annotation.Annotation toAnnotationInstance(java.lang.Class,com.android.dex.Dex,java.lang.Class,com.android.dex.EncodedValueReader)>(r0, r2, r1, r3);

        return $r35;

     label09:
        if r1 != class "java/lang/String" goto label10;

        $i9 = virtualinvoke r3.<com.android.dex.EncodedValueReader: int readString()>();

        $r36 = virtualinvoke r0.<java.lang.Class: java.lang.String getDexCacheString(com.android.dex.Dex,int)>(r2, $i9);

        return $r36;

     label10:
        if r1 != class "java/lang/Class" goto label11;

        $i7 = virtualinvoke r3.<com.android.dex.EncodedValueReader: int readType()>();

        $r33 = virtualinvoke r0.<java.lang.Class: java.lang.Class getDexCacheType(com.android.dex.Dex,int)>(r2, $i7);

        return $r33;

     label11:
        $r13 = <java.lang.Byte: java.lang.Class TYPE>;

        if r1 != $r13 goto label12;

        $b8 = virtualinvoke r3.<com.android.dex.EncodedValueReader: byte readByte()>();

        $r34 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b8);

        return $r34;

     label12:
        $r15 = <java.lang.Short: java.lang.Class TYPE>;

        if r1 != $r15 goto label13;

        $s5 = virtualinvoke r3.<com.android.dex.EncodedValueReader: short readShort()>();

        $r31 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s5);

        return $r31;

     label13:
        $r14 = <java.lang.Integer: java.lang.Class TYPE>;

        if r1 != $r14 goto label14;

        $i6 = virtualinvoke r3.<com.android.dex.EncodedValueReader: int readInt()>();

        $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        return $r32;

     label14:
        $r17 = <java.lang.Long: java.lang.Class TYPE>;

        if r1 != $r17 goto label15;

        $l4 = virtualinvoke r3.<com.android.dex.EncodedValueReader: long readLong()>();

        $r29 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        return $r29;

     label15:
        $r16 = <java.lang.Float: java.lang.Class TYPE>;

        if r1 != $r16 goto label16;

        $f0 = virtualinvoke r3.<com.android.dex.EncodedValueReader: float readFloat()>();

        $r30 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r30;

     label16:
        $r19 = <java.lang.Double: java.lang.Class TYPE>;

        if r1 != $r19 goto label17;

        $d0 = virtualinvoke r3.<com.android.dex.EncodedValueReader: double readDouble()>();

        $r27 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r27;

     label17:
        $r18 = <java.lang.Character: java.lang.Class TYPE>;

        if r1 != $r18 goto label18;

        $c3 = virtualinvoke r3.<com.android.dex.EncodedValueReader: char readChar()>();

        $r28 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        return $r28;

     label18:
        $r21 = <java.lang.Boolean: java.lang.Class TYPE>;

        if r1 != $r21 goto label19;

        $z3 = virtualinvoke r3.<com.android.dex.EncodedValueReader: boolean readBoolean()>();

        $r24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3);

        return $r24;

     label19:
        $r20 = new java.lang.AssertionError;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected annotation value type: ");

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.AssertionError: void <init>(java.lang.Object)>($r26);

        throw $r20;

        catch java.lang.NoSuchFieldException from label03 to label04 with label06;
        catch java.lang.IllegalAccessException from label03 to label04 with label07;
    }

    public static java.lang.annotation.Annotation getAnnotation(java.lang.Class, java.lang.Class)
    {
        java.lang.Class r0, r1, r3;
        java.lang.annotation.Annotation r2, r4;
        boolean $z0;
        java.lang.NullPointerException $r5;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.Class;

        if r1 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("annotationType == null");

        throw $r5;

     label1:
        r2 = staticinvoke <libcore.reflect.AnnotationAccess: java.lang.annotation.Annotation getDeclaredAnnotation(java.lang.reflect.AnnotatedElement,java.lang.Class)>(r0, r1);

        if r2 == null goto label2;

        return r2;

     label2:
        $z0 = staticinvoke <libcore.reflect.AnnotationAccess: boolean isInherited(java.lang.Class)>(r1);

        if $z0 == 0 goto label5;

        r3 = virtualinvoke r0.<java.lang.Class: java.lang.Class getSuperclass()>();

     label3:
        if r3 == null goto label5;

        r4 = staticinvoke <libcore.reflect.AnnotationAccess: java.lang.annotation.Annotation getDeclaredAnnotation(java.lang.reflect.AnnotatedElement,java.lang.Class)>(r3, r1);

        if r4 == null goto label4;

        return r4;

     label4:
        r3 = virtualinvoke r3.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label3;

     label5:
        return null;
    }

    private static java.lang.Class getAnnotationClass(java.lang.Class, com.android.dex.Dex, int)
    {
        java.lang.Class r0, r3;
        com.android.dex.Dex r1;
        int i0;
        boolean $z0;
        java.lang.IncompatibleClassChangeError $r4;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.String $r7, $r9;
        java.lang.NoClassDefFoundError $r10;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: com.android.dex.Dex;

        i0 := @parameter2: int;

     label1:
        r3 = virtualinvoke r0.<java.lang.Class: java.lang.Class getDexCacheType(com.android.dex.Dex,int)>(r1, i0);

        $z0 = virtualinvoke r3.<java.lang.Class: boolean isAnnotation()>();

        if $z0 != 0 goto label3;

        $r4 = new java.lang.IncompatibleClassChangeError;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected annotation: ");

        $r7 = virtualinvoke r3.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IncompatibleClassChangeError: void <init>(java.lang.String)>($r9);

        throw $r4;

     label2:
        $r10 := @caughtexception;

        r3 = null;

     label3:
        return r3;

        catch java.lang.NoClassDefFoundError from label1 to label2 with label2;
    }

    private static com.android.dex.EncodedValueReader getAnnotationReader(com.android.dex.Dex, java.lang.reflect.AnnotatedElement, java.lang.String, int)
    {
        com.android.dex.Dex r0;
        java.lang.reflect.AnnotatedElement r1;
        java.lang.String r2, $r9, $r13;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7;
        com.android.dex.Dex$Section r3, $r11;
        com.android.dex.Annotation r4, r6;
        com.android.dex.EncodedValueReader r5;
        java.util.List $r7, $r12;
        java.lang.Object $r8, $r14;
        boolean $z0, $z1;
        java.lang.AssertionError $r10;

        r0 := @parameter0: com.android.dex.Dex;

        r1 := @parameter1: java.lang.reflect.AnnotatedElement;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 = staticinvoke <libcore.reflect.AnnotationAccess: int getAnnotationSetOffset(java.lang.reflect.AnnotatedElement)>(r1);

        if i1 != 0 goto label2;

        r5 = null;

     label1:
        return r5;

     label2:
        r3 = virtualinvoke r0.<com.android.dex.Dex: com.android.dex.Dex$Section open(int)>(i1);

        i2 = 0;

        i3 = virtualinvoke r3.<com.android.dex.Dex$Section: int readInt()>();

     label3:
        r4 = null;

        if i2 >= i3 goto label4;

        $i6 = virtualinvoke r3.<com.android.dex.Dex$Section: int readInt()>();

        $r11 = virtualinvoke r0.<com.android.dex.Dex: com.android.dex.Dex$Section open(int)>($i6);

        r6 = virtualinvoke $r11.<com.android.dex.Dex$Section: com.android.dex.Annotation readAnnotation()>();

        $r12 = virtualinvoke r0.<com.android.dex.Dex: java.util.List typeNames()>();

        $i7 = virtualinvoke r6.<com.android.dex.Annotation: int getTypeIndex()>();

        $r14 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>($i7);

        $r13 = (java.lang.String) $r14;

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z1 == 0 goto label5;

        r4 = r6;

     label4:
        if r4 != null goto label6;

        return null;

     label5:
        i2 = i2 + 1;

        goto label3;

     label6:
        r5 = virtualinvoke r4.<com.android.dex.Annotation: com.android.dex.EncodedValueReader getReader()>();

        i4 = virtualinvoke r5.<com.android.dex.EncodedValueReader: int readAnnotation()>();

        $r7 = virtualinvoke r0.<com.android.dex.Dex: java.util.List typeNames()>();

        $i5 = virtualinvoke r5.<com.android.dex.EncodedValueReader: int getAnnotationType()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>($i5);

        $r9 = (java.lang.String) $r8;

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 != 0 goto label7;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label7:
        if i4 == i0 goto label1;

        return null;
    }

    private static int getAnnotationSetOffset(java.lang.reflect.AnnotatedElement)
    {
        java.lang.reflect.AnnotatedElement r0;
        java.lang.Class r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10;
        com.android.dex.Dex$Section r2;
        com.android.dex.Dex $r3;
        boolean $z0, $z1, $z2, $z3;
        java.lang.reflect.Constructor $r4;
        java.lang.reflect.Method $r5;
        java.lang.reflect.Field $r6;

        r0 := @parameter0: java.lang.reflect.AnnotatedElement;

        r1 = staticinvoke <libcore.reflect.AnnotationAccess: java.lang.Class getDexClass(java.lang.reflect.AnnotatedElement)>(r0);

        i0 = virtualinvoke r1.<java.lang.Class: int getDexAnnotationDirectoryOffset()>();

        if i0 != 0 goto label02;

        i9 = 0;

     label01:
        return i9;

     label02:
        $r3 = virtualinvoke r1.<java.lang.Class: com.android.dex.Dex getDex()>();

        r2 = virtualinvoke $r3.<com.android.dex.Dex: com.android.dex.Dex$Section open(int)>(i0);

        i1 = virtualinvoke r2.<com.android.dex.Dex$Section: int readInt()>();

        $z0 = r0 instanceof java.lang.Class;

        if $z0 == 0 goto label03;

        return i1;

     label03:
        i2 = virtualinvoke r2.<com.android.dex.Dex$Section: int readInt()>();

        i3 = virtualinvoke r2.<com.android.dex.Dex$Section: int readInt()>();

        virtualinvoke r2.<com.android.dex.Dex$Section: int readInt()>();

        $z2 = r0 instanceof java.lang.reflect.Field;

        if $z2 == 0 goto label06;

        $r6 = (java.lang.reflect.Field) r0;

        i4 = virtualinvoke $r6.<java.lang.reflect.Field: int getDexFieldIndex()>();

     label04:
        i5 = 0;

     label05:
        if i5 >= i2 goto label07;

        i10 = virtualinvoke r2.<com.android.dex.Dex$Section: int readInt()>();

        i9 = virtualinvoke r2.<com.android.dex.Dex$Section: int readInt()>();

        if i10 == i4 goto label01;

        i5 = i5 + 1;

        goto label05;

     label06:
        i4 = -1;

        goto label04;

     label07:
        $z1 = r0 instanceof java.lang.reflect.Field;

        if $z1 == 0 goto label08;

        return 0;

     label08:
        $z3 = r0 instanceof java.lang.reflect.Method;

        if $z3 == 0 goto label11;

        $r5 = (java.lang.reflect.Method) r0;

        i6 = virtualinvoke $r5.<java.lang.reflect.Method: int getDexMethodIndex()>();

     label09:
        i7 = 0;

     label10:
        if i7 >= i3 goto label12;

        i8 = virtualinvoke r2.<com.android.dex.Dex$Section: int readInt()>();

        i9 = virtualinvoke r2.<com.android.dex.Dex$Section: int readInt()>();

        if i8 == i6 goto label01;

        i7 = i7 + 1;

        goto label10;

     label11:
        $r4 = (java.lang.reflect.Constructor) r0;

        i6 = virtualinvoke $r4.<java.lang.reflect.Constructor: int getDexMethodIndex()>();

        goto label09;

     label12:
        return 0;
    }

    public static java.lang.annotation.Annotation[] getAnnotations(java.lang.Class)
    {
        java.lang.Class r0, r3, r7, $r19;
        java.util.HashMap r1, $r9;
        java.util.Iterator r2, r5;
        java.util.Collection r4;
        java.lang.annotation.Annotation r6, r8;
        java.util.List $r10, $r14;
        boolean $z0, $z1, $z2, $z3;
        java.lang.annotation.Annotation[] $r11, $r12;
        int $i0;
        java.lang.Object[] $r13;
        java.lang.Object $r15, $r16;

        r0 := @parameter0: java.lang.Class;

        $r9 = new java.util.HashMap;

        specialinvoke $r9.<java.util.HashMap: void <init>()>();

        r1 = $r9;

        $r10 = staticinvoke <libcore.reflect.AnnotationAccess: java.util.List getDeclaredAnnotations(java.lang.reflect.AnnotatedElement)>(r0);

        r2 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r16 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.annotation.Annotation) $r16;

        $r19 = interfaceinvoke r8.<java.lang.annotation.Annotation: java.lang.Class annotationType()>();

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, r8);

        goto label1;

     label2:
        r3 = virtualinvoke r0.<java.lang.Class: java.lang.Class getSuperclass()>();

     label3:
        if r3 == null goto label6;

        $r14 = staticinvoke <libcore.reflect.AnnotationAccess: java.util.List getDeclaredAnnotations(java.lang.reflect.AnnotatedElement)>(r3);

        r5 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r15 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.annotation.Annotation) $r15;

        r7 = interfaceinvoke r6.<java.lang.annotation.Annotation: java.lang.Class annotationType()>();

        $z3 = virtualinvoke r1.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r7);

        if $z3 != 0 goto label4;

        $z2 = staticinvoke <libcore.reflect.AnnotationAccess: boolean isInherited(java.lang.Class)>(r7);

        if $z2 == 0 goto label4;

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, r6);

        goto label4;

     label5:
        r3 = virtualinvoke r3.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label3;

     label6:
        r4 = virtualinvoke r1.<java.util.HashMap: java.util.Collection values()>();

        $i0 = interfaceinvoke r4.<java.util.Collection: int size()>();

        $r11 = newarray (java.lang.annotation.Annotation)[$i0];

        $r13 = interfaceinvoke r4.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r11);

        $r12 = (java.lang.annotation.Annotation[]) $r13;

        return $r12;
    }

    public static java.lang.annotation.Annotation getDeclaredAnnotation(java.lang.reflect.AnnotatedElement, java.lang.Class)
    {
        java.lang.reflect.AnnotatedElement r0;
        java.lang.Class r1, $r3;
        com.android.dex.Annotation r2;
        java.lang.annotation.Annotation $r4;

        r0 := @parameter0: java.lang.reflect.AnnotatedElement;

        r1 := @parameter1: java.lang.Class;

        r2 = staticinvoke <libcore.reflect.AnnotationAccess: com.android.dex.Annotation getMethodAnnotation(java.lang.reflect.AnnotatedElement,java.lang.Class)>(r0, r1);

        if r2 == null goto label1;

        $r3 = staticinvoke <libcore.reflect.AnnotationAccess: java.lang.Class getDexClass(java.lang.reflect.AnnotatedElement)>(r0);

        $r4 = staticinvoke <libcore.reflect.AnnotationAccess: java.lang.annotation.Annotation toAnnotationInstance(java.lang.Class,java.lang.Class,com.android.dex.Annotation)>($r3, r1, r2);

        return $r4;

     label1:
        return null;
    }

    public static java.util.List getDeclaredAnnotations(java.lang.reflect.AnnotatedElement)
    {
        java.lang.reflect.AnnotatedElement r0;
        int i0;
        java.lang.Class $r1;
        java.util.List $r2;

        r0 := @parameter0: java.lang.reflect.AnnotatedElement;

        i0 = staticinvoke <libcore.reflect.AnnotationAccess: int getAnnotationSetOffset(java.lang.reflect.AnnotatedElement)>(r0);

        $r1 = staticinvoke <libcore.reflect.AnnotationAccess: java.lang.Class getDexClass(java.lang.reflect.AnnotatedElement)>(r0);

        $r2 = staticinvoke <libcore.reflect.AnnotationAccess: java.util.List annotationSetToAnnotations(java.lang.Class,int)>($r1, i0);

        return $r2;
    }

    public static java.lang.Class getDeclaringClass(java.lang.Class)
    {
        java.lang.Class r0, $r3;
        com.android.dex.Dex r1;
        com.android.dex.EncodedValueReader r2;
        int $i0;

        r0 := @parameter0: java.lang.Class;

        r1 = virtualinvoke r0.<java.lang.Class: com.android.dex.Dex getDex()>();

        r2 = staticinvoke <libcore.reflect.AnnotationAccess: com.android.dex.EncodedValueReader getOnlyAnnotationValue(com.android.dex.Dex,java.lang.reflect.AnnotatedElement,java.lang.String)>(r1, r0, "Ldalvik/annotation/EnclosingClass;");

        if r2 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke r2.<com.android.dex.EncodedValueReader: int readType()>();

        $r3 = virtualinvoke r0.<java.lang.Class: java.lang.Class getDexCacheType(com.android.dex.Dex,int)>(r1, $i0);

        return $r3;
    }

    public static java.lang.Object getDefaultValue(java.lang.reflect.Method)
    {
        java.lang.reflect.Method r0;
        java.lang.Class r1, $r6;
        com.android.dex.Dex r2;
        com.android.dex.EncodedValueReader r3;
        int i0, i1, i2, $i3, $i4, $i5;
        java.lang.String $r4;
        java.lang.Object $r5;
        java.lang.AssertionError $r7;

        r0 := @parameter0: java.lang.reflect.Method;

        r1 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        r2 = virtualinvoke r1.<java.lang.Class: com.android.dex.Dex getDex()>();

        r3 = staticinvoke <libcore.reflect.AnnotationAccess: com.android.dex.EncodedValueReader getOnlyAnnotationValue(com.android.dex.Dex,java.lang.reflect.AnnotatedElement,java.lang.String)>(r2, r1, "Ldalvik/annotation/AnnotationDefault;");

        if r3 != null goto label2;

     label1:
        return null;

     label2:
        i0 = virtualinvoke r3.<com.android.dex.EncodedValueReader: int readAnnotation()>();

        $i3 = virtualinvoke r3.<com.android.dex.EncodedValueReader: int getAnnotationType()>();

        $i4 = staticinvoke <libcore.reflect.AnnotationAccess: int getTypeIndex(com.android.dex.Dex,java.lang.Class)>(r2, r1);

        if $i3 == $i4 goto label3;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>("annotation value type != annotation class");

        throw $r7;

     label3:
        $r4 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.String getName()>();

        i1 = virtualinvoke r2.<com.android.dex.Dex: int findStringIndex(java.lang.String)>($r4);

        i2 = 0;

     label4:
        if i2 >= i0 goto label1;

        $i5 = virtualinvoke r3.<com.android.dex.EncodedValueReader: int readAnnotationName()>();

        if $i5 != i1 goto label5;

        $r6 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r5 = staticinvoke <libcore.reflect.AnnotationAccess: java.lang.Object decodeValue(java.lang.Class,java.lang.Class,com.android.dex.Dex,com.android.dex.EncodedValueReader)>(r1, $r6, r2, r3);

        return $r5;

     label5:
        virtualinvoke r3.<com.android.dex.EncodedValueReader: void skipValue()>();

        i2 = i2 + 1;

        goto label4;
    }

    private static java.lang.Class getDexClass(java.lang.reflect.AnnotatedElement)
    {
        java.lang.reflect.AnnotatedElement r0;
        boolean $z0;
        java.lang.reflect.Member $r1;
        java.lang.Class $r2, $r3;

        r0 := @parameter0: java.lang.reflect.AnnotatedElement;

        $z0 = r0 instanceof java.lang.Class;

        if $z0 == 0 goto label1;

        $r3 = (java.lang.Class) r0;

        return $r3;

     label1:
        $r1 = (java.lang.reflect.Member) r0;

        $r2 = interfaceinvoke $r1.<java.lang.reflect.Member: java.lang.Class getDeclaringClass()>();

        return $r2;
    }

    public static java.lang.reflect.AccessibleObject getEnclosingMethodOrConstructor(java.lang.Class)
    {
        java.lang.Class r0;
        com.android.dex.Dex r1;
        com.android.dex.EncodedValueReader r2;
        int $i0;
        java.lang.reflect.AccessibleObject $r3;

        r0 := @parameter0: java.lang.Class;

        r1 = virtualinvoke r0.<java.lang.Class: com.android.dex.Dex getDex()>();

        r2 = staticinvoke <libcore.reflect.AnnotationAccess: com.android.dex.EncodedValueReader getOnlyAnnotationValue(com.android.dex.Dex,java.lang.reflect.AnnotatedElement,java.lang.String)>(r1, r0, "Ldalvik/annotation/EnclosingMethod;");

        if r2 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke r2.<com.android.dex.EncodedValueReader: int readMethod()>();

        $r3 = staticinvoke <libcore.reflect.AnnotationAccess: java.lang.reflect.AccessibleObject indexToMethod(java.lang.Class,com.android.dex.Dex,int)>(r0, r1, $i0);

        return $r3;
    }

    public static java.lang.Class[] getExceptions(java.lang.reflect.AnnotatedElement)
    {
        java.lang.reflect.AnnotatedElement r0;
        java.lang.Class r1;
        com.android.dex.Dex r2;
        com.android.dex.EncodedValueReader r3;
        java.lang.Object $r4;
        java.lang.Class[] $r5, $r6, $r7;

        r0 := @parameter0: java.lang.reflect.AnnotatedElement;

        r1 = staticinvoke <libcore.reflect.AnnotationAccess: java.lang.Class getDexClass(java.lang.reflect.AnnotatedElement)>(r0);

        r2 = virtualinvoke r1.<java.lang.Class: com.android.dex.Dex getDex()>();

        r3 = staticinvoke <libcore.reflect.AnnotationAccess: com.android.dex.EncodedValueReader getOnlyAnnotationValue(com.android.dex.Dex,java.lang.reflect.AnnotatedElement,java.lang.String)>(r2, r0, "Ldalvik/annotation/Throws;");

        if r3 != null goto label1;

        $r7 = <libcore.util.EmptyArray: java.lang.Class[] CLASS>;

        return $r7;

     label1:
        $r4 = staticinvoke <libcore.reflect.AnnotationAccess: java.lang.Object decodeValue(java.lang.Class,java.lang.Class,com.android.dex.Dex,com.android.dex.EncodedValueReader)>(r1, class "[Ljava/lang/Class;", r2, r3);

        $r5 = (java.lang.Class[]) $r4;

        $r6 = (java.lang.Class[]) $r5;

        return $r6;
    }

    public static int getFieldIndex(java.lang.Class, java.lang.Class, java.lang.String)
    {
        java.lang.Class r0, r1;
        java.lang.String r2;
        com.android.dex.Dex r3;
        com.android.dex.FieldId $r4;
        int $i0, $i1, $i2, $i3;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: java.lang.String;

        r3 = virtualinvoke r0.<java.lang.Class: com.android.dex.Dex getDex()>();

        $r4 = new com.android.dex.FieldId;

        $i0 = staticinvoke <libcore.reflect.AnnotationAccess: int getTypeIndex(com.android.dex.Dex,java.lang.Class)>(r3, r0);

        $i1 = staticinvoke <libcore.reflect.AnnotationAccess: int getTypeIndex(com.android.dex.Dex,java.lang.Class)>(r3, r1);

        $i2 = virtualinvoke r3.<com.android.dex.Dex: int findStringIndex(java.lang.String)>(r2);

        specialinvoke $r4.<com.android.dex.FieldId: void <init>(com.android.dex.Dex,int,int,int)>(r3, $i0, $i1, $i2);

        $i3 = virtualinvoke r3.<com.android.dex.Dex: int findFieldIndex(com.android.dex.FieldId)>($r4);

        return $i3;
    }

    public static int getInnerClassFlags(java.lang.Class, int)
    {
        java.lang.Class r0;
        int i0, $i2;
        com.android.dex.EncodedValueReader r1;
        com.android.dex.Dex $r2;

        r0 := @parameter0: java.lang.Class;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<java.lang.Class: com.android.dex.Dex getDex()>();

        r1 = staticinvoke <libcore.reflect.AnnotationAccess: com.android.dex.EncodedValueReader getAnnotationReader(com.android.dex.Dex,java.lang.reflect.AnnotatedElement,java.lang.String,int)>($r2, r0, "Ldalvik/annotation/InnerClass;", 2);

        if r1 != null goto label1;

        return i0;

     label1:
        virtualinvoke r1.<com.android.dex.EncodedValueReader: int readAnnotationName()>();

        $i2 = virtualinvoke r1.<com.android.dex.EncodedValueReader: int readInt()>();

        return $i2;
    }

    public static java.lang.String getInnerClassName(java.lang.Class)
    {
        java.lang.Class r0;
        com.android.dex.Dex r1;
        com.android.dex.EncodedValueReader r2;
        int $i3;
        java.lang.Object $r3;
        java.lang.String $r4;

        r0 := @parameter0: java.lang.Class;

        r1 = virtualinvoke r0.<java.lang.Class: com.android.dex.Dex getDex()>();

        r2 = staticinvoke <libcore.reflect.AnnotationAccess: com.android.dex.EncodedValueReader getAnnotationReader(com.android.dex.Dex,java.lang.reflect.AnnotatedElement,java.lang.String,int)>(r1, r0, "Ldalvik/annotation/InnerClass;", 2);

        if r2 != null goto label2;

     label1:
        return null;

     label2:
        virtualinvoke r2.<com.android.dex.EncodedValueReader: int readAnnotationName()>();

        virtualinvoke r2.<com.android.dex.EncodedValueReader: int readInt()>();

        virtualinvoke r2.<com.android.dex.EncodedValueReader: int readAnnotationName()>();

        $i3 = virtualinvoke r2.<com.android.dex.EncodedValueReader: int peek()>();

        if $i3 == 30 goto label1;

        $r3 = staticinvoke <libcore.reflect.AnnotationAccess: java.lang.Object decodeValue(java.lang.Class,java.lang.Class,com.android.dex.Dex,com.android.dex.EncodedValueReader)>(r0, class "java/lang/String", r1, r2);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public static java.lang.Class[] getMemberClasses(java.lang.Class)
    {
        java.lang.Class r0;
        com.android.dex.Dex r1;
        com.android.dex.EncodedValueReader r2;
        java.lang.Object $r3;
        java.lang.Class[] $r4, $r5, $r6;

        r0 := @parameter0: java.lang.Class;

        r1 = virtualinvoke r0.<java.lang.Class: com.android.dex.Dex getDex()>();

        r2 = staticinvoke <libcore.reflect.AnnotationAccess: com.android.dex.EncodedValueReader getOnlyAnnotationValue(com.android.dex.Dex,java.lang.reflect.AnnotatedElement,java.lang.String)>(r1, r0, "Ldalvik/annotation/MemberClasses;");

        if r2 != null goto label1;

        $r6 = <libcore.util.EmptyArray: java.lang.Class[] CLASS>;

        return $r6;

     label1:
        $r3 = staticinvoke <libcore.reflect.AnnotationAccess: java.lang.Object decodeValue(java.lang.Class,java.lang.Class,com.android.dex.Dex,com.android.dex.EncodedValueReader)>(r0, class "[Ljava/lang/Class;", r1, r2);

        $r4 = (java.lang.Class[]) $r3;

        $r5 = (java.lang.Class[]) $r4;

        return $r5;
    }

    private static com.android.dex.Annotation getMethodAnnotation(java.lang.reflect.AnnotatedElement, java.lang.Class)
    {
        java.lang.reflect.AnnotatedElement r0;
        java.lang.Class r1, $r5;
        com.android.dex.Dex r2;
        int i0, i1, i2, i3, $i4, $i5;
        com.android.dex.Dex$Section r3, $r6;
        com.android.dex.Annotation r4;

        r0 := @parameter0: java.lang.reflect.AnnotatedElement;

        r1 := @parameter1: java.lang.Class;

        $r5 = staticinvoke <libcore.reflect.AnnotationAccess: java.lang.Class getDexClass(java.lang.reflect.AnnotatedElement)>(r0);

        r2 = virtualinvoke $r5.<java.lang.Class: com.android.dex.Dex getDex()>();

        i0 = staticinvoke <libcore.reflect.AnnotationAccess: int getTypeIndex(com.android.dex.Dex,java.lang.Class)>(r2, r1);

        if i0 != -1 goto label2;

        r4 = null;

     label1:
        return r4;

     label2:
        i1 = staticinvoke <libcore.reflect.AnnotationAccess: int getAnnotationSetOffset(java.lang.reflect.AnnotatedElement)>(r0);

        if i1 != 0 goto label3;

        return null;

     label3:
        r3 = virtualinvoke r2.<com.android.dex.Dex: com.android.dex.Dex$Section open(int)>(i1);

        i2 = 0;

        i3 = virtualinvoke r3.<com.android.dex.Dex$Section: int readInt()>();

     label4:
        if i2 >= i3 goto label5;

        $i4 = virtualinvoke r3.<com.android.dex.Dex$Section: int readInt()>();

        $r6 = virtualinvoke r2.<com.android.dex.Dex: com.android.dex.Dex$Section open(int)>($i4);

        r4 = virtualinvoke $r6.<com.android.dex.Dex$Section: com.android.dex.Annotation readAnnotation()>();

        $i5 = virtualinvoke r4.<com.android.dex.Annotation: int getTypeIndex()>();

        if $i5 == i0 goto label1;

        i2 = i2 + 1;

        goto label4;

     label5:
        return null;
    }

    public static int getMethodIndex(java.lang.Class, java.lang.String, int)
    {
        java.lang.Class r0;
        java.lang.String r1;
        int i0, $i1, $i2, $i3;
        com.android.dex.Dex r2;
        com.android.dex.MethodId $r3;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 = virtualinvoke r0.<java.lang.Class: com.android.dex.Dex getDex()>();

        $r3 = new com.android.dex.MethodId;

        $i1 = staticinvoke <libcore.reflect.AnnotationAccess: int getTypeIndex(com.android.dex.Dex,java.lang.Class)>(r2, r0);

        $i2 = virtualinvoke r2.<com.android.dex.Dex: int findStringIndex(java.lang.String)>(r1);

        specialinvoke $r3.<com.android.dex.MethodId: void <init>(com.android.dex.Dex,int,int,int)>(r2, $i1, i0, $i2);

        $i3 = virtualinvoke r2.<com.android.dex.Dex: int findMethodIndex(com.android.dex.MethodId)>($r3);

        return $i3;
    }

    private static com.android.dex.EncodedValueReader getOnlyAnnotationValue(com.android.dex.Dex, java.lang.reflect.AnnotatedElement, java.lang.String)
    {
        com.android.dex.Dex r0;
        java.lang.reflect.AnnotatedElement r1;
        java.lang.String r2;
        com.android.dex.EncodedValueReader r3;

        r0 := @parameter0: com.android.dex.Dex;

        r1 := @parameter1: java.lang.reflect.AnnotatedElement;

        r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <libcore.reflect.AnnotationAccess: com.android.dex.EncodedValueReader getAnnotationReader(com.android.dex.Dex,java.lang.reflect.AnnotatedElement,java.lang.String,int)>(r0, r1, r2, 1);

        if r3 != null goto label1;

        return null;

     label1:
        virtualinvoke r3.<com.android.dex.EncodedValueReader: int readAnnotationName()>();

        return r3;
    }

    public static java.lang.annotation.Annotation[][] getParameterAnnotations(java.lang.Class, int)
    {
        java.lang.Class r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, $i14, $i16, $i17;
        com.android.dex.Dex r1;
        com.android.dex.Dex$Section r2, r3;
        java.lang.annotation.Annotation[][] r4, $r16, $r21;
        java.util.List r5, $r7, $r10;
        java.lang.Object $r6, $r9, $r15, $r22;
        com.android.dex.MethodId $r8;
        com.android.dex.ProtoId $r11;
        short[] $r12;
        com.android.dex.TypeList $r13;
        int[] $r14, $r20;
        java.lang.annotation.Annotation[] $r17, $r19;
        java.lang.Object[] $r18;

        r0 := @parameter0: java.lang.Class;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<java.lang.Class: com.android.dex.Dex getDex()>();

        $r7 = virtualinvoke r1.<com.android.dex.Dex: java.util.List methodIds()>();

        $r6 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i0);

        $r8 = (com.android.dex.MethodId) $r6;

        i1 = virtualinvoke $r8.<com.android.dex.MethodId: int getProtoIndex()>();

        $r10 = virtualinvoke r1.<com.android.dex.Dex: java.util.List protoIds()>();

        $r9 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i1);

        $r11 = (com.android.dex.ProtoId) $r9;

        $i14 = virtualinvoke $r11.<com.android.dex.ProtoId: int getParametersOffset()>();

        $r13 = virtualinvoke r1.<com.android.dex.Dex: com.android.dex.TypeList readTypeList(int)>($i14);

        $r12 = virtualinvoke $r13.<com.android.dex.TypeList: short[] getTypes()>();

        i2 = lengthof $r12;

        i3 = virtualinvoke r0.<java.lang.Class: int getDexAnnotationDirectoryOffset()>();

        if i3 != 0 goto label01;

        $r20 = newarray (int)[2];

        $r20[0] = i2;

        $r20[1] = 0;

        $r22 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>(class "java/lang/annotation/Annotation", $r20);

        $r21 = (java.lang.annotation.Annotation[][]) $r22;

        return $r21;

     label01:
        r2 = virtualinvoke r1.<com.android.dex.Dex: com.android.dex.Dex$Section open(int)>(i3);

        virtualinvoke r2.<com.android.dex.Dex$Section: int readInt()>();

        i4 = virtualinvoke r2.<com.android.dex.Dex$Section: int readInt()>();

        i5 = virtualinvoke r2.<com.android.dex.Dex$Section: int readInt()>();

        i6 = virtualinvoke r2.<com.android.dex.Dex$Section: int readInt()>();

        i7 = 0;

     label02:
        if i7 >= i4 goto label03;

        virtualinvoke r2.<com.android.dex.Dex$Section: int readInt()>();

        virtualinvoke r2.<com.android.dex.Dex$Section: int readInt()>();

        i7 = i7 + 1;

        goto label02;

     label03:
        i8 = 0;

     label04:
        if i8 >= i5 goto label05;

        virtualinvoke r2.<com.android.dex.Dex$Section: int readInt()>();

        virtualinvoke r2.<com.android.dex.Dex$Section: int readInt()>();

        i8 = i8 + 1;

        goto label04;

     label05:
        i9 = 0;

     label06:
        if i9 >= i6 goto label10;

        i10 = virtualinvoke r2.<com.android.dex.Dex$Section: int readInt()>();

        i11 = virtualinvoke r2.<com.android.dex.Dex$Section: int readInt()>();

        if i10 == i0 goto label07;

        i9 = i9 + 1;

        goto label06;

     label07:
        r3 = virtualinvoke r1.<com.android.dex.Dex: com.android.dex.Dex$Section open(int)>(i11);

        i12 = virtualinvoke r3.<com.android.dex.Dex$Section: int readInt()>();

        r4 = newarray (java.lang.annotation.Annotation[])[i12];

        i13 = 0;

     label08:
        if i13 >= i12 goto label09;

        $i17 = virtualinvoke r3.<com.android.dex.Dex$Section: int readInt()>();

        r5 = staticinvoke <libcore.reflect.AnnotationAccess: java.util.List annotationSetToAnnotations(java.lang.Class,int)>(r0, $i17);

        $i16 = interfaceinvoke r5.<java.util.List: int size()>();

        $r19 = newarray (java.lang.annotation.Annotation)[$i16];

        $r18 = interfaceinvoke r5.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r19);

        $r17 = (java.lang.annotation.Annotation[]) $r18;

        r4[i13] = $r17;

        i13 = i13 + 1;

        goto label08;

     label09:
        return r4;

     label10:
        $r14 = newarray (int)[2];

        $r14[0] = i2;

        $r14[1] = 0;

        $r15 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>(class "java/lang/annotation/Annotation", $r14);

        $r16 = (java.lang.annotation.Annotation[][]) $r15;

        return $r16;
    }

    public static java.lang.String getSignature(java.lang.reflect.AnnotatedElement)
    {
        java.lang.reflect.AnnotatedElement r0;
        java.lang.Class r1;
        com.android.dex.Dex r2;
        com.android.dex.EncodedValueReader r3;
        java.lang.String[] r4, $r7;
        java.lang.StringBuilder r5, $r8;
        int i0, i1;
        java.lang.Object $r6;
        java.lang.String $r9, $r10;

        r0 := @parameter0: java.lang.reflect.AnnotatedElement;

        r1 = staticinvoke <libcore.reflect.AnnotationAccess: java.lang.Class getDexClass(java.lang.reflect.AnnotatedElement)>(r0);

        r2 = virtualinvoke r1.<java.lang.Class: com.android.dex.Dex getDex()>();

        r3 = staticinvoke <libcore.reflect.AnnotationAccess: com.android.dex.EncodedValueReader getOnlyAnnotationValue(com.android.dex.Dex,java.lang.reflect.AnnotatedElement,java.lang.String)>(r2, r0, "Ldalvik/annotation/Signature;");

        if r3 != null goto label1;

        return null;

     label1:
        $r6 = staticinvoke <libcore.reflect.AnnotationAccess: java.lang.Object decodeValue(java.lang.Class,java.lang.Class,com.android.dex.Dex,com.android.dex.EncodedValueReader)>(r1, class "[Ljava/lang/String;", r2, r3);

        $r7 = (java.lang.String[]) $r6;

        r4 = (java.lang.String[]) $r7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        r5 = $r8;

        i0 = lengthof r4;

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r10 = r4[i1];

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        i1 = i1 + 1;

        goto label2;

     label3:
        $r9 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    private static int getTypeIndex(com.android.dex.Dex, java.lang.Class)
    {
        com.android.dex.Dex r0, $r2;
        java.lang.Class r1;
        int i0;
        java.lang.String $r3;

        r0 := @parameter0: com.android.dex.Dex;

        r1 := @parameter1: java.lang.Class;

        $r2 = virtualinvoke r1.<java.lang.Class: com.android.dex.Dex getDex()>();

        if r0 != $r2 goto label2;

        i0 = virtualinvoke r1.<java.lang.Class: int getDexTypeIndex()>();

     label1:
        return i0;

     label2:
        if r0 != null goto label3;

        return -1;

     label3:
        $r3 = staticinvoke <libcore.reflect.InternalNames: java.lang.String getInternalName(java.lang.Class)>(r1);

        i0 = virtualinvoke r0.<com.android.dex.Dex: int findTypeIndex(java.lang.String)>($r3);

        if i0 >= 0 goto label1;

        return -1;
    }

    private static java.lang.reflect.AccessibleObject indexToMethod(java.lang.Class, com.android.dex.Dex, int)
    {
        java.lang.Class r0, r2, $r9;
        com.android.dex.Dex r1;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.lang.String r3, $r15, $r19, $r20;
        short[] r4;
        java.lang.Class[] r5;
        java.lang.reflect.Method r7;
        boolean $z0;
        java.lang.reflect.Constructor $r8;
        short $s6;
        java.lang.IncompatibleClassChangeError $r10;
        java.lang.NoSuchMethodException $r11;
        java.lang.StringBuilder $r12, $r13, $r14, $r16, $r17, $r18;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: com.android.dex.Dex;

        i0 := @parameter2: int;

        $i2 = virtualinvoke r1.<com.android.dex.Dex: int declaringClassIndexFromMethodIndex(int)>(i0);

        r2 = virtualinvoke r0.<java.lang.Class: java.lang.Class getDexCacheType(com.android.dex.Dex,int)>(r1, $i2);

        $i3 = virtualinvoke r1.<com.android.dex.Dex: int nameIndexFromMethodIndex(int)>(i0);

        r3 = virtualinvoke r0.<java.lang.Class: java.lang.String getDexCacheString(com.android.dex.Dex,int)>(r1, $i3);

        r4 = virtualinvoke r1.<com.android.dex.Dex: short[] parameterTypeIndicesFromMethodIndex(int)>(i0);

        $i4 = lengthof r4;

        r5 = newarray (java.lang.Class)[$i4];

        i1 = 0;

     label1:
        $i5 = lengthof r4;

        if i1 >= $i5 goto label2;

        $s6 = r4[i1];

        $r9 = virtualinvoke r0.<java.lang.Class: java.lang.Class getDexCacheType(com.android.dex.Dex,int)>(r1, $s6);

        r5[i1] = $r9;

        i1 = i1 + 1;

        goto label1;

     label2:
        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("<init>");

        if $z0 == 0 goto label3;

        $r8 = virtualinvoke r2.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>(r5);

        return $r8;

     label3:
        r7 = virtualinvoke r2.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(r3, r5);

     label4:
        return r7;

     label5:
        $r11 := @caughtexception;

        $r10 = new java.lang.IncompatibleClassChangeError;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t find ");

        $r15 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r19 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r5);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IncompatibleClassChangeError: void <init>(java.lang.String)>($r20);

        throw $r10;

        catch java.lang.NoSuchMethodException from label2 to label3 with label5;
        catch java.lang.NoSuchMethodException from label3 to label4 with label5;
    }

    public static boolean isAnnotationPresent(java.lang.Class, java.lang.Class)
    {
        java.lang.Class r0, r1, r2;
        boolean $z0, $z1, $z2;
        java.lang.NullPointerException $r3;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.Class;

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("annotationType == null");

        throw $r3;

     label1:
        $z0 = staticinvoke <libcore.reflect.AnnotationAccess: boolean isDeclaredAnnotationPresent(java.lang.reflect.AnnotatedElement,java.lang.Class)>(r0, r1);

        if $z0 == 0 goto label3;

     label2:
        return 1;

     label3:
        $z1 = staticinvoke <libcore.reflect.AnnotationAccess: boolean isInherited(java.lang.Class)>(r1);

        if $z1 == 0 goto label5;

        r2 = virtualinvoke r0.<java.lang.Class: java.lang.Class getSuperclass()>();

     label4:
        if r2 == null goto label5;

        $z2 = staticinvoke <libcore.reflect.AnnotationAccess: boolean isDeclaredAnnotationPresent(java.lang.reflect.AnnotatedElement,java.lang.Class)>(r2, r1);

        if $z2 != 0 goto label2;

        r2 = virtualinvoke r2.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label4;

     label5:
        return 0;
    }

    public static boolean isAnonymousClass(java.lang.Class)
    {
        java.lang.Class r0;
        com.android.dex.EncodedValueReader r1;
        com.android.dex.Dex $r2;
        int $i3;

        r0 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<java.lang.Class: com.android.dex.Dex getDex()>();

        r1 = staticinvoke <libcore.reflect.AnnotationAccess: com.android.dex.EncodedValueReader getAnnotationReader(com.android.dex.Dex,java.lang.reflect.AnnotatedElement,java.lang.String,int)>($r2, r0, "Ldalvik/annotation/InnerClass;", 2);

        if r1 != null goto label2;

     label1:
        return 0;

     label2:
        virtualinvoke r1.<com.android.dex.EncodedValueReader: int readAnnotationName()>();

        virtualinvoke r1.<com.android.dex.EncodedValueReader: int readInt()>();

        virtualinvoke r1.<com.android.dex.EncodedValueReader: int readAnnotationName()>();

        $i3 = virtualinvoke r1.<com.android.dex.EncodedValueReader: int peek()>();

        if $i3 != 30 goto label1;

        return 1;
    }

    public static boolean isDeclaredAnnotationPresent(java.lang.reflect.AnnotatedElement, java.lang.Class)
    {
        java.lang.reflect.AnnotatedElement r0;
        java.lang.Class r1;
        com.android.dex.Annotation $r2;

        r0 := @parameter0: java.lang.reflect.AnnotatedElement;

        r1 := @parameter1: java.lang.Class;

        $r2 = staticinvoke <libcore.reflect.AnnotationAccess: com.android.dex.Annotation getMethodAnnotation(java.lang.reflect.AnnotatedElement,java.lang.Class)>(r0, r1);

        if $r2 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    private static boolean isInherited(java.lang.Class)
    {
        java.lang.Class r0;
        boolean $z0;

        r0 := @parameter0: java.lang.Class;

        $z0 = staticinvoke <libcore.reflect.AnnotationAccess: boolean isDeclaredAnnotationPresent(java.lang.reflect.AnnotatedElement,java.lang.Class)>(r0, class "java/lang/annotation/Inherited");

        return $z0;
    }

    private static java.lang.annotation.Annotation toAnnotationInstance(java.lang.Class, com.android.dex.Dex, java.lang.Class, com.android.dex.EncodedValueReader)
    {
        java.lang.Class r0, r2, r8, $r9;
        com.android.dex.Dex r1;
        com.android.dex.EncodedValueReader r3;
        int i0, i1, i2, $i3;
        libcore.reflect.AnnotationMember[] r4;
        java.lang.String r5, $r20, $r25;
        java.lang.reflect.Method r7;
        java.lang.annotation.Annotation $r10;
        java.util.List $r11;
        java.lang.Class[] $r12;
        java.lang.Object $r13, $r14;
        libcore.reflect.AnnotationMember $r15;
        java.lang.NoSuchMethodException $r16;
        java.lang.AssertionError $r17;
        java.lang.StringBuilder $r18, $r21, $r22, $r23, $r24;
        java.lang.IncompatibleClassChangeError $r19;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: com.android.dex.Dex;

        r2 := @parameter2: java.lang.Class;

        r3 := @parameter3: com.android.dex.EncodedValueReader;

        i0 = virtualinvoke r3.<com.android.dex.EncodedValueReader: int readAnnotation()>();

        $i3 = virtualinvoke r3.<com.android.dex.EncodedValueReader: int getAnnotationType()>();

        $r9 = virtualinvoke r0.<java.lang.Class: java.lang.Class getDexCacheType(com.android.dex.Dex,int)>(r1, $i3);

        if r2 == $r9 goto label1;

        $r17 = new java.lang.AssertionError;

        specialinvoke $r17.<java.lang.AssertionError: void <init>(java.lang.Object)>("annotation value type != return type");

        throw $r17;

     label1:
        r4 = newarray (libcore.reflect.AnnotationMember)[i0];

        i1 = 0;

     label2:
        if i1 >= i0 goto label6;

        i2 = virtualinvoke r3.<com.android.dex.EncodedValueReader: int readAnnotationName()>();

        $r11 = virtualinvoke r1.<com.android.dex.Dex: java.util.List strings()>();

        $r13 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(i2);

        r5 = (java.lang.String) $r13;

     label3:
        $r12 = <libcore.reflect.AnnotationAccess: java.lang.Class[] NO_ARGUMENTS>;

        r7 = virtualinvoke r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r5, $r12);

     label4:
        r8 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r15 = new libcore.reflect.AnnotationMember;

        $r14 = staticinvoke <libcore.reflect.AnnotationAccess: java.lang.Object decodeValue(java.lang.Class,java.lang.Class,com.android.dex.Dex,com.android.dex.EncodedValueReader)>(r0, r8, r1, r3);

        specialinvoke $r15.<libcore.reflect.AnnotationMember: void <init>(java.lang.String,java.lang.Object,java.lang.Class,java.lang.reflect.Method)>(r5, $r14, r8, r7);

        r4[i1] = $r15;

        i1 = i1 + 1;

        goto label2;

     label5:
        $r16 := @caughtexception;

        $r19 = new java.lang.IncompatibleClassChangeError;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t find ");

        $r20 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IncompatibleClassChangeError: void <init>(java.lang.String)>($r25);

        throw $r19;

     label6:
        $r10 = staticinvoke <libcore.reflect.AnnotationFactory: java.lang.annotation.Annotation createAnnotation(java.lang.Class,libcore.reflect.AnnotationMember[])>(r2, r4);

        return $r10;

        catch java.lang.NoSuchMethodException from label3 to label4 with label5;
    }

    private static java.lang.annotation.Annotation toAnnotationInstance(java.lang.Class, java.lang.Class, com.android.dex.Annotation)
    {
        java.lang.Class r0, r1;
        com.android.dex.Annotation r2;
        com.android.dex.Dex $r3;
        com.android.dex.EncodedValueReader $r4;
        java.lang.annotation.Annotation $r5;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: com.android.dex.Annotation;

        $r3 = virtualinvoke r0.<java.lang.Class: com.android.dex.Dex getDex()>();

        $r4 = virtualinvoke r2.<com.android.dex.Annotation: com.android.dex.EncodedValueReader getReader()>();

        $r5 = staticinvoke <libcore.reflect.AnnotationAccess: java.lang.annotation.Annotation toAnnotationInstance(java.lang.Class,com.android.dex.Dex,java.lang.Class,com.android.dex.EncodedValueReader)>(r0, $r3, r1, $r4);

        return $r5;
    }
}
