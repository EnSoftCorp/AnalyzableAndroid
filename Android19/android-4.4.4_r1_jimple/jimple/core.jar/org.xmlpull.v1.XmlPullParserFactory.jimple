public class org.xmlpull.v1.XmlPullParserFactory extends java.lang.Object
{
    public static final java.lang.String PROPERTY_NAME;
    private static final java.lang.String RESOURCE_NAME;
    static final java.lang.Class referenceContextClass;
    protected java.lang.String classNamesLocation;
    protected java.util.HashMap features;
    protected java.util.ArrayList parserClasses;
    protected java.util.ArrayList serializerClasses;

    static void <clinit>()
    {
        org.xmlpull.v1.XmlPullParserFactory $r0;
        java.lang.Class $r1;

        <org.xmlpull.v1.XmlPullParserFactory: java.lang.String RESOURCE_NAME> = "/META-INF/services/org.xmlpull.v1.XmlPullParserFactory";

        <org.xmlpull.v1.XmlPullParserFactory: java.lang.String PROPERTY_NAME> = "org.xmlpull.v1.XmlPullParserFactory";

        $r0 = new org.xmlpull.v1.XmlPullParserFactory;

        specialinvoke $r0.<org.xmlpull.v1.XmlPullParserFactory: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        <org.xmlpull.v1.XmlPullParserFactory: java.lang.Class referenceContextClass> = $r1;

        return;
    }

    protected void <init>()
    {
        org.xmlpull.v1.XmlPullParserFactory r0;
        java.util.HashMap $r1;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.HashMap features> = $r1;

        return;
    }

    public static org.xmlpull.v1.XmlPullParserFactory newInstance() throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.XmlPullParserFactory $r0;

        $r0 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance(java.lang.String,java.lang.Class)>(null, null);

        return $r0;
    }

    public static org.xmlpull.v1.XmlPullParserFactory newInstance(java.lang.String, java.lang.Class) throws org.xmlpull.v1.XmlPullParserException
    {
        java.lang.String r0, r5, $r12, $r13, $r15, $r20, $r22;
        java.lang.Class r1, r6;
        org.xmlpull.v1.XmlPullParserFactory r2, $r14;
        java.util.ArrayList r3, r4, $r10, $r11;
        int i0, i1, $i2;
        java.lang.Object r8, r9;
        boolean z0, z1, $z2, $z3;
        org.xmlpull.v1.XmlPullParserException $r16;
        java.lang.StringBuilder $r17, $r18, $r19;
        java.lang.Exception $r21;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Class;

        r2 = null;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r3 = $r11;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r4 = $r10;

        i0 = 0;

     label01:
        $r12 = "org.kxml2.io.KXmlParser,org.kxml2.io.KXmlSerializer";

        $i2 = virtualinvoke $r12.<java.lang.String: int length()>();

        if i0 >= $i2 goto label11;

        $r13 = "org.kxml2.io.KXmlParser,org.kxml2.io.KXmlSerializer";

        i1 = virtualinvoke $r13.<java.lang.String: int indexOf(int,int)>(44, i0);

        if i1 != -1 goto label02;

        $r22 = "org.kxml2.io.KXmlParser,org.kxml2.io.KXmlSerializer";

        i1 = virtualinvoke $r22.<java.lang.String: int length()>();

     label02:
        $r15 = "org.kxml2.io.KXmlParser,org.kxml2.io.KXmlSerializer";

        r5 = virtualinvoke $r15.<java.lang.String: java.lang.String substring(int,int)>(i0, i1);

        r6 = null;

     label03:
        r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r5);

        r9 = virtualinvoke r6.<java.lang.Class: java.lang.Object newInstance()>();

     label04:
        r8 = r9;

     label05:
        if r6 == null goto label10;

        z0 = r8 instanceof org.xmlpull.v1.XmlPullParser;

        z1 = 0;

        if z0 == 0 goto label06;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

        z1 = 1;

     label06:
        $z2 = r8 instanceof org.xmlpull.v1.XmlSerializer;

        if $z2 == 0 goto label07;

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

        z1 = 1;

     label07:
        $z3 = r8 instanceof org.xmlpull.v1.XmlPullParserFactory;

        if $z3 == 0 goto label09;

        if r2 != null goto label08;

        r2 = (org.xmlpull.v1.XmlPullParserFactory) r8;

     label08:
        z1 = 1;

     label09:
        if z1 != 0 goto label10;

        $r16 = new org.xmlpull.v1.XmlPullParserException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("incompatible class: ");

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r20);

        throw $r16;

     label10:
        i0 = i1 + 1;

        goto label01;

     label11:
        if r2 != null goto label12;

        $r14 = new org.xmlpull.v1.XmlPullParserFactory;

        specialinvoke $r14.<org.xmlpull.v1.XmlPullParserFactory: void <init>()>();

        r2 = $r14;

     label12:
        r2.<org.xmlpull.v1.XmlPullParserFactory: java.util.ArrayList parserClasses> = r3;

        r2.<org.xmlpull.v1.XmlPullParserFactory: java.util.ArrayList serializerClasses> = r4;

        r2.<org.xmlpull.v1.XmlPullParserFactory: java.lang.String classNamesLocation> = "org.kxml2.io.kXmlParser,org.kxml2.io.KXmlSerializer";

        return r2;

     label13:
        $r21 := @caughtexception;

        r8 = null;

        goto label05;

        catch java.lang.Exception from label03 to label04 with label13;
    }

    public boolean getFeature(java.lang.String)
    {
        org.xmlpull.v1.XmlPullParserFactory r0;
        java.lang.String r1;
        java.lang.Boolean r2;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.HashMap features>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.lang.Boolean) $r4;

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;

     label1:
        return 0;
    }

    public boolean isNamespaceAware()
    {
        org.xmlpull.v1.XmlPullParserFactory r0;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        $z0 = virtualinvoke r0.<org.xmlpull.v1.XmlPullParserFactory: boolean getFeature(java.lang.String)>("http://xmlpull.org/v1/doc/features.html#process-namespaces");

        return $z0;
    }

    public boolean isValidating()
    {
        org.xmlpull.v1.XmlPullParserFactory r0;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        $z0 = virtualinvoke r0.<org.xmlpull.v1.XmlPullParserFactory: boolean getFeature(java.lang.String)>("http://xmlpull.org/v1/doc/features.html#validation");

        return $z0;
    }

    public org.xmlpull.v1.XmlPullParser newPullParser() throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.XmlPullParserFactory r0;
        java.lang.StringBuilder r1, $r10, $r12, $r14, $r15, $r25, $r28, $r30, $r31, $r33, $r35, $r38, $r40, $r41, $r42, $r44;
        int i0, $i1, $i2;
        java.lang.Class r2;
        java.lang.Exception r3, $r39;
        org.xmlpull.v1.XmlPullParser r4;
        java.util.Iterator r5;
        java.lang.String r6, $r17, $r26, $r32, $r34, $r36, $r37, $r43, $r46;
        java.lang.Boolean r7;
        java.util.ArrayList $r8, $r9, $r11, $r16;
        org.xmlpull.v1.XmlPullParserException $r13, $r27, $r29;
        java.lang.Object $r18, $r19, $r23, $r24;
        java.util.Set $r20;
        java.util.HashMap $r21, $r22;
        boolean $z0, $z1;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        $r8 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.ArrayList parserClasses>;

        if $r8 != null goto label01;

        $r29 = new org.xmlpull.v1.XmlPullParserException;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Factory initialization was incomplete - has not tried ");

        $r36 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.lang.String classNamesLocation>;

        $r33 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r34);

        throw $r29;

     label01:
        $r9 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.ArrayList parserClasses>;

        $i1 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        if $i1 != 0 goto label02;

        $r27 = new org.xmlpull.v1.XmlPullParserException;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No valid parser classes found in ");

        $r26 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.lang.String classNamesLocation>;

        $r31 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r32);

        throw $r27;

     label02:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        r1 = $r10;

        i0 = 0;

     label03:
        $r11 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.ArrayList parserClasses>;

        $i2 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        if i0 >= $i2 goto label10;

        $r16 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.ArrayList parserClasses>;

        $r19 = virtualinvoke $r16.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r2 = (java.lang.Class) $r19;

     label04:
        $r18 = virtualinvoke r2.<java.lang.Class: java.lang.Object newInstance()>();

        r4 = (org.xmlpull.v1.XmlPullParser) $r18;

        $r21 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.HashMap features>;

        $r20 = virtualinvoke $r21.<java.util.HashMap: java.util.Set keySet()>();

        r5 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r23 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r23;

        $r22 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.HashMap features>;

        $r24 = virtualinvoke $r22.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r6);

        r7 = (java.lang.Boolean) $r24;

     label06:
        if r7 == null goto label05;

     label07:
        $z1 = virtualinvoke r7.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label05;

        interfaceinvoke r4.<org.xmlpull.v1.XmlPullParser: void setFeature(java.lang.String,boolean)>(r6, 1);

     label08:
        goto label05;

     label09:
        $r39 := @caughtexception;

        r3 = $r39;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        $r38 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r44 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r43 = virtualinvoke r3.<java.lang.Exception: java.lang.String toString()>();

        $r42 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

        $r46 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        i0 = i0 + 1;

        goto label03;

     label10:
        $r13 = new org.xmlpull.v1.XmlPullParserException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not create parser: ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r17);

        throw $r13;

     label11:
        return r4;

        catch java.lang.Exception from label04 to label05 with label09;
        catch java.lang.Exception from label05 to label06 with label09;
        catch java.lang.Exception from label07 to label08 with label09;
    }

    public org.xmlpull.v1.XmlSerializer newSerializer() throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.XmlPullParserFactory r0;
        java.lang.StringBuilder r1, $r7, $r10, $r11, $r13, $r18, $r19, $r20, $r24, $r25, $r26, $r28, $r33, $r34, $r35, $r37;
        int i0, $i1, $i2;
        java.lang.Class r2;
        java.lang.Exception r3, $r31;
        org.xmlpull.v1.XmlSerializer r4;
        java.util.ArrayList $r5, $r6, $r8, $r15;
        org.xmlpull.v1.XmlPullParserException $r9, $r16, $r22;
        java.lang.String $r12, $r21, $r23, $r27, $r29, $r30, $r32, $r38;
        java.lang.Object $r14, $r17;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        $r5 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.ArrayList serializerClasses>;

        if $r5 != null goto label1;

        $r22 = new org.xmlpull.v1.XmlPullParserException;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Factory initialization incomplete - has not tried ");

        $r27 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.lang.String classNamesLocation>;

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r30);

        throw $r22;

     label1:
        $r6 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.ArrayList serializerClasses>;

        $i1 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        if $i1 != 0 goto label2;

        $r16 = new org.xmlpull.v1.XmlPullParserException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No valid serializer classes found in ");

        $r21 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.lang.String classNamesLocation>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r23);

        throw $r16;

     label2:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        r1 = $r7;

        i0 = 0;

     label3:
        $r8 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.ArrayList serializerClasses>;

        $i2 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if i0 >= $i2 goto label7;

        $r15 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.ArrayList serializerClasses>;

        $r14 = virtualinvoke $r15.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r2 = (java.lang.Class) $r14;

     label4:
        $r17 = virtualinvoke r2.<java.lang.Class: java.lang.Object newInstance()>();

        r4 = (org.xmlpull.v1.XmlSerializer) $r17;

     label5:
        return r4;

     label6:
        $r31 := @caughtexception;

        r3 = $r31;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        $r34 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r32 = virtualinvoke r3.<java.lang.Exception: java.lang.String toString()>();

        $r33 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r37 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        i0 = i0 + 1;

        goto label3;

     label7:
        $r9 = new org.xmlpull.v1.XmlPullParserException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not create serializer: ");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r12);

        throw $r9;

        catch java.lang.Exception from label4 to label5 with label6;
    }

    public void setFeature(java.lang.String, boolean) throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.XmlPullParserFactory r0;
        java.lang.String r1;
        boolean z0;
        java.util.HashMap $r2;
        java.lang.Boolean $r3;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.HashMap features>;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3);

        return;
    }

    public void setNamespaceAware(boolean)
    {
        org.xmlpull.v1.XmlPullParserFactory r0;
        boolean z0;
        java.util.HashMap $r1;
        java.lang.Boolean $r2;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.HashMap features>;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://xmlpull.org/v1/doc/features.html#process-namespaces", $r2);

        return;
    }

    public void setValidating(boolean)
    {
        org.xmlpull.v1.XmlPullParserFactory r0;
        boolean z0;
        java.util.HashMap $r1;
        java.lang.Boolean $r2;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.HashMap features>;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://xmlpull.org/v1/doc/features.html#validation", $r2);

        return;
    }
}
