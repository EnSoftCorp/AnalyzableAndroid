public final class com.android.dex.Dex extends java.lang.Object
{
    private static final int CHECKSUM_OFFSET;
    private static final int CHECKSUM_SIZE;
    static final short[] EMPTY_SHORT_ARRAY;
    private static final int SIGNATURE_OFFSET;
    private static final int SIGNATURE_SIZE;
    private java.nio.ByteBuffer data;
    private final com.android.dex.Dex$FieldIdTable fieldIds;
    private final com.android.dex.Dex$MethodIdTable methodIds;
    private int nextSectionStart;
    private final com.android.dex.Dex$ProtoIdTable protoIds;
    private final com.android.dex.Dex$StringTable strings;
    private final com.android.dex.TableOfContents tableOfContents;
    private final com.android.dex.Dex$TypeIndexToDescriptorIndexTable typeIds;
    private final com.android.dex.Dex$TypeIndexToDescriptorTable typeNames;

    static void <clinit>()
    {
        short[] $r0;

        <com.android.dex.Dex: int SIGNATURE_SIZE> = 20;

        <com.android.dex.Dex: int SIGNATURE_OFFSET> = 12;

        <com.android.dex.Dex: int CHECKSUM_SIZE> = 4;

        <com.android.dex.Dex: int CHECKSUM_OFFSET> = 8;

        $r0 = newarray (short)[0];

        <com.android.dex.Dex: short[] EMPTY_SHORT_ARRAY> = $r0;

        return;
    }

    public void <init>(int) throws java.io.IOException
    {
        com.android.dex.Dex r0;
        int i0;
        com.android.dex.TableOfContents $r1;
        com.android.dex.Dex$StringTable $r2;
        com.android.dex.Dex$TypeIndexToDescriptorIndexTable $r3;
        com.android.dex.Dex$TypeIndexToDescriptorTable $r4;
        com.android.dex.Dex$ProtoIdTable $r5;
        com.android.dex.Dex$FieldIdTable $r6;
        com.android.dex.Dex$MethodIdTable $r7;
        byte[] $r8;
        java.nio.ByteBuffer $r9, $r11;
        java.nio.ByteOrder $r10;

        r0 := @this: com.android.dex.Dex;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.android.dex.TableOfContents;

        specialinvoke $r1.<com.android.dex.TableOfContents: void <init>()>();

        r0.<com.android.dex.Dex: com.android.dex.TableOfContents tableOfContents> = $r1;

        r0.<com.android.dex.Dex: int nextSectionStart> = 0;

        $r2 = new com.android.dex.Dex$StringTable;

        specialinvoke $r2.<com.android.dex.Dex$StringTable: void <init>(com.android.dex.Dex,com.android.dex.Dex$1)>(r0, null);

        r0.<com.android.dex.Dex: com.android.dex.Dex$StringTable strings> = $r2;

        $r3 = new com.android.dex.Dex$TypeIndexToDescriptorIndexTable;

        specialinvoke $r3.<com.android.dex.Dex$TypeIndexToDescriptorIndexTable: void <init>(com.android.dex.Dex,com.android.dex.Dex$1)>(r0, null);

        r0.<com.android.dex.Dex: com.android.dex.Dex$TypeIndexToDescriptorIndexTable typeIds> = $r3;

        $r4 = new com.android.dex.Dex$TypeIndexToDescriptorTable;

        specialinvoke $r4.<com.android.dex.Dex$TypeIndexToDescriptorTable: void <init>(com.android.dex.Dex,com.android.dex.Dex$1)>(r0, null);

        r0.<com.android.dex.Dex: com.android.dex.Dex$TypeIndexToDescriptorTable typeNames> = $r4;

        $r5 = new com.android.dex.Dex$ProtoIdTable;

        specialinvoke $r5.<com.android.dex.Dex$ProtoIdTable: void <init>(com.android.dex.Dex,com.android.dex.Dex$1)>(r0, null);

        r0.<com.android.dex.Dex: com.android.dex.Dex$ProtoIdTable protoIds> = $r5;

        $r6 = new com.android.dex.Dex$FieldIdTable;

        specialinvoke $r6.<com.android.dex.Dex$FieldIdTable: void <init>(com.android.dex.Dex,com.android.dex.Dex$1)>(r0, null);

        r0.<com.android.dex.Dex: com.android.dex.Dex$FieldIdTable fieldIds> = $r6;

        $r7 = new com.android.dex.Dex$MethodIdTable;

        specialinvoke $r7.<com.android.dex.Dex$MethodIdTable: void <init>(com.android.dex.Dex,com.android.dex.Dex$1)>(r0, null);

        r0.<com.android.dex.Dex: com.android.dex.Dex$MethodIdTable methodIds> = $r7;

        $r8 = newarray (byte)[i0];

        $r9 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r8);

        r0.<com.android.dex.Dex: java.nio.ByteBuffer data> = $r9;

        $r11 = r0.<com.android.dex.Dex: java.nio.ByteBuffer data>;

        $r10 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        virtualinvoke $r11.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r10);

        return;
    }

    public void <init>(java.io.File) throws java.io.IOException
    {
        com.android.dex.Dex r0;
        java.io.File r1;
        java.util.zip.ZipFile r2, $r18;
        java.util.zip.ZipEntry r3;
        com.android.dex.TableOfContents $r4;
        com.android.dex.Dex$StringTable $r5;
        com.android.dex.Dex$TypeIndexToDescriptorIndexTable $r6;
        com.android.dex.Dex$TypeIndexToDescriptorTable $r7;
        com.android.dex.Dex$ProtoIdTable $r8;
        com.android.dex.Dex$FieldIdTable $r9;
        com.android.dex.Dex$MethodIdTable $r10;
        java.lang.String $r11, $r12, $r16, $r23;
        boolean $z0, $z1;
        com.android.dex.DexException $r13, $r20;
        java.lang.StringBuilder $r14, $r15, $r17, $r21, $r22, $r24;
        java.io.FileInputStream $r19;
        java.io.InputStream $r25;

        r0 := @this: com.android.dex.Dex;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new com.android.dex.TableOfContents;

        specialinvoke $r4.<com.android.dex.TableOfContents: void <init>()>();

        r0.<com.android.dex.Dex: com.android.dex.TableOfContents tableOfContents> = $r4;

        r0.<com.android.dex.Dex: int nextSectionStart> = 0;

        $r5 = new com.android.dex.Dex$StringTable;

        specialinvoke $r5.<com.android.dex.Dex$StringTable: void <init>(com.android.dex.Dex,com.android.dex.Dex$1)>(r0, null);

        r0.<com.android.dex.Dex: com.android.dex.Dex$StringTable strings> = $r5;

        $r6 = new com.android.dex.Dex$TypeIndexToDescriptorIndexTable;

        specialinvoke $r6.<com.android.dex.Dex$TypeIndexToDescriptorIndexTable: void <init>(com.android.dex.Dex,com.android.dex.Dex$1)>(r0, null);

        r0.<com.android.dex.Dex: com.android.dex.Dex$TypeIndexToDescriptorIndexTable typeIds> = $r6;

        $r7 = new com.android.dex.Dex$TypeIndexToDescriptorTable;

        specialinvoke $r7.<com.android.dex.Dex$TypeIndexToDescriptorTable: void <init>(com.android.dex.Dex,com.android.dex.Dex$1)>(r0, null);

        r0.<com.android.dex.Dex: com.android.dex.Dex$TypeIndexToDescriptorTable typeNames> = $r7;

        $r8 = new com.android.dex.Dex$ProtoIdTable;

        specialinvoke $r8.<com.android.dex.Dex$ProtoIdTable: void <init>(com.android.dex.Dex,com.android.dex.Dex$1)>(r0, null);

        r0.<com.android.dex.Dex: com.android.dex.Dex$ProtoIdTable protoIds> = $r8;

        $r9 = new com.android.dex.Dex$FieldIdTable;

        specialinvoke $r9.<com.android.dex.Dex$FieldIdTable: void <init>(com.android.dex.Dex,com.android.dex.Dex$1)>(r0, null);

        r0.<com.android.dex.Dex: com.android.dex.Dex$FieldIdTable fieldIds> = $r9;

        $r10 = new com.android.dex.Dex$MethodIdTable;

        specialinvoke $r10.<com.android.dex.Dex$MethodIdTable: void <init>(com.android.dex.Dex,com.android.dex.Dex$1)>(r0, null);

        r0.<com.android.dex.Dex: com.android.dex.Dex$MethodIdTable methodIds> = $r10;

        $r11 = virtualinvoke r1.<java.io.File: java.lang.String getName()>();

        $z0 = staticinvoke <com.android.dex.util.FileUtils: boolean hasArchiveSuffix(java.lang.String)>($r11);

        if $z0 == 0 goto label2;

        $r18 = new java.util.zip.ZipFile;

        specialinvoke $r18.<java.util.zip.ZipFile: void <init>(java.io.File)>(r1);

        r2 = $r18;

        r3 = virtualinvoke r2.<java.util.zip.ZipFile: java.util.zip.ZipEntry getEntry(java.lang.String)>("classes.dex");

        if r3 == null goto label1;

        $r25 = virtualinvoke r2.<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>(r3);

        specialinvoke r0.<com.android.dex.Dex: void loadFrom(java.io.InputStream)>($r25);

        virtualinvoke r2.<java.util.zip.ZipFile: void close()>();

        return;

     label1:
        $r20 = new com.android.dex.DexException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected classes.dex in ");

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<com.android.dex.DexException: void <init>(java.lang.String)>($r23);

        throw $r20;

     label2:
        $r12 = virtualinvoke r1.<java.io.File: java.lang.String getName()>();

        $z1 = virtualinvoke $r12.<java.lang.String: boolean endsWith(java.lang.String)>(".dex");

        if $z1 == 0 goto label3;

        $r19 = new java.io.FileInputStream;

        specialinvoke $r19.<java.io.FileInputStream: void <init>(java.io.File)>(r1);

        specialinvoke r0.<com.android.dex.Dex: void loadFrom(java.io.InputStream)>($r19);

        return;

     label3:
        $r13 = new com.android.dex.DexException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown output extension: ");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<com.android.dex.DexException: void <init>(java.lang.String)>($r16);

        throw $r13;
    }

    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        com.android.dex.Dex r0;
        java.io.InputStream r1;
        com.android.dex.TableOfContents $r2;
        com.android.dex.Dex$StringTable $r3;
        com.android.dex.Dex$TypeIndexToDescriptorIndexTable $r4;
        com.android.dex.Dex$TypeIndexToDescriptorTable $r5;
        com.android.dex.Dex$ProtoIdTable $r6;
        com.android.dex.Dex$FieldIdTable $r7;
        com.android.dex.Dex$MethodIdTable $r8;

        r0 := @this: com.android.dex.Dex;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new com.android.dex.TableOfContents;

        specialinvoke $r2.<com.android.dex.TableOfContents: void <init>()>();

        r0.<com.android.dex.Dex: com.android.dex.TableOfContents tableOfContents> = $r2;

        r0.<com.android.dex.Dex: int nextSectionStart> = 0;

        $r3 = new com.android.dex.Dex$StringTable;

        specialinvoke $r3.<com.android.dex.Dex$StringTable: void <init>(com.android.dex.Dex,com.android.dex.Dex$1)>(r0, null);

        r0.<com.android.dex.Dex: com.android.dex.Dex$StringTable strings> = $r3;

        $r4 = new com.android.dex.Dex$TypeIndexToDescriptorIndexTable;

        specialinvoke $r4.<com.android.dex.Dex$TypeIndexToDescriptorIndexTable: void <init>(com.android.dex.Dex,com.android.dex.Dex$1)>(r0, null);

        r0.<com.android.dex.Dex: com.android.dex.Dex$TypeIndexToDescriptorIndexTable typeIds> = $r4;

        $r5 = new com.android.dex.Dex$TypeIndexToDescriptorTable;

        specialinvoke $r5.<com.android.dex.Dex$TypeIndexToDescriptorTable: void <init>(com.android.dex.Dex,com.android.dex.Dex$1)>(r0, null);

        r0.<com.android.dex.Dex: com.android.dex.Dex$TypeIndexToDescriptorTable typeNames> = $r5;

        $r6 = new com.android.dex.Dex$ProtoIdTable;

        specialinvoke $r6.<com.android.dex.Dex$ProtoIdTable: void <init>(com.android.dex.Dex,com.android.dex.Dex$1)>(r0, null);

        r0.<com.android.dex.Dex: com.android.dex.Dex$ProtoIdTable protoIds> = $r6;

        $r7 = new com.android.dex.Dex$FieldIdTable;

        specialinvoke $r7.<com.android.dex.Dex$FieldIdTable: void <init>(com.android.dex.Dex,com.android.dex.Dex$1)>(r0, null);

        r0.<com.android.dex.Dex: com.android.dex.Dex$FieldIdTable fieldIds> = $r7;

        $r8 = new com.android.dex.Dex$MethodIdTable;

        specialinvoke $r8.<com.android.dex.Dex$MethodIdTable: void <init>(com.android.dex.Dex,com.android.dex.Dex$1)>(r0, null);

        r0.<com.android.dex.Dex: com.android.dex.Dex$MethodIdTable methodIds> = $r8;

        specialinvoke r0.<com.android.dex.Dex: void loadFrom(java.io.InputStream)>(r1);

        return;
    }

    private void <init>(java.nio.ByteBuffer) throws java.io.IOException
    {
        com.android.dex.Dex r0;
        java.nio.ByteBuffer r1, $r10;
        com.android.dex.TableOfContents $r2, $r12;
        com.android.dex.Dex$StringTable $r3;
        com.android.dex.Dex$TypeIndexToDescriptorIndexTable $r4;
        com.android.dex.Dex$TypeIndexToDescriptorTable $r5;
        com.android.dex.Dex$ProtoIdTable $r6;
        com.android.dex.Dex$FieldIdTable $r7;
        com.android.dex.Dex$MethodIdTable $r8;
        java.nio.ByteOrder $r9;

        r0 := @this: com.android.dex.Dex;

        r1 := @parameter0: java.nio.ByteBuffer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new com.android.dex.TableOfContents;

        specialinvoke $r2.<com.android.dex.TableOfContents: void <init>()>();

        r0.<com.android.dex.Dex: com.android.dex.TableOfContents tableOfContents> = $r2;

        r0.<com.android.dex.Dex: int nextSectionStart> = 0;

        $r3 = new com.android.dex.Dex$StringTable;

        specialinvoke $r3.<com.android.dex.Dex$StringTable: void <init>(com.android.dex.Dex,com.android.dex.Dex$1)>(r0, null);

        r0.<com.android.dex.Dex: com.android.dex.Dex$StringTable strings> = $r3;

        $r4 = new com.android.dex.Dex$TypeIndexToDescriptorIndexTable;

        specialinvoke $r4.<com.android.dex.Dex$TypeIndexToDescriptorIndexTable: void <init>(com.android.dex.Dex,com.android.dex.Dex$1)>(r0, null);

        r0.<com.android.dex.Dex: com.android.dex.Dex$TypeIndexToDescriptorIndexTable typeIds> = $r4;

        $r5 = new com.android.dex.Dex$TypeIndexToDescriptorTable;

        specialinvoke $r5.<com.android.dex.Dex$TypeIndexToDescriptorTable: void <init>(com.android.dex.Dex,com.android.dex.Dex$1)>(r0, null);

        r0.<com.android.dex.Dex: com.android.dex.Dex$TypeIndexToDescriptorTable typeNames> = $r5;

        $r6 = new com.android.dex.Dex$ProtoIdTable;

        specialinvoke $r6.<com.android.dex.Dex$ProtoIdTable: void <init>(com.android.dex.Dex,com.android.dex.Dex$1)>(r0, null);

        r0.<com.android.dex.Dex: com.android.dex.Dex$ProtoIdTable protoIds> = $r6;

        $r7 = new com.android.dex.Dex$FieldIdTable;

        specialinvoke $r7.<com.android.dex.Dex$FieldIdTable: void <init>(com.android.dex.Dex,com.android.dex.Dex$1)>(r0, null);

        r0.<com.android.dex.Dex: com.android.dex.Dex$FieldIdTable fieldIds> = $r7;

        $r8 = new com.android.dex.Dex$MethodIdTable;

        specialinvoke $r8.<com.android.dex.Dex$MethodIdTable: void <init>(com.android.dex.Dex,com.android.dex.Dex$1)>(r0, null);

        r0.<com.android.dex.Dex: com.android.dex.Dex$MethodIdTable methodIds> = $r8;

        r0.<com.android.dex.Dex: java.nio.ByteBuffer data> = r1;

        $r10 = r0.<com.android.dex.Dex: java.nio.ByteBuffer data>;

        $r9 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r9);

        $r12 = r0.<com.android.dex.Dex: com.android.dex.TableOfContents tableOfContents>;

        virtualinvoke $r12.<com.android.dex.TableOfContents: void readFrom(com.android.dex.Dex)>(r0);

        return;
    }

    public void <init>(byte[]) throws java.io.IOException
    {
        com.android.dex.Dex r0;
        byte[] r1;
        java.nio.ByteBuffer $r2;

        r0 := @this: com.android.dex.Dex;

        r1 := @parameter0: byte[];

        $r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r1);

        specialinvoke r0.<com.android.dex.Dex: void <init>(java.nio.ByteBuffer)>($r2);

        return;
    }

    static com.android.dex.TableOfContents access$1000(com.android.dex.Dex)
    {
        com.android.dex.Dex r0;
        com.android.dex.TableOfContents $r1;

        r0 := @parameter0: com.android.dex.Dex;

        $r1 = r0.<com.android.dex.Dex: com.android.dex.TableOfContents tableOfContents>;

        return $r1;
    }

    static void access$1100(int, int)
    {
        int i0, i1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        staticinvoke <com.android.dex.Dex: void checkBounds(int,int)>(i0, i1);

        return;
    }

    static com.android.dex.Dex$StringTable access$1200(com.android.dex.Dex)
    {
        com.android.dex.Dex r0;
        com.android.dex.Dex$StringTable $r1;

        r0 := @parameter0: com.android.dex.Dex;

        $r1 = r0.<com.android.dex.Dex: com.android.dex.Dex$StringTable strings>;

        return $r1;
    }

    private static void checkBounds(int, int)
    {
        int i0, i1;
        java.lang.IndexOutOfBoundsException $r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5;
        java.lang.String $r6;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 < 0 goto label1;

        if i0 < i1 goto label2;

     label1:
        $r0 = new java.lang.IndexOutOfBoundsException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("index:");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", length=");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r6);

        throw $r0;

     label2:
        return;
    }

    public static com.android.dex.Dex create(java.nio.ByteBuffer) throws java.io.IOException
    {
        java.nio.ByteBuffer r0;
        int i0, i1, $i6;
        java.nio.ByteOrder $r1;
        byte $b2, $b3, $b4, $b5;
        com.android.dex.Dex $r3;

        r0 := @parameter0: java.nio.ByteBuffer;

        $r1 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r1);

        $b2 = virtualinvoke r0.<java.nio.ByteBuffer: byte get(int)>(0);

        if $b2 != 100 goto label1;

        $b3 = virtualinvoke r0.<java.nio.ByteBuffer: byte get(int)>(1);

        if $b3 != 101 goto label1;

        $b4 = virtualinvoke r0.<java.nio.ByteBuffer: byte get(int)>(2);

        if $b4 != 121 goto label1;

        $b5 = virtualinvoke r0.<java.nio.ByteBuffer: byte get(int)>(3);

        if $b5 != 10 goto label1;

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(8);

        i0 = virtualinvoke r0.<java.nio.ByteBuffer: int getInt()>();

        i1 = virtualinvoke r0.<java.nio.ByteBuffer: int getInt()>();

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(i0);

        $i6 = i0 + i1;

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i6);

        r0 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer slice()>();

     label1:
        $r3 = new com.android.dex.Dex;

        specialinvoke $r3.<com.android.dex.Dex: void <init>(java.nio.ByteBuffer)>(r0);

        return $r3;
    }

    private void loadFrom(java.io.InputStream) throws java.io.IOException
    {
        com.android.dex.Dex r0;
        java.io.InputStream r1;
        java.io.ByteArrayOutputStream r2, $r4;
        byte[] r3, $r5;
        int i0;
        java.nio.ByteBuffer $r6, $r8;
        java.nio.ByteOrder $r7;
        com.android.dex.TableOfContents $r10;

        r0 := @this: com.android.dex.Dex;

        r1 := @parameter0: java.io.InputStream;

        $r4 = new java.io.ByteArrayOutputStream;

        specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>();

        r2 = $r4;

        r3 = newarray (byte)[8192];

     label1:
        i0 = virtualinvoke r1.<java.io.InputStream: int read(byte[])>(r3);

        if i0 == -1 goto label2;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r3, 0, i0);

        goto label1;

     label2:
        virtualinvoke r1.<java.io.InputStream: void close()>();

        $r5 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r6 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r5);

        r0.<com.android.dex.Dex: java.nio.ByteBuffer data> = $r6;

        $r8 = r0.<com.android.dex.Dex: java.nio.ByteBuffer data>;

        $r7 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        virtualinvoke $r8.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r7);

        $r10 = r0.<com.android.dex.Dex: com.android.dex.TableOfContents tableOfContents>;

        virtualinvoke $r10.<com.android.dex.TableOfContents: void readFrom(com.android.dex.Dex)>(r0);

        return;
    }

    public int annotationDirectoryOffsetFromClassDefIndex(int)
    {
        com.android.dex.Dex r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        com.android.dex.TableOfContents $r1, $r3;
        com.android.dex.TableOfContents$Section $r2, $r4;
        java.nio.ByteBuffer $r5;

        r0 := @this: com.android.dex.Dex;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.dex.Dex: com.android.dex.TableOfContents tableOfContents>;

        $r2 = $r1.<com.android.dex.TableOfContents: com.android.dex.TableOfContents$Section classDefs>;

        $i2 = $r2.<com.android.dex.TableOfContents$Section: int size>;

        staticinvoke <com.android.dex.Dex: void checkBounds(int,int)>(i0, $i2);

        $r3 = r0.<com.android.dex.Dex: com.android.dex.TableOfContents tableOfContents>;

        $r4 = $r3.<com.android.dex.TableOfContents: com.android.dex.TableOfContents$Section classDefs>;

        $i4 = $r4.<com.android.dex.TableOfContents$Section: int off>;

        $i3 = i0 * 32;

        $i5 = $i4 + $i3;

        $i6 = 4 + $i5;

        $i7 = 4 + $i6;

        $i8 = 4 + $i7;

        $i9 = 4 + $i8;

        i1 = 4 + $i9;

        $r5 = r0.<com.android.dex.Dex: java.nio.ByteBuffer data>;

        $i10 = virtualinvoke $r5.<java.nio.ByteBuffer: int getInt(int)>(i1);

        return $i10;
    }

    public com.android.dex.Dex$Section appendSection(int, java.lang.String)
    {
        com.android.dex.Dex r0;
        int i0, i1, $i2, $i3, $i4;
        java.lang.String r1;
        java.nio.ByteBuffer r2, $r4;
        com.android.dex.Dex$Section r3, $r10;
        java.nio.ByteOrder $r5;
        java.lang.IllegalStateException $r9;

        r0 := @this: com.android.dex.Dex;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $i2 = i0 & 3;

        if $i2 == 0 goto label1;

        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not four byte aligned!");

        throw $r9;

     label1:
        $i3 = r0.<com.android.dex.Dex: int nextSectionStart>;

        i1 = i0 + $i3;

        $r4 = r0.<com.android.dex.Dex: java.nio.ByteBuffer data>;

        r2 = virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.ByteBuffer duplicate()>();

        $r5 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r5);

        $i4 = r0.<com.android.dex.Dex: int nextSectionStart>;

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i4);

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>(i1);

        $r10 = new com.android.dex.Dex$Section;

        specialinvoke $r10.<com.android.dex.Dex$Section: void <init>(com.android.dex.Dex,java.lang.String,java.nio.ByteBuffer,com.android.dex.Dex$1)>(r0, r1, r2, null);

        r3 = $r10;

        r0.<com.android.dex.Dex: int nextSectionStart> = i1;

        return r3;
    }

    public java.lang.Iterable classDefs()
    {
        com.android.dex.Dex r0;
        com.android.dex.Dex$ClassDefIterable $r1;

        r0 := @this: com.android.dex.Dex;

        $r1 = new com.android.dex.Dex$ClassDefIterable;

        specialinvoke $r1.<com.android.dex.Dex$ClassDefIterable: void <init>(com.android.dex.Dex,com.android.dex.Dex$1)>(r0, null);

        return $r1;
    }

    public int computeChecksum() throws java.io.IOException
    {
        com.android.dex.Dex r0;
        java.util.zip.Adler32 r1, $r4;
        byte[] r2;
        java.nio.ByteBuffer r3, $r5;
        int i0, $i1, $i3, $i4, $i5;
        boolean $z0;
        long $l2;

        r0 := @this: com.android.dex.Dex;

        $r4 = new java.util.zip.Adler32;

        specialinvoke $r4.<java.util.zip.Adler32: void <init>()>();

        r1 = $r4;

        r2 = newarray (byte)[8192];

        $r5 = r0.<com.android.dex.Dex: java.nio.ByteBuffer data>;

        r3 = virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.ByteBuffer duplicate()>();

        $i1 = virtualinvoke r3.<java.nio.ByteBuffer: int capacity()>();

        virtualinvoke r3.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i1);

        virtualinvoke r3.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(12);

     label1:
        $z0 = virtualinvoke r3.<java.nio.ByteBuffer: boolean hasRemaining()>();

        if $z0 == 0 goto label2;

        $i5 = lengthof r2;

        $i4 = virtualinvoke r3.<java.nio.ByteBuffer: int remaining()>();

        i0 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i4);

        virtualinvoke r3.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>(r2, 0, i0);

        virtualinvoke r1.<java.util.zip.Adler32: void update(byte[],int,int)>(r2, 0, i0);

        goto label1;

     label2:
        $l2 = virtualinvoke r1.<java.util.zip.Adler32: long getValue()>();

        $i3 = (int) $l2;

        return $i3;
    }

    public byte[] computeSignature() throws java.io.IOException
    {
        com.android.dex.Dex r0;
        java.security.MessageDigest r2;
        byte[] r3, $r8;
        java.nio.ByteBuffer r4, $r5;
        int i0, $i1, $i2, $i3;
        boolean $z0;
        java.lang.AssertionError $r10;
        java.security.NoSuchAlgorithmException $r11;

        r0 := @this: com.android.dex.Dex;

     label1:
        r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-1");

     label2:
        r3 = newarray (byte)[8192];

        $r5 = r0.<com.android.dex.Dex: java.nio.ByteBuffer data>;

        r4 = virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.ByteBuffer duplicate()>();

        $i1 = virtualinvoke r4.<java.nio.ByteBuffer: int capacity()>();

        virtualinvoke r4.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i1);

        virtualinvoke r4.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(32);

     label3:
        $z0 = virtualinvoke r4.<java.nio.ByteBuffer: boolean hasRemaining()>();

        if $z0 == 0 goto label5;

        $i3 = lengthof r3;

        $i2 = virtualinvoke r4.<java.nio.ByteBuffer: int remaining()>();

        i0 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i2);

        virtualinvoke r4.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>(r3, 0, i0);

        virtualinvoke r2.<java.security.MessageDigest: void update(byte[],int,int)>(r3, 0, i0);

        goto label3;

     label4:
        $r11 := @caughtexception;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label5:
        $r8 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest()>();

        return $r8;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label4;
    }

    public int declaringClassIndexFromMethodIndex(int)
    {
        com.android.dex.Dex r0;
        int i0, i1, $i2, $i3, $i4, $i6;
        com.android.dex.TableOfContents $r1, $r3;
        com.android.dex.TableOfContents$Section $r2, $r4;
        java.nio.ByteBuffer $r5;
        short $s5;

        r0 := @this: com.android.dex.Dex;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.dex.Dex: com.android.dex.TableOfContents tableOfContents>;

        $r2 = $r1.<com.android.dex.TableOfContents: com.android.dex.TableOfContents$Section methodIds>;

        $i2 = $r2.<com.android.dex.TableOfContents$Section: int size>;

        staticinvoke <com.android.dex.Dex: void checkBounds(int,int)>(i0, $i2);

        $r3 = r0.<com.android.dex.Dex: com.android.dex.TableOfContents tableOfContents>;

        $r4 = $r3.<com.android.dex.TableOfContents: com.android.dex.TableOfContents$Section methodIds>;

        $i4 = $r4.<com.android.dex.TableOfContents$Section: int off>;

        $i3 = i0 * 8;

        i1 = $i4 + $i3;

        $r5 = r0.<com.android.dex.Dex: java.nio.ByteBuffer data>;

        $s5 = virtualinvoke $r5.<java.nio.ByteBuffer: short getShort(int)>(i1);

        $i6 = 65535 & $s5;

        return $i6;
    }

    public int descriptorIndexFromTypeIndex(int)
    {
        com.android.dex.Dex r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        com.android.dex.TableOfContents $r1, $r3;
        com.android.dex.TableOfContents$Section $r2, $r4;
        java.nio.ByteBuffer $r5;

        r0 := @this: com.android.dex.Dex;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.dex.Dex: com.android.dex.TableOfContents tableOfContents>;

        $r2 = $r1.<com.android.dex.TableOfContents: com.android.dex.TableOfContents$Section typeIds>;

        $i2 = $r2.<com.android.dex.TableOfContents$Section: int size>;

        staticinvoke <com.android.dex.Dex: void checkBounds(int,int)>(i0, $i2);

        $r3 = r0.<com.android.dex.Dex: com.android.dex.TableOfContents tableOfContents>;

        $r4 = $r3.<com.android.dex.TableOfContents: com.android.dex.TableOfContents$Section typeIds>;

        $i4 = $r4.<com.android.dex.TableOfContents$Section: int off>;

        $i3 = i0 * 4;

        i1 = $i4 + $i3;

        $r5 = r0.<com.android.dex.Dex: java.nio.ByteBuffer data>;

        $i5 = virtualinvoke $r5.<java.nio.ByteBuffer: int getInt(int)>(i1);

        return $i5;
    }

    public java.util.List fieldIds()
    {
        com.android.dex.Dex r0;
        com.android.dex.Dex$FieldIdTable $r1;

        r0 := @this: com.android.dex.Dex;

        $r1 = r0.<com.android.dex.Dex: com.android.dex.Dex$FieldIdTable fieldIds>;

        return $r1;
    }

    public int findClassDefIndexFromTypeIndex(int)
    {
        com.android.dex.Dex r0;
        int i0, i1, $i2, $i3, $i4;
        com.android.dex.TableOfContents $r1, $r3, $r5;
        com.android.dex.TableOfContents$Section $r2, $r4, $r6;
        boolean $z0;

        r0 := @this: com.android.dex.Dex;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.dex.Dex: com.android.dex.TableOfContents tableOfContents>;

        $r2 = $r1.<com.android.dex.TableOfContents: com.android.dex.TableOfContents$Section typeIds>;

        $i2 = $r2.<com.android.dex.TableOfContents$Section: int size>;

        staticinvoke <com.android.dex.Dex: void checkBounds(int,int)>(i0, $i2);

        $r3 = r0.<com.android.dex.Dex: com.android.dex.TableOfContents tableOfContents>;

        $r4 = $r3.<com.android.dex.TableOfContents: com.android.dex.TableOfContents$Section classDefs>;

        $z0 = virtualinvoke $r4.<com.android.dex.TableOfContents$Section: boolean exists()>();

        if $z0 != 0 goto label2;

        i1 = -1;

     label1:
        return i1;

     label2:
        i1 = 0;

     label3:
        $r5 = r0.<com.android.dex.Dex: com.android.dex.TableOfContents tableOfContents>;

        $r6 = $r5.<com.android.dex.TableOfContents: com.android.dex.TableOfContents$Section classDefs>;

        $i3 = $r6.<com.android.dex.TableOfContents$Section: int size>;

        if i1 >= $i3 goto label4;

        $i4 = virtualinvoke r0.<com.android.dex.Dex: int typeIndexFromClassDefIndex(int)>(i1);

        if $i4 == i0 goto label1;

        i1 = i1 + 1;

        goto label3;

     label4:
        return -1;
    }

    public int findFieldIndex(com.android.dex.FieldId)
    {
        com.android.dex.Dex r0;
        com.android.dex.FieldId r1;
        com.android.dex.Dex$FieldIdTable $r2;
        int $i0;

        r0 := @this: com.android.dex.Dex;

        r1 := @parameter0: com.android.dex.FieldId;

        $r2 = r0.<com.android.dex.Dex: com.android.dex.Dex$FieldIdTable fieldIds>;

        $i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r2, r1);

        return $i0;
    }

    public int findMethodIndex(com.android.dex.MethodId)
    {
        com.android.dex.Dex r0;
        com.android.dex.MethodId r1;
        com.android.dex.Dex$MethodIdTable $r2;
        int $i0;

        r0 := @this: com.android.dex.Dex;

        r1 := @parameter0: com.android.dex.MethodId;

        $r2 = r0.<com.android.dex.Dex: com.android.dex.Dex$MethodIdTable methodIds>;

        $i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r2, r1);

        return $i0;
    }

    public int findStringIndex(java.lang.String)
    {
        com.android.dex.Dex r0;
        java.lang.String r1;
        com.android.dex.Dex$StringTable $r2;
        int $i0;

        r0 := @this: com.android.dex.Dex;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.dex.Dex: com.android.dex.Dex$StringTable strings>;

        $i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r2, r1);

        return $i0;
    }

    public int findTypeIndex(java.lang.String)
    {
        com.android.dex.Dex r0;
        java.lang.String r1;
        com.android.dex.Dex$TypeIndexToDescriptorTable $r2;
        int $i0;

        r0 := @this: com.android.dex.Dex;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.dex.Dex: com.android.dex.Dex$TypeIndexToDescriptorTable typeNames>;

        $i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r2, r1);

        return $i0;
    }

    public byte[] getBytes()
    {
        com.android.dex.Dex r0;
        java.nio.ByteBuffer r1, $r3;
        byte[] r2;
        int $i0;

        r0 := @this: com.android.dex.Dex;

        $r3 = r0.<com.android.dex.Dex: java.nio.ByteBuffer data>;

        r1 = virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteBuffer duplicate()>();

        $i0 = virtualinvoke r1.<java.nio.ByteBuffer: int capacity()>();

        r2 = newarray (byte)[$i0];

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r2);

        return r2;
    }

    public int getLength()
    {
        com.android.dex.Dex r0;
        java.nio.ByteBuffer $r1;
        int $i0;

        r0 := @this: com.android.dex.Dex;

        $r1 = r0.<com.android.dex.Dex: java.nio.ByteBuffer data>;

        $i0 = virtualinvoke $r1.<java.nio.ByteBuffer: int capacity()>();

        return $i0;
    }

    public int getNextSectionStart()
    {
        com.android.dex.Dex r0;
        int $i0;

        r0 := @this: com.android.dex.Dex;

        $i0 = r0.<com.android.dex.Dex: int nextSectionStart>;

        return $i0;
    }

    public com.android.dex.TableOfContents getTableOfContents()
    {
        com.android.dex.Dex r0;
        com.android.dex.TableOfContents $r1;

        r0 := @this: com.android.dex.Dex;

        $r1 = r0.<com.android.dex.Dex: com.android.dex.TableOfContents tableOfContents>;

        return $r1;
    }

    public short[] interfaceTypeIndicesFromClassDefIndex(int)
    {
        com.android.dex.Dex r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11;
        short[] r1;
        com.android.dex.TableOfContents $r2, $r4;
        com.android.dex.TableOfContents$Section $r3, $r5;
        java.nio.ByteBuffer $r6, $r7, $r8;
        short $s12;
        java.lang.StringBuilder $r9, $r11, $r12;
        java.lang.AssertionError $r10;
        java.lang.String $r13;

        r0 := @this: com.android.dex.Dex;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.dex.Dex: com.android.dex.TableOfContents tableOfContents>;

        $r3 = $r2.<com.android.dex.TableOfContents: com.android.dex.TableOfContents$Section classDefs>;

        $i6 = $r3.<com.android.dex.TableOfContents$Section: int size>;

        staticinvoke <com.android.dex.Dex: void checkBounds(int,int)>(i0, $i6);

        $r4 = r0.<com.android.dex.Dex: com.android.dex.TableOfContents tableOfContents>;

        $r5 = $r4.<com.android.dex.TableOfContents: com.android.dex.TableOfContents$Section classDefs>;

        $i8 = $r5.<com.android.dex.TableOfContents$Section: int off>;

        $i7 = i0 * 32;

        $i9 = $i8 + $i7;

        $i11 = 4 + $i9;

        $i10 = 4 + $i11;

        i1 = 4 + $i10;

        $r6 = r0.<com.android.dex.Dex: java.nio.ByteBuffer data>;

        i2 = virtualinvoke $r6.<java.nio.ByteBuffer: int getInt(int)>(i1);

        if i2 != 0 goto label2;

        r1 = <com.android.dex.Dex: short[] EMPTY_SHORT_ARRAY>;

     label1:
        return r1;

     label2:
        $r7 = r0.<com.android.dex.Dex: java.nio.ByteBuffer data>;

        i3 = virtualinvoke $r7.<java.nio.ByteBuffer: int getInt(int)>(i2);

        if i3 > 0 goto label3;

        $r10 = new java.lang.AssertionError;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected interfaces list size: ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.AssertionError: void <init>(java.lang.Object)>($r13);

        throw $r10;

     label3:
        i4 = i2 + 4;

        r1 = newarray (short)[i3];

        i5 = 0;

     label4:
        if i5 >= i3 goto label1;

        $r8 = r0.<com.android.dex.Dex: java.nio.ByteBuffer data>;

        $s12 = virtualinvoke $r8.<java.nio.ByteBuffer: short getShort(int)>(i4);

        r1[i5] = $s12;

        i4 = i4 + 2;

        i5 = i5 + 1;

        goto label4;
    }

    public java.util.List methodIds()
    {
        com.android.dex.Dex r0;
        com.android.dex.Dex$MethodIdTable $r1;

        r0 := @this: com.android.dex.Dex;

        $r1 = r0.<com.android.dex.Dex: com.android.dex.Dex$MethodIdTable methodIds>;

        return $r1;
    }

    public int nameIndexFromFieldIndex(int)
    {
        com.android.dex.Dex r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        com.android.dex.TableOfContents $r1, $r3;
        com.android.dex.TableOfContents$Section $r2, $r4;
        java.nio.ByteBuffer $r5;

        r0 := @this: com.android.dex.Dex;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.dex.Dex: com.android.dex.TableOfContents tableOfContents>;

        $r2 = $r1.<com.android.dex.TableOfContents: com.android.dex.TableOfContents$Section fieldIds>;

        $i2 = $r2.<com.android.dex.TableOfContents$Section: int size>;

        staticinvoke <com.android.dex.Dex: void checkBounds(int,int)>(i0, $i2);

        $r3 = r0.<com.android.dex.Dex: com.android.dex.TableOfContents tableOfContents>;

        $r4 = $r3.<com.android.dex.TableOfContents: com.android.dex.TableOfContents$Section fieldIds>;

        $i4 = $r4.<com.android.dex.TableOfContents$Section: int off>;

        $i3 = i0 * 8;

        $i5 = $i4 + $i3;

        $i6 = 2 + $i5;

        i1 = 2 + $i6;

        $r5 = r0.<com.android.dex.Dex: java.nio.ByteBuffer data>;

        $i7 = virtualinvoke $r5.<java.nio.ByteBuffer: int getInt(int)>(i1);

        return $i7;
    }

    public int nameIndexFromMethodIndex(int)
    {
        com.android.dex.Dex r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        com.android.dex.TableOfContents $r1, $r3;
        com.android.dex.TableOfContents$Section $r2, $r4;
        java.nio.ByteBuffer $r5;

        r0 := @this: com.android.dex.Dex;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.dex.Dex: com.android.dex.TableOfContents tableOfContents>;

        $r2 = $r1.<com.android.dex.TableOfContents: com.android.dex.TableOfContents$Section methodIds>;

        $i2 = $r2.<com.android.dex.TableOfContents$Section: int size>;

        staticinvoke <com.android.dex.Dex: void checkBounds(int,int)>(i0, $i2);

        $r3 = r0.<com.android.dex.Dex: com.android.dex.TableOfContents tableOfContents>;

        $r4 = $r3.<com.android.dex.TableOfContents: com.android.dex.TableOfContents$Section methodIds>;

        $i4 = $r4.<com.android.dex.TableOfContents$Section: int off>;

        $i3 = i0 * 8;

        $i5 = $i4 + $i3;

        $i6 = 2 + $i5;

        i1 = 2 + $i6;

        $r5 = r0.<com.android.dex.Dex: java.nio.ByteBuffer data>;

        $i7 = virtualinvoke $r5.<java.nio.ByteBuffer: int getInt(int)>(i1);

        return $i7;
    }

    public com.android.dex.Dex$Section open(int)
    {
        com.android.dex.Dex r0;
        int i0, $i1, $i2, $i3;
        java.nio.ByteBuffer r1, $r7, $r10, $r11, $r14;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r8;
        java.lang.String $r9;
        java.nio.ByteOrder $r13;
        com.android.dex.Dex$Section $r17;

        r0 := @this: com.android.dex.Dex;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r10 = r0.<com.android.dex.Dex: java.nio.ByteBuffer data>;

        $i2 = virtualinvoke $r10.<java.nio.ByteBuffer: int capacity()>();

        if i0 < $i2 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("position=");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" length=");

        $r7 = r0.<com.android.dex.Dex: java.nio.ByteBuffer data>;

        $i1 = virtualinvoke $r7.<java.nio.ByteBuffer: int capacity()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r2;

     label2:
        $r11 = r0.<com.android.dex.Dex: java.nio.ByteBuffer data>;

        r1 = virtualinvoke $r11.<java.nio.ByteBuffer: java.nio.ByteBuffer duplicate()>();

        $r13 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r13);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(i0);

        $r14 = r0.<com.android.dex.Dex: java.nio.ByteBuffer data>;

        $i3 = virtualinvoke $r14.<java.nio.ByteBuffer: int capacity()>();

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i3);

        $r17 = new com.android.dex.Dex$Section;

        specialinvoke $r17.<com.android.dex.Dex$Section: void <init>(com.android.dex.Dex,java.lang.String,java.nio.ByteBuffer,com.android.dex.Dex$1)>(r0, "section", r1, null);

        return $r17;
    }

    public short[] parameterTypeIndicesFromMethodIndex(int)
    {
        com.android.dex.Dex r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i16, $i17;
        short[] r1;
        com.android.dex.TableOfContents $r2, $r4, $r7, $r10;
        com.android.dex.TableOfContents$Section $r3, $r5, $r8, $r9;
        java.nio.ByteBuffer $r6, $r11, $r12, $r13;
        short $s12, $s18;
        java.lang.StringBuilder $r14, $r15, $r17;
        java.lang.AssertionError $r16;
        java.lang.String $r18;

        r0 := @this: com.android.dex.Dex;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.dex.Dex: com.android.dex.TableOfContents tableOfContents>;

        $r3 = $r2.<com.android.dex.TableOfContents: com.android.dex.TableOfContents$Section methodIds>;

        $i8 = $r3.<com.android.dex.TableOfContents$Section: int size>;

        staticinvoke <com.android.dex.Dex: void checkBounds(int,int)>(i0, $i8);

        $r4 = r0.<com.android.dex.Dex: com.android.dex.TableOfContents tableOfContents>;

        $r5 = $r4.<com.android.dex.TableOfContents: com.android.dex.TableOfContents$Section methodIds>;

        $i11 = $r5.<com.android.dex.TableOfContents$Section: int off>;

        $i9 = i0 * 8;

        $i10 = $i11 + $i9;

        i1 = 2 + $i10;

        $r6 = r0.<com.android.dex.Dex: java.nio.ByteBuffer data>;

        $s12 = virtualinvoke $r6.<java.nio.ByteBuffer: short getShort(int)>(i1);

        i2 = 65535 & $s12;

        $r7 = r0.<com.android.dex.Dex: com.android.dex.TableOfContents tableOfContents>;

        $r8 = $r7.<com.android.dex.TableOfContents: com.android.dex.TableOfContents$Section protoIds>;

        $i13 = $r8.<com.android.dex.TableOfContents$Section: int size>;

        staticinvoke <com.android.dex.Dex: void checkBounds(int,int)>(i2, $i13);

        $r10 = r0.<com.android.dex.Dex: com.android.dex.TableOfContents tableOfContents>;

        $r9 = $r10.<com.android.dex.TableOfContents: com.android.dex.TableOfContents$Section protoIds>;

        $i14 = $r9.<com.android.dex.TableOfContents$Section: int off>;

        $i15 = i2 * 12;

        $i17 = $i14 + $i15;

        $i16 = 4 + $i17;

        i3 = 4 + $i16;

        $r11 = r0.<com.android.dex.Dex: java.nio.ByteBuffer data>;

        i4 = virtualinvoke $r11.<java.nio.ByteBuffer: int getInt(int)>(i3);

        if i4 != 0 goto label2;

        r1 = <com.android.dex.Dex: short[] EMPTY_SHORT_ARRAY>;

     label1:
        return r1;

     label2:
        $r13 = r0.<com.android.dex.Dex: java.nio.ByteBuffer data>;

        i5 = virtualinvoke $r13.<java.nio.ByteBuffer: int getInt(int)>(i4);

        if i5 > 0 goto label3;

        $r16 = new java.lang.AssertionError;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected parameter type list size: ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.AssertionError: void <init>(java.lang.Object)>($r18);

        throw $r16;

     label3:
        i6 = i4 + 4;

        r1 = newarray (short)[i5];

        i7 = 0;

     label4:
        if i7 >= i5 goto label1;

        $r12 = r0.<com.android.dex.Dex: java.nio.ByteBuffer data>;

        $s18 = virtualinvoke $r12.<java.nio.ByteBuffer: short getShort(int)>(i6);

        r1[i7] = $s18;

        i6 = i6 + 2;

        i7 = i7 + 1;

        goto label4;
    }

    public java.util.List protoIds()
    {
        com.android.dex.Dex r0;
        com.android.dex.Dex$ProtoIdTable $r1;

        r0 := @this: com.android.dex.Dex;

        $r1 = r0.<com.android.dex.Dex: com.android.dex.Dex$ProtoIdTable protoIds>;

        return $r1;
    }

    public com.android.dex.ClassData readClassData(com.android.dex.ClassDef)
    {
        com.android.dex.Dex r0;
        com.android.dex.ClassDef r1;
        int i0;
        com.android.dex.Dex$Section $r2;
        com.android.dex.ClassData $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: com.android.dex.Dex;

        r1 := @parameter0: com.android.dex.ClassDef;

        i0 = virtualinvoke r1.<com.android.dex.ClassDef: int getClassDataOffset()>();

        if i0 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("offset == 0");

        throw $r4;

     label1:
        $r2 = virtualinvoke r0.<com.android.dex.Dex: com.android.dex.Dex$Section open(int)>(i0);

        $r3 = staticinvoke <com.android.dex.Dex$Section: com.android.dex.ClassData access$800(com.android.dex.Dex$Section)>($r2);

        return $r3;
    }

    public com.android.dex.Code readCode(com.android.dex.ClassData$Method)
    {
        com.android.dex.Dex r0;
        com.android.dex.ClassData$Method r1;
        int i0;
        com.android.dex.Dex$Section $r2;
        com.android.dex.Code $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: com.android.dex.Dex;

        r1 := @parameter0: com.android.dex.ClassData$Method;

        i0 = virtualinvoke r1.<com.android.dex.ClassData$Method: int getCodeOffset()>();

        if i0 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("offset == 0");

        throw $r4;

     label1:
        $r2 = virtualinvoke r0.<com.android.dex.Dex: com.android.dex.Dex$Section open(int)>(i0);

        $r3 = staticinvoke <com.android.dex.Dex$Section: com.android.dex.Code access$900(com.android.dex.Dex$Section)>($r2);

        return $r3;
    }

    public com.android.dex.TypeList readTypeList(int)
    {
        com.android.dex.Dex r0;
        int i0;
        com.android.dex.Dex$Section $r1;
        com.android.dex.TypeList $r2, $r3;

        r0 := @this: com.android.dex.Dex;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        $r3 = <com.android.dex.TypeList: com.android.dex.TypeList EMPTY>;

        return $r3;

     label1:
        $r1 = virtualinvoke r0.<com.android.dex.Dex: com.android.dex.Dex$Section open(int)>(i0);

        $r2 = virtualinvoke $r1.<com.android.dex.Dex$Section: com.android.dex.TypeList readTypeList()>();

        return $r2;
    }

    public int returnTypeIndexFromMethodIndex(int)
    {
        com.android.dex.Dex r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13;
        com.android.dex.TableOfContents $r1, $r3, $r7, $r8;
        com.android.dex.TableOfContents$Section $r2, $r4, $r6, $r9;
        java.nio.ByteBuffer $r5, $r10;
        short $s8;

        r0 := @this: com.android.dex.Dex;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.dex.Dex: com.android.dex.TableOfContents tableOfContents>;

        $r2 = $r1.<com.android.dex.TableOfContents: com.android.dex.TableOfContents$Section methodIds>;

        $i4 = $r2.<com.android.dex.TableOfContents$Section: int size>;

        staticinvoke <com.android.dex.Dex: void checkBounds(int,int)>(i0, $i4);

        $r3 = r0.<com.android.dex.Dex: com.android.dex.TableOfContents tableOfContents>;

        $r4 = $r3.<com.android.dex.TableOfContents: com.android.dex.TableOfContents$Section methodIds>;

        $i6 = $r4.<com.android.dex.TableOfContents$Section: int off>;

        $i5 = i0 * 8;

        $i7 = $i6 + $i5;

        i1 = 2 + $i7;

        $r5 = r0.<com.android.dex.Dex: java.nio.ByteBuffer data>;

        $s8 = virtualinvoke $r5.<java.nio.ByteBuffer: short getShort(int)>(i1);

        i2 = 65535 & $s8;

        $r7 = r0.<com.android.dex.Dex: com.android.dex.TableOfContents tableOfContents>;

        $r6 = $r7.<com.android.dex.TableOfContents: com.android.dex.TableOfContents$Section protoIds>;

        $i9 = $r6.<com.android.dex.TableOfContents$Section: int size>;

        staticinvoke <com.android.dex.Dex: void checkBounds(int,int)>(i2, $i9);

        $r8 = r0.<com.android.dex.Dex: com.android.dex.TableOfContents tableOfContents>;

        $r9 = $r8.<com.android.dex.TableOfContents: com.android.dex.TableOfContents$Section protoIds>;

        $i12 = $r9.<com.android.dex.TableOfContents$Section: int off>;

        $i10 = i2 * 12;

        $i11 = $i12 + $i10;

        i3 = 4 + $i11;

        $r10 = r0.<com.android.dex.Dex: java.nio.ByteBuffer data>;

        $i13 = virtualinvoke $r10.<java.nio.ByteBuffer: int getInt(int)>(i3);

        return $i13;
    }

    public java.util.List strings()
    {
        com.android.dex.Dex r0;
        com.android.dex.Dex$StringTable $r1;

        r0 := @this: com.android.dex.Dex;

        $r1 = r0.<com.android.dex.Dex: com.android.dex.Dex$StringTable strings>;

        return $r1;
    }

    public java.util.List typeIds()
    {
        com.android.dex.Dex r0;
        com.android.dex.Dex$TypeIndexToDescriptorIndexTable $r1;

        r0 := @this: com.android.dex.Dex;

        $r1 = r0.<com.android.dex.Dex: com.android.dex.Dex$TypeIndexToDescriptorIndexTable typeIds>;

        return $r1;
    }

    public int typeIndexFromClassDefIndex(int)
    {
        com.android.dex.Dex r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        com.android.dex.TableOfContents $r1, $r3;
        com.android.dex.TableOfContents$Section $r2, $r4;
        java.nio.ByteBuffer $r5;

        r0 := @this: com.android.dex.Dex;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.dex.Dex: com.android.dex.TableOfContents tableOfContents>;

        $r2 = $r1.<com.android.dex.TableOfContents: com.android.dex.TableOfContents$Section classDefs>;

        $i2 = $r2.<com.android.dex.TableOfContents$Section: int size>;

        staticinvoke <com.android.dex.Dex: void checkBounds(int,int)>(i0, $i2);

        $r3 = r0.<com.android.dex.Dex: com.android.dex.TableOfContents tableOfContents>;

        $r4 = $r3.<com.android.dex.TableOfContents: com.android.dex.TableOfContents$Section classDefs>;

        $i4 = $r4.<com.android.dex.TableOfContents$Section: int off>;

        $i3 = i0 * 32;

        i1 = $i4 + $i3;

        $r5 = r0.<com.android.dex.Dex: java.nio.ByteBuffer data>;

        $i5 = virtualinvoke $r5.<java.nio.ByteBuffer: int getInt(int)>(i1);

        return $i5;
    }

    public int typeIndexFromFieldIndex(int)
    {
        com.android.dex.Dex r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i7;
        com.android.dex.TableOfContents $r1, $r3;
        com.android.dex.TableOfContents$Section $r2, $r4;
        java.nio.ByteBuffer $r5;
        short $s6;

        r0 := @this: com.android.dex.Dex;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.dex.Dex: com.android.dex.TableOfContents tableOfContents>;

        $r2 = $r1.<com.android.dex.TableOfContents: com.android.dex.TableOfContents$Section fieldIds>;

        $i2 = $r2.<com.android.dex.TableOfContents$Section: int size>;

        staticinvoke <com.android.dex.Dex: void checkBounds(int,int)>(i0, $i2);

        $r3 = r0.<com.android.dex.Dex: com.android.dex.TableOfContents tableOfContents>;

        $r4 = $r3.<com.android.dex.TableOfContents: com.android.dex.TableOfContents$Section fieldIds>;

        $i4 = $r4.<com.android.dex.TableOfContents$Section: int off>;

        $i3 = i0 * 8;

        $i5 = $i4 + $i3;

        i1 = 2 + $i5;

        $r5 = r0.<com.android.dex.Dex: java.nio.ByteBuffer data>;

        $s6 = virtualinvoke $r5.<java.nio.ByteBuffer: short getShort(int)>(i1);

        $i7 = 65535 & $s6;

        return $i7;
    }

    public java.util.List typeNames()
    {
        com.android.dex.Dex r0;
        com.android.dex.Dex$TypeIndexToDescriptorTable $r1;

        r0 := @this: com.android.dex.Dex;

        $r1 = r0.<com.android.dex.Dex: com.android.dex.Dex$TypeIndexToDescriptorTable typeNames>;

        return $r1;
    }

    public void writeHashes() throws java.io.IOException
    {
        com.android.dex.Dex r0;
        com.android.dex.Dex$Section $r1, $r3;
        byte[] $r2;
        int $i0;

        r0 := @this: com.android.dex.Dex;

        $r1 = virtualinvoke r0.<com.android.dex.Dex: com.android.dex.Dex$Section open(int)>(12);

        $r2 = virtualinvoke r0.<com.android.dex.Dex: byte[] computeSignature()>();

        virtualinvoke $r1.<com.android.dex.Dex$Section: void write(byte[])>($r2);

        $r3 = virtualinvoke r0.<com.android.dex.Dex: com.android.dex.Dex$Section open(int)>(8);

        $i0 = virtualinvoke r0.<com.android.dex.Dex: int computeChecksum()>();

        virtualinvoke $r3.<com.android.dex.Dex$Section: void writeInt(int)>($i0);

        return;
    }

    public void writeTo(java.io.File) throws java.io.IOException
    {
        com.android.dex.Dex r0;
        java.io.File r1;
        java.io.FileOutputStream r2, $r3;

        r0 := @this: com.android.dex.Dex;

        r1 := @parameter0: java.io.File;

        $r3 = new java.io.FileOutputStream;

        specialinvoke $r3.<java.io.FileOutputStream: void <init>(java.io.File)>(r1);

        r2 = $r3;

        virtualinvoke r0.<com.android.dex.Dex: void writeTo(java.io.OutputStream)>(r2);

        virtualinvoke r2.<java.io.OutputStream: void close()>();

        return;
    }

    public void writeTo(java.io.OutputStream) throws java.io.IOException
    {
        com.android.dex.Dex r0;
        java.io.OutputStream r1;
        byte[] r2;
        java.nio.ByteBuffer r3, $r4;
        int i0, $i1, $i2;
        boolean $z0;

        r0 := @this: com.android.dex.Dex;

        r1 := @parameter0: java.io.OutputStream;

        r2 = newarray (byte)[8192];

        $r4 = r0.<com.android.dex.Dex: java.nio.ByteBuffer data>;

        r3 = virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.ByteBuffer duplicate()>();

        virtualinvoke r3.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

     label1:
        $z0 = virtualinvoke r3.<java.nio.ByteBuffer: boolean hasRemaining()>();

        if $z0 == 0 goto label2;

        $i1 = lengthof r2;

        $i2 = virtualinvoke r3.<java.nio.ByteBuffer: int remaining()>();

        i0 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);

        virtualinvoke r3.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>(r2, 0, i0);

        virtualinvoke r1.<java.io.OutputStream: void write(byte[],int,int)>(r2, 0, i0);

        goto label1;

     label2:
        return;
    }
}
