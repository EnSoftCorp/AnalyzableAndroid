public class java.util.logging.SimpleFormatter extends java.util.logging.Formatter
{

    public void <init>()
    {
        java.util.logging.SimpleFormatter r0;

        r0 := @this: java.util.logging.SimpleFormatter;

        specialinvoke r0.<java.util.logging.Formatter: void <init>()>();

        return;
    }

    public java.lang.String format(java.util.logging.LogRecord)
    {
        java.util.logging.SimpleFormatter r0;
        java.util.logging.LogRecord r1;
        java.lang.StringBuilder r2, $r9, $r15, $r16, $r23, $r27;
        java.lang.Object[] r3;
        java.lang.Throwable r4, r8, $r29, $r35, $r36;
        java.io.PrintWriter r5, r7, $r34;
        java.io.StringWriter r6, $r33;
        java.util.Date $r10;
        java.lang.String $r11, $r12, $r17, $r19, $r20, $r24, $r26, $r30, $r31;
        long $l0;
        java.util.logging.Level $r21;

        r0 := @this: java.util.logging.SimpleFormatter;

        r1 := @parameter0: java.util.logging.LogRecord;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        r2 = $r9;

        r3 = newarray (java.lang.Object)[1];

        $r10 = new java.util.Date;

        $l0 = virtualinvoke r1.<java.util.logging.LogRecord: long getMillis()>();

        specialinvoke $r10.<java.util.Date: void <init>(long)>($l0);

        r3[0] = $r10;

        $r11 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("{0, date} {0, time} ", r3);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r12 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.String getSourceClassName()>();

        $r15 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r17 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.String getSourceMethodName()>();

        $r16 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke r1.<java.util.logging.LogRecord: java.util.logging.Level getLevel()>();

        $r20 = virtualinvoke $r21.<java.util.logging.Level: java.lang.String getName()>();

        $r23 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r26 = virtualinvoke r0.<java.util.logging.SimpleFormatter: java.lang.String formatMessage(java.util.logging.LogRecord)>(r1);

        $r27 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r24 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r29 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.Throwable getThrown()>();

        if $r29 == null goto label4;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Throwable occurred: ");

        r4 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.Throwable getThrown()>();

        r5 = null;

     label1:
        $r33 = new java.io.StringWriter;

        specialinvoke $r33.<java.io.StringWriter: void <init>()>();

        r6 = $r33;

        $r34 = new java.io.PrintWriter;

        specialinvoke $r34.<java.io.PrintWriter: void <init>(java.io.Writer)>(r6);

        r7 = $r34;

     label2:
        virtualinvoke r4.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>(r7);

        $r31 = virtualinvoke r6.<java.io.StringWriter: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

     label3:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r7);

     label4:
        $r30 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r30;

     label5:
        $r35 := @caughtexception;

        r8 = $r35;

     label6:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r5);

        throw r8;

     label7:
        $r36 := @caughtexception;

        r8 = $r36;

        r5 = r7;

        goto label6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label7;
    }
}
