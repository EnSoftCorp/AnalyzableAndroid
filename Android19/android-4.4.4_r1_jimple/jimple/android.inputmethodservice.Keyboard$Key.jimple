public class android.inputmethodservice.Keyboard$Key extends java.lang.Object
{
    private static final int[] KEY_STATE_NORMAL;
    private static final int[] KEY_STATE_NORMAL_OFF;
    private static final int[] KEY_STATE_NORMAL_ON;
    private static final int[] KEY_STATE_PRESSED;
    private static final int[] KEY_STATE_PRESSED_OFF;
    private static final int[] KEY_STATE_PRESSED_ON;
    public int[] codes;
    public int edgeFlags;
    public int gap;
    public int height;
    public android.graphics.drawable.Drawable icon;
    public android.graphics.drawable.Drawable iconPreview;
    private android.inputmethodservice.Keyboard keyboard;
    public java.lang.CharSequence label;
    public boolean modifier;
    public boolean on;
    public java.lang.CharSequence popupCharacters;
    public int popupResId;
    public boolean pressed;
    public boolean repeatable;
    public boolean sticky;
    public java.lang.CharSequence text;
    public int width;
    public int x;
    public int y;

    static void <clinit>()
    {
        int[] $r0, $r1, $r2, $r3, $r4, $r5;

        $r0 = newarray (int)[2];

        $r0[0] = 16842911;

        $r0[1] = 16842912;

        <android.inputmethodservice.Keyboard$Key: int[] KEY_STATE_NORMAL_ON> = $r0;

        $r1 = newarray (int)[3];

        $r1[0] = 16842919;

        $r1[1] = 16842911;

        $r1[2] = 16842912;

        <android.inputmethodservice.Keyboard$Key: int[] KEY_STATE_PRESSED_ON> = $r1;

        $r2 = newarray (int)[1];

        $r2[0] = 16842911;

        <android.inputmethodservice.Keyboard$Key: int[] KEY_STATE_NORMAL_OFF> = $r2;

        $r3 = newarray (int)[2];

        $r3[0] = 16842919;

        $r3[1] = 16842911;

        <android.inputmethodservice.Keyboard$Key: int[] KEY_STATE_PRESSED_OFF> = $r3;

        $r4 = newarray (int)[0];

        <android.inputmethodservice.Keyboard$Key: int[] KEY_STATE_NORMAL> = $r4;

        $r5 = newarray (int)[1];

        $r5[0] = 16842919;

        <android.inputmethodservice.Keyboard$Key: int[] KEY_STATE_PRESSED> = $r5;

        return;
    }

    public void <init>(android.content.res.Resources, android.inputmethodservice.Keyboard$Row, int, int, android.content.res.XmlResourceParser)
    {
        android.inputmethodservice.Keyboard$Key r0;
        android.content.res.Resources r1;
        android.inputmethodservice.Keyboard$Row r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i22, $i23, $i24, $i25, $i26, $i27;
        android.content.res.XmlResourceParser r3;
        android.content.res.TypedArray r4, r5;
        android.util.TypedValue r6, $r16;
        int[] r7, r8, $r10, $r14, $r21, $r34;
        android.util.AttributeSet $r9, $r15;
        android.inputmethodservice.Keyboard $r11, $r12, $r13;
        java.lang.CharSequence $r17, $r22, $r23, $r25, $r26, $r32;
        android.graphics.drawable.Drawable $r18, $r19, $r20, $r24, $r27, $r28, $r29, $r30, $r31, $r35;
        boolean $z1, $z2, $z3, $z4;
        char $c21;
        java.lang.String $r33;

        r0 := @this: android.inputmethodservice.Keyboard$Key;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: android.inputmethodservice.Keyboard$Row;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: android.content.res.XmlResourceParser;

        specialinvoke r0.<android.inputmethodservice.Keyboard$Key: void <init>(android.inputmethodservice.Keyboard$Row)>(r2);

        r0.<android.inputmethodservice.Keyboard$Key: int x> = i0;

        r0.<android.inputmethodservice.Keyboard$Key: int y> = i1;

        $r9 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r3);

        $r10 = <com.android.internal.R$styleable: int[] Keyboard>;

        r4 = virtualinvoke r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($r9, $r10);

        $r11 = r0.<android.inputmethodservice.Keyboard$Key: android.inputmethodservice.Keyboard keyboard>;

        $i2 = staticinvoke <android.inputmethodservice.Keyboard: int access$000(android.inputmethodservice.Keyboard)>($r11);

        $i4 = r2.<android.inputmethodservice.Keyboard$Row: int defaultWidth>;

        $i3 = staticinvoke <android.inputmethodservice.Keyboard: int getDimensionOrFraction(android.content.res.TypedArray,int,int,int)>(r4, 0, $i2, $i4);

        r0.<android.inputmethodservice.Keyboard$Key: int width> = $i3;

        $r12 = r0.<android.inputmethodservice.Keyboard$Key: android.inputmethodservice.Keyboard keyboard>;

        $i6 = staticinvoke <android.inputmethodservice.Keyboard: int access$200(android.inputmethodservice.Keyboard)>($r12);

        $i5 = r2.<android.inputmethodservice.Keyboard$Row: int defaultHeight>;

        $i7 = staticinvoke <android.inputmethodservice.Keyboard: int getDimensionOrFraction(android.content.res.TypedArray,int,int,int)>(r4, 1, $i6, $i5);

        r0.<android.inputmethodservice.Keyboard$Key: int height> = $i7;

        $r13 = r0.<android.inputmethodservice.Keyboard$Key: android.inputmethodservice.Keyboard keyboard>;

        $i8 = staticinvoke <android.inputmethodservice.Keyboard: int access$000(android.inputmethodservice.Keyboard)>($r13);

        $i10 = r2.<android.inputmethodservice.Keyboard$Row: int defaultHorizontalGap>;

        $i9 = staticinvoke <android.inputmethodservice.Keyboard: int getDimensionOrFraction(android.content.res.TypedArray,int,int,int)>(r4, 2, $i8, $i10);

        r0.<android.inputmethodservice.Keyboard$Key: int gap> = $i9;

        virtualinvoke r4.<android.content.res.TypedArray: void recycle()>();

        $r15 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r3);

        $r14 = <com.android.internal.R$styleable: int[] Keyboard_Key>;

        r5 = virtualinvoke r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($r15, $r14);

        $i11 = r0.<android.inputmethodservice.Keyboard$Key: int x>;

        $i13 = r0.<android.inputmethodservice.Keyboard$Key: int gap>;

        $i12 = $i11 + $i13;

        r0.<android.inputmethodservice.Keyboard$Key: int x> = $i12;

        $r16 = new android.util.TypedValue;

        specialinvoke $r16.<android.util.TypedValue: void <init>()>();

        r6 = $r16;

        virtualinvoke r5.<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>(0, r6);

        $i14 = r6.<android.util.TypedValue: int type>;

        if $i14 == 16 goto label1;

        $i27 = r6.<android.util.TypedValue: int type>;

        if $i27 != 17 goto label6;

     label1:
        r7 = newarray (int)[1];

        $i15 = r6.<android.util.TypedValue: int data>;

        r7[0] = $i15;

        r0.<android.inputmethodservice.Keyboard$Key: int[] codes> = r7;

     label2:
        $r18 = virtualinvoke r5.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(7);

        r0.<android.inputmethodservice.Keyboard$Key: android.graphics.drawable.Drawable iconPreview> = $r18;

        $r19 = r0.<android.inputmethodservice.Keyboard$Key: android.graphics.drawable.Drawable iconPreview>;

        if $r19 == null goto label3;

        $r30 = r0.<android.inputmethodservice.Keyboard$Key: android.graphics.drawable.Drawable iconPreview>;

        $r29 = r0.<android.inputmethodservice.Keyboard$Key: android.graphics.drawable.Drawable iconPreview>;

        $i25 = virtualinvoke $r29.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $r35 = r0.<android.inputmethodservice.Keyboard$Key: android.graphics.drawable.Drawable iconPreview>;

        $i26 = virtualinvoke $r35.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke $r30.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i25, $i26);

     label3:
        $r17 = virtualinvoke r5.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(2);

        r0.<android.inputmethodservice.Keyboard$Key: java.lang.CharSequence popupCharacters> = $r17;

        $i16 = virtualinvoke r5.<android.content.res.TypedArray: int getResourceId(int,int)>(1, 0);

        r0.<android.inputmethodservice.Keyboard$Key: int popupResId> = $i16;

        $z2 = virtualinvoke r5.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(6, 0);

        r0.<android.inputmethodservice.Keyboard$Key: boolean repeatable> = $z2;

        $z3 = virtualinvoke r5.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(4, 0);

        r0.<android.inputmethodservice.Keyboard$Key: boolean modifier> = $z3;

        $z1 = virtualinvoke r5.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(5, 0);

        r0.<android.inputmethodservice.Keyboard$Key: boolean sticky> = $z1;

        $i17 = virtualinvoke r5.<android.content.res.TypedArray: int getInt(int,int)>(3, 0);

        r0.<android.inputmethodservice.Keyboard$Key: int edgeFlags> = $i17;

        $i19 = r0.<android.inputmethodservice.Keyboard$Key: int edgeFlags>;

        $i20 = r2.<android.inputmethodservice.Keyboard$Row: int rowEdgeFlags>;

        $i18 = $i19 | $i20;

        r0.<android.inputmethodservice.Keyboard$Key: int edgeFlags> = $i18;

        $r20 = virtualinvoke r5.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(10);

        r0.<android.inputmethodservice.Keyboard$Key: android.graphics.drawable.Drawable icon> = $r20;

        $r24 = r0.<android.inputmethodservice.Keyboard$Key: android.graphics.drawable.Drawable icon>;

        if $r24 == null goto label4;

        $r27 = r0.<android.inputmethodservice.Keyboard$Key: android.graphics.drawable.Drawable icon>;

        $r28 = r0.<android.inputmethodservice.Keyboard$Key: android.graphics.drawable.Drawable icon>;

        $i22 = virtualinvoke $r28.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $r31 = r0.<android.inputmethodservice.Keyboard$Key: android.graphics.drawable.Drawable icon>;

        $i23 = virtualinvoke $r31.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke $r27.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i22, $i23);

     label4:
        $r23 = virtualinvoke r5.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(9);

        r0.<android.inputmethodservice.Keyboard$Key: java.lang.CharSequence label> = $r23;

        $r22 = virtualinvoke r5.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(8);

        r0.<android.inputmethodservice.Keyboard$Key: java.lang.CharSequence text> = $r22;

        $r21 = r0.<android.inputmethodservice.Keyboard$Key: int[] codes>;

        if $r21 != null goto label5;

        $r26 = r0.<android.inputmethodservice.Keyboard$Key: java.lang.CharSequence label>;

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r26);

        if $z4 != 0 goto label5;

        r8 = newarray (int)[1];

        $r25 = r0.<android.inputmethodservice.Keyboard$Key: java.lang.CharSequence label>;

        $c21 = interfaceinvoke $r25.<java.lang.CharSequence: char charAt(int)>(0);

        r8[0] = $c21;

        r0.<android.inputmethodservice.Keyboard$Key: int[] codes> = r8;

     label5:
        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        return;

     label6:
        $i24 = r6.<android.util.TypedValue: int type>;

        if $i24 != 3 goto label2;

        $r32 = r6.<android.util.TypedValue: java.lang.CharSequence string>;

        $r33 = virtualinvoke $r32.<java.lang.Object: java.lang.String toString()>();

        $r34 = virtualinvoke r0.<android.inputmethodservice.Keyboard$Key: int[] parseCSV(java.lang.String)>($r33);

        r0.<android.inputmethodservice.Keyboard$Key: int[] codes> = $r34;

        goto label2;
    }

    public void <init>(android.inputmethodservice.Keyboard$Row)
    {
        android.inputmethodservice.Keyboard$Key r0;
        android.inputmethodservice.Keyboard$Row r1;
        android.inputmethodservice.Keyboard $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.inputmethodservice.Keyboard$Key;

        r1 := @parameter0: android.inputmethodservice.Keyboard$Row;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <android.inputmethodservice.Keyboard$Row: android.inputmethodservice.Keyboard access$600(android.inputmethodservice.Keyboard$Row)>(r1);

        r0.<android.inputmethodservice.Keyboard$Key: android.inputmethodservice.Keyboard keyboard> = $r2;

        $i0 = r1.<android.inputmethodservice.Keyboard$Row: int defaultHeight>;

        r0.<android.inputmethodservice.Keyboard$Key: int height> = $i0;

        $i1 = r1.<android.inputmethodservice.Keyboard$Row: int defaultWidth>;

        r0.<android.inputmethodservice.Keyboard$Key: int width> = $i1;

        $i2 = r1.<android.inputmethodservice.Keyboard$Row: int defaultHorizontalGap>;

        r0.<android.inputmethodservice.Keyboard$Key: int gap> = $i2;

        $i3 = r1.<android.inputmethodservice.Keyboard$Row: int rowEdgeFlags>;

        r0.<android.inputmethodservice.Keyboard$Key: int edgeFlags> = $i3;

        return;
    }

    public int[] getCurrentDrawableState()
    {
        android.inputmethodservice.Keyboard$Key r0;
        int[] r1, $r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: android.inputmethodservice.Keyboard$Key;

        r1 = <android.inputmethodservice.Keyboard$Key: int[] KEY_STATE_NORMAL>;

        $z0 = r0.<android.inputmethodservice.Keyboard$Key: boolean on>;

        if $z0 == 0 goto label3;

        $z4 = r0.<android.inputmethodservice.Keyboard$Key: boolean pressed>;

        if $z4 == 0 goto label2;

        r1 = <android.inputmethodservice.Keyboard$Key: int[] KEY_STATE_PRESSED_ON>;

     label1:
        return r1;

     label2:
        $r5 = <android.inputmethodservice.Keyboard$Key: int[] KEY_STATE_NORMAL_ON>;

        return $r5;

     label3:
        $z1 = r0.<android.inputmethodservice.Keyboard$Key: boolean sticky>;

        if $z1 == 0 goto label5;

        $z3 = r0.<android.inputmethodservice.Keyboard$Key: boolean pressed>;

        if $z3 == 0 goto label4;

        $r4 = <android.inputmethodservice.Keyboard$Key: int[] KEY_STATE_PRESSED_OFF>;

        return $r4;

     label4:
        $r3 = <android.inputmethodservice.Keyboard$Key: int[] KEY_STATE_NORMAL_OFF>;

        return $r3;

     label5:
        $z2 = r0.<android.inputmethodservice.Keyboard$Key: boolean pressed>;

        if $z2 == 0 goto label1;

        $r2 = <android.inputmethodservice.Keyboard$Key: int[] KEY_STATE_PRESSED>;

        return $r2;
    }

    public boolean isInside(int, int)
    {
        android.inputmethodservice.Keyboard$Key r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25;
        boolean z0, z1, z2, z3;

        r0 := @this: android.inputmethodservice.Keyboard$Key;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<android.inputmethodservice.Keyboard$Key: int edgeFlags>;

        $i3 = 1 & $i2;

        if $i3 <= 0 goto label09;

        z0 = 1;

     label01:
        $i4 = r0.<android.inputmethodservice.Keyboard$Key: int edgeFlags>;

        $i5 = 2 & $i4;

        if $i5 <= 0 goto label10;

        z1 = 1;

     label02:
        $i6 = r0.<android.inputmethodservice.Keyboard$Key: int edgeFlags>;

        $i7 = 4 & $i6;

        if $i7 <= 0 goto label11;

        z2 = 1;

     label03:
        $i8 = r0.<android.inputmethodservice.Keyboard$Key: int edgeFlags>;

        $i9 = 8 & $i8;

        if $i9 <= 0 goto label12;

        z3 = 1;

     label04:
        $i10 = r0.<android.inputmethodservice.Keyboard$Key: int x>;

        if i0 >= $i10 goto label05;

        if z0 == 0 goto label13;

        $i23 = r0.<android.inputmethodservice.Keyboard$Key: int x>;

        $i24 = r0.<android.inputmethodservice.Keyboard$Key: int width>;

        $i25 = $i23 + $i24;

        if i0 > $i25 goto label13;

     label05:
        $i11 = r0.<android.inputmethodservice.Keyboard$Key: int x>;

        $i12 = r0.<android.inputmethodservice.Keyboard$Key: int width>;

        $i14 = $i11 + $i12;

        if i0 < $i14 goto label06;

        if z1 == 0 goto label13;

        $i21 = r0.<android.inputmethodservice.Keyboard$Key: int x>;

        if i0 < $i21 goto label13;

     label06:
        $i13 = r0.<android.inputmethodservice.Keyboard$Key: int y>;

        if i1 >= $i13 goto label07;

        if z2 == 0 goto label13;

        $i19 = r0.<android.inputmethodservice.Keyboard$Key: int y>;

        $i20 = r0.<android.inputmethodservice.Keyboard$Key: int height>;

        $i22 = $i19 + $i20;

        if i1 > $i22 goto label13;

     label07:
        $i15 = r0.<android.inputmethodservice.Keyboard$Key: int y>;

        $i16 = r0.<android.inputmethodservice.Keyboard$Key: int height>;

        $i18 = $i15 + $i16;

        if i1 < $i18 goto label08;

        if z3 == 0 goto label13;

        $i17 = r0.<android.inputmethodservice.Keyboard$Key: int y>;

        if i1 < $i17 goto label13;

     label08:
        return 1;

     label09:
        z0 = 0;

        goto label01;

     label10:
        z1 = 0;

        goto label02;

     label11:
        z2 = 0;

        goto label03;

     label12:
        z3 = 0;

        goto label04;

     label13:
        return 0;
    }

    public void onPressed()
    {
        android.inputmethodservice.Keyboard$Key r0;
        boolean z0, $z1;

        r0 := @this: android.inputmethodservice.Keyboard$Key;

        $z1 = r0.<android.inputmethodservice.Keyboard$Key: boolean pressed>;

        if $z1 != 0 goto label2;

        z0 = 1;

     label1:
        r0.<android.inputmethodservice.Keyboard$Key: boolean pressed> = z0;

        return;

     label2:
        z0 = 0;

        goto label1;
    }

    public void onReleased(boolean)
    {
        android.inputmethodservice.Keyboard$Key r0;
        boolean z0, z1, z2, $z3, $z4, $z5;

        r0 := @this: android.inputmethodservice.Keyboard$Key;

        z0 := @parameter0: boolean;

        z1 = 1;

        $z3 = r0.<android.inputmethodservice.Keyboard$Key: boolean pressed>;

        if $z3 != 0 goto label4;

        z2 = 1;

     label1:
        r0.<android.inputmethodservice.Keyboard$Key: boolean pressed> = z2;

        $z4 = r0.<android.inputmethodservice.Keyboard$Key: boolean sticky>;

        if $z4 == 0 goto label3;

        $z5 = r0.<android.inputmethodservice.Keyboard$Key: boolean on>;

        if $z5 != 0 goto label5;

     label2:
        r0.<android.inputmethodservice.Keyboard$Key: boolean on> = z1;

     label3:
        return;

     label4:
        z2 = 0;

        goto label1;

     label5:
        z1 = 0;

        goto label2;
    }

    int[] parseCSV(java.lang.String)
    {
        android.inputmethodservice.Keyboard$Key r0;
        java.lang.String r1, $r6, $r11;
        int i0, i1, i2, i3, i4, $i5, $i6;
        int[] r2;
        java.util.StringTokenizer r3, $r5;
        boolean $z0;
        java.lang.NumberFormatException $r7;
        java.lang.StringBuilder $r8, $r9, $r10;

        r0 := @this: android.inputmethodservice.Keyboard$Key;

        r1 := @parameter0: java.lang.String;

        i0 = 0;

        i1 = virtualinvoke r1.<java.lang.String: int length()>();

        i2 = 0;

        if i1 <= 0 goto label2;

        i2 = 1;

     label1:
        $i6 = i0 + 1;

        i0 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String,int)>(",", $i6);

        if i0 <= 0 goto label2;

        i2 = i2 + 1;

        goto label1;

     label2:
        r2 = newarray (int)[i2];

        i3 = 0;

        $r5 = new java.util.StringTokenizer;

        specialinvoke $r5.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r1, ",");

        r3 = $r5;

     label3:
        $z0 = virtualinvoke r3.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label7;

        i4 = i3 + 1;

     label4:
        $r6 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);

        r2[i3] = $i5;

     label5:
        i3 = i4;

        goto label3;

     label6:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error parsing keycodes ");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Keyboard", $r11);

        i3 = i4;

        goto label3;

     label7:
        return r2;

        catch java.lang.NumberFormatException from label4 to label5 with label6;
    }

    public int squaredDistanceFrom(int, int)
    {
        android.inputmethodservice.Keyboard$Key r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;

        r0 := @this: android.inputmethodservice.Keyboard$Key;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i6 = r0.<android.inputmethodservice.Keyboard$Key: int x>;

        $i4 = r0.<android.inputmethodservice.Keyboard$Key: int width>;

        $i5 = $i4 / 2;

        $i7 = $i6 + $i5;

        i2 = $i7 - i0;

        $i10 = r0.<android.inputmethodservice.Keyboard$Key: int y>;

        $i8 = r0.<android.inputmethodservice.Keyboard$Key: int height>;

        $i9 = $i8 / 2;

        $i11 = $i10 + $i9;

        i3 = $i11 - i1;

        $i13 = i2 * i2;

        $i12 = i3 * i3;

        $i14 = $i13 + $i12;

        return $i14;
    }
}
