class android.media.ImageReader$SurfaceImage extends android.media.Image
{
    private boolean mIsImageValid;
    private long mLockedBuffer;
    private android.media.ImageReader$SurfaceImage$SurfacePlane[] mPlanes;
    private long mTimestamp;
    final android.media.ImageReader this$0;

    public void <init>(android.media.ImageReader)
    {
        android.media.ImageReader$SurfaceImage r0;
        android.media.ImageReader r1;

        r0 := @this: android.media.ImageReader$SurfaceImage;

        r1 := @parameter0: android.media.ImageReader;

        r0.<android.media.ImageReader$SurfaceImage: android.media.ImageReader this$0> = r1;

        specialinvoke r0.<android.media.Image: void <init>()>();

        r0.<android.media.ImageReader$SurfaceImage: boolean mIsImageValid> = 0;

        return;
    }

    static void access$000(android.media.ImageReader$SurfaceImage)
    {
        android.media.ImageReader$SurfaceImage r0;

        r0 := @parameter0: android.media.ImageReader$SurfaceImage;

        specialinvoke r0.<android.media.ImageReader$SurfaceImage: void createSurfacePlanes()>();

        return;
    }

    static void access$100(android.media.ImageReader$SurfaceImage, boolean)
    {
        android.media.ImageReader$SurfaceImage r0;
        boolean z0;

        r0 := @parameter0: android.media.ImageReader$SurfaceImage;

        z0 := @parameter1: boolean;

        specialinvoke r0.<android.media.ImageReader$SurfaceImage: void setImageValid(boolean)>(z0);

        return;
    }

    static boolean access$1100(android.media.ImageReader$SurfaceImage)
    {
        android.media.ImageReader$SurfaceImage r0;
        boolean $z0;

        r0 := @parameter0: android.media.ImageReader$SurfaceImage;

        $z0 = specialinvoke r0.<android.media.ImageReader$SurfaceImage: boolean isImageValid()>();

        return $z0;
    }

    static java.nio.ByteBuffer access$1200(android.media.ImageReader$SurfaceImage, int)
    {
        android.media.ImageReader$SurfaceImage r0;
        int i0;
        java.nio.ByteBuffer $r1;

        r0 := @parameter0: android.media.ImageReader$SurfaceImage;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<android.media.ImageReader$SurfaceImage: java.nio.ByteBuffer nativeImageGetBuffer(int)>(i0);

        return $r1;
    }

    static void access$200(android.media.ImageReader$SurfaceImage)
    {
        android.media.ImageReader$SurfaceImage r0;

        r0 := @parameter0: android.media.ImageReader$SurfaceImage;

        specialinvoke r0.<android.media.ImageReader$SurfaceImage: void clearSurfacePlanes()>();

        return;
    }

    private void clearSurfacePlanes()
    {
        android.media.ImageReader$SurfaceImage r0;
        int i0, $i1;
        boolean $z0;
        android.media.ImageReader$SurfaceImage$SurfacePlane[] $r1, $r2, $r4, $r6;
        android.media.ImageReader$SurfaceImage$SurfacePlane $r3, $r5;

        r0 := @this: android.media.ImageReader$SurfaceImage;

        $z0 = r0.<android.media.ImageReader$SurfaceImage: boolean mIsImageValid>;

        if $z0 == 0 goto label3;

        i0 = 0;

     label1:
        $r1 = r0.<android.media.ImageReader$SurfaceImage: android.media.ImageReader$SurfaceImage$SurfacePlane[] mPlanes>;

        $i1 = lengthof $r1;

        if i0 >= $i1 goto label3;

        $r2 = r0.<android.media.ImageReader$SurfaceImage: android.media.ImageReader$SurfaceImage$SurfacePlane[] mPlanes>;

        $r3 = $r2[i0];

        if $r3 == null goto label2;

        $r4 = r0.<android.media.ImageReader$SurfaceImage: android.media.ImageReader$SurfaceImage$SurfacePlane[] mPlanes>;

        $r5 = $r4[i0];

        staticinvoke <android.media.ImageReader$SurfaceImage$SurfacePlane: void access$900(android.media.ImageReader$SurfaceImage$SurfacePlane)>($r5);

        $r6 = r0.<android.media.ImageReader$SurfaceImage: android.media.ImageReader$SurfaceImage$SurfacePlane[] mPlanes>;

        $r6[i0] = null;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return;
    }

    private void createSurfacePlanes()
    {
        android.media.ImageReader$SurfaceImage r0;
        int i0, $i1, $i2;
        android.media.ImageReader $r1, $r3;
        android.media.ImageReader$SurfaceImage$SurfacePlane[] $r2, $r4;
        android.media.ImageReader$SurfaceImage$SurfacePlane $r5;

        r0 := @this: android.media.ImageReader$SurfaceImage;

        $r1 = r0.<android.media.ImageReader$SurfaceImage: android.media.ImageReader this$0>;

        $i1 = staticinvoke <android.media.ImageReader: int access$1000(android.media.ImageReader)>($r1);

        $r2 = newarray (android.media.ImageReader$SurfaceImage$SurfacePlane)[$i1];

        r0.<android.media.ImageReader$SurfaceImage: android.media.ImageReader$SurfaceImage$SurfacePlane[] mPlanes> = $r2;

        i0 = 0;

     label1:
        $r3 = r0.<android.media.ImageReader$SurfaceImage: android.media.ImageReader this$0>;

        $i2 = staticinvoke <android.media.ImageReader: int access$1000(android.media.ImageReader)>($r3);

        if i0 >= $i2 goto label2;

        $r4 = r0.<android.media.ImageReader$SurfaceImage: android.media.ImageReader$SurfaceImage$SurfacePlane[] mPlanes>;

        $r5 = specialinvoke r0.<android.media.ImageReader$SurfaceImage: android.media.ImageReader$SurfaceImage$SurfacePlane nativeCreatePlane(int)>(i0);

        $r4[i0] = $r5;

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    private boolean isImageValid()
    {
        android.media.ImageReader$SurfaceImage r0;
        boolean $z0;

        r0 := @this: android.media.ImageReader$SurfaceImage;

        $z0 = r0.<android.media.ImageReader$SurfaceImage: boolean mIsImageValid>;

        return $z0;
    }

    private synchronized native android.media.ImageReader$SurfaceImage$SurfacePlane nativeCreatePlane(int);

    private synchronized native java.nio.ByteBuffer nativeImageGetBuffer(int);

    private void setImageValid(boolean)
    {
        android.media.ImageReader$SurfaceImage r0;
        boolean z0;

        r0 := @this: android.media.ImageReader$SurfaceImage;

        z0 := @parameter0: boolean;

        r0.<android.media.ImageReader$SurfaceImage: boolean mIsImageValid> = z0;

        return;
    }

    public void close()
    {
        android.media.ImageReader$SurfaceImage r0;
        boolean $z0;
        android.media.ImageReader $r1;

        r0 := @this: android.media.ImageReader$SurfaceImage;

        $z0 = r0.<android.media.ImageReader$SurfaceImage: boolean mIsImageValid>;

        if $z0 == 0 goto label1;

        $r1 = r0.<android.media.ImageReader$SurfaceImage: android.media.ImageReader this$0>;

        staticinvoke <android.media.ImageReader: void access$500(android.media.ImageReader,android.media.Image)>($r1, r0);

     label1:
        return;
    }

    protected final void finalize() throws java.lang.Throwable
    {
        android.media.ImageReader$SurfaceImage r0;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.media.ImageReader$SurfaceImage;

     label1:
        virtualinvoke r0.<android.media.ImageReader$SurfaceImage: void close()>();

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getFormat()
    {
        android.media.ImageReader$SurfaceImage r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        android.media.ImageReader $r2;
        int $i0;

        r0 := @this: android.media.ImageReader$SurfaceImage;

        $z0 = r0.<android.media.ImageReader$SurfaceImage: boolean mIsImageValid>;

        if $z0 == 0 goto label1;

        $r2 = r0.<android.media.ImageReader$SurfaceImage: android.media.ImageReader this$0>;

        $i0 = staticinvoke <android.media.ImageReader: int access$600(android.media.ImageReader)>($r2);

        return $i0;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Image is already released");

        throw $r1;
    }

    public int getHeight()
    {
        android.media.ImageReader$SurfaceImage r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        android.media.ImageReader $r2;
        int $i0;

        r0 := @this: android.media.ImageReader$SurfaceImage;

        $z0 = r0.<android.media.ImageReader$SurfaceImage: boolean mIsImageValid>;

        if $z0 == 0 goto label1;

        $r2 = r0.<android.media.ImageReader$SurfaceImage: android.media.ImageReader this$0>;

        $i0 = staticinvoke <android.media.ImageReader: int access$800(android.media.ImageReader)>($r2);

        return $i0;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Image is already released");

        throw $r1;
    }

    public android.media.Image$Plane[] getPlanes()
    {
        android.media.ImageReader$SurfaceImage r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        android.media.ImageReader$SurfaceImage$SurfacePlane[] $r2;
        java.lang.Object $r3;
        android.media.Image$Plane[] $r4;

        r0 := @this: android.media.ImageReader$SurfaceImage;

        $z0 = r0.<android.media.ImageReader$SurfaceImage: boolean mIsImageValid>;

        if $z0 == 0 goto label1;

        $r2 = r0.<android.media.ImageReader$SurfaceImage: android.media.ImageReader$SurfaceImage$SurfacePlane[] mPlanes>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r4 = (android.media.Image$Plane[]) $r3;

        return $r4;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Image is already released");

        throw $r1;
    }

    public android.media.ImageReader getReader()
    {
        android.media.ImageReader$SurfaceImage r0;
        android.media.ImageReader $r1;

        r0 := @this: android.media.ImageReader$SurfaceImage;

        $r1 = r0.<android.media.ImageReader$SurfaceImage: android.media.ImageReader this$0>;

        return $r1;
    }

    public long getTimestamp()
    {
        android.media.ImageReader$SurfaceImage r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        long $l0;

        r0 := @this: android.media.ImageReader$SurfaceImage;

        $z0 = r0.<android.media.ImageReader$SurfaceImage: boolean mIsImageValid>;

        if $z0 == 0 goto label1;

        $l0 = r0.<android.media.ImageReader$SurfaceImage: long mTimestamp>;

        return $l0;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Image is already released");

        throw $r1;
    }

    public int getWidth()
    {
        android.media.ImageReader$SurfaceImage r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        android.media.ImageReader $r2;
        int $i0;

        r0 := @this: android.media.ImageReader$SurfaceImage;

        $z0 = r0.<android.media.ImageReader$SurfaceImage: boolean mIsImageValid>;

        if $z0 == 0 goto label1;

        $r2 = r0.<android.media.ImageReader$SurfaceImage: android.media.ImageReader this$0>;

        $i0 = staticinvoke <android.media.ImageReader: int access$700(android.media.ImageReader)>($r2);

        return $i0;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Image is already released");

        throw $r1;
    }
}
