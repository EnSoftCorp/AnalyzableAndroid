public class com.android.org.conscrypt.OpenSSLServerSocketFactoryImpl extends javax.net.ssl.SSLServerSocketFactory
{
    private java.io.IOException instantiationException;
    private com.android.org.conscrypt.SSLParametersImpl sslParameters;

    public void <init>()
    {
        com.android.org.conscrypt.OpenSSLServerSocketFactoryImpl r0;
        java.security.KeyManagementException r1, $r4;
        com.android.org.conscrypt.SSLParametersImpl $r2, $r3;
        java.io.IOException $r5, $r6;

        r0 := @this: com.android.org.conscrypt.OpenSSLServerSocketFactoryImpl;

        specialinvoke r0.<javax.net.ssl.SSLServerSocketFactory: void <init>()>();

     label1:
        $r2 = staticinvoke <com.android.org.conscrypt.SSLParametersImpl: com.android.org.conscrypt.SSLParametersImpl getDefault()>();

        r0.<com.android.org.conscrypt.OpenSSLServerSocketFactoryImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters> = $r2;

        $r3 = r0.<com.android.org.conscrypt.OpenSSLServerSocketFactoryImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters>;

        virtualinvoke $r3.<com.android.org.conscrypt.SSLParametersImpl: void setUseClientMode(boolean)>(0);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("Delayed instantiation exception:");

        r0.<com.android.org.conscrypt.OpenSSLServerSocketFactoryImpl: java.io.IOException instantiationException> = $r5;

        $r6 = r0.<com.android.org.conscrypt.OpenSSLServerSocketFactoryImpl: java.io.IOException instantiationException>;

        virtualinvoke $r6.<java.io.IOException: java.lang.Throwable initCause(java.lang.Throwable)>(r1);

        return;

        catch java.security.KeyManagementException from label1 to label2 with label3;
    }

    public void <init>(com.android.org.conscrypt.SSLParametersImpl)
    {
        com.android.org.conscrypt.OpenSSLServerSocketFactoryImpl r0;
        com.android.org.conscrypt.SSLParametersImpl r1, $r3, $r4;
        java.lang.Object $r2;

        r0 := @this: com.android.org.conscrypt.OpenSSLServerSocketFactoryImpl;

        r1 := @parameter0: com.android.org.conscrypt.SSLParametersImpl;

        specialinvoke r0.<javax.net.ssl.SSLServerSocketFactory: void <init>()>();

        $r2 = virtualinvoke r1.<com.android.org.conscrypt.SSLParametersImpl: java.lang.Object clone()>();

        $r3 = (com.android.org.conscrypt.SSLParametersImpl) $r2;

        r0.<com.android.org.conscrypt.OpenSSLServerSocketFactoryImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters> = $r3;

        $r4 = r0.<com.android.org.conscrypt.OpenSSLServerSocketFactoryImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters>;

        virtualinvoke $r4.<com.android.org.conscrypt.SSLParametersImpl: void setUseClientMode(boolean)>(0);

        return;
    }

    public java.net.ServerSocket createServerSocket() throws java.io.IOException
    {
        com.android.org.conscrypt.OpenSSLServerSocketFactoryImpl r0;
        com.android.org.conscrypt.OpenSSLServerSocketImpl $r1;
        com.android.org.conscrypt.SSLParametersImpl $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: com.android.org.conscrypt.OpenSSLServerSocketFactoryImpl;

        $r1 = new com.android.org.conscrypt.OpenSSLServerSocketImpl;

        $r2 = r0.<com.android.org.conscrypt.OpenSSLServerSocketFactoryImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters>;

        $r3 = virtualinvoke $r2.<com.android.org.conscrypt.SSLParametersImpl: java.lang.Object clone()>();

        $r4 = (com.android.org.conscrypt.SSLParametersImpl) $r3;

        specialinvoke $r1.<com.android.org.conscrypt.OpenSSLServerSocketImpl: void <init>(com.android.org.conscrypt.SSLParametersImpl)>($r4);

        return $r1;
    }

    public java.net.ServerSocket createServerSocket(int) throws java.io.IOException
    {
        com.android.org.conscrypt.OpenSSLServerSocketFactoryImpl r0;
        int i0;
        com.android.org.conscrypt.OpenSSLServerSocketImpl $r1;
        com.android.org.conscrypt.SSLParametersImpl $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: com.android.org.conscrypt.OpenSSLServerSocketFactoryImpl;

        i0 := @parameter0: int;

        $r1 = new com.android.org.conscrypt.OpenSSLServerSocketImpl;

        $r2 = r0.<com.android.org.conscrypt.OpenSSLServerSocketFactoryImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters>;

        $r3 = virtualinvoke $r2.<com.android.org.conscrypt.SSLParametersImpl: java.lang.Object clone()>();

        $r4 = (com.android.org.conscrypt.SSLParametersImpl) $r3;

        specialinvoke $r1.<com.android.org.conscrypt.OpenSSLServerSocketImpl: void <init>(int,com.android.org.conscrypt.SSLParametersImpl)>(i0, $r4);

        return $r1;
    }

    public java.net.ServerSocket createServerSocket(int, int) throws java.io.IOException
    {
        com.android.org.conscrypt.OpenSSLServerSocketFactoryImpl r0;
        int i0, i1;
        com.android.org.conscrypt.OpenSSLServerSocketImpl $r1;
        com.android.org.conscrypt.SSLParametersImpl $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: com.android.org.conscrypt.OpenSSLServerSocketFactoryImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new com.android.org.conscrypt.OpenSSLServerSocketImpl;

        $r2 = r0.<com.android.org.conscrypt.OpenSSLServerSocketFactoryImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters>;

        $r3 = virtualinvoke $r2.<com.android.org.conscrypt.SSLParametersImpl: java.lang.Object clone()>();

        $r4 = (com.android.org.conscrypt.SSLParametersImpl) $r3;

        specialinvoke $r1.<com.android.org.conscrypt.OpenSSLServerSocketImpl: void <init>(int,int,com.android.org.conscrypt.SSLParametersImpl)>(i0, i1, $r4);

        return $r1;
    }

    public java.net.ServerSocket createServerSocket(int, int, java.net.InetAddress) throws java.io.IOException
    {
        com.android.org.conscrypt.OpenSSLServerSocketFactoryImpl r0;
        int i0, i1;
        java.net.InetAddress r1;
        com.android.org.conscrypt.OpenSSLServerSocketImpl $r2;
        com.android.org.conscrypt.SSLParametersImpl $r3, $r5;
        java.lang.Object $r4;

        r0 := @this: com.android.org.conscrypt.OpenSSLServerSocketFactoryImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.net.InetAddress;

        $r2 = new com.android.org.conscrypt.OpenSSLServerSocketImpl;

        $r3 = r0.<com.android.org.conscrypt.OpenSSLServerSocketFactoryImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters>;

        $r4 = virtualinvoke $r3.<com.android.org.conscrypt.SSLParametersImpl: java.lang.Object clone()>();

        $r5 = (com.android.org.conscrypt.SSLParametersImpl) $r4;

        specialinvoke $r2.<com.android.org.conscrypt.OpenSSLServerSocketImpl: void <init>(int,int,java.net.InetAddress,com.android.org.conscrypt.SSLParametersImpl)>(i0, i1, r1, $r5);

        return $r2;
    }

    public java.lang.String[] getDefaultCipherSuites()
    {
        com.android.org.conscrypt.OpenSSLServerSocketFactoryImpl r0;
        java.lang.String[] $r1;

        r0 := @this: com.android.org.conscrypt.OpenSSLServerSocketFactoryImpl;

        $r1 = staticinvoke <com.android.org.conscrypt.NativeCrypto: java.lang.String[] getDefaultCipherSuites()>();

        return $r1;
    }

    public java.lang.String[] getSupportedCipherSuites()
    {
        com.android.org.conscrypt.OpenSSLServerSocketFactoryImpl r0;
        java.lang.String[] $r1;

        r0 := @this: com.android.org.conscrypt.OpenSSLServerSocketFactoryImpl;

        $r1 = staticinvoke <com.android.org.conscrypt.NativeCrypto: java.lang.String[] getSupportedCipherSuites()>();

        return $r1;
    }
}
