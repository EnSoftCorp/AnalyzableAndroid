final class com.android.internal.view.RotationPolicy$2 extends java.lang.Object implements java.lang.Runnable
{
    final boolean val$enabled;

    void <init>(boolean)
    {
        com.android.internal.view.RotationPolicy$2 r0;
        boolean z0;

        r0 := @this: com.android.internal.view.RotationPolicy$2;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.view.RotationPolicy$2: boolean val$enabled> = z0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        com.android.internal.view.RotationPolicy$2 r0;
        android.view.IWindowManager r2;
        boolean $z0;
        android.os.RemoteException $r3;

        r0 := @this: com.android.internal.view.RotationPolicy$2;

     label1:
        r2 = staticinvoke <android.view.WindowManagerGlobal: android.view.IWindowManager getWindowManagerService()>();

        $z0 = r0.<com.android.internal.view.RotationPolicy$2: boolean val$enabled>;

        if $z0 == 0 goto label3;

        interfaceinvoke r2.<android.view.IWindowManager: void freezeRotation(int)>(0);

     label2:
        return;

     label3:
        interfaceinvoke r2.<android.view.IWindowManager: void thawRotation()>();

     label4:
        return;

     label5:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RotationPolicy", "Unable to save auto-rotate setting");

        return;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }
}
