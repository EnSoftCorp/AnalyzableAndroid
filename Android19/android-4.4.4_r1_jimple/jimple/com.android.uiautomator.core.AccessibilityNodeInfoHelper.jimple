class com.android.uiautomator.core.AccessibilityNodeInfoHelper extends java.lang.Object
{

    void <init>()
    {
        com.android.uiautomator.core.AccessibilityNodeInfoHelper r0;

        r0 := @this: com.android.uiautomator.core.AccessibilityNodeInfoHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static android.graphics.Rect getVisibleBoundsInScreen(android.view.accessibility.AccessibilityNodeInfo, int, int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int i0, i1;
        android.graphics.Rect r1, r2, $r3, $r4;

        r0 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r0 != null goto label1;

        return null;

     label1:
        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r1 = $r3;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void getBoundsInScreen(android.graphics.Rect)>(r1);

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r2 = $r4;

        r2.<android.graphics.Rect: int top> = 0;

        r2.<android.graphics.Rect: int left> = 0;

        r2.<android.graphics.Rect: int right> = i0;

        r2.<android.graphics.Rect: int bottom> = i1;

        virtualinvoke r1.<android.graphics.Rect: boolean intersect(android.graphics.Rect)>(r2);

        return r1;
    }
}
