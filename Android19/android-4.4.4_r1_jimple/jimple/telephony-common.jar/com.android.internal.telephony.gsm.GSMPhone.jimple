public class com.android.internal.telephony.gsm.GSMPhone extends com.android.internal.telephony.PhoneBase
{
    public static final java.lang.String CIPHERING_KEY;
    private static final boolean DBG_PORT;
    private static final boolean LOCAL_DEBUG;
    static final java.lang.String LOG_TAG;
    private static final boolean VDBG;
    public static final java.lang.String VM_NUMBER;
    public static final java.lang.String VM_SIM_IMSI;
    com.android.internal.telephony.gsm.GsmCallTracker mCT;
    java.lang.Thread mDebugPortThread;
    java.net.ServerSocket mDebugSocket;
    private java.lang.String mImei;
    private java.lang.String mImeiSv;
    java.util.ArrayList mPendingMMIs;
    android.os.Registrant mPostDialHandler;
    com.android.internal.telephony.gsm.GsmServiceStateTracker mSST;
    com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager mSimPhoneBookIntManager;
    android.os.RegistrantList mSsnRegistrants;
    com.android.internal.telephony.PhoneSubInfo mSubInfo;
    private java.lang.String mVmNumber;

    public void <init>(android.content.Context, com.android.internal.telephony.CommandsInterface, com.android.internal.telephony.PhoneNotifier)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        android.content.Context r1;
        com.android.internal.telephony.CommandsInterface r2;
        com.android.internal.telephony.PhoneNotifier r3;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.internal.telephony.CommandsInterface;

        r3 := @parameter2: com.android.internal.telephony.PhoneNotifier;

        specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void <init>(android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,boolean)>(r1, r2, r3, 0);

        return;
    }

    public void <init>(android.content.Context, com.android.internal.telephony.CommandsInterface, com.android.internal.telephony.PhoneNotifier, boolean)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        android.content.Context r1;
        com.android.internal.telephony.CommandsInterface r2, $r6, $r10, $r11, $r12, $r13, $r15;
        com.android.internal.telephony.PhoneNotifier r3;
        boolean z0, $z1;
        java.util.ArrayList $r4;
        android.os.RegistrantList $r5;
        com.android.internal.telephony.gsm.GsmCallTracker $r7;
        com.android.internal.telephony.gsm.GsmServiceStateTracker $r8, $r14;
        com.android.internal.telephony.dataconnection.DcTracker $r9;
        java.lang.Integer $r16;
        com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager $r17;
        java.lang.String $r18;
        com.android.internal.telephony.test.SimulatedRadioControl $r19;
        com.android.internal.telephony.PhoneSubInfo $r20;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.internal.telephony.CommandsInterface;

        r3 := @parameter2: com.android.internal.telephony.PhoneNotifier;

        z0 := @parameter3: boolean;

        specialinvoke r0.<com.android.internal.telephony.PhoneBase: void <init>(java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean)>("GSM", r3, r1, r2, z0);

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.ArrayList mPendingMMIs> = $r4;

        $r5 = new android.os.RegistrantList;

        specialinvoke $r5.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.RegistrantList mSsnRegistrants> = $r5;

        $z1 = r2 instanceof com.android.internal.telephony.test.SimulatedRadioControl;

        if $z1 == 0 goto label1;

        $r19 = (com.android.internal.telephony.test.SimulatedRadioControl) r2;

        r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.test.SimulatedRadioControl mSimulatedRadioControl> = $r19;

     label1:
        $r6 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r6.<com.android.internal.telephony.CommandsInterface: void setPhoneType(int)>(1);

        $r7 = new com.android.internal.telephony.gsm.GsmCallTracker;

        specialinvoke $r7.<com.android.internal.telephony.gsm.GsmCallTracker: void <init>(com.android.internal.telephony.gsm.GSMPhone)>(r0);

        r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT> = $r7;

        $r8 = new com.android.internal.telephony.gsm.GsmServiceStateTracker;

        specialinvoke $r8.<com.android.internal.telephony.gsm.GsmServiceStateTracker: void <init>(com.android.internal.telephony.gsm.GSMPhone)>(r0);

        r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST> = $r8;

        $r9 = new com.android.internal.telephony.dataconnection.DcTracker;

        specialinvoke $r9.<com.android.internal.telephony.dataconnection.DcTracker: void <init>(com.android.internal.telephony.PhoneBase)>(r0);

        r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.dataconnection.DcTrackerBase mDcTracker> = $r9;

        if z0 != 0 goto label2;

        $r17 = new com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager;

        specialinvoke $r17.<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: void <init>(com.android.internal.telephony.gsm.GSMPhone)>(r0);

        r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager mSimPhoneBookIntManager> = $r17;

        $r20 = new com.android.internal.telephony.PhoneSubInfo;

        specialinvoke $r20.<com.android.internal.telephony.PhoneSubInfo: void <init>(com.android.internal.telephony.Phone)>(r0);

        r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.PhoneSubInfo mSubInfo> = $r20;

     label2:
        $r10 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r10.<com.android.internal.telephony.CommandsInterface: void registerForAvailable(android.os.Handler,int,java.lang.Object)>(r0, 1, null);

        $r11 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r11.<com.android.internal.telephony.CommandsInterface: void registerForOffOrNotAvailable(android.os.Handler,int,java.lang.Object)>(r0, 8, null);

        $r12 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r12.<com.android.internal.telephony.CommandsInterface: void registerForOn(android.os.Handler,int,java.lang.Object)>(r0, 5, null);

        $r13 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r13.<com.android.internal.telephony.CommandsInterface: void setOnUSSD(android.os.Handler,int,java.lang.Object)>(r0, 7, null);

        $r15 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r15.<com.android.internal.telephony.CommandsInterface: void setOnSuppServiceNotification(android.os.Handler,int,java.lang.Object)>(r0, 2, null);

        $r14 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST>;

        virtualinvoke $r14.<com.android.internal.telephony.gsm.GsmServiceStateTracker: void registerForNetworkAttached(android.os.Handler,int,java.lang.Object)>(r0, 19, null);

        $r16 = new java.lang.Integer;

        specialinvoke $r16.<java.lang.Integer: void <init>(int)>(1);

        $r18 = virtualinvoke $r16.<java.lang.Integer: java.lang.String toString()>();

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("gsm.current.phone-type", $r18);

        return;
    }

    private java.lang.String getVmSimImsi()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        android.content.Context $r1;
        android.content.SharedPreferences $r2;
        java.lang.String $r3;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: android.content.Context getContext()>();

        $r2 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r1);

        $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("vm_sim_imsi_key", null);

        return $r3;
    }

    private boolean handleCallDeflectionIncallSupplementaryService(java.lang.String)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String r1;
        boolean z0;
        com.android.internal.telephony.CallStateException r2, $r10;
        int $i0, i4;
        com.android.internal.telephony.gsm.GsmCall $r3, $r6;
        com.android.internal.telephony.Call$State $r4, $r5, $r7, $r8;
        com.android.internal.telephony.gsm.GsmCallTracker $r9, $r11;
        com.android.internal.telephony.Phone$SuppService $r12;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.lang.String;

        z0 = 1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        i4 = (int) 1;

        if $i0 <= i4 goto label2;

        z0 = 0;

     label1:
        return z0;

     label2:
        $r3 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCall getRingingCall()>();

        $r4 = virtualinvoke $r3.<com.android.internal.telephony.gsm.GsmCall: com.android.internal.telephony.Call$State getState()>();

        $r5 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State IDLE>;

        if $r4 == $r5 goto label6;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GSMPhone", "MmiCode 0: rejectCall");

     label3:
        $r11 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        virtualinvoke $r11.<com.android.internal.telephony.gsm.GsmCallTracker: void rejectCall()>();

     label4:
        return 1;

     label5:
        $r10 := @caughtexception;

        r2 = $r10;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("GSMPhone", "reject failed", r2);

        $r12 = <com.android.internal.telephony.Phone$SuppService: com.android.internal.telephony.Phone$SuppService REJECT>;

        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void notifySuppServiceFailed(com.android.internal.telephony.Phone$SuppService)>($r12);

        return 1;

     label6:
        $r6 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCall getBackgroundCall()>();

        $r7 = virtualinvoke $r6.<com.android.internal.telephony.gsm.GsmCall: com.android.internal.telephony.Call$State getState()>();

        $r8 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State IDLE>;

        if $r7 == $r8 goto label1;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GSMPhone", "MmiCode 0: hangupWaitingOrBackground");

        $r9 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        virtualinvoke $r9.<com.android.internal.telephony.gsm.GsmCallTracker: void hangupWaitingOrBackground()>();

        return 1;

        catch com.android.internal.telephony.CallStateException from label3 to label4 with label5;
    }

    private boolean handleCallHoldIncallSupplementaryService(java.lang.String)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String r1, $r14, $r22;
        int i0, i1;
        com.android.internal.telephony.gsm.GsmCall r2, $r6;
        com.android.internal.telephony.CallStateException r3, r4, $r21, $r23;
        com.android.internal.telephony.gsm.GsmConnection r5;
        com.android.internal.telephony.Call$State $r7, $r8;
        com.android.internal.telephony.gsm.GsmCallTracker $r9, $r10, $r11, $r20;
        char $c4;
        java.lang.StringBuilder $r12, $r13, $r15, $r17, $r18, $r19;
        com.android.internal.telephony.Phone$SuppService $r16, $r24, $r25;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.lang.String;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if i0 <= 2 goto label01;

        return 0;

     label01:
        r2 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCall getForegroundCall()>();

        if i0 <= 1 goto label09;

     label02:
        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(1);

        i1 = -48 + $c4;

        $r11 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        r5 = virtualinvoke $r11.<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.gsm.GsmConnection getConnectionByIndex(com.android.internal.telephony.gsm.GsmCall,int)>(r2, i1);

     label03:
        if r5 == null goto label07;

        if i1 < 1 goto label07;

        if i1 > 7 goto label07;

     label04:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MmiCode 2: separate call ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GSMPhone", $r22);

        $r20 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        virtualinvoke $r20.<com.android.internal.telephony.gsm.GsmCallTracker: void separate(com.android.internal.telephony.gsm.GsmConnection)>(r5);

     label05:
        return 1;

     label06:
        $r23 := @caughtexception;

        r4 = $r23;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("GSMPhone", "separate failed", r4);

        $r25 = <com.android.internal.telephony.Phone$SuppService: com.android.internal.telephony.Phone$SuppService SEPARATE>;

        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void notifySuppServiceFailed(com.android.internal.telephony.Phone$SuppService)>($r25);

        return 1;

     label07:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("separate: invalid call index ");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GSMPhone", $r14);

        $r16 = <com.android.internal.telephony.Phone$SuppService: com.android.internal.telephony.Phone$SuppService SEPARATE>;

        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void notifySuppServiceFailed(com.android.internal.telephony.Phone$SuppService)>($r16);

     label08:
        return 1;

     label09:
        $r6 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCall getRingingCall()>();

        $r7 = virtualinvoke $r6.<com.android.internal.telephony.gsm.GsmCall: com.android.internal.telephony.Call$State getState()>();

        $r8 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State IDLE>;

        if $r7 == $r8 goto label12;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GSMPhone", "MmiCode 2: accept ringing call");

        $r10 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        virtualinvoke $r10.<com.android.internal.telephony.gsm.GsmCallTracker: void acceptCall()>();

     label10:
        return 1;

     label11:
        $r21 := @caughtexception;

        r3 = $r21;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("GSMPhone", "switch failed", r3);

        $r24 = <com.android.internal.telephony.Phone$SuppService: com.android.internal.telephony.Phone$SuppService SWITCH>;

        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void notifySuppServiceFailed(com.android.internal.telephony.Phone$SuppService)>($r24);

        return 1;

     label12:
        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GSMPhone", "MmiCode 2: switchWaitingOrHoldingAndActive");

        $r9 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        virtualinvoke $r9.<com.android.internal.telephony.gsm.GsmCallTracker: void switchWaitingOrHoldingAndActive()>();

     label13:
        return 1;

        catch com.android.internal.telephony.CallStateException from label02 to label03 with label06;
        catch com.android.internal.telephony.CallStateException from label04 to label05 with label06;
        catch com.android.internal.telephony.CallStateException from label07 to label08 with label06;
        catch com.android.internal.telephony.CallStateException from label09 to label10 with label11;
        catch com.android.internal.telephony.CallStateException from label12 to label13 with label11;
    }

    private boolean handleCallWaitingIncallSupplementaryService(java.lang.String)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String r1, $r11;
        boolean z0;
        int i0, i1, i7, i8;
        com.android.internal.telephony.gsm.GsmCall r2;
        com.android.internal.telephony.CallStateException r3, $r12;
        com.android.internal.telephony.Call$State $r4, $r5;
        com.android.internal.telephony.gsm.GsmCallTracker $r6, $r7, $r13;
        char $c4;
        java.lang.StringBuilder $r8, $r9, $r10;
        com.android.internal.telephony.Phone$SuppService $r14;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.lang.String;

        z0 = 1;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if i0 <= 2 goto label02;

        z0 = 0;

     label01:
        return z0;

     label02:
        r2 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCall getForegroundCall()>();

        i7 = (int) 1;

        if i0 <= i7 goto label08;

     label03:
        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(1);

        i1 = -48 + $c4;

     label04:
        i8 = (int) 1;

        if i1 < i8 goto label01;

        if i1 > 7 goto label01;

     label05:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MmiCode 1: hangupConnectionByIndex ");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GSMPhone", $r11);

        $r13 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        virtualinvoke $r13.<com.android.internal.telephony.gsm.GsmCallTracker: void hangupConnectionByIndex(com.android.internal.telephony.gsm.GsmCall,int)>(r2, i1);

     label06:
        return 1;

     label07:
        $r12 := @caughtexception;

        r3 = $r12;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("GSMPhone", "hangup failed", r3);

        $r14 = <com.android.internal.telephony.Phone$SuppService: com.android.internal.telephony.Phone$SuppService HANGUP>;

        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void notifySuppServiceFailed(com.android.internal.telephony.Phone$SuppService)>($r14);

        return 1;

     label08:
        $r4 = virtualinvoke r2.<com.android.internal.telephony.gsm.GsmCall: com.android.internal.telephony.Call$State getState()>();

        $r5 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State IDLE>;

        if $r4 == $r5 goto label10;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GSMPhone", "MmiCode 1: hangup foreground");

        $r7 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        virtualinvoke $r7.<com.android.internal.telephony.gsm.GsmCallTracker: void hangup(com.android.internal.telephony.gsm.GsmCall)>(r2);

     label09:
        return 1;

     label10:
        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GSMPhone", "MmiCode 1: switchWaitingOrHoldingAndActive");

        $r6 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        virtualinvoke $r6.<com.android.internal.telephony.gsm.GsmCallTracker: void switchWaitingOrHoldingAndActive()>();

     label11:
        return 1;

        catch com.android.internal.telephony.CallStateException from label03 to label04 with label07;
        catch com.android.internal.telephony.CallStateException from label05 to label06 with label07;
        catch com.android.internal.telephony.CallStateException from label08 to label09 with label07;
        catch com.android.internal.telephony.CallStateException from label10 to label11 with label07;
    }

    private boolean handleCcbsIncallSupplementaryService(java.lang.String)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String r1;
        int $i0;
        com.android.internal.telephony.Phone$SuppService $r2;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 <= 1 goto label1;

        return 0;

     label1:
        staticinvoke <android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("GSMPhone", "MmiCode 5: CCBS not supported!");

        $r2 = <com.android.internal.telephony.Phone$SuppService: com.android.internal.telephony.Phone$SuppService UNKNOWN>;

        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void notifySuppServiceFailed(com.android.internal.telephony.Phone$SuppService)>($r2);

        return 1;
    }

    private void handleCfuQueryResult(com.android.internal.telephony.CallForwardInfo[])
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.CallForwardInfo[] r1;
        com.android.internal.telephony.uicc.IccRecords r2;
        int i0, i1, i2, $i3, $i4, $i5;
        boolean z0;
        java.util.concurrent.atomic.AtomicReference $r3;
        java.lang.Object $r4;
        com.android.internal.telephony.CallForwardInfo $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: com.android.internal.telephony.CallForwardInfo[];

        $r3 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r2 = (com.android.internal.telephony.uicc.IccRecords) $r4;

        if r2 == null goto label2;

        if r1 == null goto label1;

        $i3 = lengthof r1;

        if $i3 != 0 goto label3;

     label1:
        virtualinvoke r2.<com.android.internal.telephony.uicc.IccRecords: void setVoiceCallForwardingFlag(int,boolean,java.lang.String)>(1, 0, null);

     label2:
        return;

     label3:
        i0 = 0;

        i1 = lengthof r1;

     label4:
        if i0 >= i1 goto label2;

        $r5 = r1[i0];

        $i4 = $r5.<com.android.internal.telephony.CallForwardInfo: int serviceClass>;

        $i5 = 1 & $i4;

        if $i5 == 0 goto label6;

        $r6 = r1[i0];

        i2 = $r6.<com.android.internal.telephony.CallForwardInfo: int status>;

        z0 = 0;

        if i2 != 1 goto label5;

        z0 = 1;

     label5:
        $r7 = r1[i0];

        $r8 = $r7.<com.android.internal.telephony.CallForwardInfo: java.lang.String number>;

        virtualinvoke r2.<com.android.internal.telephony.uicc.IccRecords: void setVoiceCallForwardingFlag(int,boolean,java.lang.String)>(1, z0, $r8);

        return;

     label6:
        i0 = i0 + 1;

        goto label4;
    }

    private boolean handleEctIncallSupplementaryService(java.lang.String)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String r1;
        int $i0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 == 1 goto label1;

        return 0;

     label1:
        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GSMPhone", "MmiCode 4: explicit call transfer");

        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void explicitCallTransfer()>();

        return 1;
    }

    private boolean handleMultipartyIncallSupplementaryService(java.lang.String)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String r1;
        int $i0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 <= 1 goto label1;

        return 0;

     label1:
        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GSMPhone", "MmiCode 3: merge calls");

        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void conference()>();

        return 1;
    }

    private void handleSetSelectNetwork(android.os.AsyncResult)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        android.os.AsyncResult r1;
        com.android.internal.telephony.gsm.GSMPhone$NetworkSelectMessage r2;
        android.content.SharedPreferences$Editor r3;
        java.lang.Object $r4, $r5, $r13;
        boolean $z0, $z1;
        android.os.Message $r6, $r16, $r17;
        android.content.Context $r7;
        android.content.SharedPreferences $r8;
        java.lang.String $r9, $r11;
        java.lang.Throwable $r14;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: android.os.AsyncResult;

        $r4 = r1.<android.os.AsyncResult: java.lang.Object userObj>;

        $z0 = $r4 instanceof com.android.internal.telephony.gsm.GSMPhone$NetworkSelectMessage;

        if $z0 != 0 goto label2;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GSMPhone", "unexpected result from user object.");

     label1:
        return;

     label2:
        $r5 = r1.<android.os.AsyncResult: java.lang.Object userObj>;

        r2 = (com.android.internal.telephony.gsm.GSMPhone$NetworkSelectMessage) $r5;

        $r6 = r2.<com.android.internal.telephony.gsm.GSMPhone$NetworkSelectMessage: android.os.Message message>;

        if $r6 == null goto label3;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GSMPhone", "sending original message to recipient");

        $r16 = r2.<com.android.internal.telephony.gsm.GSMPhone$NetworkSelectMessage: android.os.Message message>;

        $r13 = r1.<android.os.AsyncResult: java.lang.Object result>;

        $r14 = r1.<android.os.AsyncResult: java.lang.Throwable exception>;

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>($r16, $r13, $r14);

        $r17 = r2.<com.android.internal.telephony.gsm.GSMPhone$NetworkSelectMessage: android.os.Message message>;

        virtualinvoke $r17.<android.os.Message: void sendToTarget()>();

     label3:
        $r7 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: android.content.Context getContext()>();

        $r8 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r7);

        r3 = interfaceinvoke $r8.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r9 = r2.<com.android.internal.telephony.gsm.GSMPhone$NetworkSelectMessage: java.lang.String operatorNumeric>;

        interfaceinvoke r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("network_selection_key", $r9);

        $r11 = r2.<com.android.internal.telephony.gsm.GSMPhone$NetworkSelectMessage: java.lang.String operatorAlphaLong>;

        interfaceinvoke r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("network_selection_name_key", $r11);

        $z1 = interfaceinvoke r3.<android.content.SharedPreferences$Editor: boolean commit()>();

        if $z1 != 0 goto label1;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("GSMPhone", "failed to commit network selection preference");

        return;
    }

    private boolean isValidCommandInterfaceCFAction(int)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        int i0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label2;
            case 2: goto label1;
            case 3: goto label2;
            case 4: goto label2;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        return 1;
    }

    private boolean isValidCommandInterfaceCFReason(int)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        int i0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label2;
            case 2: goto label2;
            case 3: goto label2;
            case 4: goto label2;
            case 5: goto label2;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        return 1;
    }

    private void onIncomingUSSD(int, java.lang.String)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        int i0, i1, i2, i3, i4;
        java.lang.String r1;
        boolean z0, z1, $z2;
        com.android.internal.telephony.gsm.GsmMmiCode r2, $r7, $r10;
        java.util.ArrayList $r3, $r8, $r12;
        java.util.concurrent.atomic.AtomicReference $r4;
        java.lang.Object $r5, $r9, $r11;
        com.android.internal.telephony.uicc.UiccCardApplication $r6;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        z0 = 1;

        i3 = (int) 1;

        if i0 != i3 goto label06;

        z1 = 1;

     label01:
        if i0 == 0 goto label07;

        i4 = (int) 1;

        if i0 == i4 goto label07;

     label02:
        i1 = 0;

        $r3 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.ArrayList mPendingMMIs>;

        i2 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

     label03:
        r2 = null;

        if i1 >= i2 goto label04;

        $r8 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.ArrayList mPendingMMIs>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r10 = (com.android.internal.telephony.gsm.GsmMmiCode) $r9;

        $z2 = virtualinvoke $r10.<com.android.internal.telephony.gsm.GsmMmiCode: boolean isPendingUSSD()>();

        if $z2 == 0 goto label08;

        $r12 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.ArrayList mPendingMMIs>;

        $r11 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (com.android.internal.telephony.gsm.GsmMmiCode) $r11;

     label04:
        if r2 == null goto label10;

        if z0 == 0 goto label09;

        virtualinvoke r2.<com.android.internal.telephony.gsm.GsmMmiCode: void onUssdFinishedError()>();

     label05:
        return;

     label06:
        z1 = 0;

        goto label01;

     label07:
        z0 = 0;

        goto label02;

     label08:
        i1 = i1 + 1;

        goto label03;

     label09:
        virtualinvoke r2.<com.android.internal.telephony.gsm.GsmMmiCode: void onUssdFinished(java.lang.String,boolean)>(r1, z1);

        return;

     label10:
        if z0 != 0 goto label05;

        if r1 == null goto label05;

        $r4 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mUiccApplication>;

        $r5 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r6 = (com.android.internal.telephony.uicc.UiccCardApplication) $r5;

        $r7 = staticinvoke <com.android.internal.telephony.gsm.GsmMmiCode: com.android.internal.telephony.gsm.GsmMmiCode newNetworkInitiatedUssd(java.lang.String,boolean,com.android.internal.telephony.gsm.GSMPhone,com.android.internal.telephony.uicc.UiccCardApplication)>(r1, z1, r0, $r6);

        specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void onNetworkInitiatedUssd(com.android.internal.telephony.gsm.GsmMmiCode)>($r7);

        return;
    }

    private void onNetworkInitiatedUssd(com.android.internal.telephony.gsm.GsmMmiCode)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmMmiCode r1;
        android.os.AsyncResult $r2;
        android.os.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: com.android.internal.telephony.gsm.GsmMmiCode;

        $r3 = r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.RegistrantList mMmiCompleteRegistrants>;

        $r2 = new android.os.AsyncResult;

        specialinvoke $r2.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r1, null);

        virtualinvoke $r3.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r2);

        return;
    }

    private void processIccRecordEvents(int)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        int i0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        return;

     label2:
        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void notifyCallForwardingIndicator()>();

        return;

     label3:
        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void notifyMessageWaitingIndicator()>();

        return;
    }

    private void registerForSimRecordEvents()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.uicc.IccRecords r1;
        java.util.concurrent.atomic.AtomicReference $r2;
        java.lang.Object $r3;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r1 = (com.android.internal.telephony.uicc.IccRecords) $r3;

        if r1 != null goto label1;

        return;

     label1:
        virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: void registerForNetworkSelectionModeAutomatic(android.os.Handler,int,java.lang.Object)>(r0, 28, null);

        virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: void registerForRecordsEvents(android.os.Handler,int,java.lang.Object)>(r0, 29, null);

        virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: void registerForRecordsLoaded(android.os.Handler,int,java.lang.Object)>(r0, 3, null);

        return;
    }

    private void setVmSimImsi(java.lang.String)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String r1;
        android.content.SharedPreferences$Editor r2;
        android.content.Context $r3;
        android.content.SharedPreferences $r4;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.lang.String;

        $r3 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: android.content.Context getContext()>();

        $r4 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r3);

        r2 = interfaceinvoke $r4.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        interfaceinvoke r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("vm_sim_imsi_key", r1);

        interfaceinvoke r2.<android.content.SharedPreferences$Editor: void apply()>();

        return;
    }

    private void storeVoiceMailNumber(java.lang.String)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String r1, $r6;
        android.content.SharedPreferences$Editor r2;
        android.content.Context $r3;
        android.content.SharedPreferences $r4;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.lang.String;

        $r3 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: android.content.Context getContext()>();

        $r4 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r3);

        r2 = interfaceinvoke $r4.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        interfaceinvoke r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("vm_number_key", r1);

        interfaceinvoke r2.<android.content.SharedPreferences$Editor: void apply()>();

        $r6 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getSubscriberId()>();

        specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void setVmSimImsi(java.lang.String)>($r6);

        return;
    }

    private void unregisterForSimRecordEvents()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.uicc.IccRecords r1;
        java.util.concurrent.atomic.AtomicReference $r2;
        java.lang.Object $r3;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r1 = (com.android.internal.telephony.uicc.IccRecords) $r3;

        if r1 != null goto label1;

        return;

     label1:
        virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: void unregisterForNetworkSelectionModeAutomatic(android.os.Handler)>(r0);

        virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: void unregisterForRecordsEvents(android.os.Handler)>(r0);

        virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: void unregisterForRecordsLoaded(android.os.Handler)>(r0);

        return;
    }

    public void acceptCall() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmCallTracker $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        virtualinvoke $r1.<com.android.internal.telephony.gsm.GsmCallTracker: void acceptCall()>();

        return;
    }

    public void activateCellBroadcastSms(int, android.os.Message)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        int i0;
        android.os.Message r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("GSMPhone", "[GSMPhone] activateCellBroadcastSms() is obsolete; use SmsManager");

        virtualinvoke r1.<android.os.Message: void sendToTarget()>();

        return;
    }

    public boolean canConference()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmCallTracker $r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.gsm.GsmCallTracker: boolean canConference()>();

        return $z0;
    }

    public boolean canDial()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmCallTracker $r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.gsm.GsmCallTracker: boolean canDial()>();

        return $z0;
    }

    public boolean canTransfer()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmCallTracker $r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.gsm.GsmCallTracker: boolean canTransfer()>();

        return $z0;
    }

    public void clearDisconnected()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmCallTracker $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        virtualinvoke $r1.<com.android.internal.telephony.gsm.GsmCallTracker: void clearDisconnected()>();

        return;
    }

    public void conference()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmCallTracker $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        virtualinvoke $r1.<com.android.internal.telephony.gsm.GsmCallTracker: void conference()>();

        return;
    }

    public com.android.internal.telephony.Connection dial(java.lang.String) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String r1;
        com.android.internal.telephony.Connection $r2;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.UUSInfo)>(r1, null);

        return $r2;
    }

    public com.android.internal.telephony.Connection dial(java.lang.String, com.android.internal.telephony.UUSInfo) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String r1, r3, $r5, $r12, $r17;
        com.android.internal.telephony.UUSInfo r2;
        com.android.internal.telephony.gsm.GsmMmiCode r4;
        boolean $z0, $z1;
        java.util.concurrent.atomic.AtomicReference $r6;
        java.lang.Object $r7;
        com.android.internal.telephony.uicc.UiccCardApplication $r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r13;
        java.util.ArrayList $r14;
        android.os.RegistrantList $r15;
        android.os.AsyncResult $r16;
        com.android.internal.telephony.gsm.GsmCallTracker $r18, $r21;
        com.android.internal.telephony.Connection $r19, $r20;
        int $i1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.internal.telephony.UUSInfo;

        r3 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String stripSeparators(java.lang.String)>(r1);

        $z0 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: boolean handleInCallMmiCommands(java.lang.String)>(r3);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r5 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String extractNetworkPortionAlt(java.lang.String)>(r3);

        $r6 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mUiccApplication>;

        $r7 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r8 = (com.android.internal.telephony.uicc.UiccCardApplication) $r7;

        r4 = staticinvoke <com.android.internal.telephony.gsm.GsmMmiCode: com.android.internal.telephony.gsm.GsmMmiCode newFromDialString(java.lang.String,com.android.internal.telephony.gsm.GSMPhone,com.android.internal.telephony.uicc.UiccCardApplication)>($r5, r0, $r8);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dialing w/ mmi \'");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'...");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GSMPhone", $r12);

        if r4 != null goto label2;

        $r21 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        $r20 = virtualinvoke $r21.<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.UUSInfo)>(r3, r2);

        return $r20;

     label2:
        $z1 = virtualinvoke r4.<com.android.internal.telephony.gsm.GsmMmiCode: boolean isTemporaryModeCLIR()>();

        if $z1 == 0 goto label3;

        $r18 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        $r17 = r4.<com.android.internal.telephony.gsm.GsmMmiCode: java.lang.String mDialingNumber>;

        $i1 = virtualinvoke r4.<com.android.internal.telephony.gsm.GsmMmiCode: int getCLIRMode()>();

        $r19 = virtualinvoke $r18.<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.Connection dial(java.lang.String,int,com.android.internal.telephony.UUSInfo)>($r17, $i1, r2);

        return $r19;

     label3:
        $r14 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.ArrayList mPendingMMIs>;

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        $r15 = r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.RegistrantList mMmiRegistrants>;

        $r16 = new android.os.AsyncResult;

        specialinvoke $r16.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r4, null);

        virtualinvoke $r15.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r16);

        virtualinvoke r4.<com.android.internal.telephony.gsm.GsmMmiCode: void processCode()>();

        return null;
    }

    public void disableLocationUpdates()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmServiceStateTracker $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST>;

        virtualinvoke $r1.<com.android.internal.telephony.gsm.GsmServiceStateTracker: void disableLocationUpdates()>();

        return;
    }

    public void dispose()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r15;
        com.android.internal.telephony.CommandsInterface $r3, $r4, $r5, $r7, $r8;
        com.android.internal.telephony.gsm.GsmServiceStateTracker $r6, $r12;
        java.util.ArrayList $r9;
        com.android.internal.telephony.gsm.GsmCallTracker $r10;
        com.android.internal.telephony.dataconnection.DcTrackerBase $r11;
        com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager $r13;
        com.android.internal.telephony.PhoneSubInfo $r14;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 = <com.android.internal.telephony.PhoneProxy: java.lang.Object lockForRadioTechnologyChange>;

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.internal.telephony.PhoneBase: void dispose()>();

        $r3 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r3.<com.android.internal.telephony.CommandsInterface: void unregisterForAvailable(android.os.Handler)>(r0);

        specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void unregisterForSimRecordEvents()>();

        $r4 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r4.<com.android.internal.telephony.CommandsInterface: void unregisterForOffOrNotAvailable(android.os.Handler)>(r0);

        $r5 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r5.<com.android.internal.telephony.CommandsInterface: void unregisterForOn(android.os.Handler)>(r0);

        $r6 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST>;

        virtualinvoke $r6.<com.android.internal.telephony.gsm.GsmServiceStateTracker: void unregisterForNetworkAttached(android.os.Handler)>(r0);

        $r7 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r7.<com.android.internal.telephony.CommandsInterface: void unSetOnUSSD(android.os.Handler)>(r0);

        $r8 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r8.<com.android.internal.telephony.CommandsInterface: void unSetOnSuppServiceNotification(android.os.Handler)>(r0);

        $r9 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.ArrayList mPendingMMIs>;

        virtualinvoke $r9.<java.util.ArrayList: void clear()>();

        $r10 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        virtualinvoke $r10.<com.android.internal.telephony.gsm.GsmCallTracker: void dispose()>();

        $r11 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.dataconnection.DcTrackerBase mDcTracker>;

        virtualinvoke $r11.<com.android.internal.telephony.dataconnection.DcTrackerBase: void dispose()>();

        $r12 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST>;

        virtualinvoke $r12.<com.android.internal.telephony.gsm.GsmServiceStateTracker: void dispose()>();

        $r13 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager mSimPhoneBookIntManager>;

        virtualinvoke $r13.<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: void dispose()>();

        $r14 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.PhoneSubInfo mSubInfo>;

        virtualinvoke $r14.<com.android.internal.telephony.PhoneSubInfo: void dispose()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r15 := @caughtexception;

        r2 = $r15;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        java.lang.StringBuilder $r4, $r5, $r7, $r9, $r10, $r12, $r14, $r15, $r16, $r18, $r21, $r23, $r24, $r25, $r26, $r28, $r31, $r32;
        com.android.internal.telephony.gsm.GsmCallTracker $r6;
        java.lang.String $r8, $r13, $r19, $r22, $r29, $r30, $r33;
        com.android.internal.telephony.gsm.GsmServiceStateTracker $r11;
        java.util.ArrayList $r17;
        com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager $r20;
        com.android.internal.telephony.PhoneSubInfo $r27;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("GSMPhone extends:");

        specialinvoke r0.<com.android.internal.telephony.PhoneBase: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCT=");

        $r6 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSST=");

        $r11 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r13);

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mPendingMMIs=");

        $r17 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.ArrayList mPendingMMIs>;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r19);

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSimPhoneBookIntManager=");

        $r20 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager mSimPhoneBookIntManager>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r22);

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSubInfo=");

        $r27 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.PhoneSubInfo mSubInfo>;

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r27);

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r29);

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mVmNumber=");

        $r30 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.lang.String mVmNumber>;

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r33);

        return;
    }

    public void enableLocationUpdates()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmServiceStateTracker $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST>;

        virtualinvoke $r1.<com.android.internal.telephony.gsm.GsmServiceStateTracker: void enableLocationUpdates()>();

        return;
    }

    public void explicitCallTransfer()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmCallTracker $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        virtualinvoke $r1.<com.android.internal.telephony.gsm.GsmCallTracker: void explicitCallTransfer()>();

        return;
    }

    protected void finalize()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GSMPhone", "GSMPhone finalized");

        return;
    }

    public void getAvailableNetworks(android.os.Message)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        android.os.Message r1;
        com.android.internal.telephony.CommandsInterface $r2;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r2.<com.android.internal.telephony.CommandsInterface: void getAvailableNetworks(android.os.Message)>(r1);

        return;
    }

    public volatile com.android.internal.telephony.Call getBackgroundCall()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmCall $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCall getBackgroundCall()>();

        return $r1;
    }

    public com.android.internal.telephony.gsm.GsmCall getBackgroundCall()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmCallTracker $r1;
        com.android.internal.telephony.gsm.GsmCall $r2;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        $r2 = $r1.<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.gsm.GsmCall mBackgroundCall>;

        return $r2;
    }

    public void getCallForwardingOption(int, android.os.Message)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        int i0;
        android.os.Message r1, r2;
        boolean $z0;
        com.android.internal.telephony.CommandsInterface $r3;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        $z0 = specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: boolean isValidCommandInterfaceCFReason(int)>(i0);

        if $z0 == 0 goto label2;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GSMPhone", "requesting call forwarding query.");

        if i0 != 0 goto label3;

        r2 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.Message obtainMessage(int,java.lang.Object)>(13, r1);

     label1:
        $r3 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r3.<com.android.internal.telephony.CommandsInterface: void queryCallForwardStatus(int,int,java.lang.String,android.os.Message)>(i0, 0, null, r2);

     label2:
        return;

     label3:
        r2 = r1;

        goto label1;
    }

    public com.android.internal.telephony.CallTracker getCallTracker()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmCallTracker $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        return $r1;
    }

    public void getCallWaiting(android.os.Message)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        android.os.Message r1;
        com.android.internal.telephony.CommandsInterface $r2;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r2.<com.android.internal.telephony.CommandsInterface: void queryCallWaiting(int,android.os.Message)>(0, r1);

        return;
    }

    public void getCellBroadcastSmsConfig(android.os.Message)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        android.os.Message r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: android.os.Message;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("GSMPhone", "[GSMPhone] getCellBroadcastSmsConfig() is obsolete; use SmsManager");

        virtualinvoke r1.<android.os.Message: void sendToTarget()>();

        return;
    }

    public android.telephony.CellLocation getCellLocation()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmServiceStateTracker $r1;
        android.telephony.CellLocation $r2;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.gsm.GsmServiceStateTracker: android.telephony.CellLocation getCellLocation()>();

        return $r2;
    }

    public com.android.internal.telephony.Phone$DataActivityState getDataActivityState()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.Phone$DataActivityState r1, $r6, $r7, $r8, $r9;
        com.android.internal.telephony.gsm.GsmServiceStateTracker $r2;
        int $i0, $i1, $i2;
        com.android.internal.telephony.dataconnection.DcTrackerBase $r3;
        int[] $r4;
        com.android.internal.telephony.DctConstants$Activity $r5;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 = <com.android.internal.telephony.Phone$DataActivityState: com.android.internal.telephony.Phone$DataActivityState NONE>;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST>;

        $i0 = virtualinvoke $r2.<com.android.internal.telephony.gsm.GsmServiceStateTracker: int getCurrentDataConnectionState()>();

        if $i0 != 0 goto label2;

        $r4 = <com.android.internal.telephony.gsm.GSMPhone$2: int[] $SwitchMap$com$android$internal$telephony$DctConstants$Activity>;

        $r3 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.dataconnection.DcTrackerBase mDcTracker>;

        $r5 = virtualinvoke $r3.<com.android.internal.telephony.dataconnection.DcTrackerBase: com.android.internal.telephony.DctConstants$Activity getActivity()>();

        $i1 = virtualinvoke $r5.<com.android.internal.telephony.DctConstants$Activity: int ordinal()>();

        $i2 = $r4[$i1];

        tableswitch($i2)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            default: goto label1;
        };

     label1:
        r1 = <com.android.internal.telephony.Phone$DataActivityState: com.android.internal.telephony.Phone$DataActivityState NONE>;

     label2:
        return r1;

     label3:
        $r9 = <com.android.internal.telephony.Phone$DataActivityState: com.android.internal.telephony.Phone$DataActivityState DATAIN>;

        return $r9;

     label4:
        $r8 = <com.android.internal.telephony.Phone$DataActivityState: com.android.internal.telephony.Phone$DataActivityState DATAOUT>;

        return $r8;

     label5:
        $r7 = <com.android.internal.telephony.Phone$DataActivityState: com.android.internal.telephony.Phone$DataActivityState DATAINANDOUT>;

        return $r7;

     label6:
        $r6 = <com.android.internal.telephony.Phone$DataActivityState: com.android.internal.telephony.Phone$DataActivityState DORMANT>;

        return $r6;
    }

    public void getDataCallList(android.os.Message)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        android.os.Message r1;
        com.android.internal.telephony.CommandsInterface $r2;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r2.<com.android.internal.telephony.CommandsInterface: void getDataCallList(android.os.Message)>(r1);

        return;
    }

    public com.android.internal.telephony.PhoneConstants$DataState getDataConnectionState(java.lang.String)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String r1;
        com.android.internal.telephony.PhoneConstants$DataState r2, $r6, $r12, $r16, $r17, $r18, $r19, $r20;
        com.android.internal.telephony.gsm.GsmServiceStateTracker $r3, $r4, $r15;
        int $i0, $i1, $i2;
        com.android.internal.telephony.dataconnection.DcTrackerBase $r5, $r7, $r8;
        boolean $z0, $z1, $z2;
        int[] $r9;
        com.android.internal.telephony.DctConstants$State $r10;
        com.android.internal.telephony.gsm.GsmCallTracker $r11;
        com.android.internal.telephony.PhoneConstants$State $r13, $r14;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.lang.String;

        r2 = <com.android.internal.telephony.PhoneConstants$DataState: com.android.internal.telephony.PhoneConstants$DataState DISCONNECTED>;

        $r3 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST>;

        if $r3 != null goto label1;

        $r20 = <com.android.internal.telephony.PhoneConstants$DataState: com.android.internal.telephony.PhoneConstants$DataState DISCONNECTED>;

        return $r20;

     label1:
        $r4 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST>;

        $i0 = virtualinvoke $r4.<com.android.internal.telephony.gsm.GsmServiceStateTracker: int getCurrentDataConnectionState()>();

        if $i0 == 0 goto label2;

        $r18 = <com.android.internal.telephony.PhoneConstants$DataState: com.android.internal.telephony.PhoneConstants$DataState DISCONNECTED>;

        return $r18;

     label2:
        $r5 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.dataconnection.DcTrackerBase mDcTracker>;

        $z0 = virtualinvoke $r5.<com.android.internal.telephony.dataconnection.DcTrackerBase: boolean isApnTypeEnabled(java.lang.String)>(r1);

        if $z0 == 0 goto label3;

        $r7 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.dataconnection.DcTrackerBase mDcTracker>;

        $z1 = virtualinvoke $r7.<com.android.internal.telephony.dataconnection.DcTrackerBase: boolean isApnTypeActive(java.lang.String)>(r1);

        if $z1 != 0 goto label4;

     label3:
        $r6 = <com.android.internal.telephony.PhoneConstants$DataState: com.android.internal.telephony.PhoneConstants$DataState DISCONNECTED>;

        return $r6;

     label4:
        $r9 = <com.android.internal.telephony.gsm.GSMPhone$2: int[] $SwitchMap$com$android$internal$telephony$DctConstants$State>;

        $r8 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.dataconnection.DcTrackerBase mDcTracker>;

        $r10 = virtualinvoke $r8.<com.android.internal.telephony.dataconnection.DcTrackerBase: com.android.internal.telephony.DctConstants$State getState(java.lang.String)>(r1);

        $i1 = virtualinvoke $r10.<com.android.internal.telephony.DctConstants$State: int ordinal()>();

        $i2 = $r9[$i1];

        tableswitch($i2)
        {
            case 1: goto label6;
            case 2: goto label6;
            case 3: goto label6;
            case 4: goto label7;
            case 5: goto label7;
            case 6: goto label9;
            case 7: goto label9;
            default: goto label5;
        };

     label5:
        return r2;

     label6:
        $r19 = <com.android.internal.telephony.PhoneConstants$DataState: com.android.internal.telephony.PhoneConstants$DataState DISCONNECTED>;

        return $r19;

     label7:
        $r11 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        $r13 = $r11.<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        $r14 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State IDLE>;

        if $r13 == $r14 goto label8;

        $r15 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST>;

        $z2 = virtualinvoke $r15.<com.android.internal.telephony.gsm.GsmServiceStateTracker: boolean isConcurrentVoiceAndDataAllowed()>();

        if $z2 != 0 goto label8;

        $r17 = <com.android.internal.telephony.PhoneConstants$DataState: com.android.internal.telephony.PhoneConstants$DataState SUSPENDED>;

        return $r17;

     label8:
        $r16 = <com.android.internal.telephony.PhoneConstants$DataState: com.android.internal.telephony.PhoneConstants$DataState CONNECTED>;

        return $r16;

     label9:
        $r12 = <com.android.internal.telephony.PhoneConstants$DataState: com.android.internal.telephony.PhoneConstants$DataState CONNECTING>;

        return $r12;
    }

    public boolean getDataRoamingEnabled()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.dataconnection.DcTrackerBase $r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.dataconnection.DcTrackerBase mDcTracker>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.dataconnection.DcTrackerBase: boolean getDataOnRoamingEnabled()>();

        return $z0;
    }

    public java.lang.String getDeviceId()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.lang.String mImei>;

        return $r1;
    }

    public java.lang.String getDeviceSvn()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.lang.String mImeiSv>;

        return $r1;
    }

    public java.lang.String getEsn()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("GSMPhone", "[GSMPhone] getEsn() is a CDMA method");

        return "0";
    }

    public volatile com.android.internal.telephony.Call getForegroundCall()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmCall $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCall getForegroundCall()>();

        return $r1;
    }

    public com.android.internal.telephony.gsm.GsmCall getForegroundCall()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmCallTracker $r1;
        com.android.internal.telephony.gsm.GsmCall $r2;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        $r2 = $r1.<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.gsm.GsmCall mForegroundCall>;

        return $r2;
    }

    public java.lang.String getGroupIdLevel1()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.uicc.IccRecords r1;
        java.util.concurrent.atomic.AtomicReference $r2;
        java.lang.Object $r3;
        java.lang.String $r4;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r1 = (com.android.internal.telephony.uicc.IccRecords) $r3;

        if r1 == null goto label1;

        $r4 = virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: java.lang.String getGid1()>();

        return $r4;

     label1:
        return null;
    }

    public com.android.internal.telephony.IccPhoneBookInterfaceManager getIccPhoneBookInterfaceManager()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager mSimPhoneBookIntManager>;

        return $r1;
    }

    public java.lang.String getImei()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.lang.String mImei>;

        return $r1;
    }

    public java.lang.String getLine1AlphaTag()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.uicc.IccRecords r1;
        java.util.concurrent.atomic.AtomicReference $r2;
        java.lang.Object $r3;
        java.lang.String $r4;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r1 = (com.android.internal.telephony.uicc.IccRecords) $r3;

        if r1 == null goto label1;

        $r4 = virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: java.lang.String getMsisdnAlphaTag()>();

        return $r4;

     label1:
        return null;
    }

    public java.lang.String getLine1Number()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.uicc.IccRecords r1;
        java.util.concurrent.atomic.AtomicReference $r2;
        java.lang.Object $r3;
        java.lang.String $r4;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r1 = (com.android.internal.telephony.uicc.IccRecords) $r3;

        if r1 == null goto label1;

        $r4 = virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: java.lang.String getMsisdnNumber()>();

        return $r4;

     label1:
        return null;
    }

    public java.lang.String getMeid()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("GSMPhone", "[GSMPhone] getMeid() is a CDMA method");

        return "0";
    }

    public java.lang.String getMsisdn()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.uicc.IccRecords r1;
        java.util.concurrent.atomic.AtomicReference $r2;
        java.lang.Object $r3;
        java.lang.String $r4;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r1 = (com.android.internal.telephony.uicc.IccRecords) $r3;

        if r1 == null goto label1;

        $r4 = virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: java.lang.String getMsisdnNumber()>();

        return $r4;

     label1:
        return null;
    }

    public boolean getMute()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmCallTracker $r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.gsm.GsmCallTracker: boolean getMute()>();

        return $z0;
    }

    public void getNeighboringCids(android.os.Message)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        android.os.Message r1;
        com.android.internal.telephony.CommandsInterface $r2;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r2.<com.android.internal.telephony.CommandsInterface: void getNeighboringCids(android.os.Message)>(r1);

        return;
    }

    public void getOutgoingCallerIdDisplay(android.os.Message)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        android.os.Message r1;
        com.android.internal.telephony.CommandsInterface $r2;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r2.<com.android.internal.telephony.CommandsInterface: void getCLIR(android.os.Message)>(r1);

        return;
    }

    public java.util.List getPendingMmiCodes()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.util.ArrayList $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.ArrayList mPendingMMIs>;

        return $r1;
    }

    public com.android.internal.telephony.PhoneSubInfo getPhoneSubInfo()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.PhoneSubInfo $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.PhoneSubInfo mSubInfo>;

        return $r1;
    }

    public int getPhoneType()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        return 1;
    }

    public volatile com.android.internal.telephony.Call getRingingCall()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmCall $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCall getRingingCall()>();

        return $r1;
    }

    public com.android.internal.telephony.gsm.GsmCall getRingingCall()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmCallTracker $r1;
        com.android.internal.telephony.gsm.GsmCall $r2;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        $r2 = $r1.<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.gsm.GsmCall mRingingCall>;

        return $r2;
    }

    public android.telephony.ServiceState getServiceState()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmServiceStateTracker $r1, $r3;
        android.telephony.ServiceState $r2, $r4;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST>;

        if $r1 == null goto label1;

        $r3 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST>;

        $r4 = $r3.<com.android.internal.telephony.gsm.GsmServiceStateTracker: android.telephony.ServiceState mSS>;

        return $r4;

     label1:
        $r2 = new android.telephony.ServiceState;

        specialinvoke $r2.<android.telephony.ServiceState: void <init>()>();

        return $r2;
    }

    public com.android.internal.telephony.ServiceStateTracker getServiceStateTracker()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmServiceStateTracker $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST>;

        return $r1;
    }

    public com.android.internal.telephony.PhoneConstants$State getState()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmCallTracker $r1;
        com.android.internal.telephony.PhoneConstants$State $r2;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        $r2 = $r1.<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        return $r2;
    }

    public java.lang.String getSubscriberId()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.uicc.IccRecords r1;
        java.util.concurrent.atomic.AtomicReference $r2;
        java.lang.Object $r3;
        java.lang.String $r4;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r1 = (com.android.internal.telephony.uicc.IccRecords) $r3;

        if r1 == null goto label1;

        $r4 = virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: java.lang.String getIMSI()>();

        return $r4;

     label1:
        return null;
    }

    public java.lang.String getVoiceMailAlphaTag()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.uicc.IccRecords r1;
        java.lang.String r2;
        java.util.concurrent.atomic.AtomicReference $r3;
        java.lang.Object $r4;
        android.content.Context $r5;
        java.lang.CharSequence $r6;
        int $i0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r3 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r1 = (com.android.internal.telephony.uicc.IccRecords) $r4;

        if r1 == null goto label4;

        r2 = virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: java.lang.String getVoiceMailAlphaTag()>();

     label1:
        if r2 == null goto label2;

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label3;

     label2:
        $r5 = r0.<com.android.internal.telephony.gsm.GSMPhone: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.CharSequence getText(int)>(17039364);

        r2 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

     label3:
        return r2;

     label4:
        r2 = "";

        goto label1;
    }

    public java.lang.String getVoiceMailNumber()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.uicc.IccRecords r1;
        java.lang.String r2;
        java.util.concurrent.atomic.AtomicReference $r3;
        java.lang.Object $r4;
        boolean $z0;
        android.content.Context $r5;
        android.content.SharedPreferences $r6;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r3 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r1 = (com.android.internal.telephony.uicc.IccRecords) $r4;

        if r1 == null goto label3;

        r2 = virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: java.lang.String getVoiceMailNumber()>();

     label1:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: android.content.Context getContext()>();

        $r6 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r5);

        r2 = interfaceinvoke $r6.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("vm_number_key", null);

     label2:
        return r2;

     label3:
        r2 = "";

        goto label1;
    }

    public boolean handleInCallMmiCommands(java.lang.String)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        char $c0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: boolean isInCall()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z1 == 0 goto label2;

        return 0;

     label2:
        $c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        tableswitch($c0)
        {
            case 48: goto label4;
            case 49: goto label5;
            case 50: goto label6;
            case 51: goto label7;
            case 52: goto label8;
            case 53: goto label9;
            default: goto label3;
        };

     label3:
        return 0;

     label4:
        $z7 = specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: boolean handleCallDeflectionIncallSupplementaryService(java.lang.String)>(r1);

        return $z7;

     label5:
        $z6 = specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: boolean handleCallWaitingIncallSupplementaryService(java.lang.String)>(r1);

        return $z6;

     label6:
        $z5 = specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: boolean handleCallHoldIncallSupplementaryService(java.lang.String)>(r1);

        return $z5;

     label7:
        $z4 = specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: boolean handleMultipartyIncallSupplementaryService(java.lang.String)>(r1);

        return $z4;

     label8:
        $z3 = specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: boolean handleEctIncallSupplementaryService(java.lang.String)>(r1);

        return $z3;

     label9:
        $z2 = specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: boolean handleCcbsIncallSupplementaryService(java.lang.String)>(r1);

        return $z2;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        android.os.Message r1, r3, r5, r7, $r28, $r56, $r58, $r61, $r95, $r106, $r108;
        android.os.AsyncResult r2, r4, r6, r8, r11, r14, r15, r16, $r22, $r23, $r42, $r81;
        com.android.internal.telephony.uicc.IccRecords r9;
        com.android.internal.telephony.gsm.GSMPhone$Cfu r10;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9;
        boolean z0, $z1, $z2, $z3, $z5;
        java.lang.String[] r13, $r79;
        java.lang.String r17, r18, $r35, $r59, $r66, $r70, $r77, $r89, $r90, $r92, $r102;
        java.lang.Object $r19, $r21, $r24, $r25, $r29, $r31, $r32, $r34, $r38, $r40, $r41, $r43, $r44, $r46, $r48, $r50, $r51, $r53, $r63, $r65, $r67, $r69, $r71, $r73, $r78, $r80, $r82, $r85, $r87, $r91, $r99, $r100;
        java.lang.Integer $r20;
        java.lang.Throwable $r26, $r30, $r33, $r39, $r45, $r47, $r60, $r62, $r64, $r68, $r88;
        java.lang.Class $r27;
        java.util.concurrent.atomic.AtomicReference $r49;
        com.android.internal.telephony.CallForwardInfo[] $r54, $r55;
        com.android.internal.telephony.gsm.GsmMmiCode $r72, $r83;
        java.util.ArrayList $r74, $r75, $r76;
        java.lang.StringBuilder $r84, $r86, $r93, $r101, $r103, $r107, $r109, $r110, $r111;
        com.android.internal.telephony.CommandsInterface $r94, $r96, $r105;
        android.os.RegistrantList $r97;
        com.android.internal.telephony.gsm.SuppServiceNotification $r98;
        java.lang.NumberFormatException $r104;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: android.os.Message;

        $z1 = r0.<com.android.internal.telephony.gsm.GSMPhone: boolean mIsTheCurrentActivePhone>;

        if $z1 != 0 goto label02;

        $r107 = new java.lang.StringBuilder;

        specialinvoke $r107.<java.lang.StringBuilder: void <init>()>();

        $r109 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received message ");

        $r111 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r110 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $i9 = r1.<android.os.Message: int what>;

        $r101 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r103 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] while being destroyed. Ignoring.");

        $r102 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("GSMPhone", $r102);

     label01:
        return;

     label02:
        $i2 = r1.<android.os.Message: int what>;

        tableswitch($i2)
        {
            case 1: goto label04;
            case 2: goto label17;
            case 3: goto label06;
            case 4: goto label03;
            case 5: goto label01;
            case 6: goto label07;
            case 7: goto label10;
            case 8: goto label14;
            case 9: goto label08;
            case 10: goto label09;
            case 11: goto label03;
            case 12: goto label18;
            case 13: goto label23;
            case 14: goto label03;
            case 15: goto label03;
            case 16: goto label27;
            case 17: goto label27;
            case 18: goto label28;
            case 19: goto label05;
            case 20: goto label21;
            case 21: goto label03;
            case 22: goto label03;
            case 23: goto label03;
            case 24: goto label03;
            case 25: goto label03;
            case 26: goto label03;
            case 27: goto label03;
            case 28: goto label25;
            case 29: goto label26;
            default: goto label03;
        };

     label03:
        specialinvoke r0.<com.android.internal.telephony.PhoneBase: void handleMessage(android.os.Message)>(r1);

        return;

     label04:
        $r96 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        $r95 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.Message obtainMessage(int)>(6);

        interfaceinvoke $r96.<com.android.internal.telephony.CommandsInterface: void getBasebandVersion(android.os.Message)>($r95);

        $r94 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        $r106 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.Message obtainMessage(int)>(9);

        interfaceinvoke $r94.<com.android.internal.telephony.CommandsInterface: void getIMEI(android.os.Message)>($r106);

        $r105 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        $r108 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.Message obtainMessage(int)>(10);

        interfaceinvoke $r105.<com.android.internal.telephony.CommandsInterface: void getIMEISV(android.os.Message)>($r108);

        return;

     label05:
        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void syncClirSetting()>();

        return;

     label06:
        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: boolean updateCurrentCarrierInProvider()>();

        r18 = specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getVmSimImsi()>();

        r17 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getSubscriberId()>();

        if r18 == null goto label01;

        if r17 == null goto label01;

        $z5 = virtualinvoke r17.<java.lang.String: boolean equals(java.lang.Object)>(r18);

        if $z5 != 0 goto label01;

        specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void storeVoiceMailNumber(java.lang.String)>(null);

        specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void setVmSimImsi(java.lang.String)>(null);

        return;

     label07:
        $r87 = r1.<android.os.Message: java.lang.Object obj>;

        r15 = (android.os.AsyncResult) $r87;

        $r88 = r15.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r88 != null goto label01;

        $r86 = new java.lang.StringBuilder;

        specialinvoke $r86.<java.lang.StringBuilder: void <init>()>();

        $r84 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Baseband version: ");

        $r85 = r15.<android.os.AsyncResult: java.lang.Object result>;

        $r93 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r85);

        $r92 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GSMPhone", $r92);

        $r91 = r15.<android.os.AsyncResult: java.lang.Object result>;

        $r90 = (java.lang.String) $r91;

        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void setSystemProperty(java.lang.String,java.lang.String)>("gsm.version.baseband", $r90);

        return;

     label08:
        $r65 = r1.<android.os.Message: java.lang.Object obj>;

        r16 = (android.os.AsyncResult) $r65;

        $r64 = r16.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r64 != null goto label01;

        $r67 = r16.<android.os.AsyncResult: java.lang.Object result>;

        $r66 = (java.lang.String) $r67;

        r0.<com.android.internal.telephony.gsm.GSMPhone: java.lang.String mImei> = $r66;

        return;

     label09:
        $r69 = r1.<android.os.Message: java.lang.Object obj>;

        r14 = (android.os.AsyncResult) $r69;

        $r68 = r14.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r68 != null goto label01;

        $r71 = r14.<android.os.AsyncResult: java.lang.Object result>;

        $r70 = (java.lang.String) $r71;

        r0.<com.android.internal.telephony.gsm.GSMPhone: java.lang.String mImeiSv> = $r70;

        return;

     label10:
        $r80 = r1.<android.os.Message: java.lang.Object obj>;

        $r81 = (android.os.AsyncResult) $r80;

        $r78 = $r81.<android.os.AsyncResult: java.lang.Object result>;

        $r79 = (java.lang.String[]) $r78;

        r13 = (java.lang.String[]) $r79;

        $i6 = lengthof r13;

        if $i6 <= 1 goto label01;

     label11:
        $r77 = r13[0];

        $i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r77);

        $r89 = r13[1];

        specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void onIncomingUSSD(int,java.lang.String)>($i7, $r89);

     label12:
        return;

     label13:
        $r104 := @caughtexception;

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("GSMPhone", "error parsing USSD");

        return;

     label14:
        $r75 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.ArrayList mPendingMMIs>;

        $i5 = virtualinvoke $r75.<java.util.ArrayList: int size()>();

        i1 = -1 + $i5;

     label15:
        if i1 < 0 goto label01;

        $r76 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.ArrayList mPendingMMIs>;

        $r73 = virtualinvoke $r76.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r72 = (com.android.internal.telephony.gsm.GsmMmiCode) $r73;

        $z3 = virtualinvoke $r72.<com.android.internal.telephony.gsm.GsmMmiCode: boolean isPendingUSSD()>();

        if $z3 == 0 goto label16;

        $r74 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.ArrayList mPendingMMIs>;

        $r82 = virtualinvoke $r74.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r83 = (com.android.internal.telephony.gsm.GsmMmiCode) $r82;

        virtualinvoke $r83.<com.android.internal.telephony.gsm.GsmMmiCode: void onUssdFinishedError()>();

     label16:
        i1 = i1 + -1;

        goto label15;

     label17:
        $r100 = r1.<android.os.Message: java.lang.Object obj>;

        r11 = (android.os.AsyncResult) $r100;

        $r99 = r11.<android.os.AsyncResult: java.lang.Object result>;

        $r98 = (com.android.internal.telephony.gsm.SuppServiceNotification) $r99;

        $r97 = r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.RegistrantList mSsnRegistrants>;

        virtualinvoke $r97.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>(r11);

        return;

     label18:
        $r48 = r1.<android.os.Message: java.lang.Object obj>;

        r8 = (android.os.AsyncResult) $r48;

        $r49 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r50 = virtualinvoke $r49.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r9 = (com.android.internal.telephony.uicc.IccRecords) $r50;

        $r51 = r8.<android.os.AsyncResult: java.lang.Object userObj>;

        r10 = (com.android.internal.telephony.gsm.GSMPhone$Cfu) $r51;

        $r60 = r8.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r60 != null goto label20;

        if r9 == null goto label20;

        i0 = r1.<android.os.Message: int arg1>;

        z0 = 0;

        if i0 != 1 goto label19;

        z0 = 1;

     label19:
        $r59 = r10.<com.android.internal.telephony.gsm.GSMPhone$Cfu: java.lang.String mSetCfNumber>;

        virtualinvoke r9.<com.android.internal.telephony.uicc.IccRecords: void setVoiceCallForwardingFlag(int,boolean,java.lang.String)>(1, z0, $r59);

     label20:
        $r61 = r10.<com.android.internal.telephony.gsm.GSMPhone$Cfu: android.os.Message mOnComplete>;

        if $r61 == null goto label01;

        $r56 = r10.<com.android.internal.telephony.gsm.GSMPhone$Cfu: android.os.Message mOnComplete>;

        $r63 = r8.<android.os.AsyncResult: java.lang.Object result>;

        $r62 = r8.<android.os.AsyncResult: java.lang.Throwable exception>;

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>($r56, $r63, $r62);

        $r58 = r10.<com.android.internal.telephony.gsm.GSMPhone$Cfu: android.os.Message mOnComplete>;

        virtualinvoke $r58.<android.os.Message: void sendToTarget()>();

        return;

     label21:
        $r29 = r1.<android.os.Message: java.lang.Object obj>;

        r6 = (android.os.AsyncResult) $r29;

        $r27 = class "com/android/internal/telephony/uicc/IccVmNotSupportedException";

        $r26 = r6.<android.os.AsyncResult: java.lang.Throwable exception>;

        $z2 = virtualinvoke $r27.<java.lang.Class: boolean isInstance(java.lang.Object)>($r26);

        if $z2 == 0 goto label22;

        $r35 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.lang.String mVmNumber>;

        specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void storeVoiceMailNumber(java.lang.String)>($r35);

        r6.<android.os.AsyncResult: java.lang.Throwable exception> = null;

     label22:
        $r32 = r6.<android.os.AsyncResult: java.lang.Object userObj>;

        r7 = (android.os.Message) $r32;

        if r7 == null goto label01;

        $r31 = r6.<android.os.AsyncResult: java.lang.Object result>;

        $r30 = r6.<android.os.AsyncResult: java.lang.Throwable exception>;

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r7, $r31, $r30);

        virtualinvoke r7.<android.os.Message: void sendToTarget()>();

        return;

     label23:
        $r41 = r1.<android.os.Message: java.lang.Object obj>;

        r4 = (android.os.AsyncResult) $r41;

        $r47 = r4.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r47 != null goto label24;

        $r53 = r4.<android.os.AsyncResult: java.lang.Object result>;

        $r54 = (com.android.internal.telephony.CallForwardInfo[]) $r53;

        $r55 = (com.android.internal.telephony.CallForwardInfo[]) $r54;

        specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void handleCfuQueryResult(com.android.internal.telephony.CallForwardInfo[])>($r55);

     label24:
        $r46 = r4.<android.os.AsyncResult: java.lang.Object userObj>;

        r5 = (android.os.Message) $r46;

        if r5 == null goto label01;

        $r44 = r4.<android.os.AsyncResult: java.lang.Object result>;

        $r45 = r4.<android.os.AsyncResult: java.lang.Throwable exception>;

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r5, $r44, $r45);

        virtualinvoke r5.<android.os.Message: void sendToTarget()>();

        return;

     label25:
        $r25 = r1.<android.os.Message: java.lang.Object obj>;

        $r23 = (android.os.AsyncResult) $r25;

        $r24 = $r23.<android.os.AsyncResult: java.lang.Object result>;

        $r28 = (android.os.Message) $r24;

        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void setNetworkSelectionModeAutomatic(android.os.Message)>($r28);

        return;

     label26:
        $r21 = r1.<android.os.Message: java.lang.Object obj>;

        $r22 = (android.os.AsyncResult) $r21;

        $r19 = $r22.<android.os.AsyncResult: java.lang.Object result>;

        $r20 = (java.lang.Integer) $r19;

        $i3 = virtualinvoke $r20.<java.lang.Integer: int intValue()>();

        specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void processIccRecordEvents(int)>($i3);

        return;

     label27:
        $r43 = r1.<android.os.Message: java.lang.Object obj>;

        $r42 = (android.os.AsyncResult) $r43;

        specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void handleSetSelectNetwork(android.os.AsyncResult)>($r42);

        return;

     label28:
        $r34 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (android.os.AsyncResult) $r34;

        $r33 = r2.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r33 != null goto label29;

        $i4 = r1.<android.os.Message: int arg1>;

        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void saveClirSetting(int)>($i4);

     label29:
        $r40 = r2.<android.os.AsyncResult: java.lang.Object userObj>;

        r3 = (android.os.Message) $r40;

        if r3 == null goto label01;

        $r38 = r2.<android.os.AsyncResult: java.lang.Object result>;

        $r39 = r2.<android.os.AsyncResult: java.lang.Throwable exception>;

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r3, $r38, $r39);

        virtualinvoke r3.<android.os.Message: void sendToTarget()>();

        return;

        catch java.lang.NumberFormatException from label11 to label12 with label13;
    }

    public boolean handlePinMmi(java.lang.String)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String r1;
        com.android.internal.telephony.gsm.GsmMmiCode r2;
        java.util.concurrent.atomic.AtomicReference $r3;
        java.lang.Object $r4;
        com.android.internal.telephony.uicc.UiccCardApplication $r5;
        boolean $z0;
        java.util.ArrayList $r6;
        android.os.AsyncResult $r7;
        android.os.RegistrantList $r8;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mUiccApplication>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r5 = (com.android.internal.telephony.uicc.UiccCardApplication) $r4;

        r2 = staticinvoke <com.android.internal.telephony.gsm.GsmMmiCode: com.android.internal.telephony.gsm.GsmMmiCode newFromDialString(java.lang.String,com.android.internal.telephony.gsm.GSMPhone,com.android.internal.telephony.uicc.UiccCardApplication)>(r1, r0, $r5);

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<com.android.internal.telephony.gsm.GsmMmiCode: boolean isPinPukCommand()>();

        if $z0 == 0 goto label1;

        $r6 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.ArrayList mPendingMMIs>;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        $r8 = r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.RegistrantList mMmiRegistrants>;

        $r7 = new android.os.AsyncResult;

        specialinvoke $r7.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r2, null);

        virtualinvoke $r8.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r7);

        virtualinvoke r2.<com.android.internal.telephony.gsm.GsmMmiCode: void processCode()>();

        return 1;

     label1:
        return 0;
    }

    protected boolean isCfEnable(int)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        int i0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        i0 := @parameter0: int;

        if i0 == 1 goto label1;

        if i0 != 3 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public boolean isCspPlmnEnabled()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.uicc.IccRecords r1;
        java.util.concurrent.atomic.AtomicReference $r2;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r1 = (com.android.internal.telephony.uicc.IccRecords) $r3;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: boolean isCspPlmnEnabled()>();

        return $z0;

     label1:
        return 0;
    }

    boolean isInCall()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.Call$State r1, r2, r3;
        com.android.internal.telephony.gsm.GsmCall $r4, $r5, $r6;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r4 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCall getForegroundCall()>();

        r1 = virtualinvoke $r4.<com.android.internal.telephony.gsm.GsmCall: com.android.internal.telephony.Call$State getState()>();

        $r5 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCall getBackgroundCall()>();

        r2 = virtualinvoke $r5.<com.android.internal.telephony.gsm.GsmCall: com.android.internal.telephony.Call$State getState()>();

        $r6 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCall getRingingCall()>();

        r3 = virtualinvoke $r6.<com.android.internal.telephony.gsm.GsmCall: com.android.internal.telephony.Call$State getState()>();

        $z0 = virtualinvoke r1.<com.android.internal.telephony.Call$State: boolean isAlive()>();

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r2.<com.android.internal.telephony.Call$State: boolean isAlive()>();

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r3.<com.android.internal.telephony.Call$State: boolean isAlive()>();

        if $z2 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    protected void log(java.lang.String)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String r1, $r5;
        java.lang.StringBuilder $r2, $r3, $r4;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[GSMPhone] ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GSMPhone", $r5);

        return;
    }

    public void notifyCallForwardingIndicator()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.PhoneNotifier $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.PhoneNotifier mNotifier>;

        interfaceinvoke $r1.<com.android.internal.telephony.PhoneNotifier: void notifyCallForwardingChanged(com.android.internal.telephony.Phone)>(r0);

        return;
    }

    void notifyDisconnect(com.android.internal.telephony.Connection)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.Connection r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: com.android.internal.telephony.Connection;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.RegistrantList mDisconnectRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void notifyResult(java.lang.Object)>(r1);

        return;
    }

    void notifyLocationChanged()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.PhoneNotifier $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.PhoneNotifier mNotifier>;

        interfaceinvoke $r1.<com.android.internal.telephony.PhoneNotifier: void notifyCellLocation(com.android.internal.telephony.Phone)>(r0);

        return;
    }

    void notifyNewRingingConnection(com.android.internal.telephony.Connection)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.Connection r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: com.android.internal.telephony.Connection;

        specialinvoke r0.<com.android.internal.telephony.PhoneBase: void notifyNewRingingConnectionP(com.android.internal.telephony.Connection)>(r1);

        return;
    }

    void notifyPhoneStateChanged()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.PhoneNotifier $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.PhoneNotifier mNotifier>;

        interfaceinvoke $r1.<com.android.internal.telephony.PhoneNotifier: void notifyPhoneState(com.android.internal.telephony.Phone)>(r0);

        return;
    }

    void notifyPreciseCallStateChanged()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        specialinvoke r0.<com.android.internal.telephony.PhoneBase: void notifyPreciseCallStateChangedP()>();

        return;
    }

    void notifyServiceStateChanged(android.telephony.ServiceState)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        android.telephony.ServiceState r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: android.telephony.ServiceState;

        specialinvoke r0.<com.android.internal.telephony.PhoneBase: void notifyServiceStateChangedP(android.telephony.ServiceState)>(r1);

        return;
    }

    void notifySuppServiceFailed(com.android.internal.telephony.Phone$SuppService)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.Phone$SuppService r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: com.android.internal.telephony.Phone$SuppService;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.RegistrantList mSuppServiceFailedRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void notifyResult(java.lang.Object)>(r1);

        return;
    }

    void notifyUnknownConnection()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        android.os.RegistrantList $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.RegistrantList mUnknownConnectionRegistrants>;

        virtualinvoke $r1.<android.os.RegistrantList: void notifyResult(java.lang.Object)>(r0);

        return;
    }

    void onMMIDone(com.android.internal.telephony.gsm.GsmMmiCode)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmMmiCode r1;
        java.util.ArrayList $r2;
        boolean $z0, $z1;
        android.os.AsyncResult $r3;
        android.os.RegistrantList $r4;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: com.android.internal.telephony.gsm.GsmMmiCode;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.ArrayList mPendingMMIs>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r1.<com.android.internal.telephony.gsm.GsmMmiCode: boolean isUssdRequest()>();

        if $z1 == 0 goto label2;

     label1:
        $r4 = r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.RegistrantList mMmiCompleteRegistrants>;

        $r3 = new android.os.AsyncResult;

        specialinvoke $r3.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r1, null);

        virtualinvoke $r4.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r3);

     label2:
        return;
    }

    protected void onUpdateIccAvailability()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.uicc.UiccCardApplication r1, r2;
        com.android.internal.telephony.uicc.UiccController $r3, $r4;
        java.util.concurrent.atomic.AtomicReference $r5, $r7, $r8, $r10, $r14, $r15, $r18;
        java.lang.Object $r6, $r12, $r16;
        com.android.internal.telephony.uicc.IccRecords $r9, $r13;
        com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager $r11, $r17;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r3 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.uicc.UiccController mUiccController>;

        if $r3 != null goto label2;

     label1:
        return;

     label2:
        $r4 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.uicc.UiccController mUiccController>;

        r1 = virtualinvoke $r4.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccCardApplication getUiccCardApplication(int)>(1);

        $r5 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mUiccApplication>;

        $r6 = virtualinvoke $r5.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r2 = (com.android.internal.telephony.uicc.UiccCardApplication) $r6;

        if r2 == r1 goto label1;

        if r2 == null goto label4;

        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void log(java.lang.String)>("Removing stale icc objects.");

        $r14 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r16 = virtualinvoke $r14.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        if $r16 == null goto label3;

        specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void unregisterForSimRecordEvents()>();

        $r17 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager mSimPhoneBookIntManager>;

        virtualinvoke $r17.<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: void updateIccRecords(com.android.internal.telephony.uicc.IccRecords)>(null);

     label3:
        $r15 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        virtualinvoke $r15.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(null);

        $r18 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mUiccApplication>;

        virtualinvoke $r18.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(null);

     label4:
        if r1 == null goto label1;

        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void log(java.lang.String)>("New Uicc application found");

        $r7 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mUiccApplication>;

        virtualinvoke $r7.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(r1);

        $r8 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r9 = virtualinvoke r1.<com.android.internal.telephony.uicc.UiccCardApplication: com.android.internal.telephony.uicc.IccRecords getIccRecords()>();

        virtualinvoke $r8.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>($r9);

        specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void registerForSimRecordEvents()>();

        $r11 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager mSimPhoneBookIntManager>;

        $r10 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r12 = virtualinvoke $r10.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r13 = (com.android.internal.telephony.uicc.IccRecords) $r12;

        virtualinvoke $r11.<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: void updateIccRecords(com.android.internal.telephony.uicc.IccRecords)>($r13);

        return;
    }

    public void registerForSuppServiceNotification(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        android.os.Handler r1;
        int i0, $i1;
        java.lang.Object r2;
        android.os.RegistrantList $r3, $r4;
        com.android.internal.telephony.CommandsInterface $r5;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.RegistrantList mSsnRegistrants>;

        virtualinvoke $r3.<android.os.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        $r4 = r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.RegistrantList mSsnRegistrants>;

        $i1 = virtualinvoke $r4.<android.os.RegistrantList: int size()>();

        if $i1 != 1 goto label1;

        $r5 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r5.<com.android.internal.telephony.CommandsInterface: void setSuppServiceNotifications(boolean,android.os.Message)>(1, null);

     label1:
        return;
    }

    public void rejectCall() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmCallTracker $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        virtualinvoke $r1.<com.android.internal.telephony.gsm.GsmCallTracker: void rejectCall()>();

        return;
    }

    public void removeReferences()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GSMPhone", "removeReferences");

        r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.test.SimulatedRadioControl mSimulatedRadioControl> = null;

        r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager mSimPhoneBookIntManager> = null;

        r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.PhoneSubInfo mSubInfo> = null;

        r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT> = null;

        r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST> = null;

        specialinvoke r0.<com.android.internal.telephony.PhoneBase: void removeReferences()>();

        return;
    }

    public void saveClirSetting(int)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        int i0;
        android.content.SharedPreferences$Editor r1;
        android.content.Context $r2;
        android.content.SharedPreferences $r3;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        i0 := @parameter0: int;

        $r2 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: android.content.Context getContext()>();

        $r3 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r2);

        r1 = interfaceinvoke $r3.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        interfaceinvoke r1.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>("clir_key", i0);

        $z0 = interfaceinvoke r1.<android.content.SharedPreferences$Editor: boolean commit()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("GSMPhone", "failed to commit CLIR preference");

     label1:
        return;
    }

    public void selectNetworkManually(com.android.internal.telephony.OperatorInfo, android.os.Message)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.OperatorInfo r1;
        android.os.Message r2, r4;
        com.android.internal.telephony.gsm.GSMPhone$NetworkSelectMessage r3, $r5;
        java.lang.String $r6, $r7, $r9;
        com.android.internal.telephony.CommandsInterface $r8;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: com.android.internal.telephony.OperatorInfo;

        r2 := @parameter1: android.os.Message;

        $r5 = new com.android.internal.telephony.gsm.GSMPhone$NetworkSelectMessage;

        specialinvoke $r5.<com.android.internal.telephony.gsm.GSMPhone$NetworkSelectMessage: void <init>(com.android.internal.telephony.gsm.GSMPhone$1)>(null);

        r3 = $r5;

        r3.<com.android.internal.telephony.gsm.GSMPhone$NetworkSelectMessage: android.os.Message message> = r2;

        $r6 = virtualinvoke r1.<com.android.internal.telephony.OperatorInfo: java.lang.String getOperatorNumeric()>();

        r3.<com.android.internal.telephony.gsm.GSMPhone$NetworkSelectMessage: java.lang.String operatorNumeric> = $r6;

        $r7 = virtualinvoke r1.<com.android.internal.telephony.OperatorInfo: java.lang.String getOperatorAlphaLong()>();

        r3.<com.android.internal.telephony.gsm.GSMPhone$NetworkSelectMessage: java.lang.String operatorAlphaLong> = $r7;

        r4 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.Message obtainMessage(int,java.lang.Object)>(16, r3);

        $r8 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        $r9 = virtualinvoke r1.<com.android.internal.telephony.OperatorInfo: java.lang.String getOperatorNumeric()>();

        interfaceinvoke $r8.<com.android.internal.telephony.CommandsInterface: void setNetworkSelectionModeManual(java.lang.String,android.os.Message)>($r9, r4);

        return;
    }

    public void sendBurstDtmf(java.lang.String)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.lang.String;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("GSMPhone", "[GSMPhone] sendBurstDtmf() is a CDMA method");

        return;
    }

    public void sendDtmf(char)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        char c0;
        boolean $z0;
        com.android.internal.telephony.gsm.GsmCallTracker $r1;
        com.android.internal.telephony.PhoneConstants$State $r2, $r3;
        com.android.internal.telephony.CommandsInterface $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        c0 := @parameter0: char;

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean is12Key(char)>(c0);

        if $z0 != 0 goto label2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendDtmf called with invalid character \'");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("GSMPhone", $r9);

     label1:
        return;

     label2:
        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        $r3 = $r1.<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        $r2 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State OFFHOOK>;

        if $r3 != $r2 goto label1;

        $r4 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r4.<com.android.internal.telephony.CommandsInterface: void sendDtmf(char,android.os.Message)>(c0, null);

        return;
    }

    public void sendUssdResponse(java.lang.String)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String r1;
        com.android.internal.telephony.gsm.GsmMmiCode r2;
        java.util.concurrent.atomic.AtomicReference $r3;
        java.lang.Object $r4;
        com.android.internal.telephony.uicc.UiccCardApplication $r5;
        java.util.ArrayList $r6;
        android.os.AsyncResult $r7;
        android.os.RegistrantList $r8;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mUiccApplication>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r5 = (com.android.internal.telephony.uicc.UiccCardApplication) $r4;

        r2 = staticinvoke <com.android.internal.telephony.gsm.GsmMmiCode: com.android.internal.telephony.gsm.GsmMmiCode newFromUssdUserInput(java.lang.String,com.android.internal.telephony.gsm.GSMPhone,com.android.internal.telephony.uicc.UiccCardApplication)>(r1, r0, $r5);

        $r6 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.ArrayList mPendingMMIs>;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        $r8 = r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.RegistrantList mMmiRegistrants>;

        $r7 = new android.os.AsyncResult;

        specialinvoke $r7.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r2, null);

        virtualinvoke $r8.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r7);

        virtualinvoke r2.<com.android.internal.telephony.gsm.GsmMmiCode: void sendUssd(java.lang.String)>(r1);

        return;
    }

    public void setCallForwardingOption(int, int, java.lang.String, int, android.os.Message)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        int i0, i1, i2;
        java.lang.String r1;
        android.os.Message r2, r4;
        com.android.internal.telephony.gsm.GSMPhone$Cfu r3, $r6;
        byte b3;
        boolean $z0, $z1, $z2;
        com.android.internal.telephony.CommandsInterface $r5;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i2 := @parameter3: int;

        r2 := @parameter4: android.os.Message;

        $z0 = specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: boolean isValidCommandInterfaceCFAction(int)>(i0);

        if $z0 == 0 goto label3;

        $z1 = specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: boolean isValidCommandInterfaceCFReason(int)>(i1);

        if $z1 == 0 goto label3;

        if i1 != 0 goto label5;

        $r6 = new com.android.internal.telephony.gsm.GSMPhone$Cfu;

        specialinvoke $r6.<com.android.internal.telephony.gsm.GSMPhone$Cfu: void <init>(java.lang.String,android.os.Message)>(r1, r2);

        r3 = $r6;

        $z2 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: boolean isCfEnable(int)>(i0);

        if $z2 == 0 goto label4;

        b3 = 1;

     label1:
        r4 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(12, b3, 0, r3);

     label2:
        $r5 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r5.<com.android.internal.telephony.CommandsInterface: void setCallForward(int,int,int,java.lang.String,int,android.os.Message)>(i0, i1, 1, r1, i2, r4);

     label3:
        return;

     label4:
        b3 = 0;

        goto label1;

     label5:
        r4 = r2;

        goto label2;
    }

    public void setCallWaiting(boolean, android.os.Message)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        boolean z0;
        android.os.Message r1;
        com.android.internal.telephony.CommandsInterface $r2;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r2.<com.android.internal.telephony.CommandsInterface: void setCallWaiting(boolean,int,android.os.Message)>(z0, 1, r1);

        return;
    }

    public void setCellBroadcastSmsConfig(int[], android.os.Message)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        int[] r1;
        android.os.Message r2;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: int[];

        r2 := @parameter1: android.os.Message;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("GSMPhone", "[GSMPhone] setCellBroadcastSmsConfig() is obsolete; use SmsManager");

        virtualinvoke r2.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void setDataRoamingEnabled(boolean)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        boolean z0;
        com.android.internal.telephony.dataconnection.DcTrackerBase $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.dataconnection.DcTrackerBase mDcTracker>;

        virtualinvoke $r1.<com.android.internal.telephony.dataconnection.DcTrackerBase: void setDataOnRoamingEnabled(boolean)>(z0);

        return;
    }

    public void setLine1Number(java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String r1, r2;
        android.os.Message r3;
        com.android.internal.telephony.uicc.IccRecords r4;
        java.util.concurrent.atomic.AtomicReference $r5;
        java.lang.Object $r6;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Message;

        $r5 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r6 = virtualinvoke $r5.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r4 = (com.android.internal.telephony.uicc.IccRecords) $r6;

        if r4 == null goto label1;

        virtualinvoke r4.<com.android.internal.telephony.uicc.IccRecords: void setMsisdnNumber(java.lang.String,java.lang.String,android.os.Message)>(r1, r2, r3);

     label1:
        return;
    }

    public void setMute(boolean)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        boolean z0;
        com.android.internal.telephony.gsm.GsmCallTracker $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        virtualinvoke $r1.<com.android.internal.telephony.gsm.GsmCallTracker: void setMute(boolean)>(z0);

        return;
    }

    public void setNetworkSelectionModeAutomatic(android.os.Message)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        android.os.Message r1, r3;
        com.android.internal.telephony.gsm.GSMPhone$NetworkSelectMessage r2, $r4;
        com.android.internal.telephony.CommandsInterface $r5;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: android.os.Message;

        $r4 = new com.android.internal.telephony.gsm.GSMPhone$NetworkSelectMessage;

        specialinvoke $r4.<com.android.internal.telephony.gsm.GSMPhone$NetworkSelectMessage: void <init>(com.android.internal.telephony.gsm.GSMPhone$1)>(null);

        r2 = $r4;

        r2.<com.android.internal.telephony.gsm.GSMPhone$NetworkSelectMessage: android.os.Message message> = r1;

        r2.<com.android.internal.telephony.gsm.GSMPhone$NetworkSelectMessage: java.lang.String operatorNumeric> = "";

        r2.<com.android.internal.telephony.gsm.GSMPhone$NetworkSelectMessage: java.lang.String operatorAlphaLong> = "";

        r3 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.Message obtainMessage(int,java.lang.Object)>(17, r2);

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GSMPhone", "wrapping and sending message to connect automatically");

        $r5 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r5.<com.android.internal.telephony.CommandsInterface: void setNetworkSelectionModeAutomatic(android.os.Message)>(r3);

        return;
    }

    public void setOnPostDialCharacter(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant $r3;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.Registrant mPostDialHandler> = $r3;

        return;
    }

    public void setOutgoingCallerIdDisplay(int, android.os.Message)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        int i0;
        android.os.Message r1, $r3;
        com.android.internal.telephony.CommandsInterface $r2;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        $r3 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(18, i0, 0, r1);

        interfaceinvoke $r2.<com.android.internal.telephony.CommandsInterface: void setCLIR(int,android.os.Message)>(i0, $r3);

        return;
    }

    public void setRadioPower(boolean)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        boolean z0;
        com.android.internal.telephony.gsm.GsmServiceStateTracker $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST>;

        virtualinvoke $r1.<com.android.internal.telephony.gsm.GsmServiceStateTracker: void setRadioPower(boolean)>(z0);

        return;
    }

    public final void setSystemProperty(java.lang.String, java.lang.String)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String r1, r2;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.internal.telephony.PhoneBase: void setSystemProperty(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public void setVoiceMailNumber(java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String r1, r2, $r8;
        android.os.Message r3, r4;
        com.android.internal.telephony.uicc.IccRecords r5;
        java.util.concurrent.atomic.AtomicReference $r6;
        java.lang.Object $r7;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Message;

        r0.<com.android.internal.telephony.gsm.GSMPhone: java.lang.String mVmNumber> = r2;

        r4 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(20, 0, 0, r3);

        $r6 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r7 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r5 = (com.android.internal.telephony.uicc.IccRecords) $r7;

        if r5 == null goto label1;

        $r8 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.lang.String mVmNumber>;

        virtualinvoke r5.<com.android.internal.telephony.uicc.IccRecords: void setVoiceMailNumber(java.lang.String,java.lang.String,android.os.Message)>(r1, $r8, r4);

     label1:
        return;
    }

    public void startDtmf(char)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        char c0;
        boolean $z0;
        com.android.internal.telephony.CommandsInterface $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        c0 := @parameter0: char;

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean is12Key(char)>(c0);

        if $z0 != 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startDtmf called with invalid character \'");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("GSMPhone", $r6);

        return;

     label1:
        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r1.<com.android.internal.telephony.CommandsInterface: void startDtmf(char,android.os.Message)>(c0, null);

        return;
    }

    public void stopDtmf()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.CommandsInterface $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r1.<com.android.internal.telephony.CommandsInterface: void stopDtmf(android.os.Message)>(null);

        return;
    }

    public void switchHoldingAndActive() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmCallTracker $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        virtualinvoke $r1.<com.android.internal.telephony.gsm.GsmCallTracker: void switchWaitingOrHoldingAndActive()>();

        return;
    }

    protected void syncClirSetting()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        int i0;
        android.content.Context $r1;
        android.content.SharedPreferences $r2;
        com.android.internal.telephony.CommandsInterface $r3;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: android.content.Context getContext()>();

        $r2 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r1);

        i0 = interfaceinvoke $r2.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("clir_key", -1);

        if i0 < 0 goto label1;

        $r3 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r3.<com.android.internal.telephony.CommandsInterface: void setCLIR(int,android.os.Message)>(i0, null);

     label1:
        return;
    }

    public void unregisterForSuppServiceNotification(android.os.Handler)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2, $r3;
        int $i0;
        com.android.internal.telephony.CommandsInterface $r4;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.RegistrantList mSsnRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        $r3 = r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.RegistrantList mSsnRegistrants>;

        $i0 = virtualinvoke $r3.<android.os.RegistrantList: int size()>();

        if $i0 != 0 goto label1;

        $r4 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r4.<com.android.internal.telephony.CommandsInterface: void setSuppServiceNotifications(boolean,android.os.Message)>(0, null);

     label1:
        return;
    }

    public boolean updateCurrentCarrierInProvider()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.uicc.IccRecords r1;
        android.database.SQLException r2, $r13;
        android.net.Uri r3, $r7;
        android.content.ContentValues r4, r14;
        java.util.concurrent.atomic.AtomicReference $r5;
        java.lang.Object $r6;
        java.lang.String $r9;
        android.content.Context $r10;
        android.content.ContentResolver $r11;
        java.lang.Throwable r15;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r5 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r6 = virtualinvoke $r5.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r1 = (com.android.internal.telephony.uicc.IccRecords) $r6;

        if r1 == null goto label4;

     label1:
        $r7 = <android.provider.Telephony$Carriers: android.net.Uri CONTENT_URI>;

        r3 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r7, "current");

        r14 = new android.content.ContentValues;

        specialinvoke r14.<android.content.ContentValues: void <init>()>();

        r4 = r14;

        $r9 = virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: java.lang.String getOperatorNumeric()>();

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("numeric", $r9);

        $r10 = r0.<com.android.internal.telephony.gsm.GSMPhone: android.content.Context mContext>;

        $r11 = virtualinvoke $r10.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r11.<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>(r3, r4);

     label2:
        return 1;

     label3:
        $r13 := @caughtexception;

        r2 = $r13;

        r15 = (java.lang.Throwable) r2;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("GSMPhone", "Can\'t store current operator", r15);

     label4:
        return 0;

        catch android.database.SQLException from label1 to label2 with label3;
    }

    public void updateServiceLocation()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmServiceStateTracker $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST>;

        virtualinvoke $r1.<com.android.internal.telephony.gsm.GsmServiceStateTracker: void enableSingleLocationUpdate()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.gsm.GSMPhone: java.lang.String VM_SIM_IMSI> = "vm_sim_imsi_key";

        <com.android.internal.telephony.gsm.GSMPhone: java.lang.String VM_NUMBER> = "vm_number_key";

        <com.android.internal.telephony.gsm.GSMPhone: boolean VDBG> = 0;

        <com.android.internal.telephony.gsm.GSMPhone: java.lang.String LOG_TAG> = "GSMPhone";

        <com.android.internal.telephony.gsm.GSMPhone: boolean LOCAL_DEBUG> = 1;

        <com.android.internal.telephony.gsm.GSMPhone: boolean DBG_PORT> = 0;

        <com.android.internal.telephony.gsm.GSMPhone: java.lang.String CIPHERING_KEY> = "ciphering_key";

        return;
    }
}
