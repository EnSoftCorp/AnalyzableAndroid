public class com.android.internal.telephony.uicc.SIMRecords extends com.android.internal.telephony.uicc.IccRecords
{
    static final int CFF_LINE1_MASK;
    static final int CFF_LINE1_RESET;
    static final int CFF_UNCONDITIONAL_ACTIVE;
    static final int CFF_UNCONDITIONAL_DEACTIVE;
    private static final int CFIS_ADN_CAPABILITY_ID_OFFSET;
    private static final int CFIS_ADN_EXTENSION_ID_OFFSET;
    private static final int CFIS_BCD_NUMBER_LENGTH_OFFSET;
    private static final int CFIS_TON_NPI_OFFSET;
    private static final int CPHS_SST_MBN_ENABLED;
    private static final int CPHS_SST_MBN_MASK;
    private static final boolean CRASH_RIL;
    protected static final int EVENT_GET_AD_DONE;
    private static final int EVENT_GET_ALL_SMS_DONE;
    private static final int EVENT_GET_CFF_DONE;
    private static final int EVENT_GET_CFIS_DONE;
    private static final int EVENT_GET_CPHS_MAILBOX_DONE;
    private static final int EVENT_GET_CSP_CPHS_DONE;
    private static final int EVENT_GET_GID1_DONE;
    private static final int EVENT_GET_ICCID_DONE;
    private static final int EVENT_GET_IMSI_DONE;
    private static final int EVENT_GET_INFO_CPHS_DONE;
    private static final int EVENT_GET_MBDN_DONE;
    private static final int EVENT_GET_MBI_DONE;
    protected static final int EVENT_GET_MSISDN_DONE;
    private static final int EVENT_GET_MWIS_DONE;
    private static final int EVENT_GET_PNN_DONE;
    private static final int EVENT_GET_SMS_DONE;
    private static final int EVENT_GET_SPDI_DONE;
    private static final int EVENT_GET_SPN_DONE;
    protected static final int EVENT_GET_SST_DONE;
    private static final int EVENT_GET_VOICE_MAIL_INDICATOR_CPHS_DONE;
    private static final int EVENT_MARK_SMS_READ_DONE;
    private static final int EVENT_SET_CPHS_MAILBOX_DONE;
    private static final int EVENT_SET_MBDN_DONE;
    private static final int EVENT_SIM_REFRESH;
    private static final int EVENT_SMS_ON_SIM;
    private static final int EVENT_UPDATE_DONE;
    protected static final java.lang.String LOG_TAG;
    private static final java.lang.String[] MCCMNC_CODES_HAVING_3DIGITS_MNC;
    static final int TAG_FULL_NETWORK_NAME;
    static final int TAG_SHORT_NETWORK_NAME;
    static final int TAG_SPDI;
    static final int TAG_SPDI_PLMN_LIST;
    private boolean mCallForwardingEnabled;
    private byte[] mCphsInfo;
    boolean mCspPlmnEnabled;
    byte[] mEfCPHS_MWI;
    byte[] mEfCff;
    byte[] mEfCfis;
    byte[] mEfMWIS;
    java.lang.String mPnnHomeName;
    java.util.ArrayList mSpdiNetworks;
    int mSpnDisplayCondition;
    com.android.internal.telephony.uicc.SpnOverride mSpnOverride;
    private com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState mSpnState;
    com.android.internal.telephony.uicc.UsimServiceTable mUsimServiceTable;
    com.android.internal.telephony.uicc.VoiceMailConstants mVmConfig;

    static void <clinit>()
    {
        java.lang.String[] $r0;

        <com.android.internal.telephony.uicc.SIMRecords: int TAG_SPDI_PLMN_LIST> = 128;

        <com.android.internal.telephony.uicc.SIMRecords: int TAG_SPDI> = 163;

        <com.android.internal.telephony.uicc.SIMRecords: int TAG_SHORT_NETWORK_NAME> = 69;

        <com.android.internal.telephony.uicc.SIMRecords: int TAG_FULL_NETWORK_NAME> = 67;

        <com.android.internal.telephony.uicc.SIMRecords: java.lang.String LOG_TAG> = "SIMRecords";

        <com.android.internal.telephony.uicc.SIMRecords: int EVENT_UPDATE_DONE> = 14;

        <com.android.internal.telephony.uicc.SIMRecords: int EVENT_SMS_ON_SIM> = 21;

        <com.android.internal.telephony.uicc.SIMRecords: int EVENT_SIM_REFRESH> = 31;

        <com.android.internal.telephony.uicc.SIMRecords: int EVENT_SET_MBDN_DONE> = 20;

        <com.android.internal.telephony.uicc.SIMRecords: int EVENT_SET_CPHS_MAILBOX_DONE> = 25;

        <com.android.internal.telephony.uicc.SIMRecords: int EVENT_MARK_SMS_READ_DONE> = 19;

        <com.android.internal.telephony.uicc.SIMRecords: int EVENT_GET_VOICE_MAIL_INDICATOR_CPHS_DONE> = 8;

        <com.android.internal.telephony.uicc.SIMRecords: int EVENT_GET_SST_DONE> = 17;

        <com.android.internal.telephony.uicc.SIMRecords: int EVENT_GET_SPN_DONE> = 12;

        <com.android.internal.telephony.uicc.SIMRecords: int EVENT_GET_SPDI_DONE> = 13;

        <com.android.internal.telephony.uicc.SIMRecords: int EVENT_GET_SMS_DONE> = 22;

        <com.android.internal.telephony.uicc.SIMRecords: int EVENT_GET_PNN_DONE> = 15;

        <com.android.internal.telephony.uicc.SIMRecords: int EVENT_GET_MWIS_DONE> = 7;

        <com.android.internal.telephony.uicc.SIMRecords: int EVENT_GET_MSISDN_DONE> = 10;

        <com.android.internal.telephony.uicc.SIMRecords: int EVENT_GET_MBI_DONE> = 5;

        <com.android.internal.telephony.uicc.SIMRecords: int EVENT_GET_MBDN_DONE> = 6;

        <com.android.internal.telephony.uicc.SIMRecords: int EVENT_GET_INFO_CPHS_DONE> = 26;

        <com.android.internal.telephony.uicc.SIMRecords: int EVENT_GET_IMSI_DONE> = 3;

        <com.android.internal.telephony.uicc.SIMRecords: int EVENT_GET_ICCID_DONE> = 4;

        <com.android.internal.telephony.uicc.SIMRecords: int EVENT_GET_GID1_DONE> = 34;

        <com.android.internal.telephony.uicc.SIMRecords: int EVENT_GET_CSP_CPHS_DONE> = 33;

        <com.android.internal.telephony.uicc.SIMRecords: int EVENT_GET_CPHS_MAILBOX_DONE> = 11;

        <com.android.internal.telephony.uicc.SIMRecords: int EVENT_GET_CFIS_DONE> = 32;

        <com.android.internal.telephony.uicc.SIMRecords: int EVENT_GET_CFF_DONE> = 24;

        <com.android.internal.telephony.uicc.SIMRecords: int EVENT_GET_ALL_SMS_DONE> = 18;

        <com.android.internal.telephony.uicc.SIMRecords: int EVENT_GET_AD_DONE> = 9;

        <com.android.internal.telephony.uicc.SIMRecords: boolean CRASH_RIL> = 0;

        <com.android.internal.telephony.uicc.SIMRecords: int CPHS_SST_MBN_MASK> = 48;

        <com.android.internal.telephony.uicc.SIMRecords: int CPHS_SST_MBN_ENABLED> = 48;

        <com.android.internal.telephony.uicc.SIMRecords: int CFIS_TON_NPI_OFFSET> = 3;

        <com.android.internal.telephony.uicc.SIMRecords: int CFIS_BCD_NUMBER_LENGTH_OFFSET> = 2;

        <com.android.internal.telephony.uicc.SIMRecords: int CFIS_ADN_EXTENSION_ID_OFFSET> = 15;

        <com.android.internal.telephony.uicc.SIMRecords: int CFIS_ADN_CAPABILITY_ID_OFFSET> = 14;

        <com.android.internal.telephony.uicc.SIMRecords: int CFF_UNCONDITIONAL_DEACTIVE> = 5;

        <com.android.internal.telephony.uicc.SIMRecords: int CFF_UNCONDITIONAL_ACTIVE> = 10;

        <com.android.internal.telephony.uicc.SIMRecords: int CFF_LINE1_RESET> = 240;

        <com.android.internal.telephony.uicc.SIMRecords: int CFF_LINE1_MASK> = 15;

        $r0 = newarray (java.lang.String)[131];

        $r0[0] = "302370";

        $r0[1] = "302720";

        $r0[2] = "310260";

        $r0[3] = "405025";

        $r0[4] = "405026";

        $r0[5] = "405027";

        $r0[6] = "405028";

        $r0[7] = "405029";

        $r0[8] = "405030";

        $r0[9] = "405031";

        $r0[10] = "405032";

        $r0[11] = "405033";

        $r0[12] = "405034";

        $r0[13] = "405035";

        $r0[14] = "405036";

        $r0[15] = "405037";

        $r0[16] = "405038";

        $r0[17] = "405039";

        $r0[18] = "405040";

        $r0[19] = "405041";

        $r0[20] = "405042";

        $r0[21] = "405043";

        $r0[22] = "405044";

        $r0[23] = "405045";

        $r0[24] = "405046";

        $r0[25] = "405047";

        $r0[26] = "405750";

        $r0[27] = "405751";

        $r0[28] = "405752";

        $r0[29] = "405753";

        $r0[30] = "405754";

        $r0[31] = "405755";

        $r0[32] = "405756";

        $r0[33] = "405799";

        $r0[34] = "405800";

        $r0[35] = "405801";

        $r0[36] = "405802";

        $r0[37] = "405803";

        $r0[38] = "405804";

        $r0[39] = "405805";

        $r0[40] = "405806";

        $r0[41] = "405807";

        $r0[42] = "405808";

        $r0[43] = "405809";

        $r0[44] = "405810";

        $r0[45] = "405811";

        $r0[46] = "405812";

        $r0[47] = "405813";

        $r0[48] = "405814";

        $r0[49] = "405815";

        $r0[50] = "405816";

        $r0[51] = "405817";

        $r0[52] = "405818";

        $r0[53] = "405819";

        $r0[54] = "405820";

        $r0[55] = "405821";

        $r0[56] = "405822";

        $r0[57] = "405823";

        $r0[58] = "405824";

        $r0[59] = "405825";

        $r0[60] = "405826";

        $r0[61] = "405827";

        $r0[62] = "405828";

        $r0[63] = "405829";

        $r0[64] = "405830";

        $r0[65] = "405831";

        $r0[66] = "405832";

        $r0[67] = "405833";

        $r0[68] = "405834";

        $r0[69] = "405835";

        $r0[70] = "405836";

        $r0[71] = "405837";

        $r0[72] = "405838";

        $r0[73] = "405839";

        $r0[74] = "405840";

        $r0[75] = "405841";

        $r0[76] = "405842";

        $r0[77] = "405843";

        $r0[78] = "405844";

        $r0[79] = "405845";

        $r0[80] = "405846";

        $r0[81] = "405847";

        $r0[82] = "405848";

        $r0[83] = "405849";

        $r0[84] = "405850";

        $r0[85] = "405851";

        $r0[86] = "405852";

        $r0[87] = "405853";

        $r0[88] = "405875";

        $r0[89] = "405876";

        $r0[90] = "405877";

        $r0[91] = "405878";

        $r0[92] = "405879";

        $r0[93] = "405880";

        $r0[94] = "405881";

        $r0[95] = "405882";

        $r0[96] = "405883";

        $r0[97] = "405884";

        $r0[98] = "405885";

        $r0[99] = "405886";

        $r0[100] = "405908";

        $r0[101] = "405909";

        $r0[102] = "405910";

        $r0[103] = "405911";

        $r0[104] = "405912";

        $r0[105] = "405913";

        $r0[106] = "405914";

        $r0[107] = "405915";

        $r0[108] = "405916";

        $r0[109] = "405917";

        $r0[110] = "405918";

        $r0[111] = "405919";

        $r0[112] = "405920";

        $r0[113] = "405921";

        $r0[114] = "405922";

        $r0[115] = "405923";

        $r0[116] = "405924";

        $r0[117] = "405925";

        $r0[118] = "405926";

        $r0[119] = "405927";

        $r0[120] = "405928";

        $r0[121] = "405929";

        $r0[122] = "405930";

        $r0[123] = "405931";

        $r0[124] = "405932";

        $r0[125] = "502142";

        $r0[126] = "502143";

        $r0[127] = "502145";

        $r0[128] = "502146";

        $r0[129] = "502147";

        $r0[130] = "502148";

        <com.android.internal.telephony.uicc.SIMRecords: java.lang.String[] MCCMNC_CODES_HAVING_3DIGITS_MNC> = $r0;

        return;
    }

    public void <init>(com.android.internal.telephony.uicc.UiccCardApplication, android.content.Context, com.android.internal.telephony.CommandsInterface)
    {
        com.android.internal.telephony.uicc.SIMRecords r0;
        com.android.internal.telephony.uicc.UiccCardApplication r1, $r10;
        android.content.Context r2;
        com.android.internal.telephony.CommandsInterface r3, $r8, $r9;
        com.android.internal.telephony.uicc.AdnRecordCache $r4;
        com.android.internal.telephony.uicc.IccFileHandler $r5;
        com.android.internal.telephony.uicc.VoiceMailConstants $r6;
        com.android.internal.telephony.uicc.SpnOverride $r7;
        java.lang.StringBuilder $r11, $r12, $r13;
        java.lang.String $r14;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        r1 := @parameter0: com.android.internal.telephony.uicc.UiccCardApplication;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: com.android.internal.telephony.CommandsInterface;

        specialinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void <init>(com.android.internal.telephony.uicc.UiccCardApplication,android.content.Context,com.android.internal.telephony.CommandsInterface)>(r1, r2, r3);

        r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mCphsInfo> = null;

        r0.<com.android.internal.telephony.uicc.SIMRecords: boolean mCspPlmnEnabled> = 1;

        r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfMWIS> = null;

        r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfCPHS_MWI> = null;

        r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfCff> = null;

        r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfCfis> = null;

        r0.<com.android.internal.telephony.uicc.SIMRecords: java.util.ArrayList mSpdiNetworks> = null;

        r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mPnnHomeName> = null;

        $r4 = new com.android.internal.telephony.uicc.AdnRecordCache;

        $r5 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.IccFileHandler mFh>;

        specialinvoke $r4.<com.android.internal.telephony.uicc.AdnRecordCache: void <init>(com.android.internal.telephony.uicc.IccFileHandler)>($r5);

        r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.AdnRecordCache mAdnCache> = $r4;

        $r6 = new com.android.internal.telephony.uicc.VoiceMailConstants;

        specialinvoke $r6.<com.android.internal.telephony.uicc.VoiceMailConstants: void <init>()>();

        r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.VoiceMailConstants mVmConfig> = $r6;

        $r7 = new com.android.internal.telephony.uicc.SpnOverride;

        specialinvoke $r7.<com.android.internal.telephony.uicc.SpnOverride: void <init>()>();

        r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.SpnOverride mSpnOverride> = $r7;

        r0.<com.android.internal.telephony.uicc.SIMRecords: boolean mRecordsRequested> = 0;

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad> = 0;

        $r8 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r8.<com.android.internal.telephony.CommandsInterface: void setOnSmsOnSim(android.os.Handler,int,java.lang.Object)>(r0, 21, null);

        $r9 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r9.<com.android.internal.telephony.CommandsInterface: void registerForIccRefresh(android.os.Handler,int,java.lang.Object)>(r0, 31, null);

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void resetRecords()>();

        $r10 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.UiccCardApplication mParentApp>;

        virtualinvoke $r10.<com.android.internal.telephony.uicc.UiccCardApplication: void registerForReady(android.os.Handler,int,java.lang.Object)>(r0, 1, null);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SIMRecords X ctor this=");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>($r14);

        return;
    }

    private int dispatchGsmMessage(android.telephony.SmsMessage)
    {
        com.android.internal.telephony.uicc.SIMRecords r0;
        android.telephony.SmsMessage r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        r1 := @parameter0: android.telephony.SmsMessage;

        $r2 = r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.RegistrantList mNewSmsRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void notifyResult(java.lang.Object)>(r1);

        return 0;
    }

    private void getSpnFsm(boolean, android.os.AsyncResult)
    {
        com.android.internal.telephony.uicc.SIMRecords r0;
        boolean z0;
        android.os.AsyncResult r1;
        byte[] r2, r3, r4, $r11, $r23, $r37;
        com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState $r5, $r7, $r8, $r22, $r33, $r35, $r48, $r49, $r50, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61;
        int[] $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i10, $i11, $i12, $i13, $i14;
        java.lang.Throwable $r9, $r21, $r36;
        java.lang.Object $r10, $r24, $r38;
        java.lang.StringBuilder $r12, $r15, $r17, $r25, $r26, $r31, $r39, $r41, $r42, $r44, $r47;
        java.lang.String $r13, $r14, $r16, $r19, $r27, $r28, $r29, $r30, $r40, $r43, $r45, $r46;
        com.android.internal.telephony.uicc.IccFileHandler $r18, $r34, $r51;
        android.os.Message $r20, $r32, $r52;
        short $s8;
        byte $b9;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.os.AsyncResult;

        if z0 == 0 goto label03;

        $r57 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState mSpnState>;

        $r49 = <com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState: com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState READ_SPN_3GPP>;

        if $r57 == $r49 goto label01;

        $r60 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState mSpnState>;

        $r59 = <com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState: com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState READ_SPN_CPHS>;

        if $r60 == $r59 goto label01;

        $r54 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState mSpnState>;

        $r53 = <com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState: com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState READ_SPN_SHORT_CPHS>;

        if $r54 == $r53 goto label01;

        $r56 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState mSpnState>;

        $r55 = <com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState: com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState INIT>;

        if $r56 != $r55 goto label02;

     label01:
        $r58 = <com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState: com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState INIT>;

        r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState mSpnState> = $r58;

        return;

     label02:
        $r61 = <com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState: com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState INIT>;

        r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState mSpnState> = $r61;

     label03:
        $r6 = <com.android.internal.telephony.uicc.SIMRecords$1: int[] $SwitchMap$com$android$internal$telephony$uicc$SIMRecords$GetSpnFsmState>;

        $r5 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState mSpnState>;

        $i0 = virtualinvoke $r5.<com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState: int ordinal()>();

        $i1 = $r6[$i0];

        tableswitch($i1)
        {
            case 1: goto label05;
            case 2: goto label06;
            case 3: goto label08;
            case 4: goto label10;
            default: goto label04;
        };

     label04:
        $r7 = <com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState: com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState IDLE>;

        r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState mSpnState> = $r7;

        return;

     label05:
        r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mSpn> = null;

        $r51 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.IccFileHandler mFh>;

        $r52 = virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.Message obtainMessage(int)>(12);

        virtualinvoke $r51.<com.android.internal.telephony.uicc.IccFileHandler: void loadEFTransparent(int,android.os.Message)>(28486, $r52);

        $i13 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad>;

        $i14 = 1 + $i13;

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad> = $i14;

        $r48 = <com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState: com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState READ_SPN_3GPP>;

        r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState mSpnState> = $r48;

        return;

     label06:
        if r1 == null goto label07;

        $r36 = r1.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r36 != null goto label07;

        $r38 = r1.<android.os.AsyncResult: java.lang.Object result>;

        $r37 = (byte[]) $r38;

        r4 = (byte[]) $r37;

        $b9 = r4[0];

        $s8 = 255 & $b9;

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mSpnDisplayCondition> = $s8;

        $i11 = lengthof r4;

        $i10 = -1 + $i11;

        $r40 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: java.lang.String adnStringFieldToString(byte[],int,int)>(r4, 1, $i10);

        r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mSpn> = $r40;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Load EF_SPN: ");

        $r43 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mSpn>;

        $r42 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" spnDisplayCondition: ");

        $i12 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mSpnDisplayCondition>;

        $r47 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r46 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>($r46);

        $r45 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mSpn>;

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("gsm.sim.operator.alpha", $r45);

        $r50 = <com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState: com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState IDLE>;

        r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState mSpnState> = $r50;

        return;

     label07:
        $r34 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.IccFileHandler mFh>;

        $r32 = virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.Message obtainMessage(int)>(12);

        virtualinvoke $r34.<com.android.internal.telephony.uicc.IccFileHandler: void loadEFTransparent(int,android.os.Message)>(28436, $r32);

        $i6 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad>;

        $i7 = 1 + $i6;

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad> = $i7;

        $r35 = <com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState: com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState READ_SPN_CPHS>;

        r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState mSpnState> = $r35;

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mSpnDisplayCondition> = -1;

        return;

     label08:
        if r1 == null goto label09;

        $r21 = r1.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r21 != null goto label09;

        $r24 = r1.<android.os.AsyncResult: java.lang.Object result>;

        $r23 = (byte[]) $r24;

        r3 = (byte[]) $r23;

        $i5 = lengthof r3;

        $r27 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: java.lang.String adnStringFieldToString(byte[],int,int)>(r3, 0, $i5);

        r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mSpn> = $r27;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Load EF_SPN_CPHS: ");

        $r30 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mSpn>;

        $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r28 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>($r28);

        $r29 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mSpn>;

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("gsm.sim.operator.alpha", $r29);

        $r33 = <com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState: com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState IDLE>;

        r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState mSpnState> = $r33;

        return;

     label09:
        $r18 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.IccFileHandler mFh>;

        $r20 = virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.Message obtainMessage(int)>(12);

        virtualinvoke $r18.<com.android.internal.telephony.uicc.IccFileHandler: void loadEFTransparent(int,android.os.Message)>(28440, $r20);

        $i4 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad>;

        $i3 = 1 + $i4;

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad> = $i3;

        $r22 = <com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState: com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState READ_SPN_SHORT_CPHS>;

        r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState mSpnState> = $r22;

        return;

     label10:
        if r1 == null goto label12;

        $r9 = r1.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r9 != null goto label12;

        $r10 = r1.<android.os.AsyncResult: java.lang.Object result>;

        $r11 = (byte[]) $r10;

        r2 = (byte[]) $r11;

        $i2 = lengthof r2;

        $r13 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: java.lang.String adnStringFieldToString(byte[],int,int)>(r2, 0, $i2);

        r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mSpn> = $r13;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Load EF_SPN_SHORT_CPHS: ");

        $r14 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mSpn>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>($r16);

        $r19 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mSpn>;

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("gsm.sim.operator.alpha", $r19);

     label11:
        $r8 = <com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState: com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState IDLE>;

        r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState mSpnState> = $r8;

        return;

     label12:
        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>("No SPN loaded in either CHPS or 3GPP");

        goto label11;
    }

    private void handleEfCspData(byte[])
    {
        com.android.internal.telephony.uicc.SIMRecords r0;
        byte[] r1;
        int i0, i1, $i2, $i3, $i5, $i6, $i8, $i9;
        byte $b4, $b7, $b11;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;
        short $s10;
        android.os.RegistrantList $r6;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        r1 := @parameter0: byte[];

        $i2 = lengthof r1;

        i0 = $i2 / 2;

        r0.<com.android.internal.telephony.uicc.SIMRecords: boolean mCspPlmnEnabled> = 1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        $i3 = i1 * 2;

        $b4 = r1[$i3];

        if $b4 != -64 goto label3;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[CSP] found ValueAddedServicesGroup, value ");

        $i5 = i1 * 2;

        $i6 = 1 + $i5;

        $b7 = r1[$i6];

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b7);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>($r5);

        $i8 = i1 * 2;

        $i9 = 1 + $i8;

        $b11 = r1[$i9];

        $s10 = 128 & $b11;

        if $s10 != 128 goto label2;

        r0.<com.android.internal.telephony.uicc.SIMRecords: boolean mCspPlmnEnabled> = 1;

        return;

     label2:
        r0.<com.android.internal.telephony.uicc.SIMRecords: boolean mCspPlmnEnabled> = 0;

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>("[CSP] Set Automatic Network Selection");

        $r6 = r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.RegistrantList mNetworkSelectionModeAutomaticRegistrants>;

        virtualinvoke $r6.<android.os.RegistrantList: void notifyRegistrants()>();

        return;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>("[CSP] Value Added Service Group (0xC0), not found!");

        return;
    }

    private void handleFileUpdate(int)
    {
        com.android.internal.telephony.uicc.SIMRecords r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        com.android.internal.telephony.uicc.AdnRecordLoader $r1, $r4;
        com.android.internal.telephony.uicc.IccFileHandler $r2, $r5, $r7;
        android.os.Message $r3, $r6, $r9;
        com.android.internal.telephony.uicc.AdnRecordCache $r8;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 28437: goto label4;
            case 28439: goto label3;
            case 28615: goto label2;
            default: goto label1;
        };

     label1:
        $r8 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.AdnRecordCache mAdnCache>;

        virtualinvoke $r8.<com.android.internal.telephony.uicc.AdnRecordCache: void reset()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void fetchSimRecords()>();

        return;

     label2:
        $i1 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad>;

        $i2 = 1 + $i1;

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad> = $i2;

        $r1 = new com.android.internal.telephony.uicc.AdnRecordLoader;

        $r2 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.IccFileHandler mFh>;

        specialinvoke $r1.<com.android.internal.telephony.uicc.AdnRecordLoader: void <init>(com.android.internal.telephony.uicc.IccFileHandler)>($r2);

        $i3 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMailboxIndex>;

        $r3 = virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.Message obtainMessage(int)>(6);

        virtualinvoke $r1.<com.android.internal.telephony.uicc.AdnRecordLoader: void loadFromEF(int,int,int,android.os.Message)>(28615, 28616, $i3, $r3);

        return;

     label3:
        $i4 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad>;

        $i5 = 1 + $i4;

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad> = $i5;

        $r4 = new com.android.internal.telephony.uicc.AdnRecordLoader;

        $r5 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.IccFileHandler mFh>;

        specialinvoke $r4.<com.android.internal.telephony.uicc.AdnRecordLoader: void <init>(com.android.internal.telephony.uicc.IccFileHandler)>($r5);

        $r6 = virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.Message obtainMessage(int)>(11);

        virtualinvoke $r4.<com.android.internal.telephony.uicc.AdnRecordLoader: void loadFromEF(int,int,int,android.os.Message)>(28439, 28490, 1, $r6);

        return;

     label4:
        $i7 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad>;

        $i6 = 1 + $i7;

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad> = $i6;

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>("[CSP] SIM Refresh for EF_CSP_CPHS");

        $r7 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.IccFileHandler mFh>;

        $r9 = virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.Message obtainMessage(int)>(33);

        virtualinvoke $r7.<com.android.internal.telephony.uicc.IccFileHandler: void loadEFTransparent(int,android.os.Message)>(28437, $r9);

        return;
    }

    private void handleSimRefresh(com.android.internal.telephony.uicc.IccRefreshResponse)
    {
        com.android.internal.telephony.uicc.SIMRecords r0;
        com.android.internal.telephony.uicc.IccRefreshResponse r1;
        java.lang.String $r2, $r6, $r7;
        int $i0, $i1;
        com.android.internal.telephony.CommandsInterface $r3;
        com.android.internal.telephony.uicc.AdnRecordCache $r4;
        com.android.internal.telephony.uicc.UiccCardApplication $r5;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        r1 := @parameter0: com.android.internal.telephony.uicc.IccRefreshResponse;

        if r1 != null goto label2;

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>("handleSimRefresh received without input");

     label1:
        return;

     label2:
        $r2 = r1.<com.android.internal.telephony.uicc.IccRefreshResponse: java.lang.String aid>;

        if $r2 == null goto label3;

        $r6 = r1.<com.android.internal.telephony.uicc.IccRefreshResponse: java.lang.String aid>;

        $r5 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.UiccCardApplication mParentApp>;

        $r7 = virtualinvoke $r5.<com.android.internal.telephony.uicc.UiccCardApplication: java.lang.String getAid()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label1;

     label3:
        $i0 = r1.<com.android.internal.telephony.uicc.IccRefreshResponse: int refreshResult>;

        tableswitch($i0)
        {
            case 0: goto label5;
            case 1: goto label6;
            case 2: goto label7;
            default: goto label4;
        };

     label4:
        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>("handleSimRefresh with unknown operation");

        return;

     label5:
        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>("handleSimRefresh with SIM_FILE_UPDATED");

        $i1 = r1.<com.android.internal.telephony.uicc.IccRefreshResponse: int efId>;

        specialinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void handleFileUpdate(int)>($i1);

        return;

     label6:
        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>("handleSimRefresh with SIM_REFRESH_INIT");

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void onIccRefreshInit()>();

        return;

     label7:
        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>("handleSimRefresh with SIM_REFRESH_RESET");

        $r3 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r3.<com.android.internal.telephony.CommandsInterface: void setRadioPower(boolean,android.os.Message)>(0, null);

        $r4 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.AdnRecordCache mAdnCache>;

        virtualinvoke $r4.<com.android.internal.telephony.uicc.AdnRecordCache: void reset()>();

        return;
    }

    private void handleSms(byte[])
    {
        com.android.internal.telephony.uicc.SIMRecords r0;
        byte[] r1, r2;
        int i0, $i3, $i4;
        byte $b1, $b2, $b6;
        android.telephony.SmsMessage $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        r1 := @parameter0: byte[];

        $b1 = r1[0];

        if $b1 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("status : ");

        $b6 = r1[0];

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b6);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ENF", $r7);

     label1:
        $b2 = r1[0];

        if $b2 != 3 goto label2;

        i0 = lengthof r1;

        $i3 = i0 - 1;

        r2 = newarray (byte)[$i3];

        $i4 = i0 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 1, r2, 0, $i4);

        $r3 = staticinvoke <android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[],java.lang.String)>(r2, "3gpp");

        specialinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: int dispatchGsmMessage(android.telephony.SmsMessage)>($r3);

     label2:
        return;
    }

    private void handleSmses(java.util.ArrayList)
    {
        com.android.internal.telephony.uicc.SIMRecords r0;
        java.util.ArrayList r1;
        int i0, i1, i2, $i5, $i6;
        byte[] r2, r3;
        java.lang.Object $r4;
        byte $b3, $b4, $b8;
        android.telephony.SmsMessage $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10;
        java.lang.String $r11;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        r1 := @parameter0: java.util.ArrayList;

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        $r4 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (byte[]) $r4;

        $b3 = r2[0];

        if $b3 == 0 goto label2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("status ");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $b8 = r2[0];

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b8);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("ENF", $r11);

     label2:
        $b4 = r2[0];

        if $b4 != 3 goto label3;

        i2 = lengthof r2;

        $i5 = i2 - 1;

        r3 = newarray (byte)[$i5];

        $i6 = i2 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 1, r3, 0, $i6);

        $r5 = staticinvoke <android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[],java.lang.String)>(r3, "3gpp");

        specialinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: int dispatchGsmMessage(android.telephony.SmsMessage)>($r5);

        r2[0] = 1;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return;
    }

    private boolean isCphsMailboxEnabled()
    {
        com.android.internal.telephony.uicc.SIMRecords r0;
        boolean z0;
        byte[] $r1, $r2;
        byte $b0, $b1;
        int i2;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        z0 = 1;

        $r1 = r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mCphsInfo>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mCphsInfo>;

        i2 = (int) 1;

        $b0 = $r2[i2];

        $b1 = 48 & $b0;

        if $b1 != 48 goto label3;

     label2:
        return z0;

     label3:
        z0 = 0;

        goto label2;
    }

    private boolean isOnMatchingPlmn(java.lang.String)
    {
        com.android.internal.telephony.uicc.SIMRecords r0;
        java.lang.String r1, $r3, $r7;
        java.util.Iterator r2;
        boolean $z0, $z1, $z2;
        java.util.ArrayList $r4, $r5;
        java.lang.Object $r6;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label2;

     label1:
        return 0;

     label2:
        $r3 = virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String getOperatorNumeric()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        $r4 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.util.ArrayList mSpdiNetworks>;

        if $r4 == null goto label1;

        $r5 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.util.ArrayList mSpdiNetworks>;

        r2 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label1;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.lang.String) $r6;

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z2 == 0 goto label4;

        return 1;
    }

    private void parseEfSpdi(byte[])
    {
        com.android.internal.telephony.uicc.SIMRecords r0;
        byte[] r1, r3, $r13, $r14;
        com.android.internal.telephony.gsm.SimTlv r2, $r5, $r12;
        boolean z0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.String r4, $r11;
        java.util.ArrayList $r6, $r10;
        java.lang.StringBuilder $r7, $r8, $r9;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        r1 := @parameter0: byte[];

        $r5 = new com.android.internal.telephony.gsm.SimTlv;

        $i1 = lengthof r1;

        specialinvoke $r5.<com.android.internal.telephony.gsm.SimTlv: void <init>(byte[],int,int)>(r1, 0, $i1);

        r2 = $r5;

     label1:
        z0 = virtualinvoke r2.<com.android.internal.telephony.gsm.SimTlv: boolean isValidObject()>();

        r3 = null;

        if z0 == 0 goto label3;

        $i7 = virtualinvoke r2.<com.android.internal.telephony.gsm.SimTlv: int getTag()>();

        if $i7 != 163 goto label2;

        $r12 = new com.android.internal.telephony.gsm.SimTlv;

        $r13 = virtualinvoke r2.<com.android.internal.telephony.gsm.SimTlv: byte[] getData()>();

        $r14 = virtualinvoke r2.<com.android.internal.telephony.gsm.SimTlv: byte[] getData()>();

        $i9 = lengthof $r14;

        specialinvoke $r12.<com.android.internal.telephony.gsm.SimTlv: void <init>(byte[],int,int)>($r13, 0, $i9);

        r2 = $r12;

     label2:
        $i8 = virtualinvoke r2.<com.android.internal.telephony.gsm.SimTlv: int getTag()>();

        if $i8 != 128 goto label5;

        r3 = virtualinvoke r2.<com.android.internal.telephony.gsm.SimTlv: byte[] getData()>();

     label3:
        if r3 != null goto label6;

     label4:
        return;

     label5:
        virtualinvoke r2.<com.android.internal.telephony.gsm.SimTlv: boolean nextObject()>();

        goto label1;

     label6:
        $r6 = new java.util.ArrayList;

        $i2 = lengthof r3;

        $i3 = $i2 / 3;

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i3);

        r0.<com.android.internal.telephony.uicc.SIMRecords: java.util.ArrayList mSpdiNetworks> = $r6;

        i0 = 0;

     label7:
        $i5 = i0 + 2;

        $i4 = lengthof r3;

        if $i5 >= $i4 goto label4;

        r4 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: java.lang.String bcdToString(byte[],int,int)>(r3, i0, 3);

        $i6 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i6 < 5 goto label8;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EF_SPDI network: ");

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>($r11);

        $r10 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.util.ArrayList mSpdiNetworks>;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

     label8:
        i0 = i0 + 3;

        goto label7;
    }

    private void setSpnFromConfig(java.lang.String)
    {
        com.android.internal.telephony.uicc.SIMRecords r0;
        java.lang.String r1, $r4;
        com.android.internal.telephony.uicc.SpnOverride $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.SpnOverride mSpnOverride>;

        $z0 = virtualinvoke $r2.<com.android.internal.telephony.uicc.SpnOverride: boolean containsCarrier(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.SpnOverride mSpnOverride>;

        $r4 = virtualinvoke $r3.<com.android.internal.telephony.uicc.SpnOverride: java.lang.String getSpn(java.lang.String)>(r1);

        r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mSpn> = $r4;

     label1:
        return;
    }

    private void setVoiceMailByCountry(java.lang.String)
    {
        com.android.internal.telephony.uicc.SIMRecords r0;
        java.lang.String r1, $r4, $r6;
        com.android.internal.telephony.uicc.VoiceMailConstants $r2, $r3, $r5;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.VoiceMailConstants mVmConfig>;

        $z0 = virtualinvoke $r2.<com.android.internal.telephony.uicc.VoiceMailConstants: boolean containsCarrier(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        r0.<com.android.internal.telephony.uicc.SIMRecords: boolean mIsVoiceMailFixed> = 1;

        $r3 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.VoiceMailConstants mVmConfig>;

        $r4 = virtualinvoke $r3.<com.android.internal.telephony.uicc.VoiceMailConstants: java.lang.String getVoiceMailNumber(java.lang.String)>(r1);

        r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mVoiceMailNum> = $r4;

        $r5 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.VoiceMailConstants mVmConfig>;

        $r6 = virtualinvoke $r5.<com.android.internal.telephony.uicc.VoiceMailConstants: java.lang.String getVoiceMailTag(java.lang.String)>(r1);

        r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mVoiceMailTag> = $r6;

     label1:
        return;
    }

    private boolean validEfCfis(byte[])
    {
        com.android.internal.telephony.uicc.SIMRecords r0;
        byte[] r1;
        byte $b0, $b1;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        r1 := @parameter0: byte[];

        if r1 == null goto label1;

        $b0 = r1[0];

        if $b0 < 1 goto label1;

        $b1 = r1[0];

        if $b1 > 4 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void dispose()
    {
        com.android.internal.telephony.uicc.SIMRecords r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;
        com.android.internal.telephony.CommandsInterface $r5, $r6;
        com.android.internal.telephony.uicc.UiccCardApplication $r7;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Disposing SIMRecords this=");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>($r4);

        $r5 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r5.<com.android.internal.telephony.CommandsInterface: void unregisterForIccRefresh(android.os.Handler)>(r0);

        $r6 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r6.<com.android.internal.telephony.CommandsInterface: void unSetOnSmsOnSim(android.os.Handler)>(r0);

        $r7 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.UiccCardApplication mParentApp>;

        virtualinvoke $r7.<com.android.internal.telephony.uicc.UiccCardApplication: void unregisterForReady(android.os.Handler)>(r0);

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void resetRecords()>();

        specialinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void dispose()>();

        return;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.internal.telephony.uicc.SIMRecords r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r8, $r9, $r11, $r13, $r14, $r17, $r18, $r19, $r20, $r21, $r24, $r26, $r27, $r28, $r29, $r31, $r33, $r34, $r35, $r36, $r38, $r44, $r45, $r46, $r47, $r49, $r51, $r56, $r57, $r58, $r59, $r61, $r62, $r64, $r66, $r68, $r70, $r71, $r73, $r74, $r76, $r77, $r81, $r82, $r83;
        java.lang.String $r7, $r12, $r16, $r22, $r25, $r32, $r37, $r39, $r41, $r43, $r48, $r50, $r52, $r54, $r60, $r65, $r67, $r69, $r75, $r78, $r79, $r80;
        com.android.internal.telephony.uicc.VoiceMailConstants $r10;
        com.android.internal.telephony.uicc.SpnOverride $r15;
        boolean $z0, $z1;
        com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState $r23;
        byte[] $r30, $r40, $r42, $r53, $r55;
        java.util.ArrayList $r63;
        int $i0;
        com.android.internal.telephony.uicc.UsimServiceTable $r72;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SIMRecords: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(" extends:");

        specialinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mVmConfig=");

        $r10 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.VoiceMailConstants mVmConfig>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSpnOverride=");

        $r15 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.SpnOverride mSpnOverride>;

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r16);

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCallForwardingEnabled=");

        $z0 = r0.<com.android.internal.telephony.uicc.SIMRecords: boolean mCallForwardingEnabled>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r22);

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSpnState=");

        $r23 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState mSpnState>;

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r25);

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCphsInfo=");

        $r30 = r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mCphsInfo>;

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30);

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r32);

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCspPlmnEnabled=");

        $z1 = r0.<com.android.internal.telephony.uicc.SIMRecords: boolean mCspPlmnEnabled>;

        $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r37);

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mEfMWIS[]=");

        $r40 = r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfMWIS>;

        $r41 = staticinvoke <java.util.Arrays: java.lang.String toString(byte[])>($r40);

        $r38 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r39);

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mEfCPHS_MWI[]=");

        $r42 = r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfCPHS_MWI>;

        $r43 = staticinvoke <java.util.Arrays: java.lang.String toString(byte[])>($r42);

        $r49 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r48 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r48);

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mEfCff[]=");

        $r53 = r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfCff>;

        $r52 = staticinvoke <java.util.Arrays: java.lang.String toString(byte[])>($r53);

        $r51 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r50 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r50);

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mEfCfis[]=");

        $r55 = r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfCfis>;

        $r54 = staticinvoke <java.util.Arrays: java.lang.String toString(byte[])>($r55);

        $r61 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        $r60 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r60);

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSpnDisplayCondition=");

        $i0 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mSpnDisplayCondition>;

        $r66 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r67);

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSpdiNetworks[]=");

        $r63 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.util.ArrayList mSpdiNetworks>;

        $r64 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r63);

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r65);

        $r73 = new java.lang.StringBuilder;

        specialinvoke $r73.<java.lang.StringBuilder: void <init>()>();

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mPnnHomeName=");

        $r75 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mPnnHomeName>;

        $r76 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r75);

        $r69 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r69);

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mUsimServiceTable=");

        $r72 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.UsimServiceTable mUsimServiceTable>;

        $r81 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r72);

        $r80 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r80);

        $r83 = new java.lang.StringBuilder;

        specialinvoke $r83.<java.lang.StringBuilder: void <init>()>();

        $r82 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mGid1=");

        $r78 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mGid1>;

        $r77 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r78);

        $r79 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r79);

        virtualinvoke r2.<java.io.PrintWriter: void flush()>();

        return;
    }

    protected void fetchSimRecords()
    {
        com.android.internal.telephony.uicc.SIMRecords r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r38, $r39, $r40, $r41, $r42;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31;
        java.lang.String $r4, $r7, $r43;
        com.android.internal.telephony.uicc.UiccCardApplication $r5;
        com.android.internal.telephony.CommandsInterface $r6;
        android.os.Message $r8, $r10, $r13, $r15, $r17, $r18, $r22, $r23, $r24, $r28, $r30, $r31, $r32, $r36, $r37;
        com.android.internal.telephony.uicc.IccFileHandler $r9, $r12, $r14, $r16, $r19, $r20, $r21, $r25, $r26, $r27, $r29, $r33, $r34, $r35;
        com.android.internal.telephony.uicc.AdnRecordLoader $r11;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        r0.<com.android.internal.telephony.uicc.SIMRecords: boolean mRecordsRequested> = 1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fetchSimRecords ");

        $i0 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>($r4);

        $r6 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.CommandsInterface mCi>;

        $r5 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.UiccCardApplication mParentApp>;

        $r7 = virtualinvoke $r5.<com.android.internal.telephony.uicc.UiccCardApplication: java.lang.String getAid()>();

        $r8 = virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.Message obtainMessage(int)>(3);

        interfaceinvoke $r6.<com.android.internal.telephony.CommandsInterface: void getIMSIForApp(java.lang.String,android.os.Message)>($r7, $r8);

        $i1 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad>;

        $i2 = 1 + $i1;

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad> = $i2;

        $r9 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.IccFileHandler mFh>;

        $r10 = virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.Message obtainMessage(int)>(4);

        virtualinvoke $r9.<com.android.internal.telephony.uicc.IccFileHandler: void loadEFTransparent(int,android.os.Message)>(12258, $r10);

        $i3 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad>;

        $i4 = 1 + $i3;

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad> = $i4;

        $r11 = new com.android.internal.telephony.uicc.AdnRecordLoader;

        $r12 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.IccFileHandler mFh>;

        specialinvoke $r11.<com.android.internal.telephony.uicc.AdnRecordLoader: void <init>(com.android.internal.telephony.uicc.IccFileHandler)>($r12);

        $r13 = virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.Message obtainMessage(int)>(10);

        virtualinvoke $r11.<com.android.internal.telephony.uicc.AdnRecordLoader: void loadFromEF(int,int,int,android.os.Message)>(28480, 28490, 1, $r13);

        $i5 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad>;

        $i6 = 1 + $i5;

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad> = $i6;

        $r14 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.IccFileHandler mFh>;

        $r15 = virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.Message obtainMessage(int)>(5);

        virtualinvoke $r14.<com.android.internal.telephony.uicc.IccFileHandler: void loadEFLinearFixed(int,int,android.os.Message)>(28617, 1, $r15);

        $i7 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad>;

        $i8 = 1 + $i7;

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad> = $i8;

        $r16 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.IccFileHandler mFh>;

        $r17 = virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.Message obtainMessage(int)>(9);

        virtualinvoke $r16.<com.android.internal.telephony.uicc.IccFileHandler: void loadEFTransparent(int,android.os.Message)>(28589, $r17);

        $i9 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad>;

        $i10 = 1 + $i9;

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad> = $i10;

        $r19 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.IccFileHandler mFh>;

        $r18 = virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.Message obtainMessage(int)>(7);

        virtualinvoke $r19.<com.android.internal.telephony.uicc.IccFileHandler: void loadEFLinearFixed(int,int,android.os.Message)>(28618, 1, $r18);

        $i11 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad>;

        $i12 = 1 + $i11;

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad> = $i12;

        $r20 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.IccFileHandler mFh>;

        $r22 = virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.Message obtainMessage(int)>(8);

        virtualinvoke $r20.<com.android.internal.telephony.uicc.IccFileHandler: void loadEFTransparent(int,android.os.Message)>(28433, $r22);

        $i14 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad>;

        $i13 = 1 + $i14;

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad> = $i13;

        $r21 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.IccFileHandler mFh>;

        $r23 = virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.Message obtainMessage(int)>(32);

        virtualinvoke $r21.<com.android.internal.telephony.uicc.IccFileHandler: void loadEFLinearFixed(int,int,android.os.Message)>(28619, 1, $r23);

        $i15 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad>;

        $i16 = 1 + $i15;

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad> = $i16;

        $r25 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.IccFileHandler mFh>;

        $r24 = virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.Message obtainMessage(int)>(24);

        virtualinvoke $r25.<com.android.internal.telephony.uicc.IccFileHandler: void loadEFTransparent(int,android.os.Message)>(28435, $r24);

        $i18 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad>;

        $i17 = 1 + $i18;

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad> = $i17;

        specialinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void getSpnFsm(boolean,android.os.AsyncResult)>(1, null);

        $r26 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.IccFileHandler mFh>;

        $r28 = virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.Message obtainMessage(int)>(13);

        virtualinvoke $r26.<com.android.internal.telephony.uicc.IccFileHandler: void loadEFTransparent(int,android.os.Message)>(28621, $r28);

        $i20 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad>;

        $i19 = 1 + $i20;

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad> = $i19;

        $r27 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.IccFileHandler mFh>;

        $r31 = virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.Message obtainMessage(int)>(15);

        virtualinvoke $r27.<com.android.internal.telephony.uicc.IccFileHandler: void loadEFLinearFixed(int,int,android.os.Message)>(28613, 1, $r31);

        $i22 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad>;

        $i21 = 1 + $i22;

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad> = $i21;

        $r29 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.IccFileHandler mFh>;

        $r30 = virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.Message obtainMessage(int)>(17);

        virtualinvoke $r29.<com.android.internal.telephony.uicc.IccFileHandler: void loadEFTransparent(int,android.os.Message)>(28472, $r30);

        $i25 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad>;

        $i26 = 1 + $i25;

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad> = $i26;

        $r34 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.IccFileHandler mFh>;

        $r32 = virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.Message obtainMessage(int)>(26);

        virtualinvoke $r34.<com.android.internal.telephony.uicc.IccFileHandler: void loadEFTransparent(int,android.os.Message)>(28438, $r32);

        $i23 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad>;

        $i24 = 1 + $i23;

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad> = $i24;

        $r33 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.IccFileHandler mFh>;

        $r37 = virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.Message obtainMessage(int)>(33);

        virtualinvoke $r33.<com.android.internal.telephony.uicc.IccFileHandler: void loadEFTransparent(int,android.os.Message)>(28437, $r37);

        $i29 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad>;

        $i28 = 1 + $i29;

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad> = $i28;

        $r35 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.IccFileHandler mFh>;

        $r36 = virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.Message obtainMessage(int)>(34);

        virtualinvoke $r35.<com.android.internal.telephony.uicc.IccFileHandler: void loadEFTransparent(int,android.os.Message)>(28478, $r36);

        $i27 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad>;

        $i30 = 1 + $i27;

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad> = $i30;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fetchSimRecords ");

        $i31 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad>;

        $r39 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i31);

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requested: ");

        $z0 = r0.<com.android.internal.telephony.uicc.SIMRecords: boolean mRecordsRequested>;

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r43 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>($r43);

        return;
    }

    protected void finalize()
    {
        com.android.internal.telephony.uicc.SIMRecords r0;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>("finalized");

        return;
    }

    public int getDisplayRule(java.lang.String)
    {
        com.android.internal.telephony.uicc.SIMRecords r0;
        java.lang.String r1, $r2;
        byte b0;
        boolean $z0, $z1;
        int $i1, $i2, $i3, $i5, $i6;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mSpn>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 != 0 goto label1;

        $i1 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mSpnDisplayCondition>;

        if $i1 != -1 goto label3;

     label1:
        b0 = 2;

     label2:
        return b0;

     label3:
        $z1 = specialinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: boolean isOnMatchingPlmn(java.lang.String)>(r1);

        if $z1 == 0 goto label4;

        b0 = 1;

        $i5 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mSpnDisplayCondition>;

        $i6 = 1 & $i5;

        if $i6 != 1 goto label2;

        return 3;

     label4:
        b0 = 2;

        $i2 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mSpnDisplayCondition>;

        $i3 = 2 & $i2;

        if $i3 != 0 goto label2;

        return 3;
    }

    public java.lang.String getGid1()
    {
        com.android.internal.telephony.uicc.SIMRecords r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        $r1 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mGid1>;

        return $r1;
    }

    public java.lang.String getIMSI()
    {
        com.android.internal.telephony.uicc.SIMRecords r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        $r1 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        return $r1;
    }

    public java.lang.String getMsisdnAlphaTag()
    {
        com.android.internal.telephony.uicc.SIMRecords r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        $r1 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mMsisdnTag>;

        return $r1;
    }

    public java.lang.String getMsisdnNumber()
    {
        com.android.internal.telephony.uicc.SIMRecords r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        $r1 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mMsisdn>;

        return $r1;
    }

    public java.lang.String getOperatorNumeric()
    {
        com.android.internal.telephony.uicc.SIMRecords r0;
        java.lang.String $r1, $r2, $r3;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        $r1 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        if $r1 != null goto label1;

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>("getOperatorNumeric: IMSI == null");

        return null;

     label1:
        $i0 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        if $i0 == -1 goto label2;

        $i1 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        if $i1 != 0 goto label3;

     label2:
        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>("getSIMOperatorNumeric: bad mncLength");

        return null;

     label3:
        $r2 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        $i2 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        $i3 = 3 + $i2;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

        return $r3;
    }

    public com.android.internal.telephony.uicc.UsimServiceTable getUsimServiceTable()
    {
        com.android.internal.telephony.uicc.SIMRecords r0;
        com.android.internal.telephony.uicc.UsimServiceTable $r1;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        $r1 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.UsimServiceTable mUsimServiceTable>;

        return $r1;
    }

    public boolean getVoiceCallForwardingFlag()
    {
        com.android.internal.telephony.uicc.SIMRecords r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        $z0 = r0.<com.android.internal.telephony.uicc.SIMRecords: boolean mCallForwardingEnabled>;

        return $z0;
    }

    public java.lang.String getVoiceMailAlphaTag()
    {
        com.android.internal.telephony.uicc.SIMRecords r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        $r1 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mVoiceMailTag>;

        return $r1;
    }

    public java.lang.String getVoiceMailNumber()
    {
        com.android.internal.telephony.uicc.SIMRecords r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        $r1 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mVoiceMailNum>;

        return $r1;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.internal.telephony.uicc.SIMRecords r0;
        android.os.Message r1, r15, $r135, $r155, $r168, $r172, $r207, $r209, $r217, $r220, $r231, $r240, $r339, $r353, $r358, $r365;
        boolean z0, z1, z2, z3, z4, z5, $z6, $z7, $z8, $z9, $z10, $z12, $z13, $z14, $z15, $z16, $z17, $z18;
        java.lang.Throwable r2, r11, r18, r23, r27, r32, r40, r46, r79, $r90, $r97, $r105, $r111, $r124, $r134, $r157, $r161, $r166, $r175, $r176, $r188, $r194, $r205, $r208, $r228, $r233, $r247, $r251, $r256, $r266, $r279, $r317, $r325, $r349, $r382, $r396, $r409, $r425, $r429;
        java.lang.RuntimeException r3, $r428;
        android.os.AsyncResult r4, r6, r8, r10, r12, r14, r19, r22, r24, r26, r30, r31, r33, r34, r37, r42, r58, r66, r68, r69, r75, r77, r78, r80, $r156, $r167, $r219, $r232, $r281;
        byte[] r5, r7, r9, r21, r28, r35, r36, r47, r59, r64, r67, r81, $r91, $r108, $r113, $r147, $r148, $r159, $r186, $r187, $r200, $r201, $r242, $r243, $r248, $r255, $r265, $r287, $r316, $r324, $r326, $r364, $r395;
        java.lang.Object r13, r17, r20, r65, $r92, $r93, $r94, $r106, $r109, $r110, $r131, $r136, $r137, $r144, $r151, $r154, $r158, $r160, $r164, $r165, $r169, $r173, $r179, $r198, $r199, $r202, $r206, $r210, $r218, $r227, $r229, $r230, $r235, $r241, $r244, $r246, $r249, $r250, $r253, $r254, $r263, $r264, $r275, $r276, $r280, $r282, $r315, $r323, $r329, $r332, $r348, $r350, $r362, $r363, $r393, $r394, $r402, $r408;
        com.android.internal.telephony.uicc.AdnRecord r16, r74, r76, $r236;
        int[] r25, $r197;
        com.android.internal.telephony.gsm.SimTlv r29, $r267;
        java.lang.String r39, r41, r45, r49, r51, r53, r54, r56, r60, r62, r70, r72, r85, $r86, $r89, $r95, $r100, $r107, $r114, $r116, $r119, $r121, $r127, $r129, $r132, $r140, $r150, $r152, $r162, $r163, $r170, $r183, $r185, $r203, $r211, $r216, $r222, $r223, $r224, $r234, $r237, $r245, $r262, $r268, $r269, $r270, $r271, $r272, $r274, $r277, $r278, $r284, $r286, $r289, $r290, $r291, $r292, $r294, $r295, $r296, $r297, $r298, $r299, $r300, $r301, $r302, $r303, $r304, $r305, $r306, $r307, $r308, $r309, $r311, $r312, $r313, $r314, $r320, $r322, $r330, $r331, $r333, $r335, $r336, $r337, $r342, $r343, $r345, $r356, $r369, $r370, $r371, $r372, $r374, $r376, $r378, $r380, $r385, $r386, $r398, $r399, $r401, $r403, $r406, $r410, $r411, $r412, $r414, $r415, $r416, $r420, $r421, $r423, $r430, $r431, $r432, $r433, $r434, $r435;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i11, i12, i13, $i14, i15, i16, $i21, $i22, $i23, $i24, $i25, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123;
        java.lang.String[] r43, r48, r50, r55, r63, r83;
        byte b10, $b17, $b18, $b19, $b20, $b34, $b35, $b73, $b86, $b87, $b88, $b90, $b105;
        java.lang.StringBuilder r71, r73, $r87, $r88, $r96, $r98, $r99, $r101, $r102, $r103, $r104, $r112, $r115, $r117, $r118, $r120, $r122, $r123, $r125, $r126, $r128, $r130, $r133, $r141, $r142, $r143, $r146, $r149, $r153, $r171, $r174, $r177, $r180, $r181, $r184, $r189, $r190, $r191, $r192, $r193, $r195, $r196, $r204, $r213, $r214, $r215, $r221, $r225, $r226, $r258, $r259, $r261, $r283, $r285, $r288, $r318, $r319, $r321, $r338, $r344, $r346, $r347, $r354, $r355, $r368, $r373, $r375, $r377, $r379, $r381, $r383, $r384, $r387, $r388, $r389, $r390, $r391, $r392, $r397, $r400, $r404, $r405;
        java.util.concurrent.atomic.AtomicBoolean $r82;
        com.android.internal.telephony.uicc.IccRefreshResponse $r138;
        android.os.RegistrantList $r139, $r182, $r327, $r352, $r407;
        java.lang.Integer $r145, $r178, $r328, $r351;
        com.android.internal.telephony.uicc.IccFileHandler $r212, $r239, $r341, $r357, $r361, $r366;
        com.android.internal.telephony.uicc.AdnRecordLoader $r238, $r340, $r359, $r360, $r367;
        java.util.ArrayList $r252;
        com.android.internal.telephony.uicc.UsimServiceTable $r257, $r260;
        android.content.Context $r273, $r293, $r310, $r334, $r413, $r422;
        short $s85, $s89, $s106;
        java.lang.NumberFormatException $r417, $r418, $r419, $r424, $r426, $r427;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        r1 := @parameter0: android.os.Message;

        z0 = 0;

        $r82 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.util.concurrent.atomic.AtomicBoolean mDestroyed>;

        $z6 = virtualinvoke $r82.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z6 == 0 goto label002;

        $r379 = new java.lang.StringBuilder;

        specialinvoke $r379.<java.lang.StringBuilder: void <init>()>();

        $r392 = virtualinvoke $r379.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received message ");

        $r391 = virtualinvoke $r392.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r390 = virtualinvoke $r391.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $i104 = r1.<android.os.Message: int what>;

        $r389 = virtualinvoke $r390.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i104);

        $r388 = virtualinvoke $r389.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        $r387 = virtualinvoke $r388.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" while being destroyed. Ignoring.");

        $r386 = virtualinvoke $r387.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void loge(java.lang.String)>($r386);

     label001:
        return;

     label002:
        $i14 = r1.<android.os.Message: int what>;

        tableswitch($i14)
        {
            case 1: goto label006;
            case 2: goto label003;
            case 3: goto label011;
            case 4: goto label088;
            case 5: goto label032;
            case 6: goto label047;
            case 7: goto label069;
            case 8: goto label079;
            case 9: goto label091;
            case 10: goto label059;
            case 11: goto label047;
            case 12: goto label153;
            case 13: goto label163;
            case 14: goto label166;
            case 15: goto label170;
            case 16: goto label003;
            case 17: goto label196;
            case 18: goto label176;
            case 19: goto label179;
            case 20: goto label202;
            case 21: goto label181;
            case 22: goto label189;
            case 23: goto label003;
            case 24: goto label156;
            case 25: goto label218;
            case 26: goto label199;
            case 27: goto label003;
            case 28: goto label003;
            case 29: goto label003;
            case 30: goto label064;
            case 31: goto label226;
            case 32: goto label231;
            case 33: goto label238;
            case 34: goto label243;
            default: goto label003;
        };

     label003:
        specialinvoke r0.<com.android.internal.telephony.uicc.IccRecords: void handleMessage(android.os.Message)>(r1);

     label004:
        if z0 == 0 goto label001;

     label005:
        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void onRecordLoaded()>();

        return;

     label006:
        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void onReady()>();

     label007:
        z0 = 0;

        goto label004;

     label008:
        $r428 := @caughtexception;

        r3 = $r428;

     label009:
        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void logw(java.lang.String,java.lang.Throwable)>("Exception parsing SIM record", r3);

     label010:
        if z0 == 0 goto label001;

        goto label005;

     label011:
        z0 = 1;

     label012:
        $r402 = r1.<android.os.Message: java.lang.Object obj>;

        r78 = (android.os.AsyncResult) $r402;

        $r409 = r78.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r409 == null goto label016;

        $r384 = new java.lang.StringBuilder;

        specialinvoke $r384.<java.lang.StringBuilder: void <init>()>();

        $r383 = virtualinvoke $r384.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception querying IMSI, Exception:");

        $r382 = r78.<android.os.AsyncResult: java.lang.Throwable exception>;

        $r381 = virtualinvoke $r383.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r382);

        $r380 = virtualinvoke $r381.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void loge(java.lang.String)>($r380);

     label013:
        goto label004;

     label014:
        $r425 := @caughtexception;

        r2 = $r425;

        if z0 == 0 goto label015;

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void onRecordLoaded()>();

     label015:
        throw r2;

     label016:
        $r408 = r78.<android.os.AsyncResult: java.lang.Object result>;

        $r411 = (java.lang.String) $r408;

        r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi> = $r411;

        $r410 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        if $r410 == null goto label018;

        $r378 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        $i101 = virtualinvoke $r378.<java.lang.String: int length()>();

        if $i101 < 6 goto label017;

        $r385 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        $i103 = virtualinvoke $r385.<java.lang.String: int length()>();

        if $i103 <= 15 goto label018;

     label017:
        $r377 = new java.lang.StringBuilder;

        specialinvoke $r377.<java.lang.StringBuilder: void <init>()>();

        $r375 = virtualinvoke $r377.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid IMSI ");

        $r376 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        $r373 = virtualinvoke $r375.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r376);

        $r374 = virtualinvoke $r373.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void loge(java.lang.String)>($r374);

        r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi> = null;

     label018:
        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>("IMSI: xxxxxxx");

        $i108 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        if $i108 == 0 goto label019;

        $i102 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        if $i102 != 2 goto label023;

     label019:
        $r406 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        if $r406 == null goto label023;

        $r372 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        $i98 = virtualinvoke $r372.<java.lang.String: int length()>();

        if $i98 < 6 goto label023;

        $r371 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        r85 = virtualinvoke $r371.<java.lang.String: java.lang.String substring(int,int)>(0, 6);

        r83 = <com.android.internal.telephony.uicc.SIMRecords: java.lang.String[] MCCMNC_CODES_HAVING_3DIGITS_MNC>;

        i16 = lengthof r83;

     label020:
        i15 = 0;

     label021:
        if i15 >= i16 goto label023;

     label022:
        $r370 = r83[i15];

        $z17 = virtualinvoke $r370.<java.lang.String: boolean equals(java.lang.Object)>(r85);

        if $z17 == 0 goto label273;

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength> = 3;

     label023:
        i11 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

     label024:
        if i11 != 0 goto label026;

     label025:
        $r415 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        $r414 = virtualinvoke $r415.<java.lang.String: java.lang.String substring(int,int)>(0, 3);

        $i99 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r414);

        $i100 = staticinvoke <com.android.internal.telephony.MccTable: int smallestDigitsMccForMnc(int)>($i99);

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength> = $i100;

     label026:
        $i109 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        if $i109 == 0 goto label027;

        $i111 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        if $i111 == -1 goto label027;

        $r413 = r0.<com.android.internal.telephony.uicc.SIMRecords: android.content.Context mContext>;

        $r416 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        $i110 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        $i112 = 3 + $i110;

        $r412 = virtualinvoke $r416.<java.lang.String: java.lang.String substring(int,int)>(0, $i112);

        staticinvoke <com.android.internal.telephony.MccTable: void updateMccMncConfiguration(android.content.Context,java.lang.String,boolean)>($r413, $r412, 0);

     label027:
        $r407 = r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.RegistrantList mImsiReadyRegistrants>;

        virtualinvoke $r407.<android.os.RegistrantList: void notifyRegistrants()>();

     label028:
        goto label004;

     label029:
        $r417 := @caughtexception;

     label030:
        r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength> = 0;

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void loge(java.lang.String)>("Corrupt IMSI!");

     label031:
        goto label026;

     label032:
        z0 = 1;

     label033:
        $r363 = r1.<android.os.Message: java.lang.Object obj>;

        r80 = (android.os.AsyncResult) $r363;

        $r362 = r80.<android.os.AsyncResult: java.lang.Object result>;

        $r364 = (byte[]) $r362;

        r81 = (byte[]) $r364;

        r79 = r80.<android.os.AsyncResult: java.lang.Throwable exception>;

     label034:
        z5 = 0;

        if r79 != null goto label041;

     label035:
        $r354 = new java.lang.StringBuilder;

        specialinvoke $r354.<java.lang.StringBuilder: void <init>()>();

        $r355 = virtualinvoke $r354.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EF_MBI: ");

        $r356 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: java.lang.String bytesToHexString(byte[])>(r81);

        $r397 = virtualinvoke $r355.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r356);

        $r398 = virtualinvoke $r397.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>($r398);

        $b105 = r81[0];

        $s106 = 255 & $b105;

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mMailboxIndex> = $s106;

        i12 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMailboxIndex>;

     label036:
        z5 = 0;

        if i12 == 0 goto label041;

     label037:
        i13 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMailboxIndex>;

     label038:
        z5 = 0;

        if i13 == 255 goto label041;

     label039:
        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>("Got valid mailbox number for MBDN");

     label040:
        z5 = 1;

     label041:
        $i93 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad>;

        $i92 = 1 + $i93;

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad> = $i92;

     label042:
        if z5 == 0 goto label045;

     label043:
        $r359 = new com.android.internal.telephony.uicc.AdnRecordLoader;

        $r357 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.IccFileHandler mFh>;

        specialinvoke $r359.<com.android.internal.telephony.uicc.AdnRecordLoader: void <init>(com.android.internal.telephony.uicc.IccFileHandler)>($r357);

        $i91 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMailboxIndex>;

        $r353 = virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.Message obtainMessage(int)>(6);

        virtualinvoke $r359.<com.android.internal.telephony.uicc.AdnRecordLoader: void loadFromEF(int,int,int,android.os.Message)>(28615, 28616, $i91, $r353);

     label044:
        goto label004;

     label045:
        $r360 = new com.android.internal.telephony.uicc.AdnRecordLoader;

        $r361 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.IccFileHandler mFh>;

        specialinvoke $r360.<com.android.internal.telephony.uicc.AdnRecordLoader: void <init>(com.android.internal.telephony.uicc.IccFileHandler)>($r361);

        $r358 = virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.Message obtainMessage(int)>(11);

        virtualinvoke $r360.<com.android.internal.telephony.uicc.AdnRecordLoader: void loadFromEF(int,int,int,android.os.Message)>(28439, 28490, 1, $r358);

     label046:
        goto label004;

     label047:
        r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mVoiceMailNum> = null;

        r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mVoiceMailTag> = null;

     label048:
        z0 = 1;

     label049:
        $r350 = r1.<android.os.Message: java.lang.Object obj>;

        r77 = (android.os.AsyncResult) $r350;

        $r349 = r77.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r349 == null goto label053;

        $r338 = new java.lang.StringBuilder;

        specialinvoke $r338.<java.lang.StringBuilder: void <init>()>();

        r73 = virtualinvoke $r338.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid or missing EF");

        $i96 = r1.<android.os.Message: int what>;

        if $i96 != 11 goto label274;

     label050:
        r72 = "[MAILBOX]";

     label051:
        $r368 = virtualinvoke r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r72);

        $r369 = virtualinvoke $r368.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>($r369);

        $i97 = r1.<android.os.Message: int what>;

        if $i97 != 6 goto label004;

        $i95 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad>;

        $i94 = 1 + $i95;

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad> = $i94;

        $r367 = new com.android.internal.telephony.uicc.AdnRecordLoader;

        $r366 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.IccFileHandler mFh>;

        specialinvoke $r367.<com.android.internal.telephony.uicc.AdnRecordLoader: void <init>(com.android.internal.telephony.uicc.IccFileHandler)>($r366);

        $r365 = virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.Message obtainMessage(int)>(11);

        virtualinvoke $r367.<com.android.internal.telephony.uicc.AdnRecordLoader: void loadFromEF(int,int,int,android.os.Message)>(28439, 28490, 1, $r365);

     label052:
        goto label004;

     label053:
        $r348 = r77.<android.os.AsyncResult: java.lang.Object result>;

        r76 = (com.android.internal.telephony.uicc.AdnRecord) $r348;

        $r347 = new java.lang.StringBuilder;

        specialinvoke $r347.<java.lang.StringBuilder: void <init>()>();

        $r346 = virtualinvoke $r347.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("VM: ");

        r71 = virtualinvoke $r346.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r76);

        $i83 = r1.<android.os.Message: int what>;

        if $i83 != 11 goto label275;

     label054:
        r70 = " EF[MAILBOX]";

     label055:
        $r344 = virtualinvoke r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r70);

        $r345 = virtualinvoke $r344.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>($r345);

        $z16 = virtualinvoke r76.<com.android.internal.telephony.uicc.AdnRecord: boolean isEmpty()>();

        if $z16 == 0 goto label057;

        $i82 = r1.<android.os.Message: int what>;

        if $i82 != 6 goto label057;

        $i80 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad>;

        $i81 = 1 + $i80;

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad> = $i81;

        $r340 = new com.android.internal.telephony.uicc.AdnRecordLoader;

        $r341 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.IccFileHandler mFh>;

        specialinvoke $r340.<com.android.internal.telephony.uicc.AdnRecordLoader: void <init>(com.android.internal.telephony.uicc.IccFileHandler)>($r341);

        $r339 = virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.Message obtainMessage(int)>(11);

        virtualinvoke $r340.<com.android.internal.telephony.uicc.AdnRecordLoader: void loadFromEF(int,int,int,android.os.Message)>(28439, 28490, 1, $r339);

     label056:
        goto label004;

     label057:
        $r343 = virtualinvoke r76.<com.android.internal.telephony.uicc.AdnRecord: java.lang.String getNumber()>();

        r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mVoiceMailNum> = $r343;

        $r342 = virtualinvoke r76.<com.android.internal.telephony.uicc.AdnRecord: java.lang.String getAlphaTag()>();

        r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mVoiceMailTag> = $r342;

     label058:
        goto label004;

     label059:
        z0 = 1;

     label060:
        $r282 = r1.<android.os.Message: java.lang.Object obj>;

        r75 = (android.os.AsyncResult) $r282;

        $r279 = r75.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r279 == null goto label062;

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>("Invalid or missing EF[MSISDN]");

     label061:
        goto label004;

     label062:
        $r280 = r75.<android.os.AsyncResult: java.lang.Object result>;

        r74 = (com.android.internal.telephony.uicc.AdnRecord) $r280;

        $r277 = virtualinvoke r74.<com.android.internal.telephony.uicc.AdnRecord: java.lang.String getNumber()>();

        r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mMsisdn> = $r277;

        $r278 = virtualinvoke r74.<com.android.internal.telephony.uicc.AdnRecord: java.lang.String getAlphaTag()>();

        r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mMsisdnTag> = $r278;

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>("MSISDN: xxxxxxx");

     label063:
        goto label004;

     label064:
        z0 = 0;

     label065:
        $r137 = r1.<android.os.Message: java.lang.Object obj>;

        r66 = (android.os.AsyncResult) $r137;

        r65 = r66.<android.os.AsyncResult: java.lang.Object userObj>;

     label066:
        z0 = 0;

        if r65 == null goto label004;

     label067:
        $r136 = r66.<android.os.AsyncResult: java.lang.Object userObj>;

        $r135 = (android.os.Message) $r136;

        $r156 = staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message)>($r135);

        $r157 = r66.<android.os.AsyncResult: java.lang.Throwable exception>;

        $r156.<android.os.AsyncResult: java.lang.Throwable exception> = $r157;

        $r154 = r66.<android.os.AsyncResult: java.lang.Object userObj>;

        $r155 = (android.os.Message) $r154;

        virtualinvoke $r155.<android.os.Message: void sendToTarget()>();

     label068:
        z0 = 0;

        goto label004;

     label069:
        z0 = 1;

     label070:
        $r329 = r1.<android.os.Message: java.lang.Object obj>;

        r69 = (android.os.AsyncResult) $r329;

        $r315 = r69.<android.os.AsyncResult: java.lang.Object result>;

        $r316 = (byte[]) $r315;

        r64 = (byte[]) $r316;

        $r317 = r69.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r317 != null goto label004;

        $r318 = new java.lang.StringBuilder;

        specialinvoke $r318.<java.lang.StringBuilder: void <init>()>();

        $r319 = virtualinvoke $r318.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EF_MWIS: ");

        $r320 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: java.lang.String bytesToHexString(byte[])>(r64);

        $r321 = virtualinvoke $r319.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r320);

        $r322 = virtualinvoke $r321.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>($r322);

        r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfMWIS> = r64;

        $b90 = r64[0];

        $s89 = 255 & $b90;

        if $s89 != 255 goto label072;

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>("Uninitialized record MWIS");

     label071:
        goto label004;

     label072:
        $b88 = r64[0];

        $b87 = 1 & $b88;

        if $b87 == 0 goto label276;

     label073:
        z4 = 1;

     label074:
        $b86 = r64[1];

        $s85 = 255 & $b86;

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mCountVoiceMessages> = $s85;

     label075:
        if z4 == 0 goto label077;

     label076:
        $i84 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mCountVoiceMessages>;

        if $i84 != 0 goto label077;

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mCountVoiceMessages> = -1;

     label077:
        $r352 = r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.RegistrantList mRecordsEventsRegistrants>;

        $r351 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke $r352.<android.os.RegistrantList: void notifyResult(java.lang.Object)>($r351);

     label078:
        goto label004;

     label079:
        z0 = 1;

     label080:
        $r332 = r1.<android.os.Message: java.lang.Object obj>;

        r68 = (android.os.AsyncResult) $r332;

        $r323 = r68.<android.os.AsyncResult: java.lang.Object result>;

        $r324 = (byte[]) $r323;

        r67 = (byte[]) $r324;

        $r325 = r68.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r325 != null goto label004;

        r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfCPHS_MWI> = r67;

        $r326 = r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfMWIS>;

        if $r326 != null goto label004;

        $b73 = r67[0];

        b10 = 15 & $b73;

     label081:
        if b10 != 10 goto label085;

     label082:
        r0.<com.android.internal.telephony.uicc.SIMRecords: int mCountVoiceMessages> = -1;

     label083:
        $r327 = r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.RegistrantList mRecordsEventsRegistrants>;

        $r328 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke $r327.<android.os.RegistrantList: void notifyResult(java.lang.Object)>($r328);

     label084:
        goto label004;

     label085:
        if b10 != 5 goto label083;

     label086:
        r0.<com.android.internal.telephony.uicc.SIMRecords: int mCountVoiceMessages> = 0;

     label087:
        goto label083;

     label088:
        z0 = 1;

     label089:
        $r393 = r1.<android.os.Message: java.lang.Object obj>;

        r58 = (android.os.AsyncResult) $r393;

        $r394 = r58.<android.os.AsyncResult: java.lang.Object result>;

        $r395 = (byte[]) $r394;

        r59 = (byte[]) $r395;

        $r396 = r58.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r396 != null goto label004;

        $i107 = lengthof r59;

        $r403 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: java.lang.String bcdToString(byte[],int,int)>(r59, 0, $i107);

        r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mIccId> = $r403;

        $r404 = new java.lang.StringBuilder;

        specialinvoke $r404.<java.lang.StringBuilder: void <init>()>();

        $r405 = virtualinvoke $r404.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("iccid: ");

        $r399 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mIccId>;

        $r400 = virtualinvoke $r405.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r399);

        $r401 = virtualinvoke $r400.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>($r401);

     label090:
        goto label004;

     label091:
        z0 = 1;

     label092:
        $r275 = r1.<android.os.Message: java.lang.Object obj>;

        r42 = (android.os.AsyncResult) $r275;

        $r276 = r42.<android.os.AsyncResult: java.lang.Object result>;

        $r287 = (byte[]) $r276;

        r47 = (byte[]) $r287;

        r46 = r42.<android.os.AsyncResult: java.lang.Throwable exception>;

     label093:
        if r46 == null goto label105;

     label094:
        $i57 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        if $i57 == -1 goto label095;

        $i75 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        if $i75 == 0 goto label095;

        $i76 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        if $i76 != 2 goto label099;

     label095:
        $r303 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        if $r303 == null goto label099;

        $r337 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        $i74 = virtualinvoke $r337.<java.lang.String: int length()>();

        if $i74 < 6 goto label099;

        $r330 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        r62 = virtualinvoke $r330.<java.lang.String: java.lang.String substring(int,int)>(0, 6);

        r63 = <com.android.internal.telephony.uicc.SIMRecords: java.lang.String[] MCCMNC_CODES_HAVING_3DIGITS_MNC>;

        i8 = lengthof r63;

     label096:
        i9 = 0;

     label097:
        if i9 >= i8 goto label099;

     label098:
        $r331 = r63[i9];

        $z15 = virtualinvoke $r331.<java.lang.String: boolean equals(java.lang.Object)>(r62);

        if $z15 == 0 goto label280;

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength> = 3;

     label099:
        $i56 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        if $i56 == 0 goto label100;

        $i79 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        if $i79 != -1 goto label103;

     label100:
        r60 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

     label101:
        if r60 == null goto label253;

     label102:
        $r336 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        $r335 = virtualinvoke $r336.<java.lang.String: java.lang.String substring(int,int)>(0, 3);

        $i78 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r335);

        $i77 = staticinvoke <com.android.internal.telephony.MccTable: int smallestDigitsMccForMnc(int)>($i78);

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength> = $i77;

     label103:
        $r302 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        if $r302 == null goto label004;

        $i59 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        if $i59 == 0 goto label004;

        $r334 = r0.<com.android.internal.telephony.uicc.SIMRecords: android.content.Context mContext>;

        $r304 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        $i60 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        $i58 = 3 + $i60;

        $r333 = virtualinvoke $r304.<java.lang.String: java.lang.String substring(int,int)>(0, $i58);

        staticinvoke <com.android.internal.telephony.MccTable: void updateMccMncConfiguration(android.content.Context,java.lang.String,boolean)>($r334, $r333, 0);

     label104:
        goto label004;

     label105:
        $r288 = new java.lang.StringBuilder;

        specialinvoke $r288.<java.lang.StringBuilder: void <init>()>();

        $r285 = virtualinvoke $r288.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EF_AD: ");

        $r286 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: java.lang.String bytesToHexString(byte[])>(r47);

        $r283 = virtualinvoke $r285.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r286);

        $r284 = virtualinvoke $r283.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>($r284);

        $i39 = lengthof r47;

        if $i39 >= 3 goto label117;

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>("Corrupt AD data on SIM");

     label106:
        $i68 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        if $i68 == -1 goto label107;

        $i62 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        if $i62 == 0 goto label107;

        $i63 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        if $i63 != 2 goto label111;

     label107:
        $r313 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        if $r313 == null goto label111;

        $r306 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        $i61 = virtualinvoke $r306.<java.lang.String: int length()>();

        if $i61 < 6 goto label111;

        $r305 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        r54 = virtualinvoke $r305.<java.lang.String: java.lang.String substring(int,int)>(0, 6);

        r55 = <com.android.internal.telephony.uicc.SIMRecords: java.lang.String[] MCCMNC_CODES_HAVING_3DIGITS_MNC>;

        i4 = lengthof r55;

     label108:
        i5 = 0;

     label109:
        if i5 >= i4 goto label111;

     label110:
        $r307 = r55[i5];

        $z14 = virtualinvoke $r307.<java.lang.String: boolean equals(java.lang.Object)>(r54);

        if $z14 == 0 goto label281;

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength> = 3;

     label111:
        $i67 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        if $i67 == 0 goto label112;

        $i64 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        if $i64 != -1 goto label115;

     label112:
        r56 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

     label113:
        if r56 == null goto label258;

     label114:
        $r308 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        $r312 = virtualinvoke $r308.<java.lang.String: java.lang.String substring(int,int)>(0, 3);

        $i66 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r312);

        $i65 = staticinvoke <com.android.internal.telephony.MccTable: int smallestDigitsMccForMnc(int)>($i66);

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength> = $i65;

     label115:
        $r314 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        if $r314 == null goto label004;

        $i72 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        if $i72 == 0 goto label004;

        $r310 = r0.<com.android.internal.telephony.uicc.SIMRecords: android.content.Context mContext>;

        $r311 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        $i71 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        $i70 = 3 + $i71;

        $r309 = virtualinvoke $r311.<java.lang.String: java.lang.String substring(int,int)>(0, $i70);

        staticinvoke <com.android.internal.telephony.MccTable: void updateMccMncConfiguration(android.content.Context,java.lang.String,boolean)>($r310, $r309, 0);

     label116:
        goto label004;

     label117:
        $i40 = lengthof r47;

        if $i40 != 3 goto label129;

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>("MNC length not present in EF_AD");

     label118:
        $i55 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        if $i55 == -1 goto label119;

        $i44 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        if $i44 == 0 goto label119;

        $i69 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        if $i69 != 2 goto label123;

     label119:
        $r301 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        if $r301 == null goto label123;

        $r295 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        $i46 = virtualinvoke $r295.<java.lang.String: int length()>();

        if $i46 < 6 goto label123;

        $r296 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        r51 = virtualinvoke $r296.<java.lang.String: java.lang.String substring(int,int)>(0, 6);

        r50 = <com.android.internal.telephony.uicc.SIMRecords: java.lang.String[] MCCMNC_CODES_HAVING_3DIGITS_MNC>;

        i6 = lengthof r50;

     label120:
        i7 = 0;

     label121:
        if i7 >= i6 goto label123;

     label122:
        $r294 = r50[i7];

        $z12 = virtualinvoke $r294.<java.lang.String: boolean equals(java.lang.Object)>(r51);

        if $z12 == 0 goto label282;

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength> = 3;

     label123:
        $i50 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        if $i50 == 0 goto label124;

        $i45 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        if $i45 != -1 goto label127;

     label124:
        r53 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

     label125:
        if r53 == null goto label263;

     label126:
        $r290 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        $r289 = virtualinvoke $r290.<java.lang.String: java.lang.String substring(int,int)>(0, 3);

        $i42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r289);

        $i41 = staticinvoke <com.android.internal.telephony.MccTable: int smallestDigitsMccForMnc(int)>($i42);

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength> = $i41;

     label127:
        $r300 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        if $r300 == null goto label004;

        $i51 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        if $i51 == 0 goto label004;

        $r293 = r0.<com.android.internal.telephony.uicc.SIMRecords: android.content.Context mContext>;

        $r291 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        $i52 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        $i43 = 3 + $i52;

        $r292 = virtualinvoke $r291.<java.lang.String: java.lang.String substring(int,int)>(0, $i43);

        staticinvoke <com.android.internal.telephony.MccTable: void updateMccMncConfiguration(android.content.Context,java.lang.String,boolean)>($r293, $r292, 0);

     label128:
        goto label004;

     label129:
        $b35 = r47[3];

        $b34 = 15 & $b35;

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength> = $b34;

        $i33 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        if $i33 != 15 goto label130;

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength> = 0;

     label130:
        $i32 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        if $i32 == -1 goto label131;

        $i53 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        if $i53 == 0 goto label131;

        $i54 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        if $i54 != 2 goto label135;

     label131:
        $r269 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        if $r269 == null goto label135;

        $r299 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        $i49 = virtualinvoke $r299.<java.lang.String: int length()>();

        if $i49 < 6 goto label135;

        $r297 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        r49 = virtualinvoke $r297.<java.lang.String: java.lang.String substring(int,int)>(0, 6);

        r48 = <com.android.internal.telephony.uicc.SIMRecords: java.lang.String[] MCCMNC_CODES_HAVING_3DIGITS_MNC>;

        i3 = lengthof r48;

     label132:
        i2 = 0;

     label133:
        if i2 >= i3 goto label135;

     label134:
        $r298 = r48[i2];

        $z13 = virtualinvoke $r298.<java.lang.String: boolean equals(java.lang.Object)>(r49);

        if $z13 == 0 goto label283;

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength> = 3;

     label135:
        $i31 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        if $i31 == 0 goto label136;

        $i48 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        if $i48 != -1 goto label139;

     label136:
        r45 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

     label137:
        if r45 == null goto label268;

     label138:
        $r271 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        $r270 = virtualinvoke $r271.<java.lang.String: java.lang.String substring(int,int)>(0, 3);

        $i36 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r270);

        $i47 = staticinvoke <com.android.internal.telephony.MccTable: int smallestDigitsMccForMnc(int)>($i36);

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength> = $i47;

     label139:
        $r268 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        if $r268 == null goto label004;

        $i30 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        if $i30 == 0 goto label004;

        $r273 = r0.<com.android.internal.telephony.uicc.SIMRecords: android.content.Context mContext>;

        $r274 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        $i38 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        $i37 = 3 + $i38;

        $r272 = virtualinvoke $r274.<java.lang.String: java.lang.String substring(int,int)>(0, $i37);

        staticinvoke <com.android.internal.telephony.MccTable: void updateMccMncConfiguration(android.content.Context,java.lang.String,boolean)>($r273, $r272, 0);

     label140:
        goto label004;

     label141:
        $r429 := @caughtexception;

        r40 = $r429;

     label142:
        $i116 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        if $i116 == -1 goto label143;

        $i123 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        if $i123 == 0 goto label143;

        $i122 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        if $i122 != 2 goto label147;

     label143:
        $r430 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        if $r430 == null goto label147;

        $r433 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        $i121 = virtualinvoke $r433.<java.lang.String: int length()>();

        if $i121 < 6 goto label147;

        $r434 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        r39 = virtualinvoke $r434.<java.lang.String: java.lang.String substring(int,int)>(0, 6);

        r43 = <com.android.internal.telephony.uicc.SIMRecords: java.lang.String[] MCCMNC_CODES_HAVING_3DIGITS_MNC>;

        i1 = lengthof r43;

     label144:
        i0 = 0;

     label145:
        if i0 >= i1 goto label147;

     label146:
        $r435 = r43[i0];

        $z18 = virtualinvoke $r435.<java.lang.String: boolean equals(java.lang.Object)>(r39);

        if $z18 == 0 goto label279;

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength> = 3;

     label147:
        $i117 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        if $i117 == 0 goto label148;

        $i119 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        if $i119 != -1 goto label151;

     label148:
        r41 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

     label149:
        if r41 == null goto label248;

     label150:
        $r431 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        $r432 = virtualinvoke $r431.<java.lang.String: java.lang.String substring(int,int)>(0, 3);

        $i118 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r432);

        $i120 = staticinvoke <com.android.internal.telephony.MccTable: int smallestDigitsMccForMnc(int)>($i118);

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength> = $i120;

     label151:
        $r420 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        if $r420 == null goto label152;

        $i113 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        if $i113 == 0 goto label152;

        $r422 = r0.<com.android.internal.telephony.uicc.SIMRecords: android.content.Context mContext>;

        $r421 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        $i114 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength>;

        $i115 = 3 + $i114;

        $r423 = virtualinvoke $r421.<java.lang.String: java.lang.String substring(int,int)>(0, $i115);

        staticinvoke <com.android.internal.telephony.MccTable: void updateMccMncConfiguration(android.content.Context,java.lang.String,boolean)>($r422, $r423, 0);

     label152:
        throw r40;

     label153:
        z0 = 1;

     label154:
        $r250 = r1.<android.os.Message: java.lang.Object obj>;

        $r281 = (android.os.AsyncResult) $r250;

        specialinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void getSpnFsm(boolean,android.os.AsyncResult)>(0, $r281);

     label155:
        goto label004;

     label156:
        z0 = 1;

     label157:
        $r165 = r1.<android.os.Message: java.lang.Object obj>;

        r37 = (android.os.AsyncResult) $r165;

        $r164 = r37.<android.os.AsyncResult: java.lang.Object result>;

        $r187 = (byte[]) $r164;

        r35 = (byte[]) $r187;

        $r188 = r37.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r188 != null goto label004;

        $r189 = new java.lang.StringBuilder;

        specialinvoke $r189.<java.lang.StringBuilder: void <init>()>();

        $r190 = virtualinvoke $r189.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EF_CFF_CPHS: ");

        $r183 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: java.lang.String bytesToHexString(byte[])>(r35);

        $r184 = virtualinvoke $r190.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r183);

        $r185 = virtualinvoke $r184.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>($r185);

        r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfCff> = r35;

        $r186 = r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfCfis>;

        $z9 = specialinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: boolean validEfCfis(byte[])>($r186);

        if $z9 != 0 goto label161;

        $b19 = r35[0];

        $b20 = 15 & $b19;

        if $b20 != 10 goto label277;

     label158:
        z3 = 1;

     label159:
        r0.<com.android.internal.telephony.uicc.SIMRecords: boolean mCallForwardingEnabled> = z3;

        $r182 = r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.RegistrantList mRecordsEventsRegistrants>;

        $r178 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke $r182.<android.os.RegistrantList: void notifyResult(java.lang.Object)>($r178);

     label160:
        goto label004;

     label161:
        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>("EVENT_GET_CFF_DONE: EF_CFIS is valid, ignoring EF_CFF_CPHS");

     label162:
        goto label004;

     label163:
        z0 = 1;

     label164:
        $r246 = r1.<android.os.Message: java.lang.Object obj>;

        r33 = (android.os.AsyncResult) $r246;

        $r249 = r33.<android.os.AsyncResult: java.lang.Object result>;

        $r248 = (byte[]) $r249;

        r36 = (byte[]) $r248;

        $r251 = r33.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r251 != null goto label004;

        specialinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void parseEfSpdi(byte[])>(r36);

     label165:
        goto label004;

     label166:
        $r244 = r1.<android.os.Message: java.lang.Object obj>;

        r34 = (android.os.AsyncResult) $r244;

        r32 = r34.<android.os.AsyncResult: java.lang.Throwable exception>;

     label167:
        z0 = 0;

        if r32 == null goto label004;

     label168:
        $r247 = r34.<android.os.AsyncResult: java.lang.Throwable exception>;

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void logw(java.lang.String,java.lang.Throwable)>("update failed. ", $r247);

     label169:
        z0 = 0;

        goto label004;

     label170:
        z0 = 1;

     label171:
        $r263 = r1.<android.os.Message: java.lang.Object obj>;

        r31 = (android.os.AsyncResult) $r263;

        $r264 = r31.<android.os.AsyncResult: java.lang.Object result>;

        $r265 = (byte[]) $r264;

        r28 = (byte[]) $r265;

        $r266 = r31.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r266 != null goto label004;

        $r267 = new com.android.internal.telephony.gsm.SimTlv;

        $i27 = lengthof r28;

        specialinvoke $r267.<com.android.internal.telephony.gsm.SimTlv: void <init>(byte[],int,int)>(r28, 0, $i27);

        r29 = $r267;

     label172:
        $z10 = virtualinvoke r29.<com.android.internal.telephony.gsm.SimTlv: boolean isValidObject()>();

        if $z10 == 0 goto label004;

        $i28 = virtualinvoke r29.<com.android.internal.telephony.gsm.SimTlv: int getTag()>();

        if $i28 != 67 goto label174;

        $r242 = virtualinvoke r29.<com.android.internal.telephony.gsm.SimTlv: byte[] getData()>();

        $r243 = virtualinvoke r29.<com.android.internal.telephony.gsm.SimTlv: byte[] getData()>();

        $i29 = lengthof $r243;

        $r245 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: java.lang.String networkNameToString(byte[],int,int)>($r242, 0, $i29);

        r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mPnnHomeName> = $r245;

     label173:
        goto label004;

     label174:
        virtualinvoke r29.<com.android.internal.telephony.gsm.SimTlv: boolean nextObject()>();

     label175:
        goto label172;

     label176:
        z0 = 1;

     label177:
        $r229 = r1.<android.os.Message: java.lang.Object obj>;

        r30 = (android.os.AsyncResult) $r229;

        $r228 = r30.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r228 != null goto label004;

        $r227 = r30.<android.os.AsyncResult: java.lang.Object result>;

        $r252 = (java.util.ArrayList) $r227;

        specialinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void handleSmses(java.util.ArrayList)>($r252);

     label178:
        goto label004;

     label179:
        $r221 = new java.lang.StringBuilder;

        specialinvoke $r221.<java.lang.StringBuilder: void <init>()>();

        $r226 = virtualinvoke $r221.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("marked read: sms ");

        $i25 = r1.<android.os.Message: int arg1>;

        $r225 = virtualinvoke $r226.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i25);

        $r224 = virtualinvoke $r225.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("ENF", $r224);

     label180:
        z0 = 0;

        goto label004;

     label181:
        z0 = 0;

     label182:
        $r199 = r1.<android.os.Message: java.lang.Object obj>;

        r26 = (android.os.AsyncResult) $r199;

        $r198 = r26.<android.os.AsyncResult: java.lang.Object result>;

        $r197 = (int[]) $r198;

        r25 = (int[]) $r197;

        r27 = r26.<android.os.AsyncResult: java.lang.Throwable exception>;

     label183:
        z0 = 0;

        if r27 != null goto label185;

     label184:
        $i24 = lengthof r25;

        if $i24 == 1 goto label187;

     label185:
        $r196 = new java.lang.StringBuilder;

        specialinvoke $r196.<java.lang.StringBuilder: void <init>()>();

        $r195 = virtualinvoke $r196.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error on SMS_ON_SIM with exp ");

        $r194 = r26.<android.os.AsyncResult: java.lang.Throwable exception>;

        $r193 = virtualinvoke $r195.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r194);

        $r192 = virtualinvoke $r193.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" length ");

        $i21 = lengthof r25;

        $r191 = virtualinvoke $r192.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i21);

        $r216 = virtualinvoke $r191.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void loge(java.lang.String)>($r216);

     label186:
        z0 = 0;

        goto label004;

     label187:
        $r214 = new java.lang.StringBuilder;

        specialinvoke $r214.<java.lang.StringBuilder: void <init>()>();

        $r215 = virtualinvoke $r214.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("READ EF_SMS RECORD index=");

        $i23 = r25[0];

        $r213 = virtualinvoke $r215.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i23);

        $r211 = virtualinvoke $r213.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>($r211);

        $r212 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.IccFileHandler mFh>;

        $i22 = r25[0];

        $r209 = virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.Message obtainMessage(int)>(22);

        virtualinvoke $r212.<com.android.internal.telephony.uicc.IccFileHandler: void loadEFLinearFixed(int,int,android.os.Message)>(28476, $i22, $r209);

     label188:
        z0 = 0;

        goto label004;

     label189:
        z0 = 0;

     label190:
        $r179 = r1.<android.os.Message: java.lang.Object obj>;

        r24 = (android.os.AsyncResult) $r179;

        r23 = r24.<android.os.AsyncResult: java.lang.Throwable exception>;

     label191:
        z0 = 0;

        if r23 != null goto label194;

     label192:
        $r202 = r24.<android.os.AsyncResult: java.lang.Object result>;

        $r201 = (byte[]) $r202;

        $r200 = (byte[]) $r201;

        specialinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void handleSms(byte[])>($r200);

     label193:
        z0 = 0;

        goto label004;

     label194:
        $r180 = new java.lang.StringBuilder;

        specialinvoke $r180.<java.lang.StringBuilder: void <init>()>();

        $r181 = virtualinvoke $r180.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error on GET_SMS with exp ");

        $r205 = r24.<android.os.AsyncResult: java.lang.Throwable exception>;

        $r204 = virtualinvoke $r181.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r205);

        $r203 = virtualinvoke $r204.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void loge(java.lang.String)>($r203);

     label195:
        z0 = 0;

        goto label004;

     label196:
        z0 = 1;

     label197:
        $r253 = r1.<android.os.Message: java.lang.Object obj>;

        r22 = (android.os.AsyncResult) $r253;

        $r254 = r22.<android.os.AsyncResult: java.lang.Object result>;

        $r255 = (byte[]) $r254;

        r21 = (byte[]) $r255;

        $r256 = r22.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r256 != null goto label004;

        $r257 = new com.android.internal.telephony.uicc.UsimServiceTable;

        specialinvoke $r257.<com.android.internal.telephony.uicc.UsimServiceTable: void <init>(byte[])>(r21);

        r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.UsimServiceTable mUsimServiceTable> = $r257;

        $r258 = new java.lang.StringBuilder;

        specialinvoke $r258.<java.lang.StringBuilder: void <init>()>();

        $r259 = virtualinvoke $r258.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SST: ");

        $r260 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.UsimServiceTable mUsimServiceTable>;

        $r261 = virtualinvoke $r259.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r260);

        $r262 = virtualinvoke $r261.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>($r262);

     label198:
        goto label004;

     label199:
        z0 = 1;

     label200:
        $r160 = r1.<android.os.Message: java.lang.Object obj>;

        r19 = (android.os.AsyncResult) $r160;

        $r161 = r19.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r161 != null goto label004;

        $r158 = r19.<android.os.AsyncResult: java.lang.Object result>;

        $r159 = (byte[]) $r158;

        $r148 = (byte[]) $r159;

        r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mCphsInfo> = $r148;

        $r149 = new java.lang.StringBuilder;

        specialinvoke $r149.<java.lang.StringBuilder: void <init>()>();

        $r146 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("iCPHS: ");

        $r147 = r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mCphsInfo>;

        $r152 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: java.lang.String bytesToHexString(byte[])>($r147);

        $r153 = virtualinvoke $r146.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r152);

        $r150 = virtualinvoke $r153.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>($r150);

     label201:
        goto label004;

     label202:
        z0 = 0;

     label203:
        $r210 = r1.<android.os.Message: java.lang.Object obj>;

        r14 = (android.os.AsyncResult) $r210;

        $r208 = r14.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r208 != null goto label204;

        $r223 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mNewVoiceMailNum>;

        r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mVoiceMailNum> = $r223;

        $r222 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mNewVoiceMailTag>;

        r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mVoiceMailTag> = $r222;

     label204:
        z2 = specialinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: boolean isCphsMailboxEnabled()>();

     label205:
        z0 = 0;

        if z2 == 0 goto label214;

     label206:
        $r236 = new com.android.internal.telephony.uicc.AdnRecord;

        $r234 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mVoiceMailTag>;

        $r237 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mVoiceMailNum>;

        specialinvoke $r236.<com.android.internal.telephony.uicc.AdnRecord: void <init>(java.lang.String,java.lang.String)>($r234, $r237);

        r16 = $r236;

        $r235 = r14.<android.os.AsyncResult: java.lang.Object userObj>;

        r15 = (android.os.Message) $r235;

        r18 = r14.<android.os.AsyncResult: java.lang.Throwable exception>;

     label207:
        z0 = 0;

        if r18 != null goto label212;

     label208:
        r17 = r14.<android.os.AsyncResult: java.lang.Object userObj>;

     label209:
        z0 = 0;

        if r17 == null goto label212;

     label210:
        $r241 = r14.<android.os.AsyncResult: java.lang.Object userObj>;

        $r220 = (android.os.Message) $r241;

        $r219 = staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message)>($r220);

        $r219.<android.os.AsyncResult: java.lang.Throwable exception> = null;

        $r218 = r14.<android.os.AsyncResult: java.lang.Object userObj>;

        $r217 = (android.os.Message) $r218;

        virtualinvoke $r217.<android.os.Message: void sendToTarget()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>("Callback with MBDN successful.");

     label211:
        r15 = null;

     label212:
        $r238 = new com.android.internal.telephony.uicc.AdnRecordLoader;

        $r239 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.IccFileHandler mFh>;

        specialinvoke $r238.<com.android.internal.telephony.uicc.AdnRecordLoader: void <init>(com.android.internal.telephony.uicc.IccFileHandler)>($r239);

        $r240 = virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.Message obtainMessage(int,java.lang.Object)>(25, r15);

        virtualinvoke $r238.<com.android.internal.telephony.uicc.AdnRecordLoader: void updateEF(com.android.internal.telephony.uicc.AdnRecord,int,int,int,java.lang.String,android.os.Message)>(r16, 28439, 28490, 1, null, $r240);

     label213:
        z0 = 0;

        goto label004;

     label214:
        r20 = r14.<android.os.AsyncResult: java.lang.Object userObj>;

     label215:
        z0 = 0;

        if r20 == null goto label004;

     label216:
        $r206 = r14.<android.os.AsyncResult: java.lang.Object userObj>;

        $r207 = (android.os.Message) $r206;

        $r232 = staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message)>($r207);

        $r233 = r14.<android.os.AsyncResult: java.lang.Throwable exception>;

        $r232.<android.os.AsyncResult: java.lang.Throwable exception> = $r233;

        $r230 = r14.<android.os.AsyncResult: java.lang.Object userObj>;

        $r231 = (android.os.Message) $r230;

        virtualinvoke $r231.<android.os.Message: void sendToTarget()>();

     label217:
        z0 = 0;

        goto label004;

     label218:
        z0 = 0;

     label219:
        $r151 = r1.<android.os.Message: java.lang.Object obj>;

        r12 = (android.os.AsyncResult) $r151;

        $r175 = r12.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r175 != null goto label224;

        $r163 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mNewVoiceMailNum>;

        r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mVoiceMailNum> = $r163;

        $r162 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mNewVoiceMailTag>;

        r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mVoiceMailTag> = $r162;

     label220:
        r13 = r12.<android.os.AsyncResult: java.lang.Object userObj>;

     label221:
        z0 = 0;

        if r13 == null goto label004;

     label222:
        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>("Callback with CPHS MB successful.");

        $r173 = r12.<android.os.AsyncResult: java.lang.Object userObj>;

        $r172 = (android.os.Message) $r173;

        $r167 = staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message)>($r172);

        $r166 = r12.<android.os.AsyncResult: java.lang.Throwable exception>;

        $r167.<android.os.AsyncResult: java.lang.Throwable exception> = $r166;

        $r169 = r12.<android.os.AsyncResult: java.lang.Object userObj>;

        $r168 = (android.os.Message) $r169;

        virtualinvoke $r168.<android.os.Message: void sendToTarget()>();

     label223:
        z0 = 0;

        goto label004;

     label224:
        $r174 = new java.lang.StringBuilder;

        specialinvoke $r174.<java.lang.StringBuilder: void <init>()>();

        $r177 = virtualinvoke $r174.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Set CPHS MailBox with exception: ");

        $r176 = r12.<android.os.AsyncResult: java.lang.Throwable exception>;

        $r171 = virtualinvoke $r177.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r176);

        $r170 = virtualinvoke $r171.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>($r170);

     label225:
        goto label220;

     label226:
        z0 = 0;

     label227:
        $r144 = r1.<android.os.Message: java.lang.Object obj>;

        r10 = (android.os.AsyncResult) $r144;

        $r143 = new java.lang.StringBuilder;

        specialinvoke $r143.<java.lang.StringBuilder: void <init>()>();

        $r142 = virtualinvoke $r143.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sim REFRESH with exception: ");

        $r134 = r10.<android.os.AsyncResult: java.lang.Throwable exception>;

        $r133 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r134);

        $r132 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>($r132);

        r11 = r10.<android.os.AsyncResult: java.lang.Throwable exception>;

     label228:
        z0 = 0;

        if r11 != null goto label004;

     label229:
        $r131 = r10.<android.os.AsyncResult: java.lang.Object result>;

        $r138 = (com.android.internal.telephony.uicc.IccRefreshResponse) $r131;

        specialinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void handleSimRefresh(com.android.internal.telephony.uicc.IccRefreshResponse)>($r138);

     label230:
        z0 = 0;

        goto label004;

     label231:
        z0 = 1;

     label232:
        $r106 = r1.<android.os.Message: java.lang.Object obj>;

        r8 = (android.os.AsyncResult) $r106;

        $r109 = r8.<android.os.AsyncResult: java.lang.Object result>;

        $r108 = (byte[]) $r109;

        r9 = (byte[]) $r108;

        $r124 = r8.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r124 != null goto label004;

        $r125 = new java.lang.StringBuilder;

        specialinvoke $r125.<java.lang.StringBuilder: void <init>()>();

        $r126 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EF_CFIS: ");

        $r127 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: java.lang.String bytesToHexString(byte[])>(r9);

        $r128 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r127);

        $r129 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>($r129);

        $z7 = specialinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: boolean validEfCfis(byte[])>(r9);

        if $z7 == 0 goto label236;

        r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfCfis> = r9;

        $b17 = r9[1];

        $b18 = 1 & $b17;

        if $b18 == 0 goto label278;

     label233:
        z1 = 1;

     label234:
        r0.<com.android.internal.telephony.uicc.SIMRecords: boolean mCallForwardingEnabled> = z1;

        $r122 = new java.lang.StringBuilder;

        specialinvoke $r122.<java.lang.StringBuilder: void <init>()>();

        $r123 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EF_CFIS: callForwardingEnabled=");

        $z8 = r0.<com.android.internal.telephony.uicc.SIMRecords: boolean mCallForwardingEnabled>;

        $r141 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z8);

        $r140 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>($r140);

        $r139 = r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.RegistrantList mRecordsEventsRegistrants>;

        $r145 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke $r139.<android.os.RegistrantList: void notifyResult(java.lang.Object)>($r145);

     label235:
        goto label004;

     label236:
        $r130 = new java.lang.StringBuilder;

        specialinvoke $r130.<java.lang.StringBuilder: void <init>()>();

        $r118 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EF_CFIS: invalid data=");

        $r119 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: java.lang.String bytesToHexString(byte[])>(r9);

        $r120 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r119);

        $r121 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>($r121);

     label237:
        goto label004;

     label238:
        z0 = 1;

     label239:
        $r94 = r1.<android.os.Message: java.lang.Object obj>;

        r6 = (android.os.AsyncResult) $r94;

        $r111 = r6.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r111 == null goto label241;

        $r103 = new java.lang.StringBuilder;

        specialinvoke $r103.<java.lang.StringBuilder: void <init>()>();

        $r102 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in fetching EF_CSP data ");

        $r105 = r6.<android.os.AsyncResult: java.lang.Throwable exception>;

        $r104 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r105);

        $r107 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void loge(java.lang.String)>($r107);

     label240:
        goto label004;

     label241:
        $r110 = r6.<android.os.AsyncResult: java.lang.Object result>;

        $r113 = (byte[]) $r110;

        r7 = (byte[]) $r113;

        $r112 = new java.lang.StringBuilder;

        specialinvoke $r112.<java.lang.StringBuilder: void <init>()>();

        $r115 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EF_CSP: ");

        $r114 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: java.lang.String bytesToHexString(byte[])>(r7);

        $r117 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r114);

        $r116 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>($r116);

        specialinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void handleEfCspData(byte[])>(r7);

     label242:
        goto label004;

     label243:
        z0 = 1;

     label244:
        $r93 = r1.<android.os.Message: java.lang.Object obj>;

        r4 = (android.os.AsyncResult) $r93;

        $r92 = r4.<android.os.AsyncResult: java.lang.Object result>;

        $r91 = (byte[]) $r92;

        r5 = (byte[]) $r91;

        $r90 = r4.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r90 == null goto label246;

        $r99 = new java.lang.StringBuilder;

        specialinvoke $r99.<java.lang.StringBuilder: void <init>()>();

        $r98 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in get GID1 ");

        $r97 = r4.<android.os.AsyncResult: java.lang.Throwable exception>;

        $r96 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r97);

        $r95 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void loge(java.lang.String)>($r95);

        r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mGid1> = null;

     label245:
        goto label004;

     label246:
        $r89 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: java.lang.String bytesToHexString(byte[])>(r5);

        r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mGid1> = $r89;

        $r88 = new java.lang.StringBuilder;

        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();

        $r87 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GID1: ");

        $r86 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mGid1>;

        $r101 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r86);

        $r100 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>($r100);

     label247:
        goto label004;

     label248:
        r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength> = 0;

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>("MNC length not present in EF_AD");

     label249:
        goto label151;

     label250:
        $r419 := @caughtexception;

     label251:
        r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength> = 0;

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void loge(java.lang.String)>("Corrupt IMSI!");

     label252:
        goto label151;

     label253:
        r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength> = 0;

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>("MNC length not present in EF_AD");

     label254:
        goto label103;

     label255:
        $r424 := @caughtexception;

     label256:
        r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength> = 0;

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void loge(java.lang.String)>("Corrupt IMSI!");

     label257:
        goto label103;

     label258:
        r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength> = 0;

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>("MNC length not present in EF_AD");

     label259:
        goto label115;

     label260:
        $r426 := @caughtexception;

     label261:
        r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength> = 0;

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void loge(java.lang.String)>("Corrupt IMSI!");

     label262:
        goto label115;

     label263:
        r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength> = 0;

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>("MNC length not present in EF_AD");

     label264:
        goto label127;

     label265:
        $r418 := @caughtexception;

     label266:
        r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength> = 0;

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void loge(java.lang.String)>("Corrupt IMSI!");

     label267:
        goto label127;

     label268:
        r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength> = 0;

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>("MNC length not present in EF_AD");

     label269:
        goto label139;

     label270:
        $r427 := @caughtexception;

     label271:
        r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength> = 0;

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void loge(java.lang.String)>("Corrupt IMSI!");

     label272:
        goto label139;

     label273:
        i15 = i15 + 1;

        goto label021;

     label274:
        r72 = "[MBDN]";

        goto label051;

     label275:
        r70 = " EF[MBDN]";

        goto label055;

     label276:
        z4 = 0;

        goto label074;

     label277:
        z3 = 0;

        goto label159;

     label278:
        z1 = 0;

        goto label234;

     label279:
        i0 = i0 + 1;

        goto label145;

     label280:
        i9 = i9 + 1;

        goto label097;

     label281:
        i5 = i5 + 1;

        goto label109;

     label282:
        i7 = i7 + 1;

        goto label121;

     label283:
        i2 = i2 + 1;

        goto label133;

        catch java.lang.RuntimeException from label002 to label003 with label008;
        catch java.lang.Throwable from label002 to label003 with label014;
        catch java.lang.RuntimeException from label003 to label004 with label008;
        catch java.lang.Throwable from label003 to label004 with label014;
        catch java.lang.RuntimeException from label006 to label007 with label008;
        catch java.lang.Throwable from label006 to label007 with label014;
        catch java.lang.Throwable from label009 to label010 with label014;
        catch java.lang.RuntimeException from label012 to label013 with label008;
        catch java.lang.Throwable from label012 to label013 with label014;
        catch java.lang.RuntimeException from label016 to label017 with label008;
        catch java.lang.Throwable from label016 to label017 with label014;
        catch java.lang.RuntimeException from label017 to label018 with label008;
        catch java.lang.Throwable from label017 to label018 with label014;
        catch java.lang.RuntimeException from label018 to label019 with label008;
        catch java.lang.Throwable from label018 to label019 with label014;
        catch java.lang.RuntimeException from label019 to label020 with label008;
        catch java.lang.Throwable from label019 to label020 with label014;
        catch java.lang.RuntimeException from label022 to label023 with label008;
        catch java.lang.Throwable from label022 to label023 with label014;
        catch java.lang.RuntimeException from label023 to label024 with label008;
        catch java.lang.Throwable from label023 to label024 with label014;
        catch java.lang.NumberFormatException from label025 to label026 with label029;
        catch java.lang.RuntimeException from label025 to label026 with label008;
        catch java.lang.Throwable from label025 to label026 with label014;
        catch java.lang.RuntimeException from label026 to label027 with label008;
        catch java.lang.Throwable from label026 to label027 with label014;
        catch java.lang.RuntimeException from label027 to label028 with label008;
        catch java.lang.Throwable from label027 to label028 with label014;
        catch java.lang.RuntimeException from label030 to label031 with label008;
        catch java.lang.Throwable from label030 to label031 with label014;
        catch java.lang.RuntimeException from label033 to label034 with label008;
        catch java.lang.Throwable from label033 to label034 with label014;
        catch java.lang.RuntimeException from label035 to label036 with label008;
        catch java.lang.Throwable from label035 to label036 with label014;
        catch java.lang.RuntimeException from label037 to label038 with label008;
        catch java.lang.Throwable from label037 to label038 with label014;
        catch java.lang.RuntimeException from label039 to label040 with label008;
        catch java.lang.Throwable from label039 to label040 with label014;
        catch java.lang.RuntimeException from label041 to label042 with label008;
        catch java.lang.Throwable from label041 to label042 with label014;
        catch java.lang.RuntimeException from label043 to label044 with label008;
        catch java.lang.Throwable from label043 to label044 with label014;
        catch java.lang.RuntimeException from label045 to label046 with label008;
        catch java.lang.Throwable from label045 to label046 with label014;
        catch java.lang.RuntimeException from label047 to label048 with label008;
        catch java.lang.Throwable from label047 to label048 with label014;
        catch java.lang.RuntimeException from label049 to label050 with label008;
        catch java.lang.Throwable from label049 to label050 with label014;
        catch java.lang.RuntimeException from label051 to label052 with label008;
        catch java.lang.Throwable from label051 to label052 with label014;
        catch java.lang.RuntimeException from label053 to label054 with label008;
        catch java.lang.Throwable from label053 to label054 with label014;
        catch java.lang.RuntimeException from label055 to label056 with label008;
        catch java.lang.Throwable from label055 to label056 with label014;
        catch java.lang.RuntimeException from label057 to label058 with label008;
        catch java.lang.Throwable from label057 to label058 with label014;
        catch java.lang.RuntimeException from label060 to label061 with label008;
        catch java.lang.Throwable from label060 to label061 with label014;
        catch java.lang.RuntimeException from label062 to label063 with label008;
        catch java.lang.Throwable from label062 to label063 with label014;
        catch java.lang.RuntimeException from label065 to label066 with label008;
        catch java.lang.Throwable from label065 to label066 with label014;
        catch java.lang.RuntimeException from label067 to label068 with label008;
        catch java.lang.Throwable from label067 to label068 with label014;
        catch java.lang.RuntimeException from label070 to label071 with label008;
        catch java.lang.Throwable from label070 to label071 with label014;
        catch java.lang.RuntimeException from label072 to label073 with label008;
        catch java.lang.Throwable from label072 to label073 with label014;
        catch java.lang.RuntimeException from label074 to label075 with label008;
        catch java.lang.Throwable from label074 to label075 with label014;
        catch java.lang.RuntimeException from label076 to label077 with label008;
        catch java.lang.Throwable from label076 to label077 with label014;
        catch java.lang.RuntimeException from label077 to label078 with label008;
        catch java.lang.Throwable from label077 to label078 with label014;
        catch java.lang.RuntimeException from label080 to label081 with label008;
        catch java.lang.Throwable from label080 to label081 with label014;
        catch java.lang.RuntimeException from label082 to label083 with label008;
        catch java.lang.Throwable from label082 to label083 with label014;
        catch java.lang.RuntimeException from label083 to label084 with label008;
        catch java.lang.Throwable from label083 to label084 with label014;
        catch java.lang.RuntimeException from label086 to label087 with label008;
        catch java.lang.Throwable from label086 to label087 with label014;
        catch java.lang.RuntimeException from label089 to label090 with label008;
        catch java.lang.Throwable from label089 to label090 with label014;
        catch java.lang.Throwable from label092 to label093 with label141;
        catch java.lang.RuntimeException from label094 to label095 with label008;
        catch java.lang.Throwable from label094 to label095 with label014;
        catch java.lang.RuntimeException from label095 to label096 with label008;
        catch java.lang.Throwable from label095 to label096 with label014;
        catch java.lang.RuntimeException from label098 to label099 with label008;
        catch java.lang.Throwable from label098 to label099 with label014;
        catch java.lang.RuntimeException from label099 to label100 with label008;
        catch java.lang.Throwable from label099 to label100 with label014;
        catch java.lang.RuntimeException from label100 to label101 with label008;
        catch java.lang.Throwable from label100 to label101 with label014;
        catch java.lang.NumberFormatException from label102 to label103 with label255;
        catch java.lang.RuntimeException from label102 to label103 with label008;
        catch java.lang.Throwable from label102 to label103 with label014;
        catch java.lang.RuntimeException from label103 to label104 with label008;
        catch java.lang.Throwable from label103 to label104 with label014;
        catch java.lang.Throwable from label105 to label106 with label141;
        catch java.lang.RuntimeException from label106 to label107 with label008;
        catch java.lang.Throwable from label106 to label107 with label014;
        catch java.lang.RuntimeException from label107 to label108 with label008;
        catch java.lang.Throwable from label107 to label108 with label014;
        catch java.lang.RuntimeException from label110 to label111 with label008;
        catch java.lang.Throwable from label110 to label111 with label014;
        catch java.lang.RuntimeException from label111 to label112 with label008;
        catch java.lang.Throwable from label111 to label112 with label014;
        catch java.lang.RuntimeException from label112 to label113 with label008;
        catch java.lang.Throwable from label112 to label113 with label014;
        catch java.lang.NumberFormatException from label114 to label115 with label260;
        catch java.lang.RuntimeException from label114 to label115 with label008;
        catch java.lang.Throwable from label114 to label115 with label014;
        catch java.lang.RuntimeException from label115 to label116 with label008;
        catch java.lang.Throwable from label115 to label116 with label014;
        catch java.lang.Throwable from label117 to label118 with label141;
        catch java.lang.RuntimeException from label118 to label119 with label008;
        catch java.lang.Throwable from label118 to label119 with label014;
        catch java.lang.RuntimeException from label119 to label120 with label008;
        catch java.lang.Throwable from label119 to label120 with label014;
        catch java.lang.RuntimeException from label122 to label123 with label008;
        catch java.lang.Throwable from label122 to label123 with label014;
        catch java.lang.RuntimeException from label123 to label124 with label008;
        catch java.lang.Throwable from label123 to label124 with label014;
        catch java.lang.RuntimeException from label124 to label125 with label008;
        catch java.lang.Throwable from label124 to label125 with label014;
        catch java.lang.NumberFormatException from label126 to label127 with label265;
        catch java.lang.RuntimeException from label126 to label127 with label008;
        catch java.lang.Throwable from label126 to label127 with label014;
        catch java.lang.RuntimeException from label127 to label128 with label008;
        catch java.lang.Throwable from label127 to label128 with label014;
        catch java.lang.Throwable from label129 to label130 with label141;
        catch java.lang.RuntimeException from label130 to label131 with label008;
        catch java.lang.Throwable from label130 to label131 with label014;
        catch java.lang.RuntimeException from label131 to label132 with label008;
        catch java.lang.Throwable from label131 to label132 with label014;
        catch java.lang.RuntimeException from label134 to label135 with label008;
        catch java.lang.Throwable from label134 to label135 with label014;
        catch java.lang.RuntimeException from label135 to label136 with label008;
        catch java.lang.Throwable from label135 to label136 with label014;
        catch java.lang.RuntimeException from label136 to label137 with label008;
        catch java.lang.Throwable from label136 to label137 with label014;
        catch java.lang.NumberFormatException from label138 to label139 with label270;
        catch java.lang.RuntimeException from label138 to label139 with label008;
        catch java.lang.Throwable from label138 to label139 with label014;
        catch java.lang.RuntimeException from label139 to label140 with label008;
        catch java.lang.Throwable from label139 to label140 with label014;
        catch java.lang.RuntimeException from label142 to label143 with label008;
        catch java.lang.Throwable from label142 to label143 with label014;
        catch java.lang.RuntimeException from label143 to label144 with label008;
        catch java.lang.Throwable from label143 to label144 with label014;
        catch java.lang.RuntimeException from label146 to label147 with label008;
        catch java.lang.Throwable from label146 to label147 with label014;
        catch java.lang.RuntimeException from label147 to label148 with label008;
        catch java.lang.Throwable from label147 to label148 with label014;
        catch java.lang.RuntimeException from label148 to label149 with label008;
        catch java.lang.Throwable from label148 to label149 with label014;
        catch java.lang.NumberFormatException from label150 to label151 with label250;
        catch java.lang.RuntimeException from label150 to label151 with label008;
        catch java.lang.Throwable from label150 to label151 with label014;
        catch java.lang.RuntimeException from label151 to label152 with label008;
        catch java.lang.Throwable from label151 to label152 with label014;
        catch java.lang.RuntimeException from label152 to label153 with label008;
        catch java.lang.Throwable from label152 to label153 with label014;
        catch java.lang.RuntimeException from label154 to label155 with label008;
        catch java.lang.Throwable from label154 to label155 with label014;
        catch java.lang.RuntimeException from label157 to label158 with label008;
        catch java.lang.Throwable from label157 to label158 with label014;
        catch java.lang.RuntimeException from label159 to label160 with label008;
        catch java.lang.Throwable from label159 to label160 with label014;
        catch java.lang.RuntimeException from label161 to label162 with label008;
        catch java.lang.Throwable from label161 to label162 with label014;
        catch java.lang.RuntimeException from label164 to label165 with label008;
        catch java.lang.Throwable from label164 to label165 with label014;
        catch java.lang.RuntimeException from label166 to label167 with label008;
        catch java.lang.Throwable from label166 to label167 with label014;
        catch java.lang.RuntimeException from label168 to label169 with label008;
        catch java.lang.Throwable from label168 to label169 with label014;
        catch java.lang.RuntimeException from label171 to label172 with label008;
        catch java.lang.Throwable from label171 to label172 with label014;
        catch java.lang.RuntimeException from label172 to label173 with label008;
        catch java.lang.Throwable from label172 to label173 with label014;
        catch java.lang.RuntimeException from label174 to label175 with label008;
        catch java.lang.Throwable from label174 to label175 with label014;
        catch java.lang.RuntimeException from label177 to label178 with label008;
        catch java.lang.Throwable from label177 to label178 with label014;
        catch java.lang.RuntimeException from label179 to label180 with label008;
        catch java.lang.Throwable from label179 to label180 with label014;
        catch java.lang.RuntimeException from label182 to label183 with label008;
        catch java.lang.Throwable from label182 to label183 with label014;
        catch java.lang.RuntimeException from label184 to label185 with label008;
        catch java.lang.Throwable from label184 to label185 with label014;
        catch java.lang.RuntimeException from label185 to label186 with label008;
        catch java.lang.Throwable from label185 to label186 with label014;
        catch java.lang.RuntimeException from label187 to label188 with label008;
        catch java.lang.Throwable from label187 to label188 with label014;
        catch java.lang.RuntimeException from label190 to label191 with label008;
        catch java.lang.Throwable from label190 to label191 with label014;
        catch java.lang.RuntimeException from label192 to label193 with label008;
        catch java.lang.Throwable from label192 to label193 with label014;
        catch java.lang.RuntimeException from label194 to label195 with label008;
        catch java.lang.Throwable from label194 to label195 with label014;
        catch java.lang.RuntimeException from label197 to label198 with label008;
        catch java.lang.Throwable from label197 to label198 with label014;
        catch java.lang.RuntimeException from label200 to label201 with label008;
        catch java.lang.Throwable from label200 to label201 with label014;
        catch java.lang.RuntimeException from label203 to label204 with label008;
        catch java.lang.Throwable from label203 to label204 with label014;
        catch java.lang.RuntimeException from label204 to label205 with label008;
        catch java.lang.Throwable from label204 to label205 with label014;
        catch java.lang.RuntimeException from label206 to label207 with label008;
        catch java.lang.Throwable from label206 to label207 with label014;
        catch java.lang.RuntimeException from label208 to label209 with label008;
        catch java.lang.Throwable from label208 to label209 with label014;
        catch java.lang.RuntimeException from label210 to label211 with label008;
        catch java.lang.Throwable from label210 to label211 with label014;
        catch java.lang.RuntimeException from label212 to label213 with label008;
        catch java.lang.Throwable from label212 to label213 with label014;
        catch java.lang.RuntimeException from label214 to label215 with label008;
        catch java.lang.Throwable from label214 to label215 with label014;
        catch java.lang.RuntimeException from label216 to label217 with label008;
        catch java.lang.Throwable from label216 to label217 with label014;
        catch java.lang.RuntimeException from label219 to label220 with label008;
        catch java.lang.Throwable from label219 to label220 with label014;
        catch java.lang.RuntimeException from label220 to label221 with label008;
        catch java.lang.Throwable from label220 to label221 with label014;
        catch java.lang.RuntimeException from label222 to label223 with label008;
        catch java.lang.Throwable from label222 to label223 with label014;
        catch java.lang.RuntimeException from label224 to label225 with label008;
        catch java.lang.Throwable from label224 to label225 with label014;
        catch java.lang.RuntimeException from label227 to label228 with label008;
        catch java.lang.Throwable from label227 to label228 with label014;
        catch java.lang.RuntimeException from label229 to label230 with label008;
        catch java.lang.Throwable from label229 to label230 with label014;
        catch java.lang.RuntimeException from label232 to label233 with label008;
        catch java.lang.Throwable from label232 to label233 with label014;
        catch java.lang.RuntimeException from label234 to label235 with label008;
        catch java.lang.Throwable from label234 to label235 with label014;
        catch java.lang.RuntimeException from label236 to label237 with label008;
        catch java.lang.Throwable from label236 to label237 with label014;
        catch java.lang.RuntimeException from label239 to label240 with label008;
        catch java.lang.Throwable from label239 to label240 with label014;
        catch java.lang.RuntimeException from label241 to label242 with label008;
        catch java.lang.Throwable from label241 to label242 with label014;
        catch java.lang.RuntimeException from label244 to label245 with label008;
        catch java.lang.Throwable from label244 to label245 with label014;
        catch java.lang.RuntimeException from label246 to label247 with label008;
        catch java.lang.Throwable from label246 to label247 with label014;
        catch java.lang.RuntimeException from label248 to label249 with label008;
        catch java.lang.Throwable from label248 to label249 with label014;
        catch java.lang.RuntimeException from label251 to label252 with label008;
        catch java.lang.Throwable from label251 to label252 with label014;
        catch java.lang.RuntimeException from label253 to label254 with label008;
        catch java.lang.Throwable from label253 to label254 with label014;
        catch java.lang.RuntimeException from label256 to label257 with label008;
        catch java.lang.Throwable from label256 to label257 with label014;
        catch java.lang.RuntimeException from label258 to label259 with label008;
        catch java.lang.Throwable from label258 to label259 with label014;
        catch java.lang.RuntimeException from label261 to label262 with label008;
        catch java.lang.Throwable from label261 to label262 with label014;
        catch java.lang.RuntimeException from label263 to label264 with label008;
        catch java.lang.Throwable from label263 to label264 with label014;
        catch java.lang.RuntimeException from label266 to label267 with label008;
        catch java.lang.Throwable from label266 to label267 with label014;
        catch java.lang.RuntimeException from label268 to label269 with label008;
        catch java.lang.Throwable from label268 to label269 with label014;
        catch java.lang.RuntimeException from label271 to label272 with label008;
        catch java.lang.Throwable from label271 to label272 with label014;
    }

    public boolean isCspPlmnEnabled()
    {
        com.android.internal.telephony.uicc.SIMRecords r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        $z0 = r0.<com.android.internal.telephony.uicc.SIMRecords: boolean mCspPlmnEnabled>;

        return $z0;
    }

    protected void log(java.lang.String)
    {
        com.android.internal.telephony.uicc.SIMRecords r0;
        java.lang.String r1, $r5;
        java.lang.StringBuilder $r2, $r3, $r4;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[SIMRecords] ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("SIMRecords", $r5);

        return;
    }

    protected void loge(java.lang.String)
    {
        com.android.internal.telephony.uicc.SIMRecords r0;
        java.lang.String r1, $r5;
        java.lang.StringBuilder $r2, $r3, $r4;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[SIMRecords] ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SIMRecords", $r5);

        return;
    }

    protected void logv(java.lang.String)
    {
        com.android.internal.telephony.uicc.SIMRecords r0;
        java.lang.String r1, $r5;
        java.lang.StringBuilder $r2, $r3, $r4;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[SIMRecords] ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("SIMRecords", $r5);

        return;
    }

    protected void logw(java.lang.String, java.lang.Throwable)
    {
        com.android.internal.telephony.uicc.SIMRecords r0;
        java.lang.String r1, $r6;
        java.lang.Throwable r2;
        java.lang.StringBuilder $r3, $r4, $r5;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[SIMRecords] ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("SIMRecords", $r6, r2);

        return;
    }

    protected void onAllRecordsLoaded()
    {
        com.android.internal.telephony.uicc.SIMRecords r0;
        java.lang.String r1, $r2, $r7, $r9, $r10, $r11, $r12, $r17;
        boolean $z0, $z1;
        android.os.AsyncResult $r3;
        android.os.RegistrantList $r4;
        java.lang.StringBuilder $r5, $r6, $r8, $r13, $r14, $r15, $r16;
        int $i0;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>("record load complete");

        r1 = virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String getOperatorNumeric()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label3;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onAllRecordsLoaded set \'gsm.sim.operator.numeric\' to operator=\'");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>($r17);

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("gsm.sim.operator.numeric", r1);

     label1:
        $r2 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z1 != 0 goto label4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onAllRecordsLoaded set mcc imsi=");

        $r7 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>($r9);

        $r10 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi>;

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String substring(int,int)>(0, 3);

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11);

        $r12 = staticinvoke <com.android.internal.telephony.MccTable: java.lang.String countryCodeForMcc(int)>($i0);

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("gsm.sim.operator.iso-country", $r12);

     label2:
        specialinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void setVoiceMailByCountry(java.lang.String)>(r1);

        specialinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void setSpnFromConfig(java.lang.String)>(r1);

        $r4 = r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.RegistrantList mRecordsLoadedRegistrants>;

        $r3 = new android.os.AsyncResult;

        specialinvoke $r3.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, null, null);

        virtualinvoke $r4.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r3);

        return;

     label3:
        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>("onAllRecordsLoaded empty \'gsm.sim.operator.numeric\' skipping");

        goto label1;

     label4:
        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>("onAllRecordsLoaded empty imsi skipping setting mcc");

        goto label2;
    }

    public void onReady()
    {
        com.android.internal.telephony.uicc.SIMRecords r0;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void fetchSimRecords()>();

        return;
    }

    protected void onRecordLoaded()
    {
        com.android.internal.telephony.uicc.SIMRecords r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5;
        boolean $z0, $z1;
        java.lang.String $r6;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        $i0 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad>;

        $i1 = -1 + $i0;

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad> = $i1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onRecordLoaded ");

        $i2 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requested: ");

        $z0 = r0.<com.android.internal.telephony.uicc.SIMRecords: boolean mRecordsRequested>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>($r6);

        $i3 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad>;

        if $i3 != 0 goto label2;

        $z1 = r0.<com.android.internal.telephony.uicc.SIMRecords: boolean mRecordsRequested>;

        if $z1 != 1 goto label2;

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void onAllRecordsLoaded()>();

     label1:
        return;

     label2:
        $i4 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad>;

        if $i4 >= 0 goto label1;

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void loge(java.lang.String)>("recordsToLoad <0, programmer error suspected");

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mRecordsToLoad> = 0;

        return;
    }

    public void onRefresh(boolean, int[])
    {
        com.android.internal.telephony.uicc.SIMRecords r0;
        boolean z0;
        int[] r1;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        z0 := @parameter0: boolean;

        r1 := @parameter1: int[];

        if z0 == 0 goto label1;

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void fetchSimRecords()>();

     label1:
        return;
    }

    protected void resetRecords()
    {
        com.android.internal.telephony.uicc.SIMRecords r0;
        com.android.internal.telephony.uicc.AdnRecordCache $r1;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mImsi> = null;

        r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mMsisdn> = null;

        r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mVoiceMailNum> = null;

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mCountVoiceMessages> = 0;

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mMncLength> = -1;

        r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mIccId> = null;

        r0.<com.android.internal.telephony.uicc.SIMRecords: int mSpnDisplayCondition> = -1;

        r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfMWIS> = null;

        r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfCPHS_MWI> = null;

        r0.<com.android.internal.telephony.uicc.SIMRecords: java.util.ArrayList mSpdiNetworks> = null;

        r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mPnnHomeName> = null;

        r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mGid1> = null;

        $r1 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.AdnRecordCache mAdnCache>;

        virtualinvoke $r1.<com.android.internal.telephony.uicc.AdnRecordCache: void reset()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>("SIMRecords: onRadioOffOrNotAvailable set \'gsm.sim.operator.numeric\' to operator=null");

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("gsm.sim.operator.numeric", null);

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("gsm.sim.operator.alpha", null);

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("gsm.sim.operator.iso-country", null);

        r0.<com.android.internal.telephony.uicc.SIMRecords: boolean mRecordsRequested> = 0;

        return;
    }

    public void setMsisdnNumber(java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.uicc.SIMRecords r0;
        java.lang.String r1, r2, $r7, $r11, $r13, $r14;
        android.os.Message r3, $r17;
        com.android.internal.telephony.uicc.AdnRecord r4, $r12;
        java.lang.StringBuilder $r5, $r6, $r8, $r9, $r10;
        com.android.internal.telephony.uicc.AdnRecordLoader $r15;
        com.android.internal.telephony.uicc.IccFileHandler $r16;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Message;

        r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mMsisdn> = r2;

        r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mMsisdnTag> = r1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Set MSISDN: ");

        $r7 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mMsisdnTag>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("xxxxxxx");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>($r11);

        $r12 = new com.android.internal.telephony.uicc.AdnRecord;

        $r14 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mMsisdnTag>;

        $r13 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mMsisdn>;

        specialinvoke $r12.<com.android.internal.telephony.uicc.AdnRecord: void <init>(java.lang.String,java.lang.String)>($r14, $r13);

        r4 = $r12;

        $r15 = new com.android.internal.telephony.uicc.AdnRecordLoader;

        $r16 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.IccFileHandler mFh>;

        specialinvoke $r15.<com.android.internal.telephony.uicc.AdnRecordLoader: void <init>(com.android.internal.telephony.uicc.IccFileHandler)>($r16);

        $r17 = virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.Message obtainMessage(int,java.lang.Object)>(30, r3);

        virtualinvoke $r15.<com.android.internal.telephony.uicc.AdnRecordLoader: void updateEF(com.android.internal.telephony.uicc.AdnRecord,int,int,int,java.lang.String,android.os.Message)>(r4, 28480, 28490, 1, null, $r17);

        return;
    }

    public void setVoiceCallForwardingFlag(int, boolean, java.lang.String)
    {
        com.android.internal.telephony.uicc.SIMRecords r0;
        int i0, $i13, $i14;
        boolean z0, $z1, $z2;
        java.lang.String r1, $r13, $r15, $r29, $r33, $r39;
        java.lang.ArrayIndexOutOfBoundsException r2, $r46;
        byte[] r3, r4, r5, $r8, $r14, $r17, $r18, $r20, $r21, $r24, $r25, $r28, $r35, $r42, $r43, $r44, $r45;
        android.os.RegistrantList $r6;
        java.lang.Integer $r7, $r22, $r38;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r16, $r26, $r27, $r30, $r31, $r34, $r36, $r40, $r41;
        short $s1, $s4, $s6, $s8, $s10;
        byte $b2, $b3, $b5, $b7, $b9, $b11, $b12, $b15, $b16, $b17;
        com.android.internal.telephony.uicc.IccFileHandler $r19, $r32;
        android.os.Message $r23, $r37;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.lang.String;

        if i0 == 1 goto label02;

     label01:
        return;

     label02:
        r0.<com.android.internal.telephony.uicc.SIMRecords: boolean mCallForwardingEnabled> = z0;

        $r6 = r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.RegistrantList mRecordsEventsRegistrants>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke $r6.<android.os.RegistrantList: void notifyResult(java.lang.Object)>($r7);

     label03:
        $r8 = r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfCfis>;

        $z1 = specialinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: boolean validEfCfis(byte[])>($r8);

        if $z1 == 0 goto label18;

     label04:
        if z0 == 0 goto label16;

     label05:
        r3 = r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfCfis>;

        $b12 = r3[1];

        $b16 = 1 | $b12;

        $b17 = (byte) $b16;

        r3[1] = $b17;

     label06:
        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setVoiceCallForwardingFlag: enable=");

        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mEfCfis=");

        $r28 = r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfCfis>;

        $r29 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: java.lang.String bytesToHexString(byte[])>($r28);

        $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>($r33);

     label07:
        if z0 == 0 goto label09;

     label08:
        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z2 != 0 goto label09;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EF_CFIS: updating cf number, ");

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>($r39);

        r4 = staticinvoke <android.telephony.PhoneNumberUtils: byte[] numberToCalledPartyBCD(java.lang.String)>(r1);

        $r45 = r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfCfis>;

        $i13 = lengthof r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, 0, $r45, 3, $i13);

        $r42 = r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfCfis>;

        $i14 = lengthof r4;

        $b15 = (byte) $i14;

        $r42[2] = $b15;

        $r43 = r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfCfis>;

        $r43[14] = -1;

        $r44 = r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfCfis>;

        $r44[15] = -1;

     label09:
        $r32 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.IccFileHandler mFh>;

        $r35 = r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfCfis>;

        $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(28619);

        $r37 = virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.Message obtainMessage(int,java.lang.Object)>(14, $r38);

        virtualinvoke $r32.<com.android.internal.telephony.uicc.IccFileHandler: void updateEFLinearFixed(int,int,byte[],java.lang.String,android.os.Message)>(28619, 1, $r35, null, $r37);

     label10:
        $r18 = r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfCff>;

        if $r18 == null goto label01;

     label11:
        if z0 == 0 goto label20;

     label12:
        $r25 = r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfCff>;

        $r24 = r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfCff>;

        $b5 = $r24[0];

        $s6 = 240 & $b5;

        $s8 = 10 | $s6;

        $b9 = (byte) $s8;

        $r25[0] = $b9;

     label13:
        $r19 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.IccFileHandler mFh>;

        $r21 = r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfCff>;

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(28435);

        $r23 = virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.Message obtainMessage(int,java.lang.Object)>(14, $r22);

        virtualinvoke $r19.<com.android.internal.telephony.uicc.IccFileHandler: void updateEFTransparent(int,byte[],android.os.Message)>(28435, $r21, $r23);

     label14:
        return;

     label15:
        $r46 := @caughtexception;

        r2 = $r46;

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void logw(java.lang.String,java.lang.Throwable)>("Error saving call forwarding flag to SIM. Probably malformed SIM record", r2);

        return;

     label16:
        r5 = r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfCfis>;

        $b7 = r5[1];

        $s10 = 254 & $b7;

        $b11 = (byte) $s10;

        r5[1] = $b11;

     label17:
        goto label06;

     label18:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setVoiceCallForwardingFlag: ignoring enable=");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" invalid mEfCfis=");

        $r14 = r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfCfis>;

        $r13 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: java.lang.String bytesToHexString(byte[])>($r14);

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void log(java.lang.String)>($r15);

     label19:
        goto label10;

     label20:
        $r20 = r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfCff>;

        $r17 = r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfCff>;

        $b2 = $r17[0];

        $s1 = 240 & $b2;

        $s4 = 5 | $s1;

        $b3 = (byte) $s4;

        $r20[0] = $b3;

     label21:
        goto label13;

        catch java.lang.ArrayIndexOutOfBoundsException from label03 to label04 with label15;
        catch java.lang.ArrayIndexOutOfBoundsException from label05 to label06 with label15;
        catch java.lang.ArrayIndexOutOfBoundsException from label06 to label07 with label15;
        catch java.lang.ArrayIndexOutOfBoundsException from label08 to label09 with label15;
        catch java.lang.ArrayIndexOutOfBoundsException from label09 to label10 with label15;
        catch java.lang.ArrayIndexOutOfBoundsException from label10 to label11 with label15;
        catch java.lang.ArrayIndexOutOfBoundsException from label12 to label13 with label15;
        catch java.lang.ArrayIndexOutOfBoundsException from label13 to label14 with label15;
        catch java.lang.ArrayIndexOutOfBoundsException from label16 to label17 with label15;
        catch java.lang.ArrayIndexOutOfBoundsException from label18 to label19 with label15;
        catch java.lang.ArrayIndexOutOfBoundsException from label20 to label21 with label15;
    }

    public void setVoiceMailNumber(java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.uicc.SIMRecords r0;
        java.lang.String r1, r2, $r6, $r7;
        android.os.Message r3, $r12, $r15;
        com.android.internal.telephony.uicc.AdnRecord r4, $r5;
        boolean $z0, $z1;
        int $i0, $i1, $i2;
        android.os.AsyncResult $r8, $r17;
        com.android.internal.telephony.uicc.IccVmNotSupportedException $r9;
        com.android.internal.telephony.uicc.AdnRecordLoader $r10, $r13;
        com.android.internal.telephony.uicc.IccFileHandler $r11, $r14;
        com.android.internal.telephony.uicc.IccVmFixedException $r16;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Message;

        $z0 = r0.<com.android.internal.telephony.uicc.SIMRecords: boolean mIsVoiceMailFixed>;

        if $z0 == 0 goto label1;

        $r17 = staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message)>(r3);

        $r16 = new com.android.internal.telephony.uicc.IccVmFixedException;

        specialinvoke $r16.<com.android.internal.telephony.uicc.IccVmFixedException: void <init>(java.lang.String)>("Voicemail number is fixed by operator");

        $r17.<android.os.AsyncResult: java.lang.Throwable exception> = $r16;

        virtualinvoke r3.<android.os.Message: void sendToTarget()>();

        return;

     label1:
        r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mNewVoiceMailNum> = r2;

        r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mNewVoiceMailTag> = r1;

        $r5 = new com.android.internal.telephony.uicc.AdnRecord;

        $r7 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mNewVoiceMailTag>;

        $r6 = r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String mNewVoiceMailNum>;

        specialinvoke $r5.<com.android.internal.telephony.uicc.AdnRecord: void <init>(java.lang.String,java.lang.String)>($r7, $r6);

        r4 = $r5;

        $i0 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMailboxIndex>;

        if $i0 == 0 goto label2;

        $i1 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMailboxIndex>;

        if $i1 == 255 goto label2;

        $r13 = new com.android.internal.telephony.uicc.AdnRecordLoader;

        $r14 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.IccFileHandler mFh>;

        specialinvoke $r13.<com.android.internal.telephony.uicc.AdnRecordLoader: void <init>(com.android.internal.telephony.uicc.IccFileHandler)>($r14);

        $i2 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mMailboxIndex>;

        $r15 = virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.Message obtainMessage(int,java.lang.Object)>(20, r3);

        virtualinvoke $r13.<com.android.internal.telephony.uicc.AdnRecordLoader: void updateEF(com.android.internal.telephony.uicc.AdnRecord,int,int,int,java.lang.String,android.os.Message)>(r4, 28615, 28616, $i2, null, $r15);

        return;

     label2:
        $z1 = specialinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: boolean isCphsMailboxEnabled()>();

        if $z1 == 0 goto label3;

        $r10 = new com.android.internal.telephony.uicc.AdnRecordLoader;

        $r11 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.IccFileHandler mFh>;

        specialinvoke $r10.<com.android.internal.telephony.uicc.AdnRecordLoader: void <init>(com.android.internal.telephony.uicc.IccFileHandler)>($r11);

        $r12 = virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.Message obtainMessage(int,java.lang.Object)>(25, r3);

        virtualinvoke $r10.<com.android.internal.telephony.uicc.AdnRecordLoader: void updateEF(com.android.internal.telephony.uicc.AdnRecord,int,int,int,java.lang.String,android.os.Message)>(r4, 28439, 28490, 1, null, $r12);

        return;

     label3:
        $r8 = staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message)>(r3);

        $r9 = new com.android.internal.telephony.uicc.IccVmNotSupportedException;

        specialinvoke $r9.<com.android.internal.telephony.uicc.IccVmNotSupportedException: void <init>(java.lang.String)>("Update SIM voice mailbox error");

        $r8.<android.os.AsyncResult: java.lang.Throwable exception> = $r9;

        virtualinvoke r3.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void setVoiceMessageWaiting(int, int)
    {
        com.android.internal.telephony.uicc.SIMRecords r0;
        int i0, i1, i5, $i7;
        java.lang.ArrayIndexOutOfBoundsException r1, $r20;
        byte[] r2, r3, $r6, $r7, $r8, $r10, $r13, $r14, $r15, $r19;
        short s2, s4, $s10, $s13;
        byte b3, b6, $b8, $b9, $b11, $b12, $b14;
        android.os.RegistrantList $r4;
        java.lang.Integer $r5, $r12, $r17;
        com.android.internal.telephony.uicc.IccFileHandler $r9, $r16;
        android.os.Message $r11, $r18;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 == 1 goto label02;

     label01:
        return;

     label02:
        if i1 >= 0 goto label15;

        i1 = -1;

     label03:
        r0.<com.android.internal.telephony.uicc.SIMRecords: int mCountVoiceMessages> = i1;

        $r4 = r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.RegistrantList mRecordsEventsRegistrants>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke $r4.<android.os.RegistrantList: void notifyResult(java.lang.Object)>($r5);

     label04:
        $r6 = r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfMWIS>;

        if $r6 == null goto label10;

        r3 = r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfMWIS>;

        $r13 = r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfMWIS>;

        $b11 = $r13[0];

        s4 = 254 & $b11;

        i5 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mCountVoiceMessages>;

     label05:
        b6 = 0;

        if i5 != 0 goto label16;

     label06:
        $s13 = b6 | s4;

        $b12 = (byte) $s13;

        r3[0] = $b12;

     label07:
        if i1 >= 0 goto label17;

     label08:
        $r19 = r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfMWIS>;

        $r19[1] = 0;

     label09:
        $r16 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.IccFileHandler mFh>;

        $r15 = r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfMWIS>;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(28618);

        $r18 = virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.Message obtainMessage(int,java.lang.Object)>(14, $r17);

        virtualinvoke $r16.<com.android.internal.telephony.uicc.IccFileHandler: void updateEFLinearFixed(int,int,byte[],java.lang.String,android.os.Message)>(28618, 1, $r15, null, $r18);

     label10:
        $r7 = r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfCPHS_MWI>;

        if $r7 == null goto label01;

        r2 = r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfCPHS_MWI>;

        $r8 = r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfCPHS_MWI>;

        $b8 = $r8[0];

        s2 = 240 & $b8;

        $i7 = r0.<com.android.internal.telephony.uicc.SIMRecords: int mCountVoiceMessages>;

        if $i7 != 0 goto label19;

     label11:
        b3 = 5;

     label12:
        $s10 = b3 | s2;

        $b9 = (byte) $s10;

        r2[0] = $b9;

        $r9 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.IccFileHandler mFh>;

        $r10 = r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfCPHS_MWI>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(28433);

        $r11 = virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: android.os.Message obtainMessage(int,java.lang.Object)>(14, $r12);

        virtualinvoke $r9.<com.android.internal.telephony.uicc.IccFileHandler: void updateEFTransparent(int,byte[],android.os.Message)>(28433, $r10, $r11);

     label13:
        return;

     label14:
        $r20 := @caughtexception;

        r1 = $r20;

        virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: void logw(java.lang.String,java.lang.Throwable)>("Error saving voice mail state to SIM. Probably malformed SIM record", r1);

        return;

     label15:
        if i1 <= 255 goto label03;

        i1 = 255;

        goto label03;

     label16:
        b6 = 1;

        goto label06;

     label17:
        $r14 = r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfMWIS>;

        $b14 = (byte) i1;

        $r14[1] = $b14;

     label18:
        goto label09;

     label19:
        b3 = 10;

        goto label12;

        catch java.lang.ArrayIndexOutOfBoundsException from label04 to label05 with label14;
        catch java.lang.ArrayIndexOutOfBoundsException from label06 to label07 with label14;
        catch java.lang.ArrayIndexOutOfBoundsException from label08 to label09 with label14;
        catch java.lang.ArrayIndexOutOfBoundsException from label09 to label10 with label14;
        catch java.lang.ArrayIndexOutOfBoundsException from label10 to label11 with label14;
        catch java.lang.ArrayIndexOutOfBoundsException from label12 to label13 with label14;
        catch java.lang.ArrayIndexOutOfBoundsException from label17 to label18 with label14;
    }

    public java.lang.String toString()
    {
        com.android.internal.telephony.uicc.SIMRecords r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r14, $r16, $r17, $r18, $r19, $r21, $r22, $r23, $r24, $r27, $r28, $r29, $r30, $r33, $r34;
        java.lang.String $r3, $r31, $r35;
        com.android.internal.telephony.uicc.VoiceMailConstants $r6;
        boolean $z0, $z1;
        com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState $r13;
        byte[] $r15, $r20, $r25, $r26, $r32;

        r0 := @this: com.android.internal.telephony.uicc.SIMRecords;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SimRecords: ");

        $r3 = specialinvoke r0.<com.android.internal.telephony.uicc.IccRecords: java.lang.String toString()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mVmConfig");

        $r6 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.VoiceMailConstants mVmConfig>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSpnOverride=");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mSpnOverride");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" callForwardingEnabled=");

        $z0 = r0.<com.android.internal.telephony.uicc.SIMRecords: boolean mCallForwardingEnabled>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" spnState=");

        $r13 = r0.<com.android.internal.telephony.uicc.SIMRecords: com.android.internal.telephony.uicc.SIMRecords$GetSpnFsmState mSpnState>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCphsInfo=");

        $r15 = r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mCphsInfo>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCspPlmnEnabled=");

        $z1 = r0.<com.android.internal.telephony.uicc.SIMRecords: boolean mCspPlmnEnabled>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" efMWIS=");

        $r20 = r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfMWIS>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" efCPHS_MWI=");

        $r25 = r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfCPHS_MWI>;

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mEfCff=");

        $r26 = r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfCff>;

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mEfCfis=");

        $r32 = r0.<com.android.internal.telephony.uicc.SIMRecords: byte[] mEfCfis>;

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r32);

        $r30 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" getOperatorNumeric=");

        $r31 = virtualinvoke r0.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String getOperatorNumeric()>();

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r35;
    }
}
