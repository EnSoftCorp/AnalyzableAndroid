public class com.android.internal.telephony.WapPushOverSms extends java.lang.Object implements android.content.ServiceConnection
{
    private static final boolean DBG;
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    private volatile com.android.internal.telephony.IWapPushManager mWapPushManager;

    public void <init>(android.content.Context)
    {
        com.android.internal.telephony.WapPushOverSms r0;
        android.content.Context r1;
        android.content.Intent r2, r9;
        android.content.ComponentName r3;
        java.lang.Class $r5;
        java.lang.String $r6;
        android.content.pm.PackageManager $r7;
        boolean $z0;
        android.content.ServiceConnection r10;

        r0 := @this: com.android.internal.telephony.WapPushOverSms;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.telephony.WapPushOverSms: android.content.Context mContext> = r1;

        r9 = new android.content.Intent;

        $r5 = class "com/android/internal/telephony/IWapPushManager";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        specialinvoke r9.<android.content.Intent: void <init>(java.lang.String)>($r6);

        r2 = r9;

        $r7 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r3 = virtualinvoke r2.<android.content.Intent: android.content.ComponentName resolveSystemService(android.content.pm.PackageManager,int)>($r7, 0);

        virtualinvoke r2.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r3);

        if r3 == null goto label1;

        r10 = (android.content.ServiceConnection) r0;

        $z0 = virtualinvoke r1.<android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>(r2, r10, 1);

        if $z0 != 0 goto label2;

     label1:
        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("WAP PUSH", "bindService() for wappush manager failed");

        return;

     label2:
        staticinvoke <android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("WAP PUSH", "bindService() for wappush manager succeeded");

        return;
    }

    public int dispatchWapPdu(byte[], android.content.BroadcastReceiver, com.android.internal.telephony.InboundSmsHandler)
    {
        com.android.internal.telephony.WapPushOverSms r0;
        byte[] r1, r7, r8;
        android.content.BroadcastReceiver r2;
        com.android.internal.telephony.InboundSmsHandler r3;
        java.lang.ArrayIndexOutOfBoundsException r4, $r73, $r80;
        byte b1, b9, b13, $b18, $b40;
        short s2, s4;
        int i3, i5, i6, i8, i10, i11, i12, i14, $i16, $i19, $i20, $i21, $i22, $i23, $i24, $i26, $i32, $i37, $i38, i45;
        com.android.internal.telephony.WspTypeDecoder r5, $r20;
        long l7, $l15, $l28, $l33;
        java.lang.String r6, r9, r12, r13, $r17, $r22, $r33, $r38, $r41, $r43, $r57, $r68, $r70, $r74, $r82;
        android.content.Intent r10, r16, $r24, $r42;
        android.content.ComponentName r11;
        com.android.internal.telephony.IWapPushManager r14;
        boolean z0, $z1, $z2, $z3, $z4, $z6;
        java.lang.StringBuilder $r18, $r19, $r21, $r34, $r35, $r36, $r37, $r39, $r40, $r44, $r45, $r46, $r47, $r54, $r55, $r56, $r58, $r59, $r60, $r61, $r62, $r65, $r66, $r67, $r71, $r72, $r75, $r76, $r77, $r78, $r79, $r81;
        android.content.Context $r27, $r63;
        java.util.HashMap $r32, $r49;
        android.content.res.Resources $r64;
        android.os.RemoteException $r69;

        r0 := @this: com.android.internal.telephony.WapPushOverSms;

        r1 := @parameter0: byte[];

        r2 := @parameter1: android.content.BroadcastReceiver;

        r3 := @parameter2: com.android.internal.telephony.InboundSmsHandler;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Rx: ");

        $r17 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: java.lang.String bytesToHexString(byte[])>(r1);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("WAP PUSH", $r22);

     label01:
        b1 = r1[0];

     label02:
        s2 = b1 & 255;

        i3 = 2;

     label03:
        $b18 = r1[1];

        s4 = 255 & $b18;

     label04:
        if s4 == 6 goto label15;

        if s4 == 7 goto label15;

     label05:
        $r63 = r0.<com.android.internal.telephony.WapPushOverSms: android.content.Context mContext>;

        $r64 = virtualinvoke $r63.<android.content.Context: android.content.res.Resources getResources()>();

        i14 = virtualinvoke $r64.<android.content.res.Resources: int getInteger(int)>(17694792);

     label06:
        if i14 == -1 goto label13;

        i45 = i14 + 1;

     label07:
        b13 = r1[i14];

     label08:
        s2 = b13 & 255;

        i3 = i45 + 1;

     label09:
        $b40 = r1[i45];

        s4 = 255 & $b40;

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("index = ");

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" PDU Type = ");

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s4);

        $r76 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" transactionID = ");

        $r75 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s2);

        $r74 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("WAP PUSH", $r74);

     label10:
        if s4 == 6 goto label15;

        if s4 == 7 goto label15;

     label11:
        $r79 = new java.lang.StringBuilder;

        specialinvoke $r79.<java.lang.StringBuilder: void <init>()>();

        $r78 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received non-PUSH WAP PDU. Type = ");

        $r77 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s4);

        $r70 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("WAP PUSH", $r70);

     label12:
        return 1;

     label13:
        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received non-PUSH WAP PDU. Type = ");

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s4);

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("WAP PUSH", $r68);

     label14:
        return 1;

     label15:
        $r20 = new com.android.internal.telephony.WspTypeDecoder;

        specialinvoke $r20.<com.android.internal.telephony.WspTypeDecoder: void <init>(byte[])>(r1);

        r5 = $r20;

        $z1 = virtualinvoke r5.<com.android.internal.telephony.WspTypeDecoder: boolean decodeUintvarInteger(int)>(i3);

        if $z1 != 0 goto label17;

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("WAP PUSH", "Received PDU. Header Length error.");

     label16:
        return 2;

     label17:
        $l15 = virtualinvoke r5.<com.android.internal.telephony.WspTypeDecoder: long getValue32()>();

        i5 = (int) $l15;

        $i16 = virtualinvoke r5.<com.android.internal.telephony.WspTypeDecoder: int getDecodedDataLength()>();

        i6 = i3 + $i16;

        $z2 = virtualinvoke r5.<com.android.internal.telephony.WspTypeDecoder: boolean decodeContentType(int)>(i6);

        if $z2 != 0 goto label19;

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("WAP PUSH", "Received PDU. Header Content-Type error.");

     label18:
        return 2;

     label19:
        r6 = virtualinvoke r5.<com.android.internal.telephony.WspTypeDecoder: java.lang.String getValueString()>();

        l7 = virtualinvoke r5.<com.android.internal.telephony.WspTypeDecoder: long getValue32()>();

        $i23 = virtualinvoke r5.<com.android.internal.telephony.WspTypeDecoder: int getDecodedDataLength()>();

        i8 = i6 + $i23;

        r8 = newarray (byte)[i5];

        $i19 = lengthof r8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i6, r8, 0, $i19);

     label20:
        if r6 == null goto label34;

     label21:
        $z6 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("application/vnd.wap.coc");

        if $z6 == 0 goto label34;

     label22:
        r7 = r1;

     label23:
        $i22 = i8 + i5;

        $i24 = -1 + $i22;

        $z3 = virtualinvoke r5.<com.android.internal.telephony.WspTypeDecoder: boolean seekXWapApplicationId(int,int)>(i8, $i24);

        if $z3 == 0 goto label44;

        $l28 = virtualinvoke r5.<com.android.internal.telephony.WspTypeDecoder: long getValue32()>();

        $i26 = (int) $l28;

        virtualinvoke r5.<com.android.internal.telephony.WspTypeDecoder: boolean decodeXWapApplicationId(int)>($i26);

        r13 = virtualinvoke r5.<com.android.internal.telephony.WspTypeDecoder: java.lang.String getValueString()>();

     label24:
        if r13 != null goto label26;

     label25:
        $l33 = virtualinvoke r5.<com.android.internal.telephony.WspTypeDecoder: long getValue32()>();

        $i32 = (int) $l33;

        r13 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i32);

     label26:
        if r6 != null goto label39;

     label27:
        r12 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l7);

     label28:
        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("appid found: ");

        $r46 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("WAP PUSH", $r43);

     label29:
        z0 = 1;

     label30:
        r14 = r0.<com.android.internal.telephony.WapPushOverSms: com.android.internal.telephony.IWapPushManager mWapPushManager>;

     label31:
        if r14 != null goto label40;

     label32:
        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("WAP PUSH", "wap push manager not found!");

     label33:
        if z0 != 0 goto label44;

        return 1;

     label34:
        i12 = i6 + i5;

     label35:
        $i20 = lengthof r1;

        $i21 = $i20 - i12;

        r7 = newarray (byte)[$i21];

        i11 = lengthof r7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i12, r7, 0, i11);

     label36:
        goto label23;

     label37:
        $r80 := @caughtexception;

        r4 = $r80;

     label38:
        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        $r71 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ignoring dispatchWapPdu() array index exception: ");

        $r81 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("WAP PUSH", $r82);

        return 2;

     label39:
        r12 = r6;

        goto label28;

     label40:
        $r42 = new android.content.Intent;

        specialinvoke $r42.<android.content.Intent: void <init>()>();

        r16 = $r42;

        virtualinvoke r16.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("transactionId", s2);

        virtualinvoke r16.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("pduType", s4);

        virtualinvoke r16.<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])>("header", r8);

        virtualinvoke r16.<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])>("data", r7);

        $r49 = virtualinvoke r5.<com.android.internal.telephony.WspTypeDecoder: java.util.HashMap getContentParameters()>();

        virtualinvoke r16.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>("contentTypeParameters", $r49);

        i10 = interfaceinvoke r14.<com.android.internal.telephony.IWapPushManager: int processMessage(java.lang.String,java.lang.String,android.content.Intent)>(r13, r12, r16);

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("procRet:");

        $r55 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10);

        $r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("WAP PUSH", $r57);

     label41:
        $i38 = i10 & 1;

        if $i38 <= 0 goto label33;

        $i37 = 32768 & i10;

        if $i37 != 0 goto label33;

        z0 = 0;

        goto label33;

     label42:
        $r69 := @caughtexception;

     label43:
        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("WAP PUSH", "remote func failed...");

     label44:
        staticinvoke <android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("WAP PUSH", "fall back to existing handler");

     label45:
        if r6 != null goto label48;

     label46:
        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("WAP PUSH", "Header Content-Type error.");

     label47:
        return 2;

     label48:
        $z4 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("application/vnd.wap.mms-message");

        if $z4 == 0 goto label55;

     label49:
        r9 = "android.permission.RECEIVE_MMS";

        b9 = 18;

     label50:
        $r24 = new android.content.Intent;

        specialinvoke $r24.<android.content.Intent: void <init>(java.lang.String)>("android.provider.Telephony.WAP_PUSH_DELIVER");

        r10 = $r24;

        virtualinvoke r10.<android.content.Intent: android.content.Intent setType(java.lang.String)>(r6);

        virtualinvoke r10.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("transactionId", s2);

        virtualinvoke r10.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("pduType", s4);

        virtualinvoke r10.<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])>("header", r8);

        virtualinvoke r10.<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])>("data", r7);

        $r32 = virtualinvoke r5.<com.android.internal.telephony.WspTypeDecoder: java.util.HashMap getContentParameters()>();

        virtualinvoke r10.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>("contentTypeParameters", $r32);

        $r27 = r0.<com.android.internal.telephony.WapPushOverSms: android.content.Context mContext>;

        r11 = staticinvoke <com.android.internal.telephony.SmsApplication: android.content.ComponentName getDefaultMmsApplication(android.content.Context,boolean)>($r27, 1);

     label51:
        if r11 == null goto label53;

     label52:
        virtualinvoke r10.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r11);

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Delivering MMS to: ");

        $r38 = virtualinvoke r11.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r35 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r33 = virtualinvoke r11.<android.content.ComponentName: java.lang.String getClassName()>();

        $r34 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r41 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("WAP PUSH", $r41);

     label53:
        virtualinvoke r3.<com.android.internal.telephony.InboundSmsHandler: void dispatchIntent(android.content.Intent,java.lang.String,int,android.content.BroadcastReceiver)>(r10, r9, b9, r2);

     label54:
        return -1;

     label55:
        r9 = "android.permission.RECEIVE_WAP_PUSH";

        b9 = 19;

        goto label50;

     label56:
        $r73 := @caughtexception;

        r4 = $r73;

        goto label38;

        catch java.lang.ArrayIndexOutOfBoundsException from label01 to label02 with label56;
        catch java.lang.ArrayIndexOutOfBoundsException from label03 to label04 with label37;
        catch java.lang.ArrayIndexOutOfBoundsException from label05 to label06 with label37;
        catch java.lang.ArrayIndexOutOfBoundsException from label07 to label08 with label56;
        catch java.lang.ArrayIndexOutOfBoundsException from label09 to label10 with label37;
        catch java.lang.ArrayIndexOutOfBoundsException from label11 to label12 with label37;
        catch java.lang.ArrayIndexOutOfBoundsException from label13 to label14 with label37;
        catch java.lang.ArrayIndexOutOfBoundsException from label15 to label16 with label37;
        catch java.lang.ArrayIndexOutOfBoundsException from label17 to label18 with label37;
        catch java.lang.ArrayIndexOutOfBoundsException from label19 to label20 with label37;
        catch java.lang.ArrayIndexOutOfBoundsException from label21 to label22 with label37;
        catch java.lang.ArrayIndexOutOfBoundsException from label23 to label24 with label37;
        catch java.lang.ArrayIndexOutOfBoundsException from label25 to label26 with label37;
        catch java.lang.ArrayIndexOutOfBoundsException from label27 to label28 with label37;
        catch java.lang.ArrayIndexOutOfBoundsException from label28 to label29 with label37;
        catch android.os.RemoteException from label30 to label31 with label42;
        catch java.lang.ArrayIndexOutOfBoundsException from label30 to label31 with label37;
        catch android.os.RemoteException from label32 to label33 with label42;
        catch java.lang.ArrayIndexOutOfBoundsException from label32 to label33 with label37;
        catch java.lang.ArrayIndexOutOfBoundsException from label35 to label36 with label37;
        catch android.os.RemoteException from label40 to label41 with label42;
        catch java.lang.ArrayIndexOutOfBoundsException from label40 to label41 with label37;
        catch java.lang.ArrayIndexOutOfBoundsException from label43 to label44 with label37;
        catch java.lang.ArrayIndexOutOfBoundsException from label44 to label45 with label37;
        catch java.lang.ArrayIndexOutOfBoundsException from label46 to label47 with label37;
        catch java.lang.ArrayIndexOutOfBoundsException from label48 to label49 with label37;
        catch java.lang.ArrayIndexOutOfBoundsException from label50 to label51 with label37;
        catch java.lang.ArrayIndexOutOfBoundsException from label52 to label53 with label37;
        catch java.lang.ArrayIndexOutOfBoundsException from label53 to label54 with label37;
    }

    void dispose()
    {
        com.android.internal.telephony.WapPushOverSms r0;
        com.android.internal.telephony.IWapPushManager $r1;
        android.content.Context $r2;
        android.content.ServiceConnection r3;

        r0 := @this: com.android.internal.telephony.WapPushOverSms;

        $r1 = r0.<com.android.internal.telephony.WapPushOverSms: com.android.internal.telephony.IWapPushManager mWapPushManager>;

        if $r1 == null goto label1;

        staticinvoke <android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("WAP PUSH", "dispose: unbind wappush manager");

        $r2 = r0.<com.android.internal.telephony.WapPushOverSms: android.content.Context mContext>;

        r3 = (android.content.ServiceConnection) r0;

        virtualinvoke $r2.<android.content.Context: void unbindService(android.content.ServiceConnection)>(r3);

        return;

     label1:
        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("WAP PUSH", "dispose: not bound to a wappush manager");

        return;
    }

    public void onServiceConnected(android.content.ComponentName, android.os.IBinder)
    {
        com.android.internal.telephony.WapPushOverSms r0;
        android.content.ComponentName r1;
        android.os.IBinder r2;
        com.android.internal.telephony.IWapPushManager $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        int $i0;
        java.lang.String $r7;

        r0 := @this: com.android.internal.telephony.WapPushOverSms;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.os.IBinder;

        $r3 = staticinvoke <com.android.internal.telephony.IWapPushManager$Stub: com.android.internal.telephony.IWapPushManager asInterface(android.os.IBinder)>(r2);

        r0.<com.android.internal.telephony.WapPushOverSms: com.android.internal.telephony.IWapPushManager mWapPushManager> = $r3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("wappush manager connected to ");

        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("WAP PUSH", $r7);

        return;
    }

    public void onServiceDisconnected(android.content.ComponentName)
    {
        com.android.internal.telephony.WapPushOverSms r0;
        android.content.ComponentName r1;

        r0 := @this: com.android.internal.telephony.WapPushOverSms;

        r1 := @parameter0: android.content.ComponentName;

        r0.<com.android.internal.telephony.WapPushOverSms: com.android.internal.telephony.IWapPushManager mWapPushManager> = null;

        staticinvoke <android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("WAP PUSH", "wappush manager disconnected.");

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.WapPushOverSms: java.lang.String TAG> = "WAP PUSH";

        <com.android.internal.telephony.WapPushOverSms: boolean DBG> = 1;

        return;
    }
}
