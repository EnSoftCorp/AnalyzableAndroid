public class android.net.wifi.WifiWatchdogStateMachine extends com.android.internal.util.StateMachine
{
    private static final int BASE;
    private static final int BSSID_STAT_CACHE_SIZE;
    private static final int BSSID_STAT_EMPTY_COUNT;
    private static final int BSSID_STAT_RANGE_HIGH_DBM;
    private static final int BSSID_STAT_RANGE_LOW_DBM;
    private static final int CMD_RSSI_FETCH;
    private static final boolean DBG;
    public static final boolean DEFAULT_POOR_NETWORK_AVOIDANCE_ENABLED;
    private static final int EVENT_BSSID_CHANGE;
    private static final int EVENT_NETWORK_STATE_CHANGE;
    private static final int EVENT_RSSI_CHANGE;
    private static final int EVENT_SCREEN_OFF;
    private static final int EVENT_SCREEN_ON;
    private static final int EVENT_SUPPLICANT_STATE_CHANGE;
    private static final int EVENT_WATCHDOG_SETTINGS_CHANGE;
    private static final int EVENT_WATCHDOG_TOGGLED;
    private static final int EVENT_WIFI_RADIO_STATE_CHANGE;
    private static final double EXP_COEFFICIENT_MONITOR;
    private static final double EXP_COEFFICIENT_RECORD;
    static final int GOOD_LINK_DETECTED;
    private static final double GOOD_LINK_LOSS_THRESHOLD;
    private static final int GOOD_LINK_RSSI_RANGE_MAX;
    private static final int GOOD_LINK_RSSI_RANGE_MIN;
    private static final android.net.wifi.WifiWatchdogStateMachine$GoodLinkTarget[] GOOD_LINK_TARGET;
    private static final int LINK_MONITOR_LEVEL_THRESHOLD;
    private static final long LINK_SAMPLING_INTERVAL_MS;
    private static final android.net.wifi.WifiWatchdogStateMachine$MaxAvoidTime[] MAX_AVOID_TIME;
    static final int POOR_LINK_DETECTED;
    private static final double POOR_LINK_LOSS_THRESHOLD;
    private static final double POOR_LINK_MIN_VOLUME;
    private static final int POOR_LINK_SAMPLE_COUNT;
    private static double[] sPresetLoss;
    private static boolean sWifiOnly;
    private android.content.BroadcastReceiver mBroadcastReceiver;
    private android.util.LruCache mBssidCache;
    private android.net.wifi.WifiWatchdogStateMachine$ConnectedState mConnectedState;
    private android.content.ContentResolver mContentResolver;
    private android.content.Context mContext;
    private android.net.wifi.WifiWatchdogStateMachine$BssidStatistics mCurrentBssid;
    private android.net.wifi.WifiWatchdogStateMachine$VolumeWeightedEMA mCurrentLoss;
    private int mCurrentSignalLevel;
    private android.net.wifi.WifiWatchdogStateMachine$DefaultState mDefaultState;
    private android.content.IntentFilter mIntentFilter;
    private boolean mIsScreenOn;
    private android.net.wifi.WifiWatchdogStateMachine$LinkMonitoringState mLinkMonitoringState;
    private android.net.LinkProperties mLinkProperties;
    private android.net.wifi.WifiWatchdogStateMachine$NotConnectedState mNotConnectedState;
    private android.net.wifi.WifiWatchdogStateMachine$OnlineState mOnlineState;
    private android.net.wifi.WifiWatchdogStateMachine$OnlineWatchState mOnlineWatchState;
    private boolean mPoorNetworkDetectionEnabled;
    private int mRssiFetchToken;
    private android.net.wifi.WifiWatchdogStateMachine$VerifyingLinkState mVerifyingLinkState;
    private android.net.wifi.WifiWatchdogStateMachine$WatchdogDisabledState mWatchdogDisabledState;
    private android.net.wifi.WifiWatchdogStateMachine$WatchdogEnabledState mWatchdogEnabledState;
    private android.net.wifi.WifiInfo mWifiInfo;
    private android.net.wifi.WifiManager mWifiManager;
    private com.android.internal.util.AsyncChannel mWsmChannel;

    static void <clinit>()
    {
        android.net.wifi.WifiWatchdogStateMachine$GoodLinkTarget[] r0;
        android.net.wifi.WifiWatchdogStateMachine$MaxAvoidTime[] r1;
        android.net.wifi.WifiWatchdogStateMachine$GoodLinkTarget $r2, $r3, $r4, $r5;
        android.net.wifi.WifiWatchdogStateMachine$MaxAvoidTime $r6, $r7, $r8;

        <android.net.wifi.WifiWatchdogStateMachine: int POOR_LINK_SAMPLE_COUNT> = 3;

        <android.net.wifi.WifiWatchdogStateMachine: double POOR_LINK_MIN_VOLUME> = 2.0;

        <android.net.wifi.WifiWatchdogStateMachine: double POOR_LINK_LOSS_THRESHOLD> = 0.5;

        <android.net.wifi.WifiWatchdogStateMachine: int POOR_LINK_DETECTED> = 135189;

        <android.net.wifi.WifiWatchdogStateMachine: long LINK_SAMPLING_INTERVAL_MS> = 1000L;

        <android.net.wifi.WifiWatchdogStateMachine: int LINK_MONITOR_LEVEL_THRESHOLD> = 4;

        <android.net.wifi.WifiWatchdogStateMachine: int GOOD_LINK_RSSI_RANGE_MIN> = 3;

        <android.net.wifi.WifiWatchdogStateMachine: int GOOD_LINK_RSSI_RANGE_MAX> = 20;

        <android.net.wifi.WifiWatchdogStateMachine: double GOOD_LINK_LOSS_THRESHOLD> = 0.1;

        <android.net.wifi.WifiWatchdogStateMachine: int GOOD_LINK_DETECTED> = 135190;

        <android.net.wifi.WifiWatchdogStateMachine: double EXP_COEFFICIENT_RECORD> = 0.1;

        <android.net.wifi.WifiWatchdogStateMachine: double EXP_COEFFICIENT_MONITOR> = 0.5;

        <android.net.wifi.WifiWatchdogStateMachine: int EVENT_WIFI_RADIO_STATE_CHANGE> = 135173;

        <android.net.wifi.WifiWatchdogStateMachine: int EVENT_WATCHDOG_TOGGLED> = 135169;

        <android.net.wifi.WifiWatchdogStateMachine: int EVENT_WATCHDOG_SETTINGS_CHANGE> = 135174;

        <android.net.wifi.WifiWatchdogStateMachine: int EVENT_SUPPLICANT_STATE_CHANGE> = 135172;

        <android.net.wifi.WifiWatchdogStateMachine: int EVENT_SCREEN_ON> = 135176;

        <android.net.wifi.WifiWatchdogStateMachine: int EVENT_SCREEN_OFF> = 135177;

        <android.net.wifi.WifiWatchdogStateMachine: int EVENT_RSSI_CHANGE> = 135171;

        <android.net.wifi.WifiWatchdogStateMachine: int EVENT_NETWORK_STATE_CHANGE> = 135170;

        <android.net.wifi.WifiWatchdogStateMachine: int EVENT_BSSID_CHANGE> = 135175;

        <android.net.wifi.WifiWatchdogStateMachine: boolean DEFAULT_POOR_NETWORK_AVOIDANCE_ENABLED> = 0;

        <android.net.wifi.WifiWatchdogStateMachine: boolean DBG> = 0;

        <android.net.wifi.WifiWatchdogStateMachine: int CMD_RSSI_FETCH> = 135179;

        <android.net.wifi.WifiWatchdogStateMachine: int BSSID_STAT_RANGE_LOW_DBM> = -105;

        <android.net.wifi.WifiWatchdogStateMachine: int BSSID_STAT_RANGE_HIGH_DBM> = -45;

        <android.net.wifi.WifiWatchdogStateMachine: int BSSID_STAT_EMPTY_COUNT> = 3;

        <android.net.wifi.WifiWatchdogStateMachine: int BSSID_STAT_CACHE_SIZE> = 20;

        <android.net.wifi.WifiWatchdogStateMachine: int BASE> = 135168;

        r0 = newarray (android.net.wifi.WifiWatchdogStateMachine$GoodLinkTarget)[4];

        $r2 = new android.net.wifi.WifiWatchdogStateMachine$GoodLinkTarget;

        specialinvoke $r2.<android.net.wifi.WifiWatchdogStateMachine$GoodLinkTarget: void <init>(int,int,int)>(0, 3, 1800000);

        r0[0] = $r2;

        $r3 = new android.net.wifi.WifiWatchdogStateMachine$GoodLinkTarget;

        specialinvoke $r3.<android.net.wifi.WifiWatchdogStateMachine$GoodLinkTarget: void <init>(int,int,int)>(3, 5, 300000);

        r0[1] = $r3;

        $r4 = new android.net.wifi.WifiWatchdogStateMachine$GoodLinkTarget;

        specialinvoke $r4.<android.net.wifi.WifiWatchdogStateMachine$GoodLinkTarget: void <init>(int,int,int)>(6, 10, 60000);

        r0[2] = $r4;

        $r5 = new android.net.wifi.WifiWatchdogStateMachine$GoodLinkTarget;

        specialinvoke $r5.<android.net.wifi.WifiWatchdogStateMachine$GoodLinkTarget: void <init>(int,int,int)>(9, 30, 0);

        r0[3] = $r5;

        <android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$GoodLinkTarget[] GOOD_LINK_TARGET> = r0;

        r1 = newarray (android.net.wifi.WifiWatchdogStateMachine$MaxAvoidTime)[3];

        $r6 = new android.net.wifi.WifiWatchdogStateMachine$MaxAvoidTime;

        specialinvoke $r6.<android.net.wifi.WifiWatchdogStateMachine$MaxAvoidTime: void <init>(int,int)>(1800000, -200);

        r1[0] = $r6;

        $r7 = new android.net.wifi.WifiWatchdogStateMachine$MaxAvoidTime;

        specialinvoke $r7.<android.net.wifi.WifiWatchdogStateMachine$MaxAvoidTime: void <init>(int,int)>(300000, -70);

        r1[1] = $r7;

        $r8 = new android.net.wifi.WifiWatchdogStateMachine$MaxAvoidTime;

        specialinvoke $r8.<android.net.wifi.WifiWatchdogStateMachine$MaxAvoidTime: void <init>(int,int)>(0, -55);

        r1[2] = $r8;

        <android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$MaxAvoidTime[] MAX_AVOID_TIME> = r1;

        <android.net.wifi.WifiWatchdogStateMachine: boolean sWifiOnly> = 0;

        return;
    }

    private void <init>(android.content.Context)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        android.content.Context r1, $r16;
        com.android.internal.util.AsyncChannel $r2, $r17;
        android.util.LruCache $r3;
        android.net.wifi.WifiWatchdogStateMachine$DefaultState $r4, $r21, $r22, $r23;
        android.net.wifi.WifiWatchdogStateMachine$WatchdogDisabledState $r5, $r24, $r38;
        android.net.wifi.WifiWatchdogStateMachine$WatchdogEnabledState $r6, $r25, $r26, $r27, $r29;
        android.net.wifi.WifiWatchdogStateMachine$NotConnectedState $r7, $r28, $r39;
        android.net.wifi.WifiWatchdogStateMachine$VerifyingLinkState $r8, $r30;
        android.net.wifi.WifiWatchdogStateMachine$ConnectedState $r9, $r32, $r33, $r34, $r37;
        android.net.wifi.WifiWatchdogStateMachine$OnlineWatchState $r10, $r31;
        android.net.wifi.WifiWatchdogStateMachine$LinkMonitoringState $r11, $r36;
        android.net.wifi.WifiWatchdogStateMachine$OnlineState $r12, $r35;
        android.content.ContentResolver $r13;
        java.lang.Object $r14;
        android.net.wifi.WifiManager $r15, $r18;
        android.os.Handler $r19;
        android.os.Messenger $r20;
        boolean $z0;

        r0 := @this: android.net.wifi.WifiWatchdogStateMachine;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.internal.util.StateMachine: void <init>(java.lang.String)>("WifiWatchdogStateMachine");

        $r2 = new com.android.internal.util.AsyncChannel;

        specialinvoke $r2.<com.android.internal.util.AsyncChannel: void <init>()>();

        r0.<android.net.wifi.WifiWatchdogStateMachine: com.android.internal.util.AsyncChannel mWsmChannel> = $r2;

        $r3 = new android.util.LruCache;

        specialinvoke $r3.<android.util.LruCache: void <init>(int)>(20);

        r0.<android.net.wifi.WifiWatchdogStateMachine: android.util.LruCache mBssidCache> = $r3;

        r0.<android.net.wifi.WifiWatchdogStateMachine: int mRssiFetchToken> = 0;

        r0.<android.net.wifi.WifiWatchdogStateMachine: boolean mIsScreenOn> = 1;

        $r4 = new android.net.wifi.WifiWatchdogStateMachine$DefaultState;

        specialinvoke $r4.<android.net.wifi.WifiWatchdogStateMachine$DefaultState: void <init>(android.net.wifi.WifiWatchdogStateMachine)>(r0);

        r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$DefaultState mDefaultState> = $r4;

        $r5 = new android.net.wifi.WifiWatchdogStateMachine$WatchdogDisabledState;

        specialinvoke $r5.<android.net.wifi.WifiWatchdogStateMachine$WatchdogDisabledState: void <init>(android.net.wifi.WifiWatchdogStateMachine)>(r0);

        r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$WatchdogDisabledState mWatchdogDisabledState> = $r5;

        $r6 = new android.net.wifi.WifiWatchdogStateMachine$WatchdogEnabledState;

        specialinvoke $r6.<android.net.wifi.WifiWatchdogStateMachine$WatchdogEnabledState: void <init>(android.net.wifi.WifiWatchdogStateMachine)>(r0);

        r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$WatchdogEnabledState mWatchdogEnabledState> = $r6;

        $r7 = new android.net.wifi.WifiWatchdogStateMachine$NotConnectedState;

        specialinvoke $r7.<android.net.wifi.WifiWatchdogStateMachine$NotConnectedState: void <init>(android.net.wifi.WifiWatchdogStateMachine)>(r0);

        r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$NotConnectedState mNotConnectedState> = $r7;

        $r8 = new android.net.wifi.WifiWatchdogStateMachine$VerifyingLinkState;

        specialinvoke $r8.<android.net.wifi.WifiWatchdogStateMachine$VerifyingLinkState: void <init>(android.net.wifi.WifiWatchdogStateMachine)>(r0);

        r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$VerifyingLinkState mVerifyingLinkState> = $r8;

        $r9 = new android.net.wifi.WifiWatchdogStateMachine$ConnectedState;

        specialinvoke $r9.<android.net.wifi.WifiWatchdogStateMachine$ConnectedState: void <init>(android.net.wifi.WifiWatchdogStateMachine)>(r0);

        r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$ConnectedState mConnectedState> = $r9;

        $r10 = new android.net.wifi.WifiWatchdogStateMachine$OnlineWatchState;

        specialinvoke $r10.<android.net.wifi.WifiWatchdogStateMachine$OnlineWatchState: void <init>(android.net.wifi.WifiWatchdogStateMachine)>(r0);

        r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$OnlineWatchState mOnlineWatchState> = $r10;

        $r11 = new android.net.wifi.WifiWatchdogStateMachine$LinkMonitoringState;

        specialinvoke $r11.<android.net.wifi.WifiWatchdogStateMachine$LinkMonitoringState: void <init>(android.net.wifi.WifiWatchdogStateMachine)>(r0);

        r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$LinkMonitoringState mLinkMonitoringState> = $r11;

        $r12 = new android.net.wifi.WifiWatchdogStateMachine$OnlineState;

        specialinvoke $r12.<android.net.wifi.WifiWatchdogStateMachine$OnlineState: void <init>(android.net.wifi.WifiWatchdogStateMachine)>(r0);

        r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$OnlineState mOnlineState> = $r12;

        r0.<android.net.wifi.WifiWatchdogStateMachine: android.content.Context mContext> = r1;

        $r13 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r0.<android.net.wifi.WifiWatchdogStateMachine: android.content.ContentResolver mContentResolver> = $r13;

        $r14 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("wifi");

        $r15 = (android.net.wifi.WifiManager) $r14;

        r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiManager mWifiManager> = $r15;

        $r17 = r0.<android.net.wifi.WifiWatchdogStateMachine: com.android.internal.util.AsyncChannel mWsmChannel>;

        $r16 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.content.Context mContext>;

        $r19 = virtualinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: android.os.Handler getHandler()>();

        $r18 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiManager mWifiManager>;

        $r20 = virtualinvoke $r18.<android.net.wifi.WifiManager: android.os.Messenger getWifiStateMachineMessenger()>();

        virtualinvoke $r17.<com.android.internal.util.AsyncChannel: int connectSync(android.content.Context,android.os.Handler,android.os.Messenger)>($r16, $r19, $r20);

        specialinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: void setupNetworkReceiver()>();

        specialinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: void registerForSettingsChanges()>();

        specialinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: void registerForWatchdogToggle()>();

        $r22 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$DefaultState mDefaultState>;

        virtualinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: void addState(com.android.internal.util.State)>($r22);

        $r24 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$WatchdogDisabledState mWatchdogDisabledState>;

        $r21 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$DefaultState mDefaultState>;

        virtualinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r24, $r21);

        $r26 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$WatchdogEnabledState mWatchdogEnabledState>;

        $r23 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$DefaultState mDefaultState>;

        virtualinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r26, $r23);

        $r28 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$NotConnectedState mNotConnectedState>;

        $r25 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$WatchdogEnabledState mWatchdogEnabledState>;

        virtualinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r28, $r25);

        $r30 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$VerifyingLinkState mVerifyingLinkState>;

        $r27 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$WatchdogEnabledState mWatchdogEnabledState>;

        virtualinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r30, $r27);

        $r33 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$ConnectedState mConnectedState>;

        $r29 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$WatchdogEnabledState mWatchdogEnabledState>;

        virtualinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r33, $r29);

        $r31 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$OnlineWatchState mOnlineWatchState>;

        $r34 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$ConnectedState mConnectedState>;

        virtualinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r31, $r34);

        $r36 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$LinkMonitoringState mLinkMonitoringState>;

        $r32 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$ConnectedState mConnectedState>;

        virtualinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r36, $r32);

        $r35 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$OnlineState mOnlineState>;

        $r37 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$ConnectedState mConnectedState>;

        virtualinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r35, $r37);

        $z0 = specialinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: boolean isWatchdogEnabled()>();

        if $z0 == 0 goto label2;

        $r39 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$NotConnectedState mNotConnectedState>;

        virtualinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: void setInitialState(com.android.internal.util.State)>($r39);

     label1:
        virtualinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: void setLogRecSize(int)>(25);

        virtualinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: void setLogOnlyTransitions(boolean)>(1);

        specialinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: void updateSettings()>();

        return;

     label2:
        $r38 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$WatchdogDisabledState mWatchdogDisabledState>;

        virtualinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: void setInitialState(com.android.internal.util.State)>($r38);

        goto label1;
    }

    static void access$000(android.net.wifi.WifiWatchdogStateMachine)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        specialinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: void updateSettings()>();

        return;
    }

    static int access$100(android.net.wifi.WifiWatchdogStateMachine)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        int $i0;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        $i0 = r0.<android.net.wifi.WifiWatchdogStateMachine: int mCurrentSignalLevel>;

        return $i0;
    }

    static android.net.wifi.WifiWatchdogStateMachine$WatchdogDisabledState access$1000(android.net.wifi.WifiWatchdogStateMachine)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        android.net.wifi.WifiWatchdogStateMachine$WatchdogDisabledState $r1;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        $r1 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$WatchdogDisabledState mWatchdogDisabledState>;

        return $r1;
    }

    static int access$102(android.net.wifi.WifiWatchdogStateMachine, int)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        int i0;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        i0 := @parameter1: int;

        r0.<android.net.wifi.WifiWatchdogStateMachine: int mCurrentSignalLevel> = i0;

        return i0;
    }

    static void access$1100(android.net.wifi.WifiWatchdogStateMachine, com.android.internal.util.IState)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static android.net.wifi.WifiInfo access$1200(android.net.wifi.WifiWatchdogStateMachine)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        android.net.wifi.WifiInfo $r1;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        $r1 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        return $r1;
    }

    static android.net.wifi.WifiInfo access$1202(android.net.wifi.WifiWatchdogStateMachine, android.net.wifi.WifiInfo)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        android.net.wifi.WifiInfo r1;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        r1 := @parameter1: android.net.wifi.WifiInfo;

        r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiInfo mWifiInfo> = r1;

        return r1;
    }

    static void access$1300(android.net.wifi.WifiWatchdogStateMachine, java.lang.String)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        java.lang.String r1;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: void updateCurrentBssid(java.lang.String)>(r1);

        return;
    }

    static android.net.LinkProperties access$1402(android.net.wifi.WifiWatchdogStateMachine, android.net.LinkProperties)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        android.net.LinkProperties r1;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        r1 := @parameter1: android.net.LinkProperties;

        r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.LinkProperties mLinkProperties> = r1;

        return r1;
    }

    static boolean access$1500(android.net.wifi.WifiWatchdogStateMachine)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        boolean $z0;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        $z0 = r0.<android.net.wifi.WifiWatchdogStateMachine: boolean mPoorNetworkDetectionEnabled>;

        return $z0;
    }

    static android.net.wifi.WifiWatchdogStateMachine$BssidStatistics access$1600(android.net.wifi.WifiWatchdogStateMachine)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        android.net.wifi.WifiWatchdogStateMachine$BssidStatistics $r1;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        $r1 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$BssidStatistics mCurrentBssid>;

        return $r1;
    }

    static void access$1700(android.net.wifi.WifiWatchdogStateMachine, java.lang.String)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        java.lang.String r1;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: void loge(java.lang.String)>(r1);

        return;
    }

    static android.net.wifi.WifiWatchdogStateMachine$VerifyingLinkState access$1800(android.net.wifi.WifiWatchdogStateMachine)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        android.net.wifi.WifiWatchdogStateMachine$VerifyingLinkState $r1;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        $r1 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$VerifyingLinkState mVerifyingLinkState>;

        return $r1;
    }

    static void access$1900(android.net.wifi.WifiWatchdogStateMachine, com.android.internal.util.IState)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static int access$200(android.net.wifi.WifiWatchdogStateMachine, int)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        int i0, $i1;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        i0 := @parameter1: int;

        $i1 = specialinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: int calculateSignalLevel(int)>(i0);

        return $i1;
    }

    static android.net.wifi.WifiWatchdogStateMachine$OnlineWatchState access$2000(android.net.wifi.WifiWatchdogStateMachine)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        android.net.wifi.WifiWatchdogStateMachine$OnlineWatchState $r1;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        $r1 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$OnlineWatchState mOnlineWatchState>;

        return $r1;
    }

    static void access$2100(android.net.wifi.WifiWatchdogStateMachine, com.android.internal.util.IState)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$2200(android.net.wifi.WifiWatchdogStateMachine, com.android.internal.util.IState)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static android.net.wifi.WifiManager access$2300(android.net.wifi.WifiWatchdogStateMachine)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        android.net.wifi.WifiManager $r1;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        $r1 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiManager mWifiManager>;

        return $r1;
    }

    static void access$2400(android.net.wifi.WifiWatchdogStateMachine, com.android.internal.util.IState)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static int access$2500(android.net.wifi.WifiWatchdogStateMachine)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        int $i0;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        $i0 = r0.<android.net.wifi.WifiWatchdogStateMachine: int mRssiFetchToken>;

        return $i0;
    }

    static int access$2504(android.net.wifi.WifiWatchdogStateMachine)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        int i0, $i1;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        $i1 = r0.<android.net.wifi.WifiWatchdogStateMachine: int mRssiFetchToken>;

        i0 = 1 + $i1;

        r0.<android.net.wifi.WifiWatchdogStateMachine: int mRssiFetchToken> = i0;

        return i0;
    }

    static void access$2600(android.net.wifi.WifiWatchdogStateMachine, com.android.internal.util.IState)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static com.android.internal.util.AsyncChannel access$2700(android.net.wifi.WifiWatchdogStateMachine)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        com.android.internal.util.AsyncChannel $r1;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        $r1 = r0.<android.net.wifi.WifiWatchdogStateMachine: com.android.internal.util.AsyncChannel mWsmChannel>;

        return $r1;
    }

    static boolean access$300(android.net.wifi.WifiWatchdogStateMachine)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        boolean $z0;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        $z0 = r0.<android.net.wifi.WifiWatchdogStateMachine: boolean mIsScreenOn>;

        return $z0;
    }

    static boolean access$302(android.net.wifi.WifiWatchdogStateMachine, boolean)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        boolean z0;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        z0 := @parameter1: boolean;

        r0.<android.net.wifi.WifiWatchdogStateMachine: boolean mIsScreenOn> = z0;

        return z0;
    }

    static void access$3100(android.net.wifi.WifiWatchdogStateMachine, com.android.internal.util.IState)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static android.net.wifi.WifiWatchdogStateMachine$OnlineState access$3200(android.net.wifi.WifiWatchdogStateMachine)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        android.net.wifi.WifiWatchdogStateMachine$OnlineState $r1;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        $r1 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$OnlineState mOnlineState>;

        return $r1;
    }

    static void access$3300(android.net.wifi.WifiWatchdogStateMachine, com.android.internal.util.IState)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$3400(android.net.wifi.WifiWatchdogStateMachine, com.android.internal.util.IState)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static android.net.wifi.WifiWatchdogStateMachine$LinkMonitoringState access$3500(android.net.wifi.WifiWatchdogStateMachine)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        android.net.wifi.WifiWatchdogStateMachine$LinkMonitoringState $r1;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        $r1 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$LinkMonitoringState mLinkMonitoringState>;

        return $r1;
    }

    static void access$3600(android.net.wifi.WifiWatchdogStateMachine, com.android.internal.util.IState)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static android.net.wifi.WifiWatchdogStateMachine$VolumeWeightedEMA access$3700(android.net.wifi.WifiWatchdogStateMachine)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        android.net.wifi.WifiWatchdogStateMachine$VolumeWeightedEMA $r1;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        $r1 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$VolumeWeightedEMA mCurrentLoss>;

        return $r1;
    }

    static android.net.wifi.WifiWatchdogStateMachine$VolumeWeightedEMA access$3702(android.net.wifi.WifiWatchdogStateMachine, android.net.wifi.WifiWatchdogStateMachine$VolumeWeightedEMA)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        android.net.wifi.WifiWatchdogStateMachine$VolumeWeightedEMA r1;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        r1 := @parameter1: android.net.wifi.WifiWatchdogStateMachine$VolumeWeightedEMA;

        r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$VolumeWeightedEMA mCurrentLoss> = r1;

        return r1;
    }

    static void access$3800(android.net.wifi.WifiWatchdogStateMachine, com.android.internal.util.IState)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$3900(android.net.wifi.WifiWatchdogStateMachine, com.android.internal.util.IState)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static com.android.internal.util.IState access$400(android.net.wifi.WifiWatchdogStateMachine)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        com.android.internal.util.IState $r1;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        $r1 = virtualinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: com.android.internal.util.IState getCurrentState()>();

        return $r1;
    }

    static void access$4000(android.net.wifi.WifiWatchdogStateMachine, com.android.internal.util.IState)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$4400(android.net.wifi.WifiWatchdogStateMachine, com.android.internal.util.IState)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static double[] access$4800()
    {
        double[] $r0;

        $r0 = <android.net.wifi.WifiWatchdogStateMachine: double[] sPresetLoss>;

        return $r0;
    }

    static double[] access$4802(double[])
    {
        double[] r0;

        r0 := @parameter0: double[];

        <android.net.wifi.WifiWatchdogStateMachine: double[] sPresetLoss> = r0;

        return r0;
    }

    static android.net.wifi.WifiWatchdogStateMachine$GoodLinkTarget[] access$4900()
    {
        android.net.wifi.WifiWatchdogStateMachine$GoodLinkTarget[] $r0;

        $r0 = <android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$GoodLinkTarget[] GOOD_LINK_TARGET>;

        return $r0;
    }

    static void access$500(android.net.wifi.WifiWatchdogStateMachine, java.lang.String)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        java.lang.String r1;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: void loge(java.lang.String)>(r1);

        return;
    }

    static android.net.wifi.WifiWatchdogStateMachine$MaxAvoidTime[] access$5000()
    {
        android.net.wifi.WifiWatchdogStateMachine$MaxAvoidTime[] $r0;

        $r0 = <android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$MaxAvoidTime[] MAX_AVOID_TIME>;

        return $r0;
    }

    static boolean access$600(android.net.wifi.WifiWatchdogStateMachine)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        boolean $z0;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        $z0 = specialinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: boolean isWatchdogEnabled()>();

        return $z0;
    }

    static android.net.wifi.WifiWatchdogStateMachine$NotConnectedState access$700(android.net.wifi.WifiWatchdogStateMachine)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        android.net.wifi.WifiWatchdogStateMachine$NotConnectedState $r1;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        $r1 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$NotConnectedState mNotConnectedState>;

        return $r1;
    }

    static void access$800(android.net.wifi.WifiWatchdogStateMachine, com.android.internal.util.IState)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$900(android.net.wifi.WifiWatchdogStateMachine, boolean)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        boolean z0;

        r0 := @parameter0: android.net.wifi.WifiWatchdogStateMachine;

        z0 := @parameter1: boolean;

        specialinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: void sendLinkStatusNotification(boolean)>(z0);

        return;
    }

    private int calculateSignalLevel(int)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        int i0, $i1;

        r0 := @this: android.net.wifi.WifiWatchdogStateMachine;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.net.wifi.WifiManager: int calculateSignalLevel(int,int)>(i0, 5);

        return $i1;
    }

    private static boolean getSettingsGlobalBoolean(android.content.ContentResolver, java.lang.String, boolean)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        boolean z0;
        byte b0;
        int $i1;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label2;

        b0 = 1;

     label1:
        $i1 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>(r0, r1, b0);

        if $i1 != 1 goto label3;

        return 1;

     label2:
        b0 = 0;

        goto label1;

     label3:
        return 0;
    }

    private boolean isWatchdogEnabled()
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        android.content.ContentResolver $r1;
        boolean $z0;

        r0 := @this: android.net.wifi.WifiWatchdogStateMachine;

        $r1 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.content.ContentResolver mContentResolver>;

        $z0 = staticinvoke <android.net.wifi.WifiWatchdogStateMachine: boolean getSettingsGlobalBoolean(android.content.ContentResolver,java.lang.String,boolean)>($r1, "wifi_watchdog_on", 1);

        return $z0;
    }

    public static android.net.wifi.WifiWatchdogStateMachine makeWifiWatchdogStateMachine(android.content.Context)
    {
        android.content.Context r0;
        android.content.ContentResolver r1;
        boolean z0, z1;
        android.net.wifi.WifiWatchdogStateMachine r2, $r5;
        java.lang.Object $r3;
        android.net.ConnectivityManager $r4;

        r0 := @parameter0: android.content.Context;

        r1 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r3 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        $r4 = (android.net.ConnectivityManager) $r3;

        z0 = virtualinvoke $r4.<android.net.ConnectivityManager: boolean isNetworkSupported(int)>(0);

        z1 = 0;

        if z0 != 0 goto label1;

        z1 = 1;

     label1:
        <android.net.wifi.WifiWatchdogStateMachine: boolean sWifiOnly> = z1;

        staticinvoke <android.net.wifi.WifiWatchdogStateMachine: boolean putSettingsGlobalBoolean(android.content.ContentResolver,java.lang.String,boolean)>(r1, "wifi_watchdog_on", 1);

        $r5 = new android.net.wifi.WifiWatchdogStateMachine;

        specialinvoke $r5.<android.net.wifi.WifiWatchdogStateMachine: void <init>(android.content.Context)>(r0);

        r2 = $r5;

        virtualinvoke r2.<android.net.wifi.WifiWatchdogStateMachine: void start()>();

        return r2;
    }

    private static boolean putSettingsGlobalBoolean(android.content.ContentResolver, java.lang.String, boolean)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        boolean z0, $z1;
        byte b0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label2;

        b0 = 1;

     label1:
        $z1 = staticinvoke <android.provider.Settings$Global: boolean putInt(android.content.ContentResolver,java.lang.String,int)>(r0, r1, b0);

        return $z1;

     label2:
        b0 = 0;

        goto label1;
    }

    private void registerForSettingsChanges()
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        android.net.wifi.WifiWatchdogStateMachine$3 r1, $r2;
        android.os.Handler $r3;
        android.content.Context $r4;
        android.content.ContentResolver $r5;
        android.net.Uri $r6;

        r0 := @this: android.net.wifi.WifiWatchdogStateMachine;

        $r2 = new android.net.wifi.WifiWatchdogStateMachine$3;

        $r3 = virtualinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: android.os.Handler getHandler()>();

        specialinvoke $r2.<android.net.wifi.WifiWatchdogStateMachine$3: void <init>(android.net.wifi.WifiWatchdogStateMachine,android.os.Handler)>(r0, $r3);

        r1 = $r2;

        $r4 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r6 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("wifi_watchdog_poor_network_test_enabled");

        virtualinvoke $r5.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r6, 0, r1);

        return;
    }

    private void registerForWatchdogToggle()
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        android.net.wifi.WifiWatchdogStateMachine$2 r1, $r2;
        android.os.Handler $r3;
        android.content.Context $r4;
        android.content.ContentResolver $r5;
        android.net.Uri $r6;

        r0 := @this: android.net.wifi.WifiWatchdogStateMachine;

        $r2 = new android.net.wifi.WifiWatchdogStateMachine$2;

        $r3 = virtualinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: android.os.Handler getHandler()>();

        specialinvoke $r2.<android.net.wifi.WifiWatchdogStateMachine$2: void <init>(android.net.wifi.WifiWatchdogStateMachine,android.os.Handler)>(r0, $r3);

        r1 = $r2;

        $r4 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r6 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("wifi_watchdog_on");

        virtualinvoke $r5.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r6, 0, r1);

        return;
    }

    private void sendLinkStatusNotification(boolean)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        boolean z0;
        com.android.internal.util.AsyncChannel $r1, $r4;
        android.net.wifi.WifiWatchdogStateMachine$BssidStatistics $r2, $r3, $r5, $r6;
        long $l0, $l2;

        r0 := @this: android.net.wifi.WifiWatchdogStateMachine;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label2;

        $r4 = r0.<android.net.wifi.WifiWatchdogStateMachine: com.android.internal.util.AsyncChannel mWsmChannel>;

        virtualinvoke $r4.<com.android.internal.util.AsyncChannel: void sendMessage(int)>(135190);

        $r5 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$BssidStatistics mCurrentBssid>;

        if $r5 == null goto label1;

        $r6 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$BssidStatistics mCurrentBssid>;

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        staticinvoke <android.net.wifi.WifiWatchdogStateMachine$BssidStatistics: long access$4602(android.net.wifi.WifiWatchdogStateMachine$BssidStatistics,long)>($r6, $l2);

     label1:
        return;

     label2:
        $r1 = r0.<android.net.wifi.WifiWatchdogStateMachine: com.android.internal.util.AsyncChannel mWsmChannel>;

        virtualinvoke $r1.<com.android.internal.util.AsyncChannel: void sendMessage(int)>(135189);

        $r2 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$BssidStatistics mCurrentBssid>;

        if $r2 == null goto label3;

        $r3 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$BssidStatistics mCurrentBssid>;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        staticinvoke <android.net.wifi.WifiWatchdogStateMachine$BssidStatistics: long access$4702(android.net.wifi.WifiWatchdogStateMachine$BssidStatistics,long)>($r3, $l0);

     label3:
        virtualinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: void logd(java.lang.String)>("Poor link notification is sent");

        return;
    }

    private void setupNetworkReceiver()
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        android.net.wifi.WifiWatchdogStateMachine$1 $r1;
        android.content.IntentFilter $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        android.content.BroadcastReceiver $r10;
        android.content.Context $r11;

        r0 := @this: android.net.wifi.WifiWatchdogStateMachine;

        $r1 = new android.net.wifi.WifiWatchdogStateMachine$1;

        specialinvoke $r1.<android.net.wifi.WifiWatchdogStateMachine$1: void <init>(android.net.wifi.WifiWatchdogStateMachine)>(r0);

        r0.<android.net.wifi.WifiWatchdogStateMachine: android.content.BroadcastReceiver mBroadcastReceiver> = $r1;

        $r2 = new android.content.IntentFilter;

        specialinvoke $r2.<android.content.IntentFilter: void <init>()>();

        r0.<android.net.wifi.WifiWatchdogStateMachine: android.content.IntentFilter mIntentFilter> = $r2;

        $r3 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.content.IntentFilter mIntentFilter>;

        virtualinvoke $r3.<android.content.IntentFilter: void addAction(java.lang.String)>("android.net.wifi.STATE_CHANGE");

        $r4 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.content.IntentFilter mIntentFilter>;

        virtualinvoke $r4.<android.content.IntentFilter: void addAction(java.lang.String)>("android.net.wifi.WIFI_STATE_CHANGED");

        $r5 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.content.IntentFilter mIntentFilter>;

        virtualinvoke $r5.<android.content.IntentFilter: void addAction(java.lang.String)>("android.net.wifi.RSSI_CHANGED");

        $r6 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.content.IntentFilter mIntentFilter>;

        virtualinvoke $r6.<android.content.IntentFilter: void addAction(java.lang.String)>("android.net.wifi.supplicant.STATE_CHANGE");

        $r7 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.content.IntentFilter mIntentFilter>;

        virtualinvoke $r7.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.SCREEN_ON");

        $r8 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.content.IntentFilter mIntentFilter>;

        virtualinvoke $r8.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.SCREEN_OFF");

        $r11 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.content.Context mContext>;

        $r10 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.content.BroadcastReceiver mBroadcastReceiver>;

        $r9 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.content.IntentFilter mIntentFilter>;

        virtualinvoke $r11.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r10, $r9);

        return;
    }

    private void updateCurrentBssid(java.lang.String)
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        java.lang.String r1, $r12;
        android.net.wifi.WifiWatchdogStateMachine$BssidStatistics $r2, $r5, $r6, $r7, $r8, $r11, $r13;
        android.util.LruCache $r3, $r9;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: android.net.wifi.WifiWatchdogStateMachine;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label3;

        $r13 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$BssidStatistics mCurrentBssid>;

        if $r13 != null goto label2;

     label1:
        return;

     label2:
        r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$BssidStatistics mCurrentBssid> = null;

        virtualinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: void sendMessage(int)>(135175);

        return;

     label3:
        $r2 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$BssidStatistics mCurrentBssid>;

        if $r2 == null goto label4;

        $r11 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$BssidStatistics mCurrentBssid>;

        $r12 = staticinvoke <android.net.wifi.WifiWatchdogStateMachine$BssidStatistics: java.lang.String access$4500(android.net.wifi.WifiWatchdogStateMachine$BssidStatistics)>($r11);

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z0 != 0 goto label1;

     label4:
        $r3 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.util.LruCache mBssidCache>;

        $r4 = virtualinvoke $r3.<android.util.LruCache: java.lang.Object get(java.lang.Object)>(r1);

        $r5 = (android.net.wifi.WifiWatchdogStateMachine$BssidStatistics) $r4;

        r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$BssidStatistics mCurrentBssid> = $r5;

        $r6 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$BssidStatistics mCurrentBssid>;

        if $r6 != null goto label5;

        $r7 = new android.net.wifi.WifiWatchdogStateMachine$BssidStatistics;

        specialinvoke $r7.<android.net.wifi.WifiWatchdogStateMachine$BssidStatistics: void <init>(android.net.wifi.WifiWatchdogStateMachine,java.lang.String)>(r0, r1);

        r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$BssidStatistics mCurrentBssid> = $r7;

        $r9 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.util.LruCache mBssidCache>;

        $r8 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$BssidStatistics mCurrentBssid>;

        virtualinvoke $r9.<android.util.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r8);

     label5:
        virtualinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: void sendMessage(int)>(135175);

        return;
    }

    private void updateSettings()
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        boolean $z0, $z1;
        android.content.ContentResolver $r1;

        r0 := @this: android.net.wifi.WifiWatchdogStateMachine;

        $z0 = <android.net.wifi.WifiWatchdogStateMachine: boolean sWifiOnly>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.net.wifi.WifiWatchdogStateMachine: void logd(java.lang.String)>("Disabling poor network avoidance for wi-fi only device");

        r0.<android.net.wifi.WifiWatchdogStateMachine: boolean mPoorNetworkDetectionEnabled> = 0;

        return;

     label1:
        $r1 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.content.ContentResolver mContentResolver>;

        $z1 = staticinvoke <android.net.wifi.WifiWatchdogStateMachine: boolean getSettingsGlobalBoolean(android.content.ContentResolver,java.lang.String,boolean)>($r1, "wifi_watchdog_poor_network_test_enabled", 0);

        r0.<android.net.wifi.WifiWatchdogStateMachine: boolean mPoorNetworkDetectionEnabled> = $z1;

        return;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        android.net.wifi.WifiWatchdogStateMachine r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r10, $r11, $r13, $r14, $r16, $r17, $r18, $r20, $r21, $r22, $r23, $r25;
        android.net.wifi.WifiInfo $r6;
        java.lang.String $r9, $r15, $r19, $r24;
        android.net.LinkProperties $r12;
        int $i0;
        boolean $z0;

        r0 := @this: android.net.wifi.WifiWatchdogStateMachine;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        specialinvoke r0.<com.android.internal.util.StateMachine: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mWifiInfo: [");

        $r6 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mLinkProperties: [");

        $r12 = r0.<android.net.wifi.WifiWatchdogStateMachine: android.net.LinkProperties mLinkProperties>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r15);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mCurrentSignalLevel: [");

        $i0 = r0.<android.net.wifi.WifiWatchdogStateMachine: int mCurrentSignalLevel>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r19);

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mPoorNetworkDetectionEnabled: [");

        $z0 = r0.<android.net.wifi.WifiWatchdogStateMachine: boolean mPoorNetworkDetectionEnabled>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r24);

        return;
    }
}
