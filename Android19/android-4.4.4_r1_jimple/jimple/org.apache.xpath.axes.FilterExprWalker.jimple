public class org.apache.xpath.axes.FilterExprWalker extends org.apache.xpath.axes.AxesWalker
{
    static final long serialVersionUID;
    private boolean m_canDetachNodeset;
    private org.apache.xpath.Expression m_expr;
    private transient org.apache.xpath.objects.XNodeSet m_exprObj;
    private boolean m_mustHardReset;

    public void <init>(org.apache.xpath.axes.WalkingIterator)
    {
        org.apache.xpath.axes.FilterExprWalker r0;
        org.apache.xpath.axes.WalkingIterator r1;

        r0 := @this: org.apache.xpath.axes.FilterExprWalker;

        r1 := @parameter0: org.apache.xpath.axes.WalkingIterator;

        specialinvoke r0.<org.apache.xpath.axes.AxesWalker: void <init>(org.apache.xpath.axes.LocPathIterator,int)>(r1, 20);

        r0.<org.apache.xpath.axes.FilterExprWalker: boolean m_mustHardReset> = 0;

        r0.<org.apache.xpath.axes.FilterExprWalker: boolean m_canDetachNodeset> = 1;

        return;
    }

    static org.apache.xpath.Expression access$000(org.apache.xpath.axes.FilterExprWalker)
    {
        org.apache.xpath.axes.FilterExprWalker r0;
        org.apache.xpath.Expression $r1;

        r0 := @parameter0: org.apache.xpath.axes.FilterExprWalker;

        $r1 = r0.<org.apache.xpath.axes.FilterExprWalker: org.apache.xpath.Expression m_expr>;

        return $r1;
    }

    static org.apache.xpath.Expression access$002(org.apache.xpath.axes.FilterExprWalker, org.apache.xpath.Expression)
    {
        org.apache.xpath.axes.FilterExprWalker r0;
        org.apache.xpath.Expression r1;

        r0 := @parameter0: org.apache.xpath.axes.FilterExprWalker;

        r1 := @parameter1: org.apache.xpath.Expression;

        r0.<org.apache.xpath.axes.FilterExprWalker: org.apache.xpath.Expression m_expr> = r1;

        return r1;
    }

    public short acceptNode(int)
    {
        org.apache.xpath.axes.FilterExprWalker r0;
        int i0, $i1;
        javax.xml.transform.TransformerException r1, $r4;
        boolean z0;
        org.apache.xpath.axes.LocPathIterator $r2;
        org.apache.xpath.XPathContext $r3;
        java.lang.RuntimeException $r5;
        java.lang.String $r6;

        r0 := @this: org.apache.xpath.axes.FilterExprWalker;

        i0 := @parameter0: int;

     label1:
        $i1 = virtualinvoke r0.<org.apache.xpath.axes.FilterExprWalker: int getPredicateCount()>();

        if $i1 <= 0 goto label3;

        virtualinvoke r0.<org.apache.xpath.axes.FilterExprWalker: void countProximityPosition(int)>(0);

        $r2 = r0.<org.apache.xpath.axes.FilterExprWalker: org.apache.xpath.axes.LocPathIterator m_lpi>;

        $r3 = virtualinvoke $r2.<org.apache.xpath.axes.LocPathIterator: org.apache.xpath.XPathContext getXPathContext()>();

        z0 = virtualinvoke r0.<org.apache.xpath.axes.FilterExprWalker: boolean executePredicates(int,org.apache.xpath.XPathContext)>(i0, $r3);

     label2:
        if z0 != 0 goto label3;

        return 3;

     label3:
        return 1;

     label4:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = new java.lang.RuntimeException;

        $r6 = virtualinvoke r1.<javax.xml.transform.TransformerException: java.lang.String getMessage()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r5;

        catch javax.xml.transform.TransformerException from label1 to label2 with label4;
    }

    public void callPredicateVisitors(org.apache.xpath.XPathVisitor)
    {
        org.apache.xpath.axes.FilterExprWalker r0;
        org.apache.xpath.XPathVisitor r1;
        org.apache.xpath.axes.FilterExprWalker$filterExprOwner $r2;
        org.apache.xpath.Expression $r3;

        r0 := @this: org.apache.xpath.axes.FilterExprWalker;

        r1 := @parameter0: org.apache.xpath.XPathVisitor;

        $r3 = r0.<org.apache.xpath.axes.FilterExprWalker: org.apache.xpath.Expression m_expr>;

        $r2 = new org.apache.xpath.axes.FilterExprWalker$filterExprOwner;

        specialinvoke $r2.<org.apache.xpath.axes.FilterExprWalker$filterExprOwner: void <init>(org.apache.xpath.axes.FilterExprWalker)>(r0);

        virtualinvoke $r3.<org.apache.xpath.Expression: void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)>($r2, r1);

        specialinvoke r0.<org.apache.xpath.axes.AxesWalker: void callPredicateVisitors(org.apache.xpath.XPathVisitor)>(r1);

        return;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.xpath.axes.FilterExprWalker r0, r1;
        java.lang.Object $r2, $r5;
        org.apache.xpath.objects.XNodeSet $r3, $r4, $r6;

        r0 := @this: org.apache.xpath.axes.FilterExprWalker;

        $r2 = specialinvoke r0.<org.apache.xpath.axes.AxesWalker: java.lang.Object clone()>();

        r1 = (org.apache.xpath.axes.FilterExprWalker) $r2;

        $r3 = r0.<org.apache.xpath.axes.FilterExprWalker: org.apache.xpath.objects.XNodeSet m_exprObj>;

        if $r3 == null goto label1;

        $r4 = r0.<org.apache.xpath.axes.FilterExprWalker: org.apache.xpath.objects.XNodeSet m_exprObj>;

        $r5 = virtualinvoke $r4.<org.apache.xpath.objects.XNodeSet: java.lang.Object clone()>();

        $r6 = (org.apache.xpath.objects.XNodeSet) $r5;

        r1.<org.apache.xpath.axes.FilterExprWalker: org.apache.xpath.objects.XNodeSet m_exprObj> = $r6;

     label1:
        return r1;
    }

    public boolean deepEquals(org.apache.xpath.Expression)
    {
        org.apache.xpath.axes.FilterExprWalker r0, r2;
        org.apache.xpath.Expression r1, $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: org.apache.xpath.axes.FilterExprWalker;

        r1 := @parameter0: org.apache.xpath.Expression;

        $z0 = specialinvoke r0.<org.apache.xpath.axes.AxesWalker: boolean deepEquals(org.apache.xpath.Expression)>(r1);

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        r2 = (org.apache.xpath.axes.FilterExprWalker) r1;

        $r4 = r0.<org.apache.xpath.axes.FilterExprWalker: org.apache.xpath.Expression m_expr>;

        $r3 = r2.<org.apache.xpath.axes.FilterExprWalker: org.apache.xpath.Expression m_expr>;

        $z1 = virtualinvoke $r4.<org.apache.xpath.Expression: boolean deepEquals(org.apache.xpath.Expression)>($r3);

        if $z1 == 0 goto label1;

        return 1;
    }

    public void detach()
    {
        org.apache.xpath.axes.FilterExprWalker r0;
        boolean $z0;
        org.apache.xpath.objects.XNodeSet $r1;

        r0 := @this: org.apache.xpath.axes.FilterExprWalker;

        specialinvoke r0.<org.apache.xpath.axes.AxesWalker: void detach()>();

        $z0 = r0.<org.apache.xpath.axes.FilterExprWalker: boolean m_canDetachNodeset>;

        if $z0 == 0 goto label1;

        $r1 = r0.<org.apache.xpath.axes.FilterExprWalker: org.apache.xpath.objects.XNodeSet m_exprObj>;

        virtualinvoke $r1.<org.apache.xpath.objects.XNodeSet: void detach()>();

     label1:
        r0.<org.apache.xpath.axes.FilterExprWalker: org.apache.xpath.objects.XNodeSet m_exprObj> = null;

        return;
    }

    public void fixupVariables(java.util.Vector, int)
    {
        org.apache.xpath.axes.FilterExprWalker r0;
        java.util.Vector r1;
        int i0;
        org.apache.xpath.Expression $r2;

        r0 := @this: org.apache.xpath.axes.FilterExprWalker;

        r1 := @parameter0: java.util.Vector;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.xpath.axes.AxesWalker: void fixupVariables(java.util.Vector,int)>(r1, i0);

        $r2 = r0.<org.apache.xpath.axes.FilterExprWalker: org.apache.xpath.Expression m_expr>;

        virtualinvoke $r2.<org.apache.xpath.Expression: void fixupVariables(java.util.Vector,int)>(r1, i0);

        return;
    }

    public int getAnalysisBits()
    {
        org.apache.xpath.axes.FilterExprWalker r0;
        org.apache.xpath.Expression $r1, $r2, $r3;
        boolean $z0;
        org.apache.xpath.axes.PathComponent $r4;
        int $i0;

        r0 := @this: org.apache.xpath.axes.FilterExprWalker;

        $r1 = r0.<org.apache.xpath.axes.FilterExprWalker: org.apache.xpath.Expression m_expr>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.xpath.axes.FilterExprWalker: org.apache.xpath.Expression m_expr>;

        $z0 = $r2 instanceof org.apache.xpath.axes.PathComponent;

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.xpath.axes.FilterExprWalker: org.apache.xpath.Expression m_expr>;

        $r4 = (org.apache.xpath.axes.PathComponent) $r3;

        $i0 = interfaceinvoke $r4.<org.apache.xpath.axes.PathComponent: int getAnalysisBits()>();

        return $i0;

     label1:
        return 67108864;
    }

    public int getAxis()
    {
        org.apache.xpath.axes.FilterExprWalker r0;
        org.apache.xpath.objects.XNodeSet $r1;
        int $i0;

        r0 := @this: org.apache.xpath.axes.FilterExprWalker;

        $r1 = r0.<org.apache.xpath.axes.FilterExprWalker: org.apache.xpath.objects.XNodeSet m_exprObj>;

        $i0 = virtualinvoke $r1.<org.apache.xpath.objects.XNodeSet: int getAxis()>();

        return $i0;
    }

    public org.apache.xpath.Expression getInnerExpression()
    {
        org.apache.xpath.axes.FilterExprWalker r0;
        org.apache.xpath.Expression $r1;

        r0 := @this: org.apache.xpath.axes.FilterExprWalker;

        $r1 = r0.<org.apache.xpath.axes.FilterExprWalker: org.apache.xpath.Expression m_expr>;

        return $r1;
    }

    public int getLastPos(org.apache.xpath.XPathContext)
    {
        org.apache.xpath.axes.FilterExprWalker r0;
        org.apache.xpath.XPathContext r1;
        org.apache.xpath.objects.XNodeSet $r2;
        int $i0;

        r0 := @this: org.apache.xpath.axes.FilterExprWalker;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        $r2 = r0.<org.apache.xpath.axes.FilterExprWalker: org.apache.xpath.objects.XNodeSet m_exprObj>;

        $i0 = virtualinvoke $r2.<org.apache.xpath.objects.XNodeSet: int getLength()>();

        return $i0;
    }

    public int getNextNode()
    {
        org.apache.xpath.axes.FilterExprWalker r0;
        org.apache.xpath.objects.XNodeSet $r1, $r2;
        int $i0;

        r0 := @this: org.apache.xpath.axes.FilterExprWalker;

        $r1 = r0.<org.apache.xpath.axes.FilterExprWalker: org.apache.xpath.objects.XNodeSet m_exprObj>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.xpath.axes.FilterExprWalker: org.apache.xpath.objects.XNodeSet m_exprObj>;

        $i0 = virtualinvoke $r2.<org.apache.xpath.objects.XNodeSet: int nextNode()>();

        return $i0;

     label1:
        return -1;
    }

    public void init(org.apache.xpath.compiler.Compiler, int, int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.axes.FilterExprWalker r0;
        org.apache.xpath.compiler.Compiler r1;
        int i0, i1, $i2;
        org.apache.xpath.Expression $r2, $r3, $r4, $r5, $r6;
        boolean $z0;

        r0 := @this: org.apache.xpath.axes.FilterExprWalker;

        r1 := @parameter0: org.apache.xpath.compiler.Compiler;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<org.apache.xpath.axes.AxesWalker: void init(org.apache.xpath.compiler.Compiler,int,int)>(r1, i0, i1);

        tableswitch(i1)
        {
            case 22: goto label4;
            case 23: goto label4;
            case 24: goto label3;
            case 25: goto label3;
            default: goto label1;
        };

     label1:
        $i2 = i0 + 2;

        $r2 = virtualinvoke r1.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compile(int)>($i2);

        r0.<org.apache.xpath.axes.FilterExprWalker: org.apache.xpath.Expression m_expr> = $r2;

        $r3 = r0.<org.apache.xpath.axes.FilterExprWalker: org.apache.xpath.Expression m_expr>;

        virtualinvoke $r3.<org.apache.xpath.Expression: void exprSetParent(org.apache.xpath.ExpressionNode)>(r0);

     label2:
        return;

     label3:
        r0.<org.apache.xpath.axes.FilterExprWalker: boolean m_mustHardReset> = 1;

     label4:
        $r4 = virtualinvoke r1.<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression compile(int)>(i0);

        r0.<org.apache.xpath.axes.FilterExprWalker: org.apache.xpath.Expression m_expr> = $r4;

        $r5 = r0.<org.apache.xpath.axes.FilterExprWalker: org.apache.xpath.Expression m_expr>;

        virtualinvoke $r5.<org.apache.xpath.Expression: void exprSetParent(org.apache.xpath.ExpressionNode)>(r0);

        $r6 = r0.<org.apache.xpath.axes.FilterExprWalker: org.apache.xpath.Expression m_expr>;

        $z0 = $r6 instanceof org.apache.xpath.operations.Variable;

        if $z0 == 0 goto label2;

        r0.<org.apache.xpath.axes.FilterExprWalker: boolean m_canDetachNodeset> = 0;

        return;
    }

    public boolean isDocOrdered()
    {
        org.apache.xpath.axes.FilterExprWalker r0;
        org.apache.xpath.objects.XNodeSet $r1;
        boolean $z0;

        r0 := @this: org.apache.xpath.axes.FilterExprWalker;

        $r1 = r0.<org.apache.xpath.axes.FilterExprWalker: org.apache.xpath.objects.XNodeSet m_exprObj>;

        $z0 = virtualinvoke $r1.<org.apache.xpath.objects.XNodeSet: boolean isDocOrdered()>();

        return $z0;
    }

    public void setInnerExpression(org.apache.xpath.Expression)
    {
        org.apache.xpath.axes.FilterExprWalker r0;
        org.apache.xpath.Expression r1;

        r0 := @this: org.apache.xpath.axes.FilterExprWalker;

        r1 := @parameter0: org.apache.xpath.Expression;

        virtualinvoke r1.<org.apache.xpath.Expression: void exprSetParent(org.apache.xpath.ExpressionNode)>(r0);

        r0.<org.apache.xpath.axes.FilterExprWalker: org.apache.xpath.Expression m_expr> = r1;

        return;
    }

    public void setRoot(int)
    {
        org.apache.xpath.axes.FilterExprWalker r0;
        int i0, $i1;
        org.apache.xpath.axes.LocPathIterator $r1, $r3, $r5, $r6;
        org.apache.xpath.XPathContext $r2;
        org.apache.xml.utils.PrefixResolver $r4;
        boolean $z0;
        org.apache.xpath.Expression $r7;
        org.apache.xpath.objects.XNodeSet $r8;

        r0 := @this: org.apache.xpath.axes.FilterExprWalker;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.xpath.axes.AxesWalker: void setRoot(int)>(i0);

        $r1 = r0.<org.apache.xpath.axes.FilterExprWalker: org.apache.xpath.axes.LocPathIterator m_lpi>;

        $r2 = virtualinvoke $r1.<org.apache.xpath.axes.LocPathIterator: org.apache.xpath.XPathContext getXPathContext()>();

        $r3 = r0.<org.apache.xpath.axes.FilterExprWalker: org.apache.xpath.axes.LocPathIterator m_lpi>;

        $r4 = virtualinvoke $r3.<org.apache.xpath.axes.LocPathIterator: org.apache.xml.utils.PrefixResolver getPrefixResolver()>();

        $r5 = r0.<org.apache.xpath.axes.FilterExprWalker: org.apache.xpath.axes.LocPathIterator m_lpi>;

        $z0 = virtualinvoke $r5.<org.apache.xpath.axes.LocPathIterator: boolean getIsTopLevel()>();

        $r6 = r0.<org.apache.xpath.axes.FilterExprWalker: org.apache.xpath.axes.LocPathIterator m_lpi>;

        $i1 = $r6.<org.apache.xpath.axes.LocPathIterator: int m_stackFrame>;

        $r7 = r0.<org.apache.xpath.axes.FilterExprWalker: org.apache.xpath.Expression m_expr>;

        $r8 = staticinvoke <org.apache.xpath.axes.FilterExprIteratorSimple: org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)>(i0, $r2, $r4, $z0, $i1, $r7);

        r0.<org.apache.xpath.axes.FilterExprWalker: org.apache.xpath.objects.XNodeSet m_exprObj> = $r8;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.xpath.axes.FilterExprWalker: long serialVersionUID> = 5457182471424488375L;

        return;
    }
}
