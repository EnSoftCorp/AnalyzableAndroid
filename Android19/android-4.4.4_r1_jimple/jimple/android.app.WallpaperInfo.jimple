public final class android.app.WallpaperInfo extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    static final java.lang.String TAG;
    final int mAuthorResource;
    final int mDescriptionResource;
    final android.content.pm.ResolveInfo mService;
    final java.lang.String mSettingsActivityName;
    final int mThumbnailResource;

    static void <clinit>()
    {
        android.app.WallpaperInfo$1 $r0;

        <android.app.WallpaperInfo: java.lang.String TAG> = "WallpaperInfo";

        $r0 = new android.app.WallpaperInfo$1;

        specialinvoke $r0.<android.app.WallpaperInfo$1: void <init>()>();

        <android.app.WallpaperInfo: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(android.content.Context, android.content.pm.ResolveInfo) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.app.WallpaperInfo r0;
        android.content.Context r1;
        android.content.pm.ResolveInfo r2;
        android.content.pm.ServiceInfo r3;
        android.content.pm.PackageManager r4;
        android.content.res.XmlResourceParser r5;
        java.lang.Throwable r6, $r25;
        android.content.res.Resources r8;
        android.util.AttributeSet r9;
        int i0, i1, i2, i3;
        android.content.res.TypedArray r10;
        java.lang.String r11, $r13, $r14, $r22, $r24;
        android.content.pm.ApplicationInfo $r12;
        int[] $r15;
        boolean $z0;
        org.xmlpull.v1.XmlPullParserException $r16, $r17, $r19;
        java.lang.StringBuilder $r18, $r21, $r23;
        android.content.pm.PackageManager$NameNotFoundException $r20;

        r0 := @this: android.app.WallpaperInfo;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.pm.ResolveInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService> = r2;

        r3 = r2.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        r4 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r5 = null;

     label01:
        r5 = virtualinvoke r3.<android.content.pm.ServiceInfo: android.content.res.XmlResourceParser loadXmlMetaData(android.content.pm.PackageManager,java.lang.String)>(r4, "android.service.wallpaper");

     label02:
        if r5 != null goto label08;

     label03:
        $r19 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r19.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("No android.service.wallpaper meta-data");

        throw $r19;

     label04:
        $r20 := @caughtexception;

     label05:
        $r17 = new org.xmlpull.v1.XmlPullParserException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create context for: ");

        $r24 = r3.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r21 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r22);

        throw $r17;

     label06:
        $r25 := @caughtexception;

        r6 = $r25;

        if r5 == null goto label07;

        interfaceinvoke r5.<android.content.res.XmlResourceParser: void close()>();

     label07:
        throw r6;

     label08:
        $r12 = r3.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        r8 = virtualinvoke r4.<android.content.pm.PackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>($r12);

        r9 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r5);

     label09:
        i0 = interfaceinvoke r5.<android.content.res.XmlResourceParser: int next()>();

     label10:
        if i0 == 1 goto label11;

        if i0 != 2 goto label09;

     label11:
        $r14 = "wallpaper";

        $r13 = interfaceinvoke r5.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z0 != 0 goto label12;

        $r16 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r16.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Meta-data does not start with wallpaper tag");

        throw $r16;

     label12:
        $r15 = <com.android.internal.R$styleable: int[] Wallpaper>;

        r10 = virtualinvoke r8.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r9, $r15);

        r11 = virtualinvoke r10.<android.content.res.TypedArray: java.lang.String getString(int)>(1);

        i1 = virtualinvoke r10.<android.content.res.TypedArray: int getResourceId(int,int)>(2, -1);

        i2 = virtualinvoke r10.<android.content.res.TypedArray: int getResourceId(int,int)>(3, -1);

        i3 = virtualinvoke r10.<android.content.res.TypedArray: int getResourceId(int,int)>(0, -1);

        virtualinvoke r10.<android.content.res.TypedArray: void recycle()>();

     label13:
        if r5 == null goto label14;

        interfaceinvoke r5.<android.content.res.XmlResourceParser: void close()>();

     label14:
        r0.<android.app.WallpaperInfo: java.lang.String mSettingsActivityName> = r11;

        r0.<android.app.WallpaperInfo: int mThumbnailResource> = i1;

        r0.<android.app.WallpaperInfo: int mAuthorResource> = i2;

        r0.<android.app.WallpaperInfo: int mDescriptionResource> = i3;

        return;

        catch android.content.pm.PackageManager$NameNotFoundException from label01 to label02 with label04;
        catch java.lang.Throwable from label01 to label02 with label06;
        catch android.content.pm.PackageManager$NameNotFoundException from label03 to label04 with label04;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label05 to label06 with label06;
        catch android.content.pm.PackageManager$NameNotFoundException from label08 to label09 with label04;
        catch java.lang.Throwable from label08 to label09 with label06;
        catch android.content.pm.PackageManager$NameNotFoundException from label09 to label10 with label04;
        catch java.lang.Throwable from label09 to label10 with label06;
        catch android.content.pm.PackageManager$NameNotFoundException from label11 to label12 with label04;
        catch java.lang.Throwable from label11 to label12 with label06;
        catch android.content.pm.PackageManager$NameNotFoundException from label12 to label13 with label04;
        catch java.lang.Throwable from label12 to label13 with label06;
    }

    void <init>(android.os.Parcel)
    {
        android.app.WallpaperInfo r0;
        android.os.Parcel r1;
        java.lang.String $r2;
        int $i0, $i1, $i2;
        android.os.Parcelable$Creator $r3;
        java.lang.Object $r4;
        android.content.pm.ResolveInfo $r5;

        r0 := @this: android.app.WallpaperInfo;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.app.WallpaperInfo: java.lang.String mSettingsActivityName> = $r2;

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.app.WallpaperInfo: int mThumbnailResource> = $i0;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.app.WallpaperInfo: int mAuthorResource> = $i1;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.app.WallpaperInfo: int mDescriptionResource> = $i2;

        $r3 = <android.content.pm.ResolveInfo: android.os.Parcelable$Creator CREATOR>;

        $r4 = interfaceinvoke $r3.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        $r5 = (android.content.pm.ResolveInfo) $r4;

        r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService> = $r5;

        return;
    }

    public int describeContents()
    {
        android.app.WallpaperInfo r0;

        r0 := @this: android.app.WallpaperInfo;

        return 0;
    }

    public void dump(android.util.Printer, java.lang.String)
    {
        android.app.WallpaperInfo r0;
        android.util.Printer r1;
        java.lang.String r2, $r6, $r11, $r15, $r16;
        java.lang.StringBuilder $r3, $r4, $r5, $r7, $r9, $r10, $r12, $r13, $r14, $r17;
        android.content.pm.ResolveInfo $r8;

        r0 := @this: android.app.WallpaperInfo;

        r1 := @parameter0: android.util.Printer;

        r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service:");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<android.util.Printer: void println(java.lang.String)>($r6);

        $r8 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<android.content.pm.ResolveInfo: void dump(android.util.Printer,java.lang.String)>(r1, $r11);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mSettingsActivityName=");

        $r15 = r0.<android.app.WallpaperInfo: java.lang.String mSettingsActivityName>;

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<android.util.Printer: void println(java.lang.String)>($r16);

        return;
    }

    public android.content.ComponentName getComponent()
    {
        android.app.WallpaperInfo r0;
        android.content.ComponentName $r1;
        android.content.pm.ResolveInfo $r2, $r4;
        android.content.pm.ServiceInfo $r3, $r5;
        java.lang.String $r6, $r7;

        r0 := @this: android.app.WallpaperInfo;

        $r1 = new android.content.ComponentName;

        $r2 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        $r3 = $r2.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r7 = $r3.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r4 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        $r5 = $r4.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r6 = $r5.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke $r1.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r7, $r6);

        return $r1;
    }

    public java.lang.String getPackageName()
    {
        android.app.WallpaperInfo r0;
        android.content.pm.ResolveInfo $r1;
        android.content.pm.ServiceInfo $r2;
        java.lang.String $r3;

        r0 := @this: android.app.WallpaperInfo;

        $r1 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        $r2 = $r1.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r3 = $r2.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        return $r3;
    }

    public android.content.pm.ServiceInfo getServiceInfo()
    {
        android.app.WallpaperInfo r0;
        android.content.pm.ResolveInfo $r1;
        android.content.pm.ServiceInfo $r2;

        r0 := @this: android.app.WallpaperInfo;

        $r1 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        $r2 = $r1.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        return $r2;
    }

    public java.lang.String getServiceName()
    {
        android.app.WallpaperInfo r0;
        android.content.pm.ResolveInfo $r1;
        android.content.pm.ServiceInfo $r2;
        java.lang.String $r3;

        r0 := @this: android.app.WallpaperInfo;

        $r1 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        $r2 = $r1.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r3 = $r2.<android.content.pm.ServiceInfo: java.lang.String name>;

        return $r3;
    }

    public java.lang.String getSettingsActivity()
    {
        android.app.WallpaperInfo r0;
        java.lang.String $r1;

        r0 := @this: android.app.WallpaperInfo;

        $r1 = r0.<android.app.WallpaperInfo: java.lang.String mSettingsActivityName>;

        return $r1;
    }

    public java.lang.CharSequence loadAuthor(android.content.pm.PackageManager) throws android.content.res.Resources$NotFoundException
    {
        android.app.WallpaperInfo r0;
        android.content.pm.PackageManager r1;
        java.lang.String r2;
        android.content.pm.ApplicationInfo r3;
        int $i0, $i1;
        android.content.pm.ResolveInfo $r4, $r6, $r8;
        java.lang.CharSequence $r5;
        android.content.pm.ServiceInfo $r7, $r9;
        android.content.res.Resources$NotFoundException $r10;

        r0 := @this: android.app.WallpaperInfo;

        r1 := @parameter0: android.content.pm.PackageManager;

        $i0 = r0.<android.app.WallpaperInfo: int mAuthorResource>;

        if $i0 > 0 goto label1;

        $r10 = new android.content.res.Resources$NotFoundException;

        specialinvoke $r10.<android.content.res.Resources$NotFoundException: void <init>()>();

        throw $r10;

     label1:
        $r4 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        r2 = $r4.<android.content.pm.ResolveInfo: java.lang.String resolvePackageName>;

        r3 = null;

        if r2 != null goto label2;

        $r6 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        $r7 = $r6.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        r2 = $r7.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r8 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        $r9 = $r8.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        r3 = $r9.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

     label2:
        $i1 = r0.<android.app.WallpaperInfo: int mAuthorResource>;

        $r5 = virtualinvoke r1.<android.content.pm.PackageManager: java.lang.CharSequence getText(java.lang.String,int,android.content.pm.ApplicationInfo)>(r2, $i1, r3);

        return $r5;
    }

    public java.lang.CharSequence loadDescription(android.content.pm.PackageManager) throws android.content.res.Resources$NotFoundException
    {
        android.app.WallpaperInfo r0;
        android.content.pm.PackageManager r1;
        java.lang.String r2;
        android.content.pm.ApplicationInfo r3, $r9;
        android.content.pm.ResolveInfo $r4, $r5, $r7, $r12, $r14, $r16;
        android.content.pm.ServiceInfo $r6, $r8, $r13, $r17, $r18;
        int $i0, $i1, $i2, $i3;
        java.lang.CharSequence $r10, $r15;
        android.content.res.Resources$NotFoundException $r11;

        r0 := @this: android.app.WallpaperInfo;

        r1 := @parameter0: android.content.pm.PackageManager;

        $r4 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        r2 = $r4.<android.content.pm.ResolveInfo: java.lang.String resolvePackageName>;

        r3 = null;

        if r2 != null goto label1;

        $r14 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        $r17 = $r14.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        r2 = $r17.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r16 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        $r18 = $r16.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        r3 = $r18.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

     label1:
        $r5 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        $r6 = $r5.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $i0 = $r6.<android.content.pm.ServiceInfo: int descriptionRes>;

        if $i0 == 0 goto label2;

        $r12 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        $r13 = $r12.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $i3 = $r13.<android.content.pm.ServiceInfo: int descriptionRes>;

        $r15 = virtualinvoke r1.<android.content.pm.PackageManager: java.lang.CharSequence getText(java.lang.String,int,android.content.pm.ApplicationInfo)>(r2, $i3, r3);

        return $r15;

     label2:
        $i1 = r0.<android.app.WallpaperInfo: int mDescriptionResource>;

        if $i1 > 0 goto label3;

        $r11 = new android.content.res.Resources$NotFoundException;

        specialinvoke $r11.<android.content.res.Resources$NotFoundException: void <init>()>();

        throw $r11;

     label3:
        $i2 = r0.<android.app.WallpaperInfo: int mDescriptionResource>;

        $r7 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        $r8 = $r7.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r9 = $r8.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r10 = virtualinvoke r1.<android.content.pm.PackageManager: java.lang.CharSequence getText(java.lang.String,int,android.content.pm.ApplicationInfo)>(r2, $i2, $r9);

        return $r10;
    }

    public android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)
    {
        android.app.WallpaperInfo r0;
        android.content.pm.PackageManager r1;
        android.content.pm.ResolveInfo $r2;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.app.WallpaperInfo;

        r1 := @parameter0: android.content.pm.PackageManager;

        $r2 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        $r3 = virtualinvoke $r2.<android.content.pm.ResolveInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>(r1);

        return $r3;
    }

    public java.lang.CharSequence loadLabel(android.content.pm.PackageManager)
    {
        android.app.WallpaperInfo r0;
        android.content.pm.PackageManager r1;
        android.content.pm.ResolveInfo $r2;
        java.lang.CharSequence $r3;

        r0 := @this: android.app.WallpaperInfo;

        r1 := @parameter0: android.content.pm.PackageManager;

        $r2 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        $r3 = virtualinvoke $r2.<android.content.pm.ResolveInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>(r1);

        return $r3;
    }

    public android.graphics.drawable.Drawable loadThumbnail(android.content.pm.PackageManager)
    {
        android.app.WallpaperInfo r0;
        android.content.pm.PackageManager r1;
        int $i0, $i1;
        android.content.pm.ResolveInfo $r2, $r4;
        android.content.pm.ServiceInfo $r3, $r5;
        android.content.pm.ApplicationInfo $r6;
        java.lang.String $r7;
        android.graphics.drawable.Drawable $r8;

        r0 := @this: android.app.WallpaperInfo;

        r1 := @parameter0: android.content.pm.PackageManager;

        $i0 = r0.<android.app.WallpaperInfo: int mThumbnailResource>;

        if $i0 >= 0 goto label1;

        return null;

     label1:
        $r2 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        $r3 = $r2.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r7 = $r3.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $i1 = r0.<android.app.WallpaperInfo: int mThumbnailResource>;

        $r4 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        $r5 = $r4.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r6 = $r5.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r8 = virtualinvoke r1.<android.content.pm.PackageManager: android.graphics.drawable.Drawable getDrawable(java.lang.String,int,android.content.pm.ApplicationInfo)>($r7, $i1, $r6);

        return $r8;
    }

    public java.lang.String toString()
    {
        android.app.WallpaperInfo r0;
        java.lang.StringBuilder $r1, $r2, $r6, $r7, $r9, $r10;
        android.content.pm.ResolveInfo $r3;
        android.content.pm.ServiceInfo $r4;
        java.lang.String $r5, $r8, $r11;

        r0 := @this: android.app.WallpaperInfo;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WallpaperInfo{");

        $r3 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        $r4 = $r3.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r5 = $r4.<android.content.pm.ServiceInfo: java.lang.String name>;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", settings: ");

        $r8 = r0.<android.app.WallpaperInfo: java.lang.String mSettingsActivityName>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.app.WallpaperInfo r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3;
        java.lang.String $r2;
        android.content.pm.ResolveInfo $r3;

        r0 := @this: android.app.WallpaperInfo;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.app.WallpaperInfo: java.lang.String mSettingsActivityName>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $i1 = r0.<android.app.WallpaperInfo: int mThumbnailResource>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.app.WallpaperInfo: int mAuthorResource>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $i3 = r0.<android.app.WallpaperInfo: int mDescriptionResource>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $r3 = r0.<android.app.WallpaperInfo: android.content.pm.ResolveInfo mService>;

        virtualinvoke $r3.<android.content.pm.ResolveInfo: void writeToParcel(android.os.Parcel,int)>(r1, i0);

        return;
    }
}
