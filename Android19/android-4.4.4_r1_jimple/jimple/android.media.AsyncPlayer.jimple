public class android.media.AsyncPlayer extends java.lang.Object
{
    private static final int PLAY;
    private static final int STOP;
    private static final boolean mDebug;
    private final java.util.LinkedList mCmdQueue;
    private android.media.MediaPlayer mPlayer;
    private int mState;
    private java.lang.String mTag;
    private android.media.AsyncPlayer$Thread mThread;
    private android.os.PowerManager$WakeLock mWakeLock;

    public void <init>(java.lang.String)
    {
        android.media.AsyncPlayer r0;
        java.lang.String r1;
        java.util.LinkedList $r2;

        r0 := @this: android.media.AsyncPlayer;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        r0.<android.media.AsyncPlayer: java.util.LinkedList mCmdQueue> = $r2;

        r0.<android.media.AsyncPlayer: int mState> = 2;

        if r1 == null goto label1;

        r0.<android.media.AsyncPlayer: java.lang.String mTag> = r1;

        return;

     label1:
        r0.<android.media.AsyncPlayer: java.lang.String mTag> = "AsyncPlayer";

        return;
    }

    static java.lang.String access$000(android.media.AsyncPlayer)
    {
        android.media.AsyncPlayer r0;
        java.lang.String $r1;

        r0 := @parameter0: android.media.AsyncPlayer;

        $r1 = r0.<android.media.AsyncPlayer: java.lang.String mTag>;

        return $r1;
    }

    static java.util.LinkedList access$100(android.media.AsyncPlayer)
    {
        android.media.AsyncPlayer r0;
        java.util.LinkedList $r1;

        r0 := @parameter0: android.media.AsyncPlayer;

        $r1 = r0.<android.media.AsyncPlayer: java.util.LinkedList mCmdQueue>;

        return $r1;
    }

    static void access$200(android.media.AsyncPlayer, android.media.AsyncPlayer$Command)
    {
        android.media.AsyncPlayer r0;
        android.media.AsyncPlayer$Command r1;

        r0 := @parameter0: android.media.AsyncPlayer;

        r1 := @parameter1: android.media.AsyncPlayer$Command;

        specialinvoke r0.<android.media.AsyncPlayer: void startSound(android.media.AsyncPlayer$Command)>(r1);

        return;
    }

    static android.media.MediaPlayer access$300(android.media.AsyncPlayer)
    {
        android.media.AsyncPlayer r0;
        android.media.MediaPlayer $r1;

        r0 := @parameter0: android.media.AsyncPlayer;

        $r1 = r0.<android.media.AsyncPlayer: android.media.MediaPlayer mPlayer>;

        return $r1;
    }

    static android.media.MediaPlayer access$302(android.media.AsyncPlayer, android.media.MediaPlayer)
    {
        android.media.AsyncPlayer r0;
        android.media.MediaPlayer r1;

        r0 := @parameter0: android.media.AsyncPlayer;

        r1 := @parameter1: android.media.MediaPlayer;

        r0.<android.media.AsyncPlayer: android.media.MediaPlayer mPlayer> = r1;

        return r1;
    }

    static android.media.AsyncPlayer$Thread access$402(android.media.AsyncPlayer, android.media.AsyncPlayer$Thread)
    {
        android.media.AsyncPlayer r0;
        android.media.AsyncPlayer$Thread r1;

        r0 := @parameter0: android.media.AsyncPlayer;

        r1 := @parameter1: android.media.AsyncPlayer$Thread;

        r0.<android.media.AsyncPlayer: android.media.AsyncPlayer$Thread mThread> = r1;

        return r1;
    }

    static void access$500(android.media.AsyncPlayer)
    {
        android.media.AsyncPlayer r0;

        r0 := @parameter0: android.media.AsyncPlayer;

        specialinvoke r0.<android.media.AsyncPlayer: void releaseWakeLock()>();

        return;
    }

    private void acquireWakeLock()
    {
        android.media.AsyncPlayer r0;
        android.os.PowerManager$WakeLock $r1, $r2;

        r0 := @this: android.media.AsyncPlayer;

        $r1 = r0.<android.media.AsyncPlayer: android.os.PowerManager$WakeLock mWakeLock>;

        if $r1 == null goto label1;

        $r2 = r0.<android.media.AsyncPlayer: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r2.<android.os.PowerManager$WakeLock: void acquire()>();

     label1:
        return;
    }

    private void enqueueLocked(android.media.AsyncPlayer$Command)
    {
        android.media.AsyncPlayer r0;
        android.media.AsyncPlayer$Command r1;
        java.util.LinkedList $r2;
        android.media.AsyncPlayer$Thread $r3, $r4, $r5;

        r0 := @this: android.media.AsyncPlayer;

        r1 := @parameter0: android.media.AsyncPlayer$Command;

        $r2 = r0.<android.media.AsyncPlayer: java.util.LinkedList mCmdQueue>;

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>(r1);

        $r3 = r0.<android.media.AsyncPlayer: android.media.AsyncPlayer$Thread mThread>;

        if $r3 != null goto label1;

        specialinvoke r0.<android.media.AsyncPlayer: void acquireWakeLock()>();

        $r4 = new android.media.AsyncPlayer$Thread;

        specialinvoke $r4.<android.media.AsyncPlayer$Thread: void <init>(android.media.AsyncPlayer)>(r0);

        r0.<android.media.AsyncPlayer: android.media.AsyncPlayer$Thread mThread> = $r4;

        $r5 = r0.<android.media.AsyncPlayer: android.media.AsyncPlayer$Thread mThread>;

        virtualinvoke $r5.<android.media.AsyncPlayer$Thread: void start()>();

     label1:
        return;
    }

    private void releaseWakeLock()
    {
        android.media.AsyncPlayer r0;
        android.os.PowerManager$WakeLock $r1, $r2;

        r0 := @this: android.media.AsyncPlayer;

        $r1 = r0.<android.media.AsyncPlayer: android.os.PowerManager$WakeLock mWakeLock>;

        if $r1 == null goto label1;

        $r2 = r0.<android.media.AsyncPlayer: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r2.<android.os.PowerManager$WakeLock: void release()>();

     label1:
        return;
    }

    private void startSound(android.media.AsyncPlayer$Command)
    {
        android.media.AsyncPlayer r0;
        android.media.AsyncPlayer$Command r1;
        android.media.MediaPlayer r2, $r4, $r7, $r14;
        java.lang.Exception r3, $r16;
        long l0, $l2, $l3;
        int $i1;
        android.net.Uri $r5, $r20;
        android.content.Context $r6;
        boolean $z0;
        byte $b4;
        java.lang.String $r8, $r12, $r18, $r21;
        java.lang.StringBuilder $r9, $r10, $r11, $r13, $r15, $r17, $r19;

        r0 := @this: android.media.AsyncPlayer;

        r1 := @parameter0: android.media.AsyncPlayer$Command;

     label1:
        $r4 = new android.media.MediaPlayer;

        specialinvoke $r4.<android.media.MediaPlayer: void <init>()>();

        r2 = $r4;

        $i1 = r1.<android.media.AsyncPlayer$Command: int stream>;

        virtualinvoke r2.<android.media.MediaPlayer: void setAudioStreamType(int)>($i1);

        $r6 = r1.<android.media.AsyncPlayer$Command: android.content.Context context>;

        $r5 = r1.<android.media.AsyncPlayer$Command: android.net.Uri uri>;

        virtualinvoke r2.<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)>($r6, $r5);

        $z0 = r1.<android.media.AsyncPlayer$Command: boolean looping>;

        virtualinvoke r2.<android.media.MediaPlayer: void setLooping(boolean)>($z0);

        virtualinvoke r2.<android.media.MediaPlayer: void prepare()>();

        virtualinvoke r2.<android.media.MediaPlayer: void start()>();

        $r7 = r0.<android.media.AsyncPlayer: android.media.MediaPlayer mPlayer>;

        if $r7 == null goto label2;

        $r14 = r0.<android.media.AsyncPlayer: android.media.MediaPlayer mPlayer>;

        virtualinvoke $r14.<android.media.MediaPlayer: void release()>();

     label2:
        r0.<android.media.AsyncPlayer: android.media.MediaPlayer mPlayer> = r2;

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l3 = r1.<android.media.AsyncPlayer$Command: long requestTime>;

        l0 = $l2 - $l3;

     label3:
        $b4 = l0 cmp 1000L;

        if $b4 <= 0 goto label5;

     label4:
        $r8 = r0.<android.media.AsyncPlayer: java.lang.String mTag>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Notification sound delayed by ");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("msecs");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r8, $r12);

     label5:
        return;

     label6:
        $r16 := @caughtexception;

        r3 = $r16;

        $r18 = r0.<android.media.AsyncPlayer: java.lang.String mTag>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error loading sound for ");

        $r20 = r1.<android.media.AsyncPlayer$Command: android.net.Uri uri>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r18, $r21, r3);

        return;

        catch java.lang.Exception from label1 to label2 with label6;
        catch java.lang.Exception from label2 to label3 with label6;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    public void play(android.content.Context, android.net.Uri, boolean, int)
    {
        android.media.AsyncPlayer r0;
        android.content.Context r1;
        android.net.Uri r2;
        boolean z0;
        int i0;
        android.media.AsyncPlayer$Command r3, $r6;
        java.util.LinkedList r4;
        java.lang.Throwable r5, $r7;
        long $l1;

        r0 := @this: android.media.AsyncPlayer;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.net.Uri;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        $r6 = new android.media.AsyncPlayer$Command;

        specialinvoke $r6.<android.media.AsyncPlayer$Command: void <init>(android.media.AsyncPlayer$1)>(null);

        r3 = $r6;

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r3.<android.media.AsyncPlayer$Command: long requestTime> = $l1;

        r3.<android.media.AsyncPlayer$Command: int code> = 1;

        r3.<android.media.AsyncPlayer$Command: android.content.Context context> = r1;

        r3.<android.media.AsyncPlayer$Command: android.net.Uri uri> = r2;

        r3.<android.media.AsyncPlayer$Command: boolean looping> = z0;

        r3.<android.media.AsyncPlayer$Command: int stream> = i0;

        r4 = r0.<android.media.AsyncPlayer: java.util.LinkedList mCmdQueue>;

        entermonitor r4;

     label1:
        specialinvoke r0.<android.media.AsyncPlayer: void enqueueLocked(android.media.AsyncPlayer$Command)>(r3);

        r0.<android.media.AsyncPlayer: int mState> = 1;

        exitmonitor r4;

     label2:
        return;

     label3:
        $r7 := @caughtexception;

        r5 = $r7;

     label4:
        exitmonitor r4;

     label5:
        throw r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setUsesWakeLock(android.content.Context)
    {
        android.media.AsyncPlayer r0;
        android.content.Context r1;
        android.os.PowerManager$WakeLock $r2, $r6, $r16;
        java.lang.RuntimeException $r3;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r10;
        android.media.AsyncPlayer$Thread $r9, $r12;
        java.lang.String $r11, $r14;
        java.lang.Object $r13;
        android.os.PowerManager $r15;

        r0 := @this: android.media.AsyncPlayer;

        r1 := @parameter0: android.content.Context;

        $r2 = r0.<android.media.AsyncPlayer: android.os.PowerManager$WakeLock mWakeLock>;

        if $r2 != null goto label1;

        $r12 = r0.<android.media.AsyncPlayer: android.media.AsyncPlayer$Thread mThread>;

        if $r12 == null goto label2;

     label1:
        $r3 = new java.lang.RuntimeException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("assertion failed mWakeLock=");

        $r6 = r0.<android.media.AsyncPlayer: android.os.PowerManager$WakeLock mWakeLock>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mThread=");

        $r9 = r0.<android.media.AsyncPlayer: android.media.AsyncPlayer$Thread mThread>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11);

        throw $r3;

     label2:
        $r13 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        $r15 = (android.os.PowerManager) $r13;

        $r14 = r0.<android.media.AsyncPlayer: java.lang.String mTag>;

        $r16 = virtualinvoke $r15.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, $r14);

        r0.<android.media.AsyncPlayer: android.os.PowerManager$WakeLock mWakeLock> = $r16;

        return;
    }

    public void stop()
    {
        android.media.AsyncPlayer r0;
        java.util.LinkedList r1;
        java.lang.Throwable r2, $r5;
        android.media.AsyncPlayer$Command r3, $r4;
        int $i0;
        long $l1;

        r0 := @this: android.media.AsyncPlayer;

        r1 = r0.<android.media.AsyncPlayer: java.util.LinkedList mCmdQueue>;

        entermonitor r1;

     label1:
        $i0 = r0.<android.media.AsyncPlayer: int mState>;

        if $i0 == 2 goto label2;

        $r4 = new android.media.AsyncPlayer$Command;

        specialinvoke $r4.<android.media.AsyncPlayer$Command: void <init>(android.media.AsyncPlayer$1)>(null);

        r3 = $r4;

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r3.<android.media.AsyncPlayer$Command: long requestTime> = $l1;

        r3.<android.media.AsyncPlayer$Command: int code> = 2;

        specialinvoke r0.<android.media.AsyncPlayer: void enqueueLocked(android.media.AsyncPlayer$Command)>(r3);

        r0.<android.media.AsyncPlayer: int mState> = 2;

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r5 := @caughtexception;

        r2 = $r5;

     label5:
        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static void <clinit>()
    {
        <android.media.AsyncPlayer: int STOP> = 2;

        <android.media.AsyncPlayer: int PLAY> = 1;

        return;
    }
}
