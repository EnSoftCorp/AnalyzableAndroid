class com.android.internal.policy.impl.PhoneWindowManager$MyOrientationListener extends com.android.internal.policy.impl.WindowOrientationListener
{
    final com.android.internal.policy.impl.PhoneWindowManager this$0;

    void <init>(com.android.internal.policy.impl.PhoneWindowManager, android.content.Context, android.os.Handler)
    {
        com.android.internal.policy.impl.PhoneWindowManager$MyOrientationListener r0;
        com.android.internal.policy.impl.PhoneWindowManager r1;
        android.content.Context r2;
        android.os.Handler r3;

        r0 := @this: com.android.internal.policy.impl.PhoneWindowManager$MyOrientationListener;

        r1 := @parameter0: com.android.internal.policy.impl.PhoneWindowManager;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: android.os.Handler;

        r0.<com.android.internal.policy.impl.PhoneWindowManager$MyOrientationListener: com.android.internal.policy.impl.PhoneWindowManager this$0> = r1;

        specialinvoke r0.<com.android.internal.policy.impl.WindowOrientationListener: void <init>(android.content.Context,android.os.Handler)>(r2, r3);

        return;
    }

    public void onProposedRotationChanged(int)
    {
        com.android.internal.policy.impl.PhoneWindowManager$MyOrientationListener r0;
        int i0;
        com.android.internal.policy.impl.PhoneWindowManager $r1;

        r0 := @this: com.android.internal.policy.impl.PhoneWindowManager$MyOrientationListener;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.policy.impl.PhoneWindowManager$MyOrientationListener: com.android.internal.policy.impl.PhoneWindowManager this$0>;

        virtualinvoke $r1.<com.android.internal.policy.impl.PhoneWindowManager: void updateRotation(boolean)>(0);

        return;
    }
}
