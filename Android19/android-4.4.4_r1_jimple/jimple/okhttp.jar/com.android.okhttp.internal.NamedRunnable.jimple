public abstract class com.android.okhttp.internal.NamedRunnable extends java.lang.Object implements java.lang.Runnable
{
    private final java.lang.String name;

    public transient void <init>(java.lang.String, java.lang.Object[])
    {
        com.android.okhttp.internal.NamedRunnable r0;
        java.lang.String r1, $r3;
        java.lang.Object[] r2;

        r0 := @this: com.android.okhttp.internal.NamedRunnable;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, r2);

        r0.<com.android.okhttp.internal.NamedRunnable: java.lang.String name> = $r3;

        return;
    }

    protected abstract void execute();

    public final void run()
    {
        com.android.okhttp.internal.NamedRunnable r0;
        java.lang.String r1, $r5;
        java.lang.Throwable r2, $r7;
        java.lang.Thread $r3, $r4, $r6, $r8;

        r0 := @this: com.android.okhttp.internal.NamedRunnable;

        $r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r1 = virtualinvoke $r3.<java.lang.Thread: java.lang.String getName()>();

        $r4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r5 = r0.<com.android.okhttp.internal.NamedRunnable: java.lang.String name>;

        virtualinvoke $r4.<java.lang.Thread: void setName(java.lang.String)>($r5);

     label1:
        virtualinvoke r0.<com.android.okhttp.internal.NamedRunnable: void execute()>();

     label2:
        $r6 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r6.<java.lang.Thread: void setName(java.lang.String)>(r1);

        return;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        $r8 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r8.<java.lang.Thread: void setName(java.lang.String)>(r1);

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
