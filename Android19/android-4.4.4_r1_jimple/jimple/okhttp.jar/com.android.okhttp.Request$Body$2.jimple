final class com.android.okhttp.Request$Body$2 extends com.android.okhttp.Request$Body
{
    final com.android.okhttp.MediaType val$contentType;
    final java.io.File val$file;

    void <init>(com.android.okhttp.MediaType, java.io.File)
    {
        com.android.okhttp.Request$Body$2 r0;
        com.android.okhttp.MediaType r1;
        java.io.File r2;

        r0 := @this: com.android.okhttp.Request$Body$2;

        r1 := @parameter0: com.android.okhttp.MediaType;

        r2 := @parameter1: java.io.File;

        r0.<com.android.okhttp.Request$Body$2: com.android.okhttp.MediaType val$contentType> = r1;

        r0.<com.android.okhttp.Request$Body$2: java.io.File val$file> = r2;

        specialinvoke r0.<com.android.okhttp.Request$Body: void <init>()>();

        return;
    }

    public long contentLength()
    {
        com.android.okhttp.Request$Body$2 r0;
        java.io.File $r1;
        long $l0;

        r0 := @this: com.android.okhttp.Request$Body$2;

        $r1 = r0.<com.android.okhttp.Request$Body$2: java.io.File val$file>;

        $l0 = virtualinvoke $r1.<java.io.File: long length()>();

        return $l0;
    }

    public com.android.okhttp.MediaType contentType()
    {
        com.android.okhttp.Request$Body$2 r0;
        com.android.okhttp.MediaType $r1;

        r0 := @this: com.android.okhttp.Request$Body$2;

        $r1 = r0.<com.android.okhttp.Request$Body$2: com.android.okhttp.MediaType val$contentType>;

        return $r1;
    }

    public void writeTo(java.io.OutputStream) throws java.io.IOException
    {
        com.android.okhttp.Request$Body$2 r0;
        java.io.OutputStream r1;
        long l0, $l3;
        java.io.FileInputStream r2, r4, $r6;
        java.lang.Throwable r3, $r8, $r9;
        byte[] r5;
        int i1, $i4;
        byte $b2;
        java.io.File $r7;

        r0 := @this: com.android.okhttp.Request$Body$2;

        r1 := @parameter0: java.io.OutputStream;

        l0 = virtualinvoke r0.<com.android.okhttp.Request$Body$2: long contentLength()>();

        $b2 = l0 cmp 0L;

        if $b2 != 0 goto label01;

        return;

     label01:
        $r6 = new java.io.FileInputStream;

        $r7 = r0.<com.android.okhttp.Request$Body$2: java.io.File val$file>;

        specialinvoke $r6.<java.io.FileInputStream: void <init>(java.io.File)>($r7);

        r2 = $r6;

     label02:
        $l3 = staticinvoke <java.lang.Math: long min(long,long)>(8192L, l0);

        $i4 = (int) $l3;

        r5 = newarray (byte)[$i4];

     label03:
        i1 = virtualinvoke r2.<java.io.InputStream: int read(byte[])>(r5);

     label04:
        if i1 == -1 goto label09;

     label05:
        virtualinvoke r1.<java.io.OutputStream: void write(byte[],int,int)>(r5, 0, i1);

     label06:
        goto label03;

     label07:
        $r8 := @caughtexception;

        r3 = $r8;

        r4 = r2;

     label08:
        staticinvoke <com.android.okhttp.internal.Util: void closeQuietly(java.io.Closeable)>(r4);

        throw r3;

     label09:
        staticinvoke <com.android.okhttp.internal.Util: void closeQuietly(java.io.Closeable)>(r2);

        return;

     label10:
        $r9 := @caughtexception;

        r3 = $r9;

        r4 = null;

        goto label08;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
    }
}
