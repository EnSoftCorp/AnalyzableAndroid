final class com.android.okhttp.internal.DiskLruCache$Entry extends java.lang.Object
{
    private com.android.okhttp.internal.DiskLruCache$Editor currentEditor;
    private final java.lang.String key;
    private final long[] lengths;
    private boolean readable;
    private long sequenceNumber;
    final com.android.okhttp.internal.DiskLruCache this$0;

    private void <init>(com.android.okhttp.internal.DiskLruCache, java.lang.String)
    {
        com.android.okhttp.internal.DiskLruCache$Entry r0;
        com.android.okhttp.internal.DiskLruCache r1;
        java.lang.String r2;
        int $i0;
        long[] $r3;

        r0 := @this: com.android.okhttp.internal.DiskLruCache$Entry;

        r1 := @parameter0: com.android.okhttp.internal.DiskLruCache;

        r2 := @parameter1: java.lang.String;

        r0.<com.android.okhttp.internal.DiskLruCache$Entry: com.android.okhttp.internal.DiskLruCache this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.okhttp.internal.DiskLruCache$Entry: java.lang.String key> = r2;

        $i0 = staticinvoke <com.android.okhttp.internal.DiskLruCache: int access$1800(com.android.okhttp.internal.DiskLruCache)>(r1);

        $r3 = newarray (long)[$i0];

        r0.<com.android.okhttp.internal.DiskLruCache$Entry: long[] lengths> = $r3;

        return;
    }

    void <init>(com.android.okhttp.internal.DiskLruCache, java.lang.String, com.android.okhttp.internal.DiskLruCache$1)
    {
        com.android.okhttp.internal.DiskLruCache$Entry r0;
        com.android.okhttp.internal.DiskLruCache r1;
        java.lang.String r2;
        com.android.okhttp.internal.DiskLruCache$1 r3;

        r0 := @this: com.android.okhttp.internal.DiskLruCache$Entry;

        r1 := @parameter0: com.android.okhttp.internal.DiskLruCache;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: com.android.okhttp.internal.DiskLruCache$1;

        specialinvoke r0.<com.android.okhttp.internal.DiskLruCache$Entry: void <init>(com.android.okhttp.internal.DiskLruCache,java.lang.String)>(r1, r2);

        return;
    }

    static long[] access$1000(com.android.okhttp.internal.DiskLruCache$Entry)
    {
        com.android.okhttp.internal.DiskLruCache$Entry r0;
        long[] $r1;

        r0 := @parameter0: com.android.okhttp.internal.DiskLruCache$Entry;

        $r1 = r0.<com.android.okhttp.internal.DiskLruCache$Entry: long[] lengths>;

        return $r1;
    }

    static java.lang.String access$1100(com.android.okhttp.internal.DiskLruCache$Entry)
    {
        com.android.okhttp.internal.DiskLruCache$Entry r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.okhttp.internal.DiskLruCache$Entry;

        $r1 = r0.<com.android.okhttp.internal.DiskLruCache$Entry: java.lang.String key>;

        return $r1;
    }

    static long access$1200(com.android.okhttp.internal.DiskLruCache$Entry)
    {
        com.android.okhttp.internal.DiskLruCache$Entry r0;
        long $l0;

        r0 := @parameter0: com.android.okhttp.internal.DiskLruCache$Entry;

        $l0 = r0.<com.android.okhttp.internal.DiskLruCache$Entry: long sequenceNumber>;

        return $l0;
    }

    static long access$1202(com.android.okhttp.internal.DiskLruCache$Entry, long)
    {
        com.android.okhttp.internal.DiskLruCache$Entry r0;
        long l0;

        r0 := @parameter0: com.android.okhttp.internal.DiskLruCache$Entry;

        l0 := @parameter1: long;

        r0.<com.android.okhttp.internal.DiskLruCache$Entry: long sequenceNumber> = l0;

        return l0;
    }

    static boolean access$600(com.android.okhttp.internal.DiskLruCache$Entry)
    {
        com.android.okhttp.internal.DiskLruCache$Entry r0;
        boolean $z0;

        r0 := @parameter0: com.android.okhttp.internal.DiskLruCache$Entry;

        $z0 = r0.<com.android.okhttp.internal.DiskLruCache$Entry: boolean readable>;

        return $z0;
    }

    static boolean access$602(com.android.okhttp.internal.DiskLruCache$Entry, boolean)
    {
        com.android.okhttp.internal.DiskLruCache$Entry r0;
        boolean z0;

        r0 := @parameter0: com.android.okhttp.internal.DiskLruCache$Entry;

        z0 := @parameter1: boolean;

        r0.<com.android.okhttp.internal.DiskLruCache$Entry: boolean readable> = z0;

        return z0;
    }

    static com.android.okhttp.internal.DiskLruCache$Editor access$700(com.android.okhttp.internal.DiskLruCache$Entry)
    {
        com.android.okhttp.internal.DiskLruCache$Entry r0;
        com.android.okhttp.internal.DiskLruCache$Editor $r1;

        r0 := @parameter0: com.android.okhttp.internal.DiskLruCache$Entry;

        $r1 = r0.<com.android.okhttp.internal.DiskLruCache$Entry: com.android.okhttp.internal.DiskLruCache$Editor currentEditor>;

        return $r1;
    }

    static com.android.okhttp.internal.DiskLruCache$Editor access$702(com.android.okhttp.internal.DiskLruCache$Entry, com.android.okhttp.internal.DiskLruCache$Editor)
    {
        com.android.okhttp.internal.DiskLruCache$Entry r0;
        com.android.okhttp.internal.DiskLruCache$Editor r1;

        r0 := @parameter0: com.android.okhttp.internal.DiskLruCache$Entry;

        r1 := @parameter1: com.android.okhttp.internal.DiskLruCache$Editor;

        r0.<com.android.okhttp.internal.DiskLruCache$Entry: com.android.okhttp.internal.DiskLruCache$Editor currentEditor> = r1;

        return r1;
    }

    static void access$800(com.android.okhttp.internal.DiskLruCache$Entry, java.lang.String[]) throws java.io.IOException
    {
        com.android.okhttp.internal.DiskLruCache$Entry r0;
        java.lang.String[] r1;

        r0 := @parameter0: com.android.okhttp.internal.DiskLruCache$Entry;

        r1 := @parameter1: java.lang.String[];

        specialinvoke r0.<com.android.okhttp.internal.DiskLruCache$Entry: void setLengths(java.lang.String[])>(r1);

        return;
    }

    private java.io.IOException invalidLengths(java.lang.String[]) throws java.io.IOException
    {
        com.android.okhttp.internal.DiskLruCache$Entry r0;
        java.lang.String[] r1;
        java.io.IOException $r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r7;

        r0 := @this: com.android.okhttp.internal.DiskLruCache$Entry;

        r1 := @parameter0: java.lang.String[];

        $r2 = new java.io.IOException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unexpected journal line: ");

        $r5 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r1);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r2;
    }

    private void setLengths(java.lang.String[]) throws java.io.IOException
    {
        com.android.okhttp.internal.DiskLruCache$Entry r0;
        java.lang.String[] r1;
        int i0, $i1, $i2, $i3;
        com.android.okhttp.internal.DiskLruCache $r3;
        java.lang.String $r4;
        long[] $r5;
        long $l4;
        java.io.IOException $r6, $r8;
        java.lang.NumberFormatException $r7;

        r0 := @this: com.android.okhttp.internal.DiskLruCache$Entry;

        r1 := @parameter0: java.lang.String[];

        $i1 = lengthof r1;

        $r3 = r0.<com.android.okhttp.internal.DiskLruCache$Entry: com.android.okhttp.internal.DiskLruCache this$0>;

        $i2 = staticinvoke <com.android.okhttp.internal.DiskLruCache: int access$1800(com.android.okhttp.internal.DiskLruCache)>($r3);

        if $i1 == $i2 goto label1;

        $r6 = specialinvoke r0.<com.android.okhttp.internal.DiskLruCache$Entry: java.io.IOException invalidLengths(java.lang.String[])>(r1);

        throw $r6;

     label1:
        i0 = 0;

     label2:
        $i3 = lengthof r1;

        if i0 >= $i3 goto label5;

        $r5 = r0.<com.android.okhttp.internal.DiskLruCache$Entry: long[] lengths>;

        $r4 = r1[i0];

        $l4 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r4);

        $r5[i0] = $l4;

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        $r7 := @caughtexception;

        $r8 = specialinvoke r0.<com.android.okhttp.internal.DiskLruCache$Entry: java.io.IOException invalidLengths(java.lang.String[])>(r1);

        throw $r8;

     label5:
        return;

        catch java.lang.NumberFormatException from label2 to label3 with label4;
    }

    public java.io.File getCleanFile(int)
    {
        com.android.okhttp.internal.DiskLruCache$Entry r0;
        int i0;
        java.io.File $r1, $r3;
        com.android.okhttp.internal.DiskLruCache $r2;
        java.lang.StringBuilder $r4, $r6, $r7, $r8;
        java.lang.String $r5, $r9;

        r0 := @this: com.android.okhttp.internal.DiskLruCache$Entry;

        i0 := @parameter0: int;

        $r1 = new java.io.File;

        $r2 = r0.<com.android.okhttp.internal.DiskLruCache$Entry: com.android.okhttp.internal.DiskLruCache this$0>;

        $r3 = staticinvoke <com.android.okhttp.internal.DiskLruCache: java.io.File access$1900(com.android.okhttp.internal.DiskLruCache)>($r2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<com.android.okhttp.internal.DiskLruCache$Entry: java.lang.String key>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r9);

        return $r1;
    }

    public java.io.File getDirtyFile(int)
    {
        com.android.okhttp.internal.DiskLruCache$Entry r0;
        int i0;
        java.io.File $r1, $r3;
        com.android.okhttp.internal.DiskLruCache $r2;
        java.lang.StringBuilder $r4, $r6, $r7, $r8, $r9;
        java.lang.String $r5, $r10;

        r0 := @this: com.android.okhttp.internal.DiskLruCache$Entry;

        i0 := @parameter0: int;

        $r1 = new java.io.File;

        $r2 = r0.<com.android.okhttp.internal.DiskLruCache$Entry: com.android.okhttp.internal.DiskLruCache this$0>;

        $r3 = staticinvoke <com.android.okhttp.internal.DiskLruCache: java.io.File access$1900(com.android.okhttp.internal.DiskLruCache)>($r2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<com.android.okhttp.internal.DiskLruCache$Entry: java.lang.String key>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".tmp");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r10);

        return $r1;
    }

    public java.lang.String getLengths() throws java.io.IOException
    {
        com.android.okhttp.internal.DiskLruCache$Entry r0;
        java.lang.StringBuilder r1, $r3, $r5;
        long[] r2;
        int i0, i1;
        long l2;
        java.lang.String $r4;

        r0 := @this: com.android.okhttp.internal.DiskLruCache$Entry;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r1 = $r3;

        r2 = r0.<com.android.okhttp.internal.DiskLruCache$Entry: long[] lengths>;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        l2 = r2[i1];

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l2);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
}
