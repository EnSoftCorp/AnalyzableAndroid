final class com.android.okhttp.internal.spdy.SpdyReader extends java.lang.Object implements java.io.Closeable
{
    static final byte[] DICTIONARY;
    private int compressedLimit;
    private final java.io.DataInputStream in;
    private final java.io.DataInputStream nameValueBlockIn;

    static void <clinit>()
    {
        java.nio.charset.Charset $r1;
        java.lang.String $r2, $r3;
        byte[] $r4;
        java.io.UnsupportedEncodingException $r5;
        java.lang.AssertionError $r6;

     label1:
        $r2 = "\u0000\u0000\u0000\u0007options\u0000\u0000\u0000\u0004head\u0000\u0000\u0000\u0004post\u0000\u0000\u0000\u0003put\u0000\u0000\u0000\u0006delete\u0000\u0000\u0000\u0005trace\u0000\u0000\u0000\u0006accept\u0000\u0000\u0000\u000eaccept-charset\u0000\u0000\u0000\u000faccept-encoding\u0000\u0000\u0000\u000faccept-language\u0000\u0000\u0000\raccept-ranges\u0000\u0000\u0000\u0003age\u0000\u0000\u0000\u0005allow\u0000\u0000\u0000\rauthorization\u0000\u0000\u0000\rcache-control\u0000\u0000\u0000\nconnection\u0000\u0000\u0000\fcontent-base\u0000\u0000\u0000\u0010content-encoding\u0000\u0000\u0000\u0010content-language\u0000\u0000\u0000\u000econtent-length\u0000\u0000\u0000\u0010content-location\u0000\u0000\u0000\u000bcontent-md5\u0000\u0000\u0000\rcontent-range\u0000\u0000\u0000\fcontent-type\u0000\u0000\u0000\u0004date\u0000\u0000\u0000\u0004etag\u0000\u0000\u0000\u0006expect\u0000\u0000\u0000\u0007expires\u0000\u0000\u0000\u0004from\u0000\u0000\u0000\u0004host\u0000\u0000\u0000\u0008if-match\u0000\u0000\u0000\u0011if-modified-since\u0000\u0000\u0000\rif-none-match\u0000\u0000\u0000\u0008if-range\u0000\u0000\u0000\u0013if-unmodified-since\u0000\u0000\u0000\rlast-modified\u0000\u0000\u0000\u0008location\u0000\u0000\u0000\fmax-forwards\u0000\u0000\u0000\u0006pragma\u0000\u0000\u0000\u0012proxy-authenticate\u0000\u0000\u0000\u0013proxy-authorization\u0000\u0000\u0000\u0005range\u0000\u0000\u0000\u0007referer\u0000\u0000\u0000\u000bretry-after\u0000\u0000\u0000\u0006server\u0000\u0000\u0000\u0002te\u0000\u0000\u0000\u0007trailer\u0000\u0000\u0000\u0011transfer-encoding\u0000\u0000\u0000\u0007upgrade\u0000\u0000\u0000\nuser-agent\u0000\u0000\u0000\u0004vary\u0000\u0000\u0000\u0003via\u0000\u0000\u0000\u0007warning\u0000\u0000\u0000\u0010www-authenticate\u0000\u0000\u0000\u0006method\u0000\u0000\u0000\u0003get\u0000\u0000\u0000\u0006status\u0000\u0000\u0000\u0006200 OK\u0000\u0000\u0000\u0007version\u0000\u0000\u0000\u0008HTTP/1.1\u0000\u0000\u0000\u0003url\u0000\u0000\u0000\u0006public\u0000\u0000\u0000\nset-cookie\u0000\u0000\u0000\nkeep-alive\u0000\u0000\u0000\u0006origin100101201202205206300302303304305306307402405406407408409410411412413414415416417502504505203 Non-Authoritative Information204 No Content301 Moved Permanently400 Bad Request401 Unauthorized403 Forbidden404 Not Found500 Internal Server Error501 Not Implemented503 Service UnavailableJan Feb Mar Apr May Jun Jul Aug Sept Oct Nov Dec 00:00:00 Mon, Tue, Wed, Thu, Fri, Sat, Sun, GMTchunked,text/html,image/png,image/jpg,image/gif,application/xml,application/xhtml+xml,text/plain,text/javascript,publicprivatemax-age=gzip,deflate,sdchcharset=utf-8charset=iso-8859-1,utf-,*,enq=0.";

        $r1 = <com.android.okhttp.internal.Util: java.nio.charset.Charset UTF_8>;

        $r3 = virtualinvoke $r1.<java.nio.charset.Charset: java.lang.String name()>();

        $r4 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>($r3);

        <com.android.okhttp.internal.spdy.SpdyReader: byte[] DICTIONARY> = $r4;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    void <init>(java.io.InputStream)
    {
        com.android.okhttp.internal.spdy.SpdyReader r0;
        java.io.InputStream r1;
        java.io.DataInputStream $r2, $r3;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyReader;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.io.DataInputStream;

        specialinvoke $r2.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r1);

        r0.<com.android.okhttp.internal.spdy.SpdyReader: java.io.DataInputStream in> = $r2;

        $r3 = specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyReader: java.io.DataInputStream newNameValueBlockStream()>();

        r0.<com.android.okhttp.internal.spdy.SpdyReader: java.io.DataInputStream nameValueBlockIn> = $r3;

        return;
    }

    static int access$000(com.android.okhttp.internal.spdy.SpdyReader)
    {
        com.android.okhttp.internal.spdy.SpdyReader r0;
        int $i0;

        r0 := @parameter0: com.android.okhttp.internal.spdy.SpdyReader;

        $i0 = r0.<com.android.okhttp.internal.spdy.SpdyReader: int compressedLimit>;

        return $i0;
    }

    static int access$020(com.android.okhttp.internal.spdy.SpdyReader, int)
    {
        com.android.okhttp.internal.spdy.SpdyReader r0;
        int i0, i1, $i2;

        r0 := @parameter0: com.android.okhttp.internal.spdy.SpdyReader;

        i0 := @parameter1: int;

        $i2 = r0.<com.android.okhttp.internal.spdy.SpdyReader: int compressedLimit>;

        i1 = $i2 - i0;

        r0.<com.android.okhttp.internal.spdy.SpdyReader: int compressedLimit> = i1;

        return i1;
    }

    static java.io.DataInputStream access$100(com.android.okhttp.internal.spdy.SpdyReader)
    {
        com.android.okhttp.internal.spdy.SpdyReader r0;
        java.io.DataInputStream $r1;

        r0 := @parameter0: com.android.okhttp.internal.spdy.SpdyReader;

        $r1 = r0.<com.android.okhttp.internal.spdy.SpdyReader: java.io.DataInputStream in>;

        return $r1;
    }

    private static transient java.io.IOException ioException(java.lang.String, java.lang.Object[]) throws java.io.IOException
    {
        java.lang.String r0, $r3;
        java.lang.Object[] r1;
        java.io.IOException $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object[];

        $r2 = new java.io.IOException;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r0, r1);

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r3);

        throw $r2;
    }

    private java.io.DataInputStream newNameValueBlockStream()
    {
        com.android.okhttp.internal.spdy.SpdyReader r0;
        java.io.DataInputStream $r1;
        java.util.zip.InflaterInputStream $r2;
        com.android.okhttp.internal.spdy.SpdyReader$1 $r3;
        com.android.okhttp.internal.spdy.SpdyReader$2 $r4;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyReader;

        $r1 = new java.io.DataInputStream;

        $r2 = new java.util.zip.InflaterInputStream;

        $r3 = new com.android.okhttp.internal.spdy.SpdyReader$1;

        specialinvoke $r3.<com.android.okhttp.internal.spdy.SpdyReader$1: void <init>(com.android.okhttp.internal.spdy.SpdyReader)>(r0);

        $r4 = new com.android.okhttp.internal.spdy.SpdyReader$2;

        specialinvoke $r4.<com.android.okhttp.internal.spdy.SpdyReader$2: void <init>(com.android.okhttp.internal.spdy.SpdyReader)>(r0);

        specialinvoke $r2.<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream,java.util.zip.Inflater)>($r3, $r4);

        specialinvoke $r1.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r2);

        return $r1;
    }

    private void readGoAway(com.android.okhttp.internal.spdy.SpdyReader$Handler, int, int) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyReader r0;
        com.android.okhttp.internal.spdy.SpdyReader$Handler r1;
        int i0, i1, $i2, $i3, $i4;
        java.lang.Object[] r2;
        java.io.DataInputStream $r3, $r4;
        java.lang.Integer $r5;
        java.io.IOException $r6;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyReader;

        r1 := @parameter0: com.android.okhttp.internal.spdy.SpdyReader$Handler;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i1 == 8 goto label1;

        r2 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        r2[0] = $r5;

        $r6 = staticinvoke <com.android.okhttp.internal.spdy.SpdyReader: java.io.IOException ioException(java.lang.String,java.lang.Object[])>("TYPE_GOAWAY length: %d != 8", r2);

        throw $r6;

     label1:
        $r3 = r0.<com.android.okhttp.internal.spdy.SpdyReader: java.io.DataInputStream in>;

        $i2 = virtualinvoke $r3.<java.io.DataInputStream: int readInt()>();

        $i3 = 2147483647 & $i2;

        $r4 = r0.<com.android.okhttp.internal.spdy.SpdyReader: java.io.DataInputStream in>;

        $i4 = virtualinvoke $r4.<java.io.DataInputStream: int readInt()>();

        interfaceinvoke r1.<com.android.okhttp.internal.spdy.SpdyReader$Handler: void goAway(int,int,int)>(i0, $i3, $i4);

        return;
    }

    private void readHeaders(com.android.okhttp.internal.spdy.SpdyReader$Handler, int, int) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyReader r0;
        com.android.okhttp.internal.spdy.SpdyReader$Handler r1;
        int i0, i1, $i2, $i3, $i4;
        java.io.DataInputStream $r2;
        java.util.List $r3;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyReader;

        r1 := @parameter0: com.android.okhttp.internal.spdy.SpdyReader$Handler;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.okhttp.internal.spdy.SpdyReader: java.io.DataInputStream in>;

        $i2 = virtualinvoke $r2.<java.io.DataInputStream: int readInt()>();

        $i4 = 2147483647 & $i2;

        $i3 = i1 - 4;

        $r3 = specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyReader: java.util.List readNameValueBlock(int)>($i3);

        interfaceinvoke r1.<com.android.okhttp.internal.spdy.SpdyReader$Handler: void headers(int,int,java.util.List)>(i0, $i4, $r3);

        return;
    }

    private java.util.List readNameValueBlock(int) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyReader r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.util.zip.DataFormatException r1, $r25;
        java.util.ArrayList r2, $r6;
        java.lang.String r3, r4, $r9, $r13, $r17, $r22, $r29;
        java.io.DataInputStream $r5;
        java.lang.Class $r7, $r20;
        java.util.logging.Logger $r8, $r18;
        java.lang.StringBuilder $r10, $r11, $r12, $r21, $r23, $r24;
        java.lang.Object[] $r14, $r15, $r27;
        java.io.IOException $r16, $r19, $r26, $r28;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyReader;

        i0 := @parameter0: int;

        $i3 = r0.<com.android.okhttp.internal.spdy.SpdyReader: int compressedLimit>;

        $i4 = i0 + $i3;

        r0.<com.android.okhttp.internal.spdy.SpdyReader: int compressedLimit> = $i4;

     label01:
        $r5 = r0.<com.android.okhttp.internal.spdy.SpdyReader: java.io.DataInputStream nameValueBlockIn>;

        i1 = virtualinvoke $r5.<java.io.DataInputStream: int readInt()>();

     label02:
        if i1 >= 0 goto label05;

     label03:
        $r20 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r17 = virtualinvoke $r20.<java.lang.Class: java.lang.String getName()>();

        $r18 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r17);

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("numberOfPairs < 0: ");

        $r21 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<java.util.logging.Logger: void warning(java.lang.String)>($r22);

        $r27 = newarray (java.lang.Object)[0];

        $r28 = staticinvoke <com.android.okhttp.internal.spdy.SpdyReader: java.io.IOException ioException(java.lang.String,java.lang.Object[])>("numberOfPairs < 0", $r27);

        throw $r28;

     label04:
        $r25 := @caughtexception;

        r1 = $r25;

        $r26 = new java.io.IOException;

        $r29 = virtualinvoke r1.<java.util.zip.DataFormatException: java.lang.String getMessage()>();

        specialinvoke $r26.<java.io.IOException: void <init>(java.lang.String)>($r29);

        throw $r26;

     label05:
        $r6 = new java.util.ArrayList;

        $i5 = i1 * 2;

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i5);

        r2 = $r6;

     label06:
        i2 = 0;

     label07:
        if i2 >= i1 goto label12;

     label08:
        r3 = specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyReader: java.lang.String readString()>();

        r4 = specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyReader: java.lang.String readString()>();

        $i8 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i8 != 0 goto label09;

        $r15 = newarray (java.lang.Object)[0];

        $r19 = staticinvoke <com.android.okhttp.internal.spdy.SpdyReader: java.io.IOException ioException(java.lang.String,java.lang.Object[])>("name.length == 0", $r15);

        throw $r19;

     label09:
        $i9 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i9 != 0 goto label10;

        $r14 = newarray (java.lang.Object)[0];

        $r16 = staticinvoke <com.android.okhttp.internal.spdy.SpdyReader: java.io.IOException ioException(java.lang.String,java.lang.Object[])>("values.length == 0", $r14);

        throw $r16;

     label10:
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r3);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r4);

     label11:
        i2 = i2 + 1;

        goto label07;

     label12:
        $i6 = r0.<com.android.okhttp.internal.spdy.SpdyReader: int compressedLimit>;

        if $i6 == 0 goto label13;

        $r7 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r8 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r9);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("compressedLimit > 0: ");

        $i7 = r0.<com.android.okhttp.internal.spdy.SpdyReader: int compressedLimit>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.util.logging.Logger: void warning(java.lang.String)>($r13);

     label13:
        return r2;

        catch java.util.zip.DataFormatException from label01 to label02 with label04;
        catch java.util.zip.DataFormatException from label03 to label04 with label04;
        catch java.util.zip.DataFormatException from label05 to label06 with label04;
        catch java.util.zip.DataFormatException from label08 to label09 with label04;
        catch java.util.zip.DataFormatException from label09 to label10 with label04;
        catch java.util.zip.DataFormatException from label10 to label11 with label04;
        catch java.util.zip.DataFormatException from label12 to label13 with label04;
    }

    private void readPing(com.android.okhttp.internal.spdy.SpdyReader$Handler, int, int) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyReader r0;
        com.android.okhttp.internal.spdy.SpdyReader$Handler r1;
        int i0, i1, $i2;
        java.lang.Object[] r2;
        java.io.DataInputStream $r3;
        java.lang.Integer $r4;
        java.io.IOException $r5;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyReader;

        r1 := @parameter0: com.android.okhttp.internal.spdy.SpdyReader$Handler;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i1 == 4 goto label1;

        r2 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        r2[0] = $r4;

        $r5 = staticinvoke <com.android.okhttp.internal.spdy.SpdyReader: java.io.IOException ioException(java.lang.String,java.lang.Object[])>("TYPE_PING length: %d != 4", r2);

        throw $r5;

     label1:
        $r3 = r0.<com.android.okhttp.internal.spdy.SpdyReader: java.io.DataInputStream in>;

        $i2 = virtualinvoke $r3.<java.io.DataInputStream: int readInt()>();

        interfaceinvoke r1.<com.android.okhttp.internal.spdy.SpdyReader$Handler: void ping(int,int)>(i0, $i2);

        return;
    }

    private void readRstStream(com.android.okhttp.internal.spdy.SpdyReader$Handler, int, int) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyReader r0;
        com.android.okhttp.internal.spdy.SpdyReader$Handler r1;
        int i0, i1, $i2, $i3, $i4;
        java.lang.Object[] r2;
        java.io.DataInputStream $r3, $r4;
        java.lang.Integer $r5;
        java.io.IOException $r6;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyReader;

        r1 := @parameter0: com.android.okhttp.internal.spdy.SpdyReader$Handler;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i1 == 8 goto label1;

        r2 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        r2[0] = $r5;

        $r6 = staticinvoke <com.android.okhttp.internal.spdy.SpdyReader: java.io.IOException ioException(java.lang.String,java.lang.Object[])>("TYPE_RST_STREAM length: %d != 8", r2);

        throw $r6;

     label1:
        $r3 = r0.<com.android.okhttp.internal.spdy.SpdyReader: java.io.DataInputStream in>;

        $i2 = virtualinvoke $r3.<java.io.DataInputStream: int readInt()>();

        $i3 = 2147483647 & $i2;

        $r4 = r0.<com.android.okhttp.internal.spdy.SpdyReader: java.io.DataInputStream in>;

        $i4 = virtualinvoke $r4.<java.io.DataInputStream: int readInt()>();

        interfaceinvoke r1.<com.android.okhttp.internal.spdy.SpdyReader$Handler: void rstStream(int,int,int)>(i0, $i3, $i4);

        return;
    }

    private void readSettings(com.android.okhttp.internal.spdy.SpdyReader$Handler, int, int) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyReader r0;
        com.android.okhttp.internal.spdy.SpdyReader$Handler r1;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10;
        com.android.okhttp.internal.spdy.Settings r2, $r5;
        java.lang.Object[] r3;
        java.io.DataInputStream $r4, $r6, $r7;
        java.lang.Integer $r8, $r9;
        java.io.IOException $r10;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyReader;

        r1 := @parameter0: com.android.okhttp.internal.spdy.SpdyReader$Handler;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r4 = r0.<com.android.okhttp.internal.spdy.SpdyReader: java.io.DataInputStream in>;

        i2 = virtualinvoke $r4.<java.io.DataInputStream: int readInt()>();

        $i7 = i2 * 8;

        $i8 = 4 + $i7;

        if i1 == $i8 goto label1;

        r3 = newarray (java.lang.Object)[2];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        r3[0] = $r8;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        r3[1] = $r9;

        $r10 = staticinvoke <com.android.okhttp.internal.spdy.SpdyReader: java.io.IOException ioException(java.lang.String,java.lang.Object[])>("TYPE_SETTINGS length: %d != 4 + 8 * %d", r3);

        throw $r10;

     label1:
        $r5 = new com.android.okhttp.internal.spdy.Settings;

        specialinvoke $r5.<com.android.okhttp.internal.spdy.Settings: void <init>()>();

        r2 = $r5;

        i3 = 0;

     label2:
        if i3 >= i2 goto label3;

        $r6 = r0.<com.android.okhttp.internal.spdy.SpdyReader: java.io.DataInputStream in>;

        i4 = virtualinvoke $r6.<java.io.DataInputStream: int readInt()>();

        $r7 = r0.<com.android.okhttp.internal.spdy.SpdyReader: java.io.DataInputStream in>;

        i5 = virtualinvoke $r7.<java.io.DataInputStream: int readInt()>();

        $i10 = -16777216 & i4;

        i6 = $i10 >>> 24;

        $i9 = i4 & 16777215;

        virtualinvoke r2.<com.android.okhttp.internal.spdy.Settings: void set(int,int,int)>($i9, i6, i5);

        i3 = i3 + 1;

        goto label2;

     label3:
        interfaceinvoke r1.<com.android.okhttp.internal.spdy.SpdyReader$Handler: void settings(int,com.android.okhttp.internal.spdy.Settings)>(i0, r2);

        return;
    }

    private java.lang.String readString() throws java.util.zip.DataFormatException, java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyReader r0;
        int i0;
        byte[] r1;
        java.io.DataInputStream $r2, $r3;
        java.lang.String $r4;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyReader;

        $r2 = r0.<com.android.okhttp.internal.spdy.SpdyReader: java.io.DataInputStream nameValueBlockIn>;

        i0 = virtualinvoke $r2.<java.io.DataInputStream: int readInt()>();

        r1 = newarray (byte)[i0];

        $r3 = r0.<com.android.okhttp.internal.spdy.SpdyReader: java.io.DataInputStream nameValueBlockIn>;

        staticinvoke <com.android.okhttp.internal.Util: void readFully(java.io.InputStream,byte[])>($r3, r1);

        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r1, 0, i0, "UTF-8");

        return $r4;
    }

    private void readSynReply(com.android.okhttp.internal.spdy.SpdyReader$Handler, int, int) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyReader r0;
        com.android.okhttp.internal.spdy.SpdyReader$Handler r1;
        int i0, i1, $i2, $i3, $i4;
        java.io.DataInputStream $r2;
        java.util.List $r3;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyReader;

        r1 := @parameter0: com.android.okhttp.internal.spdy.SpdyReader$Handler;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.okhttp.internal.spdy.SpdyReader: java.io.DataInputStream in>;

        $i2 = virtualinvoke $r2.<java.io.DataInputStream: int readInt()>();

        $i4 = 2147483647 & $i2;

        $i3 = i1 - 4;

        $r3 = specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyReader: java.util.List readNameValueBlock(int)>($i3);

        interfaceinvoke r1.<com.android.okhttp.internal.spdy.SpdyReader$Handler: void synReply(int,int,java.util.List)>(i0, $i4, $r3);

        return;
    }

    private void readSynStream(com.android.okhttp.internal.spdy.SpdyReader$Handler, int, int) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyReader r0;
        com.android.okhttp.internal.spdy.SpdyReader$Handler r1;
        int i0, i1, i2, i3, $i5, $i6, $i7, $i8, $i9;
        short s4, $s10;
        java.io.DataInputStream $r2, $r3, $r4;
        java.util.List $r5;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyReader;

        r1 := @parameter0: com.android.okhttp.internal.spdy.SpdyReader$Handler;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.okhttp.internal.spdy.SpdyReader: java.io.DataInputStream in>;

        i2 = virtualinvoke $r2.<java.io.DataInputStream: int readInt()>();

        $r3 = r0.<com.android.okhttp.internal.spdy.SpdyReader: java.io.DataInputStream in>;

        i3 = virtualinvoke $r3.<java.io.DataInputStream: int readInt()>();

        $r4 = r0.<com.android.okhttp.internal.spdy.SpdyReader: java.io.DataInputStream in>;

        s4 = virtualinvoke $r4.<java.io.DataInputStream: short readShort()>();

        $i7 = i2 & 2147483647;

        $i9 = i3 & 2147483647;

        $i5 = 57344 & s4;

        $i8 = $i5 >>> 13;

        $s10 = s4 & 255;

        $i6 = i1 - 10;

        $r5 = specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyReader: java.util.List readNameValueBlock(int)>($i6);

        interfaceinvoke r1.<com.android.okhttp.internal.spdy.SpdyReader$Handler: void synStream(int,int,int,int,int,java.util.List)>(i0, $i7, $i9, $i8, $s10, $r5);

        return;
    }

    private void readWindowUpdate(com.android.okhttp.internal.spdy.SpdyReader$Handler, int, int) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyReader r0;
        com.android.okhttp.internal.spdy.SpdyReader$Handler r1;
        int i0, i1, i2, i3, $i4, $i5;
        java.lang.Object[] r2;
        java.io.DataInputStream $r3, $r4;
        java.lang.Integer $r5;
        java.io.IOException $r6;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyReader;

        r1 := @parameter0: com.android.okhttp.internal.spdy.SpdyReader$Handler;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i1 == 8 goto label1;

        r2 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        r2[0] = $r5;

        $r6 = staticinvoke <com.android.okhttp.internal.spdy.SpdyReader: java.io.IOException ioException(java.lang.String,java.lang.Object[])>("TYPE_WINDOW_UPDATE length: %d != 8", r2);

        throw $r6;

     label1:
        $r3 = r0.<com.android.okhttp.internal.spdy.SpdyReader: java.io.DataInputStream in>;

        i2 = virtualinvoke $r3.<java.io.DataInputStream: int readInt()>();

        $r4 = r0.<com.android.okhttp.internal.spdy.SpdyReader: java.io.DataInputStream in>;

        i3 = virtualinvoke $r4.<java.io.DataInputStream: int readInt()>();

        $i5 = i2 & 2147483647;

        $i4 = i3 & 2147483647;

        interfaceinvoke r1.<com.android.okhttp.internal.spdy.SpdyReader$Handler: void windowUpdate(int,int,int)>(i0, $i5, $i4);

        return;
    }

    public void close() throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyReader r0;
        java.io.DataInputStream $r1, $r2;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyReader;

        $r2 = r0.<com.android.okhttp.internal.spdy.SpdyReader: java.io.DataInputStream in>;

        $r1 = r0.<com.android.okhttp.internal.spdy.SpdyReader: java.io.DataInputStream nameValueBlockIn>;

        staticinvoke <com.android.okhttp.internal.Util: void closeAll(java.io.Closeable,java.io.Closeable)>($r2, $r1);

        return;
    }

    public boolean nextFrame(com.android.okhttp.internal.spdy.SpdyReader$Handler) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyReader r0;
        com.android.okhttp.internal.spdy.SpdyReader$Handler r1;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9;
        boolean z0;
        java.lang.Object[] r3;
        java.io.DataInputStream $r4, $r5, $r6, $r8;
        long $l10;
        java.io.IOException $r7, $r10, $r15;
        java.lang.UnsupportedOperationException $r9;
        java.lang.Integer $r11;
        java.lang.StringBuilder $r12, $r16, $r17;
        java.net.ProtocolException $r13;
        java.lang.String $r14;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyReader;

        r1 := @parameter0: com.android.okhttp.internal.spdy.SpdyReader$Handler;

     label01:
        $r4 = r0.<com.android.okhttp.internal.spdy.SpdyReader: java.io.DataInputStream in>;

        i0 = virtualinvoke $r4.<java.io.DataInputStream: int readInt()>();

     label02:
        $r5 = r0.<com.android.okhttp.internal.spdy.SpdyReader: java.io.DataInputStream in>;

        i1 = virtualinvoke $r5.<java.io.DataInputStream: int readInt()>();

        $i6 = -2147483648 & i0;

        if $i6 == 0 goto label05;

        z0 = 1;

     label03:
        $i7 = -16777216 & i1;

        i2 = $i7 >>> 24;

        i3 = i1 & 16777215;

        if z0 == 0 goto label19;

        $i8 = 2147418112 & i0;

        i4 = $i8 >>> 16;

        i5 = i0 & 65535;

        if i4 == 3 goto label06;

        $r13 = new java.net.ProtocolException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("version != 3: ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r14 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.net.ProtocolException: void <init>(java.lang.String)>($r14);

        throw $r13;

     label04:
        $r15 := @caughtexception;

        return 0;

     label05:
        z0 = 0;

        goto label03;

     label06:
        tableswitch(i5)
        {
            case 1: goto label08;
            case 2: goto label09;
            case 3: goto label10;
            case 4: goto label11;
            case 5: goto label12;
            case 6: goto label14;
            case 7: goto label15;
            case 8: goto label16;
            case 9: goto label17;
            case 10: goto label07;
            case 11: goto label07;
            case 12: goto label07;
            case 13: goto label07;
            case 14: goto label07;
            case 15: goto label07;
            case 16: goto label18;
            default: goto label07;
        };

     label07:
        $r7 = new java.io.IOException;

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("Unexpected frame");

        throw $r7;

     label08:
        specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyReader: void readSynStream(com.android.okhttp.internal.spdy.SpdyReader$Handler,int,int)>(r1, i2, i3);

        return 1;

     label09:
        specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyReader: void readSynReply(com.android.okhttp.internal.spdy.SpdyReader$Handler,int,int)>(r1, i2, i3);

        return 1;

     label10:
        specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyReader: void readRstStream(com.android.okhttp.internal.spdy.SpdyReader$Handler,int,int)>(r1, i2, i3);

        return 1;

     label11:
        specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyReader: void readSettings(com.android.okhttp.internal.spdy.SpdyReader$Handler,int,int)>(r1, i2, i3);

        return 1;

     label12:
        if i3 == 0 goto label13;

        r3 = newarray (java.lang.Object)[1];

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        r3[0] = $r11;

        $r10 = staticinvoke <com.android.okhttp.internal.spdy.SpdyReader: java.io.IOException ioException(java.lang.String,java.lang.Object[])>("TYPE_NOOP length: %d != 0", r3);

        throw $r10;

     label13:
        interfaceinvoke r1.<com.android.okhttp.internal.spdy.SpdyReader$Handler: void noop()>();

        return 1;

     label14:
        specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyReader: void readPing(com.android.okhttp.internal.spdy.SpdyReader$Handler,int,int)>(r1, i2, i3);

        return 1;

     label15:
        specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyReader: void readGoAway(com.android.okhttp.internal.spdy.SpdyReader$Handler,int,int)>(r1, i2, i3);

        return 1;

     label16:
        specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyReader: void readHeaders(com.android.okhttp.internal.spdy.SpdyReader$Handler,int,int)>(r1, i2, i3);

        return 1;

     label17:
        specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyReader: void readWindowUpdate(com.android.okhttp.internal.spdy.SpdyReader$Handler,int,int)>(r1, i2, i3);

        return 1;

     label18:
        $r8 = r0.<com.android.okhttp.internal.spdy.SpdyReader: java.io.DataInputStream in>;

        $l10 = (long) i3;

        staticinvoke <com.android.okhttp.internal.Util: long skipByReading(java.io.InputStream,long)>($r8, $l10);

        $r9 = new java.lang.UnsupportedOperationException;

        specialinvoke $r9.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("TODO");

        throw $r9;

     label19:
        $i9 = i0 & 2147483647;

        $r6 = r0.<com.android.okhttp.internal.spdy.SpdyReader: java.io.DataInputStream in>;

        interfaceinvoke r1.<com.android.okhttp.internal.spdy.SpdyReader$Handler: void data(int,int,java.io.InputStream,int)>(i2, $i9, $r6, i3);

        return 1;

        catch java.io.IOException from label01 to label02 with label04;
    }
}
