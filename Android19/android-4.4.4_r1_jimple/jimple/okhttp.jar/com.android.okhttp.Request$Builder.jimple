public class com.android.okhttp.Request$Builder extends java.lang.Object
{
    private com.android.okhttp.Request$Body body;
    private final com.android.okhttp.internal.http.RawHeaders headers;
    private java.lang.String method;
    private java.lang.Object tag;
    private java.net.URL url;

    public void <init>(java.lang.String)
    {
        com.android.okhttp.Request$Builder r0;
        java.lang.String r1;
        com.android.okhttp.internal.http.RawHeaders $r2;

        r0 := @this: com.android.okhttp.Request$Builder;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.okhttp.Request$Builder: java.lang.String method> = "GET";

        $r2 = new com.android.okhttp.internal.http.RawHeaders;

        specialinvoke $r2.<com.android.okhttp.internal.http.RawHeaders: void <init>()>();

        r0.<com.android.okhttp.Request$Builder: com.android.okhttp.internal.http.RawHeaders headers> = $r2;

        virtualinvoke r0.<com.android.okhttp.Request$Builder: com.android.okhttp.Request$Builder url(java.lang.String)>(r1);

        return;
    }

    public void <init>(java.net.URL)
    {
        com.android.okhttp.Request$Builder r0;
        java.net.URL r1;
        com.android.okhttp.internal.http.RawHeaders $r2;

        r0 := @this: com.android.okhttp.Request$Builder;

        r1 := @parameter0: java.net.URL;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.okhttp.Request$Builder: java.lang.String method> = "GET";

        $r2 = new com.android.okhttp.internal.http.RawHeaders;

        specialinvoke $r2.<com.android.okhttp.internal.http.RawHeaders: void <init>()>();

        r0.<com.android.okhttp.Request$Builder: com.android.okhttp.internal.http.RawHeaders headers> = $r2;

        virtualinvoke r0.<com.android.okhttp.Request$Builder: com.android.okhttp.Request$Builder url(java.net.URL)>(r1);

        return;
    }

    static java.net.URL access$000(com.android.okhttp.Request$Builder)
    {
        com.android.okhttp.Request$Builder r0;
        java.net.URL $r1;

        r0 := @parameter0: com.android.okhttp.Request$Builder;

        $r1 = r0.<com.android.okhttp.Request$Builder: java.net.URL url>;

        return $r1;
    }

    static java.lang.String access$100(com.android.okhttp.Request$Builder)
    {
        com.android.okhttp.Request$Builder r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.okhttp.Request$Builder;

        $r1 = r0.<com.android.okhttp.Request$Builder: java.lang.String method>;

        return $r1;
    }

    static com.android.okhttp.internal.http.RawHeaders access$200(com.android.okhttp.Request$Builder)
    {
        com.android.okhttp.Request$Builder r0;
        com.android.okhttp.internal.http.RawHeaders $r1;

        r0 := @parameter0: com.android.okhttp.Request$Builder;

        $r1 = r0.<com.android.okhttp.Request$Builder: com.android.okhttp.internal.http.RawHeaders headers>;

        return $r1;
    }

    static com.android.okhttp.Request$Body access$300(com.android.okhttp.Request$Builder)
    {
        com.android.okhttp.Request$Builder r0;
        com.android.okhttp.Request$Body $r1;

        r0 := @parameter0: com.android.okhttp.Request$Builder;

        $r1 = r0.<com.android.okhttp.Request$Builder: com.android.okhttp.Request$Body body>;

        return $r1;
    }

    static java.lang.Object access$400(com.android.okhttp.Request$Builder)
    {
        com.android.okhttp.Request$Builder r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.okhttp.Request$Builder;

        $r1 = r0.<com.android.okhttp.Request$Builder: java.lang.Object tag>;

        return $r1;
    }

    public com.android.okhttp.Request$Builder addHeader(java.lang.String, java.lang.String)
    {
        com.android.okhttp.Request$Builder r0;
        java.lang.String r1, r2;
        com.android.okhttp.internal.http.RawHeaders $r3;

        r0 := @this: com.android.okhttp.Request$Builder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.okhttp.Request$Builder: com.android.okhttp.internal.http.RawHeaders headers>;

        virtualinvoke $r3.<com.android.okhttp.internal.http.RawHeaders: void add(java.lang.String,java.lang.String)>(r1, r2);

        return r0;
    }

    public com.android.okhttp.Request build()
    {
        com.android.okhttp.Request$Builder r0;
        com.android.okhttp.Request $r1;

        r0 := @this: com.android.okhttp.Request$Builder;

        $r1 = new com.android.okhttp.Request;

        specialinvoke $r1.<com.android.okhttp.Request: void <init>(com.android.okhttp.Request$Builder,com.android.okhttp.Request$1)>(r0, null);

        return $r1;
    }

    public com.android.okhttp.Request$Builder get()
    {
        com.android.okhttp.Request$Builder r0, $r1;

        r0 := @this: com.android.okhttp.Request$Builder;

        $r1 = virtualinvoke r0.<com.android.okhttp.Request$Builder: com.android.okhttp.Request$Builder method(java.lang.String,com.android.okhttp.Request$Body)>("GET", null);

        return $r1;
    }

    public com.android.okhttp.Request$Builder head()
    {
        com.android.okhttp.Request$Builder r0, $r1;

        r0 := @this: com.android.okhttp.Request$Builder;

        $r1 = virtualinvoke r0.<com.android.okhttp.Request$Builder: com.android.okhttp.Request$Builder method(java.lang.String,com.android.okhttp.Request$Body)>("HEAD", null);

        return $r1;
    }

    public com.android.okhttp.Request$Builder header(java.lang.String, java.lang.String)
    {
        com.android.okhttp.Request$Builder r0;
        java.lang.String r1, r2;
        com.android.okhttp.internal.http.RawHeaders $r3;

        r0 := @this: com.android.okhttp.Request$Builder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.okhttp.Request$Builder: com.android.okhttp.internal.http.RawHeaders headers>;

        virtualinvoke $r3.<com.android.okhttp.internal.http.RawHeaders: void set(java.lang.String,java.lang.String)>(r1, r2);

        return r0;
    }

    public com.android.okhttp.Request$Builder method(java.lang.String, com.android.okhttp.Request$Body)
    {
        com.android.okhttp.Request$Builder r0;
        java.lang.String r1;
        com.android.okhttp.Request$Body r2;
        java.lang.IllegalArgumentException $r3;
        int $i0;

        r0 := @this: com.android.okhttp.Request$Builder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.okhttp.Request$Body;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("method == null || method.length() == 0");

        throw $r3;

     label2:
        r0.<com.android.okhttp.Request$Builder: java.lang.String method> = r1;

        r0.<com.android.okhttp.Request$Builder: com.android.okhttp.Request$Body body> = r2;

        return r0;
    }

    public com.android.okhttp.Request$Builder post(com.android.okhttp.Request$Body)
    {
        com.android.okhttp.Request$Builder r0, $r2;
        com.android.okhttp.Request$Body r1;

        r0 := @this: com.android.okhttp.Request$Builder;

        r1 := @parameter0: com.android.okhttp.Request$Body;

        $r2 = virtualinvoke r0.<com.android.okhttp.Request$Builder: com.android.okhttp.Request$Builder method(java.lang.String,com.android.okhttp.Request$Body)>("POST", r1);

        return $r2;
    }

    public com.android.okhttp.Request$Builder put(com.android.okhttp.Request$Body)
    {
        com.android.okhttp.Request$Builder r0, $r2;
        com.android.okhttp.Request$Body r1;

        r0 := @this: com.android.okhttp.Request$Builder;

        r1 := @parameter0: com.android.okhttp.Request$Body;

        $r2 = virtualinvoke r0.<com.android.okhttp.Request$Builder: com.android.okhttp.Request$Builder method(java.lang.String,com.android.okhttp.Request$Body)>("PUT", r1);

        return $r2;
    }

    public com.android.okhttp.Request$Builder tag(java.lang.Object)
    {
        com.android.okhttp.Request$Builder r0;
        java.lang.Object r1;

        r0 := @this: com.android.okhttp.Request$Builder;

        r1 := @parameter0: java.lang.Object;

        r0.<com.android.okhttp.Request$Builder: java.lang.Object tag> = r1;

        return r0;
    }

    public com.android.okhttp.Request$Builder url(java.lang.String)
    {
        com.android.okhttp.Request$Builder r0;
        java.lang.String r1, $r9;
        java.net.URL $r3;
        java.net.MalformedURLException $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6, $r7, $r8;

        r0 := @this: com.android.okhttp.Request$Builder;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = new java.net.URL;

        specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>(r1);

        r0.<com.android.okhttp.Request$Builder: java.net.URL url> = $r3;

     label2:
        return r0;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Malformed URL: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

        catch java.net.MalformedURLException from label1 to label2 with label3;
    }

    public com.android.okhttp.Request$Builder url(java.net.URL)
    {
        com.android.okhttp.Request$Builder r0;
        java.net.URL r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: com.android.okhttp.Request$Builder;

        r1 := @parameter0: java.net.URL;

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("url == null");

        throw $r2;

     label1:
        r0.<com.android.okhttp.Request$Builder: java.net.URL url> = r1;

        return r0;
    }
}
