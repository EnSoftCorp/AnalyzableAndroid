public final class com.android.okhttp.Request extends java.lang.Object
{
    private final com.android.okhttp.Request$Body body;
    private final com.android.okhttp.internal.http.RawHeaders headers;
    private final java.lang.String method;
    private final java.lang.Object tag;
    private final java.net.URL url;

    private void <init>(com.android.okhttp.Request$Builder)
    {
        com.android.okhttp.Request r0;
        com.android.okhttp.Request$Builder r1;
        java.lang.Object r2, $r8;
        java.net.URL $r3;
        java.lang.String $r4;
        com.android.okhttp.internal.http.RawHeaders $r5, $r6;
        com.android.okhttp.Request$Body $r7;

        r0 := @this: com.android.okhttp.Request;

        r1 := @parameter0: com.android.okhttp.Request$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <com.android.okhttp.Request$Builder: java.net.URL access$000(com.android.okhttp.Request$Builder)>(r1);

        r0.<com.android.okhttp.Request: java.net.URL url> = $r3;

        $r4 = staticinvoke <com.android.okhttp.Request$Builder: java.lang.String access$100(com.android.okhttp.Request$Builder)>(r1);

        r0.<com.android.okhttp.Request: java.lang.String method> = $r4;

        $r5 = new com.android.okhttp.internal.http.RawHeaders;

        $r6 = staticinvoke <com.android.okhttp.Request$Builder: com.android.okhttp.internal.http.RawHeaders access$200(com.android.okhttp.Request$Builder)>(r1);

        specialinvoke $r5.<com.android.okhttp.internal.http.RawHeaders: void <init>(com.android.okhttp.internal.http.RawHeaders)>($r6);

        r0.<com.android.okhttp.Request: com.android.okhttp.internal.http.RawHeaders headers> = $r5;

        $r7 = staticinvoke <com.android.okhttp.Request$Builder: com.android.okhttp.Request$Body access$300(com.android.okhttp.Request$Builder)>(r1);

        r0.<com.android.okhttp.Request: com.android.okhttp.Request$Body body> = $r7;

        $r8 = staticinvoke <com.android.okhttp.Request$Builder: java.lang.Object access$400(com.android.okhttp.Request$Builder)>(r1);

        if $r8 == null goto label2;

        r2 = staticinvoke <com.android.okhttp.Request$Builder: java.lang.Object access$400(com.android.okhttp.Request$Builder)>(r1);

     label1:
        r0.<com.android.okhttp.Request: java.lang.Object tag> = r2;

        return;

     label2:
        r2 = r0;

        goto label1;
    }

    void <init>(com.android.okhttp.Request$Builder, com.android.okhttp.Request$1)
    {
        com.android.okhttp.Request r0;
        com.android.okhttp.Request$Builder r1;
        com.android.okhttp.Request$1 r2;

        r0 := @this: com.android.okhttp.Request;

        r1 := @parameter0: com.android.okhttp.Request$Builder;

        r2 := @parameter1: com.android.okhttp.Request$1;

        specialinvoke r0.<com.android.okhttp.Request: void <init>(com.android.okhttp.Request$Builder)>(r1);

        return;
    }

    public com.android.okhttp.Request$Body body()
    {
        com.android.okhttp.Request r0;
        com.android.okhttp.Request$Body $r1;

        r0 := @this: com.android.okhttp.Request;

        $r1 = r0.<com.android.okhttp.Request: com.android.okhttp.Request$Body body>;

        return $r1;
    }

    public java.lang.String header(java.lang.String)
    {
        com.android.okhttp.Request r0;
        java.lang.String r1, $r3;
        com.android.okhttp.internal.http.RawHeaders $r2;

        r0 := @this: com.android.okhttp.Request;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.okhttp.Request: com.android.okhttp.internal.http.RawHeaders headers>;

        $r3 = virtualinvoke $r2.<com.android.okhttp.internal.http.RawHeaders: java.lang.String get(java.lang.String)>(r1);

        return $r3;
    }

    public int headerCount()
    {
        com.android.okhttp.Request r0;
        com.android.okhttp.internal.http.RawHeaders $r1;
        int $i0;

        r0 := @this: com.android.okhttp.Request;

        $r1 = r0.<com.android.okhttp.Request: com.android.okhttp.internal.http.RawHeaders headers>;

        $i0 = virtualinvoke $r1.<com.android.okhttp.internal.http.RawHeaders: int length()>();

        return $i0;
    }

    public java.lang.String headerName(int)
    {
        com.android.okhttp.Request r0;
        int i0;
        com.android.okhttp.internal.http.RawHeaders $r1;
        java.lang.String $r2;

        r0 := @this: com.android.okhttp.Request;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.okhttp.Request: com.android.okhttp.internal.http.RawHeaders headers>;

        $r2 = virtualinvoke $r1.<com.android.okhttp.internal.http.RawHeaders: java.lang.String getFieldName(int)>(i0);

        return $r2;
    }

    public java.util.Set headerNames()
    {
        com.android.okhttp.Request r0;
        com.android.okhttp.internal.http.RawHeaders $r1;
        java.util.Set $r2;

        r0 := @this: com.android.okhttp.Request;

        $r1 = r0.<com.android.okhttp.Request: com.android.okhttp.internal.http.RawHeaders headers>;

        $r2 = virtualinvoke $r1.<com.android.okhttp.internal.http.RawHeaders: java.util.Set names()>();

        return $r2;
    }

    public java.lang.String headerValue(int)
    {
        com.android.okhttp.Request r0;
        int i0;
        com.android.okhttp.internal.http.RawHeaders $r1;
        java.lang.String $r2;

        r0 := @this: com.android.okhttp.Request;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.okhttp.Request: com.android.okhttp.internal.http.RawHeaders headers>;

        $r2 = virtualinvoke $r1.<com.android.okhttp.internal.http.RawHeaders: java.lang.String getValue(int)>(i0);

        return $r2;
    }

    public java.util.List headers(java.lang.String)
    {
        com.android.okhttp.Request r0;
        java.lang.String r1;
        com.android.okhttp.internal.http.RawHeaders $r2;
        java.util.List $r3;

        r0 := @this: com.android.okhttp.Request;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.okhttp.Request: com.android.okhttp.internal.http.RawHeaders headers>;

        $r3 = virtualinvoke $r2.<com.android.okhttp.internal.http.RawHeaders: java.util.List values(java.lang.String)>(r1);

        return $r3;
    }

    public java.lang.String method()
    {
        com.android.okhttp.Request r0;
        java.lang.String $r1;

        r0 := @this: com.android.okhttp.Request;

        $r1 = r0.<com.android.okhttp.Request: java.lang.String method>;

        return $r1;
    }

    public java.lang.Object tag()
    {
        com.android.okhttp.Request r0;
        java.lang.Object $r1;

        r0 := @this: com.android.okhttp.Request;

        $r1 = r0.<com.android.okhttp.Request: java.lang.Object tag>;

        return $r1;
    }

    public java.net.URL url()
    {
        com.android.okhttp.Request r0;
        java.net.URL $r1;

        r0 := @this: com.android.okhttp.Request;

        $r1 = r0.<com.android.okhttp.Request: java.net.URL url>;

        return $r1;
    }

    public java.lang.String urlString()
    {
        com.android.okhttp.Request r0;
        java.net.URL $r1;
        java.lang.String $r2;

        r0 := @this: com.android.okhttp.Request;

        $r1 = r0.<com.android.okhttp.Request: java.net.URL url>;

        $r2 = virtualinvoke $r1.<java.net.URL: java.lang.String toString()>();

        return $r2;
    }
}
