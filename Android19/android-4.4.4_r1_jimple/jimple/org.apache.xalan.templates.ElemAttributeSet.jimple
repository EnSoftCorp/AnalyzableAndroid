public class org.apache.xalan.templates.ElemAttributeSet extends org.apache.xalan.templates.ElemUse
{
    static final long serialVersionUID;
    public org.apache.xml.utils.QName m_qname;

    public void <init>()
    {
        org.apache.xalan.templates.ElemAttributeSet r0;

        r0 := @this: org.apache.xalan.templates.ElemAttributeSet;

        specialinvoke r0.<org.apache.xalan.templates.ElemUse: void <init>()>();

        r0.<org.apache.xalan.templates.ElemAttributeSet: org.apache.xml.utils.QName m_qname> = null;

        return;
    }

    public org.apache.xalan.templates.ElemTemplateElement appendChildElem(org.apache.xalan.templates.ElemTemplateElement)
    {
        org.apache.xalan.templates.ElemAttributeSet r0;
        org.apache.xalan.templates.ElemTemplateElement r1, $r5;
        java.lang.Object[] r2;
        int $i0;
        java.lang.String $r3, $r4;

        r0 := @this: org.apache.xalan.templates.ElemAttributeSet;

        r1 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        $i0 = virtualinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: int getXSLToken()>();

        tableswitch($i0)
        {
            case 48: goto label2;
            default: goto label1;
        };

     label1:
        r2 = newarray (java.lang.Object)[2];

        $r3 = virtualinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: java.lang.String getNodeName()>();

        r2[0] = $r3;

        $r4 = virtualinvoke r0.<org.apache.xalan.templates.ElemAttributeSet: java.lang.String getNodeName()>();

        r2[1] = $r4;

        virtualinvoke r0.<org.apache.xalan.templates.ElemAttributeSet: void error(java.lang.String,java.lang.Object[])>("ER_CANNOT_ADD", r2);

     label2:
        $r5 = specialinvoke r0.<org.apache.xalan.templates.ElemUse: org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement)>(r1);

        return $r5;
    }

    public void execute(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemAttributeSet r0;
        org.apache.xalan.transformer.TransformerImpl r1;
        org.apache.xalan.templates.ElemAttribute r2;
        java.lang.Object[] r3;
        boolean $z0;
        org.apache.xalan.templates.ElemTemplateElement $r4, $r5;
        org.apache.xml.utils.QName $r6;
        java.lang.String $r7, $r9;
        javax.xml.transform.TransformerException $r8;

        r0 := @this: org.apache.xalan.templates.ElemAttributeSet;

        r1 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        $z0 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: boolean isRecursiveAttrSet(org.apache.xalan.templates.ElemAttributeSet)>(r0);

        if $z0 == 0 goto label1;

        r3 = newarray (java.lang.Object)[1];

        $r6 = r0.<org.apache.xalan.templates.ElemAttributeSet: org.apache.xml.utils.QName m_qname>;

        $r7 = virtualinvoke $r6.<org.apache.xml.utils.QName: java.lang.String getLocalPart()>();

        r3[0] = $r7;

        $r8 = new javax.xml.transform.TransformerException;

        $r9 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_XSLATTRSET_USED_ITSELF", r3);

        specialinvoke $r8.<javax.xml.transform.TransformerException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label1:
        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: void pushElemAttributeSet(org.apache.xalan.templates.ElemAttributeSet)>(r0);

        specialinvoke r0.<org.apache.xalan.templates.ElemUse: void execute(org.apache.xalan.transformer.TransformerImpl)>(r1);

        $r4 = virtualinvoke r0.<org.apache.xalan.templates.ElemAttributeSet: org.apache.xalan.templates.ElemTemplateElement getFirstChildElem()>();

        r2 = (org.apache.xalan.templates.ElemAttribute) $r4;

     label2:
        if r2 == null goto label3;

        virtualinvoke r2.<org.apache.xalan.templates.ElemAttribute: void execute(org.apache.xalan.transformer.TransformerImpl)>(r1);

        $r5 = virtualinvoke r2.<org.apache.xalan.templates.ElemAttribute: org.apache.xalan.templates.ElemTemplateElement getNextSiblingElem()>();

        r2 = (org.apache.xalan.templates.ElemAttribute) $r5;

        goto label2;

     label3:
        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: void popElemAttributeSet()>();

        return;
    }

    public org.apache.xml.utils.QName getName()
    {
        org.apache.xalan.templates.ElemAttributeSet r0;
        org.apache.xml.utils.QName $r1;

        r0 := @this: org.apache.xalan.templates.ElemAttributeSet;

        $r1 = r0.<org.apache.xalan.templates.ElemAttributeSet: org.apache.xml.utils.QName m_qname>;

        return $r1;
    }

    public java.lang.String getNodeName()
    {
        org.apache.xalan.templates.ElemAttributeSet r0;

        r0 := @this: org.apache.xalan.templates.ElemAttributeSet;

        return "attribute-set";
    }

    public int getXSLToken()
    {
        org.apache.xalan.templates.ElemAttributeSet r0;

        r0 := @this: org.apache.xalan.templates.ElemAttributeSet;

        return 40;
    }

    public void recompose(org.apache.xalan.templates.StylesheetRoot)
    {
        org.apache.xalan.templates.ElemAttributeSet r0;
        org.apache.xalan.templates.StylesheetRoot r1;

        r0 := @this: org.apache.xalan.templates.ElemAttributeSet;

        r1 := @parameter0: org.apache.xalan.templates.StylesheetRoot;

        virtualinvoke r1.<org.apache.xalan.templates.StylesheetRoot: void recomposeAttributeSets(org.apache.xalan.templates.ElemAttributeSet)>(r0);

        return;
    }

    public void setName(org.apache.xml.utils.QName)
    {
        org.apache.xalan.templates.ElemAttributeSet r0;
        org.apache.xml.utils.QName r1;

        r0 := @this: org.apache.xalan.templates.ElemAttributeSet;

        r1 := @parameter0: org.apache.xml.utils.QName;

        r0.<org.apache.xalan.templates.ElemAttributeSet: org.apache.xml.utils.QName m_qname> = r1;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.xalan.templates.ElemAttributeSet: long serialVersionUID> = -426740318278164496L;

        return;
    }
}
