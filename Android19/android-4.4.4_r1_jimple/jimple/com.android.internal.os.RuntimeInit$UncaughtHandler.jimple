class com.android.internal.os.RuntimeInit$UncaughtHandler extends java.lang.Object implements java.lang.Thread$UncaughtExceptionHandler
{

    private void <init>()
    {
        com.android.internal.os.RuntimeInit$UncaughtHandler r0;

        r0 := @this: com.android.internal.os.RuntimeInit$UncaughtHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(com.android.internal.os.RuntimeInit$1)
    {
        com.android.internal.os.RuntimeInit$UncaughtHandler r0;
        com.android.internal.os.RuntimeInit$1 r1;

        r0 := @this: com.android.internal.os.RuntimeInit$UncaughtHandler;

        r1 := @parameter0: com.android.internal.os.RuntimeInit$1;

        specialinvoke r0.<com.android.internal.os.RuntimeInit$UncaughtHandler: void <init>()>();

        return;
    }

    public void uncaughtException(java.lang.Thread, java.lang.Throwable)
    {
        com.android.internal.os.RuntimeInit$UncaughtHandler r0;
        java.lang.Thread r1;
        java.lang.Throwable r2, r4, $r29, $r30;
        boolean z0;
        java.lang.StringBuilder r6, $r9, $r11, $r13, $r14, $r20, $r21, $r22, $r24, $r26;
        java.lang.String r7, $r10, $r16, $r25, $r27;
        android.os.IBinder $r8, $r19;
        int $i0, $i2, $i5, $i6;
        android.app.IActivityManager $r17;
        android.app.ApplicationErrorReport$CrashInfo $r18;

        r0 := @this: com.android.internal.os.RuntimeInit$UncaughtHandler;

        r1 := @parameter0: java.lang.Thread;

        r2 := @parameter1: java.lang.Throwable;

     label01:
        z0 = staticinvoke <com.android.internal.os.RuntimeInit: boolean access$000()>();

     label02:
        if z0 == 0 goto label03;

        $i5 = staticinvoke <android.os.Process: int myPid()>();

        staticinvoke <android.os.Process: void killProcess(int)>($i5);

        staticinvoke <java.lang.System: void exit(int)>(10);

        return;

     label03:
        staticinvoke <com.android.internal.os.RuntimeInit: boolean access$002(boolean)>(1);

        $r8 = staticinvoke <com.android.internal.os.RuntimeInit: android.os.IBinder access$100()>();

        if $r8 != null goto label06;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*** FATAL EXCEPTION IN SYSTEM PROCESS: ");

        $r27 = virtualinvoke r1.<java.lang.Thread: java.lang.String getName()>();

        $r24 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AndroidRuntime", $r25, r2);

     label04:
        $r17 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r19 = staticinvoke <com.android.internal.os.RuntimeInit: android.os.IBinder access$100()>();

        $r18 = new android.app.ApplicationErrorReport$CrashInfo;

        specialinvoke $r18.<android.app.ApplicationErrorReport$CrashInfo: void <init>(java.lang.Throwable)>(r2);

        interfaceinvoke $r17.<android.app.IActivityManager: void handleApplicationCrash(android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo)>($r19, $r18);

     label05:
        $i2 = staticinvoke <android.os.Process: int myPid()>();

        staticinvoke <android.os.Process: void killProcess(int)>($i2);

        staticinvoke <java.lang.System: void exit(int)>(10);

        return;

     label06:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        r6 = $r9;

        $r11 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FATAL EXCEPTION: ");

        $r10 = virtualinvoke r1.<java.lang.Thread: java.lang.String getName()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r7 = staticinvoke <android.app.ActivityThread: java.lang.String currentProcessName()>();

     label07:
        if r7 == null goto label09;

     label08:
        $r20 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process: ");

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label09:
        $r14 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PID: ");

        $i0 = staticinvoke <android.os.Process: int myPid()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r16 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AndroidRuntime", $r16, r2);

     label10:
        goto label04;

     label11:
        $r30 := @caughtexception;

        r4 = $r30;

     label12:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AndroidRuntime", "Error reporting crash", r4);

     label13:
        $i6 = staticinvoke <android.os.Process: int myPid()>();

        staticinvoke <android.os.Process: void killProcess(int)>($i6);

        staticinvoke <java.lang.System: void exit(int)>(10);

        return;

     label14:
        $r29 := @caughtexception;

        goto label13;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label14;
    }
}
