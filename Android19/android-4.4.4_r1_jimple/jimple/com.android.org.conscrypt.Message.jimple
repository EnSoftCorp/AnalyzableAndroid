public abstract class com.android.org.conscrypt.Message extends java.lang.Object
{
    protected int length;

    public void <init>()
    {
        com.android.org.conscrypt.Message r0;

        r0 := @this: com.android.org.conscrypt.Message;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected void fatalAlert(byte, java.lang.String)
    {
        com.android.org.conscrypt.Message r0;
        byte b0;
        java.lang.String r1;
        com.android.org.conscrypt.AlertException $r2;
        javax.net.ssl.SSLHandshakeException $r3;

        r0 := @this: com.android.org.conscrypt.Message;

        b0 := @parameter0: byte;

        r1 := @parameter1: java.lang.String;

        $r2 = new com.android.org.conscrypt.AlertException;

        $r3 = new javax.net.ssl.SSLHandshakeException;

        specialinvoke $r3.<javax.net.ssl.SSLHandshakeException: void <init>(java.lang.String)>(r1);

        specialinvoke $r2.<com.android.org.conscrypt.AlertException: void <init>(byte,javax.net.ssl.SSLException)>(b0, $r3);

        throw $r2;
    }

    protected void fatalAlert(byte, java.lang.String, java.lang.Throwable)
    {
        com.android.org.conscrypt.Message r0;
        byte b0;
        java.lang.String r1;
        java.lang.Throwable r2;
        com.android.org.conscrypt.AlertException $r3;
        javax.net.ssl.SSLException $r4;

        r0 := @this: com.android.org.conscrypt.Message;

        b0 := @parameter0: byte;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Throwable;

        $r3 = new com.android.org.conscrypt.AlertException;

        $r4 = new javax.net.ssl.SSLException;

        specialinvoke $r4.<javax.net.ssl.SSLException: void <init>(java.lang.String,java.lang.Throwable)>(r1, r2);

        specialinvoke $r3.<com.android.org.conscrypt.AlertException: void <init>(byte,javax.net.ssl.SSLException)>(b0, $r4);

        throw $r3;
    }

    abstract int getType();

    public int length()
    {
        com.android.org.conscrypt.Message r0;
        int $i0;

        r0 := @this: com.android.org.conscrypt.Message;

        $i0 = r0.<com.android.org.conscrypt.Message: int length>;

        return $i0;
    }

    abstract void send(com.android.org.conscrypt.HandshakeIODataStream);
}
