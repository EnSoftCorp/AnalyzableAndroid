public class java.text.AttributedCharacterIterator$Attribute extends java.lang.Object implements java.io.Serializable
{
    public static final java.text.AttributedCharacterIterator$Attribute INPUT_METHOD_SEGMENT;
    public static final java.text.AttributedCharacterIterator$Attribute LANGUAGE;
    public static final java.text.AttributedCharacterIterator$Attribute READING;
    private static final long serialVersionUID;
    private java.lang.String name;

    static void <clinit>()
    {
        java.text.AttributedCharacterIterator$Attribute $r0, $r1, $r2;

        <java.text.AttributedCharacterIterator$Attribute: long serialVersionUID> = -9142742483513960612L;

        $r0 = new java.text.AttributedCharacterIterator$Attribute;

        specialinvoke $r0.<java.text.AttributedCharacterIterator$Attribute: void <init>(java.lang.String)>("input_method_segment");

        <java.text.AttributedCharacterIterator$Attribute: java.text.AttributedCharacterIterator$Attribute INPUT_METHOD_SEGMENT> = $r0;

        $r1 = new java.text.AttributedCharacterIterator$Attribute;

        specialinvoke $r1.<java.text.AttributedCharacterIterator$Attribute: void <init>(java.lang.String)>("language");

        <java.text.AttributedCharacterIterator$Attribute: java.text.AttributedCharacterIterator$Attribute LANGUAGE> = $r1;

        $r2 = new java.text.AttributedCharacterIterator$Attribute;

        specialinvoke $r2.<java.text.AttributedCharacterIterator$Attribute: void <init>(java.lang.String)>("reading");

        <java.text.AttributedCharacterIterator$Attribute: java.text.AttributedCharacterIterator$Attribute READING> = $r2;

        return;
    }

    protected void <init>(java.lang.String)
    {
        java.text.AttributedCharacterIterator$Attribute r0;
        java.lang.String r1;

        r0 := @this: java.text.AttributedCharacterIterator$Attribute;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.text.AttributedCharacterIterator$Attribute: java.lang.String name> = r1;

        return;
    }

    public final boolean equals(java.lang.Object)
    {
        java.text.AttributedCharacterIterator$Attribute r0;
        java.lang.Object r1;

        r0 := @this: java.text.AttributedCharacterIterator$Attribute;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected java.lang.String getName()
    {
        java.text.AttributedCharacterIterator$Attribute r0;
        java.lang.String $r1;

        r0 := @this: java.text.AttributedCharacterIterator$Attribute;

        $r1 = r0.<java.text.AttributedCharacterIterator$Attribute: java.lang.String name>;

        return $r1;
    }

    public final int hashCode()
    {
        java.text.AttributedCharacterIterator$Attribute r0;
        int $i0;

        r0 := @this: java.text.AttributedCharacterIterator$Attribute;

        $i0 = specialinvoke r0.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    protected java.lang.Object readResolve() throws java.io.InvalidObjectException
    {
        java.text.AttributedCharacterIterator$Attribute r0, r4;
        java.lang.reflect.Field[] r2;
        int i0, i1, $i2;
        java.lang.reflect.Field r3;
        boolean z0, $z1;
        java.lang.Class $r5, $r11, $r12;
        java.io.InvalidObjectException $r6;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10, $r14, $r15;
        java.lang.Object $r13;
        java.lang.IllegalAccessException $r16;

        r0 := @this: java.text.AttributedCharacterIterator$Attribute;

     label1:
        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r2 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Field[] getFields()>();

        i0 = lengthof r2;

     label2:
        i1 = 0;

     label3:
        if i1 >= i0 goto label8;

     label4:
        r3 = r2[i1];

        $r11 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Class getType()>();

        $r12 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r11 != $r12 goto label6;

        $i2 = virtualinvoke r3.<java.lang.reflect.Field: int getModifiers()>();

        $z1 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i2);

        if $z1 == 0 goto label6;

        $r13 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        r4 = (java.text.AttributedCharacterIterator$Attribute) $r13;

        $r14 = r0.<java.text.AttributedCharacterIterator$Attribute: java.lang.String name>;

        $r15 = r4.<java.text.AttributedCharacterIterator$Attribute: java.lang.String name>;

        z0 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r15);

     label5:
        if z0 == 0 goto label6;

        return r4;

     label6:
        i1 = i1 + 1;

        goto label3;

     label7:
        $r16 := @caughtexception;

     label8:
        $r6 = new java.io.InvalidObjectException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to resolve ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.InvalidObjectException: void <init>(java.lang.String)>($r10);

        throw $r6;

        catch java.lang.IllegalAccessException from label1 to label2 with label7;
        catch java.lang.IllegalAccessException from label4 to label5 with label7;
    }

    public java.lang.String toString()
    {
        java.text.AttributedCharacterIterator$Attribute r0;
        java.lang.StringBuilder $r1, $r4, $r5, $r7, $r8;
        java.lang.Class $r2;
        java.lang.String $r3, $r6, $r9;

        r0 := @this: java.text.AttributedCharacterIterator$Attribute;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        $r6 = virtualinvoke r0.<java.text.AttributedCharacterIterator$Attribute: java.lang.String getName()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }
}
