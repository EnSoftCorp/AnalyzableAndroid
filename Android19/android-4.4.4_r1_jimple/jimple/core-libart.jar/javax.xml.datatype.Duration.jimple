public abstract class javax.xml.datatype.Duration extends java.lang.Object
{

    public void <init>()
    {
        javax.xml.datatype.Duration r0;

        r0 := @this: javax.xml.datatype.Duration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static long getCalendarTimeInMillis(java.util.Calendar)
    {
        java.util.Calendar r0;
        java.util.Date $r1;
        long $l0;

        r0 := @parameter0: java.util.Calendar;

        $r1 = virtualinvoke r0.<java.util.Calendar: java.util.Date getTime()>();

        $l0 = virtualinvoke $r1.<java.util.Date: long getTime()>();

        return $l0;
    }

    private int getFieldValueAsInt(javax.xml.datatype.DatatypeConstants$Field)
    {
        javax.xml.datatype.Duration r0;
        javax.xml.datatype.DatatypeConstants$Field r1;
        java.lang.Number r2;
        int $i0;

        r0 := @this: javax.xml.datatype.Duration;

        r1 := @parameter0: javax.xml.datatype.DatatypeConstants$Field;

        r2 = virtualinvoke r0.<javax.xml.datatype.Duration: java.lang.Number getField(javax.xml.datatype.DatatypeConstants$Field)>(r1);

        if r2 == null goto label1;

        $i0 = virtualinvoke r2.<java.lang.Number: int intValue()>();

        return $i0;

     label1:
        return 0;
    }

    private java.lang.String toString(java.math.BigDecimal)
    {
        javax.xml.datatype.Duration r0;
        java.math.BigDecimal r1;
        java.lang.String r2, $r9, $r14;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.StringBuilder r3, $r5, $r11, $r12, $r13, $r15;
        java.math.BigInteger $r4;

        r0 := @this: javax.xml.datatype.Duration;

        r1 := @parameter0: java.math.BigDecimal;

        $r4 = virtualinvoke r1.<java.math.BigDecimal: java.math.BigInteger unscaledValue()>();

        r2 = virtualinvoke $r4.<java.math.BigInteger: java.lang.String toString()>();

        i0 = virtualinvoke r1.<java.math.BigDecimal: int scale()>();

        if i0 != 0 goto label1;

        return r2;

     label1:
        $i3 = virtualinvoke r2.<java.lang.String: int length()>();

        i1 = $i3 - i0;

        if i1 != 0 goto label2;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0.");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;

     label2:
        if i1 <= 0 goto label4;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>(r2);

        r3 = $r11;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,char)>(i1, 46);

     label3:
        $r9 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;

     label4:
        $r5 = new java.lang.StringBuilder;

        $i4 = 3 - i1;

        $i5 = virtualinvoke r2.<java.lang.String: int length()>();

        $i6 = $i4 + $i5;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(int)>($i6);

        r3 = $r5;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0.");

        i2 = 0;

     label5:
        $i7 = neg i1;

        if i2 >= $i7 goto label6;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

        i2 = i2 + 1;

        goto label5;

     label6:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        goto label3;
    }

    public abstract javax.xml.datatype.Duration add(javax.xml.datatype.Duration);

    public abstract void addTo(java.util.Calendar);

    public void addTo(java.util.Date)
    {
        javax.xml.datatype.Duration r0;
        java.util.Date r1;
        java.util.GregorianCalendar r2, $r3;
        long $l0;
        java.lang.NullPointerException $r4;

        r0 := @this: javax.xml.datatype.Duration;

        r1 := @parameter0: java.util.Date;

        if r1 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("date == null");

        throw $r4;

     label1:
        $r3 = new java.util.GregorianCalendar;

        specialinvoke $r3.<java.util.GregorianCalendar: void <init>()>();

        r2 = $r3;

        virtualinvoke r2.<java.util.Calendar: void setTime(java.util.Date)>(r1);

        virtualinvoke r0.<javax.xml.datatype.Duration: void addTo(java.util.Calendar)>(r2);

        $l0 = staticinvoke <javax.xml.datatype.Duration: long getCalendarTimeInMillis(java.util.Calendar)>(r2);

        virtualinvoke r1.<java.util.Date: void setTime(long)>($l0);

        return;
    }

    public abstract int compare(javax.xml.datatype.Duration);

    public boolean equals(java.lang.Object)
    {
        javax.xml.datatype.Duration r0, $r2;
        java.lang.Object r1;
        boolean $z0;
        int $i0;

        r0 := @this: javax.xml.datatype.Duration;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label2;

     label1:
        return 1;

     label2:
        $z0 = r1 instanceof javax.xml.datatype.Duration;

        if $z0 == 0 goto label3;

        $r2 = (javax.xml.datatype.Duration) r1;

        $i0 = virtualinvoke r0.<javax.xml.datatype.Duration: int compare(javax.xml.datatype.Duration)>($r2);

        if $i0 == 0 goto label1;

        return 0;

     label3:
        return 0;
    }

    public int getDays()
    {
        javax.xml.datatype.Duration r0;
        javax.xml.datatype.DatatypeConstants$Field $r1;
        int $i0;

        r0 := @this: javax.xml.datatype.Duration;

        $r1 = <javax.xml.datatype.DatatypeConstants: javax.xml.datatype.DatatypeConstants$Field DAYS>;

        $i0 = specialinvoke r0.<javax.xml.datatype.Duration: int getFieldValueAsInt(javax.xml.datatype.DatatypeConstants$Field)>($r1);

        return $i0;
    }

    public abstract java.lang.Number getField(javax.xml.datatype.DatatypeConstants$Field);

    public int getHours()
    {
        javax.xml.datatype.Duration r0;
        javax.xml.datatype.DatatypeConstants$Field $r1;
        int $i0;

        r0 := @this: javax.xml.datatype.Duration;

        $r1 = <javax.xml.datatype.DatatypeConstants: javax.xml.datatype.DatatypeConstants$Field HOURS>;

        $i0 = specialinvoke r0.<javax.xml.datatype.Duration: int getFieldValueAsInt(javax.xml.datatype.DatatypeConstants$Field)>($r1);

        return $i0;
    }

    public int getMinutes()
    {
        javax.xml.datatype.Duration r0;
        javax.xml.datatype.DatatypeConstants$Field $r1;
        int $i0;

        r0 := @this: javax.xml.datatype.Duration;

        $r1 = <javax.xml.datatype.DatatypeConstants: javax.xml.datatype.DatatypeConstants$Field MINUTES>;

        $i0 = specialinvoke r0.<javax.xml.datatype.Duration: int getFieldValueAsInt(javax.xml.datatype.DatatypeConstants$Field)>($r1);

        return $i0;
    }

    public int getMonths()
    {
        javax.xml.datatype.Duration r0;
        javax.xml.datatype.DatatypeConstants$Field $r1;
        int $i0;

        r0 := @this: javax.xml.datatype.Duration;

        $r1 = <javax.xml.datatype.DatatypeConstants: javax.xml.datatype.DatatypeConstants$Field MONTHS>;

        $i0 = specialinvoke r0.<javax.xml.datatype.Duration: int getFieldValueAsInt(javax.xml.datatype.DatatypeConstants$Field)>($r1);

        return $i0;
    }

    public int getSeconds()
    {
        javax.xml.datatype.Duration r0;
        javax.xml.datatype.DatatypeConstants$Field $r1;
        int $i0;

        r0 := @this: javax.xml.datatype.Duration;

        $r1 = <javax.xml.datatype.DatatypeConstants: javax.xml.datatype.DatatypeConstants$Field SECONDS>;

        $i0 = specialinvoke r0.<javax.xml.datatype.Duration: int getFieldValueAsInt(javax.xml.datatype.DatatypeConstants$Field)>($r1);

        return $i0;
    }

    public abstract int getSign();

    public long getTimeInMillis(java.util.Calendar)
    {
        javax.xml.datatype.Duration r0;
        java.util.Calendar r1, r2;
        java.lang.Object $r3;
        long $l0, $l1, $l2;

        r0 := @this: javax.xml.datatype.Duration;

        r1 := @parameter0: java.util.Calendar;

        $r3 = virtualinvoke r1.<java.util.Calendar: java.lang.Object clone()>();

        r2 = (java.util.Calendar) $r3;

        virtualinvoke r0.<javax.xml.datatype.Duration: void addTo(java.util.Calendar)>(r2);

        $l0 = staticinvoke <javax.xml.datatype.Duration: long getCalendarTimeInMillis(java.util.Calendar)>(r2);

        $l1 = staticinvoke <javax.xml.datatype.Duration: long getCalendarTimeInMillis(java.util.Calendar)>(r1);

        $l2 = $l0 - $l1;

        return $l2;
    }

    public long getTimeInMillis(java.util.Date)
    {
        javax.xml.datatype.Duration r0;
        java.util.Date r1;
        java.util.GregorianCalendar r2, $r3;
        long $l0, $l1, $l2;

        r0 := @this: javax.xml.datatype.Duration;

        r1 := @parameter0: java.util.Date;

        $r3 = new java.util.GregorianCalendar;

        specialinvoke $r3.<java.util.GregorianCalendar: void <init>()>();

        r2 = $r3;

        virtualinvoke r2.<java.util.Calendar: void setTime(java.util.Date)>(r1);

        virtualinvoke r0.<javax.xml.datatype.Duration: void addTo(java.util.Calendar)>(r2);

        $l0 = staticinvoke <javax.xml.datatype.Duration: long getCalendarTimeInMillis(java.util.Calendar)>(r2);

        $l1 = virtualinvoke r1.<java.util.Date: long getTime()>();

        $l2 = $l0 - $l1;

        return $l2;
    }

    public javax.xml.namespace.QName getXMLSchemaType()
    {
        javax.xml.datatype.Duration r0;
        boolean z0, z1, z2, z3, z4, z5;
        javax.xml.datatype.DatatypeConstants$Field $r1, $r2, $r3, $r4, $r5, $r6;
        java.lang.IllegalStateException $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r22;
        javax.xml.namespace.QName $r20, $r21, $r24;
        java.lang.String $r23;

        r0 := @this: javax.xml.datatype.Duration;

        $r1 = <javax.xml.datatype.DatatypeConstants: javax.xml.datatype.DatatypeConstants$Field YEARS>;

        z0 = virtualinvoke r0.<javax.xml.datatype.Duration: boolean isSet(javax.xml.datatype.DatatypeConstants$Field)>($r1);

        $r2 = <javax.xml.datatype.DatatypeConstants: javax.xml.datatype.DatatypeConstants$Field MONTHS>;

        z1 = virtualinvoke r0.<javax.xml.datatype.Duration: boolean isSet(javax.xml.datatype.DatatypeConstants$Field)>($r2);

        $r3 = <javax.xml.datatype.DatatypeConstants: javax.xml.datatype.DatatypeConstants$Field DAYS>;

        z2 = virtualinvoke r0.<javax.xml.datatype.Duration: boolean isSet(javax.xml.datatype.DatatypeConstants$Field)>($r3);

        $r4 = <javax.xml.datatype.DatatypeConstants: javax.xml.datatype.DatatypeConstants$Field HOURS>;

        z3 = virtualinvoke r0.<javax.xml.datatype.Duration: boolean isSet(javax.xml.datatype.DatatypeConstants$Field)>($r4);

        $r5 = <javax.xml.datatype.DatatypeConstants: javax.xml.datatype.DatatypeConstants$Field MINUTES>;

        z4 = virtualinvoke r0.<javax.xml.datatype.Duration: boolean isSet(javax.xml.datatype.DatatypeConstants$Field)>($r5);

        $r6 = <javax.xml.datatype.DatatypeConstants: javax.xml.datatype.DatatypeConstants$Field SECONDS>;

        z5 = virtualinvoke r0.<javax.xml.datatype.Duration: boolean isSet(javax.xml.datatype.DatatypeConstants$Field)>($r6);

        if z0 == 0 goto label1;

        if z1 == 0 goto label1;

        if z2 == 0 goto label1;

        if z3 == 0 goto label1;

        if z4 == 0 goto label1;

        if z5 == 0 goto label1;

        $r24 = <javax.xml.datatype.DatatypeConstants: javax.xml.namespace.QName DURATION>;

        return $r24;

     label1:
        if z0 != 0 goto label2;

        if z1 != 0 goto label2;

        if z2 == 0 goto label2;

        if z3 == 0 goto label2;

        if z4 == 0 goto label2;

        if z5 == 0 goto label2;

        $r21 = <javax.xml.datatype.DatatypeConstants: javax.xml.namespace.QName DURATION_DAYTIME>;

        return $r21;

     label2:
        if z0 == 0 goto label3;

        if z1 == 0 goto label3;

        if z2 != 0 goto label3;

        if z3 != 0 goto label3;

        if z4 != 0 goto label3;

        if z5 != 0 goto label3;

        $r20 = <javax.xml.datatype.DatatypeConstants: javax.xml.namespace.QName DURATION_YEARMONTH>;

        return $r20;

     label3:
        $r7 = new java.lang.IllegalStateException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("javax.xml.datatype.Duration#getXMLSchemaType(): this Duration does not match one of the XML Schema date/time datatypes: year set = ");

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" month set = ");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" day set = ");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z2);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hour set = ");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z3);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" minute set = ");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z4);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" second set = ");

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z5);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r23);

        throw $r7;
    }

    public int getYears()
    {
        javax.xml.datatype.Duration r0;
        javax.xml.datatype.DatatypeConstants$Field $r1;
        int $i0;

        r0 := @this: javax.xml.datatype.Duration;

        $r1 = <javax.xml.datatype.DatatypeConstants: javax.xml.datatype.DatatypeConstants$Field YEARS>;

        $i0 = specialinvoke r0.<javax.xml.datatype.Duration: int getFieldValueAsInt(javax.xml.datatype.DatatypeConstants$Field)>($r1);

        return $i0;
    }

    public abstract int hashCode();

    public boolean isLongerThan(javax.xml.datatype.Duration)
    {
        javax.xml.datatype.Duration r0, r1;
        int $i0;

        r0 := @this: javax.xml.datatype.Duration;

        r1 := @parameter0: javax.xml.datatype.Duration;

        $i0 = virtualinvoke r0.<javax.xml.datatype.Duration: int compare(javax.xml.datatype.Duration)>(r1);

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public abstract boolean isSet(javax.xml.datatype.DatatypeConstants$Field);

    public boolean isShorterThan(javax.xml.datatype.Duration)
    {
        javax.xml.datatype.Duration r0, r1;
        int $i0;

        r0 := @this: javax.xml.datatype.Duration;

        r1 := @parameter0: javax.xml.datatype.Duration;

        $i0 = virtualinvoke r0.<javax.xml.datatype.Duration: int compare(javax.xml.datatype.Duration)>(r1);

        if $i0 != -1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public javax.xml.datatype.Duration multiply(int)
    {
        javax.xml.datatype.Duration r0, $r2;
        int i0;
        long $l1;
        java.math.BigDecimal $r1;

        r0 := @this: javax.xml.datatype.Duration;

        i0 := @parameter0: int;

        $l1 = (long) i0;

        $r1 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>($l1);

        $r2 = virtualinvoke r0.<javax.xml.datatype.Duration: javax.xml.datatype.Duration multiply(java.math.BigDecimal)>($r1);

        return $r2;
    }

    public abstract javax.xml.datatype.Duration multiply(java.math.BigDecimal);

    public abstract javax.xml.datatype.Duration negate();

    public abstract javax.xml.datatype.Duration normalizeWith(java.util.Calendar);

    public javax.xml.datatype.Duration subtract(javax.xml.datatype.Duration)
    {
        javax.xml.datatype.Duration r0, r1, $r2, $r3;

        r0 := @this: javax.xml.datatype.Duration;

        r1 := @parameter0: javax.xml.datatype.Duration;

        $r2 = virtualinvoke r1.<javax.xml.datatype.Duration: javax.xml.datatype.Duration negate()>();

        $r3 = virtualinvoke r0.<javax.xml.datatype.Duration: javax.xml.datatype.Duration add(javax.xml.datatype.Duration)>($r2);

        return $r3;
    }

    public java.lang.String toString()
    {
        javax.xml.datatype.Duration r0;
        java.lang.StringBuilder r1, $r8, $r24, $r26, $r28, $r31, $r33, $r37;
        java.math.BigInteger r2, r3, r4, r5, r6;
        java.math.BigDecimal r7;
        int $i0;
        javax.xml.datatype.DatatypeConstants$Field $r10, $r12, $r15, $r17, $r19, $r21;
        java.lang.Number $r11, $r13, $r14, $r16, $r18, $r20;
        java.lang.String $r22, $r25;

        r0 := @this: javax.xml.datatype.Duration;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        r1 = $r8;

        $i0 = virtualinvoke r0.<javax.xml.datatype.Duration: int getSign()>();

        if $i0 >= 0 goto label1;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

     label1:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(80);

        $r10 = <javax.xml.datatype.DatatypeConstants: javax.xml.datatype.DatatypeConstants$Field YEARS>;

        $r11 = virtualinvoke r0.<javax.xml.datatype.Duration: java.lang.Number getField(javax.xml.datatype.DatatypeConstants$Field)>($r10);

        r2 = (java.math.BigInteger) $r11;

        if r2 == null goto label2;

        $r37 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(89);

     label2:
        $r12 = <javax.xml.datatype.DatatypeConstants: javax.xml.datatype.DatatypeConstants$Field MONTHS>;

        $r13 = virtualinvoke r0.<javax.xml.datatype.Duration: java.lang.Number getField(javax.xml.datatype.DatatypeConstants$Field)>($r12);

        r3 = (java.math.BigInteger) $r13;

        if r3 == null goto label3;

        $r31 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(77);

     label3:
        $r15 = <javax.xml.datatype.DatatypeConstants: javax.xml.datatype.DatatypeConstants$Field DAYS>;

        $r14 = virtualinvoke r0.<javax.xml.datatype.Duration: java.lang.Number getField(javax.xml.datatype.DatatypeConstants$Field)>($r15);

        r4 = (java.math.BigInteger) $r14;

        if r4 == null goto label4;

        $r33 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(68);

     label4:
        $r17 = <javax.xml.datatype.DatatypeConstants: javax.xml.datatype.DatatypeConstants$Field HOURS>;

        $r16 = virtualinvoke r0.<javax.xml.datatype.Duration: java.lang.Number getField(javax.xml.datatype.DatatypeConstants$Field)>($r17);

        r5 = (java.math.BigInteger) $r16;

        $r19 = <javax.xml.datatype.DatatypeConstants: javax.xml.datatype.DatatypeConstants$Field MINUTES>;

        $r18 = virtualinvoke r0.<javax.xml.datatype.Duration: java.lang.Number getField(javax.xml.datatype.DatatypeConstants$Field)>($r19);

        r6 = (java.math.BigInteger) $r18;

        $r21 = <javax.xml.datatype.DatatypeConstants: javax.xml.datatype.DatatypeConstants$Field SECONDS>;

        $r20 = virtualinvoke r0.<javax.xml.datatype.Duration: java.lang.Number getField(javax.xml.datatype.DatatypeConstants$Field)>($r21);

        r7 = (java.math.BigDecimal) $r20;

        if r5 != null goto label5;

        if r6 != null goto label5;

        if r7 == null goto label8;

     label5:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(84);

        if r5 == null goto label6;

        $r28 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(72);

     label6:
        if r6 == null goto label7;

        $r26 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(77);

     label7:
        if r7 == null goto label8;

        $r25 = specialinvoke r0.<javax.xml.datatype.Duration: java.lang.String toString(java.math.BigDecimal)>(r7);

        $r24 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(83);

     label8:
        $r22 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r22;
    }
}
