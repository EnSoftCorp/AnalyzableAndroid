class java.util.jar.ManifestReader extends java.lang.Object
{
    private final java.util.HashMap attributeNameCache;
    private final byte[] buf;
    private int consecutiveLineBreaks;
    private final int endOfMainSection;
    private java.util.jar.Attributes$Name name;
    private int pos;
    private java.lang.String value;
    private final java.io.ByteArrayOutputStream valueBuffer;

    public void <init>(byte[], java.util.jar.Attributes) throws java.io.IOException
    {
        java.util.jar.ManifestReader r0;
        byte[] r1;
        java.util.jar.Attributes r2;
        java.util.HashMap $r3;
        java.io.ByteArrayOutputStream $r4;
        boolean $z0;
        int $i0;
        java.lang.String $r5;
        java.util.jar.Attributes$Name $r6;

        r0 := @this: java.util.jar.ManifestReader;

        r1 := @parameter0: byte[];

        r2 := @parameter1: java.util.jar.Attributes;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<java.util.jar.ManifestReader: java.util.HashMap attributeNameCache> = $r3;

        $r4 = new java.io.ByteArrayOutputStream;

        specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>(int)>(80);

        r0.<java.util.jar.ManifestReader: java.io.ByteArrayOutputStream valueBuffer> = $r4;

        r0.<java.util.jar.ManifestReader: int consecutiveLineBreaks> = 0;

        r0.<java.util.jar.ManifestReader: byte[] buf> = r1;

     label1:
        $z0 = specialinvoke r0.<java.util.jar.ManifestReader: boolean readHeader()>();

        if $z0 == 0 goto label2;

        $r6 = r0.<java.util.jar.ManifestReader: java.util.jar.Attributes$Name name>;

        $r5 = r0.<java.util.jar.ManifestReader: java.lang.String value>;

        virtualinvoke r2.<java.util.jar.Attributes: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r5);

        goto label1;

     label2:
        $i0 = r0.<java.util.jar.ManifestReader: int pos>;

        r0.<java.util.jar.ManifestReader: int endOfMainSection> = $i0;

        return;
    }

    private boolean readHeader() throws java.io.IOException
    {
        java.util.jar.ManifestReader r0;
        boolean z0;
        int $i0, $i1, i2;

        r0 := @this: java.util.jar.ManifestReader;

        z0 = 1;

        $i0 = r0.<java.util.jar.ManifestReader: int consecutiveLineBreaks>;

        i2 = (int) 1;

        if $i0 <= i2 goto label1;

        r0.<java.util.jar.ManifestReader: int consecutiveLineBreaks> = 0;

        return 0;

     label1:
        specialinvoke r0.<java.util.jar.ManifestReader: void readName()>();

        r0.<java.util.jar.ManifestReader: int consecutiveLineBreaks> = 0;

        specialinvoke r0.<java.util.jar.ManifestReader: void readValue()>();

        $i1 = r0.<java.util.jar.ManifestReader: int consecutiveLineBreaks>;

        if $i1 <= 0 goto label3;

     label2:
        return z0;

     label3:
        z0 = 0;

        goto label2;
    }

    private void readName() throws java.io.IOException
    {
        java.util.jar.ManifestReader r0;
        int i0, i1, i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10;
        byte[] r1, r3, $r5, $r8;
        java.lang.String r2, $r6, $r18, $r20;
        java.lang.IllegalArgumentException r4, $r21;
        byte $b6, $b11;
        java.nio.charset.Charset $r7;
        java.util.HashMap $r9, $r14;
        java.util.jar.Attributes$Name $r10, $r12, $r13, $r15;
        java.lang.Object $r11;
        java.io.IOException $r16, $r22;
        java.lang.Object[] $r19;

        r0 := @this: java.util.jar.ManifestReader;

        i0 = r0.<java.util.jar.ManifestReader: int pos>;

     label1:
        $i4 = r0.<java.util.jar.ManifestReader: int pos>;

        $r5 = r0.<java.util.jar.ManifestReader: byte[] buf>;

        $i3 = lengthof $r5;

        if $i4 >= $i3 goto label3;

        r1 = r0.<java.util.jar.ManifestReader: byte[] buf>;

        i1 = r0.<java.util.jar.ManifestReader: int pos>;

        $i5 = i1 + 1;

        r0.<java.util.jar.ManifestReader: int pos> = $i5;

        $b6 = r1[i1];

        if $b6 != 58 goto label1;

        $r6 = new java.lang.String;

        $r8 = r0.<java.util.jar.ManifestReader: byte[] buf>;

        $i7 = r0.<java.util.jar.ManifestReader: int pos>;

        $i8 = $i7 - i0;

        $i9 = -1 + $i8;

        $r7 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset US_ASCII>;

        specialinvoke $r6.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>($r8, i0, $i9, $r7);

        r2 = $r6;

        r3 = r0.<java.util.jar.ManifestReader: byte[] buf>;

        i2 = r0.<java.util.jar.ManifestReader: int pos>;

        $i10 = i2 + 1;

        r0.<java.util.jar.ManifestReader: int pos> = $i10;

        $b11 = r3[i2];

        if $b11 == 32 goto label2;

        $r16 = new java.io.IOException;

        $r19 = newarray (java.lang.Object)[1];

        $r19[0] = r2;

        $r18 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Invalid value for attribute \'%s\'", $r19);

        specialinvoke $r16.<java.io.IOException: void <init>(java.lang.String)>($r18);

        throw $r16;

     label2:
        $r9 = r0.<java.util.jar.ManifestReader: java.util.HashMap attributeNameCache>;

        $r11 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        $r10 = (java.util.jar.Attributes$Name) $r11;

        r0.<java.util.jar.ManifestReader: java.util.jar.Attributes$Name name> = $r10;

        $r13 = r0.<java.util.jar.ManifestReader: java.util.jar.Attributes$Name name>;

        if $r13 != null goto label3;

        $r12 = new java.util.jar.Attributes$Name;

        specialinvoke $r12.<java.util.jar.Attributes$Name: void <init>(java.lang.String)>(r2);

        r0.<java.util.jar.ManifestReader: java.util.jar.Attributes$Name name> = $r12;

        $r14 = r0.<java.util.jar.ManifestReader: java.util.HashMap attributeNameCache>;

        $r15 = r0.<java.util.jar.ManifestReader: java.util.jar.Attributes$Name name>;

        virtualinvoke $r14.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r15);

     label3:
        return;

     label4:
        $r21 := @caughtexception;

        r4 = $r21;

        $r22 = new java.io.IOException;

        $r20 = virtualinvoke r4.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        specialinvoke $r22.<java.io.IOException: void <init>(java.lang.String)>($r20);

        throw $r22;

        catch java.lang.IllegalArgumentException from label2 to label3 with label4;
    }

    private void readValue() throws java.io.IOException
    {
        java.util.jar.ManifestReader r0;
        boolean z0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        byte[] r1, $r3, $r4, $r11;
        java.io.ByteArrayOutputStream $r2, $r5, $r7, $r10;
        java.nio.charset.Charset $r6;
        java.lang.String $r8, $r9;
        byte $b8;
        java.io.IOException $r12;

        r0 := @this: java.util.jar.ManifestReader;

        z0 = 0;

        i0 = r0.<java.util.jar.ManifestReader: int pos>;

        i1 = r0.<java.util.jar.ManifestReader: int pos>;

        $r2 = r0.<java.util.jar.ManifestReader: java.io.ByteArrayOutputStream valueBuffer>;

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void reset()>();

     label1:
        $i4 = r0.<java.util.jar.ManifestReader: int pos>;

        $r3 = r0.<java.util.jar.ManifestReader: byte[] buf>;

        $i3 = lengthof $r3;

        if $i4 >= $i3 goto label3;

        r1 = r0.<java.util.jar.ManifestReader: byte[] buf>;

        i2 = r0.<java.util.jar.ManifestReader: int pos>;

        $i6 = i2 + 1;

        r0.<java.util.jar.ManifestReader: int pos> = $i6;

        $b8 = r1[i2];

        lookupswitch($b8)
        {
            case 0: goto label4;
            case 10: goto label5;
            case 13: goto label7;
            case 32: goto label8;
            default: goto label2;
        };

     label2:
        $i10 = r0.<java.util.jar.ManifestReader: int consecutiveLineBreaks>;

        if $i10 < 1 goto label9;

        $i9 = r0.<java.util.jar.ManifestReader: int pos>;

        $i12 = -1 + $i9;

        r0.<java.util.jar.ManifestReader: int pos> = $i12;

     label3:
        $r5 = r0.<java.util.jar.ManifestReader: java.io.ByteArrayOutputStream valueBuffer>;

        $r4 = r0.<java.util.jar.ManifestReader: byte[] buf>;

        $i5 = i1 - i0;

        virtualinvoke $r5.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r4, i0, $i5);

        $r7 = r0.<java.util.jar.ManifestReader: java.io.ByteArrayOutputStream valueBuffer>;

        $r6 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r8 = virtualinvoke $r6.<java.nio.charset.Charset: java.lang.String name()>();

        $r9 = virtualinvoke $r7.<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>($r8);

        r0.<java.util.jar.ManifestReader: java.lang.String value> = $r9;

        return;

     label4:
        $r12 = new java.io.IOException;

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>("NUL character in a manifest");

        throw $r12;

     label5:
        if z0 == 0 goto label6;

        z0 = 0;

        goto label1;

     label6:
        $i16 = r0.<java.util.jar.ManifestReader: int consecutiveLineBreaks>;

        $i15 = 1 + $i16;

        r0.<java.util.jar.ManifestReader: int consecutiveLineBreaks> = $i15;

        goto label1;

     label7:
        z0 = 1;

        $i14 = r0.<java.util.jar.ManifestReader: int consecutiveLineBreaks>;

        $i13 = 1 + $i14;

        r0.<java.util.jar.ManifestReader: int consecutiveLineBreaks> = $i13;

        goto label1;

     label8:
        $i7 = r0.<java.util.jar.ManifestReader: int consecutiveLineBreaks>;

        if $i7 != 1 goto label2;

        $r10 = r0.<java.util.jar.ManifestReader: java.io.ByteArrayOutputStream valueBuffer>;

        $r11 = r0.<java.util.jar.ManifestReader: byte[] buf>;

        $i11 = i1 - i0;

        virtualinvoke $r10.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r11, i0, $i11);

        i0 = r0.<java.util.jar.ManifestReader: int pos>;

        r0.<java.util.jar.ManifestReader: int consecutiveLineBreaks> = 0;

        goto label1;

     label9:
        i1 = r0.<java.util.jar.ManifestReader: int pos>;

        goto label1;
    }

    public int getEndOfMainSection()
    {
        java.util.jar.ManifestReader r0;
        int $i0;

        r0 := @this: java.util.jar.ManifestReader;

        $i0 = r0.<java.util.jar.ManifestReader: int endOfMainSection>;

        return $i0;
    }

    public void readEntries(java.util.Map, java.util.Map) throws java.io.IOException
    {
        java.util.jar.ManifestReader r0;
        java.util.Map r1, r2;
        int i0, $i1;
        java.lang.String r3, $r14;
        java.util.jar.Attributes r4, $r15;
        boolean $z0, $z1, $z2;
        java.util.jar.Attributes$Name $r5, $r6, $r13;
        java.lang.Object $r7, $r9;
        java.util.jar.Manifest$Chunk $r10;
        java.io.IOException $r11, $r17;

        r0 := @this: java.util.jar.ManifestReader;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.util.Map;

        i0 = r0.<java.util.jar.ManifestReader: int pos>;

     label1:
        $z0 = specialinvoke r0.<java.util.jar.ManifestReader: boolean readHeader()>();

        if $z0 == 0 goto label7;

        $r6 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name NAME>;

        $r5 = r0.<java.util.jar.ManifestReader: java.util.jar.Attributes$Name name>;

        $z1 = virtualinvoke $r6.<java.util.jar.Attributes$Name: boolean equals(java.lang.Object)>($r5);

        if $z1 != 0 goto label2;

        $r17 = new java.io.IOException;

        specialinvoke $r17.<java.io.IOException: void <init>(java.lang.String)>("Entry is not named");

        throw $r17;

     label2:
        r3 = r0.<java.util.jar.ManifestReader: java.lang.String value>;

        $r7 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (java.util.jar.Attributes) $r7;

        if r4 != null goto label3;

        $r15 = new java.util.jar.Attributes;

        specialinvoke $r15.<java.util.jar.Attributes: void <init>(int)>(12);

        r4 = $r15;

     label3:
        $z2 = specialinvoke r0.<java.util.jar.ManifestReader: boolean readHeader()>();

        if $z2 == 0 goto label4;

        $r13 = r0.<java.util.jar.ManifestReader: java.util.jar.Attributes$Name name>;

        $r14 = r0.<java.util.jar.ManifestReader: java.lang.String value>;

        virtualinvoke r4.<java.util.jar.Attributes: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r14);

        goto label3;

     label4:
        if r2 == null goto label6;

        $r9 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        if $r9 == null goto label5;

        $r11 = new java.io.IOException;

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>("A jar verifier does not support more than one entry with the same name");

        throw $r11;

     label5:
        $r10 = new java.util.jar.Manifest$Chunk;

        $i1 = r0.<java.util.jar.ManifestReader: int pos>;

        specialinvoke $r10.<java.util.jar.Manifest$Chunk: void <init>(int,int)>(i0, $i1);

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r10);

        i0 = r0.<java.util.jar.ManifestReader: int pos>;

     label6:
        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r4);

        goto label1;

     label7:
        return;
    }
}
