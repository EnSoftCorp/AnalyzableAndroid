class java.util.EnumMap$Entry extends java.util.MapEntry
{
    private final java.util.EnumMap enumMap;
    private final int ordinal;

    void <init>(java.lang.Enum, java.lang.Object, java.util.EnumMap)
    {
        java.util.EnumMap$Entry r0;
        java.lang.Enum r1;
        java.lang.Object r2;
        java.util.EnumMap r3;
        int $i0;

        r0 := @this: java.util.EnumMap$Entry;

        r1 := @parameter0: java.lang.Enum;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.util.EnumMap;

        specialinvoke r0.<java.util.MapEntry: void <init>(java.lang.Object,java.lang.Object)>(r1, r2);

        r0.<java.util.EnumMap$Entry: java.util.EnumMap enumMap> = r3;

        $i0 = virtualinvoke r1.<java.lang.Enum: int ordinal()>();

        r0.<java.util.EnumMap$Entry: int ordinal> = $i0;

        return;
    }

    private void checkEntryStatus()
    {
        java.util.EnumMap$Entry r0;
        java.util.EnumMap $r1;
        int $i0;
        boolean[] $r2;
        boolean $z0;
        java.lang.IllegalStateException $r3;

        r0 := @this: java.util.EnumMap$Entry;

        $r1 = r0.<java.util.EnumMap$Entry: java.util.EnumMap enumMap>;

        $r2 = $r1.<java.util.EnumMap: boolean[] hasMapping>;

        $i0 = r0.<java.util.EnumMap$Entry: int ordinal>;

        $z0 = $r2[$i0];

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>()>();

        throw $r3;

     label1:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.EnumMap$Entry r0;
        java.lang.Object r1, r3, r4, $r7, $r12, $r14;
        boolean z0, z1, z2, $z3;
        java.util.Map$Entry r2;
        java.util.EnumMap $r5, $r9, $r11;
        int $i0, $i1, $i2;
        boolean[] $r6;
        java.lang.Enum $r8;
        java.lang.Object[] $r10, $r13;

        r0 := @this: java.util.EnumMap$Entry;

        r1 := @parameter0: java.lang.Object;

        $r5 = r0.<java.util.EnumMap$Entry: java.util.EnumMap enumMap>;

        $r6 = $r5.<java.util.EnumMap: boolean[] hasMapping>;

        $i0 = r0.<java.util.EnumMap$Entry: int ordinal>;

        $z3 = $r6[$i0];

        if $z3 != 0 goto label1;

        return 0;

     label1:
        z0 = r1 instanceof java.util.Map$Entry;

        z1 = 0;

        if z0 == 0 goto label2;

        r2 = (java.util.Map$Entry) r1;

        r3 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = r0.<java.util.EnumMap$Entry: java.lang.Object key>;

        $r8 = (java.lang.Enum) $r7;

        z2 = virtualinvoke $r8.<java.lang.Enum: boolean equals(java.lang.Object)>(r3);

        z1 = 0;

        if z2 == 0 goto label2;

        r4 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = r0.<java.util.EnumMap$Entry: java.util.EnumMap enumMap>;

        $r10 = $r9.<java.util.EnumMap: java.lang.Object[] values>;

        $i1 = r0.<java.util.EnumMap$Entry: int ordinal>;

        $r12 = $r10[$i1];

        if $r12 != null goto label4;

        if r4 != null goto label3;

        z1 = 1;

     label2:
        return z1;

     label3:
        z1 = 0;

        goto label2;

     label4:
        $r11 = r0.<java.util.EnumMap$Entry: java.util.EnumMap enumMap>;

        $r13 = $r11.<java.util.EnumMap: java.lang.Object[] values>;

        $i2 = r0.<java.util.EnumMap$Entry: int ordinal>;

        $r14 = $r13[$i2];

        z1 = virtualinvoke $r14.<java.lang.Object: boolean equals(java.lang.Object)>(r4);

        goto label2;
    }

    public java.lang.Enum getKey()
    {
        java.util.EnumMap$Entry r0;
        java.util.EnumMap $r1;
        int $i0;
        java.lang.Enum[] $r2;
        java.lang.Enum $r3;

        r0 := @this: java.util.EnumMap$Entry;

        specialinvoke r0.<java.util.EnumMap$Entry: void checkEntryStatus()>();

        $r1 = r0.<java.util.EnumMap$Entry: java.util.EnumMap enumMap>;

        $r2 = $r1.<java.util.EnumMap: java.lang.Enum[] keys>;

        $i0 = r0.<java.util.EnumMap$Entry: int ordinal>;

        $r3 = $r2[$i0];

        return $r3;
    }

    public volatile java.lang.Object getKey()
    {
        java.util.EnumMap$Entry r0;
        java.lang.Enum $r1;

        r0 := @this: java.util.EnumMap$Entry;

        $r1 = virtualinvoke r0.<java.util.EnumMap$Entry: java.lang.Enum getKey()>();

        return $r1;
    }

    public java.lang.Object getValue()
    {
        java.util.EnumMap$Entry r0;
        java.util.EnumMap $r1;
        int $i0;
        java.lang.Object[] $r2;
        java.lang.Object $r3;

        r0 := @this: java.util.EnumMap$Entry;

        specialinvoke r0.<java.util.EnumMap$Entry: void checkEntryStatus()>();

        $r1 = r0.<java.util.EnumMap$Entry: java.util.EnumMap enumMap>;

        $r2 = $r1.<java.util.EnumMap: java.lang.Object[] values>;

        $i0 = r0.<java.util.EnumMap$Entry: int ordinal>;

        $r3 = $r2[$i0];

        return $r3;
    }

    public int hashCode()
    {
        java.util.EnumMap$Entry r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Object r1, $r11;
        java.util.EnumMap $r2, $r5, $r8, $r10;
        java.lang.Enum[] $r3, $r6;
        java.lang.Enum $r4, $r7;
        java.lang.Object[] $r9, $r12;

        r0 := @this: java.util.EnumMap$Entry;

        $r2 = r0.<java.util.EnumMap$Entry: java.util.EnumMap enumMap>;

        $r3 = $r2.<java.util.EnumMap: java.lang.Enum[] keys>;

        $i2 = r0.<java.util.EnumMap$Entry: int ordinal>;

        $r4 = $r3[$i2];

        if $r4 != null goto label3;

        i0 = 0;

     label1:
        $r8 = r0.<java.util.EnumMap$Entry: java.util.EnumMap enumMap>;

        $r9 = $r8.<java.util.EnumMap: java.lang.Object[] values>;

        $i4 = r0.<java.util.EnumMap$Entry: int ordinal>;

        r1 = $r9[$i4];

        i1 = 0;

        if r1 != null goto label4;

     label2:
        $i6 = i0 ^ i1;

        return $i6;

     label3:
        $r5 = r0.<java.util.EnumMap$Entry: java.util.EnumMap enumMap>;

        $r6 = $r5.<java.util.EnumMap: java.lang.Enum[] keys>;

        $i3 = r0.<java.util.EnumMap$Entry: int ordinal>;

        $r7 = $r6[$i3];

        i0 = virtualinvoke $r7.<java.lang.Enum: int hashCode()>();

        goto label1;

     label4:
        $r10 = r0.<java.util.EnumMap$Entry: java.util.EnumMap enumMap>;

        $r12 = $r10.<java.util.EnumMap: java.lang.Object[] values>;

        $i5 = r0.<java.util.EnumMap$Entry: int ordinal>;

        $r11 = $r12[$i5];

        i1 = virtualinvoke $r11.<java.lang.Object: int hashCode()>();

        goto label2;
    }

    public java.lang.Object setValue(java.lang.Object)
    {
        java.util.EnumMap$Entry r0;
        java.lang.Object r1, $r6;
        java.util.EnumMap $r2, $r5;
        int $i0;
        java.lang.Enum[] $r3;
        java.lang.Enum $r4;

        r0 := @this: java.util.EnumMap$Entry;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.util.EnumMap$Entry: void checkEntryStatus()>();

        $r5 = r0.<java.util.EnumMap$Entry: java.util.EnumMap enumMap>;

        $r2 = r0.<java.util.EnumMap$Entry: java.util.EnumMap enumMap>;

        $r3 = $r2.<java.util.EnumMap: java.lang.Enum[] keys>;

        $i0 = r0.<java.util.EnumMap$Entry: int ordinal>;

        $r4 = $r3[$i0];

        $r6 = virtualinvoke $r5.<java.util.EnumMap: java.lang.Object put(java.lang.Enum,java.lang.Object)>($r4, r1);

        return $r6;
    }

    public java.lang.String toString()
    {
        java.util.EnumMap$Entry r0;
        java.lang.StringBuilder r1, $r3;
        java.lang.String r2, $r7, $r15;
        java.util.EnumMap $r4, $r9, $r12;
        int $i0, $i1, $i2;
        java.lang.Enum[] $r5;
        java.lang.Enum $r6;
        java.lang.Object[] $r10, $r13;
        java.lang.Object $r11, $r14;

        r0 := @this: java.util.EnumMap$Entry;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<java.util.EnumMap$Entry: java.util.EnumMap enumMap>;

        $r5 = $r4.<java.util.EnumMap: java.lang.Enum[] keys>;

        $i0 = r0.<java.util.EnumMap$Entry: int ordinal>;

        $r6 = $r5[$i0];

        $r7 = virtualinvoke $r6.<java.lang.Enum: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);

        r1 = $r3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r9 = r0.<java.util.EnumMap$Entry: java.util.EnumMap enumMap>;

        $r10 = $r9.<java.util.EnumMap: java.lang.Object[] values>;

        $i1 = r0.<java.util.EnumMap$Entry: int ordinal>;

        $r11 = $r10[$i1];

        if $r11 != null goto label2;

        r2 = "null";

     label1:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r15 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;

     label2:
        $r12 = r0.<java.util.EnumMap$Entry: java.util.EnumMap enumMap>;

        $r13 = $r12.<java.util.EnumMap: java.lang.Object[] values>;

        $i2 = r0.<java.util.EnumMap$Entry: int ordinal>;

        $r14 = $r13[$i2];

        r2 = virtualinvoke $r14.<java.lang.Object: java.lang.String toString()>();

        goto label1;
    }
}
