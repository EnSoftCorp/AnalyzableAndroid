final class java.util.Collections$3 extends java.lang.Object implements java.util.Enumeration
{
    java.util.Iterator it;
    final java.util.Collection val$c;

    void <init>(java.util.Collection)
    {
        java.util.Collections$3 r0;
        java.util.Collection r1, $r2;
        java.util.Iterator $r3;

        r0 := @this: java.util.Collections$3;

        r1 := @parameter0: java.util.Collection;

        r0.<java.util.Collections$3: java.util.Collection val$c> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r0.<java.util.Collections$3: java.util.Collection val$c>;

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

        r0.<java.util.Collections$3: java.util.Iterator it> = $r3;

        return;
    }

    public boolean hasMoreElements()
    {
        java.util.Collections$3 r0;
        java.util.Iterator $r1;
        boolean $z0;

        r0 := @this: java.util.Collections$3;

        $r1 = r0.<java.util.Collections$3: java.util.Iterator it>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        return $z0;
    }

    public java.lang.Object nextElement()
    {
        java.util.Collections$3 r0;
        java.util.Iterator $r1;
        java.lang.Object $r2;

        r0 := @this: java.util.Collections$3;

        $r1 = r0.<java.util.Collections$3: java.util.Iterator it>;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        return $r2;
    }
}
