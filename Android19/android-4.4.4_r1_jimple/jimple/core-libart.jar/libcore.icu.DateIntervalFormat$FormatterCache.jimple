class libcore.icu.DateIntervalFormat$FormatterCache extends libcore.util.BasicLruCache
{

    void <init>()
    {
        libcore.icu.DateIntervalFormat$FormatterCache r0;

        r0 := @this: libcore.icu.DateIntervalFormat$FormatterCache;

        specialinvoke r0.<libcore.util.BasicLruCache: void <init>(int)>(8);

        return;
    }

    protected volatile void entryEvicted(java.lang.Object, java.lang.Object)
    {
        libcore.icu.DateIntervalFormat$FormatterCache r0;
        java.lang.Object r1, r2;
        java.lang.Long $r3;
        java.lang.String $r4;

        r0 := @this: libcore.icu.DateIntervalFormat$FormatterCache;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.lang.String) r1;

        $r3 = (java.lang.Long) r2;

        virtualinvoke r0.<libcore.icu.DateIntervalFormat$FormatterCache: void entryEvicted(java.lang.String,java.lang.Long)>($r4, $r3);

        return;
    }

    protected void entryEvicted(java.lang.String, java.lang.Long)
    {
        libcore.icu.DateIntervalFormat$FormatterCache r0;
        java.lang.String r1;
        java.lang.Long r2;
        long $l0;

        r0 := @this: libcore.icu.DateIntervalFormat$FormatterCache;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Long;

        $l0 = virtualinvoke r2.<java.lang.Long: long longValue()>();

        staticinvoke <libcore.icu.DateIntervalFormat: void access$000(long)>($l0);

        return;
    }
}
