final class javax.xml.xpath.XPathFactoryFinder extends java.lang.Object
{
    private static final int DEFAULT_LINE_LENGTH;
    private static final java.lang.Class SERVICE_CLASS;
    private static final java.lang.String SERVICE_ID;
    private static java.util.Properties cacheProps;
    private static boolean debug;
    private static boolean firstTime;
    private final java.lang.ClassLoader classLoader;

    static void <clinit>()
    {
        java.lang.String r0, $r5, $r7, $r8;
        boolean z0, z1;
        java.util.Properties $r1;
        java.lang.StringBuilder $r2, $r3, $r6;
        java.lang.Class $r4;

        <javax.xml.xpath.XPathFactoryFinder: int DEFAULT_LINE_LENGTH> = 80;

        <javax.xml.xpath.XPathFactoryFinder: boolean debug> = 0;

        r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("jaxp.debug");

        z0 = 0;

        if r0 == null goto label1;

        $r8 = "false";

        z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        z0 = 0;

        if z1 != 0 goto label1;

        z0 = 1;

     label1:
        <javax.xml.xpath.XPathFactoryFinder: boolean debug> = z0;

        $r1 = new java.util.Properties;

        specialinvoke $r1.<java.util.Properties: void <init>()>();

        <javax.xml.xpath.XPathFactoryFinder: java.util.Properties cacheProps> = $r1;

        <javax.xml.xpath.XPathFactoryFinder: boolean firstTime> = 1;

        <javax.xml.xpath.XPathFactoryFinder: java.lang.Class SERVICE_CLASS> = class "javax/xml/xpath/XPathFactory";

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("META-INF/services/");

        $r4 = <javax.xml.xpath.XPathFactoryFinder: java.lang.Class SERVICE_CLASS>;

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        <javax.xml.xpath.XPathFactoryFinder: java.lang.String SERVICE_ID> = $r7;

        return;
    }

    public void <init>(java.lang.ClassLoader)
    {
        javax.xml.xpath.XPathFactoryFinder r0;
        java.lang.ClassLoader r1;
        boolean $z0;

        r0 := @this: javax.xml.xpath.XPathFactoryFinder;

        r1 := @parameter0: java.lang.ClassLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<javax.xml.xpath.XPathFactoryFinder: java.lang.ClassLoader classLoader> = r1;

        $z0 = <javax.xml.xpath.XPathFactoryFinder: boolean debug>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<javax.xml.xpath.XPathFactoryFinder: void debugDisplayClassLoader()>();

     label1:
        return;
    }

    private javax.xml.xpath.XPathFactory _newFactory(java.lang.String)
    {
        javax.xml.xpath.XPathFactoryFinder r0;
        java.lang.String r1, r2, r4, r5, r12, r16, $r20, $r28, $r29, $r39, $r40, $r49, $r50, $r56, $r65, $r67;
        java.lang.Exception r3, r6, $r71, $r72;
        java.util.Iterator r7;
        javax.xml.xpath.XPathFactory r8, r11, r13, r19, $r36;
        java.net.URL r9;
        java.io.IOException r10, $r69;
        java.util.Properties r14, $r34, $r51;
        java.lang.Throwable r15, $r70;
        java.io.File r17, $r47;
        java.lang.StringBuilder $r18, $r22, $r23, $r24, $r25, $r26, $r27, $r30, $r31, $r32, $r37, $r41, $r42, $r43, $r44, $r45, $r46, $r52, $r53, $r54, $r55, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r66, $r68;
        java.lang.Class $r21;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        java.lang.Iterable $r33;
        java.lang.Object $r35;
        java.io.InputStream $r38;
        java.io.FileInputStream $r48;
        int $i0;

        r0 := @this: javax.xml.xpath.XPathFactoryFinder;

        r1 := @parameter0: java.lang.String;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r21 = <javax.xml.xpath.XPathFactoryFinder: java.lang.Class SERVICE_CLASS>;

        $r20 = virtualinvoke $r21.<java.lang.Class: java.lang.String getName()>();

        $r23 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r2 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

     label01:
        $z0 = <javax.xml.xpath.XPathFactoryFinder: boolean debug>;

        if $z0 == 0 goto label02;

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Looking up system property \'");

        $r57 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r68 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r67 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.xml.xpath.XPathFactoryFinder: void debugPrintln(java.lang.String)>($r67);

     label02:
        r16 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r2);

     label03:
        if r16 == null goto label07;

     label04:
        $i0 = virtualinvoke r16.<java.lang.String: int length()>();

        if $i0 <= 0 goto label07;

        $z12 = <javax.xml.xpath.XPathFactoryFinder: boolean debug>;

        if $z12 == 0 goto label05;

        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The value is \'");

        $r62 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r61 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r56 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.xml.xpath.XPathFactoryFinder: void debugPrintln(java.lang.String)>($r56);

     label05:
        r19 = virtualinvoke r0.<javax.xml.xpath.XPathFactoryFinder: javax.xml.xpath.XPathFactory createInstance(java.lang.String)>(r16);

     label06:
        if r19 == null goto label08;

        return r19;

     label07:
        $z1 = <javax.xml.xpath.XPathFactoryFinder: boolean debug>;

        if $z1 == 0 goto label08;

        staticinvoke <javax.xml.xpath.XPathFactoryFinder: void debugPrintln(java.lang.String)>("The property is undefined.");

     label08:
        r4 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.home");

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r29 = <java.io.File: java.lang.String separator>;

        $r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r27 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lib");

        $r28 = <java.io.File: java.lang.String separator>;

        $r31 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("jaxp.properties");

        r5 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

     label09:
        $z2 = <javax.xml.xpath.XPathFactoryFinder: boolean firstTime>;

        if $z2 == 0 goto label13;

        r14 = <javax.xml.xpath.XPathFactoryFinder: java.util.Properties cacheProps>;

        entermonitor r14;

     label10:
        $z11 = <javax.xml.xpath.XPathFactoryFinder: boolean firstTime>;

        if $z11 == 0 goto label12;

        $r47 = new java.io.File;

        specialinvoke $r47.<java.io.File: void <init>(java.lang.String)>(r5);

        r17 = $r47;

        <javax.xml.xpath.XPathFactoryFinder: boolean firstTime> = 0;

        $z9 = virtualinvoke r17.<java.io.File: boolean exists()>();

        if $z9 == 0 goto label12;

        $z10 = <javax.xml.xpath.XPathFactoryFinder: boolean debug>;

        if $z10 == 0 goto label11;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Read properties file ");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17);

        $r50 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.xml.xpath.XPathFactoryFinder: void debugPrintln(java.lang.String)>($r50);

     label11:
        $r51 = <javax.xml.xpath.XPathFactoryFinder: java.util.Properties cacheProps>;

        $r48 = new java.io.FileInputStream;

        specialinvoke $r48.<java.io.FileInputStream: void <init>(java.io.File)>(r17);

        virtualinvoke $r51.<java.util.Properties: void load(java.io.InputStream)>($r48);

     label12:
        exitmonitor r14;

     label13:
        $r34 = <javax.xml.xpath.XPathFactoryFinder: java.util.Properties cacheProps>;

        r12 = virtualinvoke $r34.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r2);

        $z3 = <javax.xml.xpath.XPathFactoryFinder: boolean debug>;

        if $z3 == 0 goto label14;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("found ");

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in $java.home/jaxp.properties");

        $r49 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.xml.xpath.XPathFactoryFinder: void debugPrintln(java.lang.String)>($r49);

     label14:
        if r12 == null goto label17;

     label15:
        r13 = virtualinvoke r0.<javax.xml.xpath.XPathFactoryFinder: javax.xml.xpath.XPathFactory createInstance(java.lang.String)>(r12);

     label16:
        r8 = r13;

        if r8 != null goto label31;

     label17:
        $r33 = specialinvoke r0.<javax.xml.xpath.XPathFactoryFinder: java.lang.Iterable createServiceFileIterator()>();

        r7 = interfaceinvoke $r33.<java.lang.Iterable: java.util.Iterator iterator()>();

     label18:
        $z6 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label27;

        $r35 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.net.URL) $r35;

        $z7 = <javax.xml.xpath.XPathFactoryFinder: boolean debug>;

        if $z7 == 0 goto label19;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("looking into ");

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.xml.xpath.XPathFactoryFinder: void debugPrintln(java.lang.String)>($r40);

     label19:
        $r39 = virtualinvoke r9.<java.net.URL: java.lang.String toExternalForm()>();

        $r38 = virtualinvoke r9.<java.net.URL: java.io.InputStream openStream()>();

        r11 = specialinvoke r0.<javax.xml.xpath.XPathFactoryFinder: javax.xml.xpath.XPathFactory loadFromServicesFile(java.lang.String,java.lang.String,java.io.InputStream)>(r1, $r39, $r38);

     label20:
        if r11 == null goto label18;

        return r11;

     label21:
        $r71 := @caughtexception;

        r3 = $r71;

        virtualinvoke r3.<java.lang.Exception: void printStackTrace()>();

        goto label08;

     label22:
        $r70 := @caughtexception;

        r15 = $r70;

     label23:
        exitmonitor r14;

     label24:
        throw r15;

     label25:
        $r72 := @caughtexception;

        r6 = $r72;

        $z14 = <javax.xml.xpath.XPathFactoryFinder: boolean debug>;

        if $z14 == 0 goto label17;

        virtualinvoke r6.<java.lang.Exception: void printStackTrace()>();

        goto label17;

     label26:
        $r69 := @caughtexception;

        r10 = $r69;

        $z13 = <javax.xml.xpath.XPathFactoryFinder: boolean debug>;

        if $z13 == 0 goto label18;

        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        $r63 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to read ");

        $r66 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r65 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.xml.xpath.XPathFactoryFinder: void debugPrintln(java.lang.String)>($r65);

        virtualinvoke r10.<java.io.IOException: void printStackTrace()>();

        goto label18;

     label27:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://java.sun.com/jaxp/xpath/dom");

        if $z4 == 0 goto label29;

        $z8 = <javax.xml.xpath.XPathFactoryFinder: boolean debug>;

        if $z8 == 0 goto label28;

        staticinvoke <javax.xml.xpath.XPathFactoryFinder: void debugPrintln(java.lang.String)>("attempting to use the platform default W3C DOM XPath lib");

     label28:
        $r36 = virtualinvoke r0.<javax.xml.xpath.XPathFactoryFinder: javax.xml.xpath.XPathFactory createInstance(java.lang.String)>("org.apache.xpath.jaxp.XPathFactoryImpl");

        return $r36;

     label29:
        $z5 = <javax.xml.xpath.XPathFactoryFinder: boolean debug>;

        if $z5 == 0 goto label30;

        staticinvoke <javax.xml.xpath.XPathFactoryFinder: void debugPrintln(java.lang.String)>("all things were tried, but none was found. bailing out.");

     label30:
        r8 = null;

     label31:
        return r8;

        catch java.lang.Exception from label01 to label02 with label21;
        catch java.lang.Exception from label02 to label03 with label21;
        catch java.lang.Exception from label04 to label05 with label21;
        catch java.lang.Exception from label05 to label06 with label21;
        catch java.lang.Exception from label07 to label08 with label21;
        catch java.lang.Exception from label09 to label10 with label25;
        catch java.lang.Throwable from label10 to label11 with label22;
        catch java.lang.Throwable from label11 to label12 with label22;
        catch java.lang.Throwable from label12 to label13 with label22;
        catch java.lang.Exception from label13 to label14 with label25;
        catch java.lang.Exception from label15 to label16 with label25;
        catch java.io.IOException from label19 to label20 with label26;
        catch java.lang.Throwable from label23 to label24 with label22;
        catch java.lang.Exception from label24 to label25 with label25;
    }

    private java.lang.Iterable createServiceFileIterator()
    {
        javax.xml.xpath.XPathFactoryFinder r0;
        java.io.IOException r1, $r18;
        java.util.Enumeration r2;
        java.util.ArrayList r3;
        java.lang.ClassLoader $r4, $r6, $r15;
        java.lang.String $r5, $r9, $r13, $r14, $r21, $r23;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r7, $r8, $r10, $r11, $r19, $r22, $r24;
        java.lang.Class $r12;
        java.util.Set $r16, $r20;
        java.net.URL $r17;

        r0 := @this: javax.xml.xpath.XPathFactoryFinder;

        $r4 = r0.<javax.xml.xpath.XPathFactoryFinder: java.lang.ClassLoader classLoader>;

        if $r4 != null goto label1;

        $r12 = class "javax/xml/xpath/XPathFactoryFinder";

        $r15 = virtualinvoke $r12.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r14 = <javax.xml.xpath.XPathFactoryFinder: java.lang.String SERVICE_ID>;

        $r17 = virtualinvoke $r15.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>($r14);

        $r16 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r17);

        return $r16;

     label1:
        $r6 = r0.<javax.xml.xpath.XPathFactoryFinder: java.lang.ClassLoader classLoader>;

        $r5 = <javax.xml.xpath.XPathFactoryFinder: java.lang.String SERVICE_ID>;

        r2 = virtualinvoke $r6.<java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)>($r5);

        $z0 = <javax.xml.xpath.XPathFactoryFinder: boolean debug>;

        if $z0 == 0 goto label2;

        $z1 = interfaceinvoke r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 != 0 goto label2;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no ");

        $r9 = <javax.xml.xpath.XPathFactoryFinder: java.lang.String SERVICE_ID>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" file was found");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.xml.xpath.XPathFactoryFinder: void debugPrintln(java.lang.String)>($r13);

     label2:
        r3 = staticinvoke <java.util.Collections: java.util.ArrayList list(java.util.Enumeration)>(r2);

     label3:
        return r3;

     label4:
        $r18 := @caughtexception;

        r1 = $r18;

        $z2 = <javax.xml.xpath.XPathFactoryFinder: boolean debug>;

        if $z2 == 0 goto label5;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to enumerate resources ");

        $r21 = <javax.xml.xpath.XPathFactoryFinder: java.lang.String SERVICE_ID>;

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.xml.xpath.XPathFactoryFinder: void debugPrintln(java.lang.String)>($r23);

        virtualinvoke r1.<java.io.IOException: void printStackTrace()>();

     label5:
        $r20 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        return $r20;

        catch java.io.IOException from label1 to label2 with label4;
        catch java.io.IOException from label2 to label3 with label4;
    }

    private void debugDisplayClassLoader()
    {
        javax.xml.xpath.XPathFactoryFinder r0;
        java.lang.ClassLoader $r1, $r3, $r4, $r5, $r8, $r14, $r21;
        java.lang.Thread $r2;
        java.lang.StringBuilder $r6, $r7, $r9, $r10, $r12, $r13, $r15, $r17, $r18, $r19, $r20, $r23;
        java.lang.String $r11, $r16, $r22;

        r0 := @this: javax.xml.xpath.XPathFactoryFinder;

        $r1 = r0.<javax.xml.xpath.XPathFactoryFinder: java.lang.ClassLoader classLoader>;

        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r3 = virtualinvoke $r2.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        if $r1 != $r3 goto label1;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("using thread context class loader (");

        $r21 = r0.<javax.xml.xpath.XPathFactoryFinder: java.lang.ClassLoader classLoader>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") for search");

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.xml.xpath.XPathFactoryFinder: void debugPrintln(java.lang.String)>($r22);

        return;

     label1:
        $r4 = r0.<javax.xml.xpath.XPathFactoryFinder: java.lang.ClassLoader classLoader>;

        $r5 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();

        if $r4 != $r5 goto label2;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("using system class loader (");

        $r14 = r0.<javax.xml.xpath.XPathFactoryFinder: java.lang.ClassLoader classLoader>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") for search");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.xml.xpath.XPathFactoryFinder: void debugPrintln(java.lang.String)>($r16);

        return;

     label2:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("using class loader (");

        $r8 = r0.<javax.xml.xpath.XPathFactoryFinder: java.lang.ClassLoader classLoader>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") for search");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.xml.xpath.XPathFactoryFinder: void debugPrintln(java.lang.String)>($r11);

        return;
    }

    private static void debugPrintln(java.lang.String)
    {
        java.lang.String r0, $r5;
        boolean $z0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.io.PrintStream $r2;

        r0 := @parameter0: java.lang.String;

        $z0 = <javax.xml.xpath.XPathFactoryFinder: boolean debug>;

        if $z0 == 0 goto label1;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JAXP: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r5);

     label1:
        return;
    }

    private javax.xml.xpath.XPathFactory loadFromServicesFile(java.lang.String, java.lang.String, java.io.InputStream)
    {
        javax.xml.xpath.XPathFactoryFinder r0;
        java.lang.String r1, r2, r7, r8, r9, $r19;
        java.io.InputStream r3;
        java.io.BufferedReader r4, $r14, $r21;
        javax.xml.xpath.XPathFactory r6, r11;
        int i0, $i1;
        boolean z0, $z1;
        java.io.InputStreamReader $r13, $r20;
        java.lang.StringBuilder $r15, $r16, $r17;
        java.io.UnsupportedEncodingException $r18;
        java.io.IOException $r22;
        java.lang.Exception $r23;

        r0 := @this: javax.xml.xpath.XPathFactoryFinder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.io.InputStream;

        $z1 = <javax.xml.xpath.XPathFactoryFinder: boolean debug>;

        if $z1 == 0 goto label01;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reading ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.xml.xpath.XPathFactoryFinder: void debugPrintln(java.lang.String)>($r19);

     label01:
        $r14 = new java.io.BufferedReader;

        $r13 = new java.io.InputStreamReader;

        specialinvoke $r13.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r3, "UTF-8");

        specialinvoke $r14.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r13, 80);

        r4 = $r14;

     label02:
        r7 = virtualinvoke r4.<java.io.BufferedReader: java.lang.String readLine()>();

     label03:
        r8 = r7;

        r6 = null;

        if r8 == null goto label07;

        i0 = virtualinvoke r8.<java.lang.String: int indexOf(int)>(35);

        if i0 == -1 goto label04;

        r8 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

     label04:
        r9 = virtualinvoke r8.<java.lang.String: java.lang.String trim()>();

        $i1 = virtualinvoke r9.<java.lang.String: int length()>();

        if $i1 == 0 goto label02;

     label05:
        r11 = virtualinvoke r0.<javax.xml.xpath.XPathFactoryFinder: javax.xml.xpath.XPathFactory createInstance(java.lang.String)>(r9);

        z0 = virtualinvoke r11.<javax.xml.xpath.XPathFactory: boolean isObjectModelSupported(java.lang.String)>(r1);

     label06:
        if z0 == 0 goto label02;

        r6 = r11;

     label07:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        return r6;

     label08:
        $r18 := @caughtexception;

        $r21 = new java.io.BufferedReader;

        $r20 = new java.io.InputStreamReader;

        specialinvoke $r20.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r3);

        specialinvoke $r21.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r20, 80);

        r4 = $r21;

        goto label02;

     label09:
        $r22 := @caughtexception;

        r6 = null;

        goto label07;

     label10:
        $r23 := @caughtexception;

        goto label02;

        catch java.io.UnsupportedEncodingException from label01 to label02 with label08;
        catch java.io.IOException from label02 to label03 with label09;
        catch java.lang.Exception from label05 to label06 with label10;
    }

    private static java.lang.String which(java.lang.Class)
    {
        java.lang.Class r0;
        java.lang.String $r1, $r3;
        java.lang.ClassLoader $r2;

        r0 := @parameter0: java.lang.Class;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = virtualinvoke r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r3 = staticinvoke <javax.xml.xpath.XPathFactoryFinder: java.lang.String which(java.lang.String,java.lang.ClassLoader)>($r1, $r2);

        return $r3;
    }

    private static java.lang.String which(java.lang.String, java.lang.ClassLoader)
    {
        java.lang.String r0, r2, $r5, $r8;
        java.lang.ClassLoader r1;
        java.net.URL r3;
        java.lang.StringBuilder $r4, $r6, $r7;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.ClassLoader;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r0.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".class");

        r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        if r1 != null goto label1;

        r1 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();

     label1:
        r3 = virtualinvoke r1.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>(r2);

        if r3 == null goto label2;

        $r8 = virtualinvoke r3.<java.net.URL: java.lang.String toString()>();

        return $r8;

     label2:
        return null;
    }

    javax.xml.xpath.XPathFactory createInstance(java.lang.String)
    {
        javax.xml.xpath.XPathFactoryFinder r0;
        java.lang.String r1, $r13, $r15, $r19, $r21, $r26, $r28;
        java.lang.Throwable r2, $r27;
        java.lang.ThreadDeath r3, $r29;
        java.lang.VirtualMachineError r4, $r32;
        java.lang.Class r5, $r10;
        java.lang.Object r6;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.ClassLoader $r7, $r20;
        java.lang.StringBuilder $r8, $r9, $r11, $r12, $r16, $r17, $r18, $r22, $r23, $r24, $r25, $r30, $r31;
        javax.xml.xpath.XPathFactory $r14;

        r0 := @this: javax.xml.xpath.XPathFactoryFinder;

        r1 := @parameter0: java.lang.String;

     label01:
        $z0 = <javax.xml.xpath.XPathFactoryFinder: boolean debug>;

        if $z0 == 0 goto label02;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("instantiating ");

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.xml.xpath.XPathFactoryFinder: void debugPrintln(java.lang.String)>($r26);

     label02:
        $r7 = r0.<javax.xml.xpath.XPathFactoryFinder: java.lang.ClassLoader classLoader>;

        if $r7 == null goto label05;

        $r20 = r0.<javax.xml.xpath.XPathFactoryFinder: java.lang.ClassLoader classLoader>;

        r5 = virtualinvoke $r20.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r1);

     label03:
        $z1 = <javax.xml.xpath.XPathFactoryFinder: boolean debug>;

        if $z1 == 0 goto label04;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("loaded it from ");

        $r19 = staticinvoke <javax.xml.xpath.XPathFactoryFinder: java.lang.String which(java.lang.Class)>(r5);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.xml.xpath.XPathFactoryFinder: void debugPrintln(java.lang.String)>($r21);

     label04:
        r6 = virtualinvoke r5.<java.lang.Class: java.lang.Object newInstance()>();

        $z2 = r6 instanceof javax.xml.xpath.XPathFactory;

        if $z2 == 0 goto label07;

        $r14 = (javax.xml.xpath.XPathFactory) r6;

        return $r14;

     label05:
        r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r1);

     label06:
        goto label03;

     label07:
        $z3 = <javax.xml.xpath.XPathFactoryFinder: boolean debug>;

        if $z3 == 0 goto label08;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not assignable to ");

        $r10 = <javax.xml.xpath.XPathFactoryFinder: java.lang.Class SERVICE_CLASS>;

        $r13 = virtualinvoke $r10.<java.lang.Class: java.lang.String getName()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.xml.xpath.XPathFactoryFinder: void debugPrintln(java.lang.String)>($r15);

     label08:
        return null;

     label09:
        $r32 := @caughtexception;

        r4 = $r32;

        throw r4;

     label10:
        $r29 := @caughtexception;

        r3 = $r29;

        throw r3;

     label11:
        $r27 := @caughtexception;

        r2 = $r27;

        $z4 = <javax.xml.xpath.XPathFactoryFinder: boolean debug>;

        if $z4 == 0 goto label08;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to instantiate ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r28 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.xml.xpath.XPathFactoryFinder: void debugPrintln(java.lang.String)>($r28);

        virtualinvoke r2.<java.lang.Throwable: void printStackTrace()>();

        goto label08;

        catch java.lang.VirtualMachineError from label01 to label02 with label09;
        catch java.lang.ThreadDeath from label01 to label02 with label10;
        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.VirtualMachineError from label02 to label03 with label09;
        catch java.lang.ThreadDeath from label02 to label03 with label10;
        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.VirtualMachineError from label03 to label04 with label09;
        catch java.lang.ThreadDeath from label03 to label04 with label10;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.VirtualMachineError from label04 to label05 with label09;
        catch java.lang.ThreadDeath from label04 to label05 with label10;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.VirtualMachineError from label05 to label06 with label09;
        catch java.lang.ThreadDeath from label05 to label06 with label10;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.VirtualMachineError from label07 to label08 with label09;
        catch java.lang.ThreadDeath from label07 to label08 with label10;
        catch java.lang.Throwable from label07 to label08 with label11;
    }

    public javax.xml.xpath.XPathFactory newFactory(java.lang.String)
    {
        javax.xml.xpath.XPathFactoryFinder r0;
        java.lang.String r1, $r6, $r10, $r15;
        javax.xml.xpath.XPathFactory r2;
        boolean $z0;
        java.lang.StringBuilder $r3, $r4, $r5, $r7, $r8, $r11, $r12, $r13;
        java.lang.Class $r9;
        java.lang.NullPointerException $r14;

        r0 := @this: javax.xml.xpath.XPathFactoryFinder;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r14 = new java.lang.NullPointerException;

        specialinvoke $r14.<java.lang.NullPointerException: void <init>(java.lang.String)>("uri == null");

        throw $r14;

     label1:
        r2 = specialinvoke r0.<javax.xml.xpath.XPathFactoryFinder: javax.xml.xpath.XPathFactory _newFactory(java.lang.String)>(r1);

        $z0 = <javax.xml.xpath.XPathFactoryFinder: boolean debug>;

        if $z0 == 0 goto label2;

        if r2 == null goto label3;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("factory \'");

        $r9 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' was found for ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.xml.xpath.XPathFactoryFinder: void debugPrintln(java.lang.String)>($r15);

     label2:
        return r2;

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to find a factory for ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.xml.xpath.XPathFactoryFinder: void debugPrintln(java.lang.String)>($r6);

        return r2;
    }
}
