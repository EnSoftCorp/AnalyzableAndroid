public final class java.nio.NioUtils extends java.lang.Object
{

    private void <init>()
    {
        java.nio.NioUtils r0;

        r0 := @this: java.nio.NioUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void freeDirectBuffer(java.nio.ByteBuffer)
    {
        java.nio.ByteBuffer r0;
        java.nio.DirectByteBuffer $r1;

        r0 := @parameter0: java.nio.ByteBuffer;

        if r0 != null goto label1;

        return;

     label1:
        $r1 = (java.nio.DirectByteBuffer) r0;

        virtualinvoke $r1.<java.nio.DirectByteBuffer: void free()>();

        return;
    }

    public static java.io.FileDescriptor getFD(java.nio.channels.FileChannel)
    {
        java.nio.channels.FileChannel r0;
        java.nio.FileChannelImpl $r1;
        java.io.FileDescriptor $r2;

        r0 := @parameter0: java.nio.channels.FileChannel;

        $r1 = (java.nio.FileChannelImpl) r0;

        $r2 = virtualinvoke $r1.<java.nio.FileChannelImpl: java.io.FileDescriptor getFD()>();

        return $r2;
    }

    public static java.nio.channels.FileChannel newFileChannel(java.lang.Object, java.io.FileDescriptor, int)
    {
        java.lang.Object r0;
        java.io.FileDescriptor r1;
        int i0;
        java.nio.FileChannelImpl $r2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.io.FileDescriptor;

        i0 := @parameter2: int;

        $r2 = new java.nio.FileChannelImpl;

        specialinvoke $r2.<java.nio.FileChannelImpl: void <init>(java.lang.Object,java.io.FileDescriptor,int)>(r0, r1, i0);

        return $r2;
    }

    public static byte[] unsafeArray(java.nio.ByteBuffer)
    {
        java.nio.ByteBuffer r0;
        java.nio.ByteArrayBuffer $r1;
        byte[] $r2;

        r0 := @parameter0: java.nio.ByteBuffer;

        $r1 = (java.nio.ByteArrayBuffer) r0;

        $r2 = $r1.<java.nio.ByteArrayBuffer: byte[] backingArray>;

        return $r2;
    }

    public static int unsafeArrayOffset(java.nio.ByteBuffer)
    {
        java.nio.ByteBuffer r0;
        java.nio.ByteArrayBuffer $r1;
        int $i0;

        r0 := @parameter0: java.nio.ByteBuffer;

        $r1 = (java.nio.ByteArrayBuffer) r0;

        $i0 = $r1.<java.nio.ByteArrayBuffer: int arrayOffset>;

        return $i0;
    }
}
