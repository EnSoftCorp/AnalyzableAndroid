public final class dalvik.system.BlockGuard extends java.lang.Object
{
    public static final int DISALLOW_DISK_READ;
    public static final int DISALLOW_DISK_WRITE;
    public static final int DISALLOW_NETWORK;
    public static final dalvik.system.BlockGuard$Policy LAX_POLICY;
    public static final int PASS_RESTRICTIONS_VIA_RPC;
    public static final int PENALTY_DEATH;
    public static final int PENALTY_DIALOG;
    public static final int PENALTY_LOG;
    private static java.lang.ThreadLocal threadPolicy;

    static void <clinit>()
    {
        dalvik.system.BlockGuard$1 $r0;
        dalvik.system.BlockGuard$2 $r1;

        <dalvik.system.BlockGuard: int PENALTY_LOG> = 16;

        <dalvik.system.BlockGuard: int PENALTY_DIALOG> = 32;

        <dalvik.system.BlockGuard: int PENALTY_DEATH> = 64;

        <dalvik.system.BlockGuard: int PASS_RESTRICTIONS_VIA_RPC> = 8;

        <dalvik.system.BlockGuard: int DISALLOW_NETWORK> = 4;

        <dalvik.system.BlockGuard: int DISALLOW_DISK_WRITE> = 1;

        <dalvik.system.BlockGuard: int DISALLOW_DISK_READ> = 2;

        $r0 = new dalvik.system.BlockGuard$1;

        specialinvoke $r0.<dalvik.system.BlockGuard$1: void <init>()>();

        <dalvik.system.BlockGuard: dalvik.system.BlockGuard$Policy LAX_POLICY> = $r0;

        $r1 = new dalvik.system.BlockGuard$2;

        specialinvoke $r1.<dalvik.system.BlockGuard$2: void <init>()>();

        <dalvik.system.BlockGuard: java.lang.ThreadLocal threadPolicy> = $r1;

        return;
    }

    private void <init>()
    {
        dalvik.system.BlockGuard r0;

        r0 := @this: dalvik.system.BlockGuard;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static dalvik.system.BlockGuard$Policy getThreadPolicy()
    {
        java.lang.ThreadLocal $r0;
        java.lang.Object $r1;
        dalvik.system.BlockGuard$Policy $r2;

        $r0 = <dalvik.system.BlockGuard: java.lang.ThreadLocal threadPolicy>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r2 = (dalvik.system.BlockGuard$Policy) $r1;

        return $r2;
    }

    public static void setThreadPolicy(dalvik.system.BlockGuard$Policy)
    {
        dalvik.system.BlockGuard$Policy r0;
        java.lang.ThreadLocal $r1;
        java.lang.NullPointerException $r2;

        r0 := @parameter0: dalvik.system.BlockGuard$Policy;

        if r0 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("policy == null");

        throw $r2;

     label1:
        $r1 = <dalvik.system.BlockGuard: java.lang.ThreadLocal threadPolicy>;

        virtualinvoke $r1.<java.lang.ThreadLocal: void set(java.lang.Object)>(r0);

        return;
    }
}
