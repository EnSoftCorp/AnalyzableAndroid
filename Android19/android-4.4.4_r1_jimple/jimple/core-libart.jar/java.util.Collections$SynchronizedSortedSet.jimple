class java.util.Collections$SynchronizedSortedSet extends java.util.Collections$SynchronizedSet implements java.util.SortedSet
{
    private static final long serialVersionUID;
    private final java.util.SortedSet ss;

    void <init>(java.util.SortedSet)
    {
        java.util.Collections$SynchronizedSortedSet r0;
        java.util.SortedSet r1;

        r0 := @this: java.util.Collections$SynchronizedSortedSet;

        r1 := @parameter0: java.util.SortedSet;

        specialinvoke r0.<java.util.Collections$SynchronizedSet: void <init>(java.util.Set)>(r1);

        r0.<java.util.Collections$SynchronizedSortedSet: java.util.SortedSet ss> = r1;

        return;
    }

    void <init>(java.util.SortedSet, java.lang.Object)
    {
        java.util.Collections$SynchronizedSortedSet r0;
        java.util.SortedSet r1;
        java.lang.Object r2;

        r0 := @this: java.util.Collections$SynchronizedSortedSet;

        r1 := @parameter0: java.util.SortedSet;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<java.util.Collections$SynchronizedSet: void <init>(java.util.Set,java.lang.Object)>(r1, r2);

        r0.<java.util.Collections$SynchronizedSortedSet: java.util.SortedSet ss> = r1;

        return;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.util.Collections$SynchronizedSortedSet r0;
        java.io.ObjectOutputStream r1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r4;

        r0 := @this: java.util.Collections$SynchronizedSortedSet;

        r1 := @parameter0: java.io.ObjectOutputStream;

        r2 = r0.<java.util.Collections$SynchronizedSortedSet: java.lang.Object mutex>;

        entermonitor r2;

     label1:
        virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        exitmonitor r2;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.util.Comparator comparator()
    {
        java.util.Collections$SynchronizedSortedSet r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r5;
        java.util.Comparator r3;
        java.util.SortedSet $r4;

        r0 := @this: java.util.Collections$SynchronizedSortedSet;

        r1 = r0.<java.util.Collections$SynchronizedSortedSet: java.lang.Object mutex>;

        entermonitor r1;

     label1:
        $r4 = r0.<java.util.Collections$SynchronizedSortedSet: java.util.SortedSet ss>;

        r3 = interfaceinvoke $r4.<java.util.SortedSet: java.util.Comparator comparator()>();

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.lang.Object first()
    {
        java.util.Collections$SynchronizedSortedSet r0;
        java.lang.Object r1, r3;
        java.lang.Throwable r2, $r5;
        java.util.SortedSet $r4;

        r0 := @this: java.util.Collections$SynchronizedSortedSet;

        r1 = r0.<java.util.Collections$SynchronizedSortedSet: java.lang.Object mutex>;

        entermonitor r1;

     label1:
        $r4 = r0.<java.util.Collections$SynchronizedSortedSet: java.util.SortedSet ss>;

        r3 = interfaceinvoke $r4.<java.util.SortedSet: java.lang.Object first()>();

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.util.SortedSet headSet(java.lang.Object)
    {
        java.util.Collections$SynchronizedSortedSet r0, r3, $r5;
        java.lang.Object r1, r2, $r8;
        java.lang.Throwable r4, $r9;
        java.util.SortedSet $r6, $r7;

        r0 := @this: java.util.Collections$SynchronizedSortedSet;

        r1 := @parameter0: java.lang.Object;

        r2 = r0.<java.util.Collections$SynchronizedSortedSet: java.lang.Object mutex>;

        entermonitor r2;

     label1:
        $r5 = new java.util.Collections$SynchronizedSortedSet;

        $r6 = r0.<java.util.Collections$SynchronizedSortedSet: java.util.SortedSet ss>;

        $r7 = interfaceinvoke $r6.<java.util.SortedSet: java.util.SortedSet headSet(java.lang.Object)>(r1);

        $r8 = r0.<java.util.Collections$SynchronizedSortedSet: java.lang.Object mutex>;

        specialinvoke $r5.<java.util.Collections$SynchronizedSortedSet: void <init>(java.util.SortedSet,java.lang.Object)>($r7, $r8);

        r3 = $r5;

        exitmonitor r2;

     label2:
        return r3;

     label3:
        $r9 := @caughtexception;

        r4 = $r9;

     label4:
        exitmonitor r2;

     label5:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.lang.Object last()
    {
        java.util.Collections$SynchronizedSortedSet r0;
        java.lang.Object r1, r3;
        java.lang.Throwable r2, $r5;
        java.util.SortedSet $r4;

        r0 := @this: java.util.Collections$SynchronizedSortedSet;

        r1 = r0.<java.util.Collections$SynchronizedSortedSet: java.lang.Object mutex>;

        entermonitor r1;

     label1:
        $r4 = r0.<java.util.Collections$SynchronizedSortedSet: java.util.SortedSet ss>;

        r3 = interfaceinvoke $r4.<java.util.SortedSet: java.lang.Object last()>();

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.util.SortedSet subSet(java.lang.Object, java.lang.Object)
    {
        java.util.Collections$SynchronizedSortedSet r0, r4, $r6;
        java.lang.Object r1, r2, r3, $r9;
        java.lang.Throwable r5, $r10;
        java.util.SortedSet $r7, $r8;

        r0 := @this: java.util.Collections$SynchronizedSortedSet;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 = r0.<java.util.Collections$SynchronizedSortedSet: java.lang.Object mutex>;

        entermonitor r3;

     label1:
        $r6 = new java.util.Collections$SynchronizedSortedSet;

        $r7 = r0.<java.util.Collections$SynchronizedSortedSet: java.util.SortedSet ss>;

        $r8 = interfaceinvoke $r7.<java.util.SortedSet: java.util.SortedSet subSet(java.lang.Object,java.lang.Object)>(r1, r2);

        $r9 = r0.<java.util.Collections$SynchronizedSortedSet: java.lang.Object mutex>;

        specialinvoke $r6.<java.util.Collections$SynchronizedSortedSet: void <init>(java.util.SortedSet,java.lang.Object)>($r8, $r9);

        r4 = $r6;

        exitmonitor r3;

     label2:
        return r4;

     label3:
        $r10 := @caughtexception;

        r5 = $r10;

     label4:
        exitmonitor r3;

     label5:
        throw r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.util.SortedSet tailSet(java.lang.Object)
    {
        java.util.Collections$SynchronizedSortedSet r0, r3, $r5;
        java.lang.Object r1, r2, $r8;
        java.lang.Throwable r4, $r9;
        java.util.SortedSet $r6, $r7;

        r0 := @this: java.util.Collections$SynchronizedSortedSet;

        r1 := @parameter0: java.lang.Object;

        r2 = r0.<java.util.Collections$SynchronizedSortedSet: java.lang.Object mutex>;

        entermonitor r2;

     label1:
        $r5 = new java.util.Collections$SynchronizedSortedSet;

        $r6 = r0.<java.util.Collections$SynchronizedSortedSet: java.util.SortedSet ss>;

        $r7 = interfaceinvoke $r6.<java.util.SortedSet: java.util.SortedSet tailSet(java.lang.Object)>(r1);

        $r8 = r0.<java.util.Collections$SynchronizedSortedSet: java.lang.Object mutex>;

        specialinvoke $r5.<java.util.Collections$SynchronizedSortedSet: void <init>(java.util.SortedSet,java.lang.Object)>($r7, $r8);

        r3 = $r5;

        exitmonitor r2;

     label2:
        return r3;

     label3:
        $r9 := @caughtexception;

        r4 = $r9;

     label4:
        exitmonitor r2;

     label5:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static void <clinit>()
    {
        <java.util.Collections$SynchronizedSortedSet: long serialVersionUID> = 8695801310862127406L;

        return;
    }
}
