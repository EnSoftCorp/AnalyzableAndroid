public final class java.lang.Daemons extends java.lang.Object
{
    private static final long MAX_FINALIZE_NANOS;
    private static final int NANOS_PER_MILLI;
    private static final int NANOS_PER_SECOND;

    public void <init>()
    {
        java.lang.Daemons r0;

        r0 := @this: java.lang.Daemons;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void requestGC()
    {
        java.lang.Daemons$GCDaemon $r0;

        $r0 = staticinvoke <java.lang.Daemons$GCDaemon: java.lang.Daemons$GCDaemon access$400()>();

        virtualinvoke $r0.<java.lang.Daemons$GCDaemon: void requestGC()>();

        return;
    }

    public static void requestHeapTrim()
    {
        java.lang.Daemons$HeapTrimmerDaemon r0, $r2;
        java.lang.Throwable r1, $r3;

        r0 = staticinvoke <java.lang.Daemons$HeapTrimmerDaemon: java.lang.Daemons$HeapTrimmerDaemon access$300()>();

        entermonitor r0;

     label1:
        $r2 = staticinvoke <java.lang.Daemons$HeapTrimmerDaemon: java.lang.Daemons$HeapTrimmerDaemon access$300()>();

        virtualinvoke $r2.<java.lang.Object: void notify()>();

        exitmonitor r0;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

     label4:
        exitmonitor r0;

     label5:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static void start()
    {
        java.lang.Daemons$ReferenceQueueDaemon $r0;
        java.lang.Daemons$FinalizerDaemon $r1;
        java.lang.Daemons$FinalizerWatchdogDaemon $r2;
        java.lang.Daemons$HeapTrimmerDaemon $r3;
        java.lang.Daemons$GCDaemon $r4;

        $r0 = staticinvoke <java.lang.Daemons$ReferenceQueueDaemon: java.lang.Daemons$ReferenceQueueDaemon access$000()>();

        virtualinvoke $r0.<java.lang.Daemons$ReferenceQueueDaemon: void start()>();

        $r1 = staticinvoke <java.lang.Daemons$FinalizerDaemon: java.lang.Daemons$FinalizerDaemon access$100()>();

        virtualinvoke $r1.<java.lang.Daemons$FinalizerDaemon: void start()>();

        $r2 = staticinvoke <java.lang.Daemons$FinalizerWatchdogDaemon: java.lang.Daemons$FinalizerWatchdogDaemon access$200()>();

        virtualinvoke $r2.<java.lang.Daemons$FinalizerWatchdogDaemon: void start()>();

        $r3 = staticinvoke <java.lang.Daemons$HeapTrimmerDaemon: java.lang.Daemons$HeapTrimmerDaemon access$300()>();

        virtualinvoke $r3.<java.lang.Daemons$HeapTrimmerDaemon: void start()>();

        $r4 = staticinvoke <java.lang.Daemons$GCDaemon: java.lang.Daemons$GCDaemon access$400()>();

        virtualinvoke $r4.<java.lang.Daemons$GCDaemon: void start()>();

        return;
    }

    public static void stop()
    {
        java.lang.Daemons$ReferenceQueueDaemon $r0;
        java.lang.Daemons$FinalizerDaemon $r1;
        java.lang.Daemons$FinalizerWatchdogDaemon $r2;
        java.lang.Daemons$HeapTrimmerDaemon $r3;
        java.lang.Daemons$GCDaemon $r4;

        $r0 = staticinvoke <java.lang.Daemons$ReferenceQueueDaemon: java.lang.Daemons$ReferenceQueueDaemon access$000()>();

        virtualinvoke $r0.<java.lang.Daemons$ReferenceQueueDaemon: void stop()>();

        $r1 = staticinvoke <java.lang.Daemons$FinalizerDaemon: java.lang.Daemons$FinalizerDaemon access$100()>();

        virtualinvoke $r1.<java.lang.Daemons$FinalizerDaemon: void stop()>();

        $r2 = staticinvoke <java.lang.Daemons$FinalizerWatchdogDaemon: java.lang.Daemons$FinalizerWatchdogDaemon access$200()>();

        virtualinvoke $r2.<java.lang.Daemons$FinalizerWatchdogDaemon: void stop()>();

        $r3 = staticinvoke <java.lang.Daemons$HeapTrimmerDaemon: java.lang.Daemons$HeapTrimmerDaemon access$300()>();

        virtualinvoke $r3.<java.lang.Daemons$HeapTrimmerDaemon: void stop()>();

        $r4 = staticinvoke <java.lang.Daemons$GCDaemon: java.lang.Daemons$GCDaemon access$400()>();

        virtualinvoke $r4.<java.lang.Daemons$GCDaemon: void stop()>();

        return;
    }

    public static void <clinit>()
    {
        <java.lang.Daemons: int NANOS_PER_SECOND> = 1000000000;

        <java.lang.Daemons: int NANOS_PER_MILLI> = 1000000;

        <java.lang.Daemons: long MAX_FINALIZE_NANOS> = 10000000000L;

        return;
    }
}
