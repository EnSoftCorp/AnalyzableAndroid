public final class org.apache.harmony.security.x501.Name extends java.lang.Object
{
    public static final org.apache.harmony.security.asn1.ASN1SequenceOf ASN1;
    public static final org.apache.harmony.security.asn1.ASN1SetOf ASN1_RDN;
    private java.lang.String canonicalString;
    private volatile byte[] encoded;
    private java.util.List rdn;
    private java.lang.String rfc1779String;
    private java.lang.String rfc2253String;

    static void <clinit>()
    {
        org.apache.harmony.security.asn1.ASN1SetOf $r0, $r3;
        org.apache.harmony.security.asn1.ASN1Sequence $r1;
        org.apache.harmony.security.x501.Name$1 $r2;

        $r0 = new org.apache.harmony.security.asn1.ASN1SetOf;

        $r1 = <org.apache.harmony.security.x501.AttributeTypeAndValue: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        specialinvoke $r0.<org.apache.harmony.security.asn1.ASN1SetOf: void <init>(org.apache.harmony.security.asn1.ASN1Type)>($r1);

        <org.apache.harmony.security.x501.Name: org.apache.harmony.security.asn1.ASN1SetOf ASN1_RDN> = $r0;

        $r2 = new org.apache.harmony.security.x501.Name$1;

        $r3 = <org.apache.harmony.security.x501.Name: org.apache.harmony.security.asn1.ASN1SetOf ASN1_RDN>;

        specialinvoke $r2.<org.apache.harmony.security.x501.Name$1: void <init>(org.apache.harmony.security.asn1.ASN1Type)>($r3);

        <org.apache.harmony.security.x501.Name: org.apache.harmony.security.asn1.ASN1SequenceOf ASN1> = $r2;

        return;
    }

    public void <init>(java.lang.String) throws java.io.IOException
    {
        org.apache.harmony.security.x501.Name r0;
        java.lang.String r1;
        org.apache.harmony.security.x509.DNParser $r2;
        java.util.List $r3;

        r0 := @this: org.apache.harmony.security.x501.Name;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new org.apache.harmony.security.x509.DNParser;

        specialinvoke $r2.<org.apache.harmony.security.x509.DNParser: void <init>(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<org.apache.harmony.security.x509.DNParser: java.util.List parse()>();

        r0.<org.apache.harmony.security.x501.Name: java.util.List rdn> = $r3;

        return;
    }

    private void <init>(java.util.List)
    {
        org.apache.harmony.security.x501.Name r0;
        java.util.List r1;

        r0 := @this: org.apache.harmony.security.x501.Name;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.harmony.security.x501.Name: java.util.List rdn> = r1;

        return;
    }

    void <init>(java.util.List, org.apache.harmony.security.x501.Name$1)
    {
        org.apache.harmony.security.x501.Name r0;
        java.util.List r1;
        org.apache.harmony.security.x501.Name$1 r2;

        r0 := @this: org.apache.harmony.security.x501.Name;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: org.apache.harmony.security.x501.Name$1;

        specialinvoke r0.<org.apache.harmony.security.x501.Name: void <init>(java.util.List)>(r1);

        return;
    }

    public void <init>(byte[]) throws java.io.IOException
    {
        org.apache.harmony.security.x501.Name r0;
        byte[] r1;
        org.apache.harmony.security.asn1.DerInputStream r2, $r3;
        int $i0, $i1;
        org.apache.harmony.security.asn1.ASN1SequenceOf $r4;
        java.lang.Object $r6;
        java.util.List $r7;
        java.io.IOException $r8;

        r0 := @this: org.apache.harmony.security.x501.Name;

        r1 := @parameter0: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new org.apache.harmony.security.asn1.DerInputStream;

        specialinvoke $r3.<org.apache.harmony.security.asn1.DerInputStream: void <init>(byte[])>(r1);

        r2 = $r3;

        $i0 = virtualinvoke r2.<org.apache.harmony.security.asn1.DerInputStream: int getEndOffset()>();

        $i1 = lengthof r1;

        if $i0 == $i1 goto label1;

        $r8 = new java.io.IOException;

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>("Wrong content length");

        throw $r8;

     label1:
        $r4 = <org.apache.harmony.security.x501.Name: org.apache.harmony.security.asn1.ASN1SequenceOf ASN1>;

        virtualinvoke $r4.<org.apache.harmony.security.asn1.ASN1SequenceOf: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)>(r2);

        $r6 = r2.<org.apache.harmony.security.asn1.DerInputStream: java.lang.Object content>;

        $r7 = (java.util.List) $r6;

        r0.<org.apache.harmony.security.x501.Name: java.util.List rdn> = $r7;

        return;
    }

    static java.util.List access$100(org.apache.harmony.security.x501.Name)
    {
        org.apache.harmony.security.x501.Name r0;
        java.util.List $r1;

        r0 := @parameter0: org.apache.harmony.security.x501.Name;

        $r1 = r0.<org.apache.harmony.security.x501.Name: java.util.List rdn>;

        return $r1;
    }

    private java.lang.String getName0(java.lang.String)
    {
        org.apache.harmony.security.x501.Name r0;
        java.lang.String r1, r3, $r9;
        java.lang.StringBuilder r2, $r7;
        int i0, $i1;
        java.util.List r4, $r8, $r11;
        java.util.ArrayList r5, $r20;
        java.util.Iterator r6;
        boolean $z0, $z1, $z2;
        java.util.Locale $r10;
        java.lang.Object $r12, $r14;
        org.apache.harmony.security.x501.AttributeTypeAndValue $r16;
        org.apache.harmony.security.x501.AttributeTypeAndValueComparator $r19;

        r0 := @this: org.apache.harmony.security.x501.Name;

        r1 := @parameter0: java.lang.String;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        r2 = $r7;

        $r8 = r0.<org.apache.harmony.security.x501.Name: java.util.List rdn>;

        $i1 = interfaceinvoke $r8.<java.util.List: int size()>();

        i0 = -1 + $i1;

     label1:
        if i0 < 0 goto label7;

        $r11 = r0.<org.apache.harmony.security.x501.Name: java.util.List rdn>;

        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(i0);

        r4 = (java.util.List) $r12;

        if "CANONICAL" != r1 goto label2;

        $r20 = new java.util.ArrayList;

        specialinvoke $r20.<java.util.ArrayList: void <init>(java.util.Collection)>(r4);

        r5 = $r20;

        $r19 = new org.apache.harmony.security.x501.AttributeTypeAndValueComparator;

        specialinvoke $r19.<org.apache.harmony.security.x501.AttributeTypeAndValueComparator: void <init>()>();

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r5, $r19);

        r4 = r5;

     label2:
        r6 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r14 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        $r16 = (org.apache.harmony.security.x501.AttributeTypeAndValue) $r14;

        virtualinvoke $r16.<org.apache.harmony.security.x501.AttributeTypeAndValue: void appendName(java.lang.String,java.lang.StringBuilder)>(r1, r2);

        $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        if "RFC1779" != r1 goto label4;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" + ");

        goto label3;

     label4:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(43);

        goto label3;

     label5:
        if i0 == 0 goto label6;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        if r1 != "RFC1779" goto label6;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label6:
        i0 = i0 + -1;

        goto label1;

     label7:
        r3 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = "CANONICAL";

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label8;

        $r10 = <java.util.Locale: java.util.Locale US>;

        r3 = virtualinvoke r3.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r10);

     label8:
        return r3;
    }

    public byte[] getEncoded()
    {
        org.apache.harmony.security.x501.Name r0;
        byte[] $r1, $r2, $r4;
        org.apache.harmony.security.asn1.ASN1SequenceOf $r3;

        r0 := @this: org.apache.harmony.security.x501.Name;

        $r1 = r0.<org.apache.harmony.security.x501.Name: byte[] encoded>;

        if $r1 != null goto label1;

        $r3 = <org.apache.harmony.security.x501.Name: org.apache.harmony.security.asn1.ASN1SequenceOf ASN1>;

        $r4 = virtualinvoke $r3.<org.apache.harmony.security.asn1.ASN1SequenceOf: byte[] encode(java.lang.Object)>(r0);

        r0.<org.apache.harmony.security.x501.Name: byte[] encoded> = $r4;

     label1:
        $r2 = r0.<org.apache.harmony.security.x501.Name: byte[] encoded>;

        return $r2;
    }

    public java.lang.String getName(java.lang.String)
    {
        org.apache.harmony.security.x501.Name r0;
        java.lang.String r1, $r2, $r3, $r4, $r5, $r6, $r7, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.IllegalArgumentException $r8;
        java.lang.StringBuilder $r9, $r10, $r11;

        r0 := @this: org.apache.harmony.security.x501.Name;

        r1 := @parameter0: java.lang.String;

        $r2 = "RFC1779";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label02;

        $r26 = r0.<org.apache.harmony.security.x501.Name: java.lang.String rfc1779String>;

        if $r26 != null goto label01;

        $r30 = specialinvoke r0.<org.apache.harmony.security.x501.Name: java.lang.String getName0(java.lang.String)>(r1);

        r0.<org.apache.harmony.security.x501.Name: java.lang.String rfc1779String> = $r30;

     label01:
        $r27 = r0.<org.apache.harmony.security.x501.Name: java.lang.String rfc1779String>;

        return $r27;

     label02:
        $r3 = "RFC2253";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label04;

        $r24 = r0.<org.apache.harmony.security.x501.Name: java.lang.String rfc2253String>;

        if $r24 != null goto label03;

        $r29 = specialinvoke r0.<org.apache.harmony.security.x501.Name: java.lang.String getName0(java.lang.String)>(r1);

        r0.<org.apache.harmony.security.x501.Name: java.lang.String rfc2253String> = $r29;

     label03:
        $r28 = r0.<org.apache.harmony.security.x501.Name: java.lang.String rfc2253String>;

        return $r28;

     label04:
        $r4 = "CANONICAL";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label06;

        $r23 = r0.<org.apache.harmony.security.x501.Name: java.lang.String canonicalString>;

        if $r23 != null goto label05;

        $r25 = specialinvoke r0.<org.apache.harmony.security.x501.Name: java.lang.String getName0(java.lang.String)>(r1);

        r0.<org.apache.harmony.security.x501.Name: java.lang.String canonicalString> = $r25;

     label05:
        $r22 = r0.<org.apache.harmony.security.x501.Name: java.lang.String canonicalString>;

        return $r22;

     label06:
        $r5 = "RFC1779";

        $z3 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z3 == 0 goto label08;

        $r18 = r0.<org.apache.harmony.security.x501.Name: java.lang.String rfc1779String>;

        if $r18 != null goto label07;

        $r20 = specialinvoke r0.<org.apache.harmony.security.x501.Name: java.lang.String getName0(java.lang.String)>("RFC1779");

        r0.<org.apache.harmony.security.x501.Name: java.lang.String rfc1779String> = $r20;

     label07:
        $r21 = r0.<org.apache.harmony.security.x501.Name: java.lang.String rfc1779String>;

        return $r21;

     label08:
        $r6 = "RFC2253";

        $z4 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z4 == 0 goto label10;

        $r17 = r0.<org.apache.harmony.security.x501.Name: java.lang.String rfc2253String>;

        if $r17 != null goto label09;

        $r19 = specialinvoke r0.<org.apache.harmony.security.x501.Name: java.lang.String getName0(java.lang.String)>("RFC2253");

        r0.<org.apache.harmony.security.x501.Name: java.lang.String rfc2253String> = $r19;

     label09:
        $r16 = r0.<org.apache.harmony.security.x501.Name: java.lang.String rfc2253String>;

        return $r16;

     label10:
        $r7 = "CANONICAL";

        $z5 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z5 == 0 goto label12;

        $r12 = r0.<org.apache.harmony.security.x501.Name: java.lang.String canonicalString>;

        if $r12 != null goto label11;

        $r14 = specialinvoke r0.<org.apache.harmony.security.x501.Name: java.lang.String getName0(java.lang.String)>("CANONICAL");

        r0.<org.apache.harmony.security.x501.Name: java.lang.String canonicalString> = $r14;

     label11:
        $r15 = r0.<org.apache.harmony.security.x501.Name: java.lang.String canonicalString>;

        return $r15;

     label12:
        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal format: ");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r8;
    }

    public javax.security.auth.x500.X500Principal getX500Principal()
    {
        org.apache.harmony.security.x501.Name r0;
        javax.security.auth.x500.X500Principal $r1;
        byte[] $r2;

        r0 := @this: org.apache.harmony.security.x501.Name;

        $r1 = new javax.security.auth.x500.X500Principal;

        $r2 = virtualinvoke r0.<org.apache.harmony.security.x501.Name: byte[] getEncoded()>();

        specialinvoke $r1.<javax.security.auth.x500.X500Principal: void <init>(byte[])>($r2);

        return $r1;
    }
}
