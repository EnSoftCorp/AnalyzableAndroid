class dalvik.system.DexPathList$Element extends java.lang.Object
{
    private final dalvik.system.DexFile dexFile;
    private final java.io.File file;
    private boolean initialized;
    private final boolean isDirectory;
    private final java.io.File zip;
    private java.util.zip.ZipFile zipFile;

    public void <init>(java.io.File, boolean, java.io.File, dalvik.system.DexFile)
    {
        dalvik.system.DexPathList$Element r0;
        java.io.File r1, r2;
        boolean z0;
        dalvik.system.DexFile r3;

        r0 := @this: dalvik.system.DexPathList$Element;

        r1 := @parameter0: java.io.File;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.io.File;

        r3 := @parameter3: dalvik.system.DexFile;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<dalvik.system.DexPathList$Element: java.io.File file> = r1;

        r0.<dalvik.system.DexPathList$Element: boolean isDirectory> = z0;

        r0.<dalvik.system.DexPathList$Element: java.io.File zip> = r2;

        r0.<dalvik.system.DexPathList$Element: dalvik.system.DexFile dexFile> = r3;

        return;
    }

    static dalvik.system.DexFile access$000(dalvik.system.DexPathList$Element)
    {
        dalvik.system.DexPathList$Element r0;
        dalvik.system.DexFile $r1;

        r0 := @parameter0: dalvik.system.DexPathList$Element;

        $r1 = r0.<dalvik.system.DexPathList$Element: dalvik.system.DexFile dexFile>;

        return $r1;
    }

    public java.net.URL findResource(java.lang.String)
    {
        dalvik.system.DexPathList$Element r0;
        java.lang.String r1, $r17;
        java.io.File r2, $r13, $r19, $r20;
        java.net.URL r3, r6, $r10, $r14;
        java.net.MalformedURLException r4, r5, $r22, $r23;
        boolean $z0, $z1;
        java.util.zip.ZipFile $r7, $r8;
        java.util.zip.ZipEntry $r9;
        java.lang.StringBuilder $r11, $r12, $r15, $r16, $r18;
        java.net.URI $r21;
        java.lang.RuntimeException $r24, $r25;

        r0 := @this: dalvik.system.DexPathList$Element;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<dalvik.system.DexPathList$Element: void maybeInit()>();

        $z0 = r0.<dalvik.system.DexPathList$Element: boolean isDirectory>;

        if $z0 == 0 goto label4;

        $r20 = new java.io.File;

        $r19 = r0.<dalvik.system.DexPathList$Element: java.io.File file>;

        specialinvoke $r20.<java.io.File: void <init>(java.io.File,java.lang.String)>($r19, r1);

        r2 = $r20;

        $z1 = virtualinvoke r2.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label4;

     label1:
        $r21 = virtualinvoke r2.<java.io.File: java.net.URI toURI()>();

        r6 = virtualinvoke $r21.<java.net.URI: java.net.URL toURL()>();

     label2:
        return r6;

     label3:
        $r22 := @caughtexception;

        r5 = $r22;

        $r24 = new java.lang.RuntimeException;

        specialinvoke $r24.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r5);

        throw $r24;

     label4:
        $r7 = r0.<dalvik.system.DexPathList$Element: java.util.zip.ZipFile zipFile>;

        if $r7 == null goto label5;

        $r8 = r0.<dalvik.system.DexPathList$Element: java.util.zip.ZipFile zipFile>;

        $r9 = virtualinvoke $r8.<java.util.zip.ZipFile: java.util.zip.ZipEntry getEntry(java.lang.String)>(r1);

        if $r9 != null goto label6;

     label5:
        return null;

     label6:
        $r10 = new java.net.URL;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("jar:");

        $r13 = r0.<dalvik.system.DexPathList$Element: java.io.File file>;

        $r14 = virtualinvoke $r13.<java.io.File: java.net.URL toURL()>();

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!/");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.net.URL: void <init>(java.lang.String)>($r17);

        r3 = $r10;

     label7:
        return r3;

     label8:
        $r23 := @caughtexception;

        r4 = $r23;

        $r25 = new java.lang.RuntimeException;

        specialinvoke $r25.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r4);

        throw $r25;

        catch java.net.MalformedURLException from label1 to label2 with label3;
        catch java.net.MalformedURLException from label6 to label7 with label8;
    }

    public void maybeInit()
    {
        dalvik.system.DexPathList$Element r0;
        java.lang.Throwable r1, $r12;
        boolean z0, $z1;
        java.io.File r2, $r5, $r9;
        java.io.IOException r3, $r6;
        java.util.zip.ZipFile $r4;
        java.lang.StringBuilder $r7, $r8, $r10;
        java.lang.String $r11;

        r0 := @this: dalvik.system.DexPathList$Element;

        entermonitor r0;

     label01:
        z0 = r0.<dalvik.system.DexPathList$Element: boolean initialized>;

     label02:
        if z0 == 0 goto label04;

     label03:
        exitmonitor r0;

        return;

     label04:
        r0.<dalvik.system.DexPathList$Element: boolean initialized> = 1;

        $z1 = r0.<dalvik.system.DexPathList$Element: boolean isDirectory>;

        if $z1 != 0 goto label03;

        r2 = r0.<dalvik.system.DexPathList$Element: java.io.File zip>;

     label05:
        if r2 == null goto label03;

     label06:
        $r4 = new java.util.zip.ZipFile;

        $r5 = r0.<dalvik.system.DexPathList$Element: java.io.File zip>;

        specialinvoke $r4.<java.util.zip.ZipFile: void <init>(java.io.File)>($r5);

        r0.<dalvik.system.DexPathList$Element: java.util.zip.ZipFile zipFile> = $r4;

     label07:
        goto label03;

     label08:
        $r6 := @caughtexception;

        r3 = $r6;

     label09:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to open zip file: ");

        $r9 = r0.<dalvik.system.DexPathList$Element: java.io.File file>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <java.lang.System: void logE(java.lang.String,java.lang.Throwable)>($r11, r3);

        r0.<dalvik.system.DexPathList$Element: java.util.zip.ZipFile zipFile> = null;

     label10:
        goto label03;

     label11:
        $r12 := @caughtexception;

        r1 = $r12;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.io.IOException from label06 to label07 with label08;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    public java.lang.String toString()
    {
        dalvik.system.DexPathList$Element r0;
        boolean $z0;
        java.io.File $r1, $r10, $r15;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r8, $r9, $r11, $r12, $r14, $r16, $r17, $r18;
        dalvik.system.DexFile $r4;
        java.lang.String $r7, $r13, $r19;

        r0 := @this: dalvik.system.DexPathList$Element;

        $z0 = r0.<dalvik.system.DexPathList$Element: boolean isDirectory>;

        if $z0 == 0 goto label1;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("directory \"");

        $r15 = r0.<dalvik.system.DexPathList$Element: java.io.File file>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r19;

     label1:
        $r1 = r0.<dalvik.system.DexPathList$Element: java.io.File zip>;

        if $r1 == null goto label2;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("zip file \"");

        $r10 = r0.<dalvik.system.DexPathList$Element: java.io.File zip>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dex file \"");

        $r4 = r0.<dalvik.system.DexPathList$Element: dalvik.system.DexFile dexFile>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }
}
