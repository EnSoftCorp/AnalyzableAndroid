public class dalvik.system.BaseDexClassLoader extends java.lang.ClassLoader
{
    private final dalvik.system.DexPathList pathList;

    public void <init>(java.lang.String, java.io.File, java.lang.String, java.lang.ClassLoader)
    {
        dalvik.system.BaseDexClassLoader r0;
        java.lang.String r1, r3;
        java.io.File r2;
        java.lang.ClassLoader r4;
        dalvik.system.DexPathList $r5;

        r0 := @this: dalvik.system.BaseDexClassLoader;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.File;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.ClassLoader;

        specialinvoke r0.<java.lang.ClassLoader: void <init>(java.lang.ClassLoader)>(r4);

        $r5 = new dalvik.system.DexPathList;

        specialinvoke $r5.<dalvik.system.DexPathList: void <init>(java.lang.ClassLoader,java.lang.String,java.lang.String,java.io.File)>(r0, r1, r3, r2);

        r0.<dalvik.system.BaseDexClassLoader: dalvik.system.DexPathList pathList> = $r5;

        return;
    }

    protected java.lang.Class findClass(java.lang.String) throws java.lang.ClassNotFoundException
    {
        dalvik.system.BaseDexClassLoader r0;
        java.lang.String r1, $r15;
        java.util.ArrayList r2, $r6;
        java.lang.Class r3;
        java.lang.ClassNotFoundException r4, $r8;
        java.util.Iterator r5;
        dalvik.system.DexPathList $r7, $r13;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r14;
        java.lang.Object $r16;
        boolean $z0;
        java.lang.Throwable $r17;

        r0 := @this: dalvik.system.BaseDexClassLoader;

        r1 := @parameter0: java.lang.String;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r2 = $r6;

        $r7 = r0.<dalvik.system.BaseDexClassLoader: dalvik.system.DexPathList pathList>;

        r3 = virtualinvoke $r7.<dalvik.system.DexPathList: java.lang.Class findClass(java.lang.String,java.util.List)>(r1, r2);

        if r3 != null goto label3;

        $r8 = new java.lang.ClassNotFoundException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Didn\'t find class \"");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" on path: ");

        $r13 = r0.<dalvik.system.BaseDexClassLoader: dalvik.system.DexPathList pathList>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.ClassNotFoundException: void <init>(java.lang.String)>($r15);

        r4 = $r8;

        r5 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r16 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        $r17 = (java.lang.Throwable) $r16;

        virtualinvoke r4.<java.lang.ClassNotFoundException: void addSuppressed(java.lang.Throwable)>($r17);

        goto label1;

     label2:
        throw r4;

     label3:
        return r3;
    }

    public java.lang.String findLibrary(java.lang.String)
    {
        dalvik.system.BaseDexClassLoader r0;
        java.lang.String r1, $r3;
        dalvik.system.DexPathList $r2;

        r0 := @this: dalvik.system.BaseDexClassLoader;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<dalvik.system.BaseDexClassLoader: dalvik.system.DexPathList pathList>;

        $r3 = virtualinvoke $r2.<dalvik.system.DexPathList: java.lang.String findLibrary(java.lang.String)>(r1);

        return $r3;
    }

    protected java.net.URL findResource(java.lang.String)
    {
        dalvik.system.BaseDexClassLoader r0;
        java.lang.String r1;
        dalvik.system.DexPathList $r2;
        java.net.URL $r3;

        r0 := @this: dalvik.system.BaseDexClassLoader;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<dalvik.system.BaseDexClassLoader: dalvik.system.DexPathList pathList>;

        $r3 = virtualinvoke $r2.<dalvik.system.DexPathList: java.net.URL findResource(java.lang.String)>(r1);

        return $r3;
    }

    protected java.util.Enumeration findResources(java.lang.String)
    {
        dalvik.system.BaseDexClassLoader r0;
        java.lang.String r1;
        dalvik.system.DexPathList $r2;
        java.util.Enumeration $r3;

        r0 := @this: dalvik.system.BaseDexClassLoader;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<dalvik.system.BaseDexClassLoader: dalvik.system.DexPathList pathList>;

        $r3 = virtualinvoke $r2.<dalvik.system.DexPathList: java.util.Enumeration findResources(java.lang.String)>(r1);

        return $r3;
    }

    public java.lang.String getLdLibraryPath()
    {
        dalvik.system.BaseDexClassLoader r0;
        java.lang.StringBuilder r1, $r4;
        java.io.File[] r2;
        int i0, i1, $i2;
        java.io.File r3;
        dalvik.system.DexPathList $r5;
        java.lang.String $r6;

        r0 := @this: dalvik.system.BaseDexClassLoader;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        r1 = $r4;

        $r5 = r0.<dalvik.system.BaseDexClassLoader: dalvik.system.DexPathList pathList>;

        r2 = virtualinvoke $r5.<dalvik.system.DexPathList: java.io.File[] getNativeLibraryDirectories()>();

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = r2[i1];

        $i2 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();

        if $i2 <= 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        i1 = i1 + 1;

        goto label1;

     label3:
        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    protected java.lang.Package getPackage(java.lang.String)
    {
        dalvik.system.BaseDexClassLoader r0;
        java.lang.String r1;
        java.lang.Package r2, r4;
        java.lang.Throwable r3, $r5;
        boolean z0;

        r0 := @this: dalvik.system.BaseDexClassLoader;

        r1 := @parameter0: java.lang.String;

        entermonitor r0;

        r2 = null;

        if r1 == null goto label7;

     label1:
        z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

     label2:
        r2 = null;

        if z0 != 0 goto label7;

     label3:
        r2 = specialinvoke r0.<java.lang.ClassLoader: java.lang.Package getPackage(java.lang.String)>(r1);

     label4:
        if r2 != null goto label7;

     label5:
        r4 = virtualinvoke r0.<dalvik.system.BaseDexClassLoader: java.lang.Package definePackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>(r1, "Unknown", "0.0", "Unknown", "Unknown", "0.0", "Unknown", null);

     label6:
        r2 = r4;

     label7:
        exitmonitor r0;

        return r2;

     label8:
        $r5 := @caughtexception;

        r3 = $r5;

        exitmonitor r0;

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public java.lang.String toString()
    {
        dalvik.system.BaseDexClassLoader r0;
        java.lang.StringBuilder $r1, $r4, $r5, $r7, $r8;
        java.lang.Class $r2;
        java.lang.String $r3, $r9;
        dalvik.system.DexPathList $r6;

        r0 := @this: dalvik.system.BaseDexClassLoader;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r6 = r0.<dalvik.system.BaseDexClassLoader: dalvik.system.DexPathList pathList>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }
}
