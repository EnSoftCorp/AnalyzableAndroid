final class java.util.concurrent.ConcurrentHashMap$ValueIterator extends java.util.concurrent.ConcurrentHashMap$HashIterator implements java.util.Iterator, java.util.Enumeration
{
    final java.util.concurrent.ConcurrentHashMap this$0;

    void <init>(java.util.concurrent.ConcurrentHashMap)
    {
        java.util.concurrent.ConcurrentHashMap$ValueIterator r0;
        java.util.concurrent.ConcurrentHashMap r1;

        r0 := @this: java.util.concurrent.ConcurrentHashMap$ValueIterator;

        r1 := @parameter0: java.util.concurrent.ConcurrentHashMap;

        r0.<java.util.concurrent.ConcurrentHashMap$ValueIterator: java.util.concurrent.ConcurrentHashMap this$0> = r1;

        specialinvoke r0.<java.util.concurrent.ConcurrentHashMap$HashIterator: void <init>(java.util.concurrent.ConcurrentHashMap)>(r1);

        return;
    }

    public final java.lang.Object next()
    {
        java.util.concurrent.ConcurrentHashMap$ValueIterator r0;
        java.util.concurrent.ConcurrentHashMap$HashEntry $r1;
        java.lang.Object $r2;

        r0 := @this: java.util.concurrent.ConcurrentHashMap$ValueIterator;

        $r1 = specialinvoke r0.<java.util.concurrent.ConcurrentHashMap$HashIterator: java.util.concurrent.ConcurrentHashMap$HashEntry nextEntry()>();

        $r2 = $r1.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>;

        return $r2;
    }

    public final java.lang.Object nextElement()
    {
        java.util.concurrent.ConcurrentHashMap$ValueIterator r0;
        java.util.concurrent.ConcurrentHashMap$HashEntry $r1;
        java.lang.Object $r2;

        r0 := @this: java.util.concurrent.ConcurrentHashMap$ValueIterator;

        $r1 = specialinvoke r0.<java.util.concurrent.ConcurrentHashMap$HashIterator: java.util.concurrent.ConcurrentHashMap$HashEntry nextEntry()>();

        $r2 = $r1.<java.util.concurrent.ConcurrentHashMap$HashEntry: java.lang.Object value>;

        return $r2;
    }
}
