final class java.util.concurrent.ForkJoinPool$EmptyTask extends java.util.concurrent.ForkJoinTask
{
    private static final long serialVersionUID;

    void <init>()
    {
        java.util.concurrent.ForkJoinPool$EmptyTask r0;

        r0 := @this: java.util.concurrent.ForkJoinPool$EmptyTask;

        specialinvoke r0.<java.util.concurrent.ForkJoinTask: void <init>()>();

        r0.<java.util.concurrent.ForkJoinPool$EmptyTask: int status> = -268435456;

        return;
    }

    public final boolean exec()
    {
        java.util.concurrent.ForkJoinPool$EmptyTask r0;

        r0 := @this: java.util.concurrent.ForkJoinPool$EmptyTask;

        return 1;
    }

    public volatile java.lang.Object getRawResult()
    {
        java.util.concurrent.ForkJoinPool$EmptyTask r0;
        java.lang.Void $r1;

        r0 := @this: java.util.concurrent.ForkJoinPool$EmptyTask;

        $r1 = virtualinvoke r0.<java.util.concurrent.ForkJoinPool$EmptyTask: java.lang.Void getRawResult()>();

        return $r1;
    }

    public final java.lang.Void getRawResult()
    {
        java.util.concurrent.ForkJoinPool$EmptyTask r0;

        r0 := @this: java.util.concurrent.ForkJoinPool$EmptyTask;

        return null;
    }

    public volatile void setRawResult(java.lang.Object)
    {
        java.util.concurrent.ForkJoinPool$EmptyTask r0;
        java.lang.Object r1;
        java.lang.Void $r2;

        r0 := @this: java.util.concurrent.ForkJoinPool$EmptyTask;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Void) r1;

        virtualinvoke r0.<java.util.concurrent.ForkJoinPool$EmptyTask: void setRawResult(java.lang.Void)>($r2);

        return;
    }

    public final void setRawResult(java.lang.Void)
    {
        java.util.concurrent.ForkJoinPool$EmptyTask r0;
        java.lang.Void r1;

        r0 := @this: java.util.concurrent.ForkJoinPool$EmptyTask;

        r1 := @parameter0: java.lang.Void;

        return;
    }

    public static void <clinit>()
    {
        <java.util.concurrent.ForkJoinPool$EmptyTask: long serialVersionUID> = -7721805057305804111L;

        return;
    }
}
