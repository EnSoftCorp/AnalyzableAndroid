public final class java.lang.IntegralToString extends java.lang.Object
{
    private static final java.lang.ThreadLocal BUFFER;
    private static final char[] DIGITS;
    private static final char[] MOD_10_TABLE;
    private static final char[] ONES;
    private static final java.lang.String[] SMALL_NEGATIVE_VALUES;
    private static final java.lang.String[] SMALL_NONNEGATIVE_VALUES;
    private static final char[] TENS;
    private static final char[] UPPER_CASE_DIGITS;

    static void <clinit>()
    {
        java.lang.IntegralToString$1 $r0;
        java.lang.String[] $r1, $r2;
        char[] $r3, $r4, $r5, $r6, $r7;

        $r0 = new java.lang.IntegralToString$1;

        specialinvoke $r0.<java.lang.IntegralToString$1: void <init>()>();

        <java.lang.IntegralToString: java.lang.ThreadLocal BUFFER> = $r0;

        $r1 = newarray (java.lang.String)[100];

        <java.lang.IntegralToString: java.lang.String[] SMALL_NONNEGATIVE_VALUES> = $r1;

        $r2 = newarray (java.lang.String)[100];

        <java.lang.IntegralToString: java.lang.String[] SMALL_NEGATIVE_VALUES> = $r2;

        $r3 = newarray (char)[100];

        $r3[0] = 48;

        $r3[1] = 48;

        $r3[2] = 48;

        $r3[3] = 48;

        $r3[4] = 48;

        $r3[5] = 48;

        $r3[6] = 48;

        $r3[7] = 48;

        $r3[8] = 48;

        $r3[9] = 48;

        $r3[10] = 49;

        $r3[11] = 49;

        $r3[12] = 49;

        $r3[13] = 49;

        $r3[14] = 49;

        $r3[15] = 49;

        $r3[16] = 49;

        $r3[17] = 49;

        $r3[18] = 49;

        $r3[19] = 49;

        $r3[20] = 50;

        $r3[21] = 50;

        $r3[22] = 50;

        $r3[23] = 50;

        $r3[24] = 50;

        $r3[25] = 50;

        $r3[26] = 50;

        $r3[27] = 50;

        $r3[28] = 50;

        $r3[29] = 50;

        $r3[30] = 51;

        $r3[31] = 51;

        $r3[32] = 51;

        $r3[33] = 51;

        $r3[34] = 51;

        $r3[35] = 51;

        $r3[36] = 51;

        $r3[37] = 51;

        $r3[38] = 51;

        $r3[39] = 51;

        $r3[40] = 52;

        $r3[41] = 52;

        $r3[42] = 52;

        $r3[43] = 52;

        $r3[44] = 52;

        $r3[45] = 52;

        $r3[46] = 52;

        $r3[47] = 52;

        $r3[48] = 52;

        $r3[49] = 52;

        $r3[50] = 53;

        $r3[51] = 53;

        $r3[52] = 53;

        $r3[53] = 53;

        $r3[54] = 53;

        $r3[55] = 53;

        $r3[56] = 53;

        $r3[57] = 53;

        $r3[58] = 53;

        $r3[59] = 53;

        $r3[60] = 54;

        $r3[61] = 54;

        $r3[62] = 54;

        $r3[63] = 54;

        $r3[64] = 54;

        $r3[65] = 54;

        $r3[66] = 54;

        $r3[67] = 54;

        $r3[68] = 54;

        $r3[69] = 54;

        $r3[70] = 55;

        $r3[71] = 55;

        $r3[72] = 55;

        $r3[73] = 55;

        $r3[74] = 55;

        $r3[75] = 55;

        $r3[76] = 55;

        $r3[77] = 55;

        $r3[78] = 55;

        $r3[79] = 55;

        $r3[80] = 56;

        $r3[81] = 56;

        $r3[82] = 56;

        $r3[83] = 56;

        $r3[84] = 56;

        $r3[85] = 56;

        $r3[86] = 56;

        $r3[87] = 56;

        $r3[88] = 56;

        $r3[89] = 56;

        $r3[90] = 57;

        $r3[91] = 57;

        $r3[92] = 57;

        $r3[93] = 57;

        $r3[94] = 57;

        $r3[95] = 57;

        $r3[96] = 57;

        $r3[97] = 57;

        $r3[98] = 57;

        $r3[99] = 57;

        <java.lang.IntegralToString: char[] TENS> = $r3;

        $r4 = newarray (char)[100];

        $r4[0] = 48;

        $r4[1] = 49;

        $r4[2] = 50;

        $r4[3] = 51;

        $r4[4] = 52;

        $r4[5] = 53;

        $r4[6] = 54;

        $r4[7] = 55;

        $r4[8] = 56;

        $r4[9] = 57;

        $r4[10] = 48;

        $r4[11] = 49;

        $r4[12] = 50;

        $r4[13] = 51;

        $r4[14] = 52;

        $r4[15] = 53;

        $r4[16] = 54;

        $r4[17] = 55;

        $r4[18] = 56;

        $r4[19] = 57;

        $r4[20] = 48;

        $r4[21] = 49;

        $r4[22] = 50;

        $r4[23] = 51;

        $r4[24] = 52;

        $r4[25] = 53;

        $r4[26] = 54;

        $r4[27] = 55;

        $r4[28] = 56;

        $r4[29] = 57;

        $r4[30] = 48;

        $r4[31] = 49;

        $r4[32] = 50;

        $r4[33] = 51;

        $r4[34] = 52;

        $r4[35] = 53;

        $r4[36] = 54;

        $r4[37] = 55;

        $r4[38] = 56;

        $r4[39] = 57;

        $r4[40] = 48;

        $r4[41] = 49;

        $r4[42] = 50;

        $r4[43] = 51;

        $r4[44] = 52;

        $r4[45] = 53;

        $r4[46] = 54;

        $r4[47] = 55;

        $r4[48] = 56;

        $r4[49] = 57;

        $r4[50] = 48;

        $r4[51] = 49;

        $r4[52] = 50;

        $r4[53] = 51;

        $r4[54] = 52;

        $r4[55] = 53;

        $r4[56] = 54;

        $r4[57] = 55;

        $r4[58] = 56;

        $r4[59] = 57;

        $r4[60] = 48;

        $r4[61] = 49;

        $r4[62] = 50;

        $r4[63] = 51;

        $r4[64] = 52;

        $r4[65] = 53;

        $r4[66] = 54;

        $r4[67] = 55;

        $r4[68] = 56;

        $r4[69] = 57;

        $r4[70] = 48;

        $r4[71] = 49;

        $r4[72] = 50;

        $r4[73] = 51;

        $r4[74] = 52;

        $r4[75] = 53;

        $r4[76] = 54;

        $r4[77] = 55;

        $r4[78] = 56;

        $r4[79] = 57;

        $r4[80] = 48;

        $r4[81] = 49;

        $r4[82] = 50;

        $r4[83] = 51;

        $r4[84] = 52;

        $r4[85] = 53;

        $r4[86] = 54;

        $r4[87] = 55;

        $r4[88] = 56;

        $r4[89] = 57;

        $r4[90] = 48;

        $r4[91] = 49;

        $r4[92] = 50;

        $r4[93] = 51;

        $r4[94] = 52;

        $r4[95] = 53;

        $r4[96] = 54;

        $r4[97] = 55;

        $r4[98] = 56;

        $r4[99] = 57;

        <java.lang.IntegralToString: char[] ONES> = $r4;

        $r5 = newarray (char)[16];

        $r5[0] = 0;

        $r5[1] = 1;

        $r5[2] = 2;

        $r5[3] = 2;

        $r5[4] = 3;

        $r5[5] = 3;

        $r5[6] = 4;

        $r5[7] = 5;

        $r5[8] = 5;

        $r5[9] = 6;

        $r5[10] = 7;

        $r5[11] = 7;

        $r5[12] = 8;

        $r5[13] = 8;

        $r5[14] = 9;

        $r5[15] = 0;

        <java.lang.IntegralToString: char[] MOD_10_TABLE> = $r5;

        $r6 = newarray (char)[36];

        $r6[0] = 48;

        $r6[1] = 49;

        $r6[2] = 50;

        $r6[3] = 51;

        $r6[4] = 52;

        $r6[5] = 53;

        $r6[6] = 54;

        $r6[7] = 55;

        $r6[8] = 56;

        $r6[9] = 57;

        $r6[10] = 97;

        $r6[11] = 98;

        $r6[12] = 99;

        $r6[13] = 100;

        $r6[14] = 101;

        $r6[15] = 102;

        $r6[16] = 103;

        $r6[17] = 104;

        $r6[18] = 105;

        $r6[19] = 106;

        $r6[20] = 107;

        $r6[21] = 108;

        $r6[22] = 109;

        $r6[23] = 110;

        $r6[24] = 111;

        $r6[25] = 112;

        $r6[26] = 113;

        $r6[27] = 114;

        $r6[28] = 115;

        $r6[29] = 116;

        $r6[30] = 117;

        $r6[31] = 118;

        $r6[32] = 119;

        $r6[33] = 120;

        $r6[34] = 121;

        $r6[35] = 122;

        <java.lang.IntegralToString: char[] DIGITS> = $r6;

        $r7 = newarray (char)[36];

        $r7[0] = 48;

        $r7[1] = 49;

        $r7[2] = 50;

        $r7[3] = 51;

        $r7[4] = 52;

        $r7[5] = 53;

        $r7[6] = 54;

        $r7[7] = 55;

        $r7[8] = 56;

        $r7[9] = 57;

        $r7[10] = 65;

        $r7[11] = 66;

        $r7[12] = 67;

        $r7[13] = 68;

        $r7[14] = 69;

        $r7[15] = 70;

        $r7[16] = 71;

        $r7[17] = 72;

        $r7[18] = 73;

        $r7[19] = 74;

        $r7[20] = 75;

        $r7[21] = 76;

        $r7[22] = 77;

        $r7[23] = 78;

        $r7[24] = 79;

        $r7[25] = 80;

        $r7[26] = 81;

        $r7[27] = 82;

        $r7[28] = 83;

        $r7[29] = 84;

        $r7[30] = 85;

        $r7[31] = 86;

        $r7[32] = 87;

        $r7[33] = 88;

        $r7[34] = 89;

        $r7[35] = 90;

        <java.lang.IntegralToString: char[] UPPER_CASE_DIGITS> = $r7;

        return;
    }

    private void <init>()
    {
        java.lang.IntegralToString r0;

        r0 := @this: java.lang.IntegralToString;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.StringBuilder appendByteAsHex(java.lang.StringBuilder, byte, boolean)
    {
        java.lang.StringBuilder r0;
        byte b0, $b1, $b2, $b4;
        boolean z0;
        char[] r1;
        char $c3, $c5;

        r0 := @parameter0: java.lang.StringBuilder;

        b0 := @parameter1: byte;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label2;

        r1 = <java.lang.IntegralToString: char[] UPPER_CASE_DIGITS>;

     label1:
        $b1 = b0 >> 4;

        $b2 = 15 & $b1;

        $c3 = r1[$b2];

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $b4 = b0 & 15;

        $c5 = r1[$b4];

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        return r0;

     label2:
        r1 = <java.lang.IntegralToString: char[] DIGITS>;

        goto label1;
    }

    public static void appendInt(java.lang.AbstractStringBuilder, int)
    {
        java.lang.AbstractStringBuilder r0;
        int i0;

        r0 := @parameter0: java.lang.AbstractStringBuilder;

        i0 := @parameter1: int;

        staticinvoke <java.lang.IntegralToString: java.lang.String convertInt(java.lang.AbstractStringBuilder,int)>(r0, i0);

        return;
    }

    public static void appendLong(java.lang.AbstractStringBuilder, long)
    {
        java.lang.AbstractStringBuilder r0;
        long l0;

        r0 := @parameter0: java.lang.AbstractStringBuilder;

        l0 := @parameter1: long;

        staticinvoke <java.lang.IntegralToString: java.lang.String convertLong(java.lang.AbstractStringBuilder,long)>(r0, l0);

        return;
    }

    public static java.lang.String byteToHexString(byte, boolean)
    {
        byte b0, $b1, $b2, $b4;
        boolean z0;
        char[] r0, r1;
        char $c3, $c5;
        java.lang.String $r2;

        b0 := @parameter0: byte;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label2;

        r0 = <java.lang.IntegralToString: char[] UPPER_CASE_DIGITS>;

     label1:
        r1 = newarray (char)[2];

        $b1 = b0 >> 4;

        $b2 = 15 & $b1;

        $c3 = r0[$b2];

        r1[0] = $c3;

        $b4 = b0 & 15;

        $c5 = r0[$b4];

        r1[1] = $c5;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(int,int,char[])>(0, 2, r1);

        return $r2;

     label2:
        r0 = <java.lang.IntegralToString: char[] DIGITS>;

        goto label1;
    }

    public static java.lang.String bytesToHexString(byte[], boolean)
    {
        byte[] r0;
        boolean z0;
        char[] r1, r2;
        int i0, i1, i2, i4, $i5, $i6;
        byte b3, $b7, $b8, $b10;
        java.lang.String $r3;
        char $c9, $c11;

        r0 := @parameter0: byte[];

        z0 := @parameter1: boolean;

        if z0 == 0 goto label3;

        r1 = <java.lang.IntegralToString: char[] UPPER_CASE_DIGITS>;

     label1:
        $i5 = lengthof r0;

        $i6 = 2 * $i5;

        r2 = newarray (char)[$i6];

        i0 = lengthof r0;

        i1 = 0;

        i2 = 0;

     label2:
        if i1 >= i0 goto label4;

        b3 = r0[i1];

        i4 = i2 + 1;

        $b7 = b3 >> 4;

        $b8 = 15 & $b7;

        $c9 = r1[$b8];

        r2[i2] = $c9;

        i2 = i4 + 1;

        $b10 = b3 & 15;

        $c11 = r1[$b10];

        r2[i4] = $c11;

        i1 = i1 + 1;

        goto label2;

     label3:
        r1 = <java.lang.IntegralToString: char[] DIGITS>;

        goto label1;

     label4:
        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(char[])>(r2);

        return $r3;
    }

    private static java.lang.String convertInt(java.lang.AbstractStringBuilder, int)
    {
        java.lang.AbstractStringBuilder r0;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i14;
        boolean z0;
        java.lang.String r1, $r8;
        java.lang.String[] r2, r6, $r13, $r18;
        char[] r3, r4, r5, r7, r9, $r10, $r11, $r12, $r14, $r17, $r19, $r20, $r21, $r22;
        char $c11, $c16, $c17, $c18, $c19, $c20, $c21, $c22, $c23;
        long $l12, $l13, $l15;
        java.lang.ThreadLocal $r15;
        java.lang.Object $r16;

        r0 := @parameter0: java.lang.AbstractStringBuilder;

        i0 := @parameter1: int;

        if i0 >= 0 goto label06;

        z0 = 1;

        i0 = neg i0;

        r1 = null;

        if i0 >= 100 goto label01;

        if i0 >= 0 goto label03;

        r1 = "-2147483648";

     label01:
        if r1 == null goto label09;

        if r0 == null goto label02;

        virtualinvoke r0.<java.lang.AbstractStringBuilder: void append0(java.lang.String)>(r1);

        r1 = null;

     label02:
        return r1;

     label03:
        $r18 = <java.lang.IntegralToString: java.lang.String[] SMALL_NEGATIVE_VALUES>;

        r1 = $r18[i0];

        if r1 != null goto label01;

        r6 = <java.lang.IntegralToString: java.lang.String[] SMALL_NEGATIVE_VALUES>;

        if i0 >= 10 goto label05;

        r9 = newarray (char)[2];

        r9[0] = 45;

        $r22 = <java.lang.IntegralToString: char[] ONES>;

        $c23 = $r22[i0];

        r9[1] = $c23;

        r1 = staticinvoke <java.lang.IntegralToString: java.lang.String stringOf(char[])>(r9);

     label04:
        r6[i0] = r1;

        goto label01;

     label05:
        r7 = newarray (char)[3];

        r7[0] = 45;

        $r21 = <java.lang.IntegralToString: char[] TENS>;

        $c22 = $r21[i0];

        r7[1] = $c22;

        $r20 = <java.lang.IntegralToString: char[] ONES>;

        $c21 = $r20[i0];

        r7[2] = $c21;

        r1 = staticinvoke <java.lang.IntegralToString: java.lang.String stringOf(char[])>(r7);

        goto label04;

     label06:
        z0 = 0;

        r1 = null;

        if i0 >= 100 goto label01;

        $r13 = <java.lang.IntegralToString: java.lang.String[] SMALL_NONNEGATIVE_VALUES>;

        r1 = $r13[i0];

        z0 = 0;

        if r1 != null goto label01;

        r2 = <java.lang.IntegralToString: java.lang.String[] SMALL_NONNEGATIVE_VALUES>;

        if i0 >= 10 goto label08;

        r5 = newarray (char)[1];

        $r19 = <java.lang.IntegralToString: char[] ONES>;

        $c20 = $r19[i0];

        r5[0] = $c20;

        r1 = staticinvoke <java.lang.IntegralToString: java.lang.String stringOf(char[])>(r5);

     label07:
        r2[i0] = r1;

        z0 = 0;

        goto label01;

     label08:
        r3 = newarray (char)[2];

        $r14 = <java.lang.IntegralToString: char[] TENS>;

        $c19 = $r14[i0];

        r3[0] = $c19;

        $r17 = <java.lang.IntegralToString: char[] ONES>;

        $c18 = $r17[i0];

        r3[1] = $c18;

        r1 = staticinvoke <java.lang.IntegralToString: java.lang.String stringOf(char[])>(r3);

        goto label07;

     label09:
        if r0 == null goto label12;

        $r15 = <java.lang.IntegralToString: java.lang.ThreadLocal BUFFER>;

        $r16 = virtualinvoke $r15.<java.lang.ThreadLocal: java.lang.Object get()>();

        r4 = (char[]) $r16;

     label10:
        i1 = 11;

     label11:
        if i0 < 65536 goto label13;

        $l13 = (long) i0;

        $l12 = 1374389535L * $l13;

        $l15 = $l12 >>> 37;

        i4 = (int) $l15;

        $i14 = i4 * 100;

        i5 = i0 - $i14;

        i6 = i1 - 1;

        $r11 = <java.lang.IntegralToString: char[] ONES>;

        $c16 = $r11[i5];

        r4[i6] = $c16;

        i1 = i6 - 1;

        $r12 = <java.lang.IntegralToString: char[] TENS>;

        $c17 = $r12[i5];

        r4[i1] = $c17;

        i0 = i4;

        goto label11;

     label12:
        r4 = newarray (char)[11];

        goto label10;

     label13:
        if i0 == 0 goto label14;

        $i10 = 52429 * i0;

        i2 = $i10 >>> 19;

        $i9 = i2 * 10;

        i3 = i0 - $i9;

        i1 = i1 + -1;

        $r10 = <java.lang.IntegralToString: char[] DIGITS>;

        $c11 = $r10[i3];

        r4[i1] = $c11;

        i0 = i2;

        goto label13;

     label14:
        if z0 == 0 goto label15;

        i1 = i1 + -1;

        r4[i1] = 45;

     label15:
        if r0 == null goto label16;

        $i7 = 11 - i1;

        virtualinvoke r0.<java.lang.AbstractStringBuilder: void append0(char[],int,int)>(r4, i1, $i7);

        return null;

     label16:
        $r8 = new java.lang.String;

        $i8 = 11 - i1;

        specialinvoke $r8.<java.lang.String: void <init>(int,int,char[])>(i1, $i8, r4);

        return $r8;
    }

    private static java.lang.String convertLong(java.lang.AbstractStringBuilder, long)
    {
        java.lang.AbstractStringBuilder r0;
        long l0, l4, $l11, $l12, $l14, $l15, $l16, $l18, $l20, $l28, $l29, $l32;
        int i1, i2, i3, i5, i6, i7, i8, i9, $i19, $i21, $i22, $i23, $i24, $i25, $i27, $i31, $i33, $i34, $i35, $i36;
        boolean z0;
        char[] r1, $r3, $r4;
        java.lang.String r2, $r5;
        byte $b10, $b13, $b17, $b37;
        char $c26, $c30;
        java.lang.Object $r6;
        java.lang.ThreadLocal $r7;

        r0 := @parameter0: java.lang.AbstractStringBuilder;

        l0 := @parameter1: long;

        i1 = (int) l0;

        $l11 = (long) i1;

        $b10 = $l11 cmp l0;

        if $b10 != 0 goto label02;

        r2 = staticinvoke <java.lang.IntegralToString: java.lang.String convertInt(java.lang.AbstractStringBuilder,int)>(r0, i1);

     label01:
        return r2;

     label02:
        $b13 = l0 cmp 0L;

        if $b13 >= 0 goto label04;

        z0 = 1;

     label03:
        if z0 == 0 goto label05;

        l0 = neg l0;

        $b37 = l0 cmp 0L;

        if $b37 >= 0 goto label05;

        r2 = "-9223372036854775808";

        if r0 == null goto label01;

        virtualinvoke r0.<java.lang.AbstractStringBuilder: void append0(java.lang.String)>("-9223372036854775808");

        return null;

     label04:
        z0 = 0;

        goto label03;

     label05:
        if r0 == null goto label08;

        $r7 = <java.lang.IntegralToString: java.lang.ThreadLocal BUFFER>;

        $r6 = virtualinvoke $r7.<java.lang.ThreadLocal: java.lang.Object get()>();

        r1 = (char[]) $r6;

     label06:
        $l12 = l0 % 1000000000L;

        i2 = (int) $l12;

        i3 = staticinvoke <java.lang.IntegralToString: int intIntoCharArray(char[],int,int)>(r1, 20, i2);

     label07:
        if i3 == 11 goto label09;

        i3 = i3 + -1;

        r1[i3] = 48;

        goto label07;

     label08:
        r1 = newarray (char)[20];

        goto label06;

     label09:
        $l14 = (long) i2;

        $l16 = l0 - $l14;

        $l15 = $l16 >>> 9;

        l4 = -8194354213138031507L * $l15;

        $l18 = -4294967296L & l4;

        $b17 = $l18 cmp 0L;

        if $b17 != 0 goto label12;

        $i35 = (int) l4;

        i9 = staticinvoke <java.lang.IntegralToString: int intIntoCharArray(char[],int,int)>(r1, i3, $i35);

     label10:
        if z0 == 0 goto label11;

        i9 = i9 + -1;

        r1[i9] = 45;

     label11:
        if r0 == null goto label14;

        $i34 = 20 - i9;

        virtualinvoke r0.<java.lang.AbstractStringBuilder: void append0(char[],int,int)>(r1, i9, $i34);

        return null;

     label12:
        i5 = (int) l4;

        $l20 = l4 >>> 32;

        i6 = (int) $l20;

        $r3 = <java.lang.IntegralToString: char[] MOD_10_TABLE>;

        $i22 = 429496729 * i5;

        $i19 = i5 >>> 1;

        $i24 = $i22 + $i19;

        $i21 = i5 >>> 3;

        $i23 = $i24 + $i21;

        $i27 = $i23 >>> 28;

        $c26 = $r3[$i27];

        $i25 = i6 << 2;

        i7 = $c26 - $i25;

        if i7 >= 0 goto label13;

        i7 = i7 + 10;

     label13:
        i8 = i3 - 1;

        $r4 = <java.lang.IntegralToString: char[] DIGITS>;

        $c30 = $r4[i7];

        r1[i8] = $c30;

        $l28 = (long) i7;

        $l29 = l4 - $l28;

        $l32 = $l29 >>> 1;

        $i33 = (int) $l32;

        $i31 = -858993459 * $i33;

        i9 = staticinvoke <java.lang.IntegralToString: int intIntoCharArray(char[],int,int)>(r1, i8, $i31);

        goto label10;

     label14:
        $r5 = new java.lang.String;

        $i36 = 20 - i9;

        specialinvoke $r5.<java.lang.String: void <init>(int,int,char[])>(i9, $i36, r1);

        return $r5;
    }

    private static int intIntoCharArray(char[], int, int)
    {
        char[] r0, $r1, $r2, $r3;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i11, $i14;
        char $c10, $c16, $c17;
        long $l12, $l13, $l15;

        r0 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $i7 = -65536 & i1;

        if $i7 == 0 goto label2;

        $i11 = i1 >>> 2;

        $l12 = (long) $i11;

        $l13 = 1374389535L * $l12;

        $l15 = $l13 >>> 35;

        i4 = (int) $l15;

        $i14 = i4 * 100;

        i5 = i1 - $i14;

        i6 = i0 - 1;

        $r2 = <java.lang.IntegralToString: char[] ONES>;

        $c16 = $r2[i5];

        r0[i6] = $c16;

        i0 = i6 - 1;

        $r3 = <java.lang.IntegralToString: char[] TENS>;

        $c17 = $r3[i5];

        r0[i0] = $c17;

        i1 = i4;

        goto label1;

     label2:
        if i1 == 0 goto label3;

        $i8 = 52429 * i1;

        i2 = $i8 >>> 19;

        $i9 = i2 * 10;

        i3 = i1 - $i9;

        i0 = i0 + -1;

        $r1 = <java.lang.IntegralToString: char[] DIGITS>;

        $c10 = $r1[i3];

        r0[i0] = $c10;

        i1 = i2;

        goto label2;

     label3:
        return i0;
    }

    public static java.lang.String intToBinaryString(int)
    {
        int i0, i1, $i2, $i4;
        char[] r0, $r1;
        char $c3;
        java.lang.String $r2;

        i0 := @parameter0: int;

        r0 = newarray (char)[32];

        i1 = 32;

     label1:
        i1 = i1 + -1;

        $r1 = <java.lang.IntegralToString: char[] DIGITS>;

        $i2 = i0 & 1;

        $c3 = $r1[$i2];

        r0[i1] = $c3;

        i0 = i0 >>> 1;

        if i0 != 0 goto label1;

        $r2 = new java.lang.String;

        $i4 = 32 - i1;

        specialinvoke $r2.<java.lang.String: void <init>(int,int,char[])>(i1, $i4, r0);

        return $r2;
    }

    public static java.lang.String intToHexString(int, boolean, int)
    {
        int i0, i1, i2, $i3, $i5, $i6;
        boolean z0;
        char[] r0, r1;
        char $c4;
        java.lang.String $r2;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        i1 := @parameter2: int;

        r0 = newarray (char)[8];

        i2 = 8;

        if z0 == 0 goto label2;

        r1 = <java.lang.IntegralToString: char[] UPPER_CASE_DIGITS>;

     label1:
        i2 = i2 + -1;

        $i3 = i0 & 15;

        $c4 = r1[$i3];

        r0[i2] = $c4;

        i0 = i0 >>> 4;

        if i0 != 0 goto label1;

        $i5 = 8 - i2;

        if $i5 < i1 goto label1;

        $r2 = new java.lang.String;

        $i6 = 8 - i2;

        specialinvoke $r2.<java.lang.String: void <init>(int,int,char[])>(i2, $i6, r0);

        return $r2;

     label2:
        r1 = <java.lang.IntegralToString: char[] DIGITS>;

        goto label1;
    }

    public static java.lang.String intToOctalString(int)
    {
        int i0, i1, $i2, $i4;
        char[] r0, $r1;
        char $c3;
        java.lang.String $r2;

        i0 := @parameter0: int;

        r0 = newarray (char)[11];

        i1 = 11;

     label1:
        i1 = i1 + -1;

        $r1 = <java.lang.IntegralToString: char[] DIGITS>;

        $i2 = i0 & 7;

        $c3 = $r1[$i2];

        r0[i1] = $c3;

        i0 = i0 >>> 3;

        if i0 != 0 goto label1;

        $r2 = new java.lang.String;

        $i4 = 11 - i1;

        specialinvoke $r2.<java.lang.String: void <init>(int,int,char[])>(i1, $i4, r0);

        return $r2;
    }

    public static java.lang.String intToString(int)
    {
        int i0;
        java.lang.String $r0;

        i0 := @parameter0: int;

        $r0 = staticinvoke <java.lang.IntegralToString: java.lang.String convertInt(java.lang.AbstractStringBuilder,int)>(null, i0);

        return $r0;
    }

    public static java.lang.String intToString(int, int)
    {
        int i0, i1, i3, i4, $i5, $i6, $i8;
        boolean z0;
        byte b2;
        char[] r0, $r1;
        char $c7;
        java.lang.String $r2, $r3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 < 2 goto label1;

        if i1 <= 36 goto label2;

     label1:
        i1 = 10;

     label2:
        if i1 != 10 goto label3;

        $r3 = staticinvoke <java.lang.IntegralToString: java.lang.String intToString(int)>(i0);

        return $r3;

     label3:
        if i0 >= 0 goto label8;

        z0 = 1;

     label4:
        if i1 >= 8 goto label9;

        b2 = 33;

     label5:
        r0 = newarray (char)[b2];

        i3 = b2;

     label6:
        i4 = i0 / i1;

        i3 = i3 + -1;

        $r1 = <java.lang.IntegralToString: char[] DIGITS>;

        $i5 = i1 * i4;

        $i6 = $i5 - i0;

        $c7 = $r1[$i6];

        r0[i3] = $c7;

        i0 = i4;

        if i0 != 0 goto label6;

        if z0 == 0 goto label7;

        i3 = i3 + -1;

        r0[i3] = 45;

     label7:
        $r2 = new java.lang.String;

        $i8 = b2 - i3;

        specialinvoke $r2.<java.lang.String: void <init>(int,int,char[])>(i3, $i8, r0);

        return $r2;

     label8:
        i0 = neg i0;

        z0 = 0;

        goto label4;

     label9:
        b2 = 12;

        goto label5;
    }

    public static java.lang.String longToBinaryString(long)
    {
        long l0, $l9;
        int i1, i2, $i4, $i5, $i8;
        char[] r0, $r1;
        byte $b3, $b7, $b10;
        char $c6;
        java.lang.String $r2, $r3;

        l0 := @parameter0: long;

        i1 = (int) l0;

        $b3 = l0 cmp 0L;

        if $b3 < 0 goto label1;

        $l9 = (long) i1;

        $b10 = $l9 cmp l0;

        if $b10 != 0 goto label1;

        $r3 = staticinvoke <java.lang.IntegralToString: java.lang.String intToBinaryString(int)>(i1);

        return $r3;

     label1:
        r0 = newarray (char)[64];

        i2 = 64;

     label2:
        i2 = i2 + -1;

        $r1 = <java.lang.IntegralToString: char[] DIGITS>;

        $i4 = (int) l0;

        $i5 = 1 & $i4;

        $c6 = $r1[$i5];

        r0[i2] = $c6;

        l0 = l0 >>> 1;

        $b7 = l0 cmp 0L;

        if $b7 != 0 goto label2;

        $r2 = new java.lang.String;

        $i8 = 64 - i2;

        specialinvoke $r2.<java.lang.String: void <init>(int,int,char[])>(i2, $i8, r0);

        return $r2;
    }

    public static java.lang.String longToHexString(long)
    {
        long l0, $l9;
        int i1, i2, $i4, $i5, $i8;
        char[] r0, $r1;
        byte $b3, $b7, $b10;
        char $c6;
        java.lang.String $r2, $r3;

        l0 := @parameter0: long;

        i1 = (int) l0;

        $b3 = l0 cmp 0L;

        if $b3 < 0 goto label1;

        $l9 = (long) i1;

        $b10 = $l9 cmp l0;

        if $b10 != 0 goto label1;

        $r3 = staticinvoke <java.lang.IntegralToString: java.lang.String intToHexString(int,boolean,int)>(i1, 0, 0);

        return $r3;

     label1:
        r0 = newarray (char)[16];

        i2 = 16;

     label2:
        i2 = i2 + -1;

        $r1 = <java.lang.IntegralToString: char[] DIGITS>;

        $i4 = (int) l0;

        $i5 = 15 & $i4;

        $c6 = $r1[$i5];

        r0[i2] = $c6;

        l0 = l0 >>> 4;

        $b7 = l0 cmp 0L;

        if $b7 != 0 goto label2;

        $r2 = new java.lang.String;

        $i8 = 16 - i2;

        specialinvoke $r2.<java.lang.String: void <init>(int,int,char[])>(i2, $i8, r0);

        return $r2;
    }

    public static java.lang.String longToOctalString(long)
    {
        long l0, $l9;
        int i1, i2, $i4, $i5, $i8;
        char[] r0, $r1;
        byte $b3, $b7, $b10;
        char $c6;
        java.lang.String $r2, $r3;

        l0 := @parameter0: long;

        i1 = (int) l0;

        $b3 = l0 cmp 0L;

        if $b3 < 0 goto label1;

        $l9 = (long) i1;

        $b10 = $l9 cmp l0;

        if $b10 != 0 goto label1;

        $r3 = staticinvoke <java.lang.IntegralToString: java.lang.String intToOctalString(int)>(i1);

        return $r3;

     label1:
        r0 = newarray (char)[22];

        i2 = 22;

     label2:
        i2 = i2 + -1;

        $r1 = <java.lang.IntegralToString: char[] DIGITS>;

        $i4 = (int) l0;

        $i5 = 7 & $i4;

        $c6 = $r1[$i5];

        r0[i2] = $c6;

        l0 = l0 >>> 3;

        $b7 = l0 cmp 0L;

        if $b7 != 0 goto label2;

        $r2 = new java.lang.String;

        $i8 = 22 - i2;

        specialinvoke $r2.<java.lang.String: void <init>(int,int,char[])>(i2, $i8, r0);

        return $r2;
    }

    public static java.lang.String longToString(long)
    {
        long l0;
        java.lang.String $r0;

        l0 := @parameter0: long;

        $r0 = staticinvoke <java.lang.IntegralToString: java.lang.String convertLong(java.lang.AbstractStringBuilder,long)>(null, l0);

        return $r0;
    }

    public static java.lang.String longToString(long, int)
    {
        long l0, l5, $l6, $l9, $l10, $l11, $l13;
        int i1, i2, i4, $i12, $i16;
        boolean z0;
        byte b3, $b7, $b8, $b15;
        char[] r0, $r1;
        char $c14;
        java.lang.String $r2, $r3, $r4;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 = (int) l0;

        $l6 = (long) i2;

        $b7 = $l6 cmp l0;

        if $b7 != 0 goto label01;

        $r4 = staticinvoke <java.lang.IntegralToString: java.lang.String intToString(int,int)>(i2, i1);

        return $r4;

     label01:
        if i1 < 2 goto label02;

        if i1 <= 36 goto label03;

     label02:
        i1 = 10;

     label03:
        if i1 != 10 goto label04;

        $r3 = staticinvoke <java.lang.IntegralToString: java.lang.String longToString(long)>(l0);

        return $r3;

     label04:
        $b8 = l0 cmp 0L;

        if $b8 >= 0 goto label09;

        z0 = 1;

     label05:
        if i1 >= 8 goto label10;

        b3 = 65;

     label06:
        r0 = newarray (char)[b3];

        i4 = b3;

     label07:
        $l9 = (long) i1;

        l5 = l0 / $l9;

        i4 = i4 + -1;

        $r1 = <java.lang.IntegralToString: char[] DIGITS>;

        $l10 = (long) i1;

        $l11 = l5 * $l10;

        $l13 = $l11 - l0;

        $i12 = (int) $l13;

        $c14 = $r1[$i12];

        r0[i4] = $c14;

        l0 = l5;

        $b15 = l0 cmp 0L;

        if $b15 != 0 goto label07;

        if z0 == 0 goto label08;

        i4 = i4 + -1;

        r0[i4] = 45;

     label08:
        $r2 = new java.lang.String;

        $i16 = b3 - i4;

        specialinvoke $r2.<java.lang.String: void <init>(int,int,char[])>(i4, $i16, r0);

        return $r2;

     label09:
        l0 = neg l0;

        z0 = 0;

        goto label05;

     label10:
        b3 = 23;

        goto label06;
    }

    private static transient java.lang.String stringOf(char[])
    {
        char[] r0;
        java.lang.String $r1;
        int $i0;

        r0 := @parameter0: char[];

        $r1 = new java.lang.String;

        $i0 = lengthof r0;

        specialinvoke $r1.<java.lang.String: void <init>(int,int,char[])>(0, $i0, r0);

        return $r1;
    }
}
