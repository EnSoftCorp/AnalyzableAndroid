public class org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl extends java.security.MessageDigestSpi implements java.lang.Cloneable
{
    private int[] buffer;
    private long messageLength;
    private byte[] oneByte;

    public void <init>()
    {
        org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl r0;
        int[] $r1;
        byte[] $r2;

        r0 := @this: org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl;

        specialinvoke r0.<java.security.MessageDigestSpi: void <init>()>();

        $r1 = newarray (int)[87];

        r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int[] buffer> = $r1;

        $r2 = newarray (byte)[1];

        r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: byte[] oneByte> = $r2;

        virtualinvoke r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: void engineReset()>();

        return;
    }

    private void processDigest(byte[], int)
    {
        org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl r0;
        byte[] r1;
        int i0, i2, i3, i4, i5, i6, i7, $i9, $i10, $i12, $i13, $i15, $i16, $i18, $i21, $i22, $i23;
        long l1, $l8, $l11, $l14;
        int[] $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        byte $b17, $b19, $b20, $b24;

        r0 := @this: org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        $l8 = r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: long messageLength>;

        l1 = $l8 << 3;

        virtualinvoke r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: void engineUpdate(byte)>(-128);

        $r2 = r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int[] buffer>;

        $i9 = $r2[81];

        $i10 = 3 + $i9;

        i2 = $i10 >> 2;

        $r3 = r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int[] buffer>;

        i3 = $r3[81];

        i4 = 0;

        if i3 == 0 goto label1;

        if i2 >= 15 goto label3;

        i4 = i2;

     label1:
        $r4 = r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int[] buffer>;

        staticinvoke <java.util.Arrays: void fill(int[],int,int,int)>($r4, i4, 14, 0);

        $r5 = r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int[] buffer>;

        $l11 = l1 >>> 32;

        $i12 = (int) $l11;

        $r5[14] = $i12;

        $r7 = r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int[] buffer>;

        $l14 = -1L & l1;

        $i13 = (int) $l14;

        $r7[15] = $i13;

        $r6 = r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int[] buffer>;

        staticinvoke <org.apache.harmony.security.provider.crypto.SHA1Impl: void computeHash(int[])>($r6);

        i5 = i0;

        i6 = 82;

     label2:
        if i6 >= 87 goto label5;

        $r8 = r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int[] buffer>;

        i7 = $r8[i6];

        $i15 = i7 >>> 24;

        $b17 = (byte) $i15;

        r1[i5] = $b17;

        $i18 = i5 + 1;

        $i16 = i7 >>> 16;

        $b19 = (byte) $i16;

        r1[$i18] = $b19;

        $i23 = i5 + 2;

        $i21 = i7 >>> 8;

        $b20 = (byte) $i21;

        r1[$i23] = $b20;

        $i22 = i5 + 3;

        $b24 = (byte) i7;

        r1[$i22] = $b24;

        i5 = i5 + 4;

        i6 = i6 + 1;

        goto label2;

     label3:
        if i2 != 15 goto label4;

        $r10 = r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int[] buffer>;

        $r10[15] = 0;

     label4:
        $r9 = r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int[] buffer>;

        staticinvoke <org.apache.harmony.security.provider.crypto.SHA1Impl: void computeHash(int[])>($r9);

        i4 = 0;

        goto label1;

     label5:
        virtualinvoke r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: void engineReset()>();

        return;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl r0, r1;
        java.lang.Object $r2, $r4, $r7;
        int[] $r3, $r5;
        byte[] $r6, $r8;

        r0 := @this: org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl;

        $r2 = specialinvoke r0.<java.security.MessageDigestSpi: java.lang.Object clone()>();

        r1 = (org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl) $r2;

        $r3 = r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int[] buffer>;

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Object clone()>();

        $r5 = (int[]) $r4;

        r1.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int[] buffer> = $r5;

        $r6 = r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: byte[] oneByte>;

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Object clone()>();

        $r8 = (byte[]) $r7;

        r1.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: byte[] oneByte> = $r8;

        return r1;
    }

    protected int engineDigest(byte[], int, int) throws java.security.DigestException
    {
        org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl r0;
        byte[] r1;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.lang.IllegalArgumentException $r2, $r5;
        java.lang.ArrayIndexOutOfBoundsException $r3;
        java.security.DigestException $r4;

        r0 := @this: org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("buf == null");

        throw $r5;

     label1:
        $i2 = lengthof r1;

        if i0 > $i2 goto label2;

        $i3 = lengthof r1;

        if i1 > $i3 goto label2;

        $i5 = i1 + i0;

        $i4 = lengthof r1;

        if $i5 <= $i4 goto label3;

     label2:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label3:
        if i1 >= 20 goto label4;

        $r4 = new java.security.DigestException;

        specialinvoke $r4.<java.security.DigestException: void <init>(java.lang.String)>("len < DIGEST_LENGTH");

        throw $r4;

     label4:
        if i0 >= 0 goto label5;

        $r3 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r3.<java.lang.ArrayIndexOutOfBoundsException: void <init>(int)>(i0);

        throw $r3;

     label5:
        specialinvoke r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: void processDigest(byte[],int)>(r1, i0);

        return 20;
    }

    protected byte[] engineDigest()
    {
        org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl r0;
        byte[] r1;

        r0 := @this: org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl;

        r1 = newarray (byte)[20];

        specialinvoke r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: void processDigest(byte[],int)>(r1, 0);

        return r1;
    }

    protected int engineGetDigestLength()
    {
        org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl r0;

        r0 := @this: org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl;

        return 20;
    }

    protected void engineReset()
    {
        org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl r0;
        int[] $r1, $r2, $r3, $r4, $r5, $r6;

        r0 := @this: org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl;

        r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: long messageLength> = 0L;

        $r1 = r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int[] buffer>;

        $r1[81] = 0;

        $r2 = r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int[] buffer>;

        $r2[82] = 1732584193;

        $r3 = r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int[] buffer>;

        $r3[83] = -271733879;

        $r4 = r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int[] buffer>;

        $r4[84] = -1732584194;

        $r5 = r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int[] buffer>;

        $r5[85] = 271733878;

        $r6 = r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int[] buffer>;

        $r6[86] = -1009589776;

        return;
    }

    protected void engineUpdate(byte)
    {
        org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl r0;
        byte b0;
        byte[] $r1, $r2;
        int[] $r3;
        long $l1, $l2;

        r0 := @this: org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl;

        b0 := @parameter0: byte;

        $r1 = r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: byte[] oneByte>;

        $r1[0] = b0;

        $r3 = r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int[] buffer>;

        $r2 = r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: byte[] oneByte>;

        staticinvoke <org.apache.harmony.security.provider.crypto.SHA1Impl: void updateHash(int[],byte[],int,int)>($r3, $r2, 0, 0);

        $l1 = r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: long messageLength>;

        $l2 = 1L + $l1;

        r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: long messageLength> = $l2;

        return;
    }

    protected void engineUpdate(byte[], int, int)
    {
        org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl r0;
        byte[] r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.IllegalArgumentException $r2, $r5;
        int[] $r3;
        long $l8, $l9, $l10;
        java.lang.ArrayIndexOutOfBoundsException $r4;

        r0 := @this: org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("input == null");

        throw $r5;

     label1:
        if i1 > 0 goto label2;

        return;

     label2:
        if i0 >= 0 goto label3;

        $r4 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r4.<java.lang.ArrayIndexOutOfBoundsException: void <init>(int)>(i0);

        throw $r4;

     label3:
        $i2 = lengthof r1;

        if i0 > $i2 goto label4;

        $i3 = lengthof r1;

        if i1 > $i3 goto label4;

        $i5 = i1 + i0;

        $i4 = lengthof r1;

        if $i5 <= $i4 goto label5;

     label4:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label5:
        $r3 = r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: int[] buffer>;

        $i6 = i0 + i1;

        $i7 = -1 + $i6;

        staticinvoke <org.apache.harmony.security.provider.crypto.SHA1Impl: void updateHash(int[],byte[],int,int)>($r3, r1, i0, $i7);

        $l9 = r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: long messageLength>;

        $l8 = (long) i1;

        $l10 = $l9 + $l8;

        r0.<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: long messageLength> = $l10;

        return;
    }
}
