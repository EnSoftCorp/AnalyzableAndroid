class java.net.AddressCache extends java.lang.Object
{
    private static final int MAX_ENTRIES;
    private static final long TTL_NANOS;
    private final libcore.util.BasicLruCache cache;

    void <init>()
    {
        java.net.AddressCache r0;
        libcore.util.BasicLruCache $r1;

        r0 := @this: java.net.AddressCache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new libcore.util.BasicLruCache;

        specialinvoke $r1.<libcore.util.BasicLruCache: void <init>(int)>(16);

        r0.<java.net.AddressCache: libcore.util.BasicLruCache cache> = $r1;

        return;
    }

    public void clear()
    {
        java.net.AddressCache r0;
        libcore.util.BasicLruCache $r1;

        r0 := @this: java.net.AddressCache;

        $r1 = r0.<java.net.AddressCache: libcore.util.BasicLruCache cache>;

        virtualinvoke $r1.<libcore.util.BasicLruCache: void evictAll()>();

        return;
    }

    public java.lang.Object get(java.lang.String)
    {
        java.net.AddressCache r0;
        java.lang.String r1;
        java.net.AddressCache$AddressCacheEntry r2;
        libcore.util.BasicLruCache $r3;
        java.lang.Object $r4, $r5;
        long $l0, $l1;
        byte $b2;

        r0 := @this: java.net.AddressCache;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<java.net.AddressCache: libcore.util.BasicLruCache cache>;

        $r4 = virtualinvoke $r3.<libcore.util.BasicLruCache: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.net.AddressCache$AddressCacheEntry) $r4;

        if r2 == null goto label1;

        $l0 = r2.<java.net.AddressCache$AddressCacheEntry: long expiryNanos>;

        $l1 = staticinvoke <java.lang.System: long nanoTime()>();

        $b2 = $l0 cmp $l1;

        if $b2 < 0 goto label1;

        $r5 = r2.<java.net.AddressCache$AddressCacheEntry: java.lang.Object value>;

        return $r5;

     label1:
        return null;
    }

    public void put(java.lang.String, java.net.InetAddress[])
    {
        java.net.AddressCache r0;
        java.lang.String r1;
        java.net.InetAddress[] r2;
        java.net.AddressCache$AddressCacheEntry $r3;
        libcore.util.BasicLruCache $r4;

        r0 := @this: java.net.AddressCache;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.net.InetAddress[];

        $r4 = r0.<java.net.AddressCache: libcore.util.BasicLruCache cache>;

        $r3 = new java.net.AddressCache$AddressCacheEntry;

        specialinvoke $r3.<java.net.AddressCache$AddressCacheEntry: void <init>(java.lang.Object)>(r2);

        virtualinvoke $r4.<libcore.util.BasicLruCache: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3);

        return;
    }

    public void putUnknownHost(java.lang.String, java.lang.String)
    {
        java.net.AddressCache r0;
        java.lang.String r1, r2;
        java.net.AddressCache$AddressCacheEntry $r3;
        libcore.util.BasicLruCache $r4;

        r0 := @this: java.net.AddressCache;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r4 = r0.<java.net.AddressCache: libcore.util.BasicLruCache cache>;

        $r3 = new java.net.AddressCache$AddressCacheEntry;

        specialinvoke $r3.<java.net.AddressCache$AddressCacheEntry: void <init>(java.lang.Object)>(r2);

        virtualinvoke $r4.<libcore.util.BasicLruCache: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3);

        return;
    }

    public static void <clinit>()
    {
        <java.net.AddressCache: long TTL_NANOS> = 2000000000L;

        <java.net.AddressCache: int MAX_ENTRIES> = 16;

        return;
    }
}
