public final class javax.security.auth.Subject extends java.lang.Object implements java.io.Serializable
{
    private static final javax.security.auth.AuthPermission _AS;
    private static final javax.security.auth.AuthPermission _AS_PRIVILEGED;
    private static final javax.security.auth.AuthPermission _PRINCIPALS;
    private static final javax.security.auth.AuthPermission _PRIVATE_CREDENTIALS;
    private static final javax.security.auth.AuthPermission _PUBLIC_CREDENTIALS;
    private static final javax.security.auth.AuthPermission _READ_ONLY;
    private static final javax.security.auth.AuthPermission _SUBJECT;
    private static final long serialVersionUID;
    private final java.util.Set principals;
    private transient javax.security.auth.Subject$SecureSet privateCredentials;
    private transient javax.security.auth.Subject$SecureSet publicCredentials;
    private boolean readOnly;

    static void <clinit>()
    {
        javax.security.auth.AuthPermission $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        <javax.security.auth.Subject: long serialVersionUID> = -8308522755600156056L;

        $r0 = new javax.security.auth.AuthPermission;

        specialinvoke $r0.<javax.security.auth.AuthPermission: void <init>(java.lang.String)>("doAs");

        <javax.security.auth.Subject: javax.security.auth.AuthPermission _AS> = $r0;

        $r1 = new javax.security.auth.AuthPermission;

        specialinvoke $r1.<javax.security.auth.AuthPermission: void <init>(java.lang.String)>("doAsPrivileged");

        <javax.security.auth.Subject: javax.security.auth.AuthPermission _AS_PRIVILEGED> = $r1;

        $r2 = new javax.security.auth.AuthPermission;

        specialinvoke $r2.<javax.security.auth.AuthPermission: void <init>(java.lang.String)>("getSubject");

        <javax.security.auth.Subject: javax.security.auth.AuthPermission _SUBJECT> = $r2;

        $r3 = new javax.security.auth.AuthPermission;

        specialinvoke $r3.<javax.security.auth.AuthPermission: void <init>(java.lang.String)>("modifyPrincipals");

        <javax.security.auth.Subject: javax.security.auth.AuthPermission _PRINCIPALS> = $r3;

        $r4 = new javax.security.auth.AuthPermission;

        specialinvoke $r4.<javax.security.auth.AuthPermission: void <init>(java.lang.String)>("modifyPrivateCredentials");

        <javax.security.auth.Subject: javax.security.auth.AuthPermission _PRIVATE_CREDENTIALS> = $r4;

        $r5 = new javax.security.auth.AuthPermission;

        specialinvoke $r5.<javax.security.auth.AuthPermission: void <init>(java.lang.String)>("modifyPublicCredentials");

        <javax.security.auth.Subject: javax.security.auth.AuthPermission _PUBLIC_CREDENTIALS> = $r5;

        $r6 = new javax.security.auth.AuthPermission;

        specialinvoke $r6.<javax.security.auth.AuthPermission: void <init>(java.lang.String)>("setReadOnly");

        <javax.security.auth.Subject: javax.security.auth.AuthPermission _READ_ONLY> = $r6;

        return;
    }

    public void <init>()
    {
        javax.security.auth.Subject r0;
        javax.security.auth.Subject$SecureSet $r1, $r3, $r5;
        javax.security.auth.AuthPermission $r2, $r4, $r6;

        r0 := @this: javax.security.auth.Subject;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new javax.security.auth.Subject$SecureSet;

        $r2 = <javax.security.auth.Subject: javax.security.auth.AuthPermission _PRINCIPALS>;

        specialinvoke $r1.<javax.security.auth.Subject$SecureSet: void <init>(javax.security.auth.Subject,javax.security.auth.AuthPermission)>(r0, $r2);

        r0.<javax.security.auth.Subject: java.util.Set principals> = $r1;

        $r3 = new javax.security.auth.Subject$SecureSet;

        $r4 = <javax.security.auth.Subject: javax.security.auth.AuthPermission _PUBLIC_CREDENTIALS>;

        specialinvoke $r3.<javax.security.auth.Subject$SecureSet: void <init>(javax.security.auth.Subject,javax.security.auth.AuthPermission)>(r0, $r4);

        r0.<javax.security.auth.Subject: javax.security.auth.Subject$SecureSet publicCredentials> = $r3;

        $r5 = new javax.security.auth.Subject$SecureSet;

        $r6 = <javax.security.auth.Subject: javax.security.auth.AuthPermission _PRIVATE_CREDENTIALS>;

        specialinvoke $r5.<javax.security.auth.Subject$SecureSet: void <init>(javax.security.auth.Subject,javax.security.auth.AuthPermission)>(r0, $r6);

        r0.<javax.security.auth.Subject: javax.security.auth.Subject$SecureSet privateCredentials> = $r5;

        r0.<javax.security.auth.Subject: boolean readOnly> = 0;

        return;
    }

    public void <init>(boolean, java.util.Set, java.util.Set, java.util.Set)
    {
        javax.security.auth.Subject r0;
        boolean z0;
        java.util.Set r1, r2, r3;
        javax.security.auth.Subject$SecureSet $r4, $r6, $r8;
        javax.security.auth.AuthPermission $r5, $r7, $r9;
        java.lang.NullPointerException $r10, $r11, $r12;

        r0 := @this: javax.security.auth.Subject;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.util.Set;

        r2 := @parameter2: java.util.Set;

        r3 := @parameter3: java.util.Set;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r12 = new java.lang.NullPointerException;

        specialinvoke $r12.<java.lang.NullPointerException: void <init>(java.lang.String)>("subjPrincipals == null");

        throw $r12;

     label1:
        if r2 != null goto label2;

        $r11 = new java.lang.NullPointerException;

        specialinvoke $r11.<java.lang.NullPointerException: void <init>(java.lang.String)>("pubCredentials == null");

        throw $r11;

     label2:
        if r3 != null goto label3;

        $r10 = new java.lang.NullPointerException;

        specialinvoke $r10.<java.lang.NullPointerException: void <init>(java.lang.String)>("privCredentials == null");

        throw $r10;

     label3:
        $r4 = new javax.security.auth.Subject$SecureSet;

        $r5 = <javax.security.auth.Subject: javax.security.auth.AuthPermission _PRINCIPALS>;

        specialinvoke $r4.<javax.security.auth.Subject$SecureSet: void <init>(javax.security.auth.Subject,javax.security.auth.AuthPermission,java.util.Collection)>(r0, $r5, r1);

        r0.<javax.security.auth.Subject: java.util.Set principals> = $r4;

        $r6 = new javax.security.auth.Subject$SecureSet;

        $r7 = <javax.security.auth.Subject: javax.security.auth.AuthPermission _PUBLIC_CREDENTIALS>;

        specialinvoke $r6.<javax.security.auth.Subject$SecureSet: void <init>(javax.security.auth.Subject,javax.security.auth.AuthPermission,java.util.Collection)>(r0, $r7, r2);

        r0.<javax.security.auth.Subject: javax.security.auth.Subject$SecureSet publicCredentials> = $r6;

        $r8 = new javax.security.auth.Subject$SecureSet;

        $r9 = <javax.security.auth.Subject: javax.security.auth.AuthPermission _PRIVATE_CREDENTIALS>;

        specialinvoke $r8.<javax.security.auth.Subject$SecureSet: void <init>(javax.security.auth.Subject,javax.security.auth.AuthPermission,java.util.Collection)>(r0, $r9, r3);

        r0.<javax.security.auth.Subject: javax.security.auth.Subject$SecureSet privateCredentials> = $r8;

        r0.<javax.security.auth.Subject: boolean readOnly> = z0;

        return;
    }

    static javax.security.auth.AuthPermission access$000()
    {
        javax.security.auth.AuthPermission $r0;

        $r0 = <javax.security.auth.Subject: javax.security.auth.AuthPermission _PRINCIPALS>;

        return $r0;
    }

    static void access$100(javax.security.auth.Subject)
    {
        javax.security.auth.Subject r0;

        r0 := @parameter0: javax.security.auth.Subject;

        specialinvoke r0.<javax.security.auth.Subject: void checkState()>();

        return;
    }

    static javax.security.auth.AuthPermission access$200()
    {
        javax.security.auth.AuthPermission $r0;

        $r0 = <javax.security.auth.Subject: javax.security.auth.AuthPermission _PRIVATE_CREDENTIALS>;

        return $r0;
    }

    static javax.security.auth.AuthPermission access$300()
    {
        javax.security.auth.AuthPermission $r0;

        $r0 = <javax.security.auth.Subject: javax.security.auth.AuthPermission _PUBLIC_CREDENTIALS>;

        return $r0;
    }

    private void checkState()
    {
        javax.security.auth.Subject r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;

        r0 := @this: javax.security.auth.Subject;

        $z0 = r0.<javax.security.auth.Subject: boolean readOnly>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Set is read-only");

        throw $r1;

     label1:
        return;
    }

    public static java.lang.Object doAs(javax.security.auth.Subject, java.security.PrivilegedAction)
    {
        javax.security.auth.Subject r0;
        java.security.PrivilegedAction r1;
        java.security.AccessControlContext $r2;
        java.lang.Object $r3;

        r0 := @parameter0: javax.security.auth.Subject;

        r1 := @parameter1: java.security.PrivilegedAction;

        $r2 = staticinvoke <java.security.AccessController: java.security.AccessControlContext getContext()>();

        $r3 = staticinvoke <javax.security.auth.Subject: java.lang.Object doAs_PrivilegedAction(javax.security.auth.Subject,java.security.PrivilegedAction,java.security.AccessControlContext)>(r0, r1, $r2);

        return $r3;
    }

    public static java.lang.Object doAs(javax.security.auth.Subject, java.security.PrivilegedExceptionAction) throws java.security.PrivilegedActionException
    {
        javax.security.auth.Subject r0;
        java.security.PrivilegedExceptionAction r1;
        java.security.AccessControlContext $r2;
        java.lang.Object $r3;

        r0 := @parameter0: javax.security.auth.Subject;

        r1 := @parameter1: java.security.PrivilegedExceptionAction;

        $r2 = staticinvoke <java.security.AccessController: java.security.AccessControlContext getContext()>();

        $r3 = staticinvoke <javax.security.auth.Subject: java.lang.Object doAs_PrivilegedExceptionAction(javax.security.auth.Subject,java.security.PrivilegedExceptionAction,java.security.AccessControlContext)>(r0, r1, $r2);

        return $r3;
    }

    public static java.lang.Object doAsPrivileged(javax.security.auth.Subject, java.security.PrivilegedAction, java.security.AccessControlContext)
    {
        javax.security.auth.Subject r0;
        java.security.PrivilegedAction r1;
        java.security.AccessControlContext r2, $r4;
        java.lang.Object $r3, $r6;
        java.security.ProtectionDomain[] $r5;

        r0 := @parameter0: javax.security.auth.Subject;

        r1 := @parameter1: java.security.PrivilegedAction;

        r2 := @parameter2: java.security.AccessControlContext;

        if r2 != null goto label1;

        $r4 = new java.security.AccessControlContext;

        $r5 = newarray (java.security.ProtectionDomain)[0];

        specialinvoke $r4.<java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[])>($r5);

        $r6 = staticinvoke <javax.security.auth.Subject: java.lang.Object doAs_PrivilegedAction(javax.security.auth.Subject,java.security.PrivilegedAction,java.security.AccessControlContext)>(r0, r1, $r4);

        return $r6;

     label1:
        $r3 = staticinvoke <javax.security.auth.Subject: java.lang.Object doAs_PrivilegedAction(javax.security.auth.Subject,java.security.PrivilegedAction,java.security.AccessControlContext)>(r0, r1, r2);

        return $r3;
    }

    public static java.lang.Object doAsPrivileged(javax.security.auth.Subject, java.security.PrivilegedExceptionAction, java.security.AccessControlContext) throws java.security.PrivilegedActionException
    {
        javax.security.auth.Subject r0;
        java.security.PrivilegedExceptionAction r1;
        java.security.AccessControlContext r2, $r4;
        java.lang.Object $r3, $r6;
        java.security.ProtectionDomain[] $r5;

        r0 := @parameter0: javax.security.auth.Subject;

        r1 := @parameter1: java.security.PrivilegedExceptionAction;

        r2 := @parameter2: java.security.AccessControlContext;

        if r2 != null goto label1;

        $r4 = new java.security.AccessControlContext;

        $r5 = newarray (java.security.ProtectionDomain)[0];

        specialinvoke $r4.<java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[])>($r5);

        $r6 = staticinvoke <javax.security.auth.Subject: java.lang.Object doAs_PrivilegedExceptionAction(javax.security.auth.Subject,java.security.PrivilegedExceptionAction,java.security.AccessControlContext)>(r0, r1, $r4);

        return $r6;

     label1:
        $r3 = staticinvoke <javax.security.auth.Subject: java.lang.Object doAs_PrivilegedExceptionAction(javax.security.auth.Subject,java.security.PrivilegedExceptionAction,java.security.AccessControlContext)>(r0, r1, r2);

        return $r3;
    }

    private static java.lang.Object doAs_PrivilegedAction(javax.security.auth.Subject, java.security.PrivilegedAction, java.security.AccessControlContext)
    {
        javax.security.auth.Subject r0;
        java.security.PrivilegedAction r1;
        java.security.AccessControlContext r2, $r7;
        javax.security.auth.SubjectDomainCombiner r3, $r4;
        javax.security.auth.Subject$1 $r5;
        java.lang.Object $r6, $r8;

        r0 := @parameter0: javax.security.auth.Subject;

        r1 := @parameter1: java.security.PrivilegedAction;

        r2 := @parameter2: java.security.AccessControlContext;

        if r0 != null goto label2;

        r3 = null;

     label1:
        $r5 = new javax.security.auth.Subject$1;

        specialinvoke $r5.<javax.security.auth.Subject$1: void <init>(java.security.AccessControlContext,javax.security.auth.SubjectDomainCombiner)>(r2, r3);

        $r6 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r5);

        $r7 = (java.security.AccessControlContext) $r6;

        $r8 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction,java.security.AccessControlContext)>(r1, $r7);

        return $r8;

     label2:
        $r4 = new javax.security.auth.SubjectDomainCombiner;

        specialinvoke $r4.<javax.security.auth.SubjectDomainCombiner: void <init>(javax.security.auth.Subject)>(r0);

        r3 = $r4;

        goto label1;
    }

    private static java.lang.Object doAs_PrivilegedExceptionAction(javax.security.auth.Subject, java.security.PrivilegedExceptionAction, java.security.AccessControlContext) throws java.security.PrivilegedActionException
    {
        javax.security.auth.Subject r0;
        java.security.PrivilegedExceptionAction r1;
        java.security.AccessControlContext r2, $r7;
        javax.security.auth.SubjectDomainCombiner r3, $r4;
        javax.security.auth.Subject$2 $r5;
        java.lang.Object $r6, $r8;

        r0 := @parameter0: javax.security.auth.Subject;

        r1 := @parameter1: java.security.PrivilegedExceptionAction;

        r2 := @parameter2: java.security.AccessControlContext;

        if r0 != null goto label2;

        r3 = null;

     label1:
        $r5 = new javax.security.auth.Subject$2;

        specialinvoke $r5.<javax.security.auth.Subject$2: void <init>(java.security.AccessControlContext,javax.security.auth.SubjectDomainCombiner)>(r2, r3);

        $r6 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r5);

        $r7 = (java.security.AccessControlContext) $r6;

        $r8 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction,java.security.AccessControlContext)>(r1, $r7);

        return $r8;

     label2:
        $r4 = new javax.security.auth.SubjectDomainCombiner;

        specialinvoke $r4.<javax.security.auth.SubjectDomainCombiner: void <init>(javax.security.auth.Subject)>(r0);

        r3 = $r4;

        goto label1;
    }

    public static javax.security.auth.Subject getSubject(java.security.AccessControlContext)
    {
        java.security.AccessControlContext r0;
        java.security.DomainCombiner r1;
        javax.security.auth.Subject$3 $r2;
        java.lang.Object $r3;
        boolean $z0;
        javax.security.auth.SubjectDomainCombiner $r4;
        javax.security.auth.Subject $r5;
        java.lang.NullPointerException $r6;

        r0 := @parameter0: java.security.AccessControlContext;

        if r0 != null goto label1;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("context == null");

        throw $r6;

     label1:
        $r2 = new javax.security.auth.Subject$3;

        specialinvoke $r2.<javax.security.auth.Subject$3: void <init>(java.security.AccessControlContext)>(r0);

        $r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r2);

        r1 = (java.security.DomainCombiner) $r3;

        if r1 == null goto label2;

        $z0 = r1 instanceof javax.security.auth.SubjectDomainCombiner;

        if $z0 != 0 goto label3;

     label2:
        return null;

     label3:
        $r4 = (javax.security.auth.SubjectDomainCombiner) r1;

        $r5 = virtualinvoke $r4.<javax.security.auth.SubjectDomainCombiner: javax.security.auth.Subject getSubject()>();

        return $r5;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        javax.security.auth.Subject r0;
        java.io.ObjectInputStream r1;
        javax.security.auth.Subject$SecureSet $r2, $r4;
        javax.security.auth.AuthPermission $r3, $r5;

        r0 := @this: javax.security.auth.Subject;

        r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        $r2 = new javax.security.auth.Subject$SecureSet;

        $r3 = <javax.security.auth.Subject: javax.security.auth.AuthPermission _PUBLIC_CREDENTIALS>;

        specialinvoke $r2.<javax.security.auth.Subject$SecureSet: void <init>(javax.security.auth.Subject,javax.security.auth.AuthPermission)>(r0, $r3);

        r0.<javax.security.auth.Subject: javax.security.auth.Subject$SecureSet publicCredentials> = $r2;

        $r4 = new javax.security.auth.Subject$SecureSet;

        $r5 = <javax.security.auth.Subject: javax.security.auth.AuthPermission _PRIVATE_CREDENTIALS>;

        specialinvoke $r4.<javax.security.auth.Subject$SecureSet: void <init>(javax.security.auth.Subject,javax.security.auth.AuthPermission)>(r0, $r5);

        r0.<javax.security.auth.Subject: javax.security.auth.Subject$SecureSet privateCredentials> = $r4;

        return;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        javax.security.auth.Subject r0;
        java.io.ObjectOutputStream r1;

        r0 := @this: javax.security.auth.Subject;

        r1 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        return;
    }

    public boolean equals(java.lang.Object)
    {
        javax.security.auth.Subject r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        java.util.Set $r5, $r6;
        boolean $z0, $z1, $z2;
        javax.security.auth.Subject$SecureSet $r7, $r8, $r9, $r10;

        r0 := @this: javax.security.auth.Subject;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label2;

     label1:
        return 1;

     label2:
        if r1 == null goto label3;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label4;

     label3:
        return 0;

     label4:
        r2 = (javax.security.auth.Subject) r1;

        $r6 = r0.<javax.security.auth.Subject: java.util.Set principals>;

        $r5 = r2.<javax.security.auth.Subject: java.util.Set principals>;

        $z0 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label5;

        $r8 = r0.<javax.security.auth.Subject: javax.security.auth.Subject$SecureSet publicCredentials>;

        $r7 = r2.<javax.security.auth.Subject: javax.security.auth.Subject$SecureSet publicCredentials>;

        $z1 = virtualinvoke $r8.<javax.security.auth.Subject$SecureSet: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label5;

        $r10 = r0.<javax.security.auth.Subject: javax.security.auth.Subject$SecureSet privateCredentials>;

        $r9 = r2.<javax.security.auth.Subject: javax.security.auth.Subject$SecureSet privateCredentials>;

        $z2 = virtualinvoke $r10.<javax.security.auth.Subject$SecureSet: boolean equals(java.lang.Object)>($r9);

        if $z2 != 0 goto label1;

     label5:
        return 0;
    }

    public java.util.Set getPrincipals()
    {
        javax.security.auth.Subject r0;
        java.util.Set $r1;

        r0 := @this: javax.security.auth.Subject;

        $r1 = r0.<javax.security.auth.Subject: java.util.Set principals>;

        return $r1;
    }

    public java.util.Set getPrincipals(java.lang.Class)
    {
        javax.security.auth.Subject r0;
        java.lang.Class r1;
        java.util.Set $r2, $r4;
        javax.security.auth.Subject$SecureSet $r3;

        r0 := @this: javax.security.auth.Subject;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<javax.security.auth.Subject: java.util.Set principals>;

        $r3 = (javax.security.auth.Subject$SecureSet) $r2;

        $r4 = virtualinvoke $r3.<javax.security.auth.Subject$SecureSet: java.util.Set get(java.lang.Class)>(r1);

        return $r4;
    }

    public java.util.Set getPrivateCredentials()
    {
        javax.security.auth.Subject r0;
        javax.security.auth.Subject$SecureSet $r1;

        r0 := @this: javax.security.auth.Subject;

        $r1 = r0.<javax.security.auth.Subject: javax.security.auth.Subject$SecureSet privateCredentials>;

        return $r1;
    }

    public java.util.Set getPrivateCredentials(java.lang.Class)
    {
        javax.security.auth.Subject r0;
        java.lang.Class r1;
        javax.security.auth.Subject$SecureSet $r2;
        java.util.Set $r3;

        r0 := @this: javax.security.auth.Subject;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<javax.security.auth.Subject: javax.security.auth.Subject$SecureSet privateCredentials>;

        $r3 = virtualinvoke $r2.<javax.security.auth.Subject$SecureSet: java.util.Set get(java.lang.Class)>(r1);

        return $r3;
    }

    public java.util.Set getPublicCredentials()
    {
        javax.security.auth.Subject r0;
        javax.security.auth.Subject$SecureSet $r1;

        r0 := @this: javax.security.auth.Subject;

        $r1 = r0.<javax.security.auth.Subject: javax.security.auth.Subject$SecureSet publicCredentials>;

        return $r1;
    }

    public java.util.Set getPublicCredentials(java.lang.Class)
    {
        javax.security.auth.Subject r0;
        java.lang.Class r1;
        javax.security.auth.Subject$SecureSet $r2;
        java.util.Set $r3;

        r0 := @this: javax.security.auth.Subject;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<javax.security.auth.Subject: javax.security.auth.Subject$SecureSet publicCredentials>;

        $r3 = virtualinvoke $r2.<javax.security.auth.Subject$SecureSet: java.util.Set get(java.lang.Class)>(r1);

        return $r3;
    }

    public int hashCode()
    {
        javax.security.auth.Subject r0;
        java.util.Set $r1;
        int $i0, $i1, $i2, $i3, $i4;
        javax.security.auth.Subject$SecureSet $r2, $r3;

        r0 := @this: javax.security.auth.Subject;

        $r1 = r0.<javax.security.auth.Subject: java.util.Set principals>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $r2 = r0.<javax.security.auth.Subject: javax.security.auth.Subject$SecureSet privateCredentials>;

        $i1 = virtualinvoke $r2.<javax.security.auth.Subject$SecureSet: int hashCode()>();

        $i2 = $i0 + $i1;

        $r3 = r0.<javax.security.auth.Subject: javax.security.auth.Subject$SecureSet publicCredentials>;

        $i3 = virtualinvoke $r3.<javax.security.auth.Subject$SecureSet: int hashCode()>();

        $i4 = $i2 + $i3;

        return $i4;
    }

    public boolean isReadOnly()
    {
        javax.security.auth.Subject r0;
        boolean $z0;

        r0 := @this: javax.security.auth.Subject;

        $z0 = r0.<javax.security.auth.Subject: boolean readOnly>;

        return $z0;
    }

    public void setReadOnly()
    {
        javax.security.auth.Subject r0;

        r0 := @this: javax.security.auth.Subject;

        r0.<javax.security.auth.Subject: boolean readOnly> = 1;

        return;
    }

    public java.lang.String toString()
    {
        javax.security.auth.Subject r0;
        java.lang.StringBuilder r1, $r6;
        java.util.Iterator r2, r3, r4;
        int i0, $i1, $i2;
        java.util.Set $r7;
        boolean $z0, $z1, $z2;
        javax.security.auth.Subject$SecureSet $r8, $r9;
        java.lang.String $r10;
        java.lang.Object $r11, $r15, $r19;
        java.lang.SecurityException $r25;

        r0 := @this: javax.security.auth.Subject;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Subject:\n");

        r1 = $r6;

        $r7 = r0.<javax.security.auth.Subject: java.util.Set principals>;

        r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tPrincipal: ");

        $r19 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        goto label1;

     label2:
        $r8 = r0.<javax.security.auth.Subject: javax.security.auth.Subject$SecureSet publicCredentials>;

        r3 = virtualinvoke $r8.<javax.security.auth.Subject$SecureSet: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tPublic Credential: ");

        $r15 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        goto label3;

     label4:
        $i1 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();

        i0 = -1 + $i1;

        $r9 = r0.<javax.security.auth.Subject: javax.security.auth.Subject$SecureSet privateCredentials>;

        r4 = virtualinvoke $r9.<javax.security.auth.Subject$SecureSet: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label8;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tPrivate Credential: ");

        $r11 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

     label6:
        goto label5;

     label7:
        $r25 := @caughtexception;

        $i2 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>(i0, $i2);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tPrivate Credentials: no accessible information\n");

     label8:
        $r10 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;

        catch java.lang.SecurityException from label5 to label6 with label7;
    }
}
