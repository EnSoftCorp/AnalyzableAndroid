public class java.io.PrintWriter extends java.io.Writer
{
    private boolean autoFlush;
    private boolean ioError;
    protected java.io.Writer out;

    public void <init>(java.io.File) throws java.io.FileNotFoundException
    {
        java.io.PrintWriter r0;
        java.io.File r1;
        java.io.OutputStreamWriter $r2;
        java.io.BufferedOutputStream $r3;
        java.io.FileOutputStream $r4;

        r0 := @this: java.io.PrintWriter;

        r1 := @parameter0: java.io.File;

        $r2 = new java.io.OutputStreamWriter;

        $r3 = new java.io.BufferedOutputStream;

        $r4 = new java.io.FileOutputStream;

        specialinvoke $r4.<java.io.FileOutputStream: void <init>(java.io.File)>(r1);

        specialinvoke $r3.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r4);

        specialinvoke $r2.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>($r3);

        specialinvoke r0.<java.io.PrintWriter: void <init>(java.io.Writer,boolean)>($r2, 0);

        return;
    }

    public void <init>(java.io.File, java.lang.String) throws java.io.FileNotFoundException, java.io.UnsupportedEncodingException
    {
        java.io.PrintWriter r0;
        java.io.File r1;
        java.lang.String r2;
        java.io.OutputStreamWriter $r3;
        java.io.BufferedOutputStream $r4;
        java.io.FileOutputStream $r5;

        r0 := @this: java.io.PrintWriter;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.lang.String;

        $r3 = new java.io.OutputStreamWriter;

        $r4 = new java.io.BufferedOutputStream;

        $r5 = new java.io.FileOutputStream;

        specialinvoke $r5.<java.io.FileOutputStream: void <init>(java.io.File)>(r1);

        specialinvoke $r4.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r5);

        specialinvoke $r3.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>($r4, r2);

        specialinvoke r0.<java.io.PrintWriter: void <init>(java.io.Writer,boolean)>($r3, 0);

        return;
    }

    public void <init>(java.io.OutputStream)
    {
        java.io.PrintWriter r0;
        java.io.OutputStream r1;
        java.io.OutputStreamWriter $r2;

        r0 := @this: java.io.PrintWriter;

        r1 := @parameter0: java.io.OutputStream;

        $r2 = new java.io.OutputStreamWriter;

        specialinvoke $r2.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>(r1);

        specialinvoke r0.<java.io.PrintWriter: void <init>(java.io.Writer,boolean)>($r2, 0);

        return;
    }

    public void <init>(java.io.OutputStream, boolean)
    {
        java.io.PrintWriter r0;
        java.io.OutputStream r1;
        boolean z0;
        java.io.OutputStreamWriter $r2;

        r0 := @this: java.io.PrintWriter;

        r1 := @parameter0: java.io.OutputStream;

        z0 := @parameter1: boolean;

        $r2 = new java.io.OutputStreamWriter;

        specialinvoke $r2.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>(r1);

        specialinvoke r0.<java.io.PrintWriter: void <init>(java.io.Writer,boolean)>($r2, z0);

        return;
    }

    public void <init>(java.io.Writer)
    {
        java.io.PrintWriter r0;
        java.io.Writer r1;

        r0 := @this: java.io.PrintWriter;

        r1 := @parameter0: java.io.Writer;

        specialinvoke r0.<java.io.PrintWriter: void <init>(java.io.Writer,boolean)>(r1, 0);

        return;
    }

    public void <init>(java.io.Writer, boolean)
    {
        java.io.PrintWriter r0;
        java.io.Writer r1;
        boolean z0;

        r0 := @this: java.io.PrintWriter;

        r1 := @parameter0: java.io.Writer;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.io.Writer: void <init>(java.lang.Object)>(r1);

        r0.<java.io.PrintWriter: boolean autoFlush> = z0;

        r0.<java.io.PrintWriter: java.io.Writer out> = r1;

        return;
    }

    public void <init>(java.lang.String) throws java.io.FileNotFoundException
    {
        java.io.PrintWriter r0;
        java.lang.String r1;
        java.io.OutputStreamWriter $r2;
        java.io.BufferedOutputStream $r3;
        java.io.FileOutputStream $r4;

        r0 := @this: java.io.PrintWriter;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.io.OutputStreamWriter;

        $r3 = new java.io.BufferedOutputStream;

        $r4 = new java.io.FileOutputStream;

        specialinvoke $r4.<java.io.FileOutputStream: void <init>(java.lang.String)>(r1);

        specialinvoke $r3.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r4);

        specialinvoke $r2.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>($r3);

        specialinvoke r0.<java.io.PrintWriter: void <init>(java.io.Writer,boolean)>($r2, 0);

        return;
    }

    public void <init>(java.lang.String, java.lang.String) throws java.io.FileNotFoundException, java.io.UnsupportedEncodingException
    {
        java.io.PrintWriter r0;
        java.lang.String r1, r2;
        java.io.OutputStreamWriter $r3;
        java.io.BufferedOutputStream $r4;
        java.io.FileOutputStream $r5;

        r0 := @this: java.io.PrintWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = new java.io.OutputStreamWriter;

        $r4 = new java.io.BufferedOutputStream;

        $r5 = new java.io.FileOutputStream;

        specialinvoke $r5.<java.io.FileOutputStream: void <init>(java.lang.String)>(r1);

        specialinvoke $r4.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r5);

        specialinvoke $r3.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>($r4, r2);

        specialinvoke r0.<java.io.PrintWriter: void <init>(java.io.Writer,boolean)>($r3, 0);

        return;
    }

    private final void doWrite(char[], int, int)
    {
        java.io.PrintWriter r0;
        char[] r1;
        int i0, i1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r7;
        java.io.Writer r4, $r6;
        java.io.IOException $r8;

        r0 := @this: java.io.PrintWriter;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = r0.<java.io.PrintWriter: java.lang.Object lock>;

        entermonitor r2;

     label01:
        r4 = r0.<java.io.PrintWriter: java.io.Writer out>;

     label02:
        if r4 == null goto label12;

     label03:
        $r6 = r0.<java.io.PrintWriter: java.io.Writer out>;

        virtualinvoke $r6.<java.io.Writer: void write(char[],int,int)>(r1, i0, i1);

     label04:
        exitmonitor r2;

     label05:
        return;

     label06:
        $r8 := @caughtexception;

     label07:
        virtualinvoke r0.<java.io.PrintWriter: void setError()>();

     label08:
        goto label04;

     label09:
        $r7 := @caughtexception;

        r3 = $r7;

     label10:
        exitmonitor r2;

     label11:
        throw r3;

     label12:
        virtualinvoke r0.<java.io.PrintWriter: void setError()>();

     label13:
        goto label04;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.io.IOException from label03 to label04 with label06;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label12 to label13 with label09;
    }

    public java.io.PrintWriter append(char)
    {
        java.io.PrintWriter r0;
        char c0;

        r0 := @this: java.io.PrintWriter;

        c0 := @parameter0: char;

        virtualinvoke r0.<java.io.PrintWriter: void write(int)>(c0);

        return r0;
    }

    public java.io.PrintWriter append(java.lang.CharSequence)
    {
        java.io.PrintWriter r0;
        java.lang.CharSequence r1;
        int $i0;

        r0 := @this: java.io.PrintWriter;

        r1 := @parameter0: java.lang.CharSequence;

        if r1 != null goto label1;

        r1 = "null";

     label1:
        $i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        virtualinvoke r0.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence,int,int)>(r1, 0, $i0);

        return r0;
    }

    public java.io.PrintWriter append(java.lang.CharSequence, int, int)
    {
        java.io.PrintWriter r0;
        java.lang.CharSequence r1, $r3;
        int i0, i1, $i2;
        java.lang.String r2;

        r0 := @this: java.io.PrintWriter;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 != null goto label1;

        r1 = "null";

     label1:
        $r3 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(i0, i1);

        r2 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $i2 = virtualinvoke r2.<java.lang.String: int length()>();

        virtualinvoke r0.<java.io.PrintWriter: void write(java.lang.String,int,int)>(r2, 0, $i2);

        return r0;
    }

    public volatile java.io.Writer append(char) throws java.io.IOException
    {
        java.io.PrintWriter r0, $r1;
        char c0;

        r0 := @this: java.io.PrintWriter;

        c0 := @parameter0: char;

        $r1 = virtualinvoke r0.<java.io.PrintWriter: java.io.PrintWriter append(char)>(c0);

        return $r1;
    }

    public volatile java.io.Writer append(java.lang.CharSequence) throws java.io.IOException
    {
        java.io.PrintWriter r0, $r2;
        java.lang.CharSequence r1;

        r0 := @this: java.io.PrintWriter;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = virtualinvoke r0.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r1);

        return $r2;
    }

    public volatile java.io.Writer append(java.lang.CharSequence, int, int) throws java.io.IOException
    {
        java.io.PrintWriter r0, $r2;
        java.lang.CharSequence r1;
        int i0, i1;

        r0 := @this: java.io.PrintWriter;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = virtualinvoke r0.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence,int,int)>(r1, i0, i1);

        return $r2;
    }

    public volatile java.lang.Appendable append(char) throws java.io.IOException
    {
        java.io.PrintWriter r0, $r1;
        char c0;

        r0 := @this: java.io.PrintWriter;

        c0 := @parameter0: char;

        $r1 = virtualinvoke r0.<java.io.PrintWriter: java.io.PrintWriter append(char)>(c0);

        return $r1;
    }

    public volatile java.lang.Appendable append(java.lang.CharSequence) throws java.io.IOException
    {
        java.io.PrintWriter r0, $r2;
        java.lang.CharSequence r1;

        r0 := @this: java.io.PrintWriter;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = virtualinvoke r0.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r1);

        return $r2;
    }

    public volatile java.lang.Appendable append(java.lang.CharSequence, int, int) throws java.io.IOException
    {
        java.io.PrintWriter r0, $r2;
        java.lang.CharSequence r1;
        int i0, i1;

        r0 := @this: java.io.PrintWriter;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = virtualinvoke r0.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence,int,int)>(r1, i0, i1);

        return $r2;
    }

    public boolean checkError()
    {
        java.io.PrintWriter r0;
        java.io.Writer r1;
        boolean $z0, $z1, $z2;

        r0 := @this: java.io.PrintWriter;

        r1 = r0.<java.io.PrintWriter: java.io.Writer out>;

        if r1 != null goto label1;

        $z2 = r0.<java.io.PrintWriter: boolean ioError>;

        return $z2;

     label1:
        virtualinvoke r0.<java.io.PrintWriter: void flush()>();

        $z0 = r0.<java.io.PrintWriter: boolean ioError>;

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r1.<java.io.Writer: boolean checkError()>();

        if $z1 == 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    protected void clearError()
    {
        java.io.PrintWriter r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: java.io.PrintWriter;

        r1 = r0.<java.io.PrintWriter: java.lang.Object lock>;

        entermonitor r1;

     label1:
        r0.<java.io.PrintWriter: boolean ioError> = 0;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void close()
    {
        java.io.PrintWriter r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r7;
        java.io.Writer r3, $r5;
        java.io.IOException $r6;

        r0 := @this: java.io.PrintWriter;

        r1 = r0.<java.io.PrintWriter: java.lang.Object lock>;

        entermonitor r1;

     label01:
        r3 = r0.<java.io.PrintWriter: java.io.Writer out>;

     label02:
        if r3 == null goto label05;

     label03:
        $r5 = r0.<java.io.PrintWriter: java.io.Writer out>;

        virtualinvoke $r5.<java.io.Writer: void close()>();

     label04:
        r0.<java.io.PrintWriter: java.io.Writer out> = null;

     label05:
        exitmonitor r1;

     label06:
        return;

     label07:
        $r6 := @caughtexception;

     label08:
        virtualinvoke r0.<java.io.PrintWriter: void setError()>();

     label09:
        goto label04;

     label10:
        $r7 := @caughtexception;

        r2 = $r7;

     label11:
        exitmonitor r1;

     label12:
        throw r2;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.io.IOException from label03 to label04 with label07;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public void flush()
    {
        java.io.PrintWriter r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r6;
        java.io.Writer r3, $r5;
        java.io.IOException $r7;

        r0 := @this: java.io.PrintWriter;

        r1 = r0.<java.io.PrintWriter: java.lang.Object lock>;

        entermonitor r1;

     label01:
        r3 = r0.<java.io.PrintWriter: java.io.Writer out>;

     label02:
        if r3 == null goto label12;

     label03:
        $r5 = r0.<java.io.PrintWriter: java.io.Writer out>;

        virtualinvoke $r5.<java.io.Writer: void flush()>();

     label04:
        exitmonitor r1;

     label05:
        return;

     label06:
        $r7 := @caughtexception;

     label07:
        virtualinvoke r0.<java.io.PrintWriter: void setError()>();

     label08:
        goto label04;

     label09:
        $r6 := @caughtexception;

        r2 = $r6;

     label10:
        exitmonitor r1;

     label11:
        throw r2;

     label12:
        virtualinvoke r0.<java.io.PrintWriter: void setError()>();

     label13:
        goto label04;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.io.IOException from label03 to label04 with label06;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label12 to label13 with label09;
    }

    public transient java.io.PrintWriter format(java.lang.String, java.lang.Object[])
    {
        java.io.PrintWriter r0, $r4;
        java.lang.String r1;
        java.lang.Object[] r2;
        java.util.Locale $r3;

        r0 := @this: java.io.PrintWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r3 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r4 = virtualinvoke r0.<java.io.PrintWriter: java.io.PrintWriter format(java.util.Locale,java.lang.String,java.lang.Object[])>($r3, r1, r2);

        return $r4;
    }

    public transient java.io.PrintWriter format(java.util.Locale, java.lang.String, java.lang.Object[])
    {
        java.io.PrintWriter r0;
        java.util.Locale r1;
        java.lang.String r2;
        java.lang.Object[] r3;
        java.util.Formatter $r4;
        boolean $z0;
        java.lang.NullPointerException $r6;

        r0 := @this: java.io.PrintWriter;

        r1 := @parameter0: java.util.Locale;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        if r2 != null goto label1;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("format == null");

        throw $r6;

     label1:
        $r4 = new java.util.Formatter;

        specialinvoke $r4.<java.util.Formatter: void <init>(java.lang.Appendable,java.util.Locale)>(r0, r1);

        virtualinvoke $r4.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(r2, r3);

        $z0 = r0.<java.io.PrintWriter: boolean autoFlush>;

        if $z0 == 0 goto label2;

        virtualinvoke r0.<java.io.PrintWriter: void flush()>();

     label2:
        return r0;
    }

    public void print(char)
    {
        java.io.PrintWriter r0;
        char c0;
        java.lang.String $r1;

        r0 := @this: java.io.PrintWriter;

        c0 := @parameter0: char;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c0);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r1);

        return;
    }

    public void print(double)
    {
        java.io.PrintWriter r0;
        double d0;
        java.lang.String $r1;

        r0 := @this: java.io.PrintWriter;

        d0 := @parameter0: double;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>(d0);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r1);

        return;
    }

    public void print(float)
    {
        java.io.PrintWriter r0;
        float f0;
        java.lang.String $r1;

        r0 := @this: java.io.PrintWriter;

        f0 := @parameter0: float;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>(f0);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r1);

        return;
    }

    public void print(int)
    {
        java.io.PrintWriter r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: java.io.PrintWriter;

        i0 := @parameter0: int;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r1);

        return;
    }

    public void print(long)
    {
        java.io.PrintWriter r0;
        long l0;
        java.lang.String $r1;

        r0 := @this: java.io.PrintWriter;

        l0 := @parameter0: long;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l0);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r1);

        return;
    }

    public void print(java.lang.Object)
    {
        java.io.PrintWriter r0;
        java.lang.Object r1;
        java.lang.String $r2;

        r0 := @this: java.io.PrintWriter;

        r1 := @parameter0: java.lang.Object;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r2);

        return;
    }

    public void print(java.lang.String)
    {
        java.io.PrintWriter r0;
        java.lang.String r1;
        java.lang.Object $r2;

        r0 := @this: java.io.PrintWriter;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label2;

     label1:
        virtualinvoke r0.<java.io.PrintWriter: void write(java.lang.String)>(r1);

        return;

     label2:
        $r2 = (java.lang.Object) null;

        r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        goto label1;
    }

    public void print(boolean)
    {
        java.io.PrintWriter r0;
        boolean z0;
        java.lang.String $r1;

        r0 := @this: java.io.PrintWriter;

        z0 := @parameter0: boolean;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>(z0);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r1);

        return;
    }

    public void print(char[])
    {
        java.io.PrintWriter r0;
        char[] r1;
        java.lang.String $r2;
        int $i0;

        r0 := @this: java.io.PrintWriter;

        r1 := @parameter0: char[];

        $r2 = new java.lang.String;

        $i0 = lengthof r1;

        specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>(r1, 0, $i0);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r2);

        return;
    }

    public transient java.io.PrintWriter printf(java.lang.String, java.lang.Object[])
    {
        java.io.PrintWriter r0, $r3;
        java.lang.String r1;
        java.lang.Object[] r2;

        r0 := @this: java.io.PrintWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r3 = virtualinvoke r0.<java.io.PrintWriter: java.io.PrintWriter format(java.lang.String,java.lang.Object[])>(r1, r2);

        return $r3;
    }

    public transient java.io.PrintWriter printf(java.util.Locale, java.lang.String, java.lang.Object[])
    {
        java.io.PrintWriter r0, $r4;
        java.util.Locale r1;
        java.lang.String r2;
        java.lang.Object[] r3;

        r0 := @this: java.io.PrintWriter;

        r1 := @parameter0: java.util.Locale;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        $r4 = virtualinvoke r0.<java.io.PrintWriter: java.io.PrintWriter format(java.util.Locale,java.lang.String,java.lang.Object[])>(r1, r2, r3);

        return $r4;
    }

    public void println()
    {
        java.io.PrintWriter r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r4;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: java.io.PrintWriter;

        r1 = r0.<java.io.PrintWriter: java.lang.Object lock>;

        entermonitor r1;

     label1:
        $r3 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r3);

        $z0 = r0.<java.io.PrintWriter: boolean autoFlush>;

        if $z0 == 0 goto label2;

        virtualinvoke r0.<java.io.PrintWriter: void flush()>();

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r4 := @caughtexception;

        r2 = $r4;

     label5:
        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void println(char)
    {
        java.io.PrintWriter r0;
        char c0;
        java.lang.String $r1;

        r0 := @this: java.io.PrintWriter;

        c0 := @parameter0: char;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c0);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r1);

        return;
    }

    public void println(double)
    {
        java.io.PrintWriter r0;
        double d0;
        java.lang.String $r1;

        r0 := @this: java.io.PrintWriter;

        d0 := @parameter0: double;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>(d0);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r1);

        return;
    }

    public void println(float)
    {
        java.io.PrintWriter r0;
        float f0;
        java.lang.String $r1;

        r0 := @this: java.io.PrintWriter;

        f0 := @parameter0: float;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>(f0);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r1);

        return;
    }

    public void println(int)
    {
        java.io.PrintWriter r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: java.io.PrintWriter;

        i0 := @parameter0: int;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r1);

        return;
    }

    public void println(long)
    {
        java.io.PrintWriter r0;
        long l0;
        java.lang.String $r1;

        r0 := @this: java.io.PrintWriter;

        l0 := @parameter0: long;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l0);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r1);

        return;
    }

    public void println(java.lang.Object)
    {
        java.io.PrintWriter r0;
        java.lang.Object r1;
        java.lang.String $r2;

        r0 := @this: java.io.PrintWriter;

        r1 := @parameter0: java.lang.Object;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r2);

        return;
    }

    public void println(java.lang.String)
    {
        java.io.PrintWriter r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r4;

        r0 := @this: java.io.PrintWriter;

        r1 := @parameter0: java.lang.String;

        r2 = r0.<java.io.PrintWriter: java.lang.Object lock>;

        entermonitor r2;

     label1:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r0.<java.io.PrintWriter: void println()>();

        exitmonitor r2;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void println(boolean)
    {
        java.io.PrintWriter r0;
        boolean z0;
        java.lang.String $r1;

        r0 := @this: java.io.PrintWriter;

        z0 := @parameter0: boolean;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>(z0);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r1);

        return;
    }

    public void println(char[])
    {
        java.io.PrintWriter r0;
        char[] r1;
        java.lang.String $r2;
        int $i0;

        r0 := @this: java.io.PrintWriter;

        r1 := @parameter0: char[];

        $r2 = new java.lang.String;

        $i0 = lengthof r1;

        specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>(r1, 0, $i0);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r2);

        return;
    }

    protected void setError()
    {
        java.io.PrintWriter r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: java.io.PrintWriter;

        r1 = r0.<java.io.PrintWriter: java.lang.Object lock>;

        entermonitor r1;

     label1:
        r0.<java.io.PrintWriter: boolean ioError> = 1;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void write(int)
    {
        java.io.PrintWriter r0;
        int i0;
        char[] r1;
        char $c1;

        r0 := @this: java.io.PrintWriter;

        i0 := @parameter0: int;

        r1 = newarray (char)[1];

        $c1 = (char) i0;

        r1[0] = $c1;

        specialinvoke r0.<java.io.PrintWriter: void doWrite(char[],int,int)>(r1, 0, 1);

        return;
    }

    public void write(java.lang.String)
    {
        java.io.PrintWriter r0;
        java.lang.String r1;
        char[] $r2;

        r0 := @this: java.io.PrintWriter;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();

        virtualinvoke r0.<java.io.PrintWriter: void write(char[])>($r2);

        return;
    }

    public void write(java.lang.String, int, int)
    {
        java.io.PrintWriter r0;
        java.lang.String r1, $r2;
        int i0, i1, $i2;
        char[] $r3;

        r0 := @this: java.io.PrintWriter;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = i0 + i1;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i0, $i2);

        $r3 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        virtualinvoke r0.<java.io.PrintWriter: void write(char[])>($r3);

        return;
    }

    public void write(char[])
    {
        java.io.PrintWriter r0;
        char[] r1;
        int $i0;

        r0 := @this: java.io.PrintWriter;

        r1 := @parameter0: char[];

        $i0 = lengthof r1;

        virtualinvoke r0.<java.io.PrintWriter: void write(char[],int,int)>(r1, 0, $i0);

        return;
    }

    public void write(char[], int, int)
    {
        java.io.PrintWriter r0;
        char[] r1;
        int i0, i1;

        r0 := @this: java.io.PrintWriter;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.io.PrintWriter: void doWrite(char[],int,int)>(r1, i0, i1);

        return;
    }
}
