public final class org.apache.harmony.security.x509.IssuingDistributionPoint extends org.apache.harmony.security.x509.ExtensionValue
{
    public static final org.apache.harmony.security.asn1.ASN1Type ASN1;
    private org.apache.harmony.security.x509.DistributionPointName distributionPoint;
    private boolean indirectCRL;
    private boolean onlyContainsAttributeCerts;
    private boolean onlyContainsCACerts;
    private boolean onlyContainsUserCerts;
    private org.apache.harmony.security.x509.ReasonFlags onlySomeReasons;

    static void <clinit>()
    {
        org.apache.harmony.security.asn1.ASN1Type[] r0;
        org.apache.harmony.security.asn1.ASN1Explicit $r1;
        org.apache.harmony.security.asn1.ASN1Choice $r2;
        org.apache.harmony.security.asn1.ASN1Implicit $r3, $r5, $r7, $r9, $r10;
        org.apache.harmony.security.asn1.ASN1Boolean $r4, $r6, $r11, $r13;
        org.apache.harmony.security.asn1.ASN1BitString $r8;
        org.apache.harmony.security.x509.IssuingDistributionPoint$1 $r12;

        r0 = newarray (org.apache.harmony.security.asn1.ASN1Type)[6];

        $r1 = new org.apache.harmony.security.asn1.ASN1Explicit;

        $r2 = <org.apache.harmony.security.x509.DistributionPointName: org.apache.harmony.security.asn1.ASN1Choice ASN1>;

        specialinvoke $r1.<org.apache.harmony.security.asn1.ASN1Explicit: void <init>(int,org.apache.harmony.security.asn1.ASN1Type)>(0, $r2);

        r0[0] = $r1;

        $r3 = new org.apache.harmony.security.asn1.ASN1Implicit;

        $r4 = staticinvoke <org.apache.harmony.security.asn1.ASN1Boolean: org.apache.harmony.security.asn1.ASN1Boolean getInstance()>();

        specialinvoke $r3.<org.apache.harmony.security.asn1.ASN1Implicit: void <init>(int,org.apache.harmony.security.asn1.ASN1Type)>(1, $r4);

        r0[1] = $r3;

        $r5 = new org.apache.harmony.security.asn1.ASN1Implicit;

        $r6 = staticinvoke <org.apache.harmony.security.asn1.ASN1Boolean: org.apache.harmony.security.asn1.ASN1Boolean getInstance()>();

        specialinvoke $r5.<org.apache.harmony.security.asn1.ASN1Implicit: void <init>(int,org.apache.harmony.security.asn1.ASN1Type)>(2, $r6);

        r0[2] = $r5;

        $r7 = new org.apache.harmony.security.asn1.ASN1Implicit;

        $r8 = <org.apache.harmony.security.x509.ReasonFlags: org.apache.harmony.security.asn1.ASN1BitString ASN1>;

        specialinvoke $r7.<org.apache.harmony.security.asn1.ASN1Implicit: void <init>(int,org.apache.harmony.security.asn1.ASN1Type)>(3, $r8);

        r0[3] = $r7;

        $r9 = new org.apache.harmony.security.asn1.ASN1Implicit;

        $r11 = staticinvoke <org.apache.harmony.security.asn1.ASN1Boolean: org.apache.harmony.security.asn1.ASN1Boolean getInstance()>();

        specialinvoke $r9.<org.apache.harmony.security.asn1.ASN1Implicit: void <init>(int,org.apache.harmony.security.asn1.ASN1Type)>(4, $r11);

        r0[4] = $r9;

        $r10 = new org.apache.harmony.security.asn1.ASN1Implicit;

        $r13 = staticinvoke <org.apache.harmony.security.asn1.ASN1Boolean: org.apache.harmony.security.asn1.ASN1Boolean getInstance()>();

        specialinvoke $r10.<org.apache.harmony.security.asn1.ASN1Implicit: void <init>(int,org.apache.harmony.security.asn1.ASN1Type)>(5, $r13);

        r0[5] = $r10;

        $r12 = new org.apache.harmony.security.x509.IssuingDistributionPoint$1;

        specialinvoke $r12.<org.apache.harmony.security.x509.IssuingDistributionPoint$1: void <init>(org.apache.harmony.security.asn1.ASN1Type[])>(r0);

        <org.apache.harmony.security.x509.IssuingDistributionPoint: org.apache.harmony.security.asn1.ASN1Type ASN1> = $r12;

        return;
    }

    public void <init>(org.apache.harmony.security.x509.DistributionPointName, org.apache.harmony.security.x509.ReasonFlags)
    {
        org.apache.harmony.security.x509.IssuingDistributionPoint r0;
        org.apache.harmony.security.x509.DistributionPointName r1;
        org.apache.harmony.security.x509.ReasonFlags r2;

        r0 := @this: org.apache.harmony.security.x509.IssuingDistributionPoint;

        r1 := @parameter0: org.apache.harmony.security.x509.DistributionPointName;

        r2 := @parameter1: org.apache.harmony.security.x509.ReasonFlags;

        specialinvoke r0.<org.apache.harmony.security.x509.ExtensionValue: void <init>()>();

        r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: boolean onlyContainsUserCerts> = 0;

        r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: boolean onlyContainsCACerts> = 0;

        r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: boolean indirectCRL> = 0;

        r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: boolean onlyContainsAttributeCerts> = 0;

        r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: org.apache.harmony.security.x509.DistributionPointName distributionPoint> = r1;

        r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: org.apache.harmony.security.x509.ReasonFlags onlySomeReasons> = r2;

        return;
    }

    static org.apache.harmony.security.x509.DistributionPointName access$000(org.apache.harmony.security.x509.IssuingDistributionPoint)
    {
        org.apache.harmony.security.x509.IssuingDistributionPoint r0;
        org.apache.harmony.security.x509.DistributionPointName $r1;

        r0 := @parameter0: org.apache.harmony.security.x509.IssuingDistributionPoint;

        $r1 = r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: org.apache.harmony.security.x509.DistributionPointName distributionPoint>;

        return $r1;
    }

    static boolean access$100(org.apache.harmony.security.x509.IssuingDistributionPoint)
    {
        org.apache.harmony.security.x509.IssuingDistributionPoint r0;
        boolean $z0;

        r0 := @parameter0: org.apache.harmony.security.x509.IssuingDistributionPoint;

        $z0 = r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: boolean onlyContainsUserCerts>;

        return $z0;
    }

    static boolean access$200(org.apache.harmony.security.x509.IssuingDistributionPoint)
    {
        org.apache.harmony.security.x509.IssuingDistributionPoint r0;
        boolean $z0;

        r0 := @parameter0: org.apache.harmony.security.x509.IssuingDistributionPoint;

        $z0 = r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: boolean onlyContainsCACerts>;

        return $z0;
    }

    static org.apache.harmony.security.x509.ReasonFlags access$300(org.apache.harmony.security.x509.IssuingDistributionPoint)
    {
        org.apache.harmony.security.x509.IssuingDistributionPoint r0;
        org.apache.harmony.security.x509.ReasonFlags $r1;

        r0 := @parameter0: org.apache.harmony.security.x509.IssuingDistributionPoint;

        $r1 = r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: org.apache.harmony.security.x509.ReasonFlags onlySomeReasons>;

        return $r1;
    }

    static boolean access$400(org.apache.harmony.security.x509.IssuingDistributionPoint)
    {
        org.apache.harmony.security.x509.IssuingDistributionPoint r0;
        boolean $z0;

        r0 := @parameter0: org.apache.harmony.security.x509.IssuingDistributionPoint;

        $z0 = r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: boolean indirectCRL>;

        return $z0;
    }

    static boolean access$500(org.apache.harmony.security.x509.IssuingDistributionPoint)
    {
        org.apache.harmony.security.x509.IssuingDistributionPoint r0;
        boolean $z0;

        r0 := @parameter0: org.apache.harmony.security.x509.IssuingDistributionPoint;

        $z0 = r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: boolean onlyContainsAttributeCerts>;

        return $z0;
    }

    public static org.apache.harmony.security.x509.IssuingDistributionPoint decode(byte[]) throws java.io.IOException
    {
        byte[] r0;
        org.apache.harmony.security.x509.IssuingDistributionPoint r1;
        org.apache.harmony.security.asn1.ASN1Type $r2;
        java.lang.Object $r3;

        r0 := @parameter0: byte[];

        $r2 = <org.apache.harmony.security.x509.IssuingDistributionPoint: org.apache.harmony.security.asn1.ASN1Type ASN1>;

        $r3 = virtualinvoke $r2.<org.apache.harmony.security.asn1.ASN1Type: java.lang.Object decode(byte[])>(r0);

        r1 = (org.apache.harmony.security.x509.IssuingDistributionPoint) $r3;

        r1.<org.apache.harmony.security.x509.IssuingDistributionPoint: byte[] encoding> = r0;

        return r1;
    }

    public void dumpValue(java.lang.StringBuilder, java.lang.String)
    {
        org.apache.harmony.security.x509.IssuingDistributionPoint r0;
        java.lang.StringBuilder r1, $r3, $r6, $r7, $r8, $r10, $r11, $r12, $r14, $r16, $r18, $r19, $r20, $r21, $r22, $r24, $r27, $r28, $r29, $r30;
        java.lang.String r2, $r26, $r32;
        org.apache.harmony.security.x509.DistributionPointName $r5, $r31;
        boolean $z0, $z1, $z2, $z3;
        org.apache.harmony.security.x509.ReasonFlags $r15, $r25;

        r0 := @this: org.apache.harmony.security.x509.IssuingDistributionPoint;

        r1 := @parameter0: java.lang.StringBuilder;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Issuing Distribution Point: [\n");

        $r5 = r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: org.apache.harmony.security.x509.DistributionPointName distributionPoint>;

        if $r5 == null goto label1;

        $r31 = r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: org.apache.harmony.security.x509.DistributionPointName distributionPoint>;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r31.<org.apache.harmony.security.x509.DistributionPointName: void dumpValue(java.lang.StringBuilder,java.lang.String)>(r1, $r32);

     label1:
        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  onlyContainsUserCerts: ");

        $z0 = r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: boolean onlyContainsUserCerts>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r10 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  onlyContainsCACerts: ");

        $z1 = r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: boolean onlyContainsCACerts>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r15 = r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: org.apache.harmony.security.x509.ReasonFlags onlySomeReasons>;

        if $r15 == null goto label2;

        $r25 = r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: org.apache.harmony.security.x509.ReasonFlags onlySomeReasons>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r25.<org.apache.harmony.security.x509.ReasonFlags: void dumpValue(java.lang.StringBuilder,java.lang.String)>(r1, $r26);

     label2:
        $r14 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  indirectCRL: ");

        $z2 = r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: boolean indirectCRL>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r20 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  onlyContainsAttributeCerts: ");

        $z3 = r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: boolean onlyContainsAttributeCerts>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        return;
    }

    public byte[] getEncoded()
    {
        org.apache.harmony.security.x509.IssuingDistributionPoint r0;
        byte[] $r1, $r2, $r4;
        org.apache.harmony.security.asn1.ASN1Type $r3;

        r0 := @this: org.apache.harmony.security.x509.IssuingDistributionPoint;

        $r1 = r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: byte[] encoding>;

        if $r1 != null goto label1;

        $r3 = <org.apache.harmony.security.x509.IssuingDistributionPoint: org.apache.harmony.security.asn1.ASN1Type ASN1>;

        $r4 = virtualinvoke $r3.<org.apache.harmony.security.asn1.ASN1Type: byte[] encode(java.lang.Object)>(r0);

        r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: byte[] encoding> = $r4;

     label1:
        $r2 = r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: byte[] encoding>;

        return $r2;
    }

    public void setIndirectCRL(boolean)
    {
        org.apache.harmony.security.x509.IssuingDistributionPoint r0;
        boolean z0;

        r0 := @this: org.apache.harmony.security.x509.IssuingDistributionPoint;

        z0 := @parameter0: boolean;

        r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: boolean indirectCRL> = z0;

        return;
    }

    public void setOnlyContainsAttributeCerts(boolean)
    {
        org.apache.harmony.security.x509.IssuingDistributionPoint r0;
        boolean z0;

        r0 := @this: org.apache.harmony.security.x509.IssuingDistributionPoint;

        z0 := @parameter0: boolean;

        r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: boolean onlyContainsAttributeCerts> = z0;

        return;
    }

    public void setOnlyContainsCACerts(boolean)
    {
        org.apache.harmony.security.x509.IssuingDistributionPoint r0;
        boolean z0;

        r0 := @this: org.apache.harmony.security.x509.IssuingDistributionPoint;

        z0 := @parameter0: boolean;

        r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: boolean onlyContainsCACerts> = z0;

        return;
    }

    public void setOnlyContainsUserCerts(boolean)
    {
        org.apache.harmony.security.x509.IssuingDistributionPoint r0;
        boolean z0;

        r0 := @this: org.apache.harmony.security.x509.IssuingDistributionPoint;

        z0 := @parameter0: boolean;

        r0.<org.apache.harmony.security.x509.IssuingDistributionPoint: boolean onlyContainsUserCerts> = z0;

        return;
    }
}
