public abstract class javax.xml.parsers.DocumentBuilder extends java.lang.Object
{
    private static final boolean DEBUG;

    protected void <init>()
    {
        javax.xml.parsers.DocumentBuilder r0;

        r0 := @this: javax.xml.parsers.DocumentBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract org.w3c.dom.DOMImplementation getDOMImplementation();

    public javax.xml.validation.Schema getSchema()
    {
        javax.xml.parsers.DocumentBuilder r0;
        java.lang.UnsupportedOperationException $r1;
        java.lang.StringBuilder $r2, $r3, $r7, $r8, $r12, $r13;
        java.lang.Class $r4, $r9;
        java.lang.Package $r5, $r10;
        java.lang.String $r6, $r11, $r14;

        r0 := @this: javax.xml.parsers.DocumentBuilder;

        $r1 = new java.lang.UnsupportedOperationException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("This parser does not support specification \"");

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Package getPackage()>();

        $r6 = virtualinvoke $r5.<java.lang.Package: java.lang.String getSpecificationTitle()>();

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" version \"");

        $r9 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.Package getPackage()>();

        $r11 = virtualinvoke $r10.<java.lang.Package: java.lang.String getSpecificationVersion()>();

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r14);

        throw $r1;
    }

    public abstract boolean isNamespaceAware();

    public abstract boolean isValidating();

    public boolean isXIncludeAware()
    {
        javax.xml.parsers.DocumentBuilder r0;
        java.lang.UnsupportedOperationException $r1;
        java.lang.StringBuilder $r2, $r3, $r7, $r8, $r12, $r13;
        java.lang.Class $r4, $r9;
        java.lang.Package $r5, $r10;
        java.lang.String $r6, $r11, $r14;

        r0 := @this: javax.xml.parsers.DocumentBuilder;

        $r1 = new java.lang.UnsupportedOperationException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("This parser does not support specification \"");

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Package getPackage()>();

        $r6 = virtualinvoke $r5.<java.lang.Package: java.lang.String getSpecificationTitle()>();

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" version \"");

        $r9 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.Package getPackage()>();

        $r11 = virtualinvoke $r10.<java.lang.Package: java.lang.String getSpecificationVersion()>();

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r14);

        throw $r1;
    }

    public abstract org.w3c.dom.Document newDocument();

    public org.w3c.dom.Document parse(java.io.File) throws org.xml.sax.SAXException, java.io.IOException
    {
        javax.xml.parsers.DocumentBuilder r0;
        java.io.File r1;
        org.xml.sax.InputSource $r2;
        java.lang.String $r3, $r4;
        org.w3c.dom.Document $r5;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: javax.xml.parsers.DocumentBuilder;

        r1 := @parameter0: java.io.File;

        if r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File cannot be null");

        throw $r6;

     label1:
        $r2 = new org.xml.sax.InputSource;

        $r3 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();

        $r4 = staticinvoke <javax.xml.parsers.FilePathToURI: java.lang.String filepath2URI(java.lang.String)>($r3);

        specialinvoke $r2.<org.xml.sax.InputSource: void <init>(java.lang.String)>($r4);

        $r5 = virtualinvoke r0.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(org.xml.sax.InputSource)>($r2);

        return $r5;
    }

    public org.w3c.dom.Document parse(java.io.InputStream) throws org.xml.sax.SAXException, java.io.IOException
    {
        javax.xml.parsers.DocumentBuilder r0;
        java.io.InputStream r1;
        org.xml.sax.InputSource $r2;
        org.w3c.dom.Document $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: javax.xml.parsers.DocumentBuilder;

        r1 := @parameter0: java.io.InputStream;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("InputStream cannot be null");

        throw $r4;

     label1:
        $r2 = new org.xml.sax.InputSource;

        specialinvoke $r2.<org.xml.sax.InputSource: void <init>(java.io.InputStream)>(r1);

        $r3 = virtualinvoke r0.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(org.xml.sax.InputSource)>($r2);

        return $r3;
    }

    public org.w3c.dom.Document parse(java.io.InputStream, java.lang.String) throws org.xml.sax.SAXException, java.io.IOException
    {
        javax.xml.parsers.DocumentBuilder r0;
        java.io.InputStream r1;
        java.lang.String r2;
        org.xml.sax.InputSource r3, $r4;
        org.w3c.dom.Document $r5;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: javax.xml.parsers.DocumentBuilder;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.lang.String;

        if r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("InputStream cannot be null");

        throw $r6;

     label1:
        $r4 = new org.xml.sax.InputSource;

        specialinvoke $r4.<org.xml.sax.InputSource: void <init>(java.io.InputStream)>(r1);

        r3 = $r4;

        virtualinvoke r3.<org.xml.sax.InputSource: void setSystemId(java.lang.String)>(r2);

        $r5 = virtualinvoke r0.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(org.xml.sax.InputSource)>(r3);

        return $r5;
    }

    public org.w3c.dom.Document parse(java.lang.String) throws org.xml.sax.SAXException, java.io.IOException
    {
        javax.xml.parsers.DocumentBuilder r0;
        java.lang.String r1;
        org.xml.sax.InputSource $r2;
        org.w3c.dom.Document $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: javax.xml.parsers.DocumentBuilder;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("URI cannot be null");

        throw $r4;

     label1:
        $r2 = new org.xml.sax.InputSource;

        specialinvoke $r2.<org.xml.sax.InputSource: void <init>(java.lang.String)>(r1);

        $r3 = virtualinvoke r0.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(org.xml.sax.InputSource)>($r2);

        return $r3;
    }

    public abstract org.w3c.dom.Document parse(org.xml.sax.InputSource) throws org.xml.sax.SAXException, java.io.IOException;

    public void reset()
    {
        javax.xml.parsers.DocumentBuilder r0;
        java.lang.UnsupportedOperationException $r1;
        java.lang.StringBuilder $r2, $r3, $r6, $r7, $r8, $r12, $r13, $r14, $r18, $r19;
        java.lang.Class $r4, $r9, $r15;
        java.lang.String $r5, $r11, $r16, $r20;
        java.lang.Package $r10, $r17;

        r0 := @this: javax.xml.parsers.DocumentBuilder;

        $r1 = new java.lang.UnsupportedOperationException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("This DocumentBuilder, \"");

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\", does not support the reset functionality.");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Specification \"");

        $r9 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.Package getPackage()>();

        $r11 = virtualinvoke $r10.<java.lang.Package: java.lang.String getSpecificationTitle()>();

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" version \"");

        $r15 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r17 = virtualinvoke $r15.<java.lang.Class: java.lang.Package getPackage()>();

        $r16 = virtualinvoke $r17.<java.lang.Package: java.lang.String getSpecificationVersion()>();

        $r19 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r20);

        throw $r1;
    }

    public abstract void setEntityResolver(org.xml.sax.EntityResolver);

    public abstract void setErrorHandler(org.xml.sax.ErrorHandler);
}
