public final class org.apache.harmony.security.pkcs10.CertificationRequestInfo extends java.lang.Object
{
    public static final org.apache.harmony.security.asn1.ASN1Sequence ASN1;
    private final java.util.List attributes;
    private byte[] encoding;
    private final org.apache.harmony.security.x501.Name subject;
    private final org.apache.harmony.security.x509.SubjectPublicKeyInfo subjectPublicKeyInfo;
    private final int version;

    static void <clinit>()
    {
        org.apache.harmony.security.asn1.ASN1Type[] r0;
        org.apache.harmony.security.asn1.ASN1Integer $r1;
        org.apache.harmony.security.asn1.ASN1SequenceOf $r2;
        org.apache.harmony.security.asn1.ASN1Sequence $r3, $r6;
        org.apache.harmony.security.asn1.ASN1Implicit $r4;
        org.apache.harmony.security.asn1.ASN1SetOf $r5;
        org.apache.harmony.security.pkcs10.CertificationRequestInfo$1 $r7;

        r0 = newarray (org.apache.harmony.security.asn1.ASN1Type)[4];

        $r1 = staticinvoke <org.apache.harmony.security.asn1.ASN1Integer: org.apache.harmony.security.asn1.ASN1Integer getInstance()>();

        r0[0] = $r1;

        $r2 = <org.apache.harmony.security.x501.Name: org.apache.harmony.security.asn1.ASN1SequenceOf ASN1>;

        r0[1] = $r2;

        $r3 = <org.apache.harmony.security.x509.SubjectPublicKeyInfo: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        r0[2] = $r3;

        $r4 = new org.apache.harmony.security.asn1.ASN1Implicit;

        $r5 = new org.apache.harmony.security.asn1.ASN1SetOf;

        $r6 = <org.apache.harmony.security.x501.AttributeTypeAndValue: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        specialinvoke $r5.<org.apache.harmony.security.asn1.ASN1SetOf: void <init>(org.apache.harmony.security.asn1.ASN1Type)>($r6);

        specialinvoke $r4.<org.apache.harmony.security.asn1.ASN1Implicit: void <init>(int,org.apache.harmony.security.asn1.ASN1Type)>(0, $r5);

        r0[3] = $r4;

        $r7 = new org.apache.harmony.security.pkcs10.CertificationRequestInfo$1;

        specialinvoke $r7.<org.apache.harmony.security.pkcs10.CertificationRequestInfo$1: void <init>(org.apache.harmony.security.asn1.ASN1Type[])>(r0);

        <org.apache.harmony.security.pkcs10.CertificationRequestInfo: org.apache.harmony.security.asn1.ASN1Sequence ASN1> = $r7;

        return;
    }

    private void <init>(int, org.apache.harmony.security.x501.Name, org.apache.harmony.security.x509.SubjectPublicKeyInfo, java.util.List, byte[])
    {
        org.apache.harmony.security.pkcs10.CertificationRequestInfo r0;
        int i0;
        org.apache.harmony.security.x501.Name r1;
        org.apache.harmony.security.x509.SubjectPublicKeyInfo r2;
        java.util.List r3;
        byte[] r4;

        r0 := @this: org.apache.harmony.security.pkcs10.CertificationRequestInfo;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.harmony.security.x501.Name;

        r2 := @parameter2: org.apache.harmony.security.x509.SubjectPublicKeyInfo;

        r3 := @parameter3: java.util.List;

        r4 := @parameter4: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.harmony.security.pkcs10.CertificationRequestInfo: int version> = i0;

        r0.<org.apache.harmony.security.pkcs10.CertificationRequestInfo: org.apache.harmony.security.x501.Name subject> = r1;

        r0.<org.apache.harmony.security.pkcs10.CertificationRequestInfo: org.apache.harmony.security.x509.SubjectPublicKeyInfo subjectPublicKeyInfo> = r2;

        r0.<org.apache.harmony.security.pkcs10.CertificationRequestInfo: java.util.List attributes> = r3;

        r0.<org.apache.harmony.security.pkcs10.CertificationRequestInfo: byte[] encoding> = r4;

        return;
    }

    void <init>(int, org.apache.harmony.security.x501.Name, org.apache.harmony.security.x509.SubjectPublicKeyInfo, java.util.List, byte[], org.apache.harmony.security.pkcs10.CertificationRequestInfo$1)
    {
        org.apache.harmony.security.pkcs10.CertificationRequestInfo r0;
        int i0;
        org.apache.harmony.security.x501.Name r1;
        org.apache.harmony.security.x509.SubjectPublicKeyInfo r2;
        java.util.List r3;
        byte[] r4;
        org.apache.harmony.security.pkcs10.CertificationRequestInfo$1 r5;

        r0 := @this: org.apache.harmony.security.pkcs10.CertificationRequestInfo;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.harmony.security.x501.Name;

        r2 := @parameter2: org.apache.harmony.security.x509.SubjectPublicKeyInfo;

        r3 := @parameter3: java.util.List;

        r4 := @parameter4: byte[];

        r5 := @parameter5: org.apache.harmony.security.pkcs10.CertificationRequestInfo$1;

        specialinvoke r0.<org.apache.harmony.security.pkcs10.CertificationRequestInfo: void <init>(int,org.apache.harmony.security.x501.Name,org.apache.harmony.security.x509.SubjectPublicKeyInfo,java.util.List,byte[])>(i0, r1, r2, r3, r4);

        return;
    }

    static int access$100(org.apache.harmony.security.pkcs10.CertificationRequestInfo)
    {
        org.apache.harmony.security.pkcs10.CertificationRequestInfo r0;
        int $i0;

        r0 := @parameter0: org.apache.harmony.security.pkcs10.CertificationRequestInfo;

        $i0 = r0.<org.apache.harmony.security.pkcs10.CertificationRequestInfo: int version>;

        return $i0;
    }

    static org.apache.harmony.security.x501.Name access$200(org.apache.harmony.security.pkcs10.CertificationRequestInfo)
    {
        org.apache.harmony.security.pkcs10.CertificationRequestInfo r0;
        org.apache.harmony.security.x501.Name $r1;

        r0 := @parameter0: org.apache.harmony.security.pkcs10.CertificationRequestInfo;

        $r1 = r0.<org.apache.harmony.security.pkcs10.CertificationRequestInfo: org.apache.harmony.security.x501.Name subject>;

        return $r1;
    }

    static org.apache.harmony.security.x509.SubjectPublicKeyInfo access$300(org.apache.harmony.security.pkcs10.CertificationRequestInfo)
    {
        org.apache.harmony.security.pkcs10.CertificationRequestInfo r0;
        org.apache.harmony.security.x509.SubjectPublicKeyInfo $r1;

        r0 := @parameter0: org.apache.harmony.security.pkcs10.CertificationRequestInfo;

        $r1 = r0.<org.apache.harmony.security.pkcs10.CertificationRequestInfo: org.apache.harmony.security.x509.SubjectPublicKeyInfo subjectPublicKeyInfo>;

        return $r1;
    }

    static java.util.List access$400(org.apache.harmony.security.pkcs10.CertificationRequestInfo)
    {
        org.apache.harmony.security.pkcs10.CertificationRequestInfo r0;
        java.util.List $r1;

        r0 := @parameter0: org.apache.harmony.security.pkcs10.CertificationRequestInfo;

        $r1 = r0.<org.apache.harmony.security.pkcs10.CertificationRequestInfo: java.util.List attributes>;

        return $r1;
    }

    public byte[] getEncoded()
    {
        org.apache.harmony.security.pkcs10.CertificationRequestInfo r0;
        byte[] $r1, $r2, $r4;
        org.apache.harmony.security.asn1.ASN1Sequence $r3;

        r0 := @this: org.apache.harmony.security.pkcs10.CertificationRequestInfo;

        $r1 = r0.<org.apache.harmony.security.pkcs10.CertificationRequestInfo: byte[] encoding>;

        if $r1 != null goto label1;

        $r3 = <org.apache.harmony.security.pkcs10.CertificationRequestInfo: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        $r4 = virtualinvoke $r3.<org.apache.harmony.security.asn1.ASN1Sequence: byte[] encode(java.lang.Object)>(r0);

        r0.<org.apache.harmony.security.pkcs10.CertificationRequestInfo: byte[] encoding> = $r4;

     label1:
        $r2 = r0.<org.apache.harmony.security.pkcs10.CertificationRequestInfo: byte[] encoding>;

        return $r2;
    }

    public org.apache.harmony.security.x501.Name getSubject()
    {
        org.apache.harmony.security.pkcs10.CertificationRequestInfo r0;
        org.apache.harmony.security.x501.Name $r1;

        r0 := @this: org.apache.harmony.security.pkcs10.CertificationRequestInfo;

        $r1 = r0.<org.apache.harmony.security.pkcs10.CertificationRequestInfo: org.apache.harmony.security.x501.Name subject>;

        return $r1;
    }

    public int getVersion()
    {
        org.apache.harmony.security.pkcs10.CertificationRequestInfo r0;
        int $i0;

        r0 := @this: org.apache.harmony.security.pkcs10.CertificationRequestInfo;

        $i0 = r0.<org.apache.harmony.security.pkcs10.CertificationRequestInfo: int version>;

        return $i0;
    }

    public java.lang.String toString()
    {
        org.apache.harmony.security.pkcs10.CertificationRequestInfo r0;
        java.lang.StringBuilder r1, $r2, $r15;
        int $i0;
        org.apache.harmony.security.x501.Name $r7;
        java.lang.String $r8, $r14, $r23, $r25;
        org.apache.harmony.security.x509.SubjectPublicKeyInfo $r12, $r18;
        org.apache.harmony.security.x509.AlgorithmIdentifier $r13;
        java.security.PublicKey $r17;
        java.util.List $r22, $r26;

        r0 := @this: org.apache.harmony.security.pkcs10.CertificationRequestInfo;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-- CertificationRequestInfo:");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n version: ");

        $i0 = r0.<org.apache.harmony.security.pkcs10.CertificationRequestInfo: int version>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n subject: ");

        $r7 = r0.<org.apache.harmony.security.pkcs10.CertificationRequestInfo: org.apache.harmony.security.x501.Name subject>;

        $r8 = virtualinvoke $r7.<org.apache.harmony.security.x501.Name: java.lang.String getName(java.lang.String)>("CANONICAL");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n subjectPublicKeyInfo: ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\t algorithm: ");

        $r12 = r0.<org.apache.harmony.security.pkcs10.CertificationRequestInfo: org.apache.harmony.security.x509.SubjectPublicKeyInfo subjectPublicKeyInfo>;

        $r13 = virtualinvoke $r12.<org.apache.harmony.security.x509.SubjectPublicKeyInfo: org.apache.harmony.security.x509.AlgorithmIdentifier getAlgorithmIdentifier()>();

        $r14 = virtualinvoke $r13.<org.apache.harmony.security.x509.AlgorithmIdentifier: java.lang.String getAlgorithm()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r15 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\t public key: ");

        $r18 = r0.<org.apache.harmony.security.pkcs10.CertificationRequestInfo: org.apache.harmony.security.x509.SubjectPublicKeyInfo subjectPublicKeyInfo>;

        $r17 = virtualinvoke $r18.<org.apache.harmony.security.x509.SubjectPublicKeyInfo: java.security.PublicKey getPublicKey()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n attributes: ");

        $r22 = r0.<org.apache.harmony.security.pkcs10.CertificationRequestInfo: java.util.List attributes>;

        if $r22 == null goto label2;

        $r26 = r0.<org.apache.harmony.security.pkcs10.CertificationRequestInfo: java.util.List attributes>;

        $r25 = virtualinvoke $r26.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

     label1:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n-- CertificationRequestInfo End\n");

        $r23 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r23;

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("none");

        goto label1;
    }
}
