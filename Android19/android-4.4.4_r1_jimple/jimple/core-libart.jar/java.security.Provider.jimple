public abstract class java.security.Provider extends java.util.Properties
{
    private static final long serialVersionUID;
    private transient java.util.LinkedHashMap aliasTable;
    private transient java.util.LinkedHashMap changedProperties;
    private java.lang.String info;
    private transient java.lang.String lastAlgorithm;
    private transient java.lang.String lastServiceName;
    private transient java.security.Provider$Service lastServicesByType;
    private transient java.util.Set lastServicesSet;
    private transient java.lang.String lastType;
    private java.lang.String name;
    private transient java.util.LinkedHashMap propertyAliasTable;
    private transient java.util.LinkedHashMap propertyServiceTable;
    private transient int providerNumber;
    private transient java.security.Provider$Service returnedService;
    private transient java.util.LinkedHashMap serviceTable;
    private double version;
    private transient java.lang.String versionString;

    protected void <init>(java.lang.String, double, java.lang.String)
    {
        java.security.Provider r0;
        java.lang.String r1, r2, $r3;
        double d0;

        r0 := @this: java.security.Provider;

        r1 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<java.util.Properties: void <init>()>();

        r0.<java.security.Provider: int providerNumber> = -1;

        r0.<java.security.Provider: java.lang.String name> = r1;

        r0.<java.security.Provider: double version> = d0;

        r0.<java.security.Provider: java.lang.String info> = r2;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>(d0);

        r0.<java.security.Provider: java.lang.String versionString> = $r3;

        specialinvoke r0.<java.security.Provider: void putProviderInfo()>();

        return;
    }

    private boolean checkAttribute(java.lang.String, java.lang.String, java.lang.String)
    {
        java.security.Provider r0;
        java.lang.String r1, r2, r3, r4, $r9;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        boolean $z0, $z1;
        int $i0, $i1;

        r0 := @this: java.security.Provider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r4 = specialinvoke r0.<java.security.Provider: java.lang.String getPropertyIgnoreCase(java.lang.String)>($r9);

        if r4 == null goto label3;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("KeySize");

        if $z0 == 0 goto label2;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r4);

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

        if $i0 < $i1 goto label3;

     label1:
        return 1;

     label2:
        $z1 = virtualinvoke r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r3);

        if $z1 != 0 goto label1;

     label3:
        return 0;
    }

    private java.lang.String getPropertyIgnoreCase(java.lang.String)
    {
        java.security.Provider r0;
        java.lang.String r1, r2, r4, $r6;
        java.util.Enumeration r3;
        boolean $z0, $z1;
        java.lang.Object $r5;

        r0 := @this: java.security.Provider;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<java.security.Provider: java.lang.String getProperty(java.lang.String)>(r1);

        if r2 == null goto label1;

        return r2;

     label1:
        r3 = virtualinvoke r0.<java.security.Provider: java.util.Enumeration propertyNames()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r3.<java.util.Enumeration: java.lang.Object nextElement()>();

        r4 = (java.lang.String) $r5;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r4);

        if $z1 == 0 goto label2;

        $r6 = virtualinvoke r0.<java.security.Provider: java.lang.String getProperty(java.lang.String)>(r4);

        return $r6;

     label3:
        return null;
    }

    private static java.lang.String key(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r6, $r8;
        java.lang.StringBuilder $r2, $r3, $r4, $r7;
        java.util.Locale $r5;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r5 = <java.util.Locale: java.util.Locale US>;

        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r5);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    private void myPutAll(java.util.Map)
    {
        java.security.Provider r0;
        java.util.Map r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.lang.Object r4, r5, $r8, $r10;
        java.util.LinkedHashMap $r6, $r11, $r13, $r15;
        java.util.Set $r7;
        boolean $z0, $z1, $z2;
        int $i0;
        java.lang.String $r14;

        r0 := @this: java.security.Provider;

        r1 := @parameter0: java.util.Map;

        $r6 = r0.<java.security.Provider: java.util.LinkedHashMap changedProperties>;

        if $r6 != null goto label1;

        $r15 = new java.util.LinkedHashMap;

        specialinvoke $r15.<java.util.LinkedHashMap: void <init>()>();

        r0.<java.security.Provider: java.util.LinkedHashMap changedProperties> = $r15;

     label1:
        $r7 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r8;

        r4 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z1 = r4 instanceof java.lang.String;

        if $z1 == 0 goto label3;

        $r14 = (java.lang.String) r4;

        $z2 = virtualinvoke $r14.<java.lang.String: boolean startsWith(java.lang.String)>("Provider.");

        if $z2 != 0 goto label2;

     label3:
        r5 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        specialinvoke r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r5);

        $r11 = r0.<java.security.Provider: java.util.LinkedHashMap changedProperties>;

        $r10 = virtualinvoke $r11.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>(r4);

        if $r10 != null goto label4;

        specialinvoke r0.<java.security.Provider: void removeFromPropertyServiceTable(java.lang.Object)>(r4);

     label4:
        $r13 = r0.<java.security.Provider: java.util.LinkedHashMap changedProperties>;

        virtualinvoke $r13.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r5);

        goto label2;

     label5:
        $i0 = r0.<java.security.Provider: int providerNumber>;

        if $i0 == -1 goto label6;

        staticinvoke <org.apache.harmony.security.fortress.Services: void setNeedRefresh()>();

     label6:
        return;
    }

    private void putProviderInfo()
    {
        java.security.Provider r0;
        java.lang.String r1, r2, $r3, $r5, $r7, $r10;
        java.lang.Class $r9;

        r0 := @this: java.security.Provider;

        $r3 = r0.<java.security.Provider: java.lang.String name>;

        if $r3 == null goto label3;

        r1 = r0.<java.security.Provider: java.lang.String name>;

     label1:
        specialinvoke r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("Provider.id name", r1);

        $r5 = r0.<java.security.Provider: java.lang.String versionString>;

        specialinvoke r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("Provider.id version", $r5);

        $r7 = r0.<java.security.Provider: java.lang.String info>;

        if $r7 == null goto label4;

        r2 = r0.<java.security.Provider: java.lang.String info>;

     label2:
        specialinvoke r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("Provider.id info", r2);

        $r9 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        specialinvoke r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("Provider.id className", $r10);

        return;

     label3:
        r1 = "null";

        goto label1;

     label4:
        r2 = "null";

        goto label2;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.NotActiveException, java.io.IOException, java.lang.ClassNotFoundException
    {
        java.security.Provider r0;
        java.io.ObjectInputStream r1;
        double $d0;
        java.lang.String $r2;

        r0 := @this: java.security.Provider;

        r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        $d0 = r0.<java.security.Provider: double version>;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>($d0);

        r0.<java.security.Provider: java.lang.String versionString> = $r2;

        r0.<java.security.Provider: int providerNumber> = -1;

        return;
    }

    private void removeFromPropertyServiceTable(java.lang.Object)
    {
        java.security.Provider r0;
        java.lang.Object r1, r6, $r28, $r29, $r40;
        java.lang.String r2, r3, r4, r5, r7, r8, r11, r12, r13, r14, $r17, $r27, $r32, $r42;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        java.security.Provider$Service r9, r15, $r21;
        java.util.Iterator r10, r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z6;
        java.util.LinkedHashMap $r18, $r19, $r23, $r24, $r25, $r33, $r35, $r36, $r37, $r39;
        java.util.Map $r22;
        java.util.List $r26, $r30, $r38, $r41;
        java.util.Collection $r34;

        r0 := @this: java.security.Provider;

        r1 := @parameter0: java.lang.Object;

        if r1 == null goto label1;

        $z1 = r1 instanceof java.lang.String;

        if $z1 != 0 goto label2;

     label1:
        return;

     label2:
        r2 = (java.lang.String) r1;

        $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("Provider.");

        if $z0 != 0 goto label1;

        $z2 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("Alg.Alias.");

        if $z2 == 0 goto label5;

        r12 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(10);

        i2 = virtualinvoke r12.<java.lang.String: int indexOf(int)>(46);

        r14 = virtualinvoke r12.<java.lang.String: java.lang.String substring(int,int)>(0, i2);

        $i6 = i2 + 1;

        r13 = virtualinvoke r12.<java.lang.String: java.lang.String substring(int)>($i6);

        $r37 = r0.<java.security.Provider: java.util.LinkedHashMap propertyAliasTable>;

        if $r37 == null goto label3;

        $r39 = r0.<java.security.Provider: java.util.LinkedHashMap propertyAliasTable>;

        $r42 = staticinvoke <java.security.Provider: java.lang.String key(java.lang.String,java.lang.String)>(r14, r13);

        virtualinvoke $r39.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>($r42);

     label3:
        $r36 = r0.<java.security.Provider: java.util.LinkedHashMap propertyServiceTable>;

        if $r36 == null goto label1;

        $r35 = r0.<java.security.Provider: java.util.LinkedHashMap propertyServiceTable>;

        $r34 = virtualinvoke $r35.<java.util.LinkedHashMap: java.util.Collection values()>();

        r16 = interfaceinvoke $r34.<java.util.Collection: java.util.Iterator iterator()>();

     label4:
        $z6 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label1;

        $r40 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        r15 = (java.security.Provider$Service) $r40;

        $r41 = staticinvoke <java.security.Provider$Service: java.util.List access$200(java.security.Provider$Service)>(r15);

        $z4 = interfaceinvoke $r41.<java.util.List: boolean contains(java.lang.Object)>(r13);

        if $z4 == 0 goto label4;

        $r38 = staticinvoke <java.security.Provider$Service: java.util.List access$200(java.security.Provider$Service)>(r15);

        interfaceinvoke $r38.<java.util.List: boolean remove(java.lang.Object)>(r13);

        return;

     label5:
        i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(46);

        if i0 == -1 goto label1;

        i1 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(32);

        if i1 != -1 goto label7;

        r7 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $i5 = i0 + 1;

        r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i5);

        $r23 = r0.<java.security.Provider: java.util.LinkedHashMap propertyServiceTable>;

        if $r23 == null goto label1;

        $r24 = r0.<java.security.Provider: java.util.LinkedHashMap propertyServiceTable>;

        $r27 = staticinvoke <java.security.Provider: java.lang.String key(java.lang.String,java.lang.String)>(r7, r8);

        $r28 = virtualinvoke $r24.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>($r27);

        r9 = (java.security.Provider$Service) $r28;

        if r9 == null goto label1;

        $r25 = r0.<java.security.Provider: java.util.LinkedHashMap propertyAliasTable>;

        if $r25 == null goto label1;

        $r26 = staticinvoke <java.security.Provider$Service: java.util.List access$200(java.security.Provider$Service)>(r9);

        if $r26 == null goto label1;

        $r30 = staticinvoke <java.security.Provider$Service: java.util.List access$200(java.security.Provider$Service)>(r9);

        r10 = interfaceinvoke $r30.<java.util.List: java.util.Iterator iterator()>();

     label6:
        $z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label1;

        $r29 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.lang.String) $r29;

        $r33 = r0.<java.security.Provider: java.util.LinkedHashMap propertyAliasTable>;

        $r32 = staticinvoke <java.security.Provider: java.lang.String key(java.lang.String,java.lang.String)>(r7, r11);

        virtualinvoke $r33.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>($r32);

        goto label6;

     label7:
        $i3 = i1 + 1;

        r3 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3);

        r4 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $i4 = i0 + 1;

        r5 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>($i4, i1);

        $r18 = r0.<java.security.Provider: java.util.LinkedHashMap propertyServiceTable>;

        if $r18 == null goto label1;

        $r19 = r0.<java.security.Provider: java.util.LinkedHashMap propertyServiceTable>;

        $r17 = staticinvoke <java.security.Provider: java.lang.String key(java.lang.String,java.lang.String)>(r4, r5);

        r6 = virtualinvoke $r19.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>($r17);

        if r6 == null goto label1;

        $r21 = (java.security.Provider$Service) r6;

        $r22 = staticinvoke <java.security.Provider$Service: java.util.Map access$400(java.security.Provider$Service)>($r21);

        interfaceinvoke $r22.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r3);

        return;
    }

    private void serviceInfoFromProperties(java.security.Provider$Service)
    {
        java.security.Provider r0;
        java.security.Provider$Service r1;
        java.util.Iterator r2, r4;
        java.util.Map$Entry r3;
        java.lang.StringBuilder $r5, $r7, $r8, $r10, $r17, $r19, $r22, $r23, $r24, $r29, $r31, $r32, $r33, $r36, $r40;
        java.lang.String $r6, $r9, $r11, $r20, $r21, $r25, $r30, $r35, $r37, $r39;
        java.util.List $r13, $r28;
        int $i0;
        java.util.Map $r14, $r16;
        java.util.Set $r15;
        boolean $z0, $z1;
        java.lang.Object $r18, $r26, $r34;

        r0 := @this: java.security.Provider;

        r1 := @parameter0: java.security.Provider$Service;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = staticinvoke <java.security.Provider$Service: java.lang.String access$000(java.security.Provider$Service)>(r1);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r9 = staticinvoke <java.security.Provider$Service: java.lang.String access$100(java.security.Provider$Service)>(r1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.util.Properties: java.lang.Object remove(java.lang.Object)>($r11);

        $r13 = staticinvoke <java.security.Provider$Service: java.util.List access$200(java.security.Provider$Service)>(r1);

        if $r13 == null goto label2;

        $r28 = staticinvoke <java.security.Provider$Service: java.util.List access$200(java.security.Provider$Service)>(r1);

        r4 = interfaceinvoke $r28.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Alg.Alias.");

        $r35 = staticinvoke <java.security.Provider$Service: java.lang.String access$000(java.security.Provider$Service)>(r1);

        $r36 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r33 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r34 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r39 = (java.lang.String) $r34;

        $r40 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r37 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.util.Properties: java.lang.Object remove(java.lang.Object)>($r37);

        goto label1;

     label2:
        $r14 = staticinvoke <java.security.Provider$Service: java.util.Map access$400(java.security.Provider$Service)>(r1);

        if $r14 == null goto label4;

        $r16 = staticinvoke <java.security.Provider$Service: java.util.Map access$400(java.security.Provider$Service)>(r1);

        $r15 = interfaceinvoke $r16.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r18 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r18;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r20 = staticinvoke <java.security.Provider$Service: java.lang.String access$000(java.security.Provider$Service)>(r1);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r21 = staticinvoke <java.security.Provider$Service: java.lang.String access$100(java.security.Provider$Service)>(r1);

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r26 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r25 = (java.lang.String) $r26;

        $r29 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.util.Properties: java.lang.Object remove(java.lang.Object)>($r30);

        goto label3;

     label4:
        $i0 = r0.<java.security.Provider: int providerNumber>;

        if $i0 == -1 goto label5;

        staticinvoke <org.apache.harmony.security.fortress.Services: void setNeedRefresh()>();

     label5:
        return;
    }

    private void serviceInfoToProperties(java.security.Provider$Service)
    {
        java.security.Provider r0;
        java.security.Provider$Service r1;
        java.util.Iterator r2, r4;
        java.util.Map$Entry r3;
        java.lang.StringBuilder $r5, $r7, $r8, $r10, $r20, $r21, $r22, $r23, $r26, $r30, $r34, $r35, $r36, $r38, $r39;
        java.lang.String $r6, $r9, $r11, $r12, $r19, $r24, $r27, $r29, $r33, $r37, $r42, $r43;
        java.util.Map $r14, $r16;
        java.util.List $r15, $r32;
        int $i0;
        java.util.Set $r17;
        java.lang.Object $r18, $r25, $r28, $r40;
        boolean $z0, $z1;

        r0 := @this: java.security.Provider;

        r1 := @parameter0: java.security.Provider$Service;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = staticinvoke <java.security.Provider$Service: java.lang.String access$000(java.security.Provider$Service)>(r1);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r9 = staticinvoke <java.security.Provider$Service: java.lang.String access$100(java.security.Provider$Service)>(r1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = staticinvoke <java.security.Provider$Service: java.lang.String access$300(java.security.Provider$Service)>(r1);

        specialinvoke r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r12);

        $r15 = staticinvoke <java.security.Provider$Service: java.util.List access$200(java.security.Provider$Service)>(r1);

        if $r15 == null goto label2;

        $r32 = staticinvoke <java.security.Provider$Service: java.util.List access$200(java.security.Provider$Service)>(r1);

        r4 = interfaceinvoke $r32.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Alg.Alias.");

        $r33 = staticinvoke <java.security.Provider$Service: java.lang.String access$000(java.security.Provider$Service)>(r1);

        $r34 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r39 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r40 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r37 = (java.lang.String) $r40;

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r43 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        $r42 = staticinvoke <java.security.Provider$Service: java.lang.String access$100(java.security.Provider$Service)>(r1);

        specialinvoke r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>($r43, $r42);

        goto label1;

     label2:
        $r14 = staticinvoke <java.security.Provider$Service: java.util.Map access$400(java.security.Provider$Service)>(r1);

        if $r14 == null goto label4;

        $r16 = staticinvoke <java.security.Provider$Service: java.util.Map access$400(java.security.Provider$Service)>(r1);

        $r17 = interfaceinvoke $r16.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r18 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r18;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = staticinvoke <java.security.Provider$Service: java.lang.String access$000(java.security.Provider$Service)>(r1);

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r24 = staticinvoke <java.security.Provider$Service: java.lang.String access$100(java.security.Provider$Service)>(r1);

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r25 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r29 = (java.lang.String) $r25;

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r27 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        $r28 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        specialinvoke r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>($r27, $r28);

        goto label3;

     label4:
        $i0 = r0.<java.security.Provider: int providerNumber>;

        if $i0 == -1 goto label5;

        staticinvoke <org.apache.harmony.security.fortress.Services: void setNeedRefresh()>();

     label5:
        return;
    }

    private void servicesChanged()
    {
        java.security.Provider r0;

        r0 := @this: java.security.Provider;

        r0.<java.security.Provider: java.security.Provider$Service lastServicesByType> = null;

        r0.<java.security.Provider: java.lang.String lastServiceName> = null;

        r0.<java.security.Provider: java.util.Set lastServicesSet> = null;

        return;
    }

    private void updatePropertyServiceTable()
    {
        java.security.Provider r0;
        java.util.Iterator r1;
        java.util.Map$Entry r2;
        java.lang.Object r3, r4, r12, r21, r28, $r35, $r38, $r66;
        java.lang.String r5, r6, r7, r8, r9, r10, r13, r16, r17, r19, r22, r23, r24, r25, r27, $r37, $r65, $r81, $r86;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        java.util.LinkedHashMap r11, r18, $r30, $r32, $r33, $r41, $r46, $r48, $r51, $r52, $r58, $r59, $r60, $r61, $r63, $r64, $r69, $r72, $r73, $r75, $r79, $r82, $r83, $r84, $r87;
        java.util.HashMap r14, $r39, $r76;
        java.security.Provider$Service r15, r20, r29, r31, $r47, $r49, $r53, $r57, $r77;
        java.util.ArrayList r26, $r50, $r78;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.Set $r34;
        java.lang.StringBuilder $r36, $r42, $r43, $r44, $r67, $r68, $r70, $r71;
        java.util.Map $r54;
        java.util.List $r55;

        r0 := @this: java.security.Provider;

        $r32 = r0.<java.security.Provider: java.util.LinkedHashMap changedProperties>;

        if $r32 == null goto label01;

        $r30 = r0.<java.security.Provider: java.util.LinkedHashMap changedProperties>;

        $z0 = virtualinvoke $r30.<java.util.LinkedHashMap: boolean isEmpty()>();

        if $z0 == 0 goto label02;

     label01:
        return;

     label02:
        $r33 = r0.<java.security.Provider: java.util.LinkedHashMap changedProperties>;

        $r34 = virtualinvoke $r33.<java.util.LinkedHashMap: java.util.Set entrySet()>();

        r1 = interfaceinvoke $r34.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label17;

        $r35 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Map$Entry) $r35;

        r3 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        r4 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        if r3 == null goto label03;

        if r4 == null goto label03;

        $z2 = r3 instanceof java.lang.String;

        if $z2 == 0 goto label03;

        $z5 = r4 instanceof java.lang.String;

        if $z5 == 0 goto label03;

        r5 = (java.lang.String) r3;

        r6 = (java.lang.String) r4;

        $z4 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>("Provider");

        if $z4 != 0 goto label03;

        $z3 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>("Alg.Alias.");

        if $z3 == 0 goto label09;

        r22 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>(10);

        i2 = virtualinvoke r22.<java.lang.String: int indexOf(int)>(46);

        r24 = virtualinvoke r22.<java.lang.String: java.lang.String substring(int,int)>(0, i2);

        $i6 = i2 + 1;

        r23 = virtualinvoke r22.<java.lang.String: java.lang.String substring(int)>($i6);

        r27 = staticinvoke <java.security.Provider: java.lang.String key(java.lang.String,java.lang.String)>(r24, r6);

        r28 = null;

        $r63 = r0.<java.security.Provider: java.util.LinkedHashMap propertyServiceTable>;

        if $r63 != null goto label06;

        $r87 = new java.util.LinkedHashMap;

        specialinvoke $r87.<java.util.LinkedHashMap: void <init>(int)>(128);

        r0.<java.security.Provider: java.util.LinkedHashMap propertyServiceTable> = $r87;

     label04:
        if r28 == null goto label07;

        r31 = (java.security.Provider$Service) r28;

        virtualinvoke r31.<java.security.Provider$Service: void addAlias(java.lang.String)>(r23);

        $r83 = r0.<java.security.Provider: java.util.LinkedHashMap propertyAliasTable>;

        if $r83 != null goto label05;

        $r79 = new java.util.LinkedHashMap;

        specialinvoke $r79.<java.util.LinkedHashMap: void <init>(int)>(256);

        r0.<java.security.Provider: java.util.LinkedHashMap propertyAliasTable> = $r79;

     label05:
        $r82 = r0.<java.security.Provider: java.util.LinkedHashMap propertyAliasTable>;

        $r81 = staticinvoke <java.security.Provider: java.lang.String key(java.lang.String,java.lang.String)>(r24, r23);

        virtualinvoke $r82.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r81, r31);

        goto label03;

     label06:
        $r64 = r0.<java.security.Provider: java.util.LinkedHashMap propertyServiceTable>;

        r28 = virtualinvoke $r64.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r27);

        goto label04;

     label07:
        $r69 = r0.<java.security.Provider: java.util.LinkedHashMap changedProperties>;

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r70 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);

        $r67 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r65 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        $r66 = virtualinvoke $r69.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>($r65);

        r25 = (java.lang.String) $r66;

        if r25 == null goto label03;

        $r78 = new java.util.ArrayList;

        specialinvoke $r78.<java.util.ArrayList: void <init>()>();

        r26 = $r78;

        interfaceinvoke r26.<java.util.List: boolean add(java.lang.Object)>(r23);

        $r77 = new java.security.Provider$Service;

        $r76 = new java.util.HashMap;

        specialinvoke $r76.<java.util.HashMap: void <init>()>();

        specialinvoke $r77.<java.security.Provider$Service: void <init>(java.security.Provider,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.Map)>(r0, r24, r6, r25, r26, $r76);

        r29 = $r77;

        $r75 = r0.<java.security.Provider: java.util.LinkedHashMap propertyServiceTable>;

        virtualinvoke $r75.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r27, r29);

        $r73 = r0.<java.security.Provider: java.util.LinkedHashMap propertyAliasTable>;

        if $r73 != null goto label08;

        $r84 = new java.util.LinkedHashMap;

        specialinvoke $r84.<java.util.LinkedHashMap: void <init>(int)>(256);

        r0.<java.security.Provider: java.util.LinkedHashMap propertyAliasTable> = $r84;

     label08:
        $r72 = r0.<java.security.Provider: java.util.LinkedHashMap propertyAliasTable>;

        $r86 = staticinvoke <java.security.Provider: java.lang.String key(java.lang.String,java.lang.String)>(r24, r23);

        virtualinvoke $r72.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r86, r29);

        goto label03;

     label09:
        i0 = virtualinvoke r5.<java.lang.String: int indexOf(int)>(46);

        if i0 == -1 goto label03;

        i1 = virtualinvoke r5.<java.lang.String: int indexOf(int)>(32);

        if i1 != -1 goto label13;

        r17 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $i5 = i0 + 1;

        r16 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>($i5);

        r19 = staticinvoke <java.security.Provider: java.lang.String key(java.lang.String,java.lang.String)>(r17, r16);

        r18 = r0.<java.security.Provider: java.util.LinkedHashMap propertyServiceTable>;

        r21 = null;

        if r18 == null goto label10;

        $r58 = r0.<java.security.Provider: java.util.LinkedHashMap propertyServiceTable>;

        r21 = virtualinvoke $r58.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r19);

     label10:
        if r21 == null goto label11;

        $r57 = (java.security.Provider$Service) r21;

        staticinvoke <java.security.Provider$Service: java.lang.String access$302(java.security.Provider$Service,java.lang.String)>($r57, r6);

        goto label03;

     label11:
        $r53 = new java.security.Provider$Service;

        $r55 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        $r54 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        specialinvoke $r53.<java.security.Provider$Service: void <init>(java.security.Provider,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.Map)>(r0, r17, r16, r6, $r55, $r54);

        r20 = $r53;

        $r60 = r0.<java.security.Provider: java.util.LinkedHashMap propertyServiceTable>;

        if $r60 != null goto label12;

        $r61 = new java.util.LinkedHashMap;

        specialinvoke $r61.<java.util.LinkedHashMap: void <init>(int)>(128);

        r0.<java.security.Provider: java.util.LinkedHashMap propertyServiceTable> = $r61;

     label12:
        $r59 = r0.<java.security.Provider: java.util.LinkedHashMap propertyServiceTable>;

        virtualinvoke $r59.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r19, r20);

        goto label03;

     label13:
        r7 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $i3 = i0 + 1;

        r8 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>($i3, i1);

        $i4 = i1 + 1;

        r9 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>($i4);

        r10 = staticinvoke <java.security.Provider: java.lang.String key(java.lang.String,java.lang.String)>(r7, r8);

        r11 = r0.<java.security.Provider: java.util.LinkedHashMap propertyServiceTable>;

        r12 = null;

        if r11 == null goto label14;

        $r48 = r0.<java.security.Provider: java.util.LinkedHashMap propertyServiceTable>;

        r12 = virtualinvoke $r48.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r10);

     label14:
        if r12 == null goto label15;

        $r47 = (java.security.Provider$Service) r12;

        virtualinvoke $r47.<java.security.Provider$Service: void putAttribute(java.lang.String,java.lang.String)>(r9, r6);

        goto label03;

     label15:
        $r41 = r0.<java.security.Provider: java.util.LinkedHashMap changedProperties>;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r37 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        $r38 = virtualinvoke $r41.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>($r37);

        r13 = (java.lang.String) $r38;

        if r13 == null goto label03;

        $r39 = new java.util.HashMap;

        specialinvoke $r39.<java.util.HashMap: void <init>()>();

        r14 = $r39;

        interfaceinvoke r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, r6);

        $r49 = new java.security.Provider$Service;

        $r50 = new java.util.ArrayList;

        specialinvoke $r50.<java.util.ArrayList: void <init>()>();

        specialinvoke $r49.<java.security.Provider$Service: void <init>(java.security.Provider,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.Map)>(r0, r7, r8, r13, $r50, r14);

        r15 = $r49;

        $r51 = r0.<java.security.Provider: java.util.LinkedHashMap propertyServiceTable>;

        if $r51 != null goto label16;

        $r46 = new java.util.LinkedHashMap;

        specialinvoke $r46.<java.util.LinkedHashMap: void <init>(int)>(128);

        r0.<java.security.Provider: java.util.LinkedHashMap propertyServiceTable> = $r46;

     label16:
        $r52 = r0.<java.security.Provider: java.util.LinkedHashMap propertyServiceTable>;

        virtualinvoke $r52.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r10, r15);

        goto label03;

     label17:
        specialinvoke r0.<java.security.Provider: void servicesChanged()>();

        r0.<java.security.Provider: java.util.LinkedHashMap changedProperties> = null;

        return;
    }

    public void clear()
    {
        java.security.Provider r0;
        java.lang.Throwable r1, $r10;
        java.util.LinkedHashMap $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        int $i0;

        r0 := @this: java.security.Provider;

        entermonitor r0;

     label1:
        specialinvoke r0.<java.util.Properties: void clear()>();

        $r2 = r0.<java.security.Provider: java.util.LinkedHashMap serviceTable>;

        if $r2 == null goto label2;

        $r9 = r0.<java.security.Provider: java.util.LinkedHashMap serviceTable>;

        virtualinvoke $r9.<java.util.LinkedHashMap: void clear()>();

     label2:
        $r3 = r0.<java.security.Provider: java.util.LinkedHashMap propertyServiceTable>;

        if $r3 == null goto label3;

        $r8 = r0.<java.security.Provider: java.util.LinkedHashMap propertyServiceTable>;

        virtualinvoke $r8.<java.util.LinkedHashMap: void clear()>();

     label3:
        $r4 = r0.<java.security.Provider: java.util.LinkedHashMap aliasTable>;

        if $r4 == null goto label4;

        $r7 = r0.<java.security.Provider: java.util.LinkedHashMap aliasTable>;

        virtualinvoke $r7.<java.util.LinkedHashMap: void clear()>();

     label4:
        $r5 = r0.<java.security.Provider: java.util.LinkedHashMap propertyAliasTable>;

        if $r5 == null goto label5;

        $r6 = r0.<java.security.Provider: java.util.LinkedHashMap propertyAliasTable>;

        virtualinvoke $r6.<java.util.LinkedHashMap: void clear()>();

     label5:
        r0.<java.security.Provider: java.util.LinkedHashMap changedProperties> = null;

        specialinvoke r0.<java.security.Provider: void putProviderInfo()>();

        $i0 = r0.<java.security.Provider: int providerNumber>;

        if $i0 == -1 goto label6;

        staticinvoke <org.apache.harmony.security.fortress.Services: void setNeedRefresh()>();

     label6:
        specialinvoke r0.<java.security.Provider: void servicesChanged()>();

     label7:
        exitmonitor r0;

        return;

     label8:
        $r10 := @caughtexception;

        r1 = $r10;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label2 to label3 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public java.util.Set entrySet()
    {
        java.security.Provider r0;
        java.lang.Throwable r1, $r4;
        java.util.Set r2, $r3;

        r0 := @this: java.security.Provider;

        entermonitor r0;

     label1:
        $r3 = specialinvoke r0.<java.util.Properties: java.util.Set entrySet()>();

        r2 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r3);

     label2:
        exitmonitor r0;

        return r2;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.String getInfo()
    {
        java.security.Provider r0;
        java.lang.String $r1;

        r0 := @this: java.security.Provider;

        $r1 = r0.<java.security.Provider: java.lang.String info>;

        return $r1;
    }

    public java.lang.String getName()
    {
        java.security.Provider r0;
        java.lang.String $r1;

        r0 := @this: java.security.Provider;

        $r1 = r0.<java.security.Provider: java.lang.String name>;

        return $r1;
    }

    int getProviderNumber()
    {
        java.security.Provider r0;
        int $i0;

        r0 := @this: java.security.Provider;

        $i0 = r0.<java.security.Provider: int providerNumber>;

        return $i0;
    }

    java.security.Provider$Service getService(java.lang.String)
    {
        java.security.Provider r0;
        java.lang.String r1, $r8, $r9;
        java.lang.Throwable r2, $r10;
        java.util.Iterator r3;
        java.security.Provider$Service r4, $r5;
        java.util.Set $r6;
        boolean $z0, $z1, $z2;
        java.lang.Object $r7;

        r0 := @this: java.security.Provider;

        r1 := @parameter0: java.lang.String;

        entermonitor r0;

     label1:
        specialinvoke r0.<java.security.Provider: void updatePropertyServiceTable()>();

        $r5 = r0.<java.security.Provider: java.security.Provider$Service lastServicesByType>;

        if $r5 == null goto label3;

        $r9 = r0.<java.security.Provider: java.lang.String lastType>;

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z2 == 0 goto label3;

        r4 = r0.<java.security.Provider: java.security.Provider$Service lastServicesByType>;

     label2:
        exitmonitor r0;

        return r4;

     label3:
        $r6 = virtualinvoke r0.<java.security.Provider: java.util.Set getServices()>();

        r3 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.security.Provider$Service) $r7;

        $r8 = staticinvoke <java.security.Provider$Service: java.lang.String access$000(java.security.Provider$Service)>(r4);

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label4;

        r0.<java.security.Provider: java.lang.String lastType> = r1;

        r0.<java.security.Provider: java.security.Provider$Service lastServicesByType> = r4;

     label5:
        goto label2;

     label6:
        $r10 := @caughtexception;

        r2 = $r10;

        exitmonitor r0;

        throw r2;

     label7:
        r4 = null;

        goto label2;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public java.security.Provider$Service getService(java.lang.String, java.lang.String)
    {
        java.security.Provider r0;
        java.lang.String r1, r2, r3, $r9, $r18;
        java.util.LinkedHashMap r4, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        java.lang.Object r5, r6;
        java.security.Provider$Service r7, $r10;
        java.lang.Throwable r8, $r21;
        boolean $z0, $z1;
        java.lang.NullPointerException $r19, $r20;

        r0 := @this: java.security.Provider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        entermonitor r0;

        if r1 != null goto label03;

     label01:
        $r19 = new java.lang.NullPointerException;

        specialinvoke $r19.<java.lang.NullPointerException: void <init>(java.lang.String)>("type == null");

        throw $r19;

     label02:
        $r21 := @caughtexception;

        r8 = $r21;

        exitmonitor r0;

        throw r8;

     label03:
        if r2 != null goto label05;

     label04:
        $r20 = new java.lang.NullPointerException;

        specialinvoke $r20.<java.lang.NullPointerException: void <init>(java.lang.String)>("algorithm == null");

        throw $r20;

     label05:
        $r9 = r0.<java.security.Provider: java.lang.String lastServiceName>;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label07;

        $r18 = r0.<java.security.Provider: java.lang.String lastAlgorithm>;

        $z1 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r18);

        if $z1 == 0 goto label07;

        r7 = r0.<java.security.Provider: java.security.Provider$Service returnedService>;

     label06:
        exitmonitor r0;

        return r7;

     label07:
        r3 = staticinvoke <java.security.Provider: java.lang.String key(java.lang.String,java.lang.String)>(r1, r2);

        r4 = r0.<java.security.Provider: java.util.LinkedHashMap serviceTable>;

     label08:
        r5 = null;

        if r4 == null goto label10;

     label09:
        $r17 = r0.<java.security.Provider: java.util.LinkedHashMap serviceTable>;

        r5 = virtualinvoke $r17.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r3);

     label10:
        if r5 != null goto label22;

     label11:
        $r15 = r0.<java.security.Provider: java.util.LinkedHashMap aliasTable>;

        if $r15 == null goto label22;

        $r16 = r0.<java.security.Provider: java.util.LinkedHashMap aliasTable>;

        r6 = virtualinvoke $r16.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r3);

     label12:
        if r6 != null goto label14;

     label13:
        specialinvoke r0.<java.security.Provider: void updatePropertyServiceTable()>();

     label14:
        if r6 != null goto label16;

     label15:
        $r14 = r0.<java.security.Provider: java.util.LinkedHashMap propertyServiceTable>;

        if $r14 == null goto label16;

        $r13 = r0.<java.security.Provider: java.util.LinkedHashMap propertyServiceTable>;

        r6 = virtualinvoke $r13.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r3);

     label16:
        if r6 != null goto label18;

     label17:
        $r11 = r0.<java.security.Provider: java.util.LinkedHashMap propertyAliasTable>;

        if $r11 == null goto label18;

        $r12 = r0.<java.security.Provider: java.util.LinkedHashMap propertyAliasTable>;

        r6 = virtualinvoke $r12.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r3);

     label18:
        if r6 == null goto label21;

     label19:
        r0.<java.security.Provider: java.lang.String lastServiceName> = r1;

        r0.<java.security.Provider: java.lang.String lastAlgorithm> = r2;

        $r10 = (java.security.Provider$Service) r6;

        r0.<java.security.Provider: java.security.Provider$Service returnedService> = $r10;

        r7 = r0.<java.security.Provider: java.security.Provider$Service returnedService>;

     label20:
        goto label06;

     label21:
        r7 = null;

        goto label06;

     label22:
        r6 = r5;

        goto label12;

        catch java.lang.Throwable from label01 to label02 with label02;
        catch java.lang.Throwable from label04 to label05 with label02;
        catch java.lang.Throwable from label05 to label06 with label02;
        catch java.lang.Throwable from label07 to label08 with label02;
        catch java.lang.Throwable from label09 to label10 with label02;
        catch java.lang.Throwable from label11 to label12 with label02;
        catch java.lang.Throwable from label13 to label14 with label02;
        catch java.lang.Throwable from label15 to label16 with label02;
        catch java.lang.Throwable from label17 to label18 with label02;
        catch java.lang.Throwable from label19 to label20 with label02;
    }

    public java.util.Set getServices()
    {
        java.security.Provider r0;
        java.lang.Throwable r1, $r15;
        java.util.Set r2, $r3, $r7, $r8, $r10;
        java.util.LinkedHashMap $r4, $r6, $r9, $r14;
        java.util.LinkedHashSet $r5, $r12;
        java.util.Collection $r11, $r13;

        r0 := @this: java.security.Provider;

        entermonitor r0;

     label1:
        specialinvoke r0.<java.security.Provider: void updatePropertyServiceTable()>();

        $r3 = r0.<java.security.Provider: java.util.Set lastServicesSet>;

        if $r3 == null goto label3;

        r2 = r0.<java.security.Provider: java.util.Set lastServicesSet>;

     label2:
        exitmonitor r0;

        return r2;

     label3:
        $r4 = r0.<java.security.Provider: java.util.LinkedHashMap serviceTable>;

        if $r4 == null goto label7;

        $r12 = new java.util.LinkedHashSet;

        $r14 = r0.<java.security.Provider: java.util.LinkedHashMap serviceTable>;

        $r13 = virtualinvoke $r14.<java.util.LinkedHashMap: java.util.Collection values()>();

        specialinvoke $r12.<java.util.LinkedHashSet: void <init>(java.util.Collection)>($r13);

        r0.<java.security.Provider: java.util.Set lastServicesSet> = $r12;

     label4:
        $r6 = r0.<java.security.Provider: java.util.LinkedHashMap propertyServiceTable>;

        if $r6 == null goto label5;

        $r10 = r0.<java.security.Provider: java.util.Set lastServicesSet>;

        $r9 = r0.<java.security.Provider: java.util.LinkedHashMap propertyServiceTable>;

        $r11 = virtualinvoke $r9.<java.util.LinkedHashMap: java.util.Collection values()>();

        interfaceinvoke $r10.<java.util.Set: boolean addAll(java.util.Collection)>($r11);

     label5:
        $r7 = r0.<java.security.Provider: java.util.Set lastServicesSet>;

        $r8 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r7);

        r0.<java.security.Provider: java.util.Set lastServicesSet> = $r8;

        r2 = r0.<java.security.Provider: java.util.Set lastServicesSet>;

     label6:
        goto label2;

     label7:
        $r5 = new java.util.LinkedHashSet;

        specialinvoke $r5.<java.util.LinkedHashSet: void <init>()>();

        r0.<java.security.Provider: java.util.Set lastServicesSet> = $r5;

     label8:
        goto label4;

     label9:
        $r15 := @caughtexception;

        r1 = $r15;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label4 to label5 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label7 to label8 with label9;
    }

    public double getVersion()
    {
        java.security.Provider r0;
        double $d0;

        r0 := @this: java.security.Provider;

        $d0 = r0.<java.security.Provider: double version>;

        return $d0;
    }

    boolean implementsAlg(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        java.security.Provider r0;
        java.lang.String r1, r2, r3, r4, r5, r6, r7, $r15;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r16, $r17, $r18, $r19;
        boolean $z0;

        r0 := @this: java.security.Provider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r5 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        r6 = specialinvoke r0.<java.security.Provider: java.lang.String getPropertyIgnoreCase(java.lang.String)>(r5);

        if r6 != null goto label1;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Alg.Alias.");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        r7 = specialinvoke r0.<java.security.Provider: java.lang.String getPropertyIgnoreCase(java.lang.String)>($r15);

        if r7 == null goto label1;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        r5 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        r6 = specialinvoke r0.<java.security.Provider: java.lang.String getPropertyIgnoreCase(java.lang.String)>(r5);

     label1:
        if r6 == null goto label3;

        if r3 != null goto label2;

        return 1;

     label2:
        $z0 = specialinvoke r0.<java.security.Provider: boolean checkAttribute(java.lang.String,java.lang.String,java.lang.String)>(r5, r3, r4);

        return $z0;

     label3:
        return 0;
    }

    public java.util.Set keySet()
    {
        java.security.Provider r0;
        java.util.Set $r1, $r2;

        r0 := @this: java.security.Provider;

        $r1 = specialinvoke r0.<java.util.Properties: java.util.Set keySet()>();

        $r2 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r1);

        return $r2;
    }

    public void load(java.io.InputStream) throws java.io.IOException
    {
        java.security.Provider r0;
        java.io.InputStream r1;
        java.util.Properties r2, $r4;
        java.lang.Throwable r3, $r5;

        r0 := @this: java.security.Provider;

        r1 := @parameter0: java.io.InputStream;

        entermonitor r0;

     label1:
        $r4 = new java.util.Properties;

        specialinvoke $r4.<java.util.Properties: void <init>()>();

        r2 = $r4;

        virtualinvoke r2.<java.util.Properties: void load(java.io.InputStream)>(r1);

        specialinvoke r0.<java.security.Provider: void myPutAll(java.util.Map)>(r2);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        exitmonitor r0;

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        java.security.Provider r0;
        java.lang.Object r1, r2, r4, r5, $r11;
        java.lang.Throwable r3, $r14;
        boolean z0, $z1;
        int $i0;
        java.util.LinkedHashMap $r6, $r7, $r8, $r10, $r12;
        java.lang.String $r13;

        r0 := @this: java.security.Provider;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        entermonitor r0;

     label1:
        $z1 = r1 instanceof java.lang.String;

        if $z1 == 0 goto label4;

        $r13 = (java.lang.String) r1;

        z0 = virtualinvoke $r13.<java.lang.String: boolean startsWith(java.lang.String)>("Provider.");

     label2:
        if z0 == 0 goto label4;

        r5 = null;

     label3:
        exitmonitor r0;

        return r5;

     label4:
        $i0 = r0.<java.security.Provider: int providerNumber>;

        if $i0 == -1 goto label5;

        staticinvoke <org.apache.harmony.security.fortress.Services: void setNeedRefresh()>();

     label5:
        $r6 = r0.<java.security.Provider: java.util.LinkedHashMap changedProperties>;

        if $r6 == null goto label6;

        $r12 = r0.<java.security.Provider: java.util.LinkedHashMap changedProperties>;

        $r11 = virtualinvoke $r12.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>(r1);

        if $r11 != null goto label6;

        specialinvoke r0.<java.security.Provider: void removeFromPropertyServiceTable(java.lang.Object)>(r1);

     label6:
        $r7 = r0.<java.security.Provider: java.util.LinkedHashMap changedProperties>;

        if $r7 != null goto label7;

        $r10 = new java.util.LinkedHashMap;

        specialinvoke $r10.<java.util.LinkedHashMap: void <init>()>();

        r0.<java.security.Provider: java.util.LinkedHashMap changedProperties> = $r10;

     label7:
        $r8 = r0.<java.security.Provider: java.util.LinkedHashMap changedProperties>;

        virtualinvoke $r8.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        r4 = specialinvoke r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

     label8:
        r5 = r4;

        goto label3;

     label9:
        $r14 := @caughtexception;

        r3 = $r14;

        exitmonitor r0;

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label4 to label5 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
        catch java.lang.Throwable from label7 to label8 with label9;
    }

    public void putAll(java.util.Map)
    {
        java.security.Provider r0;
        java.util.Map r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: java.security.Provider;

        r1 := @parameter0: java.util.Map;

        entermonitor r0;

     label1:
        specialinvoke r0.<java.security.Provider: void myPutAll(java.util.Map)>(r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected void putService(java.security.Provider$Service)
    {
        java.security.Provider r0;
        java.security.Provider$Service r1;
        boolean z0, $z1;
        java.lang.Throwable r2, $r23;
        java.util.Iterator r3;
        java.lang.String r4, $r5, $r6, $r9, $r10, $r11, $r17, $r20;
        java.util.LinkedHashMap $r7, $r8, $r14, $r18, $r21, $r22;
        java.util.List $r12, $r15;
        java.lang.Object $r16;
        java.lang.NullPointerException $r24;

        r0 := @this: java.security.Provider;

        r1 := @parameter0: java.security.Provider$Service;

        entermonitor r0;

        if r1 != null goto label03;

     label01:
        $r24 = new java.lang.NullPointerException;

        specialinvoke $r24.<java.lang.NullPointerException: void <init>(java.lang.String)>("s == null");

        throw $r24;

     label02:
        $r23 := @caughtexception;

        r2 = $r23;

        exitmonitor r0;

        throw r2;

     label03:
        $r5 = "Provider";

        $r6 = virtualinvoke r1.<java.security.Provider$Service: java.lang.String getType()>();

        z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

     label04:
        if z0 == 0 goto label06;

     label05:
        exitmonitor r0;

        return;

     label06:
        specialinvoke r0.<java.security.Provider: void servicesChanged()>();

        $r7 = r0.<java.security.Provider: java.util.LinkedHashMap serviceTable>;

        if $r7 != null goto label07;

        $r21 = new java.util.LinkedHashMap;

        specialinvoke $r21.<java.util.LinkedHashMap: void <init>(int)>(128);

        r0.<java.security.Provider: java.util.LinkedHashMap serviceTable> = $r21;

     label07:
        $r8 = r0.<java.security.Provider: java.util.LinkedHashMap serviceTable>;

        $r9 = staticinvoke <java.security.Provider$Service: java.lang.String access$000(java.security.Provider$Service)>(r1);

        $r10 = staticinvoke <java.security.Provider$Service: java.lang.String access$100(java.security.Provider$Service)>(r1);

        $r11 = staticinvoke <java.security.Provider: java.lang.String key(java.lang.String,java.lang.String)>($r9, $r10);

        virtualinvoke $r8.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, r1);

        $r12 = staticinvoke <java.security.Provider$Service: java.util.List access$200(java.security.Provider$Service)>(r1);

        if $r12 == null goto label11;

        $r14 = r0.<java.security.Provider: java.util.LinkedHashMap aliasTable>;

        if $r14 != null goto label08;

        $r22 = new java.util.LinkedHashMap;

        specialinvoke $r22.<java.util.LinkedHashMap: void <init>(int)>(256);

        r0.<java.security.Provider: java.util.LinkedHashMap aliasTable> = $r22;

     label08:
        $r15 = virtualinvoke r1.<java.security.Provider$Service: java.util.List getAliases()>();

        r3 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r16 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r16;

        $r18 = r0.<java.security.Provider: java.util.LinkedHashMap aliasTable>;

        $r17 = staticinvoke <java.security.Provider$Service: java.lang.String access$000(java.security.Provider$Service)>(r1);

        $r20 = staticinvoke <java.security.Provider: java.lang.String key(java.lang.String,java.lang.String)>($r17, r4);

        virtualinvoke $r18.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, r1);

     label10:
        goto label09;

     label11:
        specialinvoke r0.<java.security.Provider: void serviceInfoToProperties(java.security.Provider$Service)>(r1);

     label12:
        goto label05;

        catch java.lang.Throwable from label01 to label02 with label02;
        catch java.lang.Throwable from label03 to label04 with label02;
        catch java.lang.Throwable from label06 to label07 with label02;
        catch java.lang.Throwable from label07 to label08 with label02;
        catch java.lang.Throwable from label08 to label09 with label02;
        catch java.lang.Throwable from label09 to label10 with label02;
        catch java.lang.Throwable from label11 to label12 with label02;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        java.security.Provider r0;
        java.lang.Object r1, r3, r4, $r7;
        java.lang.Throwable r2, $r10;
        boolean z0, $z1;
        int $i0, $i1;
        java.util.LinkedHashMap $r5, $r6, $r8;
        java.lang.String $r9;

        r0 := @this: java.security.Provider;

        r1 := @parameter0: java.lang.Object;

        entermonitor r0;

     label1:
        $z1 = r1 instanceof java.lang.String;

        if $z1 == 0 goto label4;

        $r9 = (java.lang.String) r1;

        z0 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>("Provider.");

     label2:
        if z0 == 0 goto label4;

        r4 = null;

     label3:
        exitmonitor r0;

        return r4;

     label4:
        $i0 = r0.<java.security.Provider: int providerNumber>;

        if $i0 == -1 goto label5;

        staticinvoke <org.apache.harmony.security.fortress.Services: void setNeedRefresh()>();

     label5:
        $r5 = r0.<java.security.Provider: java.util.LinkedHashMap changedProperties>;

        if $r5 == null goto label6;

        $r6 = r0.<java.security.Provider: java.util.LinkedHashMap changedProperties>;

        $r7 = virtualinvoke $r6.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>(r1);

        if $r7 != null goto label6;

        specialinvoke r0.<java.security.Provider: void removeFromPropertyServiceTable(java.lang.Object)>(r1);

        $r8 = r0.<java.security.Provider: java.util.LinkedHashMap changedProperties>;

        $i1 = virtualinvoke $r8.<java.util.LinkedHashMap: int size()>();

        if $i1 != 0 goto label6;

        r0.<java.security.Provider: java.util.LinkedHashMap changedProperties> = null;

     label6:
        r3 = specialinvoke r0.<java.util.Properties: java.lang.Object remove(java.lang.Object)>(r1);

     label7:
        r4 = r3;

        goto label3;

     label8:
        $r10 := @caughtexception;

        r2 = $r10;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    protected void removeService(java.security.Provider$Service)
    {
        java.security.Provider r0;
        java.security.Provider$Service r1;
        java.lang.Throwable r2, $r20;
        java.util.Iterator r3;
        java.lang.String r4, $r11, $r13, $r14, $r16, $r17;
        java.util.LinkedHashMap $r5, $r6, $r10, $r15;
        java.util.List $r7, $r8;
        boolean $z0;
        java.lang.Object $r9;
        java.lang.NullPointerException $r18;

        r0 := @this: java.security.Provider;

        r1 := @parameter0: java.security.Provider$Service;

        entermonitor r0;

        if r1 != null goto label3;

     label1:
        $r18 = new java.lang.NullPointerException;

        specialinvoke $r18.<java.lang.NullPointerException: void <init>(java.lang.String)>("s == null");

        throw $r18;

     label2:
        $r20 := @caughtexception;

        r2 = $r20;

        exitmonitor r0;

        throw r2;

     label3:
        specialinvoke r0.<java.security.Provider: void servicesChanged()>();

        $r5 = r0.<java.security.Provider: java.util.LinkedHashMap serviceTable>;

        if $r5 == null goto label4;

        $r15 = r0.<java.security.Provider: java.util.LinkedHashMap serviceTable>;

        $r14 = staticinvoke <java.security.Provider$Service: java.lang.String access$000(java.security.Provider$Service)>(r1);

        $r17 = staticinvoke <java.security.Provider$Service: java.lang.String access$100(java.security.Provider$Service)>(r1);

        $r16 = staticinvoke <java.security.Provider: java.lang.String key(java.lang.String,java.lang.String)>($r14, $r17);

        virtualinvoke $r15.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>($r16);

     label4:
        $r6 = r0.<java.security.Provider: java.util.LinkedHashMap aliasTable>;

        if $r6 == null goto label7;

        $r7 = staticinvoke <java.security.Provider$Service: java.util.List access$200(java.security.Provider$Service)>(r1);

        if $r7 == null goto label7;

        $r8 = virtualinvoke r1.<java.security.Provider$Service: java.util.List getAliases()>();

        r3 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r9;

        $r10 = r0.<java.security.Provider: java.util.LinkedHashMap aliasTable>;

        $r11 = staticinvoke <java.security.Provider$Service: java.lang.String access$000(java.security.Provider$Service)>(r1);

        $r13 = staticinvoke <java.security.Provider: java.lang.String key(java.lang.String,java.lang.String)>($r11, r4);

        virtualinvoke $r10.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>($r13);

     label6:
        goto label5;

     label7:
        specialinvoke r0.<java.security.Provider: void serviceInfoFromProperties(java.security.Provider$Service)>(r1);

     label8:
        exitmonitor r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.Throwable from label4 to label5 with label2;
        catch java.lang.Throwable from label5 to label6 with label2;
        catch java.lang.Throwable from label7 to label8 with label2;
    }

    void setProviderNumber(int)
    {
        java.security.Provider r0;
        int i0;

        r0 := @this: java.security.Provider;

        i0 := @parameter0: int;

        r0.<java.security.Provider: int providerNumber> = i0;

        return;
    }

    public java.lang.String toString()
    {
        java.security.Provider r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r5;
        java.lang.String $r2, $r6;
        double $d0;

        r0 := @this: java.security.Provider;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<java.security.Provider: java.lang.String name>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" version ");

        $d0 = r0.<java.security.Provider: double version>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public java.util.Collection values()
    {
        java.security.Provider r0;
        java.util.Collection $r1, $r2;

        r0 := @this: java.security.Provider;

        $r1 = specialinvoke r0.<java.util.Properties: java.util.Collection values()>();

        $r2 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>($r1);

        return $r2;
    }

    public static void <clinit>()
    {
        <java.security.Provider: long serialVersionUID> = -4298000515446427739L;

        return;
    }
}
