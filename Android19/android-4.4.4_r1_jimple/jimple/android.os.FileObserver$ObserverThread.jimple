class android.os.FileObserver$ObserverThread extends java.lang.Thread
{
    private int m_fd;
    private java.util.HashMap m_observers;

    public void <init>()
    {
        android.os.FileObserver$ObserverThread r0;
        java.util.HashMap $r1;
        int $i0;

        r0 := @this: android.os.FileObserver$ObserverThread;

        specialinvoke r0.<java.lang.Thread: void <init>(java.lang.String)>("FileObserver");

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<android.os.FileObserver$ObserverThread: java.util.HashMap m_observers> = $r1;

        $i0 = specialinvoke r0.<android.os.FileObserver$ObserverThread: int init()>();

        r0.<android.os.FileObserver$ObserverThread: int m_fd> = $i0;

        return;
    }

    private native int init();

    private native void observe(int);

    private native int startWatching(int, java.lang.String, int);

    private native void stopWatching(int, int);

    public void onEvent(int, int, java.lang.String)
    {
        android.os.FileObserver$ObserverThread r0;
        int i0, i1;
        java.lang.String r1, $r18;
        java.util.HashMap r2, $r7, $r12;
        java.lang.Throwable r3, r6, $r13, $r19;
        java.lang.ref.WeakReference r4;
        android.os.FileObserver r5;
        java.lang.Integer $r8, $r11;
        java.lang.Object $r9, $r10;
        java.lang.StringBuilder $r15, $r16, $r17;

        r0 := @this: android.os.FileObserver$ObserverThread;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 = r0.<android.os.FileObserver$ObserverThread: java.util.HashMap m_observers>;

        entermonitor r2;

     label01:
        $r7 = r0.<android.os.FileObserver$ObserverThread: java.util.HashMap m_observers>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r9 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r8);

        r4 = (java.lang.ref.WeakReference) $r9;

     label02:
        r5 = null;

        if r4 == null goto label06;

     label03:
        $r10 = virtualinvoke r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r5 = (android.os.FileObserver) $r10;

     label04:
        if r5 != null goto label06;

     label05:
        $r12 = r0.<android.os.FileObserver$ObserverThread: java.util.HashMap m_observers>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r12.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r11);

     label06:
        exitmonitor r2;

     label07:
        if r5 == null goto label09;

     label08:
        virtualinvoke r5.<android.os.FileObserver: void onEvent(int,java.lang.String)>(i1, r1);

     label09:
        return;

     label10:
        $r19 := @caughtexception;

        r3 = $r19;

     label11:
        exitmonitor r2;

     label12:
        throw r3;

     label13:
        $r13 := @caughtexception;

        r6 = $r13;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unhandled exception in FileObserver ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("FileObserver", $r18, r6);

        return;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public void run()
    {
        android.os.FileObserver$ObserverThread r0;
        int $i0;

        r0 := @this: android.os.FileObserver$ObserverThread;

        $i0 = r0.<android.os.FileObserver$ObserverThread: int m_fd>;

        specialinvoke r0.<android.os.FileObserver$ObserverThread: void observe(int)>($i0);

        return;
    }

    public int startWatching(java.lang.String, int, android.os.FileObserver)
    {
        android.os.FileObserver$ObserverThread r0;
        java.lang.String r1;
        int i0, i1, $i2, $i3;
        android.os.FileObserver r2;
        java.lang.Integer r3, $r6;
        java.util.HashMap r4, $r8;
        java.lang.Throwable r5, $r10;
        java.lang.ref.WeakReference $r7;

        r0 := @this: android.os.FileObserver$ObserverThread;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.FileObserver;

        $i2 = r0.<android.os.FileObserver$ObserverThread: int m_fd>;

        i1 = specialinvoke r0.<android.os.FileObserver$ObserverThread: int startWatching(int,java.lang.String,int)>($i2, r1, i0);

        $r6 = new java.lang.Integer;

        specialinvoke $r6.<java.lang.Integer: void <init>(int)>(i1);

        r3 = $r6;

        if i1 < 0 goto label2;

        r4 = r0.<android.os.FileObserver$ObserverThread: java.util.HashMap m_observers>;

        entermonitor r4;

     label1:
        $r8 = r0.<android.os.FileObserver$ObserverThread: java.util.HashMap m_observers>;

        $r7 = new java.lang.ref.WeakReference;

        specialinvoke $r7.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r2);

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r7);

        exitmonitor r4;

     label2:
        $i3 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        return $i3;

     label3:
        $r10 := @caughtexception;

        r5 = $r10;

     label4:
        exitmonitor r4;

     label5:
        throw r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void stopWatching(int)
    {
        android.os.FileObserver$ObserverThread r0;
        int i0, $i1;

        r0 := @this: android.os.FileObserver$ObserverThread;

        i0 := @parameter0: int;

        $i1 = r0.<android.os.FileObserver$ObserverThread: int m_fd>;

        specialinvoke r0.<android.os.FileObserver$ObserverThread: void stopWatching(int,int)>($i1, i0);

        return;
    }
}
