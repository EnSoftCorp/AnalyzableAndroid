class android.test.IsolatedContext$MockAccountManager extends android.accounts.AccountManager
{
    final android.test.IsolatedContext this$0;

    public void <init>(android.test.IsolatedContext)
    {
        android.test.IsolatedContext$MockAccountManager r0;
        android.test.IsolatedContext r1;

        r0 := @this: android.test.IsolatedContext$MockAccountManager;

        r1 := @parameter0: android.test.IsolatedContext;

        r0.<android.test.IsolatedContext$MockAccountManager: android.test.IsolatedContext this$0> = r1;

        specialinvoke r0.<android.accounts.AccountManager: void <init>(android.content.Context,android.accounts.IAccountManager,android.os.Handler)>(r1, null, null);

        return;
    }

    public void addOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener, android.os.Handler, boolean)
    {
        android.test.IsolatedContext$MockAccountManager r0;
        android.accounts.OnAccountsUpdateListener r1;
        android.os.Handler r2;
        boolean z0;

        r0 := @this: android.test.IsolatedContext$MockAccountManager;

        r1 := @parameter0: android.accounts.OnAccountsUpdateListener;

        r2 := @parameter1: android.os.Handler;

        z0 := @parameter2: boolean;

        return;
    }

    public java.lang.String blockingGetAuthToken(android.accounts.Account, java.lang.String, boolean) throws android.accounts.OperationCanceledException, java.io.IOException, android.accounts.AuthenticatorException
    {
        android.test.IsolatedContext$MockAccountManager r0;
        android.accounts.Account r1;
        java.lang.String r2;
        boolean z0;

        r0 := @this: android.test.IsolatedContext$MockAccountManager;

        r1 := @parameter0: android.accounts.Account;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        return null;
    }

    public android.accounts.Account[] getAccounts()
    {
        android.test.IsolatedContext$MockAccountManager r0;
        android.accounts.Account[] $r1;

        r0 := @this: android.test.IsolatedContext$MockAccountManager;

        $r1 = newarray (android.accounts.Account)[0];

        return $r1;
    }

    public android.accounts.AccountManagerFuture getAccountsByTypeAndFeatures(java.lang.String, java.lang.String[], android.accounts.AccountManagerCallback, android.os.Handler)
    {
        android.test.IsolatedContext$MockAccountManager r0;
        java.lang.String r1;
        java.lang.String[] r2;
        android.accounts.AccountManagerCallback r3;
        android.os.Handler r4;
        android.accounts.Account[] $r6;
        android.test.IsolatedContext$MockAccountManager$MockAccountManagerFuture r7;
        android.accounts.AccountManagerFuture r8;

        r0 := @this: android.test.IsolatedContext$MockAccountManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: android.accounts.AccountManagerCallback;

        r4 := @parameter3: android.os.Handler;

        r7 = new android.test.IsolatedContext$MockAccountManager$MockAccountManagerFuture;

        $r6 = newarray (android.accounts.Account)[0];

        specialinvoke r7.<android.test.IsolatedContext$MockAccountManager$MockAccountManagerFuture: void <init>(android.test.IsolatedContext$MockAccountManager,java.lang.Object)>(r0, $r6);

        r8 = (android.accounts.AccountManagerFuture) r7;

        return r8;
    }
}
