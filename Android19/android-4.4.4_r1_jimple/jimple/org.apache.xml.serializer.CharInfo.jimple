final class org.apache.xml.serializer.CharInfo extends java.lang.Object
{
    static final int ASCII_MAX;
    public static final java.lang.String HTML_ENTITIES_RESOURCE;
    private static final int LOW_ORDER_BITMASK;
    private static final int SHIFT_PER_WORD;
    static final char S_CARRIAGERETURN;
    static final char S_GT;
    static final char S_HORIZONAL_TAB;
    static final char S_LINEFEED;
    static final char S_LINE_SEPARATOR;
    static final char S_LT;
    static final char S_NEL;
    static final char S_QUOTE;
    static final char S_SPACE;
    public static final java.lang.String XML_ENTITIES_RESOURCE;
    private static java.util.Hashtable m_getCharInfoCache;
    private final int[] array_of_bits;
    private int firstWordNotUsed;
    private final org.apache.xml.serializer.CharInfo$CharKey m_charKey;
    private java.util.HashMap m_charToString;
    boolean onlyQuotAmpLtGt;
    private final boolean[] shouldMapAttrChar_ASCII;
    private final boolean[] shouldMapTextChar_ASCII;

    static void <clinit>()
    {
        java.lang.StringBuilder $r0, $r2, $r3, $r5, $r7, $r8;
        java.lang.String $r1, $r4, $r6, $r9;
        java.util.Hashtable $r10;

        <org.apache.xml.serializer.CharInfo: char S_SPACE> = 32;

        <org.apache.xml.serializer.CharInfo: char S_QUOTE> = 34;

        <org.apache.xml.serializer.CharInfo: char S_NEL> = 133;

        <org.apache.xml.serializer.CharInfo: char S_LT> = 60;

        <org.apache.xml.serializer.CharInfo: char S_LINE_SEPARATOR> = 8232;

        <org.apache.xml.serializer.CharInfo: char S_LINEFEED> = 10;

        <org.apache.xml.serializer.CharInfo: char S_HORIZONAL_TAB> = 9;

        <org.apache.xml.serializer.CharInfo: char S_GT> = 62;

        <org.apache.xml.serializer.CharInfo: char S_CARRIAGERETURN> = 13;

        <org.apache.xml.serializer.CharInfo: int SHIFT_PER_WORD> = 5;

        <org.apache.xml.serializer.CharInfo: int LOW_ORDER_BITMASK> = 31;

        <org.apache.xml.serializer.CharInfo: int ASCII_MAX> = 128;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = <org.apache.xml.serializer.SerializerBase: java.lang.String PKG_NAME>;

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".HTMLEntities");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        <org.apache.xml.serializer.CharInfo: java.lang.String HTML_ENTITIES_RESOURCE> = $r4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = <org.apache.xml.serializer.SerializerBase: java.lang.String PKG_NAME>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".XMLEntities");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        <org.apache.xml.serializer.CharInfo: java.lang.String XML_ENTITIES_RESOURCE> = $r9;

        $r10 = new java.util.Hashtable;

        specialinvoke $r10.<java.util.Hashtable: void <init>()>();

        <org.apache.xml.serializer.CharInfo: java.util.Hashtable m_getCharInfoCache> = $r10;

        return;
    }

    private void <init>()
    {
        org.apache.xml.serializer.CharInfo r0;
        int[] $r1;
        boolean[] $r2, $r3;
        org.apache.xml.serializer.CharInfo$CharKey $r4;

        r0 := @this: org.apache.xml.serializer.CharInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = specialinvoke r0.<org.apache.xml.serializer.CharInfo: int[] createEmptySetOfIntegers(int)>(65535);

        r0.<org.apache.xml.serializer.CharInfo: int[] array_of_bits> = $r1;

        r0.<org.apache.xml.serializer.CharInfo: int firstWordNotUsed> = 0;

        $r2 = newarray (boolean)[128];

        r0.<org.apache.xml.serializer.CharInfo: boolean[] shouldMapAttrChar_ASCII> = $r2;

        $r3 = newarray (boolean)[128];

        r0.<org.apache.xml.serializer.CharInfo: boolean[] shouldMapTextChar_ASCII> = $r3;

        $r4 = new org.apache.xml.serializer.CharInfo$CharKey;

        specialinvoke $r4.<org.apache.xml.serializer.CharInfo$CharKey: void <init>()>();

        r0.<org.apache.xml.serializer.CharInfo: org.apache.xml.serializer.CharInfo$CharKey m_charKey> = $r4;

        r0.<org.apache.xml.serializer.CharInfo: boolean onlyQuotAmpLtGt> = 1;

        return;
    }

    private void <init>(java.lang.String, java.lang.String, boolean)
    {
        org.apache.xml.serializer.CharInfo r0;
        java.lang.String r1, r2, r14, r15, r16, r21, $r28, $r29, $r33, $r39, $r43, $r51, $r52;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6;
        java.util.ResourceBundle r3, r23;
        java.io.InputStream r4, r6, r19, r20;
        java.lang.ClassLoader r5;
        java.lang.Throwable r8, $r49;
        java.lang.Exception r10, $r41, $r42, $r47, $r48, $r50;
        org.apache.xml.serializer.utils.Messages r11, $r34;
        java.lang.Object[] r12, $r35;
        java.io.BufferedReader r13, $r27, $r45;
        int i0, i1, i2, $i3, $i5, $i7, $i8;
        java.util.Enumeration r22;
        java.util.HashMap $r25;
        java.io.InputStreamReader $r26, $r46;
        boolean[] $r30, $r31, $r32;
        char $c4, $c6, $c9;
        java.lang.RuntimeException $r36, $r53;
        java.lang.Class $r37;
        java.net.URL $r38;
        java.lang.Object $r40;
        java.io.UnsupportedEncodingException $r44;

        r0 := @this: org.apache.xml.serializer.CharInfo;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        specialinvoke r0.<org.apache.xml.serializer.CharInfo: void <init>()>();

        $r25 = new java.util.HashMap;

        specialinvoke $r25.<java.util.HashMap: void <init>()>();

        r0.<org.apache.xml.serializer.CharInfo: java.util.HashMap m_charToString> = $r25;

        z1 = 1;

        r3 = null;

        if z0 == 0 goto label03;

     label01:
        r23 = staticinvoke <java.util.PropertyResourceBundle: java.util.ResourceBundle getBundle(java.lang.String)>(r1);

     label02:
        r3 = r23;

     label03:
        if r3 == null goto label05;

        r22 = virtualinvoke r3.<java.util.ResourceBundle: java.util.Enumeration getKeys()>();

     label04:
        $z6 = interfaceinvoke r22.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z6 == 0 goto label46;

        $r40 = interfaceinvoke r22.<java.util.Enumeration: java.lang.Object nextElement()>();

        r21 = (java.lang.String) $r40;

        $r39 = virtualinvoke r3.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(r21);

        $i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r39);

        $c9 = (char) $i8;

        $z5 = specialinvoke r0.<org.apache.xml.serializer.CharInfo: boolean defineEntity(java.lang.String,char)>(r21, $c9);

        if $z5 == 0 goto label04;

        z1 = 0;

        goto label04;

     label05:
        r4 = null;

        if z0 == 0 goto label14;

     label06:
        $r37 = class "org/apache/xml/serializer/CharInfo";

        r4 = virtualinvoke $r37.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>(r1);

     label07:
        if r4 != null goto label23;

     label08:
        $r36 = new java.lang.RuntimeException;

        $r34 = <org.apache.xml.serializer.utils.Utils: org.apache.xml.serializer.utils.Messages messages>;

        $r35 = newarray (java.lang.Object)[2];

        $r35[0] = r1;

        $r35[1] = r1;

        $r33 = virtualinvoke $r34.<org.apache.xml.serializer.utils.Messages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_RESOURCE_COULD_NOT_FIND", $r35);

        specialinvoke $r36.<java.lang.RuntimeException: void <init>(java.lang.String)>($r33);

        throw $r36;

     label09:
        $r42 := @caughtexception;

        r10 = $r42;

     label10:
        r11 = <org.apache.xml.serializer.utils.Utils: org.apache.xml.serializer.utils.Messages messages>;

        r12 = newarray (java.lang.Object)[4];

        r12[0] = r1;

        $r43 = virtualinvoke r10.<java.lang.Exception: java.lang.String toString()>();

        r12[1] = $r43;

        r12[2] = r1;

        $r51 = virtualinvoke r10.<java.lang.Exception: java.lang.String toString()>();

        r12[3] = $r51;

        $r53 = new java.lang.RuntimeException;

        $r52 = virtualinvoke r11.<org.apache.xml.serializer.utils.Messages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_RESOURCE_COULD_NOT_LOAD", r12);

        specialinvoke $r53.<java.lang.RuntimeException: void <init>(java.lang.String)>($r52);

        throw $r53;

     label11:
        $r49 := @caughtexception;

        r8 = $r49;

        if r4 == null goto label13;

     label12:
        virtualinvoke r4.<java.io.InputStream: void close()>();

     label13:
        throw r8;

     label14:
        r5 = staticinvoke <org.apache.xml.serializer.ObjectFactory: java.lang.ClassLoader findClassLoader()>();

     label15:
        r4 = null;

        if r5 != null goto label21;

     label16:
        r6 = staticinvoke <java.lang.ClassLoader: java.io.InputStream getSystemResourceAsStream(java.lang.String)>(r1);

     label17:
        r4 = r6;

     label18:
        if r4 != null goto label07;

     label19:
        $r38 = new java.net.URL;

        specialinvoke $r38.<java.net.URL: void <init>(java.lang.String)>(r1);

        r20 = virtualinvoke $r38.<java.net.URL: java.io.InputStream openStream()>();

     label20:
        r4 = r20;

        goto label07;

     label21:
        r19 = virtualinvoke r5.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>(r1);

     label22:
        r4 = r19;

        goto label18;

     label23:
        $r27 = new java.io.BufferedReader;

        $r26 = new java.io.InputStreamReader;

        specialinvoke $r26.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r4, "UTF-8");

        specialinvoke $r27.<java.io.BufferedReader: void <init>(java.io.Reader)>($r26);

        r13 = $r27;

     label24:
        r14 = virtualinvoke r13.<java.io.BufferedReader: java.lang.String readLine()>();

     label25:
        if r14 == null goto label43;

     label26:
        $i3 = virtualinvoke r14.<java.lang.String: int length()>();

        if $i3 == 0 goto label27;

        $c4 = virtualinvoke r14.<java.lang.String: char charAt(int)>(0);

        if $c4 != 35 goto label32;

     label27:
        r14 = virtualinvoke r13.<java.io.BufferedReader: java.lang.String readLine()>();

     label28:
        goto label25;

     label29:
        $r44 := @caughtexception;

     label30:
        $r45 = new java.io.BufferedReader;

        $r46 = new java.io.InputStreamReader;

        specialinvoke $r46.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r4);

        specialinvoke $r45.<java.io.BufferedReader: void <init>(java.io.Reader)>($r46);

        r13 = $r45;

     label31:
        goto label24;

     label32:
        i0 = virtualinvoke r14.<java.lang.String: int indexOf(int)>(32);

     label33:
        if i0 <= 1 goto label41;

     label34:
        r15 = virtualinvoke r14.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

     label35:
        i1 = i0 + 1;

     label36:
        $i5 = virtualinvoke r14.<java.lang.String: int length()>();

        if i1 >= $i5 goto label41;

        r16 = virtualinvoke r14.<java.lang.String: java.lang.String substring(int)>(i1);

        i2 = virtualinvoke r16.<java.lang.String: int indexOf(int)>(32);

     label37:
        if i2 <= 0 goto label39;

     label38:
        r16 = virtualinvoke r16.<java.lang.String: java.lang.String substring(int,int)>(0, i2);

     label39:
        $i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r16);

        $c6 = (char) $i7;

        $z4 = specialinvoke r0.<org.apache.xml.serializer.CharInfo: boolean defineEntity(java.lang.String,char)>(r15, $c6);

        if $z4 == 0 goto label41;

     label40:
        z1 = 0;

     label41:
        r14 = virtualinvoke r13.<java.io.BufferedReader: java.lang.String readLine()>();

     label42:
        goto label25;

     label43:
        virtualinvoke r4.<java.io.InputStream: void close()>();

     label44:
        if r4 == null goto label46;

     label45:
        virtualinvoke r4.<java.io.InputStream: void close()>();

     label46:
        r0.<org.apache.xml.serializer.CharInfo: boolean onlyQuotAmpLtGt> = z1;

        $r29 = "xml";

        $z3 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z3 == 0 goto label47;

        $r30 = r0.<org.apache.xml.serializer.CharInfo: boolean[] shouldMapTextChar_ASCII>;

        $r30[34] = 0;

     label47:
        $r28 = "html";

        $z2 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label48;

        $r31 = r0.<org.apache.xml.serializer.CharInfo: boolean[] shouldMapAttrChar_ASCII>;

        $r31[60] = 0;

        $r32 = r0.<org.apache.xml.serializer.CharInfo: boolean[] shouldMapTextChar_ASCII>;

        $r32[34] = 0;

     label48:
        return;

     label49:
        $r50 := @caughtexception;

        r3 = null;

        goto label03;

     label50:
        $r41 := @caughtexception;

        goto label46;

     label51:
        $r48 := @caughtexception;

        goto label13;

     label52:
        $r47 := @caughtexception;

        goto label07;

        catch java.lang.Exception from label01 to label02 with label49;
        catch java.lang.Exception from label06 to label07 with label09;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Exception from label08 to label09 with label09;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.Exception from label12 to label13 with label51;
        catch java.lang.Exception from label14 to label15 with label09;
        catch java.lang.Throwable from label14 to label15 with label11;
        catch java.lang.Exception from label16 to label17 with label09;
        catch java.lang.Throwable from label16 to label17 with label11;
        catch java.lang.Exception from label19 to label20 with label52;
        catch java.lang.Throwable from label19 to label20 with label11;
        catch java.lang.Exception from label21 to label22 with label09;
        catch java.lang.Throwable from label21 to label22 with label11;
        catch java.io.UnsupportedEncodingException from label23 to label24 with label29;
        catch java.lang.Exception from label23 to label24 with label09;
        catch java.lang.Throwable from label23 to label24 with label11;
        catch java.lang.Exception from label24 to label25 with label09;
        catch java.lang.Throwable from label24 to label25 with label11;
        catch java.lang.Exception from label26 to label27 with label09;
        catch java.lang.Throwable from label26 to label27 with label11;
        catch java.lang.Exception from label27 to label28 with label09;
        catch java.lang.Throwable from label27 to label28 with label11;
        catch java.lang.Exception from label30 to label31 with label09;
        catch java.lang.Throwable from label30 to label31 with label11;
        catch java.lang.Exception from label32 to label33 with label09;
        catch java.lang.Throwable from label32 to label33 with label11;
        catch java.lang.Exception from label34 to label35 with label09;
        catch java.lang.Throwable from label34 to label35 with label11;
        catch java.lang.Exception from label36 to label37 with label09;
        catch java.lang.Throwable from label36 to label37 with label11;
        catch java.lang.Exception from label38 to label39 with label09;
        catch java.lang.Throwable from label38 to label39 with label11;
        catch java.lang.Exception from label39 to label40 with label09;
        catch java.lang.Throwable from label39 to label40 with label11;
        catch java.lang.Exception from label41 to label42 with label09;
        catch java.lang.Throwable from label41 to label42 with label11;
        catch java.lang.Exception from label43 to label44 with label09;
        catch java.lang.Throwable from label43 to label44 with label11;
        catch java.lang.Exception from label45 to label46 with label50;
    }

    void <init>(java.lang.String, java.lang.String, boolean, org.apache.xml.serializer.CharInfo$1)
    {
        org.apache.xml.serializer.CharInfo r0;
        java.lang.String r1, r2;
        boolean z0;
        org.apache.xml.serializer.CharInfo$1 r3;

        r0 := @this: org.apache.xml.serializer.CharInfo;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r3 := @parameter3: org.apache.xml.serializer.CharInfo$1;

        specialinvoke r0.<org.apache.xml.serializer.CharInfo: void <init>(java.lang.String,java.lang.String,boolean)>(r1, r2, z0);

        return;
    }

    private static int arrayIndex(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = i0 >> 5;

        return $i1;
    }

    private static int bit(int)
    {
        int i0, $i1, $i2;

        i0 := @parameter0: int;

        $i1 = i0 & 31;

        $i2 = 1 << $i1;

        return $i2;
    }

    private int[] createEmptySetOfIntegers(int)
    {
        org.apache.xml.serializer.CharInfo r0;
        int i0, $i1, $i2, $i3;
        int[] $r1;

        r0 := @this: org.apache.xml.serializer.CharInfo;

        i0 := @parameter0: int;

        r0.<org.apache.xml.serializer.CharInfo: int firstWordNotUsed> = 0;

        $i1 = i0 - 1;

        $i2 = staticinvoke <org.apache.xml.serializer.CharInfo: int arrayIndex(int)>($i1);

        $i3 = 1 + $i2;

        $r1 = newarray (int)[$i3];

        return $r1;
    }

    private boolean defineEntity(java.lang.String, char)
    {
        org.apache.xml.serializer.CharInfo r0;
        java.lang.String r1, $r6;
        char c0;
        java.lang.StringBuffer r2, $r3;
        boolean $z0;

        r0 := @this: org.apache.xml.serializer.CharInfo;

        r1 := @parameter0: java.lang.String;

        c0 := @parameter1: char;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>(java.lang.String)>("&");

        r2 = $r3;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(59);

        $r6 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $z0 = virtualinvoke r0.<org.apache.xml.serializer.CharInfo: boolean defineChar2StringMapping(java.lang.String,char)>($r6, c0);

        return $z0;
    }

    private boolean extraEntity(java.lang.String, int)
    {
        org.apache.xml.serializer.CharInfo r0;
        java.lang.String r1;
        int i0;
        boolean z0, z1, z2, z3, z4;

        r0 := @this: org.apache.xml.serializer.CharInfo;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 = 0;

        if i0 >= 128 goto label2;

        lookupswitch(i0)
        {
            case 34: goto label3;
            case 38: goto label4;
            case 60: goto label5;
            case 62: goto label6;
            default: goto label1;
        };

     label1:
        z0 = 1;

     label2:
        return z0;

     label3:
        z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("&quot;");

        z0 = 0;

        if z4 != 0 goto label2;

        return 1;

     label4:
        z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("&amp;");

        z0 = 0;

        if z3 != 0 goto label2;

        return 1;

     label5:
        z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("&lt;");

        z0 = 0;

        if z2 != 0 goto label2;

        return 1;

     label6:
        z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("&gt;");

        z0 = 0;

        if z1 != 0 goto label2;

        return 1;
    }

    private final boolean get(int)
    {
        org.apache.xml.serializer.CharInfo r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        boolean z0;
        int[] $r1;

        r0 := @this: org.apache.xml.serializer.CharInfo;

        i0 := @parameter0: int;

        i1 = i0 >> 5;

        i2 = r0.<org.apache.xml.serializer.CharInfo: int firstWordNotUsed>;

        z0 = 0;

        if i1 >= i2 goto label1;

        $r1 = r0.<org.apache.xml.serializer.CharInfo: int[] array_of_bits>;

        $i5 = $r1[i1];

        $i3 = i0 & 31;

        $i4 = 1 << $i3;

        $i6 = $i5 & $i4;

        if $i6 == 0 goto label2;

        z0 = 1;

     label1:
        return z0;

     label2:
        return 0;
    }

    static org.apache.xml.serializer.CharInfo getCharInfo(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        org.apache.xml.serializer.CharInfo r2, r6, r7, r8, $r14, $r18;
        javax.xml.transform.TransformerException r5, $r20;
        java.util.Hashtable $r9, $r11;
        java.lang.Object $r10;
        java.lang.Exception $r13, $r15;
        int $i0;
        org.apache.xml.serializer.utils.WrappedRuntimeException $r19;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r9 = <org.apache.xml.serializer.CharInfo: java.util.Hashtable m_getCharInfoCache>;

        $r10 = virtualinvoke $r9.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r0);

        r2 = (org.apache.xml.serializer.CharInfo) $r10;

        if r2 == null goto label01;

        $r14 = staticinvoke <org.apache.xml.serializer.CharInfo: org.apache.xml.serializer.CharInfo mutableCopyOf(org.apache.xml.serializer.CharInfo)>(r2);

        return $r14;

     label01:
        r7 = staticinvoke <org.apache.xml.serializer.CharInfo: org.apache.xml.serializer.CharInfo getCharInfoBasedOnPrivilege(java.lang.String,java.lang.String,boolean)>(r0, r1, 1);

        $r11 = <org.apache.xml.serializer.CharInfo: java.util.Hashtable m_getCharInfoCache>;

        virtualinvoke $r11.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r7);

        r8 = staticinvoke <org.apache.xml.serializer.CharInfo: org.apache.xml.serializer.CharInfo mutableCopyOf(org.apache.xml.serializer.CharInfo)>(r7);

     label02:
        return r8;

     label03:
        $r13 := @caughtexception;

     label04:
        r6 = staticinvoke <org.apache.xml.serializer.CharInfo: org.apache.xml.serializer.CharInfo getCharInfoBasedOnPrivilege(java.lang.String,java.lang.String,boolean)>(r0, r1, 0);

     label05:
        return r6;

     label06:
        $r15 := @caughtexception;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(58);

        if $i0 >= 0 goto label08;

        staticinvoke <org.apache.xml.serializer.utils.SystemIDResolver: java.lang.String getAbsoluteURIFromRelative(java.lang.String)>(r0);

     label07:
        $r18 = staticinvoke <org.apache.xml.serializer.CharInfo: org.apache.xml.serializer.CharInfo getCharInfoBasedOnPrivilege(java.lang.String,java.lang.String,boolean)>(r0, r1, 0);

        return $r18;

     label08:
        staticinvoke <org.apache.xml.serializer.utils.SystemIDResolver: java.lang.String getAbsoluteURI(java.lang.String,java.lang.String)>(r0, null);

     label09:
        goto label07;

     label10:
        $r20 := @caughtexception;

        r5 = $r20;

        $r19 = new org.apache.xml.serializer.utils.WrappedRuntimeException;

        specialinvoke $r19.<org.apache.xml.serializer.utils.WrappedRuntimeException: void <init>(java.lang.Exception)>(r5);

        throw $r19;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.lang.Exception from label04 to label05 with label06;
        catch javax.xml.transform.TransformerException from label08 to label09 with label10;
    }

    private static org.apache.xml.serializer.CharInfo getCharInfoBasedOnPrivilege(java.lang.String, java.lang.String, boolean)
    {
        java.lang.String r0, r1;
        boolean z0;
        org.apache.xml.serializer.CharInfo$1 $r2;
        java.lang.Object $r3;
        org.apache.xml.serializer.CharInfo $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r2 = new org.apache.xml.serializer.CharInfo$1;

        specialinvoke $r2.<org.apache.xml.serializer.CharInfo$1: void <init>(java.lang.String,java.lang.String,boolean)>(r0, r1, z0);

        $r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r2);

        $r4 = (org.apache.xml.serializer.CharInfo) $r3;

        return $r4;
    }

    private static org.apache.xml.serializer.CharInfo mutableCopyOf(org.apache.xml.serializer.CharInfo)
    {
        org.apache.xml.serializer.CharInfo r0, r1, $r2;
        int i0, i1, i2, $i3;
        int[] $r3, $r4, $r5;
        boolean[] $r6, $r7, $r8, $r9, $r10, $r11;
        java.lang.Object $r12;
        java.util.HashMap $r13, $r14;
        boolean $z0;

        r0 := @parameter0: org.apache.xml.serializer.CharInfo;

        $r2 = new org.apache.xml.serializer.CharInfo;

        specialinvoke $r2.<org.apache.xml.serializer.CharInfo: void <init>()>();

        r1 = $r2;

        $r3 = r0.<org.apache.xml.serializer.CharInfo: int[] array_of_bits>;

        i0 = lengthof $r3;

        $r5 = r0.<org.apache.xml.serializer.CharInfo: int[] array_of_bits>;

        $r4 = r1.<org.apache.xml.serializer.CharInfo: int[] array_of_bits>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r4, 0, i0);

        $i3 = r0.<org.apache.xml.serializer.CharInfo: int firstWordNotUsed>;

        r1.<org.apache.xml.serializer.CharInfo: int firstWordNotUsed> = $i3;

        $r6 = r0.<org.apache.xml.serializer.CharInfo: boolean[] shouldMapAttrChar_ASCII>;

        i1 = lengthof $r6;

        $r8 = r0.<org.apache.xml.serializer.CharInfo: boolean[] shouldMapAttrChar_ASCII>;

        $r7 = r1.<org.apache.xml.serializer.CharInfo: boolean[] shouldMapAttrChar_ASCII>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, $r7, 0, i1);

        $r9 = r0.<org.apache.xml.serializer.CharInfo: boolean[] shouldMapTextChar_ASCII>;

        i2 = lengthof $r9;

        $r11 = r0.<org.apache.xml.serializer.CharInfo: boolean[] shouldMapTextChar_ASCII>;

        $r10 = r1.<org.apache.xml.serializer.CharInfo: boolean[] shouldMapTextChar_ASCII>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r11, 0, $r10, 0, i2);

        $r13 = r0.<org.apache.xml.serializer.CharInfo: java.util.HashMap m_charToString>;

        $r12 = virtualinvoke $r13.<java.util.HashMap: java.lang.Object clone()>();

        $r14 = (java.util.HashMap) $r12;

        r1.<org.apache.xml.serializer.CharInfo: java.util.HashMap m_charToString> = $r14;

        $z0 = r0.<org.apache.xml.serializer.CharInfo: boolean onlyQuotAmpLtGt>;

        r1.<org.apache.xml.serializer.CharInfo: boolean onlyQuotAmpLtGt> = $z0;

        return r1;
    }

    private final void set(int)
    {
        org.apache.xml.serializer.CharInfo r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        int[] r1;

        r0 := @this: org.apache.xml.serializer.CharInfo;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.xml.serializer.CharInfo: void setASCIItextDirty(int)>(i0);

        specialinvoke r0.<org.apache.xml.serializer.CharInfo: void setASCIIattrDirty(int)>(i0);

        i1 = i0 >> 5;

        i2 = i1 + 1;

        $i3 = r0.<org.apache.xml.serializer.CharInfo: int firstWordNotUsed>;

        if $i3 >= i2 goto label1;

        r0.<org.apache.xml.serializer.CharInfo: int firstWordNotUsed> = i2;

     label1:
        r1 = r0.<org.apache.xml.serializer.CharInfo: int[] array_of_bits>;

        $i6 = r1[i1];

        $i4 = i0 & 31;

        $i5 = 1 << $i4;

        $i7 = $i6 | $i5;

        r1[i1] = $i7;

        return;
    }

    private void setASCIIattrDirty(int)
    {
        org.apache.xml.serializer.CharInfo r0;
        int i0;
        boolean[] $r1;

        r0 := @this: org.apache.xml.serializer.CharInfo;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 >= 128 goto label1;

        $r1 = r0.<org.apache.xml.serializer.CharInfo: boolean[] shouldMapAttrChar_ASCII>;

        $r1[i0] = 1;

     label1:
        return;
    }

    private void setASCIItextDirty(int)
    {
        org.apache.xml.serializer.CharInfo r0;
        int i0;
        boolean[] $r1;

        r0 := @this: org.apache.xml.serializer.CharInfo;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 >= 128 goto label1;

        $r1 = r0.<org.apache.xml.serializer.CharInfo: boolean[] shouldMapTextChar_ASCII>;

        $r1[i0] = 1;

     label1:
        return;
    }

    boolean defineChar2StringMapping(java.lang.String, char)
    {
        org.apache.xml.serializer.CharInfo r0;
        java.lang.String r1;
        char c0;
        org.apache.xml.serializer.CharInfo$CharKey r2, $r3;
        java.util.HashMap $r4;
        boolean $z0;

        r0 := @this: org.apache.xml.serializer.CharInfo;

        r1 := @parameter0: java.lang.String;

        c0 := @parameter1: char;

        $r3 = new org.apache.xml.serializer.CharInfo$CharKey;

        specialinvoke $r3.<org.apache.xml.serializer.CharInfo$CharKey: void <init>(char)>(c0);

        r2 = $r3;

        $r4 = r0.<org.apache.xml.serializer.CharInfo: java.util.HashMap m_charToString>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1);

        specialinvoke r0.<org.apache.xml.serializer.CharInfo: void set(int)>(c0);

        $z0 = specialinvoke r0.<org.apache.xml.serializer.CharInfo: boolean extraEntity(java.lang.String,int)>(r1, c0);

        return $z0;
    }

    java.lang.String getOutputStringForChar(char)
    {
        org.apache.xml.serializer.CharInfo r0;
        char c0;
        org.apache.xml.serializer.CharInfo$CharKey $r1, $r2;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.xml.serializer.CharInfo;

        c0 := @parameter0: char;

        $r1 = r0.<org.apache.xml.serializer.CharInfo: org.apache.xml.serializer.CharInfo$CharKey m_charKey>;

        virtualinvoke $r1.<org.apache.xml.serializer.CharInfo$CharKey: void setChar(char)>(c0);

        $r3 = r0.<org.apache.xml.serializer.CharInfo: java.util.HashMap m_charToString>;

        $r2 = r0.<org.apache.xml.serializer.CharInfo: org.apache.xml.serializer.CharInfo$CharKey m_charKey>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r5 = (java.lang.String) $r4;

        return $r5;
    }

    final boolean shouldMapAttrChar(int)
    {
        org.apache.xml.serializer.CharInfo r0;
        int i0;
        boolean $z0, $z1;
        boolean[] $r1;

        r0 := @this: org.apache.xml.serializer.CharInfo;

        i0 := @parameter0: int;

        if i0 >= 128 goto label1;

        $r1 = r0.<org.apache.xml.serializer.CharInfo: boolean[] shouldMapAttrChar_ASCII>;

        $z1 = $r1[i0];

        return $z1;

     label1:
        $z0 = specialinvoke r0.<org.apache.xml.serializer.CharInfo: boolean get(int)>(i0);

        return $z0;
    }

    final boolean shouldMapTextChar(int)
    {
        org.apache.xml.serializer.CharInfo r0;
        int i0;
        boolean $z0, $z1;
        boolean[] $r1;

        r0 := @this: org.apache.xml.serializer.CharInfo;

        i0 := @parameter0: int;

        if i0 >= 128 goto label1;

        $r1 = r0.<org.apache.xml.serializer.CharInfo: boolean[] shouldMapTextChar_ASCII>;

        $z1 = $r1[i0];

        return $z1;

     label1:
        $z0 = specialinvoke r0.<org.apache.xml.serializer.CharInfo: boolean get(int)>(i0);

        return $z0;
    }
}
