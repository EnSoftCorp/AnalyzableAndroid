public class com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities extends java.lang.Object
{
    protected static final java.lang.String ANY_POLICY;
    protected static final java.lang.String AUTHORITY_KEY_IDENTIFIER;
    protected static final java.lang.String BASIC_CONSTRAINTS;
    protected static final java.lang.String CERTIFICATE_POLICIES;
    protected static final java.lang.String CRL_DISTRIBUTION_POINTS;
    protected static final java.lang.String CRL_NUMBER;
    protected static final int CRL_SIGN;
    protected static final com.android.org.bouncycastle.jce.provider.PKIXCRLUtil CRL_UTIL;
    protected static final java.lang.String DELTA_CRL_INDICATOR;
    protected static final java.lang.String FRESHEST_CRL;
    protected static final java.lang.String INHIBIT_ANY_POLICY;
    protected static final java.lang.String ISSUING_DISTRIBUTION_POINT;
    protected static final int KEY_CERT_SIGN;
    protected static final java.lang.String KEY_USAGE;
    protected static final java.lang.String NAME_CONSTRAINTS;
    protected static final java.lang.String POLICY_CONSTRAINTS;
    protected static final java.lang.String POLICY_MAPPINGS;
    protected static final java.lang.String SUBJECT_ALTERNATIVE_NAME;
    protected static final java.lang.String[] crlReasons;

    static void <clinit>()
    {
        com.android.org.bouncycastle.jce.provider.PKIXCRLUtil $r0;
        com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r16, $r18, $r20, $r22, $r24, $r26;
        java.lang.String $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r17, $r19, $r21, $r23, $r25, $r27, $r29;
        java.lang.String[] $r28;

        <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: int KEY_CERT_SIGN> = 5;

        <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: int CRL_SIGN> = 6;

        <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String ANY_POLICY> = "2.5.29.32.0";

        $r0 = new com.android.org.bouncycastle.jce.provider.PKIXCRLUtil;

        specialinvoke $r0.<com.android.org.bouncycastle.jce.provider.PKIXCRLUtil: void <init>()>();

        <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.jce.provider.PKIXCRLUtil CRL_UTIL> = $r0;

        $r1 = <com.android.org.bouncycastle.asn1.x509.Extension: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier certificatePolicies>;

        $r2 = virtualinvoke $r1.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String CERTIFICATE_POLICIES> = $r2;

        $r3 = <com.android.org.bouncycastle.asn1.x509.Extension: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier basicConstraints>;

        $r4 = virtualinvoke $r3.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String BASIC_CONSTRAINTS> = $r4;

        $r5 = <com.android.org.bouncycastle.asn1.x509.Extension: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier policyMappings>;

        $r6 = virtualinvoke $r5.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String POLICY_MAPPINGS> = $r6;

        $r7 = <com.android.org.bouncycastle.asn1.x509.Extension: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier subjectAlternativeName>;

        $r8 = virtualinvoke $r7.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String SUBJECT_ALTERNATIVE_NAME> = $r8;

        $r9 = <com.android.org.bouncycastle.asn1.x509.Extension: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier nameConstraints>;

        $r10 = virtualinvoke $r9.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String NAME_CONSTRAINTS> = $r10;

        $r11 = <com.android.org.bouncycastle.asn1.x509.Extension: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier keyUsage>;

        $r12 = virtualinvoke $r11.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String KEY_USAGE> = $r12;

        $r13 = <com.android.org.bouncycastle.asn1.x509.Extension: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier inhibitAnyPolicy>;

        $r14 = virtualinvoke $r13.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String INHIBIT_ANY_POLICY> = $r14;

        $r15 = <com.android.org.bouncycastle.asn1.x509.Extension: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier issuingDistributionPoint>;

        $r17 = virtualinvoke $r15.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String ISSUING_DISTRIBUTION_POINT> = $r17;

        $r16 = <com.android.org.bouncycastle.asn1.x509.Extension: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier deltaCRLIndicator>;

        $r19 = virtualinvoke $r16.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String DELTA_CRL_INDICATOR> = $r19;

        $r18 = <com.android.org.bouncycastle.asn1.x509.Extension: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier policyConstraints>;

        $r21 = virtualinvoke $r18.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String POLICY_CONSTRAINTS> = $r21;

        $r20 = <com.android.org.bouncycastle.asn1.x509.Extension: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier freshestCRL>;

        $r23 = virtualinvoke $r20.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String FRESHEST_CRL> = $r23;

        $r22 = <com.android.org.bouncycastle.asn1.x509.Extension: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier cRLDistributionPoints>;

        $r25 = virtualinvoke $r22.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String CRL_DISTRIBUTION_POINTS> = $r25;

        $r24 = <com.android.org.bouncycastle.asn1.x509.Extension: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier authorityKeyIdentifier>;

        $r27 = virtualinvoke $r24.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String AUTHORITY_KEY_IDENTIFIER> = $r27;

        $r26 = <com.android.org.bouncycastle.asn1.x509.Extension: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier cRLNumber>;

        $r29 = virtualinvoke $r26.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String CRL_NUMBER> = $r29;

        $r28 = newarray (java.lang.String)[11];

        $r28[0] = "unspecified";

        $r28[1] = "keyCompromise";

        $r28[2] = "cACompromise";

        $r28[3] = "affiliationChanged";

        $r28[4] = "superseded";

        $r28[5] = "cessationOfOperation";

        $r28[6] = "certificateHold";

        $r28[7] = "unknown";

        $r28[8] = "removeFromCRL";

        $r28[9] = "privilegeWithdrawn";

        $r28[10] = "aACompromise";

        <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String[] crlReasons> = $r28;

        return;
    }

    public void <init>()
    {
        com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities r0;

        r0 := @this: com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected static void addAdditionalStoreFromLocation(java.lang.String, com.android.org.bouncycastle.x509.ExtendedPKIXParameters)
    {
        java.lang.String r0;
        com.android.org.bouncycastle.x509.ExtendedPKIXParameters r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.android.org.bouncycastle.x509.ExtendedPKIXParameters;

        $z0 = virtualinvoke r1.<com.android.org.bouncycastle.x509.ExtendedPKIXParameters: boolean isAdditionalLocationsEnabled()>();

        if $z0 == 0 goto label1;

     label1:
        return;
    }

    protected static void addAdditionalStoresFromAltNames(java.security.cert.X509Certificate, com.android.org.bouncycastle.x509.ExtendedPKIXParameters) throws java.security.cert.CertificateParsingException
    {
        java.security.cert.X509Certificate r0;
        com.android.org.bouncycastle.x509.ExtendedPKIXParameters r1;
        java.util.Iterator r2;
        java.util.List r3;
        java.util.Collection $r4, $r5;
        boolean $z0, $z1;
        java.lang.Object $r6, $r7, $r9;
        java.lang.Integer $r8;
        java.lang.String $r10;

        r0 := @parameter0: java.security.cert.X509Certificate;

        r1 := @parameter1: com.android.org.bouncycastle.x509.ExtendedPKIXParameters;

        $r4 = virtualinvoke r0.<java.security.cert.X509Certificate: java.util.Collection getIssuerAlternativeNames()>();

        if $r4 == null goto label2;

        $r5 = virtualinvoke r0.<java.security.cert.X509Certificate: java.util.Collection getIssuerAlternativeNames()>();

        r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.List) $r6;

        $r7 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0);

        $r8 = staticinvoke <com.android.org.bouncycastle.util.Integers: java.lang.Integer valueOf(int)>(6);

        $z1 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label1;

        $r9 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(1);

        $r10 = (java.lang.String) $r9;

        staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: void addAdditionalStoreFromLocation(java.lang.String,com.android.org.bouncycastle.x509.ExtendedPKIXParameters)>($r10, r1);

        goto label1;

     label2:
        return;
    }

    protected static void addAdditionalStoresFromCRLDistributionPoint(com.android.org.bouncycastle.asn1.x509.CRLDistPoint, com.android.org.bouncycastle.x509.ExtendedPKIXParameters) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        com.android.org.bouncycastle.asn1.x509.CRLDistPoint r0;
        com.android.org.bouncycastle.x509.ExtendedPKIXParameters r1;
        java.lang.Exception r2, $r13;
        com.android.org.bouncycastle.asn1.x509.DistributionPoint[] r3;
        int i0, i1, $i2, $i3, $i4, $i5;
        com.android.org.bouncycastle.asn1.x509.DistributionPointName r4;
        com.android.org.bouncycastle.asn1.x509.GeneralName[] r5;
        com.android.org.bouncycastle.asn1.x509.DistributionPoint $r6;
        com.android.org.bouncycastle.asn1.ASN1Encodable $r7, $r12;
        com.android.org.bouncycastle.asn1.x509.GeneralNames $r8;
        com.android.org.bouncycastle.asn1.x509.GeneralName $r9, $r10;
        com.android.org.bouncycastle.asn1.DERIA5String $r11;
        java.lang.String $r14;
        com.android.org.bouncycastle.jce.provider.AnnotatedException $r15;

        r0 := @parameter0: com.android.org.bouncycastle.asn1.x509.CRLDistPoint;

        r1 := @parameter1: com.android.org.bouncycastle.x509.ExtendedPKIXParameters;

        if r0 == null goto label8;

     label1:
        r3 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.x509.CRLDistPoint: com.android.org.bouncycastle.asn1.x509.DistributionPoint[] getDistributionPoints()>();

     label2:
        i0 = 0;

     label3:
        $i2 = lengthof r3;

        if i0 >= $i2 goto label8;

        $r6 = r3[i0];

        r4 = virtualinvoke $r6.<com.android.org.bouncycastle.asn1.x509.DistributionPoint: com.android.org.bouncycastle.asn1.x509.DistributionPointName getDistributionPoint()>();

        if r4 == null goto label7;

        $i3 = virtualinvoke r4.<com.android.org.bouncycastle.asn1.x509.DistributionPointName: int getType()>();

        if $i3 != 0 goto label7;

        $r7 = virtualinvoke r4.<com.android.org.bouncycastle.asn1.x509.DistributionPointName: com.android.org.bouncycastle.asn1.ASN1Encodable getName()>();

        $r8 = staticinvoke <com.android.org.bouncycastle.asn1.x509.GeneralNames: com.android.org.bouncycastle.asn1.x509.GeneralNames getInstance(java.lang.Object)>($r7);

        r5 = virtualinvoke $r8.<com.android.org.bouncycastle.asn1.x509.GeneralNames: com.android.org.bouncycastle.asn1.x509.GeneralName[] getNames()>();

        i1 = 0;

     label4:
        $i4 = lengthof r5;

        if i1 >= $i4 goto label7;

        $r9 = r5[i1];

        $i5 = virtualinvoke $r9.<com.android.org.bouncycastle.asn1.x509.GeneralName: int getTagNo()>();

        if $i5 != 6 goto label5;

        $r10 = r5[i1];

        $r12 = virtualinvoke $r10.<com.android.org.bouncycastle.asn1.x509.GeneralName: com.android.org.bouncycastle.asn1.ASN1Encodable getName()>();

        $r11 = staticinvoke <com.android.org.bouncycastle.asn1.DERIA5String: com.android.org.bouncycastle.asn1.DERIA5String getInstance(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r11.<com.android.org.bouncycastle.asn1.DERIA5String: java.lang.String getString()>();

        staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: void addAdditionalStoreFromLocation(java.lang.String,com.android.org.bouncycastle.x509.ExtendedPKIXParameters)>($r14, r1);

     label5:
        i1 = i1 + 1;

        goto label4;

     label6:
        $r13 := @caughtexception;

        r2 = $r13;

        $r15 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r15.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Distribution points could not be read.", r2);

        throw $r15;

     label7:
        i0 = i0 + 1;

        goto label3;

     label8:
        return;

        catch java.lang.Exception from label1 to label2 with label6;
    }

    protected static java.util.Collection findCertificates(com.android.org.bouncycastle.x509.X509CertStoreSelector, java.util.List) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        com.android.org.bouncycastle.x509.X509CertStoreSelector r0;
        java.util.List r1;
        java.util.HashSet r2, $r9;
        java.util.Iterator r3;
        java.lang.Object r4;
        java.security.cert.CertStore r5;
        java.security.cert.CertStoreException r6, $r12;
        com.android.org.bouncycastle.x509.X509Store r7;
        com.android.org.bouncycastle.util.StoreException r8, $r13;
        boolean $z0, $z1;
        java.util.Collection $r10, $r11;
        com.android.org.bouncycastle.jce.provider.AnnotatedException $r14, $r15;

        r0 := @parameter0: com.android.org.bouncycastle.x509.X509CertStoreSelector;

        r1 := @parameter1: java.util.List;

        $r9 = new java.util.HashSet;

        specialinvoke $r9.<java.util.HashSet: void <init>()>();

        r2 = $r9;

        r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label9;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $z1 = r4 instanceof com.android.org.bouncycastle.x509.X509Store;

        if $z1 == 0 goto label5;

        r7 = (com.android.org.bouncycastle.x509.X509Store) r4;

     label2:
        $r11 = virtualinvoke r7.<com.android.org.bouncycastle.x509.X509Store: java.util.Collection getMatches(com.android.org.bouncycastle.util.Selector)>(r0);

        interfaceinvoke r2.<java.util.Set: boolean addAll(java.util.Collection)>($r11);

     label3:
        goto label1;

     label4:
        $r13 := @caughtexception;

        r8 = $r13;

        $r15 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r15.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Problem while picking certificates from X.509 store.", r8);

        throw $r15;

     label5:
        r5 = (java.security.cert.CertStore) r4;

     label6:
        $r10 = virtualinvoke r5.<java.security.cert.CertStore: java.util.Collection getCertificates(java.security.cert.CertSelector)>(r0);

        interfaceinvoke r2.<java.util.Set: boolean addAll(java.util.Collection)>($r10);

     label7:
        goto label1;

     label8:
        $r12 := @caughtexception;

        r6 = $r12;

        $r14 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r14.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Problem while picking certificates from certificate store.", r6);

        throw $r14;

     label9:
        return r2;

        catch com.android.org.bouncycastle.util.StoreException from label2 to label3 with label4;
        catch java.security.cert.CertStoreException from label6 to label7 with label8;
    }

    protected static java.util.Collection findIssuerCerts(java.security.cert.X509Certificate, com.android.org.bouncycastle.x509.ExtendedPKIXBuilderParameters) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        java.security.cert.X509Certificate r0, $r20;
        com.android.org.bouncycastle.x509.ExtendedPKIXBuilderParameters r1;
        com.android.org.bouncycastle.x509.X509CertStoreSelector r2, $r8;
        java.util.HashSet r3, $r9;
        java.io.IOException r4, $r23;
        java.util.ArrayList r5, $r12;
        com.android.org.bouncycastle.jce.provider.AnnotatedException r6, $r21, $r22, $r24;
        java.util.Iterator r7;
        javax.security.auth.x500.X500Principal $r10;
        byte[] $r11;
        java.util.Collection $r13, $r16, $r17;
        java.util.List $r14, $r15, $r18;
        java.lang.Object $r19;
        boolean $z3;

        r0 := @parameter0: java.security.cert.X509Certificate;

        r1 := @parameter1: com.android.org.bouncycastle.x509.ExtendedPKIXBuilderParameters;

        $r8 = new com.android.org.bouncycastle.x509.X509CertStoreSelector;

        specialinvoke $r8.<com.android.org.bouncycastle.x509.X509CertStoreSelector: void <init>()>();

        r2 = $r8;

        $r9 = new java.util.HashSet;

        specialinvoke $r9.<java.util.HashSet: void <init>()>();

        r3 = $r9;

     label1:
        $r10 = virtualinvoke r0.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $r11 = virtualinvoke $r10.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        virtualinvoke r2.<com.android.org.bouncycastle.x509.X509CertStoreSelector: void setSubject(byte[])>($r11);

     label2:
        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r5 = $r12;

        $r14 = virtualinvoke r1.<com.android.org.bouncycastle.x509.ExtendedPKIXBuilderParameters: java.util.List getCertStores()>();

        $r13 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Collection findCertificates(com.android.org.bouncycastle.x509.X509CertStoreSelector,java.util.List)>(r2, $r14);

        interfaceinvoke r5.<java.util.List: boolean addAll(java.util.Collection)>($r13);

        $r15 = virtualinvoke r1.<com.android.org.bouncycastle.x509.ExtendedPKIXBuilderParameters: java.util.List getStores()>();

        $r16 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Collection findCertificates(com.android.org.bouncycastle.x509.X509CertStoreSelector,java.util.List)>(r2, $r15);

        interfaceinvoke r5.<java.util.List: boolean addAll(java.util.Collection)>($r16);

        $r18 = virtualinvoke r1.<com.android.org.bouncycastle.x509.ExtendedPKIXBuilderParameters: java.util.List getAdditionalStores()>();

        $r17 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Collection findCertificates(com.android.org.bouncycastle.x509.X509CertStoreSelector,java.util.List)>(r2, $r18);

        interfaceinvoke r5.<java.util.List: boolean addAll(java.util.Collection)>($r17);

        r7 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label6;

        $r19 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        $r20 = (java.security.cert.X509Certificate) $r19;

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r20);

        goto label3;

     label4:
        $r23 := @caughtexception;

        r4 = $r23;

        $r24 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r24.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Subject criteria for certificate selector to find issuer certificate could not be set.", r4);

        throw $r24;

     label5:
        $r22 := @caughtexception;

        r6 = $r22;

        $r21 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r21.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Issuer certificate cannot be searched.", r6);

        throw $r21;

     label6:
        return r3;

        catch java.io.IOException from label1 to label2 with label4;
        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label2 to label3 with label5;
    }

    protected static java.security.cert.TrustAnchor findTrustAnchor(java.security.cert.X509Certificate, java.util.Set) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        java.security.cert.X509Certificate r0;
        java.util.Set r1;
        java.security.cert.TrustAnchor $r2;

        r0 := @parameter0: java.security.cert.X509Certificate;

        r1 := @parameter1: java.util.Set;

        $r2 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.security.cert.TrustAnchor findTrustAnchor(java.security.cert.X509Certificate,java.util.Set,java.lang.String)>(r0, r1, null);

        return $r2;
    }

    protected static java.security.cert.TrustAnchor findTrustAnchor(java.security.cert.X509Certificate, java.util.Set, java.lang.String) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        java.security.cert.X509Certificate r0, $r18, $r22, $r23;
        java.util.Set r1;
        java.lang.String r2, $r17, $r21;
        java.security.cert.TrustAnchor r3;
        java.security.PublicKey r4, r12, $r20;
        java.lang.Exception r5, r10, $r27;
        java.security.cert.X509CertSelector r6, $r13;
        javax.security.auth.x500.X500Principal r7, $r19;
        java.io.IOException r8, $r24;
        java.util.Iterator r9;
        byte[] $r14;
        boolean $z0, $z1, $z2;
        java.lang.Object $r15;
        com.android.org.bouncycastle.jce.provider.AnnotatedException $r16, $r26;
        java.lang.IllegalArgumentException $r25;

        r0 := @parameter0: java.security.cert.X509Certificate;

        r1 := @parameter1: java.util.Set;

        r2 := @parameter2: java.lang.String;

        r3 = null;

        r4 = null;

        r5 = null;

        $r13 = new java.security.cert.X509CertSelector;

        specialinvoke $r13.<java.security.cert.X509CertSelector: void <init>()>();

        r6 = $r13;

        r7 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getEncodedIssuerPrincipal(java.lang.Object)>(r0);

     label01:
        $r14 = virtualinvoke r7.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        virtualinvoke r6.<java.security.cert.X509CertSelector: void setSubject(byte[])>($r14);

     label02:
        r9 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label16;

        if r3 != null goto label16;

        $r15 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.security.cert.TrustAnchor) $r15;

        $r18 = virtualinvoke r3.<java.security.cert.TrustAnchor: java.security.cert.X509Certificate getTrustedCert()>();

        if $r18 == null goto label10;

        $r22 = virtualinvoke r3.<java.security.cert.TrustAnchor: java.security.cert.X509Certificate getTrustedCert()>();

        $z2 = virtualinvoke r6.<java.security.cert.X509CertSelector: boolean match(java.security.cert.Certificate)>($r22);

        if $z2 == 0 goto label09;

        $r23 = virtualinvoke r3.<java.security.cert.TrustAnchor: java.security.cert.X509Certificate getTrustedCert()>();

        r4 = virtualinvoke $r23.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

     label04:
        if r4 == null goto label03;

     label05:
        staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: void verifyX509Certificate(java.security.cert.X509Certificate,java.security.PublicKey,java.lang.String)>(r0, r4, r2);

     label06:
        goto label03;

     label07:
        $r27 := @caughtexception;

        r10 = $r27;

        r5 = r10;

        r3 = null;

        r4 = null;

        goto label03;

     label08:
        $r24 := @caughtexception;

        r8 = $r24;

        $r26 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r26.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Cannot set subject search criteria for trust anchor.", r8);

        throw $r26;

     label09:
        r3 = null;

        goto label04;

     label10:
        $r17 = virtualinvoke r3.<java.security.cert.TrustAnchor: java.lang.String getCAName()>();

        if $r17 == null goto label15;

        $r20 = virtualinvoke r3.<java.security.cert.TrustAnchor: java.security.PublicKey getCAPublicKey()>();

        if $r20 == null goto label15;

     label11:
        $r19 = new javax.security.auth.x500.X500Principal;

        $r21 = virtualinvoke r3.<java.security.cert.TrustAnchor: java.lang.String getCAName()>();

        specialinvoke $r19.<javax.security.auth.x500.X500Principal: void <init>(java.lang.String)>($r21);

        $z1 = virtualinvoke r7.<javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>($r19);

        if $z1 == 0 goto label13;

        r12 = virtualinvoke r3.<java.security.cert.TrustAnchor: java.security.PublicKey getCAPublicKey()>();

     label12:
        r4 = r12;

        goto label04;

     label13:
        r3 = null;

        goto label04;

     label14:
        $r25 := @caughtexception;

        r3 = null;

        goto label04;

     label15:
        r3 = null;

        goto label04;

     label16:
        if r3 != null goto label17;

        if r5 == null goto label17;

        $r16 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r16.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("TrustAnchor found but certificate validation failed.", r5);

        throw $r16;

     label17:
        return r3;

        catch java.io.IOException from label01 to label02 with label08;
        catch java.lang.Exception from label05 to label06 with label07;
        catch java.lang.IllegalArgumentException from label11 to label12 with label14;
    }

    protected static com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier(java.security.PublicKey) throws java.security.cert.CertPathValidatorException
    {
        java.security.PublicKey r0;
        java.lang.Exception r1, $r7;
        com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier r2;
        com.android.org.bouncycastle.asn1.ASN1InputStream $r3;
        byte[] $r4;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r5;
        com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo $r6;
        com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException $r8;

        r0 := @parameter0: java.security.PublicKey;

     label1:
        $r3 = new com.android.org.bouncycastle.asn1.ASN1InputStream;

        $r4 = interfaceinvoke r0.<java.security.PublicKey: byte[] getEncoded()>();

        specialinvoke $r3.<com.android.org.bouncycastle.asn1.ASN1InputStream: void <init>(byte[])>($r4);

        $r5 = virtualinvoke $r3.<com.android.org.bouncycastle.asn1.ASN1InputStream: com.android.org.bouncycastle.asn1.ASN1Primitive readObject()>();

        $r6 = staticinvoke <com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo getInstance(java.lang.Object)>($r5);

        r2 = virtualinvoke $r6.<com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmId()>();

     label2:
        return r2;

     label3:
        $r7 := @caughtexception;

        r1 = $r7;

        $r8 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r8.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("Subject public key cannot be decoded.", r1);

        throw $r8;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected static void getCRLIssuersFromDistributionPoint(com.android.org.bouncycastle.asn1.x509.DistributionPoint, java.util.Collection, java.security.cert.X509CRLSelector, com.android.org.bouncycastle.x509.ExtendedPKIXParameters) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        com.android.org.bouncycastle.asn1.x509.DistributionPoint r0;
        java.util.Collection r1;
        java.security.cert.X509CRLSelector r2;
        com.android.org.bouncycastle.x509.ExtendedPKIXParameters r3;
        java.util.ArrayList r4, $r10;
        java.util.Iterator r5, r6;
        java.io.IOException r7, r9, $r27, $r28;
        com.android.org.bouncycastle.asn1.x509.GeneralName[] r8;
        int i0, $i1, $i2;
        com.android.org.bouncycastle.asn1.x509.GeneralNames $r11, $r19;
        com.android.org.bouncycastle.asn1.x509.DistributionPointName $r12;
        boolean $z0, $z1;
        java.lang.Object $r13, $r17;
        byte[] $r14, $r23;
        javax.security.auth.x500.X500Principal $r15, $r16, $r21;
        com.android.org.bouncycastle.jce.provider.AnnotatedException $r18, $r26, $r29;
        com.android.org.bouncycastle.asn1.x509.GeneralName $r20, $r24;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r22;
        com.android.org.bouncycastle.asn1.ASN1Encodable $r25;

        r0 := @parameter0: com.android.org.bouncycastle.asn1.x509.DistributionPoint;

        r1 := @parameter1: java.util.Collection;

        r2 := @parameter2: java.security.cert.X509CRLSelector;

        r3 := @parameter3: com.android.org.bouncycastle.x509.ExtendedPKIXParameters;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r4 = $r10;

        $r11 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.x509.DistributionPoint: com.android.org.bouncycastle.asn1.x509.GeneralNames getCRLIssuer()>();

        if $r11 == null goto label05;

        $r19 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.x509.DistributionPoint: com.android.org.bouncycastle.asn1.x509.GeneralNames getCRLIssuer()>();

        r8 = virtualinvoke $r19.<com.android.org.bouncycastle.asn1.x509.GeneralNames: com.android.org.bouncycastle.asn1.x509.GeneralName[] getNames()>();

        i0 = 0;

     label01:
        $i1 = lengthof r8;

        if i0 >= $i1 goto label08;

        $r20 = r8[i0];

        $i2 = virtualinvoke $r20.<com.android.org.bouncycastle.asn1.x509.GeneralName: int getTagNo()>();

        if $i2 != 4 goto label03;

     label02:
        $r21 = new javax.security.auth.x500.X500Principal;

        $r24 = r8[i0];

        $r25 = virtualinvoke $r24.<com.android.org.bouncycastle.asn1.x509.GeneralName: com.android.org.bouncycastle.asn1.ASN1Encodable getName()>();

        $r22 = interfaceinvoke $r25.<com.android.org.bouncycastle.asn1.ASN1Encodable: com.android.org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $r23 = virtualinvoke $r22.<com.android.org.bouncycastle.asn1.ASN1Primitive: byte[] getEncoded()>();

        specialinvoke $r21.<javax.security.auth.x500.X500Principal: void <init>(byte[])>($r23);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r21);

     label03:
        i0 = i0 + 1;

        goto label01;

     label04:
        $r27 := @caughtexception;

        r9 = $r27;

        $r29 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r29.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("CRL issuer information from distribution point cannot be decoded.", r9);

        throw $r29;

     label05:
        $r12 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.x509.DistributionPoint: com.android.org.bouncycastle.asn1.x509.DistributionPointName getDistributionPoint()>();

        if $r12 != null goto label06;

        $r18 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r18.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("CRL issuer is omitted from distribution point but no distributionPoint field present.");

        throw $r18;

     label06:
        r5 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label07:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r17 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        $r16 = (javax.security.auth.x500.X500Principal) $r17;

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r16);

        goto label07;

     label08:
        r6 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label13;

     label10:
        $r13 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        $r15 = (javax.security.auth.x500.X500Principal) $r13;

        $r14 = virtualinvoke $r15.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        virtualinvoke r2.<java.security.cert.X509CRLSelector: void addIssuerName(byte[])>($r14);

     label11:
        goto label09;

     label12:
        $r28 := @caughtexception;

        r7 = $r28;

        $r26 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r26.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Cannot decode CRL issuer information.", r7);

        throw $r26;

     label13:
        return;

        catch java.io.IOException from label02 to label03 with label04;
        catch java.io.IOException from label10 to label11 with label12;
    }

    protected static void getCertStatus(java.util.Date, java.security.cert.X509CRL, java.lang.Object, com.android.org.bouncycastle.jce.provider.CertStatus) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        java.util.Date r0, $r13, $r14;
        java.security.cert.X509CRL r1;
        java.lang.Object r2;
        com.android.org.bouncycastle.jce.provider.CertStatus r3;
        java.security.cert.CRLException r4, $r27;
        boolean z0, z1, $z2, $z3;
        java.security.cert.X509CRLEntry r5;
        com.android.org.bouncycastle.asn1.ASN1Enumerated r6, r8;
        java.lang.Exception r7, $r25;
        javax.security.auth.x500.X500Principal r9, $r10, $r11, $r24;
        java.math.BigInteger $r12, $r15, $r16, $r17, $r18, $r21, $r22;
        long $l0, $l1;
        byte $b2;
        int $i3, $i4, $i5, $i6, $i7;
        com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier $r19;
        java.lang.String $r20;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r23;
        com.android.org.bouncycastle.jce.provider.AnnotatedException $r26, $r28;

        r0 := @parameter0: java.util.Date;

        r1 := @parameter1: java.security.cert.X509CRL;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: com.android.org.bouncycastle.jce.provider.CertStatus;

     label01:
        z0 = staticinvoke <com.android.org.bouncycastle.jce.provider.X509CRLObject: boolean isIndirectCRL(java.security.cert.X509CRL)>(r1);

     label02:
        if z0 == 0 goto label13;

        $r22 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.math.BigInteger getSerialNumber(java.lang.Object)>(r2);

        r5 = virtualinvoke r1.<java.security.cert.X509CRL: java.security.cert.X509CRLEntry getRevokedCertificate(java.math.BigInteger)>($r22);

        if r5 != null goto label05;

     label03:
        return;

     label04:
        $r27 := @caughtexception;

        r4 = $r27;

        $r28 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r28.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Failed check for indirect CRL.", r4);

        throw $r28;

     label05:
        r9 = virtualinvoke r5.<java.security.cert.X509CRLEntry: javax.security.auth.x500.X500Principal getCertificateIssuer()>();

        if r9 != null goto label06;

        r9 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getIssuerPrincipal(java.security.cert.X509CRL)>(r1);

     label06:
        $r24 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getEncodedIssuerPrincipal(java.lang.Object)>(r2);

        $z3 = virtualinvoke $r24.<javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>(r9);

        if $z3 == 0 goto label03;

     label07:
        z1 = virtualinvoke r5.<java.security.cert.X509CRLEntry: boolean hasExtensions()>();

        r6 = null;

        if z1 == 0 goto label10;

     label08:
        $r19 = <com.android.org.bouncycastle.asn1.x509.X509Extension: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier reasonCode>;

        $r20 = virtualinvoke $r19.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r23 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r5, $r20);

        r8 = staticinvoke <com.android.org.bouncycastle.asn1.DEREnumerated: com.android.org.bouncycastle.asn1.ASN1Enumerated getInstance(java.lang.Object)>($r23);

     label09:
        r6 = r8;

     label10:
        $l0 = virtualinvoke r0.<java.util.Date: long getTime()>();

        $r13 = virtualinvoke r5.<java.security.cert.X509CRLEntry: java.util.Date getRevocationDate()>();

        $l1 = virtualinvoke $r13.<java.util.Date: long getTime()>();

        $b2 = $l0 cmp $l1;

        if $b2 >= 0 goto label11;

        if r6 == null goto label11;

        $r16 = virtualinvoke r6.<com.android.org.bouncycastle.asn1.DEREnumerated: java.math.BigInteger getValue()>();

        $i4 = virtualinvoke $r16.<java.math.BigInteger: int intValue()>();

        if $i4 == 0 goto label11;

        $r17 = virtualinvoke r6.<com.android.org.bouncycastle.asn1.DEREnumerated: java.math.BigInteger getValue()>();

        $i5 = virtualinvoke $r17.<java.math.BigInteger: int intValue()>();

        if $i5 == 1 goto label11;

        $r18 = virtualinvoke r6.<com.android.org.bouncycastle.asn1.DEREnumerated: java.math.BigInteger getValue()>();

        $i6 = virtualinvoke $r18.<java.math.BigInteger: int intValue()>();

        if $i6 == 2 goto label11;

        $r21 = virtualinvoke r6.<com.android.org.bouncycastle.asn1.DEREnumerated: java.math.BigInteger getValue()>();

        $i7 = virtualinvoke $r21.<java.math.BigInteger: int intValue()>();

        if $i7 != 8 goto label03;

     label11:
        if r6 == null goto label15;

        $r15 = virtualinvoke r6.<com.android.org.bouncycastle.asn1.DEREnumerated: java.math.BigInteger getValue()>();

        $i3 = virtualinvoke $r15.<java.math.BigInteger: int intValue()>();

        virtualinvoke r3.<com.android.org.bouncycastle.jce.provider.CertStatus: void setCertStatus(int)>($i3);

     label12:
        $r14 = virtualinvoke r5.<java.security.cert.X509CRLEntry: java.util.Date getRevocationDate()>();

        virtualinvoke r3.<com.android.org.bouncycastle.jce.provider.CertStatus: void setRevocationDate(java.util.Date)>($r14);

        return;

     label13:
        $r10 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getEncodedIssuerPrincipal(java.lang.Object)>(r2);

        $r11 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getIssuerPrincipal(java.security.cert.X509CRL)>(r1);

        $z2 = virtualinvoke $r10.<javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>($r11);

        if $z2 == 0 goto label03;

        $r12 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.math.BigInteger getSerialNumber(java.lang.Object)>(r2);

        r5 = virtualinvoke r1.<java.security.cert.X509CRL: java.security.cert.X509CRLEntry getRevokedCertificate(java.math.BigInteger)>($r12);

        if r5 != null goto label07;

        return;

     label14:
        $r25 := @caughtexception;

        r7 = $r25;

        $r26 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r26.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Reason code CRL entry extension could not be decoded.", r7);

        throw $r26;

     label15:
        virtualinvoke r3.<com.android.org.bouncycastle.jce.provider.CertStatus: void setCertStatus(int)>(0);

        goto label12;

        catch java.security.cert.CRLException from label01 to label02 with label04;
        catch java.lang.Exception from label08 to label09 with label14;
    }

    protected static java.util.Set getCompleteCRLs(com.android.org.bouncycastle.asn1.x509.DistributionPoint, java.lang.Object, java.util.Date, com.android.org.bouncycastle.x509.ExtendedPKIXParameters) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        com.android.org.bouncycastle.asn1.x509.DistributionPoint r0;
        java.lang.Object r1;
        java.util.Date r2;
        com.android.org.bouncycastle.x509.ExtendedPKIXParameters r3;
        com.android.org.bouncycastle.x509.X509CRLStoreSelector r4, $r10;
        java.util.HashSet r5, $r11;
        com.android.org.bouncycastle.jce.provider.AnnotatedException r6, $r15, $r20, $r36, $r37;
        java.util.Set r7;
        java.security.cert.X509Certificate r8, $r29;
        com.android.org.bouncycastle.x509.X509AttributeCertificate r9, $r28, $r34;
        boolean $z0, $z2, $z3, $z4, $z5;
        javax.security.auth.x500.X500Principal $r12, $r16;
        com.android.org.bouncycastle.jce.provider.PKIXCRLUtil $r13;
        java.lang.StringBuilder $r14, $r17, $r18, $r19, $r22, $r23, $r25, $r30;
        java.lang.String $r21, $r31;
        java.security.Principal $r24, $r33;
        com.android.org.bouncycastle.x509.AttributeCertificateIssuer $r26, $r35;
        java.security.Principal[] $r27, $r32;

        r0 := @parameter0: com.android.org.bouncycastle.asn1.x509.DistributionPoint;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.util.Date;

        r3 := @parameter3: com.android.org.bouncycastle.x509.ExtendedPKIXParameters;

        $r10 = new com.android.org.bouncycastle.x509.X509CRLStoreSelector;

        specialinvoke $r10.<com.android.org.bouncycastle.x509.X509CRLStoreSelector: void <init>()>();

        r4 = $r10;

     label01:
        $r11 = new java.util.HashSet;

        specialinvoke $r11.<java.util.HashSet: void <init>()>();

        r5 = $r11;

        $z0 = r1 instanceof com.android.org.bouncycastle.x509.X509AttributeCertificate;

        if $z0 == 0 goto label05;

        $r34 = (com.android.org.bouncycastle.x509.X509AttributeCertificate) r1;

        $r35 = interfaceinvoke $r34.<com.android.org.bouncycastle.x509.X509AttributeCertificate: com.android.org.bouncycastle.x509.AttributeCertificateIssuer getIssuer()>();

        $r32 = virtualinvoke $r35.<com.android.org.bouncycastle.x509.AttributeCertificateIssuer: java.security.Principal[] getPrincipals()>();

        $r33 = $r32[0];

        interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>($r33);

     label02:
        staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: void getCRLIssuersFromDistributionPoint(com.android.org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,com.android.org.bouncycastle.x509.ExtendedPKIXParameters)>(r0, r5, r4, r3);

     label03:
        $z3 = r1 instanceof java.security.cert.X509Certificate;

        if $z3 == 0 goto label08;

        $r29 = (java.security.cert.X509Certificate) r1;

        virtualinvoke r4.<com.android.org.bouncycastle.x509.X509CRLStoreSelector: void setCertificateChecking(java.security.cert.X509Certificate)>($r29);

     label04:
        virtualinvoke r4.<com.android.org.bouncycastle.x509.X509CRLStoreSelector: void setCompleteCRLEnabled(boolean)>(1);

        $r13 = <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.jce.provider.PKIXCRLUtil CRL_UTIL>;

        r7 = virtualinvoke $r13.<com.android.org.bouncycastle.jce.provider.PKIXCRLUtil: java.util.Set findCRLs(com.android.org.bouncycastle.x509.X509CRLStoreSelector,com.android.org.bouncycastle.x509.ExtendedPKIXParameters,java.util.Date)>(r4, r3, r2);

        $z5 = interfaceinvoke r7.<java.util.Set: boolean isEmpty()>();

        if $z5 == 0 goto label10;

        $z4 = r1 instanceof com.android.org.bouncycastle.x509.X509AttributeCertificate;

        if $z4 == 0 goto label09;

        r9 = (com.android.org.bouncycastle.x509.X509AttributeCertificate) r1;

        $r20 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No CRLs found for issuer \"");

        $r26 = interfaceinvoke r9.<com.android.org.bouncycastle.x509.X509AttributeCertificate: com.android.org.bouncycastle.x509.AttributeCertificateIssuer getIssuer()>();

        $r27 = virtualinvoke $r26.<com.android.org.bouncycastle.x509.AttributeCertificateIssuer: java.security.Principal[] getPrincipals()>();

        $r24 = $r27[0];

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        $r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>($r31);

        throw $r20;

     label05:
        $r12 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getEncodedIssuerPrincipal(java.lang.Object)>(r1);

        interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>($r12);

     label06:
        goto label02;

     label07:
        $r37 := @caughtexception;

        r6 = $r37;

        $r36 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r36.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Could not get issuer information from distribution point.", r6);

        throw $r36;

     label08:
        $z2 = r1 instanceof com.android.org.bouncycastle.x509.X509AttributeCertificate;

        if $z2 == 0 goto label04;

        $r28 = (com.android.org.bouncycastle.x509.X509AttributeCertificate) r1;

        virtualinvoke r4.<com.android.org.bouncycastle.x509.X509CRLStoreSelector: void setAttrCertificateChecking(com.android.org.bouncycastle.x509.X509AttributeCertificate)>($r28);

        goto label04;

     label09:
        r8 = (java.security.cert.X509Certificate) r1;

        $r15 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No CRLs found for issuer \"");

        $r16 = virtualinvoke r8.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>($r21);

        throw $r15;

     label10:
        return r7;

        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label01 to label02 with label07;
        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label02 to label03 with label07;
        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label05 to label06 with label07;
    }

    protected static java.util.Set getDeltaCRLs(java.util.Date, com.android.org.bouncycastle.x509.ExtendedPKIXParameters, java.security.cert.X509CRL) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        java.util.Date r0;
        com.android.org.bouncycastle.x509.ExtendedPKIXParameters r1;
        java.security.cert.X509CRL r2, r15;
        com.android.org.bouncycastle.x509.X509CRLStoreSelector r3, $r17;
        java.io.IOException r4, $r30;
        java.lang.Exception r5, r9, $r25, $r28;
        com.android.org.bouncycastle.asn1.ASN1Primitive r6;
        java.math.BigInteger r7, r8, r11, $r21;
        byte[] r10, $r19;
        java.util.Set r12;
        java.util.HashSet r13, $r23;
        java.util.Iterator r14;
        javax.security.auth.x500.X500Principal $r16;
        java.lang.String $r18, $r20;
        com.android.org.bouncycastle.jce.provider.PKIXCRLUtil $r22;
        boolean $z0, $z1;
        java.lang.Object $r24;
        com.android.org.bouncycastle.asn1.ASN1Integer $r26;
        com.android.org.bouncycastle.jce.provider.AnnotatedException $r27, $r29, $r31;

        r0 := @parameter0: java.util.Date;

        r1 := @parameter1: com.android.org.bouncycastle.x509.ExtendedPKIXParameters;

        r2 := @parameter2: java.security.cert.X509CRL;

        $r17 = new com.android.org.bouncycastle.x509.X509CRLStoreSelector;

        specialinvoke $r17.<com.android.org.bouncycastle.x509.X509CRLStoreSelector: void <init>()>();

        r3 = $r17;

     label01:
        $r16 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getIssuerPrincipal(java.security.cert.X509CRL)>(r2);

        $r19 = virtualinvoke $r16.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        virtualinvoke r3.<com.android.org.bouncycastle.x509.X509CRLStoreSelector: void addIssuerName(byte[])>($r19);

     label02:
        $r18 = <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String CRL_NUMBER>;

        r6 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r2, $r18);

     label03:
        r7 = null;

        if r6 == null goto label06;

     label04:
        $r26 = staticinvoke <com.android.org.bouncycastle.asn1.ASN1Integer: com.android.org.bouncycastle.asn1.ASN1Integer getInstance(java.lang.Object)>(r6);

        r8 = virtualinvoke $r26.<com.android.org.bouncycastle.asn1.ASN1Integer: java.math.BigInteger getPositiveValue()>();

     label05:
        r7 = r8;

     label06:
        $r20 = <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String ISSUING_DISTRIBUTION_POINT>;

        r10 = virtualinvoke r2.<java.security.cert.X509CRL: byte[] getExtensionValue(java.lang.String)>($r20);

     label07:
        if r7 != null goto label13;

        r11 = null;

     label08:
        virtualinvoke r3.<com.android.org.bouncycastle.x509.X509CRLStoreSelector: void setMinCRLNumber(java.math.BigInteger)>(r11);

        virtualinvoke r3.<com.android.org.bouncycastle.x509.X509CRLStoreSelector: void setIssuingDistributionPoint(byte[])>(r10);

        virtualinvoke r3.<com.android.org.bouncycastle.x509.X509CRLStoreSelector: void setIssuingDistributionPointEnabled(boolean)>(1);

        virtualinvoke r3.<com.android.org.bouncycastle.x509.X509CRLStoreSelector: void setMaxBaseCRLNumber(java.math.BigInteger)>(r7);

        $r22 = <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.jce.provider.PKIXCRLUtil CRL_UTIL>;

        r12 = virtualinvoke $r22.<com.android.org.bouncycastle.jce.provider.PKIXCRLUtil: java.util.Set findCRLs(com.android.org.bouncycastle.x509.X509CRLStoreSelector,com.android.org.bouncycastle.x509.ExtendedPKIXParameters,java.util.Date)>(r3, r1, r0);

        $r23 = new java.util.HashSet;

        specialinvoke $r23.<java.util.HashSet: void <init>()>();

        r13 = $r23;

        r14 = interfaceinvoke r12.<java.util.Set: java.util.Iterator iterator()>();

     label09:
        $z0 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label14;

        $r24 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r15 = (java.security.cert.X509CRL) $r24;

        $z1 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: boolean isDeltaCRL(java.security.cert.X509CRL)>(r15);

        if $z1 == 0 goto label09;

        interfaceinvoke r13.<java.util.Set: boolean add(java.lang.Object)>(r15);

        goto label09;

     label10:
        $r30 := @caughtexception;

        r4 = $r30;

        $r27 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r27.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Cannot extract issuer from CRL.", r4);

        throw $r27;

     label11:
        $r28 := @caughtexception;

        r5 = $r28;

        $r31 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r31.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("CRL number extension could not be extracted from CRL.", r5);

        throw $r31;

     label12:
        $r25 := @caughtexception;

        r9 = $r25;

        $r29 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r29.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Issuing distribution point extension value could not be read.", r9);

        throw $r29;

     label13:
        $r21 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(1L);

        r11 = virtualinvoke r7.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r21);

        goto label08;

     label14:
        return r13;

        catch java.io.IOException from label01 to label02 with label10;
        catch java.lang.Exception from label02 to label03 with label11;
        catch java.lang.Exception from label04 to label05 with label11;
        catch java.lang.Exception from label06 to label07 with label12;
    }

    protected static javax.security.auth.x500.X500Principal getEncodedIssuerPrincipal(java.lang.Object)
    {
        java.lang.Object r0;
        boolean $z0;
        com.android.org.bouncycastle.x509.X509AttributeCertificate $r1;
        com.android.org.bouncycastle.x509.AttributeCertificateIssuer $r2;
        java.security.Principal[] $r3;
        java.security.Principal $r4;
        javax.security.auth.x500.X500Principal $r5, $r7;
        java.security.cert.X509Certificate $r6;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.security.cert.X509Certificate;

        if $z0 == 0 goto label1;

        $r6 = (java.security.cert.X509Certificate) r0;

        $r7 = virtualinvoke $r6.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        return $r7;

     label1:
        $r1 = (com.android.org.bouncycastle.x509.X509AttributeCertificate) r0;

        $r2 = interfaceinvoke $r1.<com.android.org.bouncycastle.x509.X509AttributeCertificate: com.android.org.bouncycastle.x509.AttributeCertificateIssuer getIssuer()>();

        $r3 = virtualinvoke $r2.<com.android.org.bouncycastle.x509.AttributeCertificateIssuer: java.security.Principal[] getPrincipals()>();

        $r4 = $r3[0];

        $r5 = (javax.security.auth.x500.X500Principal) $r4;

        return $r5;
    }

    protected static com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension, java.lang.String) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        java.security.cert.X509Extension r0;
        java.lang.String r1;
        byte[] r2;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r3;

        r0 := @parameter0: java.security.cert.X509Extension;

        r1 := @parameter1: java.lang.String;

        r2 = interfaceinvoke r0.<java.security.cert.X509Extension: byte[] getExtensionValue(java.lang.String)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        $r3 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getObject(java.lang.String,byte[])>(r1, r2);

        return $r3;
    }

    protected static javax.security.auth.x500.X500Principal getIssuerPrincipal(java.security.cert.X509CRL)
    {
        java.security.cert.X509CRL r0;
        javax.security.auth.x500.X500Principal $r1;

        r0 := @parameter0: java.security.cert.X509CRL;

        $r1 = virtualinvoke r0.<java.security.cert.X509CRL: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        return $r1;
    }

    protected static java.security.PublicKey getNextWorkingKey(java.util.List, int) throws java.security.cert.CertPathValidatorException
    {
        java.util.List r0;
        int i0, i1, $i2;
        java.security.PublicKey r1, r2, r3, r8;
        java.security.interfaces.DSAPublicKey r4, r30, r31;
        java.security.interfaces.DSAParams r5, $r11, $r15;
        java.security.spec.DSAPublicKeySpec r6, r27;
        java.lang.Exception r7, $r24;
        java.lang.Object $r9, $r14;
        java.security.cert.Certificate $r10;
        boolean $z0, $z1;
        java.security.cert.X509Certificate $r13;
        java.math.BigInteger $r16, $r18, $r19, $r21;
        java.security.KeyFactory $r20;
        java.lang.String $r23;
        java.security.cert.CertPathValidatorException r26, r29;
        java.lang.RuntimeException r28;

        r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        $r9 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i0);

        $r10 = (java.security.cert.Certificate) $r9;

        r1 = virtualinvoke $r10.<java.security.cert.Certificate: java.security.PublicKey getPublicKey()>();

        $z0 = r1 instanceof java.security.interfaces.DSAPublicKey;

        if $z0 != 0 goto label2;

        r2 = r1;

     label1:
        return r2;

     label2:
        r2 = (java.security.interfaces.DSAPublicKey) r1;

        r30 = (java.security.interfaces.DSAPublicKey) r2;

        $r11 = interfaceinvoke r30.<java.security.interfaces.DSAPublicKey: java.security.interfaces.DSAParams getParams()>();

        if $r11 != null goto label1;

        i1 = i0 + 1;

     label3:
        $i2 = interfaceinvoke r0.<java.util.List: int size()>();

        if i1 >= $i2 goto label9;

        $r14 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);

        $r13 = (java.security.cert.X509Certificate) $r14;

        r3 = virtualinvoke $r13.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

        $z1 = r3 instanceof java.security.interfaces.DSAPublicKey;

        if $z1 != 0 goto label4;

        r26 = new java.security.cert.CertPathValidatorException;

        specialinvoke r26.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>("DSA parameters cannot be inherited from previous certificate.");

        throw r26;

     label4:
        r4 = (java.security.interfaces.DSAPublicKey) r3;

        $r15 = interfaceinvoke r4.<java.security.interfaces.DSAPublicKey: java.security.interfaces.DSAParams getParams()>();

        if $r15 != null goto label5;

        i1 = i1 + 1;

        goto label3;

     label5:
        r5 = interfaceinvoke r4.<java.security.interfaces.DSAPublicKey: java.security.interfaces.DSAParams getParams()>();

        r27 = new java.security.spec.DSAPublicKeySpec;

        r31 = (java.security.interfaces.DSAPublicKey) r2;

        $r16 = interfaceinvoke r31.<java.security.interfaces.DSAPublicKey: java.math.BigInteger getY()>();

        $r19 = interfaceinvoke r5.<java.security.interfaces.DSAParams: java.math.BigInteger getP()>();

        $r18 = interfaceinvoke r5.<java.security.interfaces.DSAParams: java.math.BigInteger getQ()>();

        $r21 = interfaceinvoke r5.<java.security.interfaces.DSAParams: java.math.BigInteger getG()>();

        specialinvoke r27.<java.security.spec.DSAPublicKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r16, $r19, $r18, $r21);

        r6 = r27;

     label6:
        $r20 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>("DSA", "BC");

        r8 = virtualinvoke $r20.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>(r6);

     label7:
        return r8;

     label8:
        $r24 := @caughtexception;

        r7 = $r24;

        r28 = new java.lang.RuntimeException;

        $r23 = virtualinvoke r7.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke r28.<java.lang.RuntimeException: void <init>(java.lang.String)>($r23);

        throw r28;

     label9:
        r29 = new java.security.cert.CertPathValidatorException;

        specialinvoke r29.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>("DSA parameters cannot be inherited from previous certificate.");

        throw r29;

        catch java.lang.Exception from label6 to label7 with label8;
    }

    private static com.android.org.bouncycastle.asn1.ASN1Primitive getObject(java.lang.String, byte[]) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        java.lang.String r0, $r14;
        byte[] r1, $r8;
        java.lang.Exception r2, $r9;
        com.android.org.bouncycastle.asn1.ASN1Primitive r3, $r6;
        com.android.org.bouncycastle.asn1.ASN1InputStream $r4, $r5;
        com.android.org.bouncycastle.asn1.ASN1OctetString $r7;
        com.android.org.bouncycastle.jce.provider.AnnotatedException $r10;
        java.lang.StringBuilder $r11, $r12, $r13;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: byte[];

     label1:
        $r4 = new com.android.org.bouncycastle.asn1.ASN1InputStream;

        $r5 = new com.android.org.bouncycastle.asn1.ASN1InputStream;

        specialinvoke $r5.<com.android.org.bouncycastle.asn1.ASN1InputStream: void <init>(byte[])>(r1);

        $r6 = virtualinvoke $r5.<com.android.org.bouncycastle.asn1.ASN1InputStream: com.android.org.bouncycastle.asn1.ASN1Primitive readObject()>();

        $r7 = (com.android.org.bouncycastle.asn1.ASN1OctetString) $r6;

        $r8 = virtualinvoke $r7.<com.android.org.bouncycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        specialinvoke $r4.<com.android.org.bouncycastle.asn1.ASN1InputStream: void <init>(byte[])>($r8);

        r3 = virtualinvoke $r4.<com.android.org.bouncycastle.asn1.ASN1InputStream: com.android.org.bouncycastle.asn1.ASN1Primitive readObject()>();

     label2:
        return r3;

     label3:
        $r9 := @caughtexception;

        r2 = $r9;

        $r10 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception processing extension ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>($r14, r2);

        throw $r10;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected static final java.util.Set getQualifierSet(com.android.org.bouncycastle.asn1.ASN1Sequence) throws java.security.cert.CertPathValidatorException
    {
        com.android.org.bouncycastle.asn1.ASN1Sequence r0;
        java.util.HashSet r1, $r6;
        java.io.ByteArrayOutputStream r2, $r7;
        com.android.org.bouncycastle.asn1.ASN1OutputStream r3, $r8;
        java.util.Enumeration r4;
        java.io.IOException r5, $r14;
        boolean $z0;
        java.lang.Object $r9;
        com.android.org.bouncycastle.asn1.ASN1Encodable $r10;
        java.security.cert.PolicyQualifierInfo $r11;
        byte[] $r12;
        com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException $r13;

        r0 := @parameter0: com.android.org.bouncycastle.asn1.ASN1Sequence;

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        r1 = $r6;

        if r0 != null goto label2;

     label1:
        return r1;

     label2:
        $r7 = new java.io.ByteArrayOutputStream;

        specialinvoke $r7.<java.io.ByteArrayOutputStream: void <init>()>();

        r2 = $r7;

        $r8 = new com.android.org.bouncycastle.asn1.ASN1OutputStream;

        specialinvoke $r8.<com.android.org.bouncycastle.asn1.ASN1OutputStream: void <init>(java.io.OutputStream)>(r2);

        r3 = $r8;

        r4 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

     label3:
        $z0 = interfaceinvoke r4.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label1;

     label4:
        $r9 = interfaceinvoke r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r10 = (com.android.org.bouncycastle.asn1.ASN1Encodable) $r9;

        virtualinvoke r3.<com.android.org.bouncycastle.asn1.ASN1OutputStream: void writeObject(com.android.org.bouncycastle.asn1.ASN1Encodable)>($r10);

        $r11 = new java.security.cert.PolicyQualifierInfo;

        $r12 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r11.<java.security.cert.PolicyQualifierInfo: void <init>(byte[])>($r12);

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r11);

     label5:
        virtualinvoke r2.<java.io.ByteArrayOutputStream: void reset()>();

        goto label3;

     label6:
        $r14 := @caughtexception;

        r5 = $r14;

        $r13 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r13.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("Policy qualifier info cannot be decoded.", r5);

        throw $r13;

        catch java.io.IOException from label4 to label5 with label6;
    }

    private static java.math.BigInteger getSerialNumber(java.lang.Object)
    {
        java.lang.Object r0;
        boolean $z0;
        com.android.org.bouncycastle.x509.X509AttributeCertificate $r1;
        java.math.BigInteger $r2, $r4;
        java.security.cert.X509Certificate $r3;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.security.cert.X509Certificate;

        if $z0 == 0 goto label1;

        $r3 = (java.security.cert.X509Certificate) r0;

        $r4 = virtualinvoke $r3.<java.security.cert.X509Certificate: java.math.BigInteger getSerialNumber()>();

        return $r4;

     label1:
        $r1 = (com.android.org.bouncycastle.x509.X509AttributeCertificate) r0;

        $r2 = interfaceinvoke $r1.<com.android.org.bouncycastle.x509.X509AttributeCertificate: java.math.BigInteger getSerialNumber()>();

        return $r2;
    }

    protected static javax.security.auth.x500.X500Principal getSubjectPrincipal(java.security.cert.X509Certificate)
    {
        java.security.cert.X509Certificate r0;
        javax.security.auth.x500.X500Principal $r1;

        r0 := @parameter0: java.security.cert.X509Certificate;

        $r1 = virtualinvoke r0.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        return $r1;
    }

    protected static java.util.Date getValidCertDateFromValidityModel(com.android.org.bouncycastle.x509.ExtendedPKIXParameters, java.security.cert.CertPath, int) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        com.android.org.bouncycastle.x509.ExtendedPKIXParameters r0;
        java.security.cert.CertPath r1;
        int i0, $i1, $i2, $i3, $i4, $i5;
        byte[] r4;
        com.android.org.bouncycastle.asn1.ASN1GeneralizedTime r5, r6;
        java.text.ParseException r7, $r24;
        java.util.Date r8, $r9, $r12, $r21, $r26;
        java.util.List $r10, $r14, $r19;
        java.lang.Object $r11, $r16, $r20;
        java.security.cert.X509Certificate $r13, $r18, $r22;
        com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier $r15;
        java.lang.String $r17;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r23;
        com.android.org.bouncycastle.jce.provider.AnnotatedException $r25, $r28, $r30;
        java.lang.IllegalArgumentException $r27;
        java.io.IOException $r29;

        r0 := @parameter0: com.android.org.bouncycastle.x509.ExtendedPKIXParameters;

        r1 := @parameter1: java.security.cert.CertPath;

        i0 := @parameter2: int;

        $i1 = virtualinvoke r0.<com.android.org.bouncycastle.x509.ExtendedPKIXParameters: int getValidityModel()>();

        if $i1 != 1 goto label14;

        if i0 > 0 goto label01;

        $r26 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Date getValidDate(java.security.cert.PKIXParameters)>(r0);

        return $r26;

     label01:
        $i2 = i0 - 1;

        if $i2 != 0 goto label13;

     label02:
        $r14 = virtualinvoke r1.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $i4 = i0 - 1;

        $r16 = interfaceinvoke $r14.<java.util.List: java.lang.Object get(int)>($i4);

        $r18 = (java.security.cert.X509Certificate) $r16;

        $r15 = <com.android.org.bouncycastle.asn1.isismtt.ISISMTTObjectIdentifiers: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier id_isismtt_at_dateOfCertGen>;

        $r17 = virtualinvoke $r15.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        r4 = virtualinvoke $r18.<java.security.cert.X509Certificate: byte[] getExtensionValue(java.lang.String)>($r17);

     label03:
        r5 = null;

        if r4 == null goto label06;

     label04:
        $r23 = staticinvoke <com.android.org.bouncycastle.asn1.ASN1Primitive: com.android.org.bouncycastle.asn1.ASN1Primitive fromByteArray(byte[])>(r4);

        r6 = staticinvoke <com.android.org.bouncycastle.asn1.DERGeneralizedTime: com.android.org.bouncycastle.asn1.ASN1GeneralizedTime getInstance(java.lang.Object)>($r23);

     label05:
        r5 = r6;

     label06:
        if r5 == null goto label12;

     label07:
        r8 = virtualinvoke r5.<com.android.org.bouncycastle.asn1.DERGeneralizedTime: java.util.Date getDate()>();

     label08:
        return r8;

     label09:
        $r29 := @caughtexception;

        $r30 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r30.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("Date of cert gen extension could not be read.");

        throw $r30;

     label10:
        $r27 := @caughtexception;

        $r28 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r28.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("Date of cert gen extension could not be read.");

        throw $r28;

     label11:
        $r24 := @caughtexception;

        r7 = $r24;

        $r25 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r25.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Date from date of cert gen extension could not be parsed.", r7);

        throw $r25;

     label12:
        $r19 = virtualinvoke r1.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $i5 = i0 - 1;

        $r20 = interfaceinvoke $r19.<java.util.List: java.lang.Object get(int)>($i5);

        $r22 = (java.security.cert.X509Certificate) $r20;

        $r21 = virtualinvoke $r22.<java.security.cert.X509Certificate: java.util.Date getNotBefore()>();

        return $r21;

     label13:
        $r10 = virtualinvoke r1.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $i3 = i0 - 1;

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>($i3);

        $r13 = (java.security.cert.X509Certificate) $r11;

        $r12 = virtualinvoke $r13.<java.security.cert.X509Certificate: java.util.Date getNotBefore()>();

        return $r12;

     label14:
        $r9 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Date getValidDate(java.security.cert.PKIXParameters)>(r0);

        return $r9;

        catch java.io.IOException from label02 to label03 with label09;
        catch java.lang.IllegalArgumentException from label02 to label03 with label10;
        catch java.io.IOException from label04 to label05 with label09;
        catch java.lang.IllegalArgumentException from label04 to label05 with label10;
        catch java.text.ParseException from label07 to label08 with label11;
    }

    protected static java.util.Date getValidDate(java.security.cert.PKIXParameters)
    {
        java.security.cert.PKIXParameters r0;
        java.util.Date r1, $r2;

        r0 := @parameter0: java.security.cert.PKIXParameters;

        r1 = virtualinvoke r0.<java.security.cert.PKIXParameters: java.util.Date getDate()>();

        if r1 != null goto label1;

        $r2 = new java.util.Date;

        specialinvoke $r2.<java.util.Date: void <init>()>();

        r1 = $r2;

     label1:
        return r1;
    }

    protected static boolean isAnyPolicy(java.util.Set)
    {
        java.util.Set r0;
        boolean $z0, $z1;

        r0 := @parameter0: java.util.Set;

        if r0 == null goto label1;

        $z0 = interfaceinvoke r0.<java.util.Set: boolean contains(java.lang.Object)>("2.5.29.32.0");

        if $z0 != 0 goto label1;

        $z1 = interfaceinvoke r0.<java.util.Set: boolean isEmpty()>();

        if $z1 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    private static boolean isDeltaCRL(java.security.cert.X509CRL)
    {
        java.security.cert.X509CRL r0;
        java.util.Set r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @parameter0: java.security.cert.X509CRL;

        r1 = virtualinvoke r0.<java.security.cert.X509CRL: java.util.Set getCriticalExtensionOIDs()>();

        if r1 != null goto label1;

        return 0;

     label1:
        $r2 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String DELTA_CRL_INDICATOR>;

        $z0 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>($r2);

        return $z0;
    }

    protected static boolean isSelfIssued(java.security.cert.X509Certificate)
    {
        java.security.cert.X509Certificate r0;
        java.security.Principal $r1, $r2;
        boolean $z0;

        r0 := @parameter0: java.security.cert.X509Certificate;

        $r1 = virtualinvoke r0.<java.security.cert.X509Certificate: java.security.Principal getSubjectDN()>();

        $r2 = virtualinvoke r0.<java.security.cert.X509Certificate: java.security.Principal getIssuerDN()>();

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        return $z0;
    }

    protected static void prepareNextCertB1(int, java.util.List[], java.lang.String, java.util.Map, java.security.cert.X509Certificate) throws com.android.org.bouncycastle.jce.provider.AnnotatedException, java.security.cert.CertPathValidatorException
    {
        int i0;
        java.util.List[] r0;
        java.lang.String r1, $r22, $r23, $r24, $r26, $r27, $r36, $r37, $r39, $r40;
        java.util.Map r2;
        java.security.cert.X509Certificate r3;
        java.util.Iterator r4, r5;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z8, $z9;
        com.android.org.bouncycastle.jce.provider.PKIXPolicyNode r6, r12, r13, r19, $r31;
        java.lang.Exception r7, r15, $r44, $r46;
        com.android.org.bouncycastle.asn1.ASN1Sequence r8, $r42;
        java.util.Enumeration r9;
        java.util.Set r10, r11, r16, $r32, $r34, $r48;
        com.android.org.bouncycastle.asn1.x509.PolicyInformation r14;
        java.security.cert.CertPathValidatorException r17, $r49;
        java.util.List $r18, $r20, $r33;
        java.lang.Object $r21, $r30, $r35, $r41, $r47;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r25;
        java.security.cert.PolicyNode $r28;
        java.util.ArrayList $r29;
        com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier $r38;
        com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException $r43;
        com.android.org.bouncycastle.jce.provider.AnnotatedException $r45, $r50;

        i0 := @parameter0: int;

        r0 := @parameter1: java.util.List[];

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.util.Map;

        r3 := @parameter4: java.security.cert.X509Certificate;

        $r18 = r0[i0];

        r4 = interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>();

     label01:
        z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        z1 = 0;

        if z0 == 0 goto label02;

        $r41 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r19 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r41;

        $r40 = virtualinvoke r19.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z9 = virtualinvoke $r40.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z9 == 0 goto label01;

        z1 = 1;

        $r47 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r48 = (java.util.Set) $r47;

        r19.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.util.Set expectedPolicies> = $r48;

     label02:
        if z1 != 0 goto label13;

        $r20 = r0[i0];

        r5 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z4 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label13;

        $r21 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r21;

        $r23 = "2.5.29.32.0";

        $r24 = virtualinvoke r6.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z5 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>($r24);

        if $z5 == 0 goto label03;

     label04:
        $r22 = <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String CERTIFICATE_POLICIES>;

        $r25 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r3, $r22);

        r8 = staticinvoke <com.android.org.bouncycastle.asn1.DERSequence: com.android.org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r25);

     label05:
        r9 = virtualinvoke r8.<com.android.org.bouncycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

     label06:
        z2 = interfaceinvoke r9.<java.util.Enumeration: boolean hasMoreElements()>();

        r10 = null;

        if z2 == 0 goto label11;

     label07:
        $r35 = interfaceinvoke r9.<java.util.Enumeration: java.lang.Object nextElement()>();

        r14 = staticinvoke <com.android.org.bouncycastle.asn1.x509.PolicyInformation: com.android.org.bouncycastle.asn1.x509.PolicyInformation getInstance(java.lang.Object)>($r35);

     label08:
        $r39 = "2.5.29.32.0";

        $r38 = virtualinvoke r14.<com.android.org.bouncycastle.asn1.x509.PolicyInformation: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier getPolicyIdentifier()>();

        $r37 = virtualinvoke $r38.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $z8 = virtualinvoke $r39.<java.lang.String: boolean equals(java.lang.Object)>($r37);

        if $z8 == 0 goto label06;

     label09:
        $r42 = virtualinvoke r14.<com.android.org.bouncycastle.asn1.x509.PolicyInformation: com.android.org.bouncycastle.asn1.ASN1Sequence getPolicyQualifiers()>();

        r16 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Set getQualifierSet(com.android.org.bouncycastle.asn1.ASN1Sequence)>($r42);

     label10:
        r10 = r16;

     label11:
        r11 = virtualinvoke r3.<java.security.cert.X509Certificate: java.util.Set getCriticalExtensionOIDs()>();

        z3 = 0;

        if r11 == null goto label12;

        $r32 = virtualinvoke r3.<java.security.cert.X509Certificate: java.util.Set getCriticalExtensionOIDs()>();

        $r36 = <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String CERTIFICATE_POLICIES>;

        z3 = interfaceinvoke $r32.<java.util.Set: boolean contains(java.lang.Object)>($r36);

     label12:
        $r28 = virtualinvoke r6.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.security.cert.PolicyNode getParent()>();

        r12 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r28;

        $r26 = "2.5.29.32.0";

        $r27 = virtualinvoke r12.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z6 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>($r27);

        if $z6 == 0 goto label13;

        $r31 = new com.android.org.bouncycastle.jce.provider.PKIXPolicyNode;

        $r29 = new java.util.ArrayList;

        specialinvoke $r29.<java.util.ArrayList: void <init>()>();

        $r30 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r34 = (java.util.Set) $r30;

        specialinvoke $r31.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: void <init>(java.util.List,int,java.util.Set,java.security.cert.PolicyNode,java.util.Set,java.lang.String,boolean)>($r29, i0, $r34, r12, r10, r1, z3);

        r13 = $r31;

        virtualinvoke r12.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: void addChild(com.android.org.bouncycastle.jce.provider.PKIXPolicyNode)>(r13);

        $r33 = r0[i0];

        interfaceinvoke $r33.<java.util.List: boolean add(java.lang.Object)>(r13);

     label13:
        return;

     label14:
        $r44 := @caughtexception;

        r7 = $r44;

        $r45 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r45.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Certificate policies cannot be decoded.", r7);

        throw $r45;

     label15:
        $r46 := @caughtexception;

        r15 = $r46;

        $r50 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r50.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Policy information cannot be decoded.", r15);

        throw $r50;

     label16:
        $r49 := @caughtexception;

        r17 = $r49;

        $r43 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r43.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("Policy qualifier info set could not be built.", r17);

        throw $r43;

        catch java.lang.Exception from label04 to label05 with label14;
        catch java.lang.Exception from label07 to label08 with label15;
        catch java.security.cert.CertPathValidatorException from label09 to label10 with label16;
    }

    protected static com.android.org.bouncycastle.jce.provider.PKIXPolicyNode prepareNextCertB2(int, java.util.List[], java.lang.String, com.android.org.bouncycastle.jce.provider.PKIXPolicyNode)
    {
        int i0, i1, i2, $i3;
        java.util.List[] r0;
        java.lang.String r1, $r9;
        com.android.org.bouncycastle.jce.provider.PKIXPolicyNode r2, r4, r6, $r10;
        java.util.Iterator r3;
        java.util.List r5, $r7;
        boolean $z0, $z1, $z2;
        java.lang.Object $r8, $r12;
        java.security.cert.PolicyNode $r11;

        i0 := @parameter0: int;

        r0 := @parameter1: java.util.List[];

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: com.android.org.bouncycastle.jce.provider.PKIXPolicyNode;

        $r7 = r0[i0];

        r3 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r8;

        $r9 = virtualinvoke r4.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label1;

        $r11 = virtualinvoke r4.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.security.cert.PolicyNode getParent()>();

        $r10 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r11;

        virtualinvoke $r10.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: void removeChild(com.android.org.bouncycastle.jce.provider.PKIXPolicyNode)>(r4);

        interfaceinvoke r3.<java.util.Iterator: void remove()>();

        i1 = i0 - 1;

     label2:
        if i1 < 0 goto label1;

        r5 = r0[i1];

        i2 = 0;

     label3:
        $i3 = interfaceinvoke r5.<java.util.List: int size()>();

        if i2 >= $i3 goto label4;

        $r12 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i2);

        r6 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r12;

        $z2 = virtualinvoke r6.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: boolean hasChildren()>();

        if $z2 != 0 goto label5;

        r2 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.jce.provider.PKIXPolicyNode removePolicyNode(com.android.org.bouncycastle.jce.provider.PKIXPolicyNode,java.util.List[],com.android.org.bouncycastle.jce.provider.PKIXPolicyNode)>(r2, r0, r6);

        if r2 != null goto label5;

     label4:
        i1 = i1 + -1;

        goto label2;

     label5:
        i2 = i2 + 1;

        goto label3;

     label6:
        return r2;
    }

    protected static boolean processCertD1i(int, java.util.List[], com.android.org.bouncycastle.asn1.DERObjectIdentifier, java.util.Set)
    {
        int i0, i1, i2, $i3;
        java.util.List[] r0;
        com.android.org.bouncycastle.asn1.DERObjectIdentifier r1;
        java.util.Set r2, $r8;
        java.util.List r3, $r15;
        boolean z0, $z1;
        com.android.org.bouncycastle.jce.provider.PKIXPolicyNode r4, r6, $r12;
        java.util.HashSet r5, $r11;
        java.lang.Object $r7;
        java.lang.String $r9, $r10, $r13;
        java.util.ArrayList $r14;

        i0 := @parameter0: int;

        r0 := @parameter1: java.util.List[];

        r1 := @parameter2: com.android.org.bouncycastle.asn1.DERObjectIdentifier;

        r2 := @parameter3: java.util.Set;

        $i3 = i0 - 1;

        r3 = r0[$i3];

        i1 = 0;

     label1:
        i2 = interfaceinvoke r3.<java.util.List: int size()>();

        z0 = 0;

        if i1 >= i2 goto label2;

        $r7 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r7;

        $r8 = virtualinvoke r4.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.util.Set getExpectedPolicies()>();

        $r9 = virtualinvoke r1.<com.android.org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        $z1 = interfaceinvoke $r8.<java.util.Set: boolean contains(java.lang.Object)>($r9);

        if $z1 == 0 goto label3;

        $r11 = new java.util.HashSet;

        specialinvoke $r11.<java.util.HashSet: void <init>()>();

        r5 = $r11;

        $r10 = virtualinvoke r1.<com.android.org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>($r10);

        $r12 = new com.android.org.bouncycastle.jce.provider.PKIXPolicyNode;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        $r13 = virtualinvoke r1.<com.android.org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        specialinvoke $r12.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: void <init>(java.util.List,int,java.util.Set,java.security.cert.PolicyNode,java.util.Set,java.lang.String,boolean)>($r14, i0, r5, r4, r2, $r13, 0);

        r6 = $r12;

        virtualinvoke r4.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: void addChild(com.android.org.bouncycastle.jce.provider.PKIXPolicyNode)>(r6);

        $r15 = r0[i0];

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(r6);

        z0 = 1;

     label2:
        return z0;

     label3:
        i1 = i1 + 1;

        goto label1;
    }

    protected static void processCertD1ii(int, java.util.List[], com.android.org.bouncycastle.asn1.DERObjectIdentifier, java.util.Set)
    {
        int i0, i1, $i2, $i3;
        java.util.List[] r0;
        com.android.org.bouncycastle.asn1.DERObjectIdentifier r1;
        java.util.Set r2;
        java.util.List r3, $r15;
        com.android.org.bouncycastle.jce.provider.PKIXPolicyNode r4, r6, $r12;
        java.util.HashSet r5, $r11;
        java.lang.Object $r7;
        java.lang.String $r8, $r9, $r10, $r13;
        boolean $z0;
        java.util.ArrayList $r14;

        i0 := @parameter0: int;

        r0 := @parameter1: java.util.List[];

        r1 := @parameter2: com.android.org.bouncycastle.asn1.DERObjectIdentifier;

        r2 := @parameter3: java.util.Set;

        $i2 = i0 - 1;

        r3 = r0[$i2];

        i1 = 0;

     label1:
        $i3 = interfaceinvoke r3.<java.util.List: int size()>();

        if i1 >= $i3 goto label2;

        $r7 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r7;

        $r8 = "2.5.29.32.0";

        $r9 = virtualinvoke r4.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label3;

        $r11 = new java.util.HashSet;

        specialinvoke $r11.<java.util.HashSet: void <init>()>();

        r5 = $r11;

        $r10 = virtualinvoke r1.<com.android.org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>($r10);

        $r12 = new com.android.org.bouncycastle.jce.provider.PKIXPolicyNode;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        $r13 = virtualinvoke r1.<com.android.org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        specialinvoke $r12.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: void <init>(java.util.List,int,java.util.Set,java.security.cert.PolicyNode,java.util.Set,java.lang.String,boolean)>($r14, i0, r5, r4, r2, $r13, 0);

        r6 = $r12;

        virtualinvoke r4.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: void addChild(com.android.org.bouncycastle.jce.provider.PKIXPolicyNode)>(r6);

        $r15 = r0[i0];

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(r6);

     label2:
        return;

     label3:
        i1 = i1 + 1;

        goto label1;
    }

    protected static com.android.org.bouncycastle.jce.provider.PKIXPolicyNode removePolicyNode(com.android.org.bouncycastle.jce.provider.PKIXPolicyNode, java.util.List[], com.android.org.bouncycastle.jce.provider.PKIXPolicyNode)
    {
        com.android.org.bouncycastle.jce.provider.PKIXPolicyNode r0, r2, r3;
        java.util.List[] r1;
        int i0, $i1;
        java.security.cert.PolicyNode $r4;
        java.util.ArrayList $r5;

        r0 := @parameter0: com.android.org.bouncycastle.jce.provider.PKIXPolicyNode;

        r1 := @parameter1: java.util.List[];

        r2 := @parameter2: com.android.org.bouncycastle.jce.provider.PKIXPolicyNode;

        $r4 = virtualinvoke r2.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.security.cert.PolicyNode getParent()>();

        r3 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r4;

        if r0 != null goto label1;

        return null;

     label1:
        if r3 != null goto label4;

        i0 = 0;

     label2:
        $i1 = lengthof r1;

        if i0 >= $i1 goto label3;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r1[i0] = $r5;

        i0 = i0 + 1;

        goto label2;

     label3:
        return null;

     label4:
        virtualinvoke r3.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: void removeChild(com.android.org.bouncycastle.jce.provider.PKIXPolicyNode)>(r2);

        staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: void removePolicyNodeRecurse(java.util.List[],com.android.org.bouncycastle.jce.provider.PKIXPolicyNode)>(r1, r2);

        return r0;
    }

    private static void removePolicyNodeRecurse(java.util.List[], com.android.org.bouncycastle.jce.provider.PKIXPolicyNode)
    {
        java.util.List[] r0;
        com.android.org.bouncycastle.jce.provider.PKIXPolicyNode r1, $r5;
        java.util.Iterator r2;
        int $i0;
        java.util.List $r3;
        boolean $z1, $z2;
        java.lang.Object $r4;

        r0 := @parameter0: java.util.List[];

        r1 := @parameter1: com.android.org.bouncycastle.jce.provider.PKIXPolicyNode;

        $i0 = virtualinvoke r1.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: int getDepth()>();

        $r3 = r0[$i0];

        interfaceinvoke $r3.<java.util.List: boolean remove(java.lang.Object)>(r1);

        $z1 = virtualinvoke r1.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: boolean hasChildren()>();

        if $z1 == 0 goto label2;

        r2 = virtualinvoke r1.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.util.Iterator getChildren()>();

     label1:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r4;

        staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: void removePolicyNodeRecurse(java.util.List[],com.android.org.bouncycastle.jce.provider.PKIXPolicyNode)>(r0, $r5);

        goto label1;

     label2:
        return;
    }

    protected static void verifyX509Certificate(java.security.cert.X509Certificate, java.security.PublicKey, java.lang.String) throws java.security.GeneralSecurityException
    {
        java.security.cert.X509Certificate r0;
        java.security.PublicKey r1;
        java.lang.String r2;

        r0 := @parameter0: java.security.cert.X509Certificate;

        r1 := @parameter1: java.security.PublicKey;

        r2 := @parameter2: java.lang.String;

        if r2 != null goto label1;

        virtualinvoke r0.<java.security.cert.X509Certificate: void verify(java.security.PublicKey)>(r1);

        return;

     label1:
        virtualinvoke r0.<java.security.cert.X509Certificate: void verify(java.security.PublicKey,java.lang.String)>(r1, r2);

        return;
    }
}
