abstract class java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter extends java.lang.Object implements java.util.Iterator
{
    java.util.concurrent.ConcurrentSkipListMap$Node lastReturned;
    java.util.concurrent.ConcurrentSkipListMap$Node next;
    java.lang.Object nextValue;
    final java.util.concurrent.ConcurrentSkipListMap$SubMap this$0;

    void <init>(java.util.concurrent.ConcurrentSkipListMap$SubMap)
    {
        java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter r0;
        java.util.concurrent.ConcurrentSkipListMap$SubMap r1;
        java.util.concurrent.ConcurrentSkipListMap$Node r2, $r4, $r5, $r6, $r7;
        java.lang.Object r3, $r8;
        boolean $z0, $z1;

        r0 := @this: java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter;

        r1 := @parameter0: java.util.concurrent.ConcurrentSkipListMap$SubMap;

        r0.<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: java.util.concurrent.ConcurrentSkipListMap$SubMap this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

     label1:
        $z0 = staticinvoke <java.util.concurrent.ConcurrentSkipListMap$SubMap: boolean access$100(java.util.concurrent.ConcurrentSkipListMap$SubMap)>(r1);

        if $z0 == 0 goto label3;

        r2 = staticinvoke <java.util.concurrent.ConcurrentSkipListMap$SubMap: java.util.concurrent.ConcurrentSkipListMap$Node access$200(java.util.concurrent.ConcurrentSkipListMap$SubMap)>(r1);

     label2:
        r0.<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: java.util.concurrent.ConcurrentSkipListMap$Node next> = r2;

        $r4 = r0.<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: java.util.concurrent.ConcurrentSkipListMap$Node next>;

        if $r4 != null goto label4;

        return;

     label3:
        r2 = staticinvoke <java.util.concurrent.ConcurrentSkipListMap$SubMap: java.util.concurrent.ConcurrentSkipListMap$Node access$300(java.util.concurrent.ConcurrentSkipListMap$SubMap)>(r1);

        goto label2;

     label4:
        $r5 = r0.<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: java.util.concurrent.ConcurrentSkipListMap$Node next>;

        r3 = $r5.<java.util.concurrent.ConcurrentSkipListMap$Node: java.lang.Object value>;

        if r3 == null goto label1;

        $r6 = r0.<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: java.util.concurrent.ConcurrentSkipListMap$Node next>;

        if r3 == $r6 goto label1;

        $r7 = r0.<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: java.util.concurrent.ConcurrentSkipListMap$Node next>;

        $r8 = $r7.<java.util.concurrent.ConcurrentSkipListMap$Node: java.lang.Object key>;

        $z1 = staticinvoke <java.util.concurrent.ConcurrentSkipListMap$SubMap: boolean access$400(java.util.concurrent.ConcurrentSkipListMap$SubMap,java.lang.Object)>(r1, $r8);

        if $z1 != 0 goto label5;

        r0.<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: java.util.concurrent.ConcurrentSkipListMap$Node next> = null;

        return;

     label5:
        r0.<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: java.lang.Object nextValue> = r3;

        return;
    }

    private void ascend()
    {
        java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter r0;
        java.lang.Object r1, $r8;
        java.util.concurrent.ConcurrentSkipListMap$Node $r2, $r3, $r4, $r5, $r6, $r7;
        java.util.concurrent.ConcurrentSkipListMap$SubMap $r9;
        boolean $z0;

        r0 := @this: java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter;

     label1:
        $r2 = r0.<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: java.util.concurrent.ConcurrentSkipListMap$Node next>;

        $r3 = $r2.<java.util.concurrent.ConcurrentSkipListMap$Node: java.util.concurrent.ConcurrentSkipListMap$Node next>;

        r0.<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: java.util.concurrent.ConcurrentSkipListMap$Node next> = $r3;

        $r4 = r0.<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: java.util.concurrent.ConcurrentSkipListMap$Node next>;

        if $r4 != null goto label2;

        return;

     label2:
        $r5 = r0.<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: java.util.concurrent.ConcurrentSkipListMap$Node next>;

        r1 = $r5.<java.util.concurrent.ConcurrentSkipListMap$Node: java.lang.Object value>;

        if r1 == null goto label1;

        $r6 = r0.<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: java.util.concurrent.ConcurrentSkipListMap$Node next>;

        if r1 == $r6 goto label1;

        $r9 = r0.<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: java.util.concurrent.ConcurrentSkipListMap$SubMap this$0>;

        $r7 = r0.<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: java.util.concurrent.ConcurrentSkipListMap$Node next>;

        $r8 = $r7.<java.util.concurrent.ConcurrentSkipListMap$Node: java.lang.Object key>;

        $z0 = staticinvoke <java.util.concurrent.ConcurrentSkipListMap$SubMap: boolean access$500(java.util.concurrent.ConcurrentSkipListMap$SubMap,java.lang.Object)>($r9, $r8);

        if $z0 == 0 goto label3;

        r0.<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: java.util.concurrent.ConcurrentSkipListMap$Node next> = null;

        return;

     label3:
        r0.<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: java.lang.Object nextValue> = r1;

        return;
    }

    private void descend()
    {
        java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter r0;
        java.lang.Object r1, $r5, $r11;
        java.util.concurrent.ConcurrentSkipListMap$SubMap $r2, $r12;
        java.util.concurrent.ConcurrentSkipListMap $r3;
        java.util.concurrent.ConcurrentSkipListMap$Node $r4, $r6, $r7, $r8, $r9, $r10;
        boolean $z0;

        r0 := @this: java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter;

     label1:
        $r2 = r0.<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: java.util.concurrent.ConcurrentSkipListMap$SubMap this$0>;

        $r3 = staticinvoke <java.util.concurrent.ConcurrentSkipListMap$SubMap: java.util.concurrent.ConcurrentSkipListMap access$600(java.util.concurrent.ConcurrentSkipListMap$SubMap)>($r2);

        $r4 = r0.<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: java.util.concurrent.ConcurrentSkipListMap$Node lastReturned>;

        $r5 = $r4.<java.util.concurrent.ConcurrentSkipListMap$Node: java.lang.Object key>;

        $r6 = virtualinvoke $r3.<java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$Node findNear(java.lang.Object,int)>($r5, 2);

        r0.<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: java.util.concurrent.ConcurrentSkipListMap$Node next> = $r6;

        $r7 = r0.<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: java.util.concurrent.ConcurrentSkipListMap$Node next>;

        if $r7 != null goto label2;

        return;

     label2:
        $r8 = r0.<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: java.util.concurrent.ConcurrentSkipListMap$Node next>;

        r1 = $r8.<java.util.concurrent.ConcurrentSkipListMap$Node: java.lang.Object value>;

        if r1 == null goto label1;

        $r9 = r0.<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: java.util.concurrent.ConcurrentSkipListMap$Node next>;

        if r1 == $r9 goto label1;

        $r12 = r0.<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: java.util.concurrent.ConcurrentSkipListMap$SubMap this$0>;

        $r10 = r0.<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: java.util.concurrent.ConcurrentSkipListMap$Node next>;

        $r11 = $r10.<java.util.concurrent.ConcurrentSkipListMap$Node: java.lang.Object key>;

        $z0 = staticinvoke <java.util.concurrent.ConcurrentSkipListMap$SubMap: boolean access$700(java.util.concurrent.ConcurrentSkipListMap$SubMap,java.lang.Object)>($r12, $r11);

        if $z0 == 0 goto label3;

        r0.<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: java.util.concurrent.ConcurrentSkipListMap$Node next> = null;

        return;

     label3:
        r0.<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: java.lang.Object nextValue> = r1;

        return;
    }

    final void advance()
    {
        java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter r0;
        java.util.concurrent.ConcurrentSkipListMap$Node $r1, $r2;
        java.util.concurrent.ConcurrentSkipListMap$SubMap $r3;
        boolean $z0;
        java.util.NoSuchElementException $r4;

        r0 := @this: java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter;

        $r1 = r0.<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: java.util.concurrent.ConcurrentSkipListMap$Node next>;

        if $r1 != null goto label1;

        $r4 = new java.util.NoSuchElementException;

        specialinvoke $r4.<java.util.NoSuchElementException: void <init>()>();

        throw $r4;

     label1:
        $r2 = r0.<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: java.util.concurrent.ConcurrentSkipListMap$Node next>;

        r0.<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: java.util.concurrent.ConcurrentSkipListMap$Node lastReturned> = $r2;

        $r3 = r0.<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: java.util.concurrent.ConcurrentSkipListMap$SubMap this$0>;

        $z0 = staticinvoke <java.util.concurrent.ConcurrentSkipListMap$SubMap: boolean access$100(java.util.concurrent.ConcurrentSkipListMap$SubMap)>($r3);

        if $z0 == 0 goto label2;

        specialinvoke r0.<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: void descend()>();

        return;

     label2:
        specialinvoke r0.<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: void ascend()>();

        return;
    }

    public final boolean hasNext()
    {
        java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter r0;
        java.util.concurrent.ConcurrentSkipListMap$Node $r1;

        r0 := @this: java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter;

        $r1 = r0.<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: java.util.concurrent.ConcurrentSkipListMap$Node next>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public void remove()
    {
        java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter r0;
        java.util.concurrent.ConcurrentSkipListMap$Node r1;
        java.util.concurrent.ConcurrentSkipListMap$SubMap $r2;
        java.util.concurrent.ConcurrentSkipListMap $r3;
        java.lang.Object $r4;
        java.lang.IllegalStateException $r6;

        r0 := @this: java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter;

        r1 = r0.<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: java.util.concurrent.ConcurrentSkipListMap$Node lastReturned>;

        if r1 != null goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>()>();

        throw $r6;

     label1:
        $r2 = r0.<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: java.util.concurrent.ConcurrentSkipListMap$SubMap this$0>;

        $r3 = staticinvoke <java.util.concurrent.ConcurrentSkipListMap$SubMap: java.util.concurrent.ConcurrentSkipListMap access$600(java.util.concurrent.ConcurrentSkipListMap$SubMap)>($r2);

        $r4 = r1.<java.util.concurrent.ConcurrentSkipListMap$Node: java.lang.Object key>;

        virtualinvoke $r3.<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object remove(java.lang.Object)>($r4);

        r0.<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: java.util.concurrent.ConcurrentSkipListMap$Node lastReturned> = null;

        return;
    }
}
