public abstract class com.android.internal.telephony.IccPhoneBookInterfaceManager extends com.android.internal.telephony.IIccPhoneBook$Stub
{
    protected static final boolean ALLOW_SIM_OP_IN_UI_THREAD;
    protected static final boolean DBG;
    protected static final int EVENT_GET_SIZE_DONE;
    protected static final int EVENT_LOAD_DONE;
    protected static final int EVENT_UPDATE_DONE;
    protected com.android.internal.telephony.uicc.AdnRecordCache mAdnCache;
    protected android.os.Handler mBaseHandler;
    protected final java.lang.Object mLock;
    protected com.android.internal.telephony.PhoneBase mPhone;
    protected int[] mRecordSize;
    protected java.util.List mRecords;
    protected boolean mSuccess;

    public void <init>(com.android.internal.telephony.PhoneBase)
    {
        com.android.internal.telephony.IccPhoneBookInterfaceManager r0;
        com.android.internal.telephony.PhoneBase r1;
        com.android.internal.telephony.uicc.IccRecords r2;
        java.lang.Object $r3, $r6;
        com.android.internal.telephony.IccPhoneBookInterfaceManager$1 $r4;
        java.util.concurrent.atomic.AtomicReference $r5;
        com.android.internal.telephony.uicc.AdnRecordCache $r7;

        r0 := @this: com.android.internal.telephony.IccPhoneBookInterfaceManager;

        r1 := @parameter0: com.android.internal.telephony.PhoneBase;

        specialinvoke r0.<com.android.internal.telephony.IIccPhoneBook$Stub: void <init>()>();

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: java.lang.Object mLock> = $r3;

        $r4 = new com.android.internal.telephony.IccPhoneBookInterfaceManager$1;

        specialinvoke $r4.<com.android.internal.telephony.IccPhoneBookInterfaceManager$1: void <init>(com.android.internal.telephony.IccPhoneBookInterfaceManager)>(r0);

        r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: android.os.Handler mBaseHandler> = $r4;

        r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: com.android.internal.telephony.PhoneBase mPhone> = r1;

        $r5 = r1.<com.android.internal.telephony.PhoneBase: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r6 = virtualinvoke $r5.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r2 = (com.android.internal.telephony.uicc.IccRecords) $r6;

        if r2 == null goto label1;

        $r7 = virtualinvoke r2.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.AdnRecordCache getAdnCache()>();

        r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: com.android.internal.telephony.uicc.AdnRecordCache mAdnCache> = $r7;

     label1:
        return;
    }

    private int updateEfForIccType(int)
    {
        com.android.internal.telephony.IccPhoneBookInterfaceManager r0;
        int i0;
        com.android.internal.telephony.PhoneBase $r1;
        com.android.internal.telephony.uicc.IccCardApplicationStatus$AppType $r2, $r3;

        r0 := @this: com.android.internal.telephony.IccPhoneBookInterfaceManager;

        i0 := @parameter0: int;

        if i0 != 28474 goto label1;

        $r1 = r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.uicc.IccCardApplicationStatus$AppType getCurrentUiccAppType()>();

        $r3 = <com.android.internal.telephony.uicc.IccCardApplicationStatus$AppType: com.android.internal.telephony.uicc.IccCardApplicationStatus$AppType APPTYPE_USIM>;

        if $r2 != $r3 goto label1;

        i0 = 20272;

     label1:
        return i0;
    }

    protected void checkThread()
    {
        com.android.internal.telephony.IccPhoneBookInterfaceManager r0;
        android.os.Handler $r1;
        android.os.Looper $r2, $r3;
        boolean $z0;
        java.lang.IllegalStateException $r4;

        r0 := @this: com.android.internal.telephony.IccPhoneBookInterfaceManager;

        $r1 = r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: android.os.Handler mBaseHandler>;

        $r2 = virtualinvoke $r1.<android.os.Handler: android.os.Looper getLooper()>();

        $r3 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: void loge(java.lang.String)>("query() called on the main UI thread!");

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("You cannot call query on this provder from the main UI thread.");

        throw $r4;

     label1:
        return;
    }

    public void dispose()
    {
        com.android.internal.telephony.IccPhoneBookInterfaceManager r0;

        r0 := @this: com.android.internal.telephony.IccPhoneBookInterfaceManager;

        return;
    }

    public java.util.List getAdnRecordsInEf(int)
    {
        com.android.internal.telephony.IccPhoneBookInterfaceManager r0;
        int i0, i1, $i2, $i3;
        java.lang.Object r1;
        java.lang.Throwable r2, $r18;
        java.util.concurrent.atomic.AtomicBoolean r3, $r12;
        android.os.Message r4;
        com.android.internal.telephony.PhoneBase $r5;
        android.content.Context $r6;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;
        android.os.Handler $r11;
        com.android.internal.telephony.uicc.AdnRecordCache $r13, $r15, $r16;
        java.util.List $r14;
        java.lang.SecurityException $r17;

        r0 := @this: com.android.internal.telephony.IccPhoneBookInterfaceManager;

        i0 := @parameter0: int;

        $r5 = r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        $r6 = virtualinvoke $r5.<com.android.internal.telephony.PhoneBase: android.content.Context getContext()>();

        $i2 = virtualinvoke $r6.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.READ_CONTACTS");

        if $i2 == 0 goto label1;

        $r17 = new java.lang.SecurityException;

        specialinvoke $r17.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires android.permission.READ_CONTACTS permission");

        throw $r17;

     label1:
        i1 = specialinvoke r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: int updateEfForIccType(int)>(i0);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getAdnRecordsInEF: efid=");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: void logd(java.lang.String)>($r10);

        r1 = r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: java.lang.Object mLock>;

        entermonitor r1;

     label2:
        virtualinvoke r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: void checkThread()>();

        $r12 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r12.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r3 = $r12;

        $r11 = r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: android.os.Handler mBaseHandler>;

        r4 = virtualinvoke $r11.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(2, r3);

        $r13 = r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: com.android.internal.telephony.uicc.AdnRecordCache mAdnCache>;

        if $r13 == null goto label5;

        $r15 = r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: com.android.internal.telephony.uicc.AdnRecordCache mAdnCache>;

        $r16 = r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: com.android.internal.telephony.uicc.AdnRecordCache mAdnCache>;

        $i3 = virtualinvoke $r16.<com.android.internal.telephony.uicc.AdnRecordCache: int extensionEfForEf(int)>(i1);

        virtualinvoke $r15.<com.android.internal.telephony.uicc.AdnRecordCache: void requestLoadAllAdnLike(int,int,android.os.Message)>(i1, $i3, r4);

        virtualinvoke r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: void waitForResult(java.util.concurrent.atomic.AtomicBoolean)>(r3);

     label3:
        exitmonitor r1;

     label4:
        $r14 = r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: java.util.List mRecords>;

        return $r14;

     label5:
        virtualinvoke r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: void loge(java.lang.String)>("Failure while trying to load from SIM due to uninitialised adncache");

     label6:
        goto label3;

     label7:
        $r18 := @caughtexception;

        r2 = $r18;

     label8:
        exitmonitor r1;

     label9:
        throw r2;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public abstract int[] getAdnRecordsSize(int);

    protected abstract void logd(java.lang.String);

    protected abstract void loge(java.lang.String);

    protected void publish()
    {
        com.android.internal.telephony.IccPhoneBookInterfaceManager r0;

        r0 := @this: com.android.internal.telephony.IccPhoneBookInterfaceManager;

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("simphonebook", r0);

        return;
    }

    public boolean updateAdnRecordsInEfByIndex(int, java.lang.String, java.lang.String, int, java.lang.String)
    {
        com.android.internal.telephony.IccPhoneBookInterfaceManager r0;
        int i0, i1, $i2;
        java.lang.String r1, r2, r3, $r23;
        java.lang.Object r4;
        java.lang.Throwable r5, $r29;
        java.util.concurrent.atomic.AtomicBoolean r6, $r25;
        android.os.Message r7;
        com.android.internal.telephony.uicc.AdnRecord r8, $r27;
        com.android.internal.telephony.PhoneBase $r9;
        android.content.Context $r10;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r24;
        android.os.Handler $r26;
        boolean $z0;
        com.android.internal.telephony.uicc.AdnRecordCache $r28, $r30;
        java.lang.SecurityException $r31;

        r0 := @this: com.android.internal.telephony.IccPhoneBookInterfaceManager;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        r3 := @parameter4: java.lang.String;

        $r9 = r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        $r10 = virtualinvoke $r9.<com.android.internal.telephony.PhoneBase: android.content.Context getContext()>();

        $i2 = virtualinvoke $r10.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.WRITE_CONTACTS");

        if $i2 == 0 goto label1;

        $r31 = new java.lang.SecurityException;

        specialinvoke $r31.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires android.permission.WRITE_CONTACTS permission");

        throw $r31;

     label1:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateAdnRecordsInEfByIndex: efid=");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Index=");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ==> ");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pin2=");

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: void logd(java.lang.String)>($r23);

        r4 = r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: java.lang.Object mLock>;

        entermonitor r4;

     label2:
        virtualinvoke r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: void checkThread()>();

        r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: boolean mSuccess> = 0;

        $r25 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r25.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r6 = $r25;

        $r26 = r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: android.os.Handler mBaseHandler>;

        r7 = virtualinvoke $r26.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(3, r6);

        $r27 = new com.android.internal.telephony.uicc.AdnRecord;

        specialinvoke $r27.<com.android.internal.telephony.uicc.AdnRecord: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        r8 = $r27;

        $r28 = r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: com.android.internal.telephony.uicc.AdnRecordCache mAdnCache>;

        if $r28 == null goto label5;

        $r30 = r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: com.android.internal.telephony.uicc.AdnRecordCache mAdnCache>;

        virtualinvoke $r30.<com.android.internal.telephony.uicc.AdnRecordCache: void updateAdnByIndex(int,com.android.internal.telephony.uicc.AdnRecord,int,java.lang.String,android.os.Message)>(i0, r8, i1, r3, r7);

        virtualinvoke r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: void waitForResult(java.util.concurrent.atomic.AtomicBoolean)>(r6);

     label3:
        exitmonitor r4;

     label4:
        $z0 = r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: boolean mSuccess>;

        return $z0;

     label5:
        virtualinvoke r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: void loge(java.lang.String)>("Failure while trying to update by index due to uninitialised adncache");

     label6:
        goto label3;

     label7:
        $r29 := @caughtexception;

        r5 = $r29;

     label8:
        exitmonitor r4;

     label9:
        throw r5;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public boolean updateAdnRecordsInEfBySearch(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.internal.telephony.IccPhoneBookInterfaceManager r0;
        int i0, i1, $i2;
        java.lang.String r1, r2, r3, r4, r5, $r30;
        java.lang.Object r6;
        java.lang.Throwable r7, $r36;
        java.util.concurrent.atomic.AtomicBoolean r8, $r32;
        android.os.Message r9;
        com.android.internal.telephony.uicc.AdnRecord r10, r11, $r31, $r34;
        com.android.internal.telephony.PhoneBase $r12;
        android.content.Context $r13;
        java.lang.StringBuilder $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29;
        android.os.Handler $r33;
        boolean $z0;
        com.android.internal.telephony.uicc.AdnRecordCache $r35, $r37;
        java.lang.SecurityException $r38;

        r0 := @this: com.android.internal.telephony.IccPhoneBookInterfaceManager;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: java.lang.String;

        $r12 = r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        $r13 = virtualinvoke $r12.<com.android.internal.telephony.PhoneBase: android.content.Context getContext()>();

        $i2 = virtualinvoke $r13.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.WRITE_CONTACTS");

        if $i2 == 0 goto label1;

        $r38 = new java.lang.SecurityException;

        specialinvoke $r38.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires android.permission.WRITE_CONTACTS permission");

        throw $r38;

     label1:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateAdnRecordsInEfBySearch: efid=");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("==>");

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pin2=");

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: void logd(java.lang.String)>($r30);

        i1 = specialinvoke r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: int updateEfForIccType(int)>(i0);

        r6 = r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: java.lang.Object mLock>;

        entermonitor r6;

     label2:
        virtualinvoke r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: void checkThread()>();

        r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: boolean mSuccess> = 0;

        $r32 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r32.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r8 = $r32;

        $r33 = r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: android.os.Handler mBaseHandler>;

        r9 = virtualinvoke $r33.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(3, r8);

        $r31 = new com.android.internal.telephony.uicc.AdnRecord;

        specialinvoke $r31.<com.android.internal.telephony.uicc.AdnRecord: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        r10 = $r31;

        $r34 = new com.android.internal.telephony.uicc.AdnRecord;

        specialinvoke $r34.<com.android.internal.telephony.uicc.AdnRecord: void <init>(java.lang.String,java.lang.String)>(r3, r4);

        r11 = $r34;

        $r35 = r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: com.android.internal.telephony.uicc.AdnRecordCache mAdnCache>;

        if $r35 == null goto label5;

        $r37 = r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: com.android.internal.telephony.uicc.AdnRecordCache mAdnCache>;

        virtualinvoke $r37.<com.android.internal.telephony.uicc.AdnRecordCache: void updateAdnBySearch(int,com.android.internal.telephony.uicc.AdnRecord,com.android.internal.telephony.uicc.AdnRecord,java.lang.String,android.os.Message)>(i1, r10, r11, r5, r9);

        virtualinvoke r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: void waitForResult(java.util.concurrent.atomic.AtomicBoolean)>(r8);

     label3:
        exitmonitor r6;

     label4:
        $z0 = r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: boolean mSuccess>;

        return $z0;

     label5:
        virtualinvoke r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: void loge(java.lang.String)>("Failure while trying to update by search due to uninitialised adncache");

     label6:
        goto label3;

     label7:
        $r36 := @caughtexception;

        r7 = $r36;

     label8:
        exitmonitor r6;

     label9:
        throw r7;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void updateIccRecords(com.android.internal.telephony.uicc.IccRecords)
    {
        com.android.internal.telephony.IccPhoneBookInterfaceManager r0;
        com.android.internal.telephony.uicc.IccRecords r1;
        com.android.internal.telephony.uicc.AdnRecordCache $r2;

        r0 := @this: com.android.internal.telephony.IccPhoneBookInterfaceManager;

        r1 := @parameter0: com.android.internal.telephony.uicc.IccRecords;

        if r1 == null goto label1;

        $r2 = virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: com.android.internal.telephony.uicc.AdnRecordCache getAdnCache()>();

        r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: com.android.internal.telephony.uicc.AdnRecordCache mAdnCache> = $r2;

        return;

     label1:
        r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: com.android.internal.telephony.uicc.AdnRecordCache mAdnCache> = null;

        return;
    }

    protected void waitForResult(java.util.concurrent.atomic.AtomicBoolean)
    {
        com.android.internal.telephony.IccPhoneBookInterfaceManager r0;
        java.util.concurrent.atomic.AtomicBoolean r1;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.InterruptedException $r4;

        r0 := @this: com.android.internal.telephony.IccPhoneBookInterfaceManager;

        r1 := @parameter0: java.util.concurrent.atomic.AtomicBoolean;

     label1:
        $z0 = virtualinvoke r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 != 0 goto label5;

     label2:
        $r3 = r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: java.lang.Object mLock>;

        virtualinvoke $r3.<java.lang.Object: void wait()>();

     label3:
        goto label1;

     label4:
        $r4 := @caughtexception;

        virtualinvoke r0.<com.android.internal.telephony.IccPhoneBookInterfaceManager: void logd(java.lang.String)>("interrupted while trying to update by search");

        goto label1;

     label5:
        return;

        catch java.lang.InterruptedException from label2 to label3 with label4;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.IccPhoneBookInterfaceManager: int EVENT_UPDATE_DONE> = 3;

        <com.android.internal.telephony.IccPhoneBookInterfaceManager: int EVENT_LOAD_DONE> = 2;

        <com.android.internal.telephony.IccPhoneBookInterfaceManager: int EVENT_GET_SIZE_DONE> = 1;

        <com.android.internal.telephony.IccPhoneBookInterfaceManager: boolean DBG> = 1;

        <com.android.internal.telephony.IccPhoneBookInterfaceManager: boolean ALLOW_SIM_OP_IN_UI_THREAD> = 0;

        return;
    }
}
