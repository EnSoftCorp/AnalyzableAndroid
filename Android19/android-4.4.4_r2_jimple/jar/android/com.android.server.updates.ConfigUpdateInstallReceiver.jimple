public class com.android.server.updates.ConfigUpdateInstallReceiver extends android.content.BroadcastReceiver
{
    private static final java.lang.String EXTRA_CONTENT_PATH;
    private static final java.lang.String EXTRA_REQUIRED_HASH;
    private static final java.lang.String EXTRA_SIGNATURE;
    private static final java.lang.String EXTRA_VERSION_NUMBER;
    private static final java.lang.String TAG;
    private static final java.lang.String UPDATE_CERTIFICATE_KEY;
    protected final java.io.File updateContent;
    protected final java.io.File updateDir;
    protected final java.io.File updateVersion;

    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        java.lang.String r1, r2, r3, r4;
        java.io.File $r5, $r6, $r7, $r8;

        r0 := @this: com.android.server.updates.ConfigUpdateInstallReceiver;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        $r5 = new java.io.File;

        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>(r1);

        r0.<com.android.server.updates.ConfigUpdateInstallReceiver: java.io.File updateDir> = $r5;

        $r6 = new java.io.File;

        specialinvoke $r6.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        r0.<com.android.server.updates.ConfigUpdateInstallReceiver: java.io.File updateContent> = $r6;

        $r7 = new java.io.File;

        $r8 = new java.io.File;

        specialinvoke $r8.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, r3);

        specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>($r8, r4);

        r0.<com.android.server.updates.ConfigUpdateInstallReceiver: java.io.File updateVersion> = $r7;

        return;
    }

    static java.security.cert.X509Certificate access$000(com.android.server.updates.ConfigUpdateInstallReceiver, android.content.ContentResolver)
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        android.content.ContentResolver r1;
        java.security.cert.X509Certificate $r2;

        r0 := @parameter0: com.android.server.updates.ConfigUpdateInstallReceiver;

        r1 := @parameter1: android.content.ContentResolver;

        $r2 = specialinvoke r0.<com.android.server.updates.ConfigUpdateInstallReceiver: java.security.cert.X509Certificate getCert(android.content.ContentResolver)>(r1);

        return $r2;
    }

    static byte[] access$100(com.android.server.updates.ConfigUpdateInstallReceiver, android.content.Intent) throws java.io.IOException
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        android.content.Intent r1;
        byte[] $r2;

        r0 := @parameter0: com.android.server.updates.ConfigUpdateInstallReceiver;

        r1 := @parameter1: android.content.Intent;

        $r2 = specialinvoke r0.<com.android.server.updates.ConfigUpdateInstallReceiver: byte[] getAltContent(android.content.Intent)>(r1);

        return $r2;
    }

    static boolean access$1000(com.android.server.updates.ConfigUpdateInstallReceiver, byte[], int, java.lang.String, java.lang.String, java.security.cert.X509Certificate) throws java.lang.Exception
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        byte[] r1;
        int i0;
        java.lang.String r2, r3;
        java.security.cert.X509Certificate r4;
        boolean $z0;

        r0 := @parameter0: com.android.server.updates.ConfigUpdateInstallReceiver;

        r1 := @parameter1: byte[];

        i0 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: java.security.cert.X509Certificate;

        $z0 = specialinvoke r0.<com.android.server.updates.ConfigUpdateInstallReceiver: boolean verifySignature(byte[],int,java.lang.String,java.lang.String,java.security.cert.X509Certificate)>(r1, i0, r2, r3, r4);

        return $z0;
    }

    static int access$200(com.android.server.updates.ConfigUpdateInstallReceiver, android.content.Intent) throws java.lang.NumberFormatException
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        android.content.Intent r1;
        int $i0;

        r0 := @parameter0: com.android.server.updates.ConfigUpdateInstallReceiver;

        r1 := @parameter1: android.content.Intent;

        $i0 = specialinvoke r0.<com.android.server.updates.ConfigUpdateInstallReceiver: int getVersionFromIntent(android.content.Intent)>(r1);

        return $i0;
    }

    static java.lang.String access$300(com.android.server.updates.ConfigUpdateInstallReceiver, android.content.Intent)
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        android.content.Intent r1;
        java.lang.String $r2;

        r0 := @parameter0: com.android.server.updates.ConfigUpdateInstallReceiver;

        r1 := @parameter1: android.content.Intent;

        $r2 = specialinvoke r0.<com.android.server.updates.ConfigUpdateInstallReceiver: java.lang.String getRequiredHashFromIntent(android.content.Intent)>(r1);

        return $r2;
    }

    static java.lang.String access$400(com.android.server.updates.ConfigUpdateInstallReceiver, android.content.Intent)
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        android.content.Intent r1;
        java.lang.String $r2;

        r0 := @parameter0: com.android.server.updates.ConfigUpdateInstallReceiver;

        r1 := @parameter1: android.content.Intent;

        $r2 = specialinvoke r0.<com.android.server.updates.ConfigUpdateInstallReceiver: java.lang.String getSignatureFromIntent(android.content.Intent)>(r1);

        return $r2;
    }

    static int access$500(com.android.server.updates.ConfigUpdateInstallReceiver) throws java.lang.NumberFormatException
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        int $i0;

        r0 := @parameter0: com.android.server.updates.ConfigUpdateInstallReceiver;

        $i0 = specialinvoke r0.<com.android.server.updates.ConfigUpdateInstallReceiver: int getCurrentVersion()>();

        return $i0;
    }

    static byte[] access$600(com.android.server.updates.ConfigUpdateInstallReceiver)
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        byte[] $r1;

        r0 := @parameter0: com.android.server.updates.ConfigUpdateInstallReceiver;

        $r1 = specialinvoke r0.<com.android.server.updates.ConfigUpdateInstallReceiver: byte[] getCurrentContent()>();

        return $r1;
    }

    static java.lang.String access$700(byte[])
    {
        byte[] r0;
        java.lang.String $r1;

        r0 := @parameter0: byte[];

        $r1 = staticinvoke <com.android.server.updates.ConfigUpdateInstallReceiver: java.lang.String getCurrentHash(byte[])>(r0);

        return $r1;
    }

    static boolean access$800(com.android.server.updates.ConfigUpdateInstallReceiver, int, int)
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: com.android.server.updates.ConfigUpdateInstallReceiver;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = specialinvoke r0.<com.android.server.updates.ConfigUpdateInstallReceiver: boolean verifyVersion(int,int)>(i0, i1);

        return $z0;
    }

    static boolean access$900(com.android.server.updates.ConfigUpdateInstallReceiver, java.lang.String, java.lang.String)
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        java.lang.String r1, r2;
        boolean $z0;

        r0 := @parameter0: com.android.server.updates.ConfigUpdateInstallReceiver;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.updates.ConfigUpdateInstallReceiver: boolean verifyPreviousHash(java.lang.String,java.lang.String)>(r1, r2);

        return $z0;
    }

    private byte[] getAltContent(android.content.Intent) throws java.io.IOException
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        android.content.Intent r1;
        java.lang.String $r2;
        byte[] $r3;

        r0 := @this: com.android.server.updates.ConfigUpdateInstallReceiver;

        r1 := @parameter0: android.content.Intent;

        $r2 = specialinvoke r0.<com.android.server.updates.ConfigUpdateInstallReceiver: java.lang.String getContentFromIntent(android.content.Intent)>(r1);

        $r3 = staticinvoke <libcore.io.IoUtils: byte[] readFileAsByteArray(java.lang.String)>($r2);

        return $r3;
    }

    private java.security.cert.X509Certificate getCert(android.content.ContentResolver)
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        android.content.ContentResolver r1;
        java.lang.String r2;
        java.io.ByteArrayInputStream r3, $r6;
        java.security.cert.X509Certificate r5;
        byte[] $r7, $r8;
        java.security.cert.CertificateFactory $r9;
        java.security.cert.Certificate $r10;
        java.security.cert.CertificateException $r11;
        java.lang.IllegalStateException $r12;

        r0 := @this: com.android.server.updates.ConfigUpdateInstallReceiver;

        r1 := @parameter0: android.content.ContentResolver;

        r2 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>(r1, "config_update_certificate");

     label1:
        $r6 = new java.io.ByteArrayInputStream;

        $r7 = virtualinvoke r2.<java.lang.String: byte[] getBytes()>();

        $r8 = staticinvoke <android.util.Base64: byte[] decode(byte[],int)>($r7, 0);

        specialinvoke $r6.<java.io.ByteArrayInputStream: void <init>(byte[])>($r8);

        r3 = $r6;

        $r9 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X.509");

        $r10 = virtualinvoke $r9.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>(r3);

        r5 = (java.security.cert.X509Certificate) $r10;

     label2:
        return r5;

     label3:
        $r11 := @caughtexception;

        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Got malformed certificate from settings, ignoring");

        throw $r12;

        catch java.security.cert.CertificateException from label1 to label2 with label3;
    }

    private java.lang.String getContentFromIntent(android.content.Intent)
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        android.content.Intent r1;
        java.lang.String r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: com.android.server.updates.ConfigUpdateInstallReceiver;

        r1 := @parameter0: android.content.Intent;

        r2 = virtualinvoke r1.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("CONTENT_PATH");

        if r2 != null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Missing required content path, ignoring.");

        throw $r3;

     label1:
        return r2;
    }

    private byte[] getCurrentContent()
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        byte[] r2;
        java.io.File $r3;
        java.lang.String $r4;
        java.io.IOException $r5;

        r0 := @this: com.android.server.updates.ConfigUpdateInstallReceiver;

     label1:
        $r3 = r0.<com.android.server.updates.ConfigUpdateInstallReceiver: java.io.File updateContent>;

        $r4 = virtualinvoke $r3.<java.io.File: java.lang.String getCanonicalPath()>();

        r2 = staticinvoke <libcore.io.IoUtils: byte[] readFileAsByteArray(java.lang.String)>($r4);

     label2:
        return r2;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ConfigUpdateInstallReceiver", "Failed to read current content, assuming first update!");

        return null;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private static java.lang.String getCurrentHash(byte[])
    {
        byte[] r0, $r4;
        java.security.NoSuchAlgorithmException r1, $r5;
        java.lang.String r2;
        java.security.MessageDigest $r3;
        java.lang.AssertionError $r6;

        r0 := @parameter0: byte[];

        if r0 != null goto label1;

        return "0";

     label1:
        $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA512");

        $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>(r0);

        r2 = staticinvoke <java.lang.IntegralToString: java.lang.String bytesToHexString(byte[],boolean)>($r4, 0);

     label2:
        return r2;

     label3:
        $r5 := @caughtexception;

        r1 = $r5;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>(r1);

        throw $r6;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    private int getCurrentVersion() throws java.lang.NumberFormatException
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        int i0;
        java.io.File $r2;
        java.lang.String $r3, $r4, $r5;
        java.io.IOException $r6;

        r0 := @this: com.android.server.updates.ConfigUpdateInstallReceiver;

     label1:
        $r2 = r0.<com.android.server.updates.ConfigUpdateInstallReceiver: java.io.File updateVersion>;

        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String getCanonicalPath()>();

        $r4 = staticinvoke <libcore.io.IoUtils: java.lang.String readFileAsString(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

     label2:
        return i0;

     label3:
        $r6 := @caughtexception;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ConfigUpdateInstallReceiver", "Couldn\'t find current metadata, assuming first update");

        return 0;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private java.lang.String getRequiredHashFromIntent(android.content.Intent)
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        android.content.Intent r1;
        java.lang.String r2, $r3;
        java.lang.IllegalStateException $r4;

        r0 := @this: com.android.server.updates.ConfigUpdateInstallReceiver;

        r1 := @parameter0: android.content.Intent;

        r2 = virtualinvoke r1.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("REQUIRED_HASH");

        if r2 != null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Missing required previous hash, ignoring.");

        throw $r4;

     label1:
        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>();

        return $r3;
    }

    private java.lang.String getSignatureFromIntent(android.content.Intent)
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        android.content.Intent r1;
        java.lang.String r2, $r3;
        java.lang.IllegalStateException $r4;

        r0 := @this: com.android.server.updates.ConfigUpdateInstallReceiver;

        r1 := @parameter0: android.content.Intent;

        r2 = virtualinvoke r1.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("SIGNATURE");

        if r2 != null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Missing required signature, ignoring.");

        throw $r4;

     label1:
        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>();

        return $r3;
    }

    private int getVersionFromIntent(android.content.Intent) throws java.lang.NumberFormatException
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        android.content.Intent r1;
        java.lang.String r2, $r3;
        int $i0;
        java.lang.IllegalStateException $r4;

        r0 := @this: com.android.server.updates.ConfigUpdateInstallReceiver;

        r1 := @parameter0: android.content.Intent;

        r2 = virtualinvoke r1.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("VERSION");

        if r2 != null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Missing required version number, ignoring.");

        throw $r4;

     label1:
        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

        return $i0;
    }

    private boolean verifyPreviousHash(java.lang.String, java.lang.String)
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        java.lang.String r1, r2;
        boolean $z0, $z1;

        r0 := @this: com.android.server.updates.ConfigUpdateInstallReceiver;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("NONE");

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        return $z1;
    }

    private boolean verifySignature(byte[], int, java.lang.String, java.lang.String, java.security.cert.X509Certificate) throws java.lang.Exception
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        byte[] r1, $r7, $r8, $r9, $r10;
        int i0;
        java.lang.String r2, r3, $r6;
        java.security.cert.X509Certificate r4;
        java.security.Signature r5;
        long $l1;
        boolean $z0;

        r0 := @this: com.android.server.updates.ConfigUpdateInstallReceiver;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.security.cert.X509Certificate;

        r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>("SHA512withRSA");

        virtualinvoke r5.<java.security.Signature: void initVerify(java.security.cert.Certificate)>(r4);

        virtualinvoke r5.<java.security.Signature: void update(byte[])>(r1);

        $l1 = (long) i0;

        $r6 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l1);

        $r7 = virtualinvoke $r6.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r5.<java.security.Signature: void update(byte[])>($r7);

        $r8 = virtualinvoke r2.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r5.<java.security.Signature: void update(byte[])>($r8);

        $r9 = virtualinvoke r3.<java.lang.String: byte[] getBytes()>();

        $r10 = staticinvoke <android.util.Base64: byte[] decode(byte[],int)>($r9, 0);

        $z0 = virtualinvoke r5.<java.security.Signature: boolean verify(byte[])>($r10);

        return $z0;
    }

    private boolean verifyVersion(int, int)
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        int i0, i1;

        r0 := @this: com.android.server.updates.ConfigUpdateInstallReceiver;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 >= i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected void install(byte[], int) throws java.io.IOException
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        byte[] r1, $r7;
        int i0;
        java.io.File $r2, $r3, $r4, $r5;
        long $l1;
        java.lang.String $r6;

        r0 := @this: com.android.server.updates.ConfigUpdateInstallReceiver;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        $r3 = r0.<com.android.server.updates.ConfigUpdateInstallReceiver: java.io.File updateDir>;

        $r2 = r0.<com.android.server.updates.ConfigUpdateInstallReceiver: java.io.File updateContent>;

        virtualinvoke r0.<com.android.server.updates.ConfigUpdateInstallReceiver: void writeUpdate(java.io.File,java.io.File,byte[])>($r3, $r2, r1);

        $r4 = r0.<com.android.server.updates.ConfigUpdateInstallReceiver: java.io.File updateDir>;

        $r5 = r0.<com.android.server.updates.ConfigUpdateInstallReceiver: java.io.File updateVersion>;

        $l1 = (long) i0;

        $r6 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l1);

        $r7 = virtualinvoke $r6.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r0.<com.android.server.updates.ConfigUpdateInstallReceiver: void writeUpdate(java.io.File,java.io.File,byte[])>($r4, $r5, $r7);

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;
        com.android.server.updates.ConfigUpdateInstallReceiver$1 $r3;

        r0 := @this: com.android.server.updates.ConfigUpdateInstallReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        $r3 = new com.android.server.updates.ConfigUpdateInstallReceiver$1;

        specialinvoke $r3.<com.android.server.updates.ConfigUpdateInstallReceiver$1: void <init>(com.android.server.updates.ConfigUpdateInstallReceiver,android.content.Context,android.content.Intent)>(r0, r1, r2);

        virtualinvoke $r3.<com.android.server.updates.ConfigUpdateInstallReceiver$1: void start()>();

        return;
    }

    protected void postInstall(android.content.Context, android.content.Intent)
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;

        r0 := @this: com.android.server.updates.ConfigUpdateInstallReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        return;
    }

    protected void writeUpdate(java.io.File, java.io.File, byte[]) throws java.io.IOException
    {
        com.android.server.updates.ConfigUpdateInstallReceiver r0;
        java.io.File r1, r2, r5, r7;
        byte[] r3;
        java.io.FileOutputStream r4, r8, $r10;
        java.lang.Throwable r6, $r21, $r24;
        boolean z0, $z4;
        java.io.FileDescriptor $r9;
        java.lang.StringBuilder $r11, $r14, $r16, $r17, $r20, $r22;
        java.io.IOException $r12, $r18;
        java.lang.String $r13, $r15, $r19, $r23;

        r0 := @this: com.android.server.updates.ConfigUpdateInstallReceiver;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.io.File;

        r3 := @parameter2: byte[];

        r4 = null;

        r5 = null;

     label01:
        r7 = virtualinvoke r2.<java.io.File: java.io.File getParentFile()>();

        virtualinvoke r7.<java.io.File: boolean mkdirs()>();

        z0 = virtualinvoke r7.<java.io.File: boolean exists()>();

     label02:
        r5 = null;

        if z0 != 0 goto label07;

     label03:
        $r18 = new java.io.IOException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create directory ");

        $r19 = virtualinvoke r7.<java.io.File: java.lang.String getCanonicalPath()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.io.IOException: void <init>(java.lang.String)>($r23);

        throw $r18;

     label04:
        $r24 := @caughtexception;

        r6 = $r24;

     label05:
        if r5 == null goto label06;

        virtualinvoke r5.<java.io.File: boolean delete()>();

     label06:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        throw r6;

     label07:
        r5 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>("journal", "", r1);

        virtualinvoke r5.<java.io.File: boolean setReadable(boolean,boolean)>(1, 0);

        $r10 = new java.io.FileOutputStream;

        specialinvoke $r10.<java.io.FileOutputStream: void <init>(java.io.File)>(r5);

        r8 = $r10;

     label08:
        virtualinvoke r8.<java.io.FileOutputStream: void write(byte[])>(r3);

        $r9 = virtualinvoke r8.<java.io.FileOutputStream: java.io.FileDescriptor getFD()>();

        virtualinvoke $r9.<java.io.FileDescriptor: void sync()>();

        $z4 = virtualinvoke r5.<java.io.File: boolean renameTo(java.io.File)>(r2);

        if $z4 != 0 goto label10;

        $r12 = new java.io.IOException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to atomically rename ");

        $r13 = virtualinvoke r2.<java.io.File: java.lang.String getCanonicalPath()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>($r15);

        throw $r12;

     label09:
        $r21 := @caughtexception;

        r6 = $r21;

        r4 = r8;

        goto label05;

     label10:
        if r5 == null goto label11;

        virtualinvoke r5.<java.io.File: boolean delete()>();

     label11:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r8);

        return;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label03 to label04 with label04;
        catch java.lang.Throwable from label07 to label08 with label04;
        catch java.lang.Throwable from label08 to label09 with label09;
    }

    public static void <clinit>()
    {
        <com.android.server.updates.ConfigUpdateInstallReceiver: java.lang.String UPDATE_CERTIFICATE_KEY> = "config_update_certificate";

        <com.android.server.updates.ConfigUpdateInstallReceiver: java.lang.String TAG> = "ConfigUpdateInstallReceiver";

        <com.android.server.updates.ConfigUpdateInstallReceiver: java.lang.String EXTRA_VERSION_NUMBER> = "VERSION";

        <com.android.server.updates.ConfigUpdateInstallReceiver: java.lang.String EXTRA_SIGNATURE> = "SIGNATURE";

        <com.android.server.updates.ConfigUpdateInstallReceiver: java.lang.String EXTRA_REQUIRED_HASH> = "REQUIRED_HASH";

        <com.android.server.updates.ConfigUpdateInstallReceiver: java.lang.String EXTRA_CONTENT_PATH> = "CONTENT_PATH";

        return;
    }
}
