class com.android.server.ServerThread extends java.lang.Object
{
    private static final java.lang.String ENCRYPTED_STATE;
    private static final java.lang.String ENCRYPTING_STATE;
    private static final java.lang.String TAG;
    android.content.ContentResolver mContentResolver;

    void <init>()
    {
        com.android.server.ServerThread r0;

        r0 := @this: com.android.server.ServerThread;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static final void startSystemUi(android.content.Context)
    {
        android.content.Context r0;
        android.content.Intent r1, $r2;
        android.content.ComponentName $r3;
        android.os.UserHandle $r5;

        r0 := @parameter0: android.content.Context;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>()>();

        r1 = $r2;

        $r3 = new android.content.ComponentName;

        specialinvoke $r3.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("com.android.systemui", "com.android.systemui.SystemUIService");

        virtualinvoke r1.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r3);

        $r5 = <android.os.UserHandle: android.os.UserHandle OWNER>;

        virtualinvoke r0.<android.content.Context: android.content.ComponentName startServiceAsUser(android.content.Intent,android.os.UserHandle)>(r1, $r5);

        return;
    }

    public void initAndLoop()
    {
        com.android.server.ServerThread r0;
        java.lang.String r1, r2, r157, r171, $r182, $r183, $r184, $r198, $r199, $r203, $r239, $r263, $r269, $r270;
        int i0, i1, $i76, $i78, $i80;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, z12, z13, z14, z15, z16, z17, z18, z19, z20, $z23, $z25, $z26, $z27, $z28, $z29, $z30;
        com.android.server.pm.Installer r3, r169, $r179;
        com.android.server.accounts.AccountManagerService r4, r168, $r189;
        com.android.server.content.ContentService r5;
        com.android.server.power.PowerManagerService r6, r170, $r180;
        com.android.server.VibratorService r7, r174, $r192;
        com.android.server.net.NetworkStatsService r8, r75, r154, $r255;
        com.android.server.ConnectivityService r9, r69, r139, $r251;
        android.net.wifi.p2p.WifiP2pService r10, r137, $r253;
        com.android.server.wifi.WifiService r11, r140, $r252;
        android.content.pm.IPackageManager r12, r167;
        android.os.HandlerThread r13, $r185;
        com.android.server.wm.WindowManagerService r14;
        android.os.Handler r15, $r186;
        java.lang.RuntimeException r16, r20, $r276, $r279, $r287, $r295, $r308, $r312, $r315, $r319, $r345, $r347, $r364, $r365, $r371;
        android.content.Context r17, r63, r172;
        com.android.server.LightsService r18, $r194;
        com.android.server.BatteryService r19, r73, $r193;
        com.android.server.input.InputManagerService r21, r85, $r216;
        com.android.server.TelephonyRegistry r22, r86, r158, $r196;
        com.android.server.display.DisplayManagerService r23, $r181;
        com.android.server.AlarmManagerService r24, $r212;
        com.android.server.NotificationManagerService r25, r128, $r229;
        com.android.server.print.PrintManagerService r26, r98, r100, $r247;
        java.lang.Throwable r27, r28, r40, r41, r45, r48, r49, r50, r52, r54, r55, r61, r62, r64, r65, r66, r93, r94, r95, r96, r99, r102, r103, r107, r108, r112, r113, r114, r115, r116, r119, r122, r125, r127, r130, r131, r132, r133, r134, r136, r141, r142, r143, r144, r145, r146, r147, r149, r151, r152, r153, r155, r160, r161, r163, r165, $r264, $r277, $r278, $r280, $r281, $r282, $r283, $r284, $r285, $r286, $r288, $r289, $r290, $r291, $r292, $r293, $r294, $r297, $r298, $r299, $r300, $r301, $r302, $r303, $r304, $r305, $r306, $r307, $r309, $r310, $r311, $r313, $r314, $r316, $r317, $r318, $r320, $r321, $r322, $r323, $r324, $r325, $r326, $r327, $r328, $r330, $r331, $r332, $r333, $r334, $r335, $r336, $r337, $r338, $r339, $r340, $r341, $r342, $r343, $r344, $r346, $r348, $r350, $r351, $r352, $r353, $r354, $r355, $r356, $r357, $r358, $r359, $r360, $r361, $r362, $r363, $r366, $r367, $r368, $r369, $r370;
        com.android.server.InputMethodManagerService r29, r79, r159, $r265;
        com.android.server.LockSettingsService r30, r164, $r272;
        com.android.server.DevicePolicyManagerService r31, r148, $r268;
        com.android.server.MountService r32, r74, r162, $r267;
        com.android.server.net.NetworkPolicyManagerService r34, r70, $r254;
        com.android.server.TextServicesManagerService r35, r89, r156, $r275;
        com.android.server.NetworkManagementService r36, r76;
        com.android.server.StatusBarManagerService r37, r90, r150, $r271;
        com.android.server.LocationManagerService r38, r77, r129, $r258;
        com.android.server.CountryDetectorService r39, r78, r135, $r257;
        com.android.server.usb.UsbService r42, r71, r123, $r235;
        com.android.server.DockObserver r43, r72, r120, $r238;
        com.android.server.WallpaperManagerService r44, r82, r121, $r260;
        com.android.server.AppWidgetService r46, r81, r118, $r241;
        com.android.server.RecognitionManagerService r47, r80, r117, $r242;
        com.android.server.TwilightService r51, r83, r111, $r224;
        com.android.server.UiModeManagerService r53, r84, r110, $r223;
        com.android.server.media.MediaRouterService r56, r97, r101, $r248;
        com.android.server.NetworkTimeUpdateService r57, r91, r105, $r246;
        com.android.server.CommonTimeManagementService r58, r92, r104, $r245;
        com.android.server.dreams.DreamManagerService r59, r87, r109, $r243;
        com.android.server.AssetAtlasService r60, r88, r106, $r249;
        android.util.DisplayMetrics r67, $r206;
        android.content.res.Configuration r68;
        com.android.server.SerialService r124, $r236;
        com.android.server.WiredAccessoryManager r126, $r237;
        com.android.server.am.ActivityManagerService r138, r175, $r202, $r210, $r214, $r226, $r227, $r230;
        com.android.server.ConsumerIrService r173, $r213;
        com.android.server.Watchdog r176, $r217;
        com.android.server.wm.InputMonitor r177;
        com.android.server.BluetoothManagerService r178, $r201;
        long $l5;
        android.os.Looper $r187;
        com.android.server.ServerThread$1 $r188;
        android.content.ContentResolver $r190;
        com.android.server.pm.UserManagerService $r191;
        com.android.server.os.SchedulingPolicyService $r195;
        com.android.server.EntropyMixer $r197;
        android.content.pm.PackageManager $r200;
        dalvik.system.VMRuntime $r204, $r225;
        java.lang.Object $r205;
        android.content.res.Resources $r207, $r231, $r250, $r261;
        android.app.IActivityManager $r208;
        java.lang.CharSequence $r209;
        com.android.internal.app.IAppOpsService $r211;
        com.android.internal.app.IBatteryStats $r215;
        com.android.server.DiskStatsService $r218;
        com.android.server.IdleMaintenanceService $r219;
        com.android.server.SamplingProfilerService $r220;
        java.io.File $r221;
        com.android.server.DropBoxManagerService $r222;
        com.android.server.DeviceStorageMonitorService $r228;
        android.view.Display $r232;
        android.view.WindowManager $r233;
        com.android.server.ServerThread$2 $r234;
        com.android.server.BackupManagerService $r240;
        com.android.server.CertBlacklister $r244;
        com.android.server.UpdateLockService $r256;
        com.android.server.search.SearchManagerService $r259;
        android.media.AudioService $r262;
        com.android.server.accessibility.AccessibilityManagerService $r266;
        com.android.server.ClipboardService $r273;
        com.android.server.NsdService $r274;
        android.os.RemoteException $r296, $r329;
        char $c79;

        r0 := @this: com.android.server.ServerThread;

        $l5 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        staticinvoke <android.util.EventLog: int writeEvent(int,long)>(3010, $l5);

        staticinvoke <android.os.Looper: void prepareMainLooper()>();

        staticinvoke <android.os.Process: void setThreadPriority(int)>(-2);

        staticinvoke <com.android.internal.os.BinderInternal: void disableBackgroundScheduling(boolean)>(1);

        staticinvoke <android.os.Process: void setCanSelfBackground(boolean)>(0);

        r1 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("sys.shutdown.requested", "");

        if r1 == null goto label003;

        $i78 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i78 <= 0 goto label003;

        $c79 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        if $c79 != 49 goto label176;

        z18 = 1;

     label001:
        $i80 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i80 <= 1 goto label177;

        $i76 = virtualinvoke r1.<java.lang.String: int length()>();

        r171 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(1, $i76);

     label002:
        staticinvoke <com.android.server.power.ShutdownThread: void rebootOrShutdown(boolean,java.lang.String)>(z18, r171);

     label003:
        r2 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("ro.factorytest");

        $r182 = "";

        $z23 = virtualinvoke $r182.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z23 == 0 goto label178;

        i0 = 0;

     label004:
        $r183 = "1";

        $r184 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("ro.config.headless", "0");

        z0 = virtualinvoke $r183.<java.lang.String: boolean equals(java.lang.Object)>($r184);

        r3 = null;

        r4 = null;

        r5 = null;

        r6 = null;

        r7 = null;

        r8 = null;

        r9 = null;

        r10 = null;

        r11 = null;

        r12 = null;

        r14 = null;

        $r185 = new android.os.HandlerThread;

        specialinvoke $r185.<android.os.HandlerThread: void <init>(java.lang.String)>("WindowManager");

        r13 = $r185;

        virtualinvoke r13.<android.os.HandlerThread: void start()>();

        $r186 = new android.os.Handler;

        $r187 = virtualinvoke r13.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r186.<android.os.Handler: void <init>(android.os.Looper)>($r187);

        r15 = $r186;

        $r188 = new com.android.server.ServerThread$1;

        specialinvoke $r188.<com.android.server.ServerThread$1: void <init>(com.android.server.ServerThread)>(r0);

        virtualinvoke r15.<android.os.Handler: boolean post(java.lang.Runnable)>($r188);

        z1 = 0;

     label005:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Waiting for installd to be ready.");

        $r179 = new com.android.server.pm.Installer;

        specialinvoke $r179.<com.android.server.pm.Installer: void <init>()>();

        r169 = $r179;

     label006:
        virtualinvoke r169.<com.android.server.pm.Installer: boolean ping()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Power Manager");

        $r180 = new com.android.server.power.PowerManagerService;

        specialinvoke $r180.<com.android.server.power.PowerManagerService: void <init>()>();

        r170 = $r180;

     label007:
        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("power", r170);

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Activity Manager");

        r172 = staticinvoke <com.android.server.am.ActivityManagerService: android.content.Context main(int)>(i0);

     label008:
        r17 = r172;

        r6 = r170;

        r3 = r169;

     label009:
        z2 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("config.disable_storage", 0);

        z4 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("config.disable_media", 0);

        z3 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("config.disable_bluetooth", 0);

        staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("config.disable_telephony", 0);

        z5 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("config.disable_location", 0);

        z7 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("config.disable_systemui", 0);

        z6 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("config.disable_noncore", 0);

        z8 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("config.disable_network", 0);

     label010:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Display Manager");

        $r181 = new com.android.server.display.DisplayManagerService;

        specialinvoke $r181.<com.android.server.display.DisplayManagerService: void <init>(android.content.Context,android.os.Handler)>(r17, r15);

        r23 = $r181;

     label011:
        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder,boolean)>("display", r23, 1);

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Telephony Registry");

        $r196 = new com.android.server.TelephonyRegistry;

        specialinvoke $r196.<com.android.server.TelephonyRegistry: void <init>(android.content.Context)>(r17);

        r158 = $r196;

     label012:
        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("telephony.registry", r158);

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Scheduling Policy");

        $r195 = new com.android.server.os.SchedulingPolicyService;

        specialinvoke $r195.<com.android.server.os.SchedulingPolicyService: void <init>()>();

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("scheduling_policy", $r195);

        staticinvoke <com.android.server.AttributeCache: void init(android.content.Context)>(r17);

        $z25 = virtualinvoke r23.<com.android.server.display.DisplayManagerService: boolean waitForDefaultDisplay()>();

        if $z25 != 0 goto label013;

        $r264 = new java.lang.Throwable;

        specialinvoke $r264.<java.lang.Throwable: void <init>()>();

        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("Timeout waiting for default display to be initialized.", $r264);

     label013:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Package Manager");

        r157 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("vold.decrypt");

        $r199 = "trigger_restart_min_framework";

        $z26 = virtualinvoke $r199.<java.lang.String: boolean equals(java.lang.Object)>(r157);

        if $z26 == 0 goto label181;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SystemServer", "Detected encryption in progress - only parsing core apps");

     label014:
        z1 = 1;

        goto label320;

     label015:
        r167 = staticinvoke <com.android.server.pm.PackageManagerService: android.content.pm.IPackageManager main(android.content.Context,com.android.server.pm.Installer,boolean,boolean)>(r17, r3, z15, z1);

     label016:
        r12 = r167;

     label017:
        z17 = interfaceinvoke r12.<android.content.pm.IPackageManager: boolean isFirstBoot()>();

     label018:
        z14 = z17;

     label019:
        staticinvoke <com.android.server.am.ActivityManagerService: void setSystemProcess()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Entropy Mixer");

        $r197 = new com.android.server.EntropyMixer;

        specialinvoke $r197.<com.android.server.EntropyMixer: void <init>(android.content.Context)>(r17);

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("entropy", $r197);

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "User Service");

        $r191 = staticinvoke <com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService getInstance()>();

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("user", $r191);

        $r190 = virtualinvoke r17.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r0.<com.android.server.ServerThread: android.content.ContentResolver mContentResolver> = $r190;

     label020:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Account Manager");

        $r189 = new com.android.server.accounts.AccountManagerService;

        specialinvoke $r189.<com.android.server.accounts.AccountManagerService: void <init>(android.content.Context)>(r17);

        r168 = $r189;

     label021:
        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("account", r168);

     label022:
        r4 = r168;

     label023:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Content Manager");

     label024:
        if i0 != 1 goto label189;

        z13 = 1;

     label025:
        r5 = staticinvoke <com.android.server.content.ContentService: com.android.server.content.ContentService main(android.content.Context,boolean)>(r17, z13);

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "System Content Providers");

        staticinvoke <com.android.server.am.ActivityManagerService: void installSystemProviders()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Lights Service");

        $r194 = new com.android.server.LightsService;

        specialinvoke $r194.<com.android.server.LightsService: void <init>(android.content.Context)>(r17);

        r18 = $r194;

     label026:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Battery Service");

        $r193 = new com.android.server.BatteryService;

        specialinvoke $r193.<com.android.server.BatteryService: void <init>(android.content.Context,com.android.server.LightsService)>(r17, r18);

        r19 = $r193;

     label027:
        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("battery", r19);

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Vibrator Service");

        $r192 = new com.android.server.VibratorService;

        specialinvoke $r192.<com.android.server.VibratorService: void <init>(android.content.Context)>(r17);

        r174 = $r192;

     label028:
        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("vibrator", r174);

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Consumer IR Service");

        $r213 = new com.android.server.ConsumerIrService;

        specialinvoke $r213.<com.android.server.ConsumerIrService: void <init>(android.content.Context)>(r17);

        r173 = $r213;

     label029:
        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("consumer_ir", r173);

        $r214 = staticinvoke <com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService self()>();

        $r215 = staticinvoke <com.android.server.am.BatteryStatsService: com.android.internal.app.IBatteryStats getService()>();

        $r210 = staticinvoke <com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService self()>();

        $r211 = virtualinvoke $r210.<com.android.server.am.ActivityManagerService: com.android.internal.app.IAppOpsService getAppOpsService()>();

        virtualinvoke r6.<com.android.server.power.PowerManagerService: void init(android.content.Context,com.android.server.LightsService,com.android.server.am.ActivityManagerService,com.android.server.BatteryService,com.android.internal.app.IBatteryStats,com.android.internal.app.IAppOpsService,com.android.server.display.DisplayManagerService)>(r17, r18, $r214, r19, $r215, $r211, r23);

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Alarm Manager");

        $r212 = new com.android.server.AlarmManagerService;

        specialinvoke $r212.<com.android.server.AlarmManagerService: void <init>(android.content.Context)>(r17);

        r24 = $r212;

     label030:
        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("alarm", r24);

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Init Watchdog");

        r176 = staticinvoke <com.android.server.Watchdog: com.android.server.Watchdog getInstance()>();

        r175 = staticinvoke <com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService self()>();

        virtualinvoke r176.<com.android.server.Watchdog: void init(android.content.Context,com.android.server.BatteryService,com.android.server.power.PowerManagerService,com.android.server.AlarmManagerService,com.android.server.am.ActivityManagerService)>(r17, r19, r6, r24, r175);

        $r217 = staticinvoke <com.android.server.Watchdog: com.android.server.Watchdog getInstance()>();

        virtualinvoke $r217.<com.android.server.Watchdog: void addThread(android.os.Handler,java.lang.String)>(r15, "WindowManager thread");

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Input Manager");

        $r216 = new com.android.server.input.InputManagerService;

        specialinvoke $r216.<com.android.server.input.InputManagerService: void <init>(android.content.Context,android.os.Handler)>(r17, r15);

        r21 = $r216;

     label031:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Window Manager");

     label032:
        if i0 == 1 goto label190;

        z20 = 1;

        goto label321;

     label033:
        r14 = staticinvoke <com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerService main(android.content.Context,com.android.server.power.PowerManagerService,com.android.server.display.DisplayManagerService,com.android.server.input.InputManagerService,android.os.Handler,boolean,boolean,boolean)>(r17, r6, r23, r21, r15, z20, z19, z1);

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("window", r14);

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("input", r21);

        $r202 = staticinvoke <com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService self()>();

        virtualinvoke $r202.<com.android.server.am.ActivityManagerService: void setWindowManager(com.android.server.wm.WindowManagerService)>(r14);

        r177 = virtualinvoke r14.<com.android.server.wm.WindowManagerService: com.android.server.wm.InputMonitor getInputMonitor()>();

        virtualinvoke r21.<com.android.server.input.InputManagerService: void setWindowManagerCallbacks(com.android.server.input.InputManagerService$WindowManagerCallbacks)>(r177);

        virtualinvoke r21.<com.android.server.input.InputManagerService: void start()>();

        virtualinvoke r23.<com.android.server.display.DisplayManagerService: void setWindowManager(com.android.server.display.DisplayManagerService$WindowManagerFuncs)>(r14);

        virtualinvoke r23.<com.android.server.display.DisplayManagerService: void setInputManager(com.android.server.display.DisplayManagerService$InputManagerFuncs)>(r21);

        $r203 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("ro.kernel.qemu");

        $z28 = virtualinvoke $r203.<java.lang.String: boolean equals(java.lang.Object)>("1");

        if $z28 == 0 goto label192;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "No Bluetooh Service (emulator)");

     label034:
        r22 = r158;

        r7 = r174;

     label035:
        r25 = null;

        r26 = null;

        i1 = i0;

        r29 = null;

        if i1 == 1 goto label040;

     label036:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Input Method Service");

        $r265 = new com.android.server.InputMethodManagerService;

        specialinvoke $r265.<com.android.server.InputMethodManagerService: void <init>(android.content.Context,com.android.server.wm.WindowManagerService)>(r17, r14);

        r159 = $r265;

     label037:
        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("input_method", r159);

     label038:
        r29 = r159;

     label039:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Accessibility Manager");

        $r266 = new com.android.server.accessibility.AccessibilityManagerService;

        specialinvoke $r266.<com.android.server.accessibility.AccessibilityManagerService: void <init>(android.content.Context)>(r17);

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("accessibility", $r266);

     label040:
        virtualinvoke r14.<com.android.server.wm.WindowManagerService: void displayReady()>();

     label041:
        interfaceinvoke r12.<android.content.pm.IPackageManager: void performBootDexOpt()>();

     label042:
        $r208 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r207 = virtualinvoke r17.<android.content.Context: android.content.res.Resources getResources()>();

        $r209 = virtualinvoke $r207.<android.content.res.Resources: java.lang.CharSequence getText(int)>(17040403);

        interfaceinvoke $r208.<android.app.IActivityManager: void showBootMessage(java.lang.CharSequence,boolean)>($r209, 0);

     label043:
        if i0 == 1 goto label319;

        r32 = null;

        if z2 != 0 goto label047;

        $r270 = "0";

        $r269 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("system_init.startmountservice");

        z12 = virtualinvoke $r270.<java.lang.String: boolean equals(java.lang.Object)>($r269);

        r32 = null;

        if z12 != 0 goto label047;

     label044:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Mount Service");

        $r267 = new com.android.server.MountService;

        specialinvoke $r267.<com.android.server.MountService: void <init>(android.content.Context)>(r17);

        r162 = $r267;

     label045:
        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("mount", r162);

     label046:
        r32 = r162;

     label047:
        r31 = null;

        r30 = null;

        if z6 != 0 goto label054;

     label048:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "LockSettingsService");

        $r272 = new com.android.server.LockSettingsService;

        specialinvoke $r272.<com.android.server.LockSettingsService: void <init>(android.content.Context)>(r17);

        r164 = $r272;

     label049:
        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("lock_settings", r164);

     label050:
        r30 = r164;

     label051:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Device Policy");

        $r268 = new com.android.server.DevicePolicyManagerService;

        specialinvoke $r268.<com.android.server.DevicePolicyManagerService: void <init>(android.content.Context)>(r17);

        r148 = $r268;

     label052:
        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("device_policy", r148);

     label053:
        r31 = r148;

     label054:
        r37 = null;

        if z7 != 0 goto label058;

     label055:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Status Bar");

        $r271 = new com.android.server.StatusBarManagerService;

        specialinvoke $r271.<com.android.server.StatusBarManagerService: void <init>(android.content.Context,com.android.server.wm.WindowManagerService)>(r17, r14);

        r150 = $r271;

     label056:
        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("statusbar", r150);

     label057:
        r37 = r150;

     label058:
        if z6 != 0 goto label060;

     label059:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Clipboard Service");

        $r273 = new com.android.server.ClipboardService;

        specialinvoke $r273.<com.android.server.ClipboardService: void <init>(android.content.Context)>(r17);

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("clipboard", $r273);

     label060:
        r36 = null;

        if z8 != 0 goto label062;

     label061:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "NetworkManagement Service");

        r36 = staticinvoke <com.android.server.NetworkManagementService: com.android.server.NetworkManagementService create(android.content.Context)>(r17);

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("network_management", r36);

     label062:
        r35 = null;

        if z6 != 0 goto label066;

     label063:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Text Service Manager Service");

        $r275 = new com.android.server.TextServicesManagerService;

        specialinvoke $r275.<com.android.server.TextServicesManagerService: void <init>(android.content.Context)>(r17);

        r156 = $r275;

     label064:
        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("textservices", r156);

     label065:
        r35 = r156;

     label066:
        if z8 != 0 goto label318;

     label067:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "NetworkStats Service");

        $r255 = new com.android.server.net.NetworkStatsService;

        specialinvoke $r255.<com.android.server.net.NetworkStatsService: void <init>(android.content.Context,android.os.INetworkManagementService,android.app.IAlarmManager)>(r17, r36, r24);

        r154 = $r255;

     label068:
        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("netstats", r154);

     label069:
        r8 = r154;

     label070:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "NetworkPolicy Service");

        r138 = staticinvoke <com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService self()>();

        $r254 = new com.android.server.net.NetworkPolicyManagerService;

        specialinvoke $r254.<com.android.server.net.NetworkPolicyManagerService: void <init>(android.content.Context,android.app.IActivityManager,android.os.IPowerManager,android.net.INetworkStatsService,android.os.INetworkManagementService)>(r17, r138, r6, r8, r36);

        r34 = $r254;

     label071:
        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("netpolicy", r34);

     label072:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Wi-Fi P2pService");

        $r253 = new android.net.wifi.p2p.WifiP2pService;

        specialinvoke $r253.<android.net.wifi.p2p.WifiP2pService: void <init>(android.content.Context)>(r17);

        r137 = $r253;

     label073:
        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("wifip2p", r137);

     label074:
        r10 = r137;

     label075:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Wi-Fi Service");

        $r252 = new com.android.server.wifi.WifiService;

        specialinvoke $r252.<com.android.server.wifi.WifiService: void <init>(android.content.Context)>(r17);

        r140 = $r252;

     label076:
        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("wifi", r140);

     label077:
        r11 = r140;

     label078:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Connectivity Service");

        $r251 = new com.android.server.ConnectivityService;

        specialinvoke $r251.<com.android.server.ConnectivityService: void <init>(android.content.Context,android.os.INetworkManagementService,android.net.INetworkStatsService,android.net.INetworkPolicyManager)>(r17, r36, r8, r34);

        r139 = $r251;

     label079:
        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("connectivity", r139);

        virtualinvoke r8.<com.android.server.net.NetworkStatsService: void bindConnectivityManager(android.net.IConnectivityManager)>(r139);

        virtualinvoke r34.<com.android.server.net.NetworkPolicyManagerService: void bindConnectivityManager(android.net.IConnectivityManager)>(r139);

        virtualinvoke r10.<android.net.wifi.p2p.WifiP2pService: void connectivityServiceReady()>();

        virtualinvoke r11.<com.android.server.wifi.WifiService: void checkAndStartWifi()>();

     label080:
        r9 = r139;

     label081:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Network Service Discovery Service");

        $r274 = staticinvoke <com.android.server.NsdService: com.android.server.NsdService create(android.content.Context)>(r17);

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("servicediscovery", $r274);

     label082:
        if z6 != 0 goto label084;

     label083:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "UpdateLock Service");

        $r256 = new com.android.server.UpdateLockService;

        specialinvoke $r256.<com.android.server.UpdateLockService: void <init>(android.content.Context)>(r17);

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("updatelock", $r256);

     label084:
        if r32 == null goto label085;

        if z1 != 0 goto label085;

        virtualinvoke r32.<com.android.server.MountService: void waitForAsecScan()>();

     label085:
        if r4 == null goto label087;

     label086:
        virtualinvoke r4.<com.android.server.accounts.AccountManagerService: void systemReady()>();

     label087:
        if r5 == null goto label089;

     label088:
        virtualinvoke r5.<com.android.server.content.ContentService: void systemReady()>();

     label089:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Notification Manager");

        $r229 = new com.android.server.NotificationManagerService;

        specialinvoke $r229.<com.android.server.NotificationManagerService: void <init>(android.content.Context,com.android.server.StatusBarManagerService,com.android.server.LightsService)>(r17, r37, r18);

        r128 = $r229;

     label090:
        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("notification", r128);

        virtualinvoke r34.<com.android.server.net.NetworkPolicyManagerService: void bindNotificationManager(android.app.INotificationManager)>(r128);

     label091:
        r25 = r128;

     label092:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Device Storage Monitor");

        $r228 = new com.android.server.DeviceStorageMonitorService;

        specialinvoke $r228.<com.android.server.DeviceStorageMonitorService: void <init>(android.content.Context)>(r17);

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("devicestoragemonitor", $r228);

     label093:
        r39 = null;

        r38 = null;

        if z5 != 0 goto label100;

     label094:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Location Manager");

        $r258 = new com.android.server.LocationManagerService;

        specialinvoke $r258.<com.android.server.LocationManagerService: void <init>(android.content.Context)>(r17);

        r129 = $r258;

     label095:
        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("location", r129);

     label096:
        r38 = r129;

     label097:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Country Detector");

        $r257 = new com.android.server.CountryDetectorService;

        specialinvoke $r257.<com.android.server.CountryDetectorService: void <init>(android.content.Context)>(r17);

        r135 = $r257;

     label098:
        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("country_detector", r135);

     label099:
        r39 = r135;

     label100:
        if z6 != 0 goto label102;

     label101:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Search Service");

        $r259 = new com.android.server.search.SearchManagerService;

        specialinvoke $r259.<com.android.server.search.SearchManagerService: void <init>(android.content.Context)>(r17);

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("search", $r259);

     label102:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "DropBox Service");

        $r222 = new com.android.server.DropBoxManagerService;

        $r221 = new java.io.File;

        specialinvoke $r221.<java.io.File: void <init>(java.lang.String)>("/data/system/dropbox");

        specialinvoke $r222.<com.android.server.DropBoxManagerService: void <init>(android.content.Context,java.io.File)>(r17, $r221);

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("dropbox", $r222);

     label103:
        r44 = null;

        if z6 != 0 goto label109;

        $r261 = virtualinvoke r17.<android.content.Context: android.content.res.Resources getResources()>();

        z11 = virtualinvoke $r261.<android.content.res.Resources: boolean getBoolean(int)>(17891375);

        r44 = null;

        if z11 == 0 goto label109;

     label104:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Wallpaper Service");

     label105:
        r44 = null;

        if z0 != 0 goto label109;

     label106:
        $r260 = new com.android.server.WallpaperManagerService;

        specialinvoke $r260.<com.android.server.WallpaperManagerService: void <init>(android.content.Context)>(r17);

        r121 = $r260;

     label107:
        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("wallpaper", r121);

     label108:
        r44 = r121;

     label109:
        if z4 != 0 goto label111;

        $r239 = "0";

        $r263 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("system_init.startaudioservice");

        $z30 = virtualinvoke $r239.<java.lang.String: boolean equals(java.lang.Object)>($r263);

        if $z30 != 0 goto label111;

     label110:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Audio Service");

        $r262 = new android.media.AudioService;

        specialinvoke $r262.<android.media.AudioService: void <init>(android.content.Context)>(r17);

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("audio", $r262);

     label111:
        r43 = null;

        if z6 != 0 goto label114;

     label112:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Dock Observer");

        $r238 = new com.android.server.DockObserver;

        specialinvoke $r238.<com.android.server.DockObserver: void <init>(android.content.Context)>(r17);

        r120 = $r238;

     label113:
        r43 = r120;

     label114:
        if z4 != 0 goto label116;

     label115:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Wired Accessory Manager");

        $r237 = new com.android.server.WiredAccessoryManager;

        specialinvoke $r237.<com.android.server.WiredAccessoryManager: void <init>(android.content.Context,com.android.server.input.InputManagerService)>(r17, r21);

        r126 = $r237;

        virtualinvoke r21.<com.android.server.input.InputManagerService: void setWiredAccessoryCallbacks(com.android.server.input.InputManagerService$WiredAccessoryCallbacks)>(r126);

     label116:
        r42 = null;

        if z6 != 0 goto label122;

     label117:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "USB Service");

        $r235 = new com.android.server.usb.UsbService;

        specialinvoke $r235.<com.android.server.usb.UsbService: void <init>(android.content.Context)>(r17);

        r123 = $r235;

     label118:
        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("usb", r123);

     label119:
        r42 = r123;

     label120:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Serial Service");

        $r236 = new com.android.server.SerialService;

        specialinvoke $r236.<com.android.server.SerialService: void <init>(android.content.Context)>(r17);

        r124 = $r236;

     label121:
        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("serial", r124);

     label122:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Twilight Service");

        $r224 = new com.android.server.TwilightService;

        specialinvoke $r224.<com.android.server.TwilightService: void <init>(android.content.Context)>(r17);

        r111 = $r224;

     label123:
        r51 = r111;

     label124:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "UI Mode Manager Service");

        $r223 = new com.android.server.UiModeManagerService;

        specialinvoke $r223.<com.android.server.UiModeManagerService: void <init>(android.content.Context,com.android.server.TwilightService)>(r17, r51);

        r110 = $r223;

     label125:
        r53 = r110;

     label126:
        r46 = null;

        r47 = null;

        if z6 != 0 goto label133;

     label127:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Backup Service");

        $r240 = new com.android.server.BackupManagerService;

        specialinvoke $r240.<com.android.server.BackupManagerService: void <init>(android.content.Context)>(r17);

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("backup", $r240);

     label128:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "AppWidget Service");

        $r241 = new com.android.server.AppWidgetService;

        specialinvoke $r241.<com.android.server.AppWidgetService: void <init>(android.content.Context)>(r17);

        r118 = $r241;

     label129:
        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("appwidget", r118);

     label130:
        r46 = r118;

     label131:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Recognition Service");

        $r242 = new com.android.server.RecognitionManagerService;

        specialinvoke $r242.<com.android.server.RecognitionManagerService: void <init>(android.content.Context)>(r17);

        r117 = $r242;

     label132:
        r47 = r117;

     label133:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "DiskStats Service");

        $r218 = new com.android.server.DiskStatsService;

        specialinvoke $r218.<com.android.server.DiskStatsService: void <init>(android.content.Context)>(r17);

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("diskstats", $r218);

     label134:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "SamplingProfiler Service");

        $r220 = new com.android.server.SamplingProfilerService;

        specialinvoke $r220.<com.android.server.SamplingProfilerService: void <init>(android.content.Context)>(r17);

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("samplingprofiler", $r220);

     label135:
        r57 = null;

        if z8 != 0 goto label138;

     label136:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "NetworkTimeUpdateService");

        $r246 = new com.android.server.NetworkTimeUpdateService;

        specialinvoke $r246.<com.android.server.NetworkTimeUpdateService: void <init>(android.content.Context)>(r17);

        r105 = $r246;

     label137:
        r57 = r105;

     label138:
        r58 = null;

        if z4 != 0 goto label142;

     label139:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "CommonTimeManagementService");

        $r245 = new com.android.server.CommonTimeManagementService;

        specialinvoke $r245.<com.android.server.CommonTimeManagementService: void <init>(android.content.Context)>(r17);

        r104 = $r245;

     label140:
        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("commontime_management", r104);

     label141:
        r58 = r104;

     label142:
        if z8 != 0 goto label144;

     label143:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "CertBlacklister");

        $r244 = new com.android.server.CertBlacklister;

        specialinvoke $r244.<com.android.server.CertBlacklister: void <init>(android.content.Context)>(r17);

     label144:
        r59 = null;

        if z6 != 0 goto label148;

        $r250 = virtualinvoke r17.<android.content.Context: android.content.res.Resources getResources()>();

        z10 = virtualinvoke $r250.<android.content.res.Resources: boolean getBoolean(int)>(17891400);

        r59 = null;

        if z10 == 0 goto label148;

     label145:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Dreams Service");

        $r243 = new com.android.server.dreams.DreamManagerService;

        specialinvoke $r243.<com.android.server.dreams.DreamManagerService: void <init>(android.content.Context,android.os.Handler)>(r17, r15);

        r109 = $r243;

     label146:
        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("dreams", r109);

     label147:
        r59 = r109;

     label148:
        r60 = null;

        if z6 != 0 goto label152;

     label149:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Assets Atlas Service");

        $r249 = new com.android.server.AssetAtlasService;

        specialinvoke $r249.<com.android.server.AssetAtlasService: void <init>(android.content.Context)>(r17);

        r106 = $r249;

     label150:
        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("assetatlas", r106);

     label151:
        r60 = r106;

     label152:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "IdleMaintenanceService");

        $r219 = new com.android.server.IdleMaintenanceService;

        specialinvoke $r219.<com.android.server.IdleMaintenanceService: void <init>(android.content.Context,com.android.server.BatteryService)>(r17, r19);

     label153:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Print Service");

        $r247 = new com.android.server.print.PrintManagerService;

        specialinvoke $r247.<com.android.server.print.PrintManagerService: void <init>(android.content.Context)>(r17);

        r100 = $r247;

     label154:
        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("print", r100);

     label155:
        r26 = r100;

     label156:
        r56 = null;

        if z6 != 0 goto label160;

     label157:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Media Router Service");

        $r248 = new com.android.server.media.MediaRouterService;

        specialinvoke $r248.<com.android.server.media.MediaRouterService: void <init>(android.content.Context)>(r17);

        r101 = $r248;

     label158:
        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("media_router", r101);

     label159:
        r56 = r101;

     label160:
        z9 = virtualinvoke r14.<com.android.server.wm.WindowManagerService: boolean detectSafeMode()>();

        if z9 == 0 goto label273;

        $r226 = staticinvoke <com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService self()>();

        virtualinvoke $r226.<com.android.server.am.ActivityManagerService: void enterSafeMode()>();

        <dalvik.system.Zygote: boolean systemInSafeMode> = 1;

        $r225 = staticinvoke <dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>();

        virtualinvoke $r225.<dalvik.system.VMRuntime: void disableJitCompilation()>();

     label161:
        virtualinvoke r7.<com.android.server.VibratorService: void systemReady()>();

     label162:
        if r30 == null goto label164;

     label163:
        virtualinvoke r30.<com.android.server.LockSettingsService: void systemReady()>();

     label164:
        if r31 == null goto label166;

     label165:
        virtualinvoke r31.<com.android.server.DevicePolicyManagerService: void systemReady()>();

     label166:
        if r25 == null goto label168;

     label167:
        virtualinvoke r25.<com.android.server.NotificationManagerService: void systemReady()>();

     label168:
        virtualinvoke r14.<com.android.server.wm.WindowManagerService: void systemReady()>();

     label169:
        if z9 == 0 goto label170;

        $r227 = staticinvoke <com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService self()>();

        virtualinvoke $r227.<com.android.server.am.ActivityManagerService: void showSafeModeOverlay()>();

     label170:
        r68 = virtualinvoke r14.<com.android.server.wm.WindowManagerService: android.content.res.Configuration computeNewConfiguration()>();

        $r206 = new android.util.DisplayMetrics;

        specialinvoke $r206.<android.util.DisplayMetrics: void <init>()>();

        r67 = $r206;

        $r205 = virtualinvoke r17.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r233 = (android.view.WindowManager) $r205;

        $r232 = interfaceinvoke $r233.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        virtualinvoke $r232.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>(r67);

        $r231 = virtualinvoke r17.<android.content.Context: android.content.res.Resources getResources()>();

        virtualinvoke $r231.<android.content.res.Resources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)>(r68, r67);

     label171:
        virtualinvoke r6.<com.android.server.power.PowerManagerService: void systemReady(com.android.server.TwilightService,com.android.server.dreams.DreamManagerService)>(r51, r59);

     label172:
        interfaceinvoke r12.<android.content.pm.IPackageManager: void systemReady()>();

     label173:
        virtualinvoke r23.<com.android.server.display.DisplayManagerService: void systemReady(boolean,boolean)>(z9, z1);

     label174:
        r63 = r17;

        r74 = r32;

        r73 = r19;

        r76 = r36;

        r75 = r8;

        r70 = r34;

        r69 = r9;

        r72 = r43;

        r71 = r42;

        r83 = r51;

        r84 = r53;

        r81 = r46;

        r82 = r44;

        r79 = r29;

        r80 = r47;

        r77 = r38;

        r78 = r39;

        r91 = r57;

        r92 = r58;

        r89 = r35;

        r90 = r37;

        r87 = r59;

        r88 = r60;

        r85 = r21;

        r86 = r22;

        r98 = r26;

        r97 = r56;

        $r230 = staticinvoke <com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService self()>();

        $r234 = new com.android.server.ServerThread$2;

        specialinvoke $r234.<com.android.server.ServerThread$2: void <init>(com.android.server.ServerThread,boolean,android.content.Context,com.android.server.MountService,com.android.server.BatteryService,com.android.server.NetworkManagementService,com.android.server.net.NetworkStatsService,com.android.server.net.NetworkPolicyManagerService,com.android.server.ConnectivityService,com.android.server.DockObserver,com.android.server.usb.UsbService,com.android.server.TwilightService,com.android.server.UiModeManagerService,com.android.server.RecognitionManagerService,com.android.server.AppWidgetService,boolean,com.android.server.WallpaperManagerService,com.android.server.InputMethodManagerService,com.android.server.StatusBarManagerService,com.android.server.LocationManagerService,com.android.server.CountryDetectorService,com.android.server.NetworkTimeUpdateService,com.android.server.CommonTimeManagementService,com.android.server.TextServicesManagerService,com.android.server.dreams.DreamManagerService,com.android.server.AssetAtlasService,com.android.server.input.InputManagerService,com.android.server.TelephonyRegistry,com.android.server.print.PrintManagerService,com.android.server.media.MediaRouterService)>(r0, z0, r63, r74, r73, r76, r75, r70, r69, r72, r71, r83, r84, r80, r81, z9, r82, r79, r90, r77, r78, r91, r92, r89, r87, r88, r85, r86, r98, r97);

        virtualinvoke $r230.<com.android.server.am.ActivityManagerService: void systemReady(java.lang.Runnable)>($r234);

        $z29 = staticinvoke <android.os.StrictMode: boolean conditionallyEnableDebugLogging()>();

        if $z29 == 0 goto label175;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Enabled StrictMode for system server main thread.");

     label175:
        staticinvoke <android.os.Looper: void loop()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("SystemServer", "System ServerThread is exiting!");

        return;

     label176:
        z18 = 0;

        goto label001;

     label177:
        r171 = null;

        goto label002;

     label178:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

        goto label004;

     label179:
        $r347 := @caughtexception;

        r16 = $r347;

     label180:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("System", "******************************************");

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("System", "************ Failure starting bootstrap service", r16);

        r17 = null;

        goto label009;

     label181:
        $r198 = "1";

        z16 = virtualinvoke $r198.<java.lang.String: boolean equals(java.lang.Object)>(r157);

     label182:
        z1 = 0;

        if z16 == 0 goto label320;

     label183:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SystemServer", "Device encrypted - only parsing core apps");

     label184:
        z1 = 1;

        goto label320;

     label185:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SystemServer", "Failure starting Account Manager", r165);

     label186:
        goto label023;

     label187:
        $r287 := @caughtexception;

        r20 = $r287;

        r22 = r158;

        r21 = null;

        r24 = null;

        r19 = null;

        r18 = null;

     label188:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("System", "******************************************");

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("System", "************ Failure starting core service", r20);

        goto label035;

     label189:
        z13 = 0;

        goto label025;

     label190:
        z20 = 0;

        goto label321;

     label191:
        z19 = 0;

        goto label033;

     label192:
        if i0 != 1 goto label195;

     label193:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "No Bluetooth Service (factory test)");

     label194:
        goto label034;

     label195:
        $r200 = virtualinvoke r17.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $z27 = virtualinvoke $r200.<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>("android.hardware.bluetooth");

        if $z27 != 0 goto label197;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "No Bluetooth Service (Bluetooth Hardware Not Present)");

     label196:
        goto label034;

     label197:
        if z3 == 0 goto label200;

     label198:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Bluetooth Service disabled by config");

     label199:
        goto label034;

     label200:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Bluetooth Manager Service");

        $r201 = new com.android.server.BluetoothManagerService;

        specialinvoke $r201.<com.android.server.BluetoothManagerService: void <init>(android.content.Context)>(r17);

        r178 = $r201;

     label201:
        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("bluetooth_manager", r178);

     label202:
        goto label034;

     label203:
        $r310 := @caughtexception;

        r161 = $r310;

     label204:
        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("starting Input Manager Service", r161);

        goto label039;

     label205:
        $r288 := @caughtexception;

        r160 = $r288;

        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("starting Accessibility Manager", r160);

        goto label040;

     label206:
        $r281 := @caughtexception;

        r27 = $r281;

        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("making display ready", r27);

        goto label041;

     label207:
        $r322 := @caughtexception;

        r28 = $r322;

        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("performing boot dexopt", r28);

        goto label042;

     label208:
        $r341 := @caughtexception;

        r163 = $r341;

     label209:
        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("starting Mount Service", r163);

        goto label047;

     label210:
        $r336 := @caughtexception;

        r151 = $r336;

     label211:
        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("starting LockSettingsService service", r151);

        goto label051;

     label212:
        $r318 := @caughtexception;

        r147 = $r318;

     label213:
        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("starting DevicePolicyService", r147);

        goto label054;

     label214:
        $r333 := @caughtexception;

        r149 = $r333;

     label215:
        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("starting StatusBarManagerService", r149);

        goto label058;

     label216:
        $r298 := @caughtexception;

        r153 = $r298;

        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("starting Clipboard Service", r153);

        goto label060;

     label217:
        $r302 := @caughtexception;

        r152 = $r302;

        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("starting NetworkManagement Service", r152);

        goto label062;

     label218:
        $r352 := @caughtexception;

        r155 = $r352;

     label219:
        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("starting Text Service Manager Service", r155);

        goto label066;

     label220:
        $r367 := @caughtexception;

        r144 = $r367;

     label221:
        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("starting NetworkStats Service", r144);

        goto label070;

     label222:
        $r348 := @caughtexception;

        r143 = $r348;

        r34 = null;

     label223:
        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("starting NetworkPolicy Service", r143);

        goto label072;

     label224:
        $r321 := @caughtexception;

        r146 = $r321;

     label225:
        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("starting Wi-Fi P2pService", r146);

        goto label075;

     label226:
        $r300 := @caughtexception;

        r145 = $r300;

     label227:
        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("starting Wi-Fi Service", r145);

        goto label078;

     label228:
        $r366 := @caughtexception;

        r142 = $r366;

     label229:
        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("starting Connectivity Service", r142);

        goto label081;

     label230:
        $r363 := @caughtexception;

        r141 = $r363;

        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("starting Service Discovery Service", r141);

        goto label082;

     label231:
        $r291 := @caughtexception;

        r130 = $r291;

        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("starting UpdateLockService", r130);

        goto label084;

     label232:
        $r307 := @caughtexception;

        r132 = $r307;

        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("making Account Manager Service ready", r132);

        goto label087;

     label233:
        $r317 := @caughtexception;

        r131 = $r317;

        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("making Content Service ready", r131);

        goto label089;

     label234:
        $r338 := @caughtexception;

        r41 = $r338;

     label235:
        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("starting Notification Manager", r41);

        goto label092;

     label236:
        $r282 := @caughtexception;

        r40 = $r282;

        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("starting DeviceStorageMonitor service", r40);

        goto label093;

     label237:
        $r311 := @caughtexception;

        r133 = $r311;

     label238:
        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("starting Location Manager", r133);

        goto label097;

     label239:
        $r355 := @caughtexception;

        r136 = $r355;

     label240:
        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("starting Country Detector", r136);

        goto label100;

     label241:
        $r358 := @caughtexception;

        r134 = $r358;

        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("starting Search Service", r134);

        goto label102;

     label242:
        $r309 := @caughtexception;

        r45 = $r309;

        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("starting DropBoxManagerService", r45);

        goto label103;

     label243:
        $r340 := @caughtexception;

        r122 = $r340;

     label244:
        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("starting Wallpaper Service", r122);

        goto label109;

     label245:
        $r369 := @caughtexception;

        r119 = $r369;

        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("starting Audio Service", r119);

        goto label111;

     label246:
        $r343 := @caughtexception;

        r125 = $r343;

        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("starting DockObserver", r125);

        r43 = null;

        goto label114;

     label247:
        $r339 := @caughtexception;

        r127 = $r339;

        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("starting WiredAccessoryManager", r127);

        goto label116;

     label248:
        $r361 := @caughtexception;

        r112 = $r361;

     label249:
        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("starting UsbService", r112);

        goto label120;

     label250:
        $r314 := @caughtexception;

        r113 = $r314;

     label251:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SystemServer", "Failure starting SerialService", r113);

        goto label122;

     label252:
        $r297 := @caughtexception;

        r50 = $r297;

        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("starting TwilightService", r50);

        r51 = null;

        goto label124;

     label253:
        $r323 := @caughtexception;

        r52 = $r323;

        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("starting UiModeManagerService", r52);

        r53 = null;

        goto label126;

     label254:
        $r327 := @caughtexception;

        r114 = $r327;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SystemServer", "Failure starting Backup Service", r114);

        goto label128;

     label255:
        $r324 := @caughtexception;

        r115 = $r324;

     label256:
        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("starting AppWidget Service", r115);

        goto label131;

     label257:
        $r305 := @caughtexception;

        r116 = $r305;

        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("starting Recognition Service", r116);

        r47 = null;

        goto label133;

     label258:
        $r354 := @caughtexception;

        r48 = $r354;

        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("starting DiskStats Service", r48);

        goto label134;

     label259:
        $r331 := @caughtexception;

        r49 = $r331;

        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("starting SamplingProfiler Service", r49);

        goto label135;

     label260:
        $r368 := @caughtexception;

        r103 = $r368;

        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("starting NetworkTimeUpdate service", r103);

        r57 = null;

        goto label138;

     label261:
        $r325 := @caughtexception;

        r102 = $r325;

     label262:
        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("starting CommonTimeManagementService service", r102);

        goto label142;

     label263:
        $r316 := @caughtexception;

        r108 = $r316;

        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("starting CertBlacklister", r108);

        goto label144;

     label264:
        $r350 := @caughtexception;

        r107 = $r350;

     label265:
        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("starting DreamManagerService", r107);

        goto label148;

     label266:
        $r342 := @caughtexception;

        r99 = $r342;

     label267:
        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("starting AssetAtlasService", r99);

        goto label152;

     label268:
        $r360 := @caughtexception;

        r54 = $r360;

        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("starting IdleMaintenanceService", r54);

        goto label153;

     label269:
        $r293 := @caughtexception;

        r55 = $r293;

     label270:
        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("starting Print Service", r55);

        goto label156;

     label271:
        $r326 := @caughtexception;

        r93 = $r326;

     label272:
        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("starting MediaRouterService", r93);

        goto label160;

     label273:
        $r204 = staticinvoke <dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>();

        virtualinvoke $r204.<dalvik.system.VMRuntime: void startJitCompilation()>();

        goto label161;

     label274:
        $r280 := @caughtexception;

        r66 = $r280;

        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("making Vibrator Service ready", r66);

        goto label162;

     label275:
        $r278 := @caughtexception;

        r94 = $r278;

        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("making Lock Settings Service ready", r94);

        goto label164;

     label276:
        $r320 := @caughtexception;

        r95 = $r320;

        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("making Device Policy Service ready", r95);

        goto label166;

     label277:
        $r328 := @caughtexception;

        r96 = $r328;

        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("making Notification Service ready", r96);

        goto label168;

     label278:
        $r286 := @caughtexception;

        r65 = $r286;

        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("making Window Manager Service ready", r65);

        goto label169;

     label279:
        $r284 := @caughtexception;

        r62 = $r284;

        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("making Power Manager Service ready", r62);

        goto label172;

     label280:
        $r304 := @caughtexception;

        r61 = $r304;

        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("making Package Manager Service ready", r61);

        goto label173;

     label281:
        $r335 := @caughtexception;

        r64 = $r335;

        virtualinvoke r0.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("making Display Manager Service ready", r64);

        goto label174;

     label282:
        $r329 := @caughtexception;

        z14 = 0;

        goto label019;

     label283:
        $r299 := @caughtexception;

        r93 = $r299;

        r56 = r101;

        goto label272;

     label284:
        $r290 := @caughtexception;

        r55 = $r290;

        r26 = r100;

        goto label270;

     label285:
        $r346 := @caughtexception;

        r99 = $r346;

        r60 = r106;

        goto label267;

     label286:
        $r356 := @caughtexception;

        r107 = $r356;

        r59 = r109;

        goto label265;

     label287:
        $r353 := @caughtexception;

        r102 = $r353;

        r58 = r104;

        goto label262;

     label288:
        $r283 := @caughtexception;

        r115 = $r283;

        r46 = r118;

        goto label256;

     label289:
        $r313 := @caughtexception;

        r113 = $r313;

        goto label251;

     label290:
        $r306 := @caughtexception;

        r112 = $r306;

        r42 = r123;

        goto label249;

     label291:
        $r294 := @caughtexception;

        r122 = $r294;

        r44 = r121;

        goto label244;

     label292:
        $r285 := @caughtexception;

        r136 = $r285;

        r39 = r135;

        goto label240;

     label293:
        $r359 := @caughtexception;

        r133 = $r359;

        r38 = r129;

        goto label238;

     label294:
        $r362 := @caughtexception;

        r41 = $r362;

        r25 = r128;

        goto label235;

     label295:
        $r330 := @caughtexception;

        r142 = $r330;

        r9 = r139;

        goto label229;

     label296:
        $r292 := @caughtexception;

        r145 = $r292;

        r11 = r140;

        goto label227;

     label297:
        $r357 := @caughtexception;

        r146 = $r357;

        r10 = r137;

        goto label225;

     label298:
        $r277 := @caughtexception;

        r143 = $r277;

        goto label223;

     label299:
        $r332 := @caughtexception;

        r144 = $r332;

        r8 = r154;

        goto label221;

     label300:
        $r289 := @caughtexception;

        r155 = $r289;

        r35 = r156;

        goto label219;

     label301:
        $r344 := @caughtexception;

        r149 = $r344;

        r37 = r150;

        goto label215;

     label302:
        $r303 := @caughtexception;

        r147 = $r303;

        r31 = r148;

        goto label213;

     label303:
        $r351 := @caughtexception;

        r151 = $r351;

        r30 = r164;

        goto label211;

     label304:
        $r370 := @caughtexception;

        r163 = $r370;

        r32 = r162;

        goto label209;

     label305:
        $r296 := @caughtexception;

        goto label043;

     label306:
        $r301 := @caughtexception;

        r161 = $r301;

        r29 = r159;

        goto label204;

     label307:
        $r315 := @caughtexception;

        r20 = $r315;

        r18 = null;

        r19 = null;

        r23 = null;

        r24 = null;

        r21 = null;

        z1 = 0;

        r4 = null;

        r5 = null;

        r12 = null;

        r22 = null;

        r7 = null;

        r14 = null;

        goto label188;

     label308:
        $r312 := @caughtexception;

        r20 = $r312;

        r18 = null;

        r19 = null;

        r24 = null;

        r21 = null;

        z1 = 0;

        r4 = null;

        r5 = null;

        r12 = null;

        r22 = null;

        r7 = null;

        r14 = null;

        goto label188;

     label309:
        $r345 := @caughtexception;

        r20 = $r345;

        r22 = r158;

        r19 = null;

        r24 = null;

        r21 = null;

        r7 = null;

        r14 = null;

        goto label188;

     label310:
        $r276 := @caughtexception;

        r20 = $r276;

        r22 = r158;

        r24 = null;

        r21 = null;

        r7 = null;

        r14 = null;

        goto label188;

     label311:
        $r319 := @caughtexception;

        r20 = $r319;

        r22 = r158;

        r7 = r174;

        r24 = null;

        r21 = null;

        r14 = null;

        goto label188;

     label312:
        $r295 := @caughtexception;

        r20 = $r295;

        r22 = r158;

        r7 = r174;

        r24 = null;

        r21 = null;

        r14 = null;

        goto label188;

     label313:
        $r365 := @caughtexception;

        r20 = $r365;

        r22 = r158;

        r7 = r174;

        r21 = null;

        r14 = null;

        goto label188;

     label314:
        $r279 := @caughtexception;

        r20 = $r279;

        r22 = r158;

        r7 = r174;

        goto label188;

     label315:
        $r337 := @caughtexception;

        r165 = $r337;

        r4 = r168;

        goto label185;

     label316:
        $r364 := @caughtexception;

        r16 = $r364;

        r3 = r169;

        r6 = null;

        goto label180;

     label317:
        $r371 := @caughtexception;

        r16 = $r371;

        r6 = r170;

        r3 = r169;

        goto label180;

     label318:
        r34 = null;

        r8 = null;

        r9 = null;

        goto label082;

     label319:
        r34 = null;

        r8 = null;

        r36 = null;

        r46 = null;

        r60 = null;

        r58 = null;

        r9 = null;

        r39 = null;

        r31 = null;

        r43 = null;

        r59 = null;

        r38 = null;

        r30 = null;

        r56 = null;

        r32 = null;

        r57 = null;

        r25 = null;

        r26 = null;

        r47 = null;

        r37 = null;

        r35 = null;

        r51 = null;

        r53 = null;

        r42 = null;

        r44 = null;

        goto label160;

     label320:
        if i0 == 0 goto label322;

        z15 = 1;

        goto label015;

     label321:
        if z14 != 0 goto label191;

        z19 = 1;

        goto label033;

     label322:
        z15 = 0;

        goto label015;

     label323:
        $r334 := @caughtexception;

        r165 = $r334;

        r4 = null;

        goto label185;

     label324:
        $r308 := @caughtexception;

        r20 = $r308;

        r22 = r158;

        r7 = r174;

        goto label188;

        catch java.lang.RuntimeException from label005 to label006 with label179;
        catch java.lang.RuntimeException from label006 to label007 with label316;
        catch java.lang.RuntimeException from label007 to label008 with label317;
        catch java.lang.RuntimeException from label010 to label011 with label307;
        catch java.lang.RuntimeException from label011 to label012 with label308;
        catch java.lang.RuntimeException from label012 to label013 with label187;
        catch java.lang.RuntimeException from label013 to label014 with label187;
        catch java.lang.RuntimeException from label015 to label016 with label187;
        catch android.os.RemoteException from label017 to label018 with label282;
        catch java.lang.RuntimeException from label017 to label018 with label187;
        catch java.lang.RuntimeException from label019 to label020 with label187;
        catch java.lang.Throwable from label020 to label021 with label323;
        catch java.lang.RuntimeException from label020 to label021 with label187;
        catch java.lang.Throwable from label021 to label022 with label315;
        catch java.lang.RuntimeException from label023 to label024 with label187;
        catch java.lang.RuntimeException from label025 to label026 with label187;
        catch java.lang.RuntimeException from label026 to label027 with label309;
        catch java.lang.RuntimeException from label027 to label028 with label310;
        catch java.lang.RuntimeException from label028 to label029 with label311;
        catch java.lang.RuntimeException from label029 to label030 with label312;
        catch java.lang.RuntimeException from label030 to label031 with label313;
        catch java.lang.RuntimeException from label031 to label032 with label324;
        catch java.lang.RuntimeException from label033 to label034 with label324;
        catch java.lang.Throwable from label036 to label037 with label203;
        catch java.lang.Throwable from label037 to label038 with label306;
        catch java.lang.Throwable from label039 to label040 with label205;
        catch java.lang.Throwable from label040 to label041 with label206;
        catch java.lang.Throwable from label041 to label042 with label207;
        catch android.os.RemoteException from label042 to label043 with label305;
        catch java.lang.Throwable from label044 to label045 with label208;
        catch java.lang.Throwable from label045 to label046 with label304;
        catch java.lang.Throwable from label048 to label049 with label210;
        catch java.lang.Throwable from label049 to label050 with label303;
        catch java.lang.Throwable from label051 to label052 with label212;
        catch java.lang.Throwable from label052 to label053 with label302;
        catch java.lang.Throwable from label055 to label056 with label214;
        catch java.lang.Throwable from label056 to label057 with label301;
        catch java.lang.Throwable from label059 to label060 with label216;
        catch java.lang.Throwable from label061 to label062 with label217;
        catch java.lang.Throwable from label063 to label064 with label218;
        catch java.lang.Throwable from label064 to label065 with label300;
        catch java.lang.Throwable from label067 to label068 with label220;
        catch java.lang.Throwable from label068 to label069 with label299;
        catch java.lang.Throwable from label070 to label071 with label222;
        catch java.lang.Throwable from label071 to label072 with label298;
        catch java.lang.Throwable from label072 to label073 with label224;
        catch java.lang.Throwable from label073 to label074 with label297;
        catch java.lang.Throwable from label075 to label076 with label226;
        catch java.lang.Throwable from label076 to label077 with label296;
        catch java.lang.Throwable from label078 to label079 with label228;
        catch java.lang.Throwable from label079 to label080 with label295;
        catch java.lang.Throwable from label081 to label082 with label230;
        catch java.lang.Throwable from label083 to label084 with label231;
        catch java.lang.Throwable from label086 to label087 with label232;
        catch java.lang.Throwable from label088 to label089 with label233;
        catch java.lang.Throwable from label089 to label090 with label234;
        catch java.lang.Throwable from label090 to label091 with label294;
        catch java.lang.Throwable from label092 to label093 with label236;
        catch java.lang.Throwable from label094 to label095 with label237;
        catch java.lang.Throwable from label095 to label096 with label293;
        catch java.lang.Throwable from label097 to label098 with label239;
        catch java.lang.Throwable from label098 to label099 with label292;
        catch java.lang.Throwable from label101 to label102 with label241;
        catch java.lang.Throwable from label102 to label103 with label242;
        catch java.lang.Throwable from label104 to label105 with label243;
        catch java.lang.Throwable from label106 to label107 with label243;
        catch java.lang.Throwable from label107 to label108 with label291;
        catch java.lang.Throwable from label110 to label111 with label245;
        catch java.lang.Throwable from label112 to label113 with label246;
        catch java.lang.Throwable from label115 to label116 with label247;
        catch java.lang.Throwable from label117 to label118 with label248;
        catch java.lang.Throwable from label118 to label119 with label290;
        catch java.lang.Throwable from label120 to label121 with label250;
        catch java.lang.Throwable from label121 to label122 with label289;
        catch java.lang.Throwable from label122 to label123 with label252;
        catch java.lang.Throwable from label124 to label125 with label253;
        catch java.lang.Throwable from label127 to label128 with label254;
        catch java.lang.Throwable from label128 to label129 with label255;
        catch java.lang.Throwable from label129 to label130 with label288;
        catch java.lang.Throwable from label131 to label132 with label257;
        catch java.lang.Throwable from label133 to label134 with label258;
        catch java.lang.Throwable from label134 to label135 with label259;
        catch java.lang.Throwable from label136 to label137 with label260;
        catch java.lang.Throwable from label139 to label140 with label261;
        catch java.lang.Throwable from label140 to label141 with label287;
        catch java.lang.Throwable from label143 to label144 with label263;
        catch java.lang.Throwable from label145 to label146 with label264;
        catch java.lang.Throwable from label146 to label147 with label286;
        catch java.lang.Throwable from label149 to label150 with label266;
        catch java.lang.Throwable from label150 to label151 with label285;
        catch java.lang.Throwable from label152 to label153 with label268;
        catch java.lang.Throwable from label153 to label154 with label269;
        catch java.lang.Throwable from label154 to label155 with label284;
        catch java.lang.Throwable from label157 to label158 with label271;
        catch java.lang.Throwable from label158 to label159 with label283;
        catch java.lang.Throwable from label161 to label162 with label274;
        catch java.lang.Throwable from label163 to label164 with label275;
        catch java.lang.Throwable from label165 to label166 with label276;
        catch java.lang.Throwable from label167 to label168 with label277;
        catch java.lang.Throwable from label168 to label169 with label278;
        catch java.lang.Throwable from label171 to label172 with label279;
        catch java.lang.Throwable from label172 to label173 with label280;
        catch java.lang.Throwable from label173 to label174 with label281;
        catch java.lang.RuntimeException from label181 to label182 with label187;
        catch java.lang.RuntimeException from label183 to label184 with label187;
        catch java.lang.RuntimeException from label185 to label186 with label187;
        catch java.lang.RuntimeException from label193 to label194 with label324;
        catch java.lang.RuntimeException from label195 to label196 with label324;
        catch java.lang.RuntimeException from label198 to label199 with label324;
        catch java.lang.RuntimeException from label200 to label201 with label324;
        catch java.lang.RuntimeException from label201 to label202 with label314;
    }

    void reportWtf(java.lang.String, java.lang.Throwable)
    {
        com.android.server.ServerThread r0;
        java.lang.String r1, $r6;
        java.lang.Throwable r2;
        java.lang.StringBuilder $r3, $r4, $r5;

        r0 := @this: com.android.server.ServerThread;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SystemServer", "***********************************************");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BOOT FAILURE ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("SystemServer", $r6, r2);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.ServerThread: java.lang.String TAG> = "SystemServer";

        <com.android.server.ServerThread: java.lang.String ENCRYPTING_STATE> = "trigger_restart_min_framework";

        <com.android.server.ServerThread: java.lang.String ENCRYPTED_STATE> = "1";

        return;
    }
}
