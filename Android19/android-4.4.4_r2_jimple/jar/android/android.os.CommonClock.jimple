public class android.os.CommonClock extends java.lang.Object
{
    public static final int ERROR_ESTIMATE_UNKNOWN;
    public static final long INVALID_TIMELINE_ID;
    private static final int METHOD_CBK_ON_TIMELINE_CHANGED;
    private static final int METHOD_COMMON_TIME_TO_LOCAL_TIME;
    private static final int METHOD_GET_COMMON_FREQ;
    private static final int METHOD_GET_COMMON_TIME;
    private static final int METHOD_GET_ESTIMATED_ERROR;
    private static final int METHOD_GET_LOCAL_FREQ;
    private static final int METHOD_GET_LOCAL_TIME;
    private static final int METHOD_GET_MASTER_ADDRESS;
    private static final int METHOD_GET_STATE;
    private static final int METHOD_GET_TIMELINE_ID;
    private static final int METHOD_IS_COMMON_TIME_VALID;
    private static final int METHOD_LOCAL_TIME_TO_COMMON_TIME;
    private static final int METHOD_REGISTER_LISTENER;
    private static final int METHOD_UNREGISTER_LISTENER;
    public static final java.lang.String SERVICE_NAME;
    public static final int STATE_CLIENT;
    public static final int STATE_INITIAL;
    public static final int STATE_INVALID;
    public static final int STATE_MASTER;
    public static final int STATE_RONIN;
    public static final int STATE_WAIT_FOR_ELECTION;
    public static final long TIME_NOT_SYNCED;
    private android.os.CommonClock$TimelineChangedListener mCallbackTgt;
    private android.os.IBinder$DeathRecipient mDeathHandler;
    private java.lang.String mInterfaceDesc;
    private final java.lang.Object mListenerLock;
    private android.os.IBinder mRemote;
    private android.os.CommonClock$OnServerDiedListener mServerDiedListener;
    private android.os.CommonClock$OnTimelineChangedListener mTimelineChangedListener;
    private android.os.CommonTimeUtils mUtils;

    public void <init>() throws android.os.RemoteException
    {
        android.os.CommonClock r0;
        java.lang.Object $r1;
        android.os.CommonClock$1 $r2;
        android.os.IBinder $r3, $r4, $r5, $r9, $r11;
        java.lang.String $r6, $r8;
        android.os.CommonTimeUtils $r7;
        android.os.IBinder$DeathRecipient $r10;
        android.os.RemoteException $r12;

        r0 := @this: android.os.CommonClock;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<android.os.CommonClock: java.lang.Object mListenerLock> = $r1;

        r0.<android.os.CommonClock: android.os.CommonClock$OnTimelineChangedListener mTimelineChangedListener> = null;

        r0.<android.os.CommonClock: android.os.CommonClock$OnServerDiedListener mServerDiedListener> = null;

        r0.<android.os.CommonClock: android.os.IBinder mRemote> = null;

        r0.<android.os.CommonClock: java.lang.String mInterfaceDesc> = "";

        $r2 = new android.os.CommonClock$1;

        specialinvoke $r2.<android.os.CommonClock$1: void <init>(android.os.CommonClock)>(r0);

        r0.<android.os.CommonClock: android.os.IBinder$DeathRecipient mDeathHandler> = $r2;

        r0.<android.os.CommonClock: android.os.CommonClock$TimelineChangedListener mCallbackTgt> = null;

        $r3 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("common_time.clock");

        r0.<android.os.CommonClock: android.os.IBinder mRemote> = $r3;

        $r4 = r0.<android.os.CommonClock: android.os.IBinder mRemote>;

        if $r4 != null goto label1;

        $r12 = new android.os.RemoteException;

        specialinvoke $r12.<android.os.RemoteException: void <init>()>();

        throw $r12;

     label1:
        $r5 = r0.<android.os.CommonClock: android.os.IBinder mRemote>;

        $r6 = interfaceinvoke $r5.<android.os.IBinder: java.lang.String getInterfaceDescriptor()>();

        r0.<android.os.CommonClock: java.lang.String mInterfaceDesc> = $r6;

        $r7 = new android.os.CommonTimeUtils;

        $r9 = r0.<android.os.CommonClock: android.os.IBinder mRemote>;

        $r8 = r0.<android.os.CommonClock: java.lang.String mInterfaceDesc>;

        specialinvoke $r7.<android.os.CommonTimeUtils: void <init>(android.os.IBinder,java.lang.String)>($r9, $r8);

        r0.<android.os.CommonClock: android.os.CommonTimeUtils mUtils> = $r7;

        $r11 = r0.<android.os.CommonClock: android.os.IBinder mRemote>;

        $r10 = r0.<android.os.CommonClock: android.os.IBinder$DeathRecipient mDeathHandler>;

        interfaceinvoke $r11.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r10, 0);

        specialinvoke r0.<android.os.CommonClock: void registerTimelineChangeListener()>();

        return;
    }

    static java.lang.Object access$000(android.os.CommonClock)
    {
        android.os.CommonClock r0;
        java.lang.Object $r1;

        r0 := @parameter0: android.os.CommonClock;

        $r1 = r0.<android.os.CommonClock: java.lang.Object mListenerLock>;

        return $r1;
    }

    static android.os.CommonClock$OnServerDiedListener access$100(android.os.CommonClock)
    {
        android.os.CommonClock r0;
        android.os.CommonClock$OnServerDiedListener $r1;

        r0 := @parameter0: android.os.CommonClock;

        $r1 = r0.<android.os.CommonClock: android.os.CommonClock$OnServerDiedListener mServerDiedListener>;

        return $r1;
    }

    static android.os.CommonClock$OnTimelineChangedListener access$200(android.os.CommonClock)
    {
        android.os.CommonClock r0;
        android.os.CommonClock$OnTimelineChangedListener $r1;

        r0 := @parameter0: android.os.CommonClock;

        $r1 = r0.<android.os.CommonClock: android.os.CommonClock$OnTimelineChangedListener mTimelineChangedListener>;

        return $r1;
    }

    public static android.os.CommonClock create()
    {
        android.os.CommonClock r0, $r2;
        android.os.RemoteException $r3;

     label1:
        $r2 = new android.os.CommonClock;

        specialinvoke $r2.<android.os.CommonClock: void <init>()>();

        r0 = $r2;

     label2:
        return r0;

     label3:
        $r3 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void registerTimelineChangeListener() throws android.os.RemoteException
    {
        android.os.CommonClock r0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r11;
        boolean z0;
        int i0;
        android.os.CommonClock$TimelineChangedListener $r5, $r6, $r8;
        java.lang.String $r7;
        android.os.IBinder $r9;
        android.os.RemoteException $r10;

        r0 := @this: android.os.CommonClock;

        $r5 = r0.<android.os.CommonClock: android.os.CommonClock$TimelineChangedListener mCallbackTgt>;

        if $r5 == null goto label2;

     label1:
        return;

     label2:
        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r6 = new android.os.CommonClock$TimelineChangedListener;

        specialinvoke $r6.<android.os.CommonClock$TimelineChangedListener: void <init>(android.os.CommonClock,android.os.CommonClock$1)>(r0, null);

        r0.<android.os.CommonClock: android.os.CommonClock$TimelineChangedListener mCallbackTgt> = $r6;

     label3:
        $r7 = r0.<android.os.CommonClock: java.lang.String mInterfaceDesc>;

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r7);

        $r8 = r0.<android.os.CommonClock: android.os.CommonClock$TimelineChangedListener mCallbackTgt>;

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r8);

        $r9 = r0.<android.os.CommonClock: android.os.IBinder mRemote>;

        interfaceinvoke $r9.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r1, r2, 0);

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        if i0 != 0 goto label7;

        z0 = 1;

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

     label6:
        if z0 != 0 goto label1;

        r0.<android.os.CommonClock: android.os.CommonClock$TimelineChangedListener mCallbackTgt> = null;

        r0.<android.os.CommonClock: android.os.IBinder mRemote> = null;

        r0.<android.os.CommonClock: android.os.CommonTimeUtils mUtils> = null;

        return;

     label7:
        z0 = 0;

        goto label5;

     label8:
        $r10 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        z0 = 0;

        goto label6;

     label9:
        $r11 := @caughtexception;

        r3 = $r11;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

        catch android.os.RemoteException from label3 to label4 with label8;
        catch java.lang.Throwable from label3 to label4 with label9;
    }

    private void throwOnDeadServer() throws android.os.RemoteException
    {
        android.os.CommonClock r0;
        android.os.IBinder $r1;
        android.os.RemoteException $r2;
        android.os.CommonTimeUtils $r3;

        r0 := @this: android.os.CommonClock;

        $r1 = r0.<android.os.CommonClock: android.os.IBinder mRemote>;

        if $r1 == null goto label1;

        $r3 = r0.<android.os.CommonClock: android.os.CommonTimeUtils mUtils>;

        if $r3 != null goto label2;

     label1:
        $r2 = new android.os.RemoteException;

        specialinvoke $r2.<android.os.RemoteException: void <init>()>();

        throw $r2;

     label2:
        return;
    }

    private void unregisterTimelineChangeListener()
    {
        android.os.CommonClock r0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r10;
        android.os.CommonClock$TimelineChangedListener $r5, $r7;
        java.lang.String $r6;
        android.os.IBinder $r8;
        android.os.RemoteException $r9;

        r0 := @this: android.os.CommonClock;

        $r5 = r0.<android.os.CommonClock: android.os.CommonClock$TimelineChangedListener mCallbackTgt>;

        if $r5 != null goto label1;

        return;

     label1:
        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label2:
        $r6 = r0.<android.os.CommonClock: java.lang.String mInterfaceDesc>;

        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>($r6);

        $r7 = r0.<android.os.CommonClock: android.os.CommonClock$TimelineChangedListener mCallbackTgt>;

        virtualinvoke r1.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r7);

        $r8 = r0.<android.os.CommonClock: android.os.IBinder mRemote>;

        interfaceinvoke $r8.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r1, r2, 0);

     label3:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        r0.<android.os.CommonClock: android.os.CommonClock$TimelineChangedListener mCallbackTgt> = null;

        return;

     label4:
        $r9 := @caughtexception;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        r0.<android.os.CommonClock: android.os.CommonClock$TimelineChangedListener mCallbackTgt> = null;

        return;

     label5:
        $r10 := @caughtexception;

        r3 = $r10;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        r0.<android.os.CommonClock: android.os.CommonClock$TimelineChangedListener mCallbackTgt> = null;

        throw r3;

        catch android.os.RemoteException from label2 to label3 with label4;
        catch java.lang.Throwable from label2 to label3 with label5;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.os.CommonClock r0;

        r0 := @this: android.os.CommonClock;

        virtualinvoke r0.<android.os.CommonClock: void release()>();

        return;
    }

    public int getEstimatedError() throws android.os.RemoteException
    {
        android.os.CommonClock r0;
        android.os.CommonTimeUtils $r1;
        int $i0;

        r0 := @this: android.os.CommonClock;

        specialinvoke r0.<android.os.CommonClock: void throwOnDeadServer()>();

        $r1 = r0.<android.os.CommonClock: android.os.CommonTimeUtils mUtils>;

        $i0 = virtualinvoke $r1.<android.os.CommonTimeUtils: int transactGetInt(int,int)>(8, 2147483647);

        return $i0;
    }

    public java.net.InetSocketAddress getMasterAddr() throws android.os.RemoteException
    {
        android.os.CommonClock r0;
        android.os.CommonTimeUtils $r1;
        java.net.InetSocketAddress $r2;

        r0 := @this: android.os.CommonClock;

        specialinvoke r0.<android.os.CommonClock: void throwOnDeadServer()>();

        $r1 = r0.<android.os.CommonClock: android.os.CommonTimeUtils mUtils>;

        $r2 = virtualinvoke $r1.<android.os.CommonTimeUtils: java.net.InetSocketAddress transactGetSockaddr(int)>(11);

        return $r2;
    }

    public int getState() throws android.os.RemoteException
    {
        android.os.CommonClock r0;
        android.os.CommonTimeUtils $r1;
        int $i0;

        r0 := @this: android.os.CommonClock;

        specialinvoke r0.<android.os.CommonClock: void throwOnDeadServer()>();

        $r1 = r0.<android.os.CommonClock: android.os.CommonTimeUtils mUtils>;

        $i0 = virtualinvoke $r1.<android.os.CommonTimeUtils: int transactGetInt(int,int)>(10, -1);

        return $i0;
    }

    public long getTime() throws android.os.RemoteException
    {
        android.os.CommonClock r0;
        android.os.CommonTimeUtils $r1;
        long $l0;

        r0 := @this: android.os.CommonClock;

        specialinvoke r0.<android.os.CommonClock: void throwOnDeadServer()>();

        $r1 = r0.<android.os.CommonClock: android.os.CommonTimeUtils mUtils>;

        $l0 = virtualinvoke $r1.<android.os.CommonTimeUtils: long transactGetLong(int,long)>(4, -1L);

        return $l0;
    }

    public long getTimelineId() throws android.os.RemoteException
    {
        android.os.CommonClock r0;
        android.os.CommonTimeUtils $r1;
        long $l0;

        r0 := @this: android.os.CommonClock;

        specialinvoke r0.<android.os.CommonClock: void throwOnDeadServer()>();

        $r1 = r0.<android.os.CommonClock: android.os.CommonTimeUtils mUtils>;

        $l0 = virtualinvoke $r1.<android.os.CommonTimeUtils: long transactGetLong(int,long)>(9, 0L);

        return $l0;
    }

    public void release()
    {
        android.os.CommonClock r0;
        android.os.IBinder $r2, $r4;
        android.os.IBinder$DeathRecipient $r3;
        java.util.NoSuchElementException $r5;

        r0 := @this: android.os.CommonClock;

        specialinvoke r0.<android.os.CommonClock: void unregisterTimelineChangeListener()>();

        $r2 = r0.<android.os.CommonClock: android.os.IBinder mRemote>;

        if $r2 == null goto label3;

     label1:
        $r4 = r0.<android.os.CommonClock: android.os.IBinder mRemote>;

        $r3 = r0.<android.os.CommonClock: android.os.IBinder$DeathRecipient mDeathHandler>;

        interfaceinvoke $r4.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r3, 0);

     label2:
        r0.<android.os.CommonClock: android.os.IBinder mRemote> = null;

     label3:
        r0.<android.os.CommonClock: android.os.CommonTimeUtils mUtils> = null;

        return;

     label4:
        $r5 := @caughtexception;

        goto label2;

        catch java.util.NoSuchElementException from label1 to label2 with label4;
    }

    public void setServerDiedListener(android.os.CommonClock$OnServerDiedListener)
    {
        android.os.CommonClock r0;
        android.os.CommonClock$OnServerDiedListener r1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r4;

        r0 := @this: android.os.CommonClock;

        r1 := @parameter0: android.os.CommonClock$OnServerDiedListener;

        r2 = r0.<android.os.CommonClock: java.lang.Object mListenerLock>;

        entermonitor r2;

     label1:
        r0.<android.os.CommonClock: android.os.CommonClock$OnServerDiedListener mServerDiedListener> = r1;

        exitmonitor r2;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setTimelineChangedListener(android.os.CommonClock$OnTimelineChangedListener)
    {
        android.os.CommonClock r0;
        android.os.CommonClock$OnTimelineChangedListener r1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r4;

        r0 := @this: android.os.CommonClock;

        r1 := @parameter0: android.os.CommonClock$OnTimelineChangedListener;

        r2 = r0.<android.os.CommonClock: java.lang.Object mListenerLock>;

        entermonitor r2;

     label1:
        r0.<android.os.CommonClock: android.os.CommonClock$OnTimelineChangedListener mTimelineChangedListener> = r1;

        exitmonitor r2;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static void <clinit>()
    {
        <android.os.CommonClock: long TIME_NOT_SYNCED> = -1L;

        <android.os.CommonClock: int STATE_WAIT_FOR_ELECTION> = 4;

        <android.os.CommonClock: int STATE_RONIN> = 3;

        <android.os.CommonClock: int STATE_MASTER> = 2;

        <android.os.CommonClock: int STATE_INVALID> = -1;

        <android.os.CommonClock: int STATE_INITIAL> = 0;

        <android.os.CommonClock: int STATE_CLIENT> = 1;

        <android.os.CommonClock: java.lang.String SERVICE_NAME> = "common_time.clock";

        <android.os.CommonClock: int METHOD_UNREGISTER_LISTENER> = 13;

        <android.os.CommonClock: int METHOD_REGISTER_LISTENER> = 12;

        <android.os.CommonClock: int METHOD_LOCAL_TIME_TO_COMMON_TIME> = 3;

        <android.os.CommonClock: int METHOD_IS_COMMON_TIME_VALID> = 1;

        <android.os.CommonClock: int METHOD_GET_TIMELINE_ID> = 9;

        <android.os.CommonClock: int METHOD_GET_STATE> = 10;

        <android.os.CommonClock: int METHOD_GET_MASTER_ADDRESS> = 11;

        <android.os.CommonClock: int METHOD_GET_LOCAL_TIME> = 6;

        <android.os.CommonClock: int METHOD_GET_LOCAL_FREQ> = 7;

        <android.os.CommonClock: int METHOD_GET_ESTIMATED_ERROR> = 8;

        <android.os.CommonClock: int METHOD_GET_COMMON_TIME> = 4;

        <android.os.CommonClock: int METHOD_GET_COMMON_FREQ> = 5;

        <android.os.CommonClock: int METHOD_COMMON_TIME_TO_LOCAL_TIME> = 2;

        <android.os.CommonClock: int METHOD_CBK_ON_TIMELINE_CHANGED> = 1;

        <android.os.CommonClock: long INVALID_TIMELINE_ID> = 0L;

        <android.os.CommonClock: int ERROR_ESTIMATE_UNKNOWN> = 2147483647;

        return;
    }
}
