public class org.xmlpull.v1.sax2.Driver extends java.lang.Object implements org.xml.sax.Locator, org.xml.sax.XMLReader, org.xml.sax.Attributes
{
    protected static final java.lang.String APACHE_DYNAMIC_VALIDATION_FEATURE;
    protected static final java.lang.String APACHE_SCHEMA_VALIDATION_FEATURE;
    protected static final java.lang.String DECLARATION_HANDLER_PROPERTY;
    protected static final java.lang.String LEXICAL_HANDLER_PROPERTY;
    protected static final java.lang.String NAMESPACES_FEATURE;
    protected static final java.lang.String NAMESPACE_PREFIXES_FEATURE;
    protected static final java.lang.String VALIDATION_FEATURE;
    protected org.xml.sax.ContentHandler contentHandler;
    protected org.xml.sax.ErrorHandler errorHandler;
    protected org.xmlpull.v1.XmlPullParser pp;
    protected java.lang.String systemId;

    public void <init>() throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.sax2.Driver r0;
        org.xmlpull.v1.XmlPullParserFactory r1;
        org.xml.sax.helpers.DefaultHandler $r2, $r3;
        org.xmlpull.v1.XmlPullParser $r4;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new org.xml.sax.helpers.DefaultHandler;

        specialinvoke $r2.<org.xml.sax.helpers.DefaultHandler: void <init>()>();

        r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler> = $r2;

        $r3 = new org.xml.sax.helpers.DefaultHandler;

        specialinvoke $r3.<org.xml.sax.helpers.DefaultHandler: void <init>()>();

        r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler errorHandler> = $r3;

        r1 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance()>();

        virtualinvoke r1.<org.xmlpull.v1.XmlPullParserFactory: void setNamespaceAware(boolean)>(1);

        $r4 = virtualinvoke r1.<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParser newPullParser()>();

        r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp> = $r4;

        return;
    }

    public void <init>(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.sax2.Driver r0;
        org.xmlpull.v1.XmlPullParser r1;
        org.xml.sax.helpers.DefaultHandler $r2, $r3;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new org.xml.sax.helpers.DefaultHandler;

        specialinvoke $r2.<org.xml.sax.helpers.DefaultHandler: void <init>()>();

        r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler> = $r2;

        $r3 = new org.xml.sax.helpers.DefaultHandler;

        specialinvoke $r3.<org.xml.sax.helpers.DefaultHandler: void <init>()>();

        r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler errorHandler> = $r3;

        r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp> = r1;

        return;
    }

    public int getColumnNumber()
    {
        org.xmlpull.v1.sax2.Driver r0;
        org.xmlpull.v1.XmlPullParser $r1;
        int $i0;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        $r1 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getColumnNumber()>();

        return $i0;
    }

    public org.xml.sax.ContentHandler getContentHandler()
    {
        org.xmlpull.v1.sax2.Driver r0;
        org.xml.sax.ContentHandler $r1;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        $r1 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler>;

        return $r1;
    }

    public org.xml.sax.DTDHandler getDTDHandler()
    {
        org.xmlpull.v1.sax2.Driver r0;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        return null;
    }

    public org.xml.sax.EntityResolver getEntityResolver()
    {
        org.xmlpull.v1.sax2.Driver r0;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        return null;
    }

    public org.xml.sax.ErrorHandler getErrorHandler()
    {
        org.xmlpull.v1.sax2.Driver r0;
        org.xml.sax.ErrorHandler $r1;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        $r1 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler errorHandler>;

        return $r1;
    }

    public boolean getFeature(java.lang.String) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.xmlpull.v1.sax2.Driver r0;
        java.lang.String r1, $r2, $r3, $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.xmlpull.v1.XmlPullParser $r5, $r6, $r7, $r8;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: java.lang.String;

        $r2 = "http://xml.org/sax/features/namespaces";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r8 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $z6 = interfaceinvoke $r8.<org.xmlpull.v1.XmlPullParser: boolean getFeature(java.lang.String)>("http://xmlpull.org/v1/doc/features.html#process-namespaces");

        return $z6;

     label1:
        $r3 = "http://xml.org/sax/features/namespace-prefixes";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        $r7 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $z5 = interfaceinvoke $r7.<org.xmlpull.v1.XmlPullParser: boolean getFeature(java.lang.String)>("http://xmlpull.org/v1/doc/features.html#report-namespace-prefixes");

        return $z5;

     label2:
        $r4 = "http://xml.org/sax/features/validation";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label3;

        $r6 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $z4 = interfaceinvoke $r6.<org.xmlpull.v1.XmlPullParser: boolean getFeature(java.lang.String)>("http://xmlpull.org/v1/doc/features.html#validation");

        return $z4;

     label3:
        $r5 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $z3 = interfaceinvoke $r5.<org.xmlpull.v1.XmlPullParser: boolean getFeature(java.lang.String)>(r1);

        return $z3;
    }

    public int getIndex(java.lang.String)
    {
        org.xmlpull.v1.sax2.Driver r0;
        java.lang.String r1, $r4;
        int i0, $i1;
        org.xmlpull.v1.XmlPullParser $r2, $r3;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: java.lang.String;

        i0 = 0;

     label1:
        $r2 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $i1 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int getAttributeCount()>();

        if i0 >= $i1 goto label3;

        $r3 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r4 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeName(int)>(i0);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        return i0;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return -1;
    }

    public int getIndex(java.lang.String, java.lang.String)
    {
        org.xmlpull.v1.sax2.Driver r0;
        java.lang.String r1, r2, $r5, $r7;
        int i0, $i1;
        org.xmlpull.v1.XmlPullParser $r3, $r4, $r6;
        boolean $z0, $z1;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 = 0;

     label1:
        $r3 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $i1 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: int getAttributeCount()>();

        if i0 >= $i1 goto label3;

        $r4 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r5 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeNamespace(int)>(i0);

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r6 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r7 = interfaceinvoke $r6.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeName(int)>(i0);

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label2;

        return i0;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return -1;
    }

    public int getLength()
    {
        org.xmlpull.v1.sax2.Driver r0;
        org.xmlpull.v1.XmlPullParser $r1;
        int $i0;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        $r1 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getAttributeCount()>();

        return $i0;
    }

    public int getLineNumber()
    {
        org.xmlpull.v1.sax2.Driver r0;
        org.xmlpull.v1.XmlPullParser $r1;
        int $i0;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        $r1 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getLineNumber()>();

        return $i0;
    }

    public java.lang.String getLocalName(int)
    {
        org.xmlpull.v1.sax2.Driver r0;
        int i0;
        org.xmlpull.v1.XmlPullParser $r1;
        java.lang.String $r2;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        i0 := @parameter0: int;

        $r1 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeName(int)>(i0);

        return $r2;
    }

    public java.lang.Object getProperty(java.lang.String) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.xmlpull.v1.sax2.Driver r0;
        java.lang.String r1, $r2, $r3;
        boolean $z0, $z1;
        org.xmlpull.v1.XmlPullParser $r4;
        java.lang.Object $r5;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: java.lang.String;

        $r2 = "http://xml.org/sax/properties/declaration-handler";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

     label1:
        return null;

     label2:
        $r3 = "http://xml.org/sax/properties/lexical-handler";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 != 0 goto label1;

        $r4 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r5 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: java.lang.Object getProperty(java.lang.String)>(r1);

        return $r5;
    }

    public java.lang.String getPublicId()
    {
        org.xmlpull.v1.sax2.Driver r0;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        return null;
    }

    public java.lang.String getQName(int)
    {
        org.xmlpull.v1.sax2.Driver r0;
        int i0;
        java.lang.String r1, $r4, $r9, $r11;
        org.xmlpull.v1.XmlPullParser $r2, $r3, $r8;
        java.lang.StringBuilder $r5, $r6, $r7, $r10;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        i0 := @parameter0: int;

        $r2 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        r1 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributePrefix(int)>(i0);

        if r1 == null goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r8 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r9 = interfaceinvoke $r8.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeName(int)>(i0);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;

     label1:
        $r3 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r4 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeName(int)>(i0);

        return $r4;
    }

    public java.lang.String getSystemId()
    {
        org.xmlpull.v1.sax2.Driver r0;
        java.lang.String $r1;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        $r1 = r0.<org.xmlpull.v1.sax2.Driver: java.lang.String systemId>;

        return $r1;
    }

    public java.lang.String getType(int)
    {
        org.xmlpull.v1.sax2.Driver r0;
        int i0;
        org.xmlpull.v1.XmlPullParser $r1;
        java.lang.String $r2;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        i0 := @parameter0: int;

        $r1 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeType(int)>(i0);

        return $r2;
    }

    public java.lang.String getType(java.lang.String)
    {
        org.xmlpull.v1.sax2.Driver r0;
        java.lang.String r1, $r4, $r6;
        int i0, $i1;
        org.xmlpull.v1.XmlPullParser $r2, $r3, $r5;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: java.lang.String;

        i0 = 0;

     label1:
        $r2 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $i1 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int getAttributeCount()>();

        if i0 >= $i1 goto label3;

        $r3 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r4 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeName(int)>(i0);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r5 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r6 = interfaceinvoke $r5.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeType(int)>(i0);

        return $r6;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return null;
    }

    public java.lang.String getType(java.lang.String, java.lang.String)
    {
        org.xmlpull.v1.sax2.Driver r0;
        java.lang.String r1, r2, $r5, $r7, $r9;
        int i0, $i1;
        org.xmlpull.v1.XmlPullParser $r3, $r4, $r6, $r8;
        boolean $z0, $z1;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 = 0;

     label1:
        $r3 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $i1 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: int getAttributeCount()>();

        if i0 >= $i1 goto label3;

        $r4 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r5 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeNamespace(int)>(i0);

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r6 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r7 = interfaceinvoke $r6.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeName(int)>(i0);

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label2;

        $r8 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r9 = interfaceinvoke $r8.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeType(int)>(i0);

        return $r9;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return null;
    }

    public java.lang.String getURI(int)
    {
        org.xmlpull.v1.sax2.Driver r0;
        int i0;
        org.xmlpull.v1.XmlPullParser $r1;
        java.lang.String $r2;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        i0 := @parameter0: int;

        $r1 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeNamespace(int)>(i0);

        return $r2;
    }

    public java.lang.String getValue(int)
    {
        org.xmlpull.v1.sax2.Driver r0;
        int i0;
        org.xmlpull.v1.XmlPullParser $r1;
        java.lang.String $r2;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        i0 := @parameter0: int;

        $r1 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(int)>(i0);

        return $r2;
    }

    public java.lang.String getValue(java.lang.String)
    {
        org.xmlpull.v1.sax2.Driver r0;
        java.lang.String r1, $r3;
        org.xmlpull.v1.XmlPullParser $r2;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r3 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r1);

        return $r3;
    }

    public java.lang.String getValue(java.lang.String, java.lang.String)
    {
        org.xmlpull.v1.sax2.Driver r0;
        java.lang.String r1, r2, $r4;
        org.xmlpull.v1.XmlPullParser $r3;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r4 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(r1, r2);

        return $r4;
    }

    public void parse(java.lang.String) throws org.xml.sax.SAXException, java.io.IOException
    {
        org.xmlpull.v1.sax2.Driver r0;
        java.lang.String r1;
        org.xml.sax.InputSource $r2;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: java.lang.String;

        $r2 = new org.xml.sax.InputSource;

        specialinvoke $r2.<org.xml.sax.InputSource: void <init>(java.lang.String)>(r1);

        virtualinvoke r0.<org.xmlpull.v1.sax2.Driver: void parse(org.xml.sax.InputSource)>($r2);

        return;
    }

    public void parse(org.xml.sax.InputSource) throws org.xml.sax.SAXException, java.io.IOException
    {
        org.xmlpull.v1.sax2.Driver r0;
        org.xml.sax.InputSource r1;
        java.io.Reader r2;
        org.xmlpull.v1.XmlPullParserException r3, r6, $r52, $r53;
        org.xml.sax.SAXParseException r4, r5, r7, r10, r13, $r22, $r34, $r43, $r51, $r59;
        java.io.InputStream r8, r14;
        java.lang.String r9, $r16, $r26, $r30, $r31, $r32, $r36, $r38, $r46, $r48, $r55, $r57;
        java.io.FileNotFoundException r12, $r44;
        org.xml.sax.ContentHandler $r15, $r19, $r23;
        org.xmlpull.v1.XmlPullParser $r17, $r18, $r20, $r21, $r27, $r33;
        int $i1;
        java.lang.StringBuilder $r24, $r25, $r29, $r41, $r42, $r47, $r49, $r50, $r56, $r60, $r61, $r62;
        org.xml.sax.ErrorHandler $r28, $r39, $r45, $r54, $r58;
        java.net.URL $r35;
        java.io.FileInputStream $r37;
        java.net.MalformedURLException $r40;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: org.xml.sax.InputSource;

        $r16 = virtualinvoke r1.<org.xml.sax.InputSource: java.lang.String getSystemId()>();

        r0.<org.xmlpull.v1.sax2.Driver: java.lang.String systemId> = $r16;

        $r15 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler>;

        interfaceinvoke $r15.<org.xml.sax.ContentHandler: void setDocumentLocator(org.xml.sax.Locator)>(r0);

        r2 = virtualinvoke r1.<org.xml.sax.InputSource: java.io.Reader getCharacterStream()>();

        if r2 != null goto label18;

     label01:
        r8 = virtualinvoke r1.<org.xml.sax.InputSource: java.io.InputStream getByteStream()>();

        r9 = virtualinvoke r1.<org.xml.sax.InputSource: java.lang.String getEncoding()>();

     label02:
        if r8 != null goto label07;

     label03:
        $r31 = virtualinvoke r1.<org.xml.sax.InputSource: java.lang.String getSystemId()>();

        r0.<org.xmlpull.v1.sax2.Driver: java.lang.String systemId> = $r31;

        $r32 = r0.<org.xmlpull.v1.sax2.Driver: java.lang.String systemId>;

        if $r32 != null goto label05;

        $r34 = new org.xml.sax.SAXParseException;

        specialinvoke $r34.<org.xml.sax.SAXParseException: void <init>(java.lang.String,org.xml.sax.Locator)>("null source systemId", r0);

        r10 = $r34;

        $r39 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler errorHandler>;

        interfaceinvoke $r39.<org.xml.sax.ErrorHandler: void fatalError(org.xml.sax.SAXParseException)>(r10);

     label04:
        return;

     label05:
        $r35 = new java.net.URL;

        $r36 = r0.<org.xmlpull.v1.sax2.Driver: java.lang.String systemId>;

        specialinvoke $r35.<java.net.URL: void <init>(java.lang.String)>($r36);

        r14 = virtualinvoke $r35.<java.net.URL: java.io.InputStream openStream()>();

     label06:
        r8 = r14;

     label07:
        $r33 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        interfaceinvoke $r33.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r8, r9);

     label08:
        $r19 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler>;

        interfaceinvoke $r19.<org.xml.sax.ContentHandler: void startDocument()>();

        $r18 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        interfaceinvoke $r18.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r20 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $i1 = interfaceinvoke $r20.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i1 == 2 goto label20;

        $r22 = new org.xml.sax.SAXParseException;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected start tag not");

        $r27 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r26 = interfaceinvoke $r27.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<org.xml.sax.SAXParseException: void <init>(java.lang.String,org.xml.sax.Locator)>($r30, r0);

        r5 = $r22;

        $r28 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler errorHandler>;

        interfaceinvoke $r28.<org.xml.sax.ErrorHandler: void fatalError(org.xml.sax.SAXParseException)>(r5);

     label09:
        return;

     label10:
        $r53 := @caughtexception;

        r3 = $r53;

        $r59 = new org.xml.sax.SAXParseException;

        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parsing initialization error: ");

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r57 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r59.<org.xml.sax.SAXParseException: void <init>(java.lang.String,org.xml.sax.Locator,java.lang.Exception)>($r57, r0, r3);

        r4 = $r59;

        $r58 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler errorHandler>;

        interfaceinvoke $r58.<org.xml.sax.ErrorHandler: void fatalError(org.xml.sax.SAXParseException)>(r4);

        return;

     label11:
        $r40 := @caughtexception;

     label12:
        $r37 = new java.io.FileInputStream;

        $r38 = r0.<org.xmlpull.v1.sax2.Driver: java.lang.String systemId>;

        specialinvoke $r37.<java.io.FileInputStream: void <init>(java.lang.String)>($r38);

        r8 = $r37;

     label13:
        goto label07;

     label14:
        $r44 := @caughtexception;

        r12 = $r44;

     label15:
        $r43 = new org.xml.sax.SAXParseException;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not open file with systemId ");

        $r48 = r0.<org.xmlpull.v1.sax2.Driver: java.lang.String systemId>;

        $r47 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r46 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r43.<org.xml.sax.SAXParseException: void <init>(java.lang.String,org.xml.sax.Locator,java.lang.Exception)>($r46, r0, r12);

        r13 = $r43;

        $r45 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler errorHandler>;

        interfaceinvoke $r45.<org.xml.sax.ErrorHandler: void fatalError(org.xml.sax.SAXParseException)>(r13);

     label16:
        return;

     label17:
        $r52 := @caughtexception;

        r6 = $r52;

        $r51 = new org.xml.sax.SAXParseException;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parsing initialization error: ");

        $r56 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r55 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r51.<org.xml.sax.SAXParseException: void <init>(java.lang.String,org.xml.sax.Locator,java.lang.Exception)>($r55, r0, r6);

        r7 = $r51;

        $r54 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler errorHandler>;

        interfaceinvoke $r54.<org.xml.sax.ErrorHandler: void fatalError(org.xml.sax.SAXParseException)>(r7);

        return;

     label18:
        $r17 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        interfaceinvoke $r17.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.Reader)>(r2);

     label19:
        goto label08;

     label20:
        $r21 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        virtualinvoke r0.<org.xmlpull.v1.sax2.Driver: void parseSubTree(org.xmlpull.v1.XmlPullParser)>($r21);

        $r23 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler>;

        interfaceinvoke $r23.<org.xml.sax.ContentHandler: void endDocument()>();

        return;

        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label17;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label17;
        catch java.net.MalformedURLException from label05 to label06 with label11;
        catch org.xmlpull.v1.XmlPullParserException from label05 to label06 with label17;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label08 with label17;
        catch org.xmlpull.v1.XmlPullParserException from label08 to label09 with label10;
        catch java.io.FileNotFoundException from label12 to label13 with label14;
        catch org.xmlpull.v1.XmlPullParserException from label12 to label13 with label17;
        catch org.xmlpull.v1.XmlPullParserException from label15 to label16 with label17;
        catch org.xmlpull.v1.XmlPullParserException from label18 to label19 with label17;
    }

    public void parseSubTree(org.xmlpull.v1.XmlPullParser) throws org.xml.sax.SAXException, java.io.IOException
    {
        org.xmlpull.v1.sax2.Driver r0;
        org.xmlpull.v1.XmlPullParser r1;
        boolean z0;
        org.xmlpull.v1.XmlPullParserException r2, $r38;
        org.xml.sax.SAXParseException r3, $r46;
        int[] r4;
        java.lang.StringBuilder r5, $r16, $r36, $r41, $r42, $r45, $r47, $r48;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        java.lang.String r6, r7, r9, r10, r12, r13, r14, r15, $r21, $r22, $r23, $r26, $r27, $r29, $r30, $r31, $r35, $r37, $r39, $r44;
        org.xml.sax.ContentHandler r8, $r18, $r24, $r25, $r28;
        char[] r11;
        org.xml.sax.SAXException $r40;
        org.xml.sax.ErrorHandler $r43;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp> = r1;

        z0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: boolean getFeature(java.lang.String)>("http://xmlpull.org/v1/doc/features.html#process-namespaces");

     label01:
        $i9 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i9 == 2 goto label04;

        $r40 = new org.xml.sax.SAXException;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("start tag must be read before skiping subtree");

        $r37 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r36 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r40.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r39);

        throw $r40;

     label02:
        $r38 := @caughtexception;

        r2 = $r38;

        $r46 = new org.xml.sax.SAXParseException;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parsing error: ");

        $r47 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r44 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r46.<org.xml.sax.SAXParseException: void <init>(java.lang.String,org.xml.sax.Locator,java.lang.Exception)>($r44, r0, r2);

        r3 = $r46;

        virtualinvoke r2.<org.xmlpull.v1.XmlPullParserException: void printStackTrace()>();

        $r43 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler errorHandler>;

        interfaceinvoke $r43.<org.xml.sax.ErrorHandler: void fatalError(org.xml.sax.SAXParseException)>(r3);

     label03:
        return;

     label04:
        r4 = newarray (int)[2];

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>(int)>(16);

        r5 = $r16;

        $i8 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        i0 = -1 + $i8;

     label05:
        i1 = 2;

        goto label45;

     label06:
        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        $i11 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i11 > i0 goto label45;

     label07:
        return;

     label08:
        if z0 == 0 goto label26;

     label09:
        $i19 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        i5 = -1 + $i19;

     label10:
        if i0 <= i5 goto label46;

     label11:
        i4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getNamespaceCount(int)>(i5);

     label12:
        $i10 = i5 + 1;

        i7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getNamespaceCount(int)>($i10);

     label13:
        i6 = i4;

     label14:
        if i6 >= i7 goto label17;

     label15:
        $r18 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler>;

        $r22 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespacePrefix(int)>(i6);

        $r21 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespaceUri(int)>(i6);

        interfaceinvoke $r18.<org.xml.sax.ContentHandler: void startPrefixMapping(java.lang.String,java.lang.String)>($r22, $r21);

     label16:
        i6 = i6 + 1;

        goto label14;

     label17:
        r13 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        r12 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPrefix()>();

     label18:
        if r12 == null goto label20;

     label19:
        virtualinvoke r5.<java.lang.StringBuilder: void setLength(int)>(0);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

     label20:
        r14 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespace()>();

     label21:
        if r12 != null goto label24;

        r15 = r13;

     label22:
        virtualinvoke r0.<org.xmlpull.v1.sax2.Driver: void startElement(java.lang.String,java.lang.String,java.lang.String)>(r14, r13, r15);

     label23:
        goto label06;

     label24:
        r15 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label25:
        goto label22;

     label26:
        $r35 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespace()>();

        $r30 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r31 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke r0.<org.xmlpull.v1.sax2.Driver: void startElement(java.lang.String,java.lang.String,java.lang.String)>($r35, $r30, $r31);

     label27:
        goto label06;

     label28:
        r11 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: char[] getTextCharacters(int[])>(r4);

        $r25 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler>;

        $i13 = r4[0];

        $i12 = r4[1];

        interfaceinvoke $r25.<org.xml.sax.ContentHandler: void characters(char[],int,int)>(r11, $i13, $i12);

     label29:
        goto label06;

     label30:
        if z0 == 0 goto label43;

     label31:
        r6 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        r7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPrefix()>();

     label32:
        if r7 == null goto label34;

     label33:
        virtualinvoke r5.<java.lang.StringBuilder: void setLength(int)>(0);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

     label34:
        r8 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler>;

        r9 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespace()>();

     label35:
        if r7 == null goto label41;

        r10 = r6;

     label36:
        interfaceinvoke r8.<org.xml.sax.ContentHandler: void endElement(java.lang.String,java.lang.String,java.lang.String)>(r9, r6, r10);

        $i14 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if i0 <= $i14 goto label47;

        $i15 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getNamespaceCount(int)>($i15);

     label37:
        $i16 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        $i17 = -1 + $i16;

        $i18 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getNamespaceCount(int)>($i17);

        i3 = -1 + $i18;

     label38:
        if i3 < i2 goto label06;

     label39:
        $r28 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler>;

        $r29 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespacePrefix(int)>(i3);

        interfaceinvoke $r28.<org.xml.sax.ContentHandler: void endPrefixMapping(java.lang.String)>($r29);

     label40:
        i3 = i3 + -1;

        goto label38;

     label41:
        r10 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label42:
        goto label36;

     label43:
        $r24 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler>;

        $r23 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespace()>();

        $r27 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r26 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        interfaceinvoke $r24.<org.xml.sax.ContentHandler: void endElement(java.lang.String,java.lang.String,java.lang.String)>($r23, $r27, $r26);

     label44:
        goto label06;

     label45:
        tableswitch(i1)
        {
            case 1: goto label03;
            case 2: goto label08;
            case 3: goto label30;
            case 4: goto label28;
            default: goto label06;
        };

     label46:
        i4 = 0;

        goto label12;

     label47:
        i2 = 0;

        goto label37;

        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label02;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label05 with label02;
        catch org.xmlpull.v1.XmlPullParserException from label06 to label07 with label02;
        catch org.xmlpull.v1.XmlPullParserException from label09 to label10 with label02;
        catch org.xmlpull.v1.XmlPullParserException from label11 to label12 with label02;
        catch org.xmlpull.v1.XmlPullParserException from label12 to label13 with label02;
        catch org.xmlpull.v1.XmlPullParserException from label15 to label16 with label02;
        catch org.xmlpull.v1.XmlPullParserException from label17 to label18 with label02;
        catch org.xmlpull.v1.XmlPullParserException from label19 to label20 with label02;
        catch org.xmlpull.v1.XmlPullParserException from label20 to label21 with label02;
        catch org.xmlpull.v1.XmlPullParserException from label22 to label23 with label02;
        catch org.xmlpull.v1.XmlPullParserException from label24 to label25 with label02;
        catch org.xmlpull.v1.XmlPullParserException from label26 to label27 with label02;
        catch org.xmlpull.v1.XmlPullParserException from label28 to label29 with label02;
        catch org.xmlpull.v1.XmlPullParserException from label31 to label32 with label02;
        catch org.xmlpull.v1.XmlPullParserException from label33 to label34 with label02;
        catch org.xmlpull.v1.XmlPullParserException from label34 to label35 with label02;
        catch org.xmlpull.v1.XmlPullParserException from label36 to label37 with label02;
        catch org.xmlpull.v1.XmlPullParserException from label37 to label38 with label02;
        catch org.xmlpull.v1.XmlPullParserException from label39 to label40 with label02;
        catch org.xmlpull.v1.XmlPullParserException from label41 to label42 with label02;
        catch org.xmlpull.v1.XmlPullParserException from label43 to label44 with label02;
    }

    public void setContentHandler(org.xml.sax.ContentHandler)
    {
        org.xmlpull.v1.sax2.Driver r0;
        org.xml.sax.ContentHandler r1;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: org.xml.sax.ContentHandler;

        r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler> = r1;

        return;
    }

    public void setDTDHandler(org.xml.sax.DTDHandler)
    {
        org.xmlpull.v1.sax2.Driver r0;
        org.xml.sax.DTDHandler r1;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: org.xml.sax.DTDHandler;

        return;
    }

    public void setEntityResolver(org.xml.sax.EntityResolver)
    {
        org.xmlpull.v1.sax2.Driver r0;
        org.xml.sax.EntityResolver r1;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: org.xml.sax.EntityResolver;

        return;
    }

    public void setErrorHandler(org.xml.sax.ErrorHandler)
    {
        org.xmlpull.v1.sax2.Driver r0;
        org.xml.sax.ErrorHandler r1;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: org.xml.sax.ErrorHandler;

        r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler errorHandler> = r1;

        return;
    }

    public void setFeature(java.lang.String, boolean) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.xmlpull.v1.sax2.Driver r0;
        java.lang.String r1, $r3, $r4, $r5;
        boolean z0, $z1, $z2, $z3, $z4;
        org.xmlpull.v1.XmlPullParser $r6, $r7, $r8, $r9, $r10;
        org.xmlpull.v1.XmlPullParserException $r11;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

     label1:
        $r3 = "http://xml.org/sax/features/namespaces";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label3;

        $r10 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        interfaceinvoke $r10.<org.xmlpull.v1.XmlPullParser: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#process-namespaces", z0);

     label2:
        return;

     label3:
        $r4 = "http://xml.org/sax/features/namespace-prefixes";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label5;

        $r8 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $z4 = interfaceinvoke $r8.<org.xmlpull.v1.XmlPullParser: boolean getFeature(java.lang.String)>("http://xmlpull.org/v1/doc/features.html#report-namespace-prefixes");

        if $z4 == z0 goto label8;

        $r9 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#report-namespace-prefixes", z0);

     label4:
        return;

     label5:
        $r5 = "http://xml.org/sax/features/validation";

        $z3 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z3 == 0 goto label7;

        $r7 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        interfaceinvoke $r7.<org.xmlpull.v1.XmlPullParser: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#validation", z0);

     label6:
        return;

     label7:
        $r6 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        interfaceinvoke $r6.<org.xmlpull.v1.XmlPullParser: void setFeature(java.lang.String,boolean)>(r1, z0);

     label8:
        return;

     label9:
        $r11 := @caughtexception;

        return;

        catch org.xmlpull.v1.XmlPullParserException from label1 to label2 with label9;
        catch org.xmlpull.v1.XmlPullParserException from label3 to label4 with label9;
        catch org.xmlpull.v1.XmlPullParserException from label5 to label6 with label9;
        catch org.xmlpull.v1.XmlPullParserException from label7 to label8 with label9;
    }

    public void setProperty(java.lang.String, java.lang.Object) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.xmlpull.v1.sax2.Driver r0;
        java.lang.String r1, $r4, $r5, $r11, $r17, $r24;
        java.lang.Object r2;
        org.xmlpull.v1.XmlPullParserException r3, $r16;
        boolean $z0, $z1;
        org.xmlpull.v1.XmlPullParser $r6;
        org.xml.sax.SAXNotSupportedException $r7, $r12, $r19;
        java.lang.StringBuilder $r8, $r9, $r10, $r13, $r14, $r15, $r18, $r20, $r21, $r22, $r23;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r4 = "http://xml.org/sax/properties/declaration-handler";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r12 = new org.xml.sax.SAXNotSupportedException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not supported setting property ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>($r17);

        throw $r12;

     label1:
        $r5 = "http://xml.org/sax/properties/lexical-handler";

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        $r7 = new org.xml.sax.SAXNotSupportedException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not supported setting property ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label2:
        $r6 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        interfaceinvoke $r6.<org.xmlpull.v1.XmlPullParser: void setProperty(java.lang.String,java.lang.Object)>(r1, r2);

     label3:
        return;

     label4:
        $r16 := @caughtexception;

        r3 = $r16;

        $r19 = new org.xml.sax.SAXNotSupportedException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not supported set property ");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>($r24);

        throw $r19;

        catch org.xmlpull.v1.XmlPullParserException from label2 to label3 with label4;
    }

    protected void startElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.xmlpull.v1.sax2.Driver r0;
        java.lang.String r1, r2, r3;
        org.xml.sax.ContentHandler $r4;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler>;

        interfaceinvoke $r4.<org.xml.sax.ContentHandler: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>(r1, r2, r3, r0);

        return;
    }

    public static void <clinit>()
    {
        <org.xmlpull.v1.sax2.Driver: java.lang.String VALIDATION_FEATURE> = "http://xml.org/sax/features/validation";

        <org.xmlpull.v1.sax2.Driver: java.lang.String NAMESPACE_PREFIXES_FEATURE> = "http://xml.org/sax/features/namespace-prefixes";

        <org.xmlpull.v1.sax2.Driver: java.lang.String NAMESPACES_FEATURE> = "http://xml.org/sax/features/namespaces";

        <org.xmlpull.v1.sax2.Driver: java.lang.String LEXICAL_HANDLER_PROPERTY> = "http://xml.org/sax/properties/lexical-handler";

        <org.xmlpull.v1.sax2.Driver: java.lang.String DECLARATION_HANDLER_PROPERTY> = "http://xml.org/sax/properties/declaration-handler";

        <org.xmlpull.v1.sax2.Driver: java.lang.String APACHE_SCHEMA_VALIDATION_FEATURE> = "http://apache.org/xml/features/validation/schema";

        <org.xmlpull.v1.sax2.Driver: java.lang.String APACHE_DYNAMIC_VALIDATION_FEATURE> = "http://apache.org/xml/features/validation/dynamic";

        return;
    }
}
