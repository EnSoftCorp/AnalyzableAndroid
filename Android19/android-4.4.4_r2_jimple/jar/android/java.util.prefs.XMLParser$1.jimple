final class java.util.prefs.XMLParser$1 extends java.lang.Object implements org.xml.sax.EntityResolver
{

    void <init>()
    {
        java.util.prefs.XMLParser$1 r0;

        r0 := @this: java.util.prefs.XMLParser$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.xml.sax.InputSource resolveEntity(java.lang.String, java.lang.String) throws org.xml.sax.SAXException, java.io.IOException
    {
        java.util.prefs.XMLParser$1 r0;
        java.lang.String r1, r2, $r8;
        org.xml.sax.InputSource r3, $r9;
        boolean $z0;
        org.xml.sax.SAXException $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.io.StringReader $r10;

        r0 := @this: java.util.prefs.XMLParser$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("http://java.sun.com/dtd/preferences.dtd");

        if $z0 == 0 goto label1;

        $r9 = new org.xml.sax.InputSource;

        $r10 = new java.io.StringReader;

        specialinvoke $r10.<java.io.StringReader: void <init>(java.lang.String)>("<?xml version=\"1.0\" encoding=\"UTF-8\"?>    <!ELEMENT preferences (root)>    <!ATTLIST preferences EXTERNAL_XML_VERSION CDATA \"0.0\" >    <!ELEMENT root (map, node*) >    <!ATTLIST root type (system|user) #REQUIRED >    <!ELEMENT node (map, node*) >    <!ATTLIST node name CDATA #REQUIRED >    <!ELEMENT map (entry*) >    <!ELEMENT entry EMPTY >    <!ATTLIST entry key   CDATA #REQUIRED value CDATA #REQUIRED >");

        specialinvoke $r9.<org.xml.sax.InputSource: void <init>(java.io.Reader)>($r10);

        r3 = $r9;

        virtualinvoke r3.<org.xml.sax.InputSource: void setSystemId(java.lang.String)>("http://java.sun.com/dtd/preferences.dtd");

        return r3;

     label1:
        $r4 = new org.xml.sax.SAXException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid DOCTYPE declaration ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r8);

        throw $r4;
    }
}
