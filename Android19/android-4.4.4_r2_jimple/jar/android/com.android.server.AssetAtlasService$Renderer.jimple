class com.android.server.AssetAtlasService$Renderer extends java.lang.Object implements java.lang.Runnable
{
    private android.graphics.Bitmap mAtlasBitmap;
    private final java.util.ArrayList mBitmaps;
    private int mNativeBitmap;
    private final int mPixelCount;
    final com.android.server.AssetAtlasService this$0;

    void <init>(com.android.server.AssetAtlasService, java.util.ArrayList, int)
    {
        com.android.server.AssetAtlasService$Renderer r0;
        com.android.server.AssetAtlasService r1;
        java.util.ArrayList r2;
        int i0;

        r0 := @this: com.android.server.AssetAtlasService$Renderer;

        r1 := @parameter0: com.android.server.AssetAtlasService;

        r2 := @parameter1: java.util.ArrayList;

        i0 := @parameter2: int;

        r0.<com.android.server.AssetAtlasService$Renderer: com.android.server.AssetAtlasService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.AssetAtlasService$Renderer: java.util.ArrayList mBitmaps> = r2;

        r0.<com.android.server.AssetAtlasService$Renderer: int mPixelCount> = i0;

        return;
    }

    private android.graphics.Canvas acquireCanvas(int, int)
    {
        com.android.server.AssetAtlasService$Renderer r0;
        int i0, i1, $i2;
        android.graphics.Canvas r1, $r2;

        r0 := @this: com.android.server.AssetAtlasService$Renderer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = new android.graphics.Canvas;

        specialinvoke $r2.<android.graphics.Canvas: void <init>()>();

        r1 = $r2;

        $i2 = staticinvoke <com.android.server.AssetAtlasService: int access$700(android.graphics.Canvas,int,int)>(r1, i0, i1);

        r0.<com.android.server.AssetAtlasService$Renderer: int mNativeBitmap> = $i2;

        return r1;
    }

    private void releaseCanvas(android.graphics.Canvas)
    {
        com.android.server.AssetAtlasService$Renderer r0;
        android.graphics.Canvas r1;
        int $i0;

        r0 := @this: com.android.server.AssetAtlasService$Renderer;

        r1 := @parameter0: android.graphics.Canvas;

        $i0 = r0.<com.android.server.AssetAtlasService$Renderer: int mNativeBitmap>;

        staticinvoke <com.android.server.AssetAtlasService: void access$800(android.graphics.Canvas,int)>(r1, $i0);

        return;
    }

    private boolean renderAtlas(android.view.GraphicBuffer, android.graphics.Atlas, int)
    {
        com.android.server.AssetAtlasService$Renderer r0;
        android.view.GraphicBuffer r1;
        android.graphics.Atlas r2;
        int i0, i2, i3, i4, i6, i8, i9, i11, $i12, $i13, $i14, $i17, $i19, $i20, $i22, $i23, $i24, $i25, $i26, $i27, $i28, i29;
        android.graphics.Canvas r3;
        android.graphics.Atlas$Entry r4, $r13, $r25;
        int[] r5, $r16, $r27;
        java.lang.Throwable r6, $r28, $r29;
        long l1, l5, l7, $l15, $l16;
        boolean z0, $z1, $z2;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        java.lang.Object[] r7;
        android.graphics.Bitmap r8;
        byte b10;
        android.graphics.PorterDuff$Mode $r9;
        android.graphics.Paint $r11;
        android.graphics.PorterDuffXfermode $r12;
        com.android.server.AssetAtlasService $r14, $r18, $r26;
        java.util.ArrayList $r17, $r22;
        java.lang.Float $r19, $r20, $r21;
        java.lang.Object $r23;
        java.lang.String $r24;

        r0 := @this: com.android.server.AssetAtlasService$Renderer;

        r1 := @parameter0: android.view.GraphicBuffer;

        r2 := @parameter1: android.graphics.Atlas;

        i0 := @parameter2: int;

        $r11 = new android.graphics.Paint;

        specialinvoke $r11.<android.graphics.Paint: void <init>()>();

        $r12 = new android.graphics.PorterDuffXfermode;

        $r9 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC>;

        specialinvoke $r12.<android.graphics.PorterDuffXfermode: void <init>(android.graphics.PorterDuff$Mode)>($r9);

        virtualinvoke $r11.<android.graphics.Paint: android.graphics.Xfermode setXfermode(android.graphics.Xfermode)>($r12);

        $i12 = virtualinvoke r1.<android.view.GraphicBuffer: int getWidth()>();

        $i13 = virtualinvoke r1.<android.view.GraphicBuffer: int getHeight()>();

        r3 = specialinvoke r0.<com.android.server.AssetAtlasService$Renderer: android.graphics.Canvas acquireCanvas(int,int)>($i12, $i13);

        if r3 != null goto label01;

        return 0;

     label01:
        $r13 = new android.graphics.Atlas$Entry;

        specialinvoke $r13.<android.graphics.Atlas$Entry: void <init>()>();

        r4 = $r13;

        $r14 = r0.<com.android.server.AssetAtlasService$Renderer: com.android.server.AssetAtlasService this$0>;

        $i14 = i0 * 4;

        $r16 = newarray (int)[$i14];

        staticinvoke <com.android.server.AssetAtlasService: int[] access$402(com.android.server.AssetAtlasService,int[])>($r14, $r16);

        $r18 = r0.<com.android.server.AssetAtlasService$Renderer: com.android.server.AssetAtlasService this$0>;

        r5 = staticinvoke <com.android.server.AssetAtlasService: int[] access$400(com.android.server.AssetAtlasService)>($r18);

     label02:
        l1 = staticinvoke <java.lang.System: long nanoTime()>();

        $r17 = r0.<com.android.server.AssetAtlasService$Renderer: java.util.ArrayList mBitmaps>;

        i2 = virtualinvoke $r17.<java.util.ArrayList: int size()>();

     label03:
        i3 = 0;

        i4 = 0;

     label04:
        if i3 >= i2 goto label06;

     label05:
        $r22 = r0.<com.android.server.AssetAtlasService$Renderer: java.util.ArrayList mBitmaps>;

        $r23 = virtualinvoke $r22.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r8 = (android.graphics.Bitmap) $r23;

        $i17 = virtualinvoke r8.<android.graphics.Bitmap: int getWidth()>();

        $i24 = virtualinvoke r8.<android.graphics.Bitmap: int getHeight()>();

        $r25 = virtualinvoke r2.<android.graphics.Atlas: android.graphics.Atlas$Entry pack(int,int,android.graphics.Atlas$Entry)>($i17, $i24, r4);

        if $r25 == null goto label23;

        $r26 = r0.<com.android.server.AssetAtlasService$Renderer: com.android.server.AssetAtlasService this$0>;

        $r27 = staticinvoke <com.android.server.AssetAtlasService: int[] access$400(com.android.server.AssetAtlasService)>($r26);

        $i20 = lengthof $r27;

        if i4 < $i20 goto label11;

        staticinvoke <com.android.server.AssetAtlasService: void access$500()>();

     label06:
        l5 = staticinvoke <java.lang.System: long nanoTime()>();

        i6 = r0.<com.android.server.AssetAtlasService$Renderer: int mNativeBitmap>;

     label07:
        z0 = 0;

        if i6 == 0 goto label09;

     label08:
        $i19 = r0.<com.android.server.AssetAtlasService$Renderer: int mNativeBitmap>;

        z0 = staticinvoke <com.android.server.AssetAtlasService: boolean access$600(android.view.GraphicBuffer,int)>(r1, $i19);

     label09:
        l7 = staticinvoke <java.lang.System: long nanoTime()>();

        $l15 = l5 - l1;

        $f4 = (float) $l15;

        $f3 = $f4 / 1000.0F;

        f1 = $f3 / 1000.0F;

        $l16 = l7 - l5;

        $f2 = (float) $l16;

        $f6 = $f2 / 1000.0F;

        f0 = $f6 / 1000.0F;

        r7 = newarray (java.lang.Object)[3];

        $f5 = f1 + f0;

        $r19 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f5);

        r7[0] = $r19;

        $r21 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f1);

        r7[1] = $r21;

        $r20 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        r7[2] = $r20;

        $r24 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Rendered atlas in %.2fms (%.2f+%.2fms)", r7);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Atlas", $r24);

     label10:
        specialinvoke r0.<com.android.server.AssetAtlasService$Renderer: void releaseCanvas(android.graphics.Canvas)>(r3);

        return z0;

     label11:
        virtualinvoke r3.<android.graphics.Canvas: int save()>();

        $i22 = r4.<android.graphics.Atlas$Entry: int x>;

        $f7 = (float) $i22;

        $i23 = r4.<android.graphics.Atlas$Entry: int y>;

        $f8 = (float) $i23;

        virtualinvoke r3.<android.graphics.Canvas: void translate(float,float)>($f7, $f8);

        $z2 = r4.<android.graphics.Atlas$Entry: boolean rotated>;

        if $z2 == 0 goto label12;

        $i27 = virtualinvoke r8.<android.graphics.Bitmap: int getHeight()>();

        $f9 = (float) $i27;

        virtualinvoke r3.<android.graphics.Canvas: void translate(float,float)>($f9, 0.0F);

        virtualinvoke r3.<android.graphics.Canvas: void rotate(float)>(90.0F);

     label12:
        virtualinvoke r3.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>(r8, 0.0F, 0.0F, null);

        virtualinvoke r3.<android.graphics.Canvas: void restore()>();

     label13:
        i9 = i4 + 1;

     label14:
        $i28 = r8.<android.graphics.Bitmap: int mNativeBitmap>;

        r5[i4] = $i28;

     label15:
        i29 = i9 + 1;

     label16:
        $i26 = r4.<android.graphics.Atlas$Entry: int x>;

        r5[i9] = $i26;

     label17:
        i11 = i29 + 1;

     label18:
        $i25 = r4.<android.graphics.Atlas$Entry: int y>;

        r5[i29] = $i25;

     label19:
        i4 = i11 + 1;

     label20:
        $z1 = r4.<android.graphics.Atlas$Entry: boolean rotated>;

        if $z1 == 0 goto label24;

     label21:
        b10 = 1;

     label22:
        r5[i11] = b10;

     label23:
        i8 = i4;

        i3 = i3 + 1;

        i4 = i8;

        goto label04;

     label24:
        b10 = 0;

        goto label22;

     label25:
        $r29 := @caughtexception;

        r6 = $r29;

     label26:
        specialinvoke r0.<com.android.server.AssetAtlasService$Renderer: void releaseCanvas(android.graphics.Canvas)>(r3);

        throw r6;

     label27:
        $r28 := @caughtexception;

        r6 = $r28;

        goto label26;

        catch java.lang.Throwable from label02 to label03 with label25;
        catch java.lang.Throwable from label05 to label06 with label27;
        catch java.lang.Throwable from label06 to label07 with label27;
        catch java.lang.Throwable from label08 to label09 with label27;
        catch java.lang.Throwable from label09 to label10 with label27;
        catch java.lang.Throwable from label11 to label12 with label27;
        catch java.lang.Throwable from label12 to label13 with label27;
        catch java.lang.Throwable from label14 to label15 with label25;
        catch java.lang.Throwable from label16 to label17 with label27;
        catch java.lang.Throwable from label18 to label19 with label25;
        catch java.lang.Throwable from label20 to label21 with label27;
        catch java.lang.Throwable from label22 to label23 with label27;
    }

    public void run()
    {
        com.android.server.AssetAtlasService$Renderer r0;
        com.android.server.AssetAtlasService$Configuration r1;
        android.graphics.Atlas r2, $r16;
        com.android.server.AssetAtlasService $r3, $r4, $r11, $r15, $r17, $r21;
        java.util.ArrayList $r5;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r6, $r10;
        java.lang.StringBuilder $r7, $r8, $r9;
        android.view.GraphicBuffer $r13, $r14, $r19;
        android.graphics.Atlas$Type $r18;
        java.util.concurrent.atomic.AtomicBoolean $r20;
        boolean $z0;

        r0 := @this: com.android.server.AssetAtlasService$Renderer;

        $r4 = r0.<com.android.server.AssetAtlasService$Renderer: com.android.server.AssetAtlasService this$0>;

        $r5 = r0.<com.android.server.AssetAtlasService$Renderer: java.util.ArrayList mBitmaps>;

        $i0 = r0.<com.android.server.AssetAtlasService$Renderer: int mPixelCount>;

        $r3 = r0.<com.android.server.AssetAtlasService$Renderer: com.android.server.AssetAtlasService this$0>;

        $r6 = staticinvoke <com.android.server.AssetAtlasService: java.lang.String access$000(com.android.server.AssetAtlasService)>($r3);

        r1 = staticinvoke <com.android.server.AssetAtlasService: com.android.server.AssetAtlasService$Configuration access$100(com.android.server.AssetAtlasService,java.util.ArrayList,int,java.lang.String)>($r4, $r5, $i0, $r6);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loaded configuration: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Atlas", $r10);

        if r1 == null goto label1;

        $r11 = r0.<com.android.server.AssetAtlasService$Renderer: com.android.server.AssetAtlasService this$0>;

        $i3 = r1.<com.android.server.AssetAtlasService$Configuration: int width>;

        $i1 = r1.<com.android.server.AssetAtlasService$Configuration: int height>;

        $r13 = staticinvoke <android.view.GraphicBuffer: android.view.GraphicBuffer create(int,int,int,int)>($i3, $i1, 1, 256);

        staticinvoke <com.android.server.AssetAtlasService: android.view.GraphicBuffer access$202(com.android.server.AssetAtlasService,android.view.GraphicBuffer)>($r11, $r13);

        $r15 = r0.<com.android.server.AssetAtlasService$Renderer: com.android.server.AssetAtlasService this$0>;

        $r14 = staticinvoke <com.android.server.AssetAtlasService: android.view.GraphicBuffer access$200(com.android.server.AssetAtlasService)>($r15);

        if $r14 == null goto label1;

        $r16 = new android.graphics.Atlas;

        $r18 = r1.<com.android.server.AssetAtlasService$Configuration: android.graphics.Atlas$Type type>;

        $i5 = r1.<com.android.server.AssetAtlasService$Configuration: int width>;

        $i6 = r1.<com.android.server.AssetAtlasService$Configuration: int height>;

        $i4 = r1.<com.android.server.AssetAtlasService$Configuration: int flags>;

        specialinvoke $r16.<android.graphics.Atlas: void <init>(android.graphics.Atlas$Type,int,int,int)>($r18, $i5, $i6, $i4);

        r2 = $r16;

        $r17 = r0.<com.android.server.AssetAtlasService$Renderer: com.android.server.AssetAtlasService this$0>;

        $r19 = staticinvoke <com.android.server.AssetAtlasService: android.view.GraphicBuffer access$200(com.android.server.AssetAtlasService)>($r17);

        $i7 = r1.<com.android.server.AssetAtlasService$Configuration: int count>;

        $z0 = specialinvoke r0.<com.android.server.AssetAtlasService$Renderer: boolean renderAtlas(android.view.GraphicBuffer,android.graphics.Atlas,int)>($r19, r2, $i7);

        if $z0 == 0 goto label1;

        $r21 = r0.<com.android.server.AssetAtlasService$Renderer: com.android.server.AssetAtlasService this$0>;

        $r20 = staticinvoke <com.android.server.AssetAtlasService: java.util.concurrent.atomic.AtomicBoolean access$300(com.android.server.AssetAtlasService)>($r21);

        virtualinvoke $r20.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

     label1:
        return;
    }
}
