public class org.apache.xpath.patterns.FunctionPattern extends org.apache.xpath.patterns.StepPattern
{
    static final long serialVersionUID;
    org.apache.xpath.Expression m_functionExpr;

    public void <init>(org.apache.xpath.Expression, int, int)
    {
        org.apache.xpath.patterns.FunctionPattern r0;
        org.apache.xpath.Expression r1;
        int i0, i1;

        r0 := @this: org.apache.xpath.patterns.FunctionPattern;

        r1 := @parameter0: org.apache.xpath.Expression;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<org.apache.xpath.patterns.StepPattern: void <init>(int,java.lang.String,java.lang.String,int,int)>(0, null, null, i0, i1);

        r0.<org.apache.xpath.patterns.FunctionPattern: org.apache.xpath.Expression m_functionExpr> = r1;

        return;
    }

    public final void calcScore()
    {
        org.apache.xpath.patterns.FunctionPattern r0;
        org.apache.xpath.objects.XNumber $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xpath.patterns.FunctionPattern;

        $r1 = <org.apache.xpath.patterns.FunctionPattern: org.apache.xpath.objects.XNumber SCORE_OTHER>;

        r0.<org.apache.xpath.patterns.FunctionPattern: org.apache.xpath.objects.XNumber m_score> = $r1;

        $r2 = r0.<org.apache.xpath.patterns.FunctionPattern: java.lang.String m_targetString>;

        if $r2 != null goto label1;

        virtualinvoke r0.<org.apache.xpath.patterns.FunctionPattern: void calcTargetString()>();

     label1:
        return;
    }

    protected void callSubtreeVisitors(org.apache.xpath.XPathVisitor)
    {
        org.apache.xpath.patterns.FunctionPattern r0;
        org.apache.xpath.XPathVisitor r1;
        org.apache.xpath.patterns.FunctionPattern$FunctionOwner $r2;
        org.apache.xpath.Expression $r3;

        r0 := @this: org.apache.xpath.patterns.FunctionPattern;

        r1 := @parameter0: org.apache.xpath.XPathVisitor;

        $r3 = r0.<org.apache.xpath.patterns.FunctionPattern: org.apache.xpath.Expression m_functionExpr>;

        $r2 = new org.apache.xpath.patterns.FunctionPattern$FunctionOwner;

        specialinvoke $r2.<org.apache.xpath.patterns.FunctionPattern$FunctionOwner: void <init>(org.apache.xpath.patterns.FunctionPattern)>(r0);

        virtualinvoke $r3.<org.apache.xpath.Expression: void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)>($r2, r1);

        specialinvoke r0.<org.apache.xpath.patterns.StepPattern: void callSubtreeVisitors(org.apache.xpath.XPathVisitor)>(r1);

        return;
    }

    public org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.patterns.FunctionPattern r0;
        org.apache.xpath.XPathContext r1;
        int i0, i1;
        org.apache.xml.dtm.DTMIterator r2;
        org.apache.xpath.objects.XNumber r3, $r5;
        org.apache.xpath.Expression $r4;

        r0 := @this: org.apache.xpath.patterns.FunctionPattern;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        i0 = virtualinvoke r1.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        $r4 = r0.<org.apache.xpath.patterns.FunctionPattern: org.apache.xpath.Expression m_functionExpr>;

        r2 = virtualinvoke $r4.<org.apache.xpath.Expression: org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)>(r1, i0);

        r3 = <org.apache.xpath.patterns.FunctionPattern: org.apache.xpath.objects.XNumber SCORE_NONE>;

        if r2 == null goto label4;

     label1:
        i1 = interfaceinvoke r2.<org.apache.xml.dtm.DTMIterator: int nextNode()>();

        if -1 == i1 goto label3;

        if i1 != i0 goto label5;

        r3 = <org.apache.xpath.patterns.FunctionPattern: org.apache.xpath.objects.XNumber SCORE_OTHER>;

     label2:
        $r5 = <org.apache.xpath.patterns.FunctionPattern: org.apache.xpath.objects.XNumber SCORE_OTHER>;

        if r3 != $r5 goto label1;

     label3:
        interfaceinvoke r2.<org.apache.xml.dtm.DTMIterator: void detach()>();

     label4:
        return r3;

     label5:
        r3 = <org.apache.xpath.patterns.FunctionPattern: org.apache.xpath.objects.XNumber SCORE_NONE>;

        goto label2;
    }

    public org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext, int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.patterns.FunctionPattern r0;
        org.apache.xpath.XPathContext r1;
        int i0, i1;
        org.apache.xml.dtm.DTMIterator r2;
        org.apache.xpath.objects.XNumber r3, $r5;
        org.apache.xpath.Expression $r4;

        r0 := @this: org.apache.xpath.patterns.FunctionPattern;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        i0 := @parameter1: int;

        $r4 = r0.<org.apache.xpath.patterns.FunctionPattern: org.apache.xpath.Expression m_functionExpr>;

        r2 = virtualinvoke $r4.<org.apache.xpath.Expression: org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)>(r1, i0);

        r3 = <org.apache.xpath.patterns.FunctionPattern: org.apache.xpath.objects.XNumber SCORE_NONE>;

        if r2 == null goto label3;

     label1:
        i1 = interfaceinvoke r2.<org.apache.xml.dtm.DTMIterator: int nextNode()>();

        if -1 == i1 goto label3;

        if i1 != i0 goto label4;

        r3 = <org.apache.xpath.patterns.FunctionPattern: org.apache.xpath.objects.XNumber SCORE_OTHER>;

     label2:
        $r5 = <org.apache.xpath.patterns.FunctionPattern: org.apache.xpath.objects.XNumber SCORE_OTHER>;

        if r3 != $r5 goto label1;

     label3:
        interfaceinvoke r2.<org.apache.xml.dtm.DTMIterator: void detach()>();

        return r3;

     label4:
        r3 = <org.apache.xpath.patterns.FunctionPattern: org.apache.xpath.objects.XNumber SCORE_NONE>;

        goto label2;
    }

    public org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext, int, org.apache.xml.dtm.DTM, int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.patterns.FunctionPattern r0;
        org.apache.xpath.XPathContext r1;
        int i0, i1, i2;
        org.apache.xml.dtm.DTM r2;
        org.apache.xml.dtm.DTMIterator r3;
        org.apache.xpath.objects.XNumber r4, $r6;
        org.apache.xpath.Expression $r5;

        r0 := @this: org.apache.xpath.patterns.FunctionPattern;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.xml.dtm.DTM;

        i1 := @parameter3: int;

        $r5 = r0.<org.apache.xpath.patterns.FunctionPattern: org.apache.xpath.Expression m_functionExpr>;

        r3 = virtualinvoke $r5.<org.apache.xpath.Expression: org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)>(r1, i0);

        r4 = <org.apache.xpath.patterns.FunctionPattern: org.apache.xpath.objects.XNumber SCORE_NONE>;

        if r3 == null goto label4;

     label1:
        i2 = interfaceinvoke r3.<org.apache.xml.dtm.DTMIterator: int nextNode()>();

        if -1 == i2 goto label3;

        if i2 != i0 goto label5;

        r4 = <org.apache.xpath.patterns.FunctionPattern: org.apache.xpath.objects.XNumber SCORE_OTHER>;

     label2:
        $r6 = <org.apache.xpath.patterns.FunctionPattern: org.apache.xpath.objects.XNumber SCORE_OTHER>;

        if r4 != $r6 goto label1;

     label3:
        interfaceinvoke r3.<org.apache.xml.dtm.DTMIterator: void detach()>();

     label4:
        return r4;

     label5:
        r4 = <org.apache.xpath.patterns.FunctionPattern: org.apache.xpath.objects.XNumber SCORE_NONE>;

        goto label2;
    }

    public void fixupVariables(java.util.Vector, int)
    {
        org.apache.xpath.patterns.FunctionPattern r0;
        java.util.Vector r1;
        int i0;
        org.apache.xpath.Expression $r2;

        r0 := @this: org.apache.xpath.patterns.FunctionPattern;

        r1 := @parameter0: java.util.Vector;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.xpath.patterns.StepPattern: void fixupVariables(java.util.Vector,int)>(r1, i0);

        $r2 = r0.<org.apache.xpath.patterns.FunctionPattern: org.apache.xpath.Expression m_functionExpr>;

        virtualinvoke $r2.<org.apache.xpath.Expression: void fixupVariables(java.util.Vector,int)>(r1, i0);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.xpath.patterns.FunctionPattern: long serialVersionUID> = -5426793413091209944L;

        return;
    }
}
