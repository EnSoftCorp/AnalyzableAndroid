public class java.lang.reflect.Proxy extends java.lang.Object implements java.io.Serializable
{
    static final boolean $assertionsDisabled;
    private static int NextClassNameIndex;
    private static final java.util.Map loaderCache;
    private static final java.util.Map proxyCache;
    private static final long serialVersionUID;
    protected java.lang.reflect.InvocationHandler h;

    static void <clinit>()
    {
        boolean z0, $z1;
        java.lang.Class $r0;
        java.util.WeakHashMap $r1, $r2;

        <java.lang.reflect.Proxy: long serialVersionUID> = -2222568056686623797L;

        $r0 = class "java/lang/reflect/Proxy";

        $z1 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z1 != 0 goto label2;

        z0 = 1;

     label1:
        <java.lang.reflect.Proxy: boolean $assertionsDisabled> = z0;

        $r1 = new java.util.WeakHashMap;

        specialinvoke $r1.<java.util.WeakHashMap: void <init>()>();

        <java.lang.reflect.Proxy: java.util.Map loaderCache> = $r1;

        $r2 = new java.util.WeakHashMap;

        specialinvoke $r2.<java.util.WeakHashMap: void <init>()>();

        <java.lang.reflect.Proxy: java.util.Map proxyCache> = $r2;

        <java.lang.reflect.Proxy: int NextClassNameIndex> = 0;

        return;

     label2:
        z0 = 0;

        goto label1;

        return;
    }

    private void <init>()
    {
        java.lang.reflect.Proxy r0;

        r0 := @this: java.lang.reflect.Proxy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected void <init>(java.lang.reflect.InvocationHandler)
    {
        java.lang.reflect.Proxy r0;
        java.lang.reflect.InvocationHandler r1;

        r0 := @this: java.lang.reflect.Proxy;

        r1 := @parameter0: java.lang.reflect.InvocationHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.lang.reflect.Proxy: java.lang.reflect.InvocationHandler h> = r1;

        return;
    }

    private static native void constructorPrototype(java.lang.reflect.InvocationHandler);

    private static native java.lang.Class generateProxy(java.lang.String, java.lang.Class[], java.lang.ClassLoader);

    public static java.lang.reflect.InvocationHandler getInvocationHandler(java.lang.Object) throws java.lang.IllegalArgumentException
    {
        java.lang.Object r0;
        java.lang.Class $r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;
        java.lang.reflect.Proxy $r3;
        java.lang.reflect.InvocationHandler $r4;

        r0 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = staticinvoke <java.lang.reflect.Proxy: boolean isProxyClass(java.lang.Class)>($r1);

        if $z0 == 0 goto label1;

        $r3 = (java.lang.reflect.Proxy) r0;

        $r4 = $r3.<java.lang.reflect.Proxy: java.lang.reflect.InvocationHandler h>;

        return $r4;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("not a proxy instance");

        throw $r2;
    }

    public static transient java.lang.Class getProxyClass(java.lang.ClassLoader, java.lang.Class[]) throws java.lang.IllegalArgumentException
    {
        java.lang.ClassLoader r0, r20;
        java.lang.Class[] r1;
        java.lang.String r2, r8, r10, r13, r18, r22, $r44, $r49, $r59, $r69, $r75, $r81, $r90, $r95;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10;
        java.util.Map r3, r5, r6, r16, $r24, $r31, $r40, $r53;
        java.lang.Throwable r4, r15, $r88, $r94;
        java.lang.StringBuilder r7, r11, $r23, $r28, $r29, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r41, $r42, $r43, $r45, $r48, $r50, $r51, $r52, $r58, $r63, $r64, $r66, $r71, $r72, $r74, $r77, $r78, $r79, $r82, $r83, $r84, $r85, $r91, $r92, $r93;
        java.lang.ref.WeakReference r9, r14, $r46;
        java.lang.Class r12, r19, $r57, $r60, $r68, $r76;
        java.lang.AssertionError r17, $r30;
        java.lang.Object $r25, $r26, $r27;
        boolean $z0, $z1, $z2, $z3;
        java.util.HashMap $r62;
        java.lang.IllegalArgumentException $r65, $r67, $r70, $r73, $r86;
        java.lang.NullPointerException $r80, $r89;
        java.lang.ClassNotFoundException $r87;

        r0 := @parameter0: java.lang.ClassLoader;

        r1 := @parameter1: java.lang.Class[];

        if r1 != null goto label01;

        $r89 = new java.lang.NullPointerException;

        specialinvoke $r89.<java.lang.NullPointerException: void <init>(java.lang.String)>("interfaces == null");

        throw $r89;

     label01:
        r2 = null;

        i0 = 0;

        i1 = lengthof r1;

     label02:
        if i0 >= i1 goto label15;

        r19 = r1[i0];

        if r19 != null goto label03;

        $r80 = new java.lang.NullPointerException;

        $r79 = new java.lang.StringBuilder;

        specialinvoke $r79.<java.lang.StringBuilder: void <init>()>();

        $r78 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("interfaces[");

        $r77 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r91 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] == null");

        $r90 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r80.<java.lang.NullPointerException: void <init>(java.lang.String)>($r90);

        throw $r80;

     label03:
        r18 = virtualinvoke r19.<java.lang.Class: java.lang.String getName()>();

        $z2 = virtualinvoke r19.<java.lang.Class: boolean isInterface()>();

        if $z2 != 0 goto label04;

        $r70 = new java.lang.IllegalArgumentException;

        $r84 = new java.lang.StringBuilder;

        specialinvoke $r84.<java.lang.StringBuilder: void <init>()>();

        $r83 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r82 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not an interface");

        $r81 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r70.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r81);

        throw $r70;

     label04:
        r20 = virtualinvoke r19.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        if r0 == r20 goto label07;

     label05:
        $r76 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(r18, 0, r0);

        if r19 == $r76 goto label07;

        $r73 = new java.lang.IllegalArgumentException;

        $r74 = new java.lang.StringBuilder;

        specialinvoke $r74.<java.lang.StringBuilder: void <init>()>();

        $r71 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not visible from class loader");

        $r69 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r73.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r69);

        throw $r73;

     label06:
        $r87 := @caughtexception;

        $r86 = new java.lang.IllegalArgumentException;

        $r85 = new java.lang.StringBuilder;

        specialinvoke $r85.<java.lang.StringBuilder: void <init>()>();

        $r93 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r92 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not visible from class loader");

        $r95 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r86.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r95);

        throw $r86;

     label07:
        i5 = i0 + 1;

     label08:
        if i5 >= i1 goto label10;

        $r68 = r1[i5];

        if r19 != $r68 goto label09;

        $r65 = new java.lang.IllegalArgumentException;

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r63 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" appears more than once");

        $r75 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r65.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r75);

        throw $r65;

     label09:
        i5 = i5 + 1;

        goto label08;

     label10:
        $i10 = virtualinvoke r19.<java.lang.Class: int getModifiers()>();

        $z1 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($i10);

        if $z1 != 0 goto label12;

        i6 = virtualinvoke r18.<java.lang.String: int lastIndexOf(int)>(46);

        if i6 != -1 goto label13;

        r22 = "";

     label11:
        if r2 != null goto label14;

        r2 = r22;

     label12:
        i0 = i0 + 1;

        goto label02;

     label13:
        r22 = virtualinvoke r18.<java.lang.String: java.lang.String substring(int,int)>(0, i6);

        goto label11;

     label14:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r22);

        if $z3 != 0 goto label12;

        $r67 = new java.lang.IllegalArgumentException;

        specialinvoke $r67.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("non-public interfaces must be in the same package");

        throw $r67;

     label15:
        r3 = <java.lang.reflect.Proxy: java.util.Map loaderCache>;

        entermonitor r3;

     label16:
        $r24 = <java.lang.reflect.Proxy: java.util.Map loaderCache>;

        $r25 = interfaceinvoke $r24.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r5 = (java.util.Map) $r25;

     label17:
        if r5 != null goto label19;

     label18:
        r6 = <java.lang.reflect.Proxy: java.util.Map loaderCache>;

        $r62 = new java.util.HashMap;

        specialinvoke $r62.<java.util.HashMap: void <init>()>();

        r5 = $r62;

        interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r5);

     label19:
        $i7 = lengthof r1;

        if $i7 != 1 goto label31;

        $r57 = r1[0];

        r10 = virtualinvoke $r57.<java.lang.Class: java.lang.String getName()>();

     label20:
        $r27 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10);

        r9 = (java.lang.ref.WeakReference) $r27;

     label21:
        if r9 != null goto label45;

     label22:
        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        r11 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("$Proxy");

        i4 = <java.lang.reflect.Proxy: int NextClassNameIndex>;

        $i8 = i4 + 1;

        <java.lang.reflect.Proxy: int NextClassNameIndex> = $i8;

        $r48 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        r13 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

     label23:
        if r2 == null goto label25;

     label24:
        $i9 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i9 <= 0 goto label25;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r58 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        r13 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

     label25:
        if r0 != null goto label27;

     label26:
        r0 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();

     label27:
        $r49 = virtualinvoke r13.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        r12 = staticinvoke <java.lang.reflect.Proxy: java.lang.Class generateProxy(java.lang.String,java.lang.Class[],java.lang.ClassLoader)>($r49, r1, r0);

        $r46 = new java.lang.ref.WeakReference;

        specialinvoke $r46.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r12);

        r14 = $r46;

        interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r10, r14);

        r16 = <java.lang.reflect.Proxy: java.util.Map proxyCache>;

        entermonitor r16;

     label28:
        $r53 = <java.lang.reflect.Proxy: java.util.Map proxyCache>;

        interfaceinvoke $r53.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r12, "");

        exitmonitor r16;

     label29:
        exitmonitor r3;

     label30:
        return r12;

     label31:
        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        r7 = $r23;

     label32:
        i2 = 0;

     label33:
        i3 = lengthof r1;

     label34:
        if i2 >= i3 goto label37;

     label35:
        $r60 = r1[i2];

        $r59 = virtualinvoke $r60.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label36:
        i2 = i2 + 1;

        goto label34;

     label37:
        r8 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label38:
        r10 = r8;

        goto label20;

     label39:
        $r88 := @caughtexception;

        r15 = $r88;

     label40:
        exitmonitor r16;

     label41:
        throw r15;

     label42:
        $r94 := @caughtexception;

        r4 = $r94;

     label43:
        exitmonitor r3;

     label44:
        throw r4;

     label45:
        $r26 = virtualinvoke r9.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r12 = (java.lang.Class) $r26;

        $z0 = <java.lang.reflect.Proxy: boolean $assertionsDisabled>;

        if $z0 != 0 goto label29;

     label46:
        if r12 != null goto label29;

     label47:
        $r30 = new java.lang.AssertionError;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\ninterfaceKey=\"");

        $r34 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nloaderCache=\"");

        $r31 = <java.lang.reflect.Proxy: java.util.Map loaderCache>;

        $r38 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r31);

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nintfCache=\"");

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r42 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nproxyCache=\"");

        $r40 = <java.lang.reflect.Proxy: java.util.Map proxyCache>;

        $r39 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r40);

        $r45 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r30.<java.lang.AssertionError: void <init>(java.lang.Object)>($r44);

        r17 = $r30;

        throw r17;

     label48:
        nop;

        catch java.lang.ClassNotFoundException from label05 to label06 with label06;
        catch java.lang.Throwable from label16 to label17 with label42;
        catch java.lang.Throwable from label18 to label19 with label42;
        catch java.lang.Throwable from label19 to label20 with label42;
        catch java.lang.Throwable from label20 to label21 with label42;
        catch java.lang.Throwable from label22 to label23 with label42;
        catch java.lang.Throwable from label24 to label25 with label42;
        catch java.lang.Throwable from label26 to label27 with label42;
        catch java.lang.Throwable from label27 to label28 with label42;
        catch java.lang.Throwable from label28 to label29 with label39;
        catch java.lang.Throwable from label29 to label30 with label42;
        catch java.lang.Throwable from label31 to label32 with label42;
        catch java.lang.Throwable from label33 to label34 with label42;
        catch java.lang.Throwable from label35 to label36 with label42;
        catch java.lang.Throwable from label37 to label38 with label42;
        catch java.lang.Throwable from label40 to label41 with label39;
        catch java.lang.Throwable from label41 to label42 with label42;
        catch java.lang.Throwable from label43 to label44 with label42;
        catch java.lang.Throwable from label45 to label46 with label42;
        catch java.lang.Throwable from label47 to label48 with label42;
    }

    public static boolean isProxyClass(java.lang.Class)
    {
        java.lang.Class r0;
        java.util.Map r1, $r3;
        java.lang.Throwable r2, $r5;
        boolean z0;
        java.lang.NullPointerException $r4;

        r0 := @parameter0: java.lang.Class;

        if r0 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("cl == null");

        throw $r4;

     label1:
        r1 = <java.lang.reflect.Proxy: java.util.Map proxyCache>;

        entermonitor r1;

     label2:
        $r3 = <java.lang.reflect.Proxy: java.util.Map proxyCache>;

        z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r0);

        exitmonitor r1;

     label3:
        return z0;

     label4:
        $r5 := @caughtexception;

        r2 = $r5;

     label5:
        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static java.lang.Object newProxyInstance(java.lang.ClassLoader, java.lang.Class[], java.lang.reflect.InvocationHandler) throws java.lang.IllegalArgumentException
    {
        java.lang.ClassLoader r0;
        java.lang.Class[] r1, $r10;
        java.lang.reflect.InvocationHandler r2;
        java.lang.reflect.InvocationTargetException r3, $r33;
        java.lang.Throwable r4, $r18, $r24, $r30, $r37;
        java.lang.InstantiationException r5, $r19;
        java.lang.IllegalAccessException r6, $r14;
        java.lang.NoSuchMethodException r7, $r25;
        java.lang.Object r8;
        java.lang.Class $r9;
        java.lang.reflect.Constructor $r11;
        java.lang.Object[] $r12;
        java.lang.NullPointerException $r13;
        java.lang.String $r15, $r21, $r27, $r36;
        java.lang.InternalError $r16, $r17, $r20, $r22, $r23, $r26, $r28, $r29, $r31, $r32, $r34, $r35;

        r0 := @parameter0: java.lang.ClassLoader;

        r1 := @parameter1: java.lang.Class[];

        r2 := @parameter2: java.lang.reflect.InvocationHandler;

        if r2 != null goto label1;

        $r13 = new java.lang.NullPointerException;

        specialinvoke $r13.<java.lang.NullPointerException: void <init>(java.lang.String)>("h == null");

        throw $r13;

     label1:
        $r9 = staticinvoke <java.lang.reflect.Proxy: java.lang.Class getProxyClass(java.lang.ClassLoader,java.lang.Class[])>(r0, r1);

        $r10 = newarray (java.lang.Class)[1];

        $r10[0] = class "java/lang/reflect/InvocationHandler";

        $r11 = virtualinvoke $r9.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r10);

        $r12 = newarray (java.lang.Object)[1];

        $r12[0] = r2;

        r8 = virtualinvoke $r11.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r12);

     label2:
        return r8;

     label3:
        $r25 := @caughtexception;

        r7 = $r25;

        $r28 = new java.lang.InternalError;

        $r27 = virtualinvoke r7.<java.lang.NoSuchMethodException: java.lang.String toString()>();

        specialinvoke $r28.<java.lang.InternalError: void <init>(java.lang.String)>($r27);

        $r30 = virtualinvoke $r28.<java.lang.InternalError: java.lang.Throwable initCause(java.lang.Throwable)>(r7);

        $r29 = (java.lang.InternalError) $r30;

        $r32 = (java.lang.InternalError) $r29;

        throw $r32;

     label4:
        $r14 := @caughtexception;

        r6 = $r14;

        $r16 = new java.lang.InternalError;

        $r15 = virtualinvoke r6.<java.lang.IllegalAccessException: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.InternalError: void <init>(java.lang.String)>($r15);

        $r18 = virtualinvoke $r16.<java.lang.InternalError: java.lang.Throwable initCause(java.lang.Throwable)>(r6);

        $r17 = (java.lang.InternalError) $r18;

        $r20 = (java.lang.InternalError) $r17;

        throw $r20;

     label5:
        $r19 := @caughtexception;

        r5 = $r19;

        $r22 = new java.lang.InternalError;

        $r21 = virtualinvoke r5.<java.lang.InstantiationException: java.lang.String toString()>();

        specialinvoke $r22.<java.lang.InternalError: void <init>(java.lang.String)>($r21);

        $r24 = virtualinvoke $r22.<java.lang.InternalError: java.lang.Throwable initCause(java.lang.Throwable)>(r5);

        $r23 = (java.lang.InternalError) $r24;

        $r26 = (java.lang.InternalError) $r23;

        throw $r26;

     label6:
        $r33 := @caughtexception;

        r3 = $r33;

        r4 = virtualinvoke r3.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();

        $r31 = new java.lang.InternalError;

        $r36 = virtualinvoke r4.<java.lang.Throwable: java.lang.String toString()>();

        specialinvoke $r31.<java.lang.InternalError: void <init>(java.lang.String)>($r36);

        $r37 = virtualinvoke $r31.<java.lang.InternalError: java.lang.Throwable initCause(java.lang.Throwable)>(r4);

        $r34 = (java.lang.InternalError) $r37;

        $r35 = (java.lang.InternalError) $r34;

        throw $r35;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label4;
        catch java.lang.InstantiationException from label1 to label2 with label5;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label6;
    }
}
