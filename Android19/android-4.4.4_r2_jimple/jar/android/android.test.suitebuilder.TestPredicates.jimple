public class android.test.suitebuilder.TestPredicates extends java.lang.Object
{
    public static final com.android.internal.util.Predicate REJECT_INSTRUMENTATION;
    public static final com.android.internal.util.Predicate REJECT_SUPPRESSED;
    public static final com.android.internal.util.Predicate SELECT_INSTRUMENTATION;
    public static final com.android.internal.util.Predicate SELECT_LARGE;
    public static final com.android.internal.util.Predicate SELECT_MEDIUM;
    public static final com.android.internal.util.Predicate SELECT_SMALL;
    public static final com.android.internal.util.Predicate SELECT_SMOKE;

    static void <clinit>()
    {
        android.test.suitebuilder.AssignableFrom $r0;
        com.android.internal.util.Predicate $r1, $r2, $r8;
        android.test.suitebuilder.annotation.HasAnnotation $r3, $r4, $r5, $r6, $r7;

        $r0 = new android.test.suitebuilder.AssignableFrom;

        specialinvoke $r0.<android.test.suitebuilder.AssignableFrom: void <init>(java.lang.Class)>(class "android/test/InstrumentationTestCase");

        <android.test.suitebuilder.TestPredicates: com.android.internal.util.Predicate SELECT_INSTRUMENTATION> = $r0;

        $r1 = <android.test.suitebuilder.TestPredicates: com.android.internal.util.Predicate SELECT_INSTRUMENTATION>;

        $r2 = staticinvoke <com.android.internal.util.Predicates: com.android.internal.util.Predicate not(com.android.internal.util.Predicate)>($r1);

        <android.test.suitebuilder.TestPredicates: com.android.internal.util.Predicate REJECT_INSTRUMENTATION> = $r2;

        $r3 = new android.test.suitebuilder.annotation.HasAnnotation;

        specialinvoke $r3.<android.test.suitebuilder.annotation.HasAnnotation: void <init>(java.lang.Class)>(class "android/test/suitebuilder/annotation/Smoke");

        <android.test.suitebuilder.TestPredicates: com.android.internal.util.Predicate SELECT_SMOKE> = $r3;

        $r4 = new android.test.suitebuilder.annotation.HasAnnotation;

        specialinvoke $r4.<android.test.suitebuilder.annotation.HasAnnotation: void <init>(java.lang.Class)>(class "android/test/suitebuilder/annotation/SmallTest");

        <android.test.suitebuilder.TestPredicates: com.android.internal.util.Predicate SELECT_SMALL> = $r4;

        $r5 = new android.test.suitebuilder.annotation.HasAnnotation;

        specialinvoke $r5.<android.test.suitebuilder.annotation.HasAnnotation: void <init>(java.lang.Class)>(class "android/test/suitebuilder/annotation/MediumTest");

        <android.test.suitebuilder.TestPredicates: com.android.internal.util.Predicate SELECT_MEDIUM> = $r5;

        $r6 = new android.test.suitebuilder.annotation.HasAnnotation;

        specialinvoke $r6.<android.test.suitebuilder.annotation.HasAnnotation: void <init>(java.lang.Class)>(class "android/test/suitebuilder/annotation/LargeTest");

        <android.test.suitebuilder.TestPredicates: com.android.internal.util.Predicate SELECT_LARGE> = $r6;

        $r7 = new android.test.suitebuilder.annotation.HasAnnotation;

        specialinvoke $r7.<android.test.suitebuilder.annotation.HasAnnotation: void <init>(java.lang.Class)>(class "android/test/suitebuilder/annotation/Suppress");

        $r8 = staticinvoke <com.android.internal.util.Predicates: com.android.internal.util.Predicate not(com.android.internal.util.Predicate)>($r7);

        <android.test.suitebuilder.TestPredicates: com.android.internal.util.Predicate REJECT_SUPPRESSED> = $r8;

        return;
    }

    public void <init>()
    {
        android.test.suitebuilder.TestPredicates r0;

        r0 := @this: android.test.suitebuilder.TestPredicates;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
}
