class android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher extends java.lang.Object
{
    private static final int MAX_ACCESSIBILITY_NODE_INFO_BATCH_SIZE;
    private final java.util.ArrayList mTempViewList;
    final android.view.AccessibilityInteractionController this$0;

    private void <init>(android.view.AccessibilityInteractionController)
    {
        android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher r0;
        android.view.AccessibilityInteractionController r1;
        java.util.ArrayList $r2;

        r0 := @this: android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher;

        r1 := @parameter0: android.view.AccessibilityInteractionController;

        r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: android.view.AccessibilityInteractionController this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: java.util.ArrayList mTempViewList> = $r2;

        return;
    }

    void <init>(android.view.AccessibilityInteractionController, android.view.AccessibilityInteractionController$1)
    {
        android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher r0;
        android.view.AccessibilityInteractionController r1;
        android.view.AccessibilityInteractionController$1 r2;

        r0 := @this: android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher;

        r1 := @parameter0: android.view.AccessibilityInteractionController;

        r2 := @parameter1: android.view.AccessibilityInteractionController$1;

        specialinvoke r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void <init>(android.view.AccessibilityInteractionController)>(r1);

        return;
    }

    private void prefetchDescendantsOfRealNode(android.view.View, java.util.List)
    {
        android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher r0;
        android.view.View r1, r6, r11;
        java.util.List r2;
        java.util.HashMap r3, $r14;
        java.util.ArrayList r4;
        java.lang.Throwable r5, $r24;
        int i0, i1, i2, $i3;
        android.view.accessibility.AccessibilityNodeProvider r7, $r18;
        android.view.accessibility.AccessibilityNodeInfo r8, r9, r13;
        java.util.Iterator r10;
        java.util.Map$Entry r12;
        boolean $z0, $z1, $z2;
        java.util.Set $r15;
        java.lang.Object $r16, $r17, $r19, $r21;
        android.view.AccessibilityInteractionController $r20;

        r0 := @this: android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: java.util.List;

        $z0 = r1 instanceof android.view.ViewGroup;

        if $z0 != 0 goto label02;

     label01:
        return;

     label02:
        $r14 = new java.util.HashMap;

        specialinvoke $r14.<java.util.HashMap: void <init>()>();

        r3 = $r14;

        r4 = r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: java.util.ArrayList mTempViewList>;

        virtualinvoke r4.<java.util.ArrayList: void clear()>();

     label03:
        virtualinvoke r1.<android.view.View: void addChildrenForAccessibility(java.util.ArrayList)>(r4);

        i0 = virtualinvoke r4.<java.util.ArrayList: int size()>();

     label04:
        i1 = 0;

     label05:
        if i1 >= i0 goto label19;

     label06:
        i2 = interfaceinvoke r2.<java.util.List: int size()>();

     label07:
        if i2 < 50 goto label08;

        virtualinvoke r4.<java.util.ArrayList: void clear()>();

        return;

     label08:
        $r21 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r6 = (android.view.View) $r21;

        $r20 = r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: android.view.AccessibilityInteractionController this$0>;

        $z2 = staticinvoke <android.view.AccessibilityInteractionController: boolean access$200(android.view.AccessibilityInteractionController,android.view.View)>($r20, r6);

        if $z2 == 0 goto label22;

        r7 = virtualinvoke r6.<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>();

     label09:
        if r7 != null goto label14;

     label10:
        r8 = virtualinvoke r6.<android.view.View: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo()>();

     label11:
        if r8 == null goto label22;

     label12:
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r8);

        virtualinvoke r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, null);

     label13:
        goto label22;

     label14:
        r9 = virtualinvoke r7.<android.view.accessibility.AccessibilityNodeProvider: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)>(-1);

     label15:
        if r9 == null goto label22;

     label16:
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r9);

        virtualinvoke r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r9);

     label17:
        goto label22;

     label18:
        $r24 := @caughtexception;

        r5 = $r24;

        virtualinvoke r4.<java.util.ArrayList: void clear()>();

        throw r5;

     label19:
        virtualinvoke r4.<java.util.ArrayList: void clear()>();

        $i3 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i3 >= 50 goto label01;

        $r15 = virtualinvoke r3.<java.util.HashMap: java.util.Set entrySet()>();

        r10 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();

     label20:
        $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label01;

        $r17 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (java.util.Map$Entry) $r17;

        $r16 = interfaceinvoke r12.<java.util.Map$Entry: java.lang.Object getKey()>();

        r11 = (android.view.View) $r16;

        $r19 = interfaceinvoke r12.<java.util.Map$Entry: java.lang.Object getValue()>();

        r13 = (android.view.accessibility.AccessibilityNodeInfo) $r19;

        if r13 != null goto label21;

        specialinvoke r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void prefetchDescendantsOfRealNode(android.view.View,java.util.List)>(r11, r2);

        goto label20;

     label21:
        $r18 = virtualinvoke r11.<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>();

        specialinvoke r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void prefetchDescendantsOfVirtualNode(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeProvider,java.util.List)>(r13, $r18, r2);

        goto label20;

     label22:
        i1 = i1 + 1;

        goto label05;

        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label06 to label07 with label18;
        catch java.lang.Throwable from label08 to label09 with label18;
        catch java.lang.Throwable from label10 to label11 with label18;
        catch java.lang.Throwable from label12 to label13 with label18;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
    }

    private void prefetchDescendantsOfVirtualNode(android.view.accessibility.AccessibilityNodeInfo, android.view.accessibility.AccessibilityNodeProvider, java.util.List)
    {
        android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher r0;
        android.view.accessibility.AccessibilityNodeInfo r1, r5, $r7;
        android.view.accessibility.AccessibilityNodeProvider r2;
        java.util.List r3;
        android.util.SparseLongArray r4;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.Object $r6;
        long $l10;

        r0 := @this: android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        r2 := @parameter1: android.view.accessibility.AccessibilityNodeProvider;

        r3 := @parameter2: java.util.List;

        r4 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: android.util.SparseLongArray getChildNodeIds()>();

        i0 = interfaceinvoke r3.<java.util.List: int size()>();

        i1 = virtualinvoke r4.<android.util.SparseLongArray: int size()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label5;

        $i8 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i8 < 50 goto label3;

     label2:
        return;

     label3:
        $l10 = virtualinvoke r4.<android.util.SparseLongArray: long get(int)>(i2);

        $i9 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)>($l10);

        r5 = virtualinvoke r2.<android.view.accessibility.AccessibilityNodeProvider: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)>($i9);

        if r5 == null goto label4;

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r5);

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        $i5 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i5 >= 50 goto label2;

        $i6 = interfaceinvoke r3.<java.util.List: int size()>();

        i3 = $i6 - i0;

        i4 = 0;

     label6:
        if i4 >= i3 goto label2;

        $i7 = i0 + i4;

        $r6 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>($i7);

        $r7 = (android.view.accessibility.AccessibilityNodeInfo) $r6;

        specialinvoke r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void prefetchDescendantsOfVirtualNode(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeProvider,java.util.List)>($r7, r2, r3);

        i4 = i4 + 1;

        goto label6;
    }

    private void prefetchPredecessorsOfRealNode(android.view.View, java.util.List)
    {
        android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher r0;
        android.view.View r1, $r5;
        java.util.List r2;
        android.view.ViewParent r3;
        android.view.accessibility.AccessibilityNodeInfo r4;
        boolean $z0;
        int $i0;

        r0 := @this: android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: java.util.List;

        r3 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParentForAccessibility()>();

     label1:
        $z0 = r3 instanceof android.view.View;

        if $z0 == 0 goto label3;

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i0 >= 50 goto label3;

        $r5 = (android.view.View) r3;

        r4 = virtualinvoke $r5.<android.view.View: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo()>();

        if r4 == null goto label2;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r4);

     label2:
        r3 = interfaceinvoke r3.<android.view.ViewParent: android.view.ViewParent getParentForAccessibility()>();

        goto label1;

     label3:
        return;
    }

    private void prefetchPredecessorsOfVirtualNode(android.view.accessibility.AccessibilityNodeInfo, android.view.View, android.view.accessibility.AccessibilityNodeProvider, java.util.List)
    {
        android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher r0;
        android.view.accessibility.AccessibilityNodeInfo r1, r5;
        android.view.View r2;
        android.view.accessibility.AccessibilityNodeProvider r3;
        java.util.List r4;
        long l0;
        int i1, i2, $i3, $i4;

        r0 := @this: android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.view.accessibility.AccessibilityNodeProvider;

        r4 := @parameter3: java.util.List;

        l0 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: long getParentNodeId()>();

        i1 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)>(l0);

     label1:
        if i1 == -1 goto label2;

        $i3 = interfaceinvoke r4.<java.util.List: int size()>();

        if $i3 < 50 goto label3;

     label2:
        return;

     label3:
        i2 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)>(l0);

        if i2 != -1 goto label4;

        $i4 = virtualinvoke r2.<android.view.View: int getAccessibilityViewId()>();

        if i1 != $i4 goto label6;

     label4:
        r5 = virtualinvoke r3.<android.view.accessibility.AccessibilityNodeProvider: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)>(i2);

        if r5 == null goto label5;

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r5);

     label5:
        l0 = virtualinvoke r5.<android.view.accessibility.AccessibilityNodeInfo: long getParentNodeId()>();

        i1 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)>(l0);

        goto label1;

     label6:
        specialinvoke r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void prefetchPredecessorsOfRealNode(android.view.View,java.util.List)>(r2, r4);

        return;
    }

    private void prefetchSiblingsOfRealNode(android.view.View, java.util.List)
    {
        android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher r0;
        android.view.View r1, r7;
        java.util.List r2;
        android.view.ViewParent r3;
        android.view.ViewGroup r4;
        java.util.ArrayList r5;
        java.lang.Throwable r6, $r13;
        int i0, i1, i2, $i3, $i4;
        android.view.accessibility.AccessibilityNodeProvider r8;
        android.view.accessibility.AccessibilityNodeInfo r9, r10;
        boolean $z0, $z1;
        java.lang.Object $r11;
        android.view.AccessibilityInteractionController $r12;

        r0 := @this: android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: java.util.List;

        r3 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParentForAccessibility()>();

        $z0 = r3 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label06;

        r4 = (android.view.ViewGroup) r3;

        r5 = r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: java.util.ArrayList mTempViewList>;

        virtualinvoke r5.<java.util.ArrayList: void clear()>();

     label01:
        virtualinvoke r4.<android.view.ViewGroup: void addChildrenForAccessibility(java.util.ArrayList)>(r5);

        i0 = virtualinvoke r5.<java.util.ArrayList: int size()>();

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label15;

     label04:
        i2 = interfaceinvoke r2.<java.util.List: int size()>();

     label05:
        if i2 < 50 goto label07;

        virtualinvoke r5.<java.util.ArrayList: void clear()>();

     label06:
        return;

     label07:
        $r11 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r7 = (android.view.View) $r11;

        $i4 = virtualinvoke r7.<android.view.View: int getAccessibilityViewId()>();

        $i3 = virtualinvoke r1.<android.view.View: int getAccessibilityViewId()>();

        if $i4 == $i3 goto label17;

        $r12 = r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: android.view.AccessibilityInteractionController this$0>;

        $z1 = staticinvoke <android.view.AccessibilityInteractionController: boolean access$200(android.view.AccessibilityInteractionController,android.view.View)>($r12, r7);

        if $z1 == 0 goto label17;

        r8 = virtualinvoke r7.<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>();

     label08:
        if r8 != null goto label13;

     label09:
        r9 = virtualinvoke r7.<android.view.View: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo()>();

     label10:
        if r9 == null goto label17;

     label11:
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r9);

     label12:
        goto label17;

     label13:
        r10 = virtualinvoke r8.<android.view.accessibility.AccessibilityNodeProvider: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)>(-1);

     label14:
        r9 = r10;

        goto label10;

     label15:
        virtualinvoke r5.<java.util.ArrayList: void clear()>();

        return;

     label16:
        $r13 := @caughtexception;

        r6 = $r13;

        virtualinvoke r5.<java.util.ArrayList: void clear()>();

        throw r6;

     label17:
        i1 = i1 + 1;

        goto label03;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label04 to label05 with label16;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.lang.Throwable from label13 to label14 with label16;
    }

    private void prefetchSiblingsOfVirtualNode(android.view.accessibility.AccessibilityNodeInfo, android.view.View, android.view.accessibility.AccessibilityNodeProvider, java.util.List)
    {
        android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher r0;
        android.view.accessibility.AccessibilityNodeInfo r1, r5, r7;
        android.view.View r2;
        android.view.accessibility.AccessibilityNodeProvider r3;
        java.util.List r4;
        long l0, l5, $l8;
        int i1, i2, i3, i4, $i6, $i9, $i10;
        android.util.SparseLongArray r6;
        byte $b7;

        r0 := @this: android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.view.accessibility.AccessibilityNodeProvider;

        r4 := @parameter3: java.util.List;

        l0 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: long getParentNodeId()>();

        i1 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)>(l0);

        i2 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)>(l0);

        if i2 != -1 goto label1;

        $i10 = virtualinvoke r2.<android.view.View: int getAccessibilityViewId()>();

        if i1 != $i10 goto label6;

     label1:
        r5 = virtualinvoke r3.<android.view.accessibility.AccessibilityNodeProvider: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)>(i2);

        if r5 == null goto label3;

        r6 = virtualinvoke r5.<android.view.accessibility.AccessibilityNodeInfo: android.util.SparseLongArray getChildNodeIds()>();

        i3 = virtualinvoke r6.<android.util.SparseLongArray: int size()>();

        i4 = 0;

     label2:
        if i4 >= i3 goto label3;

        $i6 = interfaceinvoke r4.<java.util.List: int size()>();

        if $i6 < 50 goto label4;

     label3:
        return;

     label4:
        l5 = virtualinvoke r6.<android.util.SparseLongArray: long get(int)>(i4);

        $l8 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: long getSourceNodeId()>();

        $b7 = l5 cmp $l8;

        if $b7 == 0 goto label5;

        $i9 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)>(l5);

        r7 = virtualinvoke r3.<android.view.accessibility.AccessibilityNodeProvider: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)>($i9);

        if r7 == null goto label5;

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r7);

     label5:
        i4 = i4 + 1;

        goto label2;

     label6:
        specialinvoke r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void prefetchSiblingsOfRealNode(android.view.View,java.util.List)>(r2, r4);

        return;
    }

    public void prefetchAccessibilityNodeInfos(android.view.View, int, int, java.util.List)
    {
        android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher r0;
        android.view.View r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.util.List r2;
        android.view.accessibility.AccessibilityNodeProvider r3;
        android.view.accessibility.AccessibilityNodeInfo r4, r5;

        r0 := @this: android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.util.List;

        r3 = virtualinvoke r1.<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>();

        if r3 != null goto label4;

        r5 = virtualinvoke r1.<android.view.View: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo()>();

        if r5 == null goto label3;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r5);

        $i5 = i1 & 1;

        if $i5 == 0 goto label1;

        specialinvoke r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void prefetchPredecessorsOfRealNode(android.view.View,java.util.List)>(r1, r2);

     label1:
        $i7 = i1 & 2;

        if $i7 == 0 goto label2;

        specialinvoke r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void prefetchSiblingsOfRealNode(android.view.View,java.util.List)>(r1, r2);

     label2:
        $i6 = i1 & 4;

        if $i6 == 0 goto label3;

        specialinvoke r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void prefetchDescendantsOfRealNode(android.view.View,java.util.List)>(r1, r2);

     label3:
        return;

     label4:
        r4 = virtualinvoke r3.<android.view.accessibility.AccessibilityNodeProvider: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)>(i0);

        if r4 == null goto label3;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r4);

        $i2 = i1 & 1;

        if $i2 == 0 goto label5;

        specialinvoke r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void prefetchPredecessorsOfVirtualNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeProvider,java.util.List)>(r4, r1, r3, r2);

     label5:
        $i3 = i1 & 2;

        if $i3 == 0 goto label6;

        specialinvoke r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void prefetchSiblingsOfVirtualNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeProvider,java.util.List)>(r4, r1, r3, r2);

     label6:
        $i4 = i1 & 4;

        if $i4 == 0 goto label3;

        specialinvoke r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void prefetchDescendantsOfVirtualNode(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeProvider,java.util.List)>(r4, r3, r2);

        return;
    }

    public static void <clinit>()
    {
        <android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: int MAX_ACCESSIBILITY_NODE_INFO_BATCH_SIZE> = 50;

        return;
    }
}
