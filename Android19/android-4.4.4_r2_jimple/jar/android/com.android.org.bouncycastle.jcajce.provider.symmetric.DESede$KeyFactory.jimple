public class com.android.org.bouncycastle.jcajce.provider.symmetric.DESede$KeyFactory extends com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseSecretKeyFactory
{

    public void <init>()
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.DESede$KeyFactory r0;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.DESede$KeyFactory;

        specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseSecretKeyFactory: void <init>(java.lang.String,com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier)>("DESede", null);

        return;
    }

    protected javax.crypto.SecretKey engineGenerateSecret(java.security.spec.KeySpec) throws java.security.spec.InvalidKeySpecException
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.DESede$KeyFactory r0;
        java.security.spec.KeySpec r1;
        boolean $z0;
        javax.crypto.SecretKey $r2;
        javax.crypto.spec.SecretKeySpec $r3;
        javax.crypto.spec.DESedeKeySpec $r4;
        byte[] $r5;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.DESede$KeyFactory;

        r1 := @parameter0: java.security.spec.KeySpec;

        $z0 = r1 instanceof javax.crypto.spec.DESedeKeySpec;

        if $z0 == 0 goto label1;

        $r3 = new javax.crypto.spec.SecretKeySpec;

        $r4 = (javax.crypto.spec.DESedeKeySpec) r1;

        $r5 = virtualinvoke $r4.<javax.crypto.spec.DESedeKeySpec: byte[] getKey()>();

        specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, "DESede");

        return $r3;

     label1:
        $r2 = specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseSecretKeyFactory: javax.crypto.SecretKey engineGenerateSecret(java.security.spec.KeySpec)>(r1);

        return $r2;
    }

    protected java.security.spec.KeySpec engineGetKeySpec(javax.crypto.SecretKey, java.lang.Class) throws java.security.spec.InvalidKeySpecException
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.DESede$KeyFactory r0;
        javax.crypto.SecretKey r1;
        java.lang.Class r2, $r8, $r9;
        byte[] r3, r6, $r15;
        java.lang.Exception r4, $r19;
        javax.crypto.spec.DESedeKeySpec r5, r7, $r11, $r13;
        boolean $z0, $z1;
        java.security.spec.InvalidKeySpecException $r10, $r16, $r17, $r18;
        int $i0;
        javax.crypto.spec.SecretKeySpec $r12;
        java.lang.String $r14, $r20;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.DESede$KeyFactory;

        r1 := @parameter0: javax.crypto.SecretKey;

        r2 := @parameter1: java.lang.Class;

        if r2 != null goto label1;

        $r16 = new java.security.spec.InvalidKeySpecException;

        specialinvoke $r16.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>("keySpec parameter is null");

        throw $r16;

     label1:
        if r1 != null goto label2;

        $r17 = new java.security.spec.InvalidKeySpecException;

        specialinvoke $r17.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>("key parameter is null");

        throw $r17;

     label2:
        $r8 = class "javax/crypto/spec/SecretKeySpec";

        $z0 = virtualinvoke $r8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2);

        if $z0 == 0 goto label3;

        $r12 = new javax.crypto.spec.SecretKeySpec;

        $r15 = interfaceinvoke r1.<javax.crypto.SecretKey: byte[] getEncoded()>();

        $r14 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.DESede$KeyFactory: java.lang.String algName>;

        specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r15, $r14);

        return $r12;

     label3:
        $r9 = class "javax/crypto/spec/DESedeKeySpec";

        $z1 = virtualinvoke $r9.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2);

        if $z1 == 0 goto label9;

        r3 = interfaceinvoke r1.<javax.crypto.SecretKey: byte[] getEncoded()>();

     label4:
        $i0 = lengthof r3;

        if $i0 != 16 goto label7;

        r6 = newarray (byte)[24];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, r6, 0, 16);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, r6, 16, 8);

        $r13 = new javax.crypto.spec.DESedeKeySpec;

        specialinvoke $r13.<javax.crypto.spec.DESedeKeySpec: void <init>(byte[])>(r6);

        r7 = $r13;

     label5:
        return r7;

     label6:
        $r19 := @caughtexception;

        r4 = $r19;

        $r18 = new java.security.spec.InvalidKeySpecException;

        $r20 = virtualinvoke r4.<java.lang.Exception: java.lang.String toString()>();

        specialinvoke $r18.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>($r20);

        throw $r18;

     label7:
        $r11 = new javax.crypto.spec.DESedeKeySpec;

        specialinvoke $r11.<javax.crypto.spec.DESedeKeySpec: void <init>(byte[])>(r3);

        r5 = $r11;

     label8:
        return r5;

     label9:
        $r10 = new java.security.spec.InvalidKeySpecException;

        specialinvoke $r10.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>("Invalid KeySpec");

        throw $r10;

        catch java.lang.Exception from label4 to label5 with label6;
        catch java.lang.Exception from label7 to label8 with label6;
    }
}
