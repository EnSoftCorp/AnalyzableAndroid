class com.android.okhttp.HttpResponseCache$EntryCacheResponse extends java.net.CacheResponse
{
    private final com.android.okhttp.HttpResponseCache$Entry entry;
    private final java.io.InputStream in;
    private final com.android.okhttp.internal.DiskLruCache$Snapshot snapshot;

    public void <init>(com.android.okhttp.HttpResponseCache$Entry, com.android.okhttp.internal.DiskLruCache$Snapshot)
    {
        com.android.okhttp.HttpResponseCache$EntryCacheResponse r0;
        com.android.okhttp.HttpResponseCache$Entry r1;
        com.android.okhttp.internal.DiskLruCache$Snapshot r2;
        java.io.InputStream $r3;

        r0 := @this: com.android.okhttp.HttpResponseCache$EntryCacheResponse;

        r1 := @parameter0: com.android.okhttp.HttpResponseCache$Entry;

        r2 := @parameter1: com.android.okhttp.internal.DiskLruCache$Snapshot;

        specialinvoke r0.<java.net.CacheResponse: void <init>()>();

        r0.<com.android.okhttp.HttpResponseCache$EntryCacheResponse: com.android.okhttp.HttpResponseCache$Entry entry> = r1;

        r0.<com.android.okhttp.HttpResponseCache$EntryCacheResponse: com.android.okhttp.internal.DiskLruCache$Snapshot snapshot> = r2;

        $r3 = staticinvoke <com.android.okhttp.HttpResponseCache: java.io.InputStream access$1000(com.android.okhttp.internal.DiskLruCache$Snapshot)>(r2);

        r0.<com.android.okhttp.HttpResponseCache$EntryCacheResponse: java.io.InputStream in> = $r3;

        return;
    }

    static com.android.okhttp.internal.DiskLruCache$Snapshot access$500(com.android.okhttp.HttpResponseCache$EntryCacheResponse)
    {
        com.android.okhttp.HttpResponseCache$EntryCacheResponse r0;
        com.android.okhttp.internal.DiskLruCache$Snapshot $r1;

        r0 := @parameter0: com.android.okhttp.HttpResponseCache$EntryCacheResponse;

        $r1 = r0.<com.android.okhttp.HttpResponseCache$EntryCacheResponse: com.android.okhttp.internal.DiskLruCache$Snapshot snapshot>;

        return $r1;
    }

    public java.io.InputStream getBody()
    {
        com.android.okhttp.HttpResponseCache$EntryCacheResponse r0;
        java.io.InputStream $r1;

        r0 := @this: com.android.okhttp.HttpResponseCache$EntryCacheResponse;

        $r1 = r0.<com.android.okhttp.HttpResponseCache$EntryCacheResponse: java.io.InputStream in>;

        return $r1;
    }

    public java.util.Map getHeaders()
    {
        com.android.okhttp.HttpResponseCache$EntryCacheResponse r0;
        com.android.okhttp.HttpResponseCache$Entry $r1;
        com.android.okhttp.internal.http.RawHeaders $r2;
        java.util.Map $r3;

        r0 := @this: com.android.okhttp.HttpResponseCache$EntryCacheResponse;

        $r1 = r0.<com.android.okhttp.HttpResponseCache$EntryCacheResponse: com.android.okhttp.HttpResponseCache$Entry entry>;

        $r2 = staticinvoke <com.android.okhttp.HttpResponseCache$Entry: com.android.okhttp.internal.http.RawHeaders access$1100(com.android.okhttp.HttpResponseCache$Entry)>($r1);

        $r3 = virtualinvoke $r2.<com.android.okhttp.internal.http.RawHeaders: java.util.Map toMultimap(boolean)>(1);

        return $r3;
    }
}
