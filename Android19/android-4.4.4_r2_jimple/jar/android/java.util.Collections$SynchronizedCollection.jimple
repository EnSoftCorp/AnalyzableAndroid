class java.util.Collections$SynchronizedCollection extends java.lang.Object implements java.util.Collection, java.io.Serializable
{
    private static final long serialVersionUID;
    final java.util.Collection c;
    final java.lang.Object mutex;

    void <init>(java.util.Collection)
    {
        java.util.Collections$SynchronizedCollection r0;
        java.util.Collection r1;

        r0 := @this: java.util.Collections$SynchronizedCollection;

        r1 := @parameter0: java.util.Collection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.util.Collections$SynchronizedCollection: java.util.Collection c> = r1;

        r0.<java.util.Collections$SynchronizedCollection: java.lang.Object mutex> = r0;

        return;
    }

    void <init>(java.util.Collection, java.lang.Object)
    {
        java.util.Collections$SynchronizedCollection r0;
        java.util.Collection r1;
        java.lang.Object r2;

        r0 := @this: java.util.Collections$SynchronizedCollection;

        r1 := @parameter0: java.util.Collection;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.util.Collections$SynchronizedCollection: java.util.Collection c> = r1;

        r0.<java.util.Collections$SynchronizedCollection: java.lang.Object mutex> = r2;

        return;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.util.Collections$SynchronizedCollection r0;
        java.io.ObjectOutputStream r1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r4;

        r0 := @this: java.util.Collections$SynchronizedCollection;

        r1 := @parameter0: java.io.ObjectOutputStream;

        r2 = r0.<java.util.Collections$SynchronizedCollection: java.lang.Object mutex>;

        entermonitor r2;

     label1:
        virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        exitmonitor r2;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean add(java.lang.Object)
    {
        java.util.Collections$SynchronizedCollection r0;
        java.lang.Object r1, r2;
        java.lang.Throwable r3, $r5;
        boolean z0;
        java.util.Collection $r4;

        r0 := @this: java.util.Collections$SynchronizedCollection;

        r1 := @parameter0: java.lang.Object;

        r2 = r0.<java.util.Collections$SynchronizedCollection: java.lang.Object mutex>;

        entermonitor r2;

     label1:
        $r4 = r0.<java.util.Collections$SynchronizedCollection: java.util.Collection c>;

        z0 = interfaceinvoke $r4.<java.util.Collection: boolean add(java.lang.Object)>(r1);

        exitmonitor r2;

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean addAll(java.util.Collection)
    {
        java.util.Collections$SynchronizedCollection r0;
        java.util.Collection r1, $r4;
        java.lang.Object r2;
        java.lang.Throwable r3, $r5;
        boolean z0;

        r0 := @this: java.util.Collections$SynchronizedCollection;

        r1 := @parameter0: java.util.Collection;

        r2 = r0.<java.util.Collections$SynchronizedCollection: java.lang.Object mutex>;

        entermonitor r2;

     label1:
        $r4 = r0.<java.util.Collections$SynchronizedCollection: java.util.Collection c>;

        z0 = interfaceinvoke $r4.<java.util.Collection: boolean addAll(java.util.Collection)>(r1);

        exitmonitor r2;

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void clear()
    {
        java.util.Collections$SynchronizedCollection r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r4;
        java.util.Collection $r3;

        r0 := @this: java.util.Collections$SynchronizedCollection;

        r1 = r0.<java.util.Collections$SynchronizedCollection: java.lang.Object mutex>;

        entermonitor r1;

     label1:
        $r3 = r0.<java.util.Collections$SynchronizedCollection: java.util.Collection c>;

        interfaceinvoke $r3.<java.util.Collection: void clear()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean contains(java.lang.Object)
    {
        java.util.Collections$SynchronizedCollection r0;
        java.lang.Object r1, r2;
        java.lang.Throwable r3, $r5;
        boolean z0;
        java.util.Collection $r4;

        r0 := @this: java.util.Collections$SynchronizedCollection;

        r1 := @parameter0: java.lang.Object;

        r2 = r0.<java.util.Collections$SynchronizedCollection: java.lang.Object mutex>;

        entermonitor r2;

     label1:
        $r4 = r0.<java.util.Collections$SynchronizedCollection: java.util.Collection c>;

        z0 = interfaceinvoke $r4.<java.util.Collection: boolean contains(java.lang.Object)>(r1);

        exitmonitor r2;

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean containsAll(java.util.Collection)
    {
        java.util.Collections$SynchronizedCollection r0;
        java.util.Collection r1, $r4;
        java.lang.Object r2;
        java.lang.Throwable r3, $r5;
        boolean z0;

        r0 := @this: java.util.Collections$SynchronizedCollection;

        r1 := @parameter0: java.util.Collection;

        r2 = r0.<java.util.Collections$SynchronizedCollection: java.lang.Object mutex>;

        entermonitor r2;

     label1:
        $r4 = r0.<java.util.Collections$SynchronizedCollection: java.util.Collection c>;

        z0 = interfaceinvoke $r4.<java.util.Collection: boolean containsAll(java.util.Collection)>(r1);

        exitmonitor r2;

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean isEmpty()
    {
        java.util.Collections$SynchronizedCollection r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r4;
        boolean z0;
        java.util.Collection $r3;

        r0 := @this: java.util.Collections$SynchronizedCollection;

        r1 = r0.<java.util.Collections$SynchronizedCollection: java.lang.Object mutex>;

        entermonitor r1;

     label1:
        $r3 = r0.<java.util.Collections$SynchronizedCollection: java.util.Collection c>;

        z0 = interfaceinvoke $r3.<java.util.Collection: boolean isEmpty()>();

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.util.Iterator iterator()
    {
        java.util.Collections$SynchronizedCollection r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r5;
        java.util.Iterator r3;
        java.util.Collection $r4;

        r0 := @this: java.util.Collections$SynchronizedCollection;

        r1 = r0.<java.util.Collections$SynchronizedCollection: java.lang.Object mutex>;

        entermonitor r1;

     label1:
        $r4 = r0.<java.util.Collections$SynchronizedCollection: java.util.Collection c>;

        r3 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean remove(java.lang.Object)
    {
        java.util.Collections$SynchronizedCollection r0;
        java.lang.Object r1, r2;
        java.lang.Throwable r3, $r5;
        boolean z0;
        java.util.Collection $r4;

        r0 := @this: java.util.Collections$SynchronizedCollection;

        r1 := @parameter0: java.lang.Object;

        r2 = r0.<java.util.Collections$SynchronizedCollection: java.lang.Object mutex>;

        entermonitor r2;

     label1:
        $r4 = r0.<java.util.Collections$SynchronizedCollection: java.util.Collection c>;

        z0 = interfaceinvoke $r4.<java.util.Collection: boolean remove(java.lang.Object)>(r1);

        exitmonitor r2;

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean removeAll(java.util.Collection)
    {
        java.util.Collections$SynchronizedCollection r0;
        java.util.Collection r1, $r4;
        java.lang.Object r2;
        java.lang.Throwable r3, $r5;
        boolean z0;

        r0 := @this: java.util.Collections$SynchronizedCollection;

        r1 := @parameter0: java.util.Collection;

        r2 = r0.<java.util.Collections$SynchronizedCollection: java.lang.Object mutex>;

        entermonitor r2;

     label1:
        $r4 = r0.<java.util.Collections$SynchronizedCollection: java.util.Collection c>;

        z0 = interfaceinvoke $r4.<java.util.Collection: boolean removeAll(java.util.Collection)>(r1);

        exitmonitor r2;

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean retainAll(java.util.Collection)
    {
        java.util.Collections$SynchronizedCollection r0;
        java.util.Collection r1, $r4;
        java.lang.Object r2;
        java.lang.Throwable r3, $r5;
        boolean z0;

        r0 := @this: java.util.Collections$SynchronizedCollection;

        r1 := @parameter0: java.util.Collection;

        r2 = r0.<java.util.Collections$SynchronizedCollection: java.lang.Object mutex>;

        entermonitor r2;

     label1:
        $r4 = r0.<java.util.Collections$SynchronizedCollection: java.util.Collection c>;

        z0 = interfaceinvoke $r4.<java.util.Collection: boolean retainAll(java.util.Collection)>(r1);

        exitmonitor r2;

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int size()
    {
        java.util.Collections$SynchronizedCollection r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r4;
        int i0;
        java.util.Collection $r3;

        r0 := @this: java.util.Collections$SynchronizedCollection;

        r1 = r0.<java.util.Collections$SynchronizedCollection: java.lang.Object mutex>;

        entermonitor r1;

     label1:
        $r3 = r0.<java.util.Collections$SynchronizedCollection: java.util.Collection c>;

        i0 = interfaceinvoke $r3.<java.util.Collection: int size()>();

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.lang.Object[] toArray()
    {
        java.util.Collections$SynchronizedCollection r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r5;
        java.lang.Object[] r3;
        java.util.Collection $r4;

        r0 := @this: java.util.Collections$SynchronizedCollection;

        r1 = r0.<java.util.Collections$SynchronizedCollection: java.lang.Object mutex>;

        entermonitor r1;

     label1:
        $r4 = r0.<java.util.Collections$SynchronizedCollection: java.util.Collection c>;

        r3 = interfaceinvoke $r4.<java.util.Collection: java.lang.Object[] toArray()>();

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        java.util.Collections$SynchronizedCollection r0;
        java.lang.Object[] r1, r4;
        java.lang.Object r2;
        java.lang.Throwable r3, $r6;
        java.util.Collection $r5;

        r0 := @this: java.util.Collections$SynchronizedCollection;

        r1 := @parameter0: java.lang.Object[];

        r2 = r0.<java.util.Collections$SynchronizedCollection: java.lang.Object mutex>;

        entermonitor r2;

     label1:
        $r5 = r0.<java.util.Collections$SynchronizedCollection: java.util.Collection c>;

        r4 = interfaceinvoke $r5.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>(r1);

        exitmonitor r2;

     label2:
        return r4;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.lang.String toString()
    {
        java.util.Collections$SynchronizedCollection r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r5;
        java.lang.String r3;
        java.util.Collection $r4;

        r0 := @this: java.util.Collections$SynchronizedCollection;

        r1 = r0.<java.util.Collections$SynchronizedCollection: java.lang.Object mutex>;

        entermonitor r1;

     label1:
        $r4 = r0.<java.util.Collections$SynchronizedCollection: java.util.Collection c>;

        r3 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static void <clinit>()
    {
        <java.util.Collections$SynchronizedCollection: long serialVersionUID> = 3053995032091335093L;

        return;
    }
}
