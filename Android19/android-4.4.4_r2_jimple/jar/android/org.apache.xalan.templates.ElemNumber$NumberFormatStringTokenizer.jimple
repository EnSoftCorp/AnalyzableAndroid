class org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer extends java.lang.Object
{
    private int currentPosition;
    private int maxPosition;
    private java.lang.String str;
    final org.apache.xalan.templates.ElemNumber this$0;

    public void <init>(org.apache.xalan.templates.ElemNumber, java.lang.String)
    {
        org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer r0;
        org.apache.xalan.templates.ElemNumber r1;
        java.lang.String r2;
        int $i0;

        r0 := @this: org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer;

        r1 := @parameter0: org.apache.xalan.templates.ElemNumber;

        r2 := @parameter1: java.lang.String;

        r0.<org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer: org.apache.xalan.templates.ElemNumber this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer: java.lang.String str> = r2;

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        r0.<org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer: int maxPosition> = $i0;

        return;
    }

    public int countTokens()
    {
        org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer r0;
        int i0, i1, i2, $i3, $i4;
        java.lang.String $r1, $r2;
        char $c5, $c6;
        boolean $z0, $z1;

        r0 := @this: org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer;

        i0 = 0;

        i1 = r0.<org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer: int currentPosition>;

     label1:
        $i3 = r0.<org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer: int maxPosition>;

        if i1 >= $i3 goto label5;

        i2 = i1;

     label2:
        $i4 = r0.<org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer: int maxPosition>;

        if i1 >= $i4 goto label3;

        $r2 = r0.<org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer: java.lang.String str>;

        $c6 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(i1);

        $z1 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>($c6);

        if $z1 == 0 goto label3;

        i1 = i1 + 1;

        goto label2;

     label3:
        if i2 != i1 goto label4;

        $r1 = r0.<org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer: java.lang.String str>;

        $c5 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i1);

        $z0 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>($c5);

        if $z0 != 0 goto label4;

        i1 = i1 + 1;

     label4:
        i0 = i0 + 1;

        goto label1;

     label5:
        return i0;
    }

    public boolean hasMoreTokens()
    {
        org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer r0;
        int $i0, $i1;

        r0 := @this: org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer;

        $i1 = r0.<org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer: int currentPosition>;

        $i0 = r0.<org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer: int maxPosition>;

        if $i1 < $i0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public boolean isLetterOrDigitAhead()
    {
        org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer r0;
        int i0, $i1;
        java.lang.String $r1;
        char $c2;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer;

        i0 = r0.<org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer: int currentPosition>;

     label1:
        $i1 = r0.<org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer: int maxPosition>;

        if i0 >= $i1 goto label3;

        $r1 = r0.<org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer: java.lang.String str>;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i0);

        $z0 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>($c2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return 0;
    }

    public boolean nextIsSep()
    {
        org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer r0;
        int $i0;
        java.lang.String $r1;
        char $c1;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer;

        $r1 = r0.<org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer: java.lang.String str>;

        $i0 = r0.<org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer: int currentPosition>;

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0);

        $z0 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>($c1);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public java.lang.String nextToken()
    {
        org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i13, $i14;
        java.lang.String $r1, $r2, $r3, $r4;
        char $c8, $c12;
        boolean $z0, $z1;
        java.util.NoSuchElementException $r5;

        r0 := @this: org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer;

        $i2 = r0.<org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer: int currentPosition>;

        $i1 = r0.<org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer: int maxPosition>;

        if $i2 < $i1 goto label1;

        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>()>();

        throw $r5;

     label1:
        i0 = r0.<org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer: int currentPosition>;

     label2:
        $i4 = r0.<org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer: int currentPosition>;

        $i3 = r0.<org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer: int maxPosition>;

        if $i4 >= $i3 goto label3;

        $r4 = r0.<org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer: java.lang.String str>;

        $i11 = r0.<org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer: int currentPosition>;

        $c12 = virtualinvoke $r4.<java.lang.String: char charAt(int)>($i11);

        $z1 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>($c12);

        if $z1 == 0 goto label3;

        $i14 = r0.<org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer: int currentPosition>;

        $i13 = 1 + $i14;

        r0.<org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer: int currentPosition> = $i13;

        goto label2;

     label3:
        $i5 = r0.<org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer: int currentPosition>;

        if i0 != $i5 goto label4;

        $r3 = r0.<org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer: java.lang.String str>;

        $i7 = r0.<org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer: int currentPosition>;

        $c8 = virtualinvoke $r3.<java.lang.String: char charAt(int)>($i7);

        $z0 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>($c8);

        if $z0 != 0 goto label4;

        $i9 = r0.<org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer: int currentPosition>;

        $i10 = 1 + $i9;

        r0.<org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer: int currentPosition> = $i10;

     label4:
        $r1 = r0.<org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer: java.lang.String str>;

        $i6 = r0.<org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer: int currentPosition>;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(i0, $i6);

        return $r2;
    }

    public void reset()
    {
        org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer r0;

        r0 := @this: org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer;

        r0.<org.apache.xalan.templates.ElemNumber$NumberFormatStringTokenizer: int currentPosition> = 0;

        return;
    }
}
