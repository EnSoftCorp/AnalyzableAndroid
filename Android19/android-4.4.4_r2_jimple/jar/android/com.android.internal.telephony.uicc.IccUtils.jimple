public class com.android.internal.telephony.uicc.IccUtils extends java.lang.Object
{
    static final java.lang.String LOG_TAG;

    public void <init>()
    {
        com.android.internal.telephony.uicc.IccUtils r0;

        r0 := @this: com.android.internal.telephony.uicc.IccUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String adnStringFieldToString(byte[], int, int)
    {
        byte[] r0;
        int i0, i1, i3, i5, i6, i7, $i9, $i14, $i15, $i16, $i17, $i19, $i23, $i26, $i27, $i28, $i30, $i32, $i35, $i36, $i37, $i39;
        char c2, $c12, $c38;
        boolean z0;
        byte b4, $b8, $b10, $b11, $b13, $b18, $b20, $b21, $b24, $b29, $b31, $b34;
        java.lang.StringBuilder r1, $r12;
        android.content.res.Resources r2;
        java.lang.String r3, r5, r6, r7, $r9, $r10, $r11, $r13, $r16, $r17;
        java.io.UnsupportedEncodingException r8, $r18;
        short $s22, $s25, $s33;
        android.content.res.Resources$NotFoundException $r19;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i1 != 0 goto label01;

        return "";

     label01:
        if i1 < 1 goto label08;

        $b31 = r0[i0];

        if $b31 != -128 goto label08;

        $i37 = i1 - 1;

        i6 = $i37 / 2;

     label02:
        $r16 = new java.lang.String;

        $i35 = i0 + 1;

        $i36 = i6 * 2;

        specialinvoke $r16.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r0, $i35, $i36, "utf-16be");

        r7 = $r16;

     label03:
        r6 = r7;

     label04:
        if r6 == null goto label08;

        i7 = virtualinvoke r6.<java.lang.String: int length()>();

     label05:
        if i7 <= 0 goto label07;

        $i39 = i7 - 1;

        $c38 = virtualinvoke r6.<java.lang.String: char charAt(int)>($i39);

        if $c38 != 65535 goto label07;

        i7 = i7 + -1;

        goto label05;

     label06:
        $r18 := @caughtexception;

        r8 = $r18;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("IccUtils", "implausible UnsupportedEncodingException", r8);

        r6 = null;

        goto label04;

     label07:
        $r17 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int,int)>(0, i7);

        return $r17;

     label08:
        if i1 < 3 goto label14;

        $b24 = r0[i0];

        if $b24 != -127 goto label14;

        $i30 = i0 + 1;

        $b29 = r0[$i30];

        i3 = 255 & $b29;

        $i28 = i1 - 3;

        if i3 <= $i28 goto label09;

        i3 = i1 - 3;

     label09:
        $i27 = i0 + 2;

        $b34 = r0[$i27];

        $s33 = 255 & $b34;

        $i32 = $s33 << 7;

        c2 = (char) $i32;

        i0 = i0 + 3;

        z0 = 1;

     label10:
        if z0 == 0 goto label18;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        r1 = $r12;

     label11:
        if i3 <= 0 goto label17;

        $b8 = r0[i0];

        if $b8 >= 0 goto label12;

        $b10 = r0[i0];

        $b13 = 127 & $b10;

        $i14 = c2 + $b13;

        $c12 = (char) $i14;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c12);

        i0 = i0 + 1;

        i3 = i3 + -1;

     label12:
        i5 = 0;

     label13:
        if i5 >= i3 goto label16;

        $i9 = i0 + i5;

        $b11 = r0[$i9];

        if $b11 < 0 goto label16;

        i5 = i5 + 1;

        goto label13;

     label14:
        c2 = 0;

        z0 = 0;

        i3 = 0;

        if i1 < 4 goto label10;

        b4 = r0[i0];

        c2 = 0;

        z0 = 0;

        i3 = 0;

        if b4 != -126 goto label10;

        $i17 = i0 + 1;

        $b18 = r0[$i17];

        i3 = 255 & $b18;

        $i15 = i1 - 4;

        if i3 <= $i15 goto label15;

        i3 = i1 - 4;

     label15:
        $i16 = i0 + 2;

        $b21 = r0[$i16];

        $s22 = 255 & $b21;

        $i26 = $s22 << 8;

        $i19 = i0 + 3;

        $b20 = r0[$i19];

        $s25 = 255 & $b20;

        $i23 = $i26 | $s25;

        c2 = (char) $i23;

        i0 = i0 + 4;

        z0 = 1;

        goto label10;

     label16:
        $r13 = staticinvoke <com.android.internal.telephony.GsmAlphabet: java.lang.String gsm8BitUnpackedToString(byte[],int,int)>(r0, i0, i5);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        i0 = i0 + i5;

        i3 = i3 - i5;

        goto label11;

     label17:
        $r11 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;

     label18:
        r2 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        r3 = "";

     label19:
        r5 = virtualinvoke r2.<android.content.res.Resources: java.lang.String getString(int)>(17039400);

     label20:
        r3 = r5;

     label21:
        $r10 = virtualinvoke r3.<java.lang.String: java.lang.String trim()>();

        $r9 = staticinvoke <com.android.internal.telephony.GsmAlphabet: java.lang.String gsm8BitUnpackedToString(byte[],int,int,java.lang.String)>(r0, i0, i1, $r10);

        return $r9;

     label22:
        $r19 := @caughtexception;

        goto label21;

        catch java.io.UnsupportedEncodingException from label02 to label03 with label06;
        catch android.content.res.Resources$NotFoundException from label19 to label20 with label22;
    }

    public static java.lang.String bcdToString(byte[], int, int)
    {
        byte[] r0;
        int i0, i1, i2, $i5, $i6, $i8, $i13;
        java.lang.StringBuilder r1, $r2;
        byte b3, b4, $b7, $b10, $b11;
        java.lang.String $r3;
        char $c9, $c12;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = new java.lang.StringBuilder;

        $i5 = i1 * 2;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i5);

        r1 = $r2;

        i2 = i0;

     label1:
        $i6 = i0 + i1;

        if i2 >= $i6 goto label2;

        $b7 = r0[i2];

        b3 = 15 & $b7;

        if b3 <= 9 goto label3;

     label2:
        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label3:
        $i8 = b3 + 48;

        $c9 = (char) $i8;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c9);

        $b11 = r0[i2];

        $b10 = $b11 >> 4;

        b4 = 15 & $b10;

        if b4 != 15 goto label5;

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        if b4 > 9 goto label2;

        $i13 = b4 + 48;

        $c12 = (char) $i13;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c12);

        goto label4;
    }

    private static int bitToRGB(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 != 1 goto label1;

        return -1;

     label1:
        return -16777216;
    }

    public static java.lang.String bytesToHexString(byte[])
    {
        byte[] r0;
        java.lang.StringBuilder r1, $r2;
        int i0, $i1, $i2, $i3;
        java.lang.String $r3, $r4, $r6;
        byte $b4, $b5, $b6, $b8, $b9;
        char $c7, $c10;

        r0 := @parameter0: byte[];

        if r0 != null goto label1;

        return null;

     label1:
        $r2 = new java.lang.StringBuilder;

        $i1 = lengthof r0;

        $i2 = 2 * $i1;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i2);

        r1 = $r2;

        i0 = 0;

     label2:
        $i3 = lengthof r0;

        if i0 >= $i3 goto label3;

        $r4 = "0123456789abcdef";

        $b4 = r0[i0];

        $b5 = $b4 >> 4;

        $b6 = 15 & $b5;

        $c7 = virtualinvoke $r4.<java.lang.String: char charAt(int)>($b6);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c7);

        $r6 = "0123456789abcdef";

        $b8 = r0[i0];

        $b9 = 15 & $b8;

        $c10 = virtualinvoke $r6.<java.lang.String: char charAt(int)>($b9);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c10);

        i0 = i0 + 1;

        goto label2;

     label3:
        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public static int cdmaBcdByteToInt(byte)
    {
        byte b0, $b3, $b4, $b5, $b6;
        short s1;
        int i2;

        b0 := @parameter0: byte;

        s1 = b0 & 240;

        i2 = 0;

        if s1 > 144 goto label1;

        $b5 = b0 >> 4;

        $b6 = 15 & $b5;

        i2 = 10 * $b6;

     label1:
        $b3 = b0 & 15;

        if $b3 > 9 goto label2;

        $b4 = b0 & 15;

        i2 = i2 + $b4;

     label2:
        return i2;
    }

    public static java.lang.String cdmaBcdToString(byte[], int, int)
    {
        byte[] r0;
        int i0, i1, i2, i3, i5, $i8, $i13;
        java.lang.StringBuilder r1, $r2;
        byte b4, b6, $b7, $b10, $b11;
        java.lang.String $r3;
        char $c9, $c12;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(i1);

        r1 = $r2;

        i2 = 0;

        i3 = i0;

     label1:
        if i2 >= i1 goto label3;

        $b7 = r0[i3];

        b4 = 15 & $b7;

        if b4 <= 9 goto label2;

        b4 = 0;

     label2:
        $i8 = b4 + 48;

        $c9 = (char) $i8;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c9);

        i5 = i2 + 1;

        if i5 != i1 goto label4;

     label3:
        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label4:
        $b11 = r0[i3];

        $b10 = $b11 >> 4;

        b6 = 15 & $b10;

        if b6 <= 9 goto label5;

        b6 = 0;

     label5:
        $i13 = b6 + 48;

        $c12 = (char) $i13;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c12);

        i2 = i5 + 1;

        i3 = i3 + 1;

        goto label1;
    }

    private static int[] getCLUT(byte[], int, int)
    {
        byte[] r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, $i11, $i15, $i16, $i20;
        int[] r1;
        byte $b12, $b14, $b19;
        short $s13, $s17, $s18;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r0 != null goto label2;

        r1 = null;

     label1:
        return r1;

     label2:
        r1 = newarray (int)[i1];

        $i11 = i1 * 3;

        i2 = i0 + $i11;

        i3 = i0;

        i4 = 0;

     label3:
        i5 = i4 + 1;

        i6 = i3 + 1;

        $b12 = r0[i3];

        $s13 = 255 & $b12;

        $i15 = $s13 << 16;

        i7 = -16777216 | $i15;

        i8 = i6 + 1;

        $b14 = r0[i6];

        $s17 = 255 & $b14;

        $i16 = $s17 << 8;

        i9 = i7 | $i16;

        i10 = i8 + 1;

        $b19 = r0[i8];

        $s18 = 255 & $b19;

        $i20 = i9 | $s18;

        r1[i4] = $i20;

        if i10 >= i2 goto label1;

        i4 = i5;

        i3 = i10;

        goto label3;
    }

    public static int gsmBcdByteToInt(byte)
    {
        byte b0, $b3, $b4, $b6;
        short s1;
        int i2, $i5;

        b0 := @parameter0: byte;

        s1 = b0 & 240;

        i2 = 0;

        if s1 > 144 goto label1;

        $b6 = b0 >> 4;

        i2 = 15 & $b6;

     label1:
        $b3 = b0 & 15;

        if $b3 > 9 goto label2;

        $b4 = b0 & 15;

        $i5 = 10 * $b4;

        i2 = i2 + $i5;

     label2:
        return i2;
    }

    static int hexCharToInt(char)
    {
        char c0;
        java.lang.RuntimeException $r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;
        java.lang.String $r5;
        int $i1, $i2, $i3, $i4, $i5;

        c0 := @parameter0: char;

        if c0 < 48 goto label1;

        if c0 > 57 goto label1;

        $i5 = c0 - 48;

        return $i5;

     label1:
        if c0 < 65 goto label2;

        if c0 > 70 goto label2;

        $i3 = c0 - 65;

        $i4 = 10 + $i3;

        return $i4;

     label2:
        if c0 < 97 goto label3;

        if c0 > 102 goto label3;

        $i1 = c0 - 97;

        $i2 = 10 + $i1;

        return $i2;

     label3:
        $r0 = new java.lang.RuntimeException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid hex char \'");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>($r5);

        throw $r0;
    }

    public static byte[] hexStringToBytes(java.lang.String)
    {
        java.lang.String r0;
        int i0, i1, $i2, $i3, $i5, $i6, $i7, $i9, $i10;
        byte[] r1;
        char $c4, $c8;
        byte $b11;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label2;

        r1 = null;

     label1:
        return r1;

     label2:
        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i2 = i0 / 2;

        r1 = newarray (byte)[$i2];

        i1 = 0;

     label3:
        if i1 >= i0 goto label1;

        $i3 = i1 / 2;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);

        $i5 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: int hexCharToInt(char)>($c4);

        $i7 = $i5 << 4;

        $i6 = i1 + 1;

        $c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i6);

        $i9 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: int hexCharToInt(char)>($c8);

        $i10 = $i7 | $i9;

        $b11 = (byte) $i10;

        r1[$i3] = $b11;

        i1 = i1 + 2;

        goto label3;
    }

    private static int[] mapTo2OrderBitColor(byte[], int, int, int[], int)
    {
        byte[] r0;
        int i0, i1, i2, i4, i5, i6, i7, i9, i10, i11, $i12, i13, $i14, $i15, $i19;
        int[] r1, r2, $r3;
        short s3, $s16;
        byte b8, $b17;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: int[];

        i2 := @parameter4: int;

        $i12 = 8 % i2;

        if $i12 == 0 goto label01;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("IccUtils", "not event number of color");

        $r3 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: int[] mapToNon2OrderBitColor(byte[],int,int,int[],int)>(r0, i0, i1, r1, i2);

        return $r3;

     label01:
        s3 = 1;

        tableswitch(i2)
        {
            case 1: goto label05;
            case 2: goto label06;
            case 3: goto label02;
            case 4: goto label07;
            case 5: goto label02;
            case 6: goto label02;
            case 7: goto label02;
            case 8: goto label08;
            default: goto label02;
        };

     label02:
        r2 = newarray (int)[i1];

        i4 = 0;

        i5 = 8 / i2;

        i6 = i0;

     label03:
        if i4 >= i1 goto label10;

        i7 = i6 + 1;

        b8 = r0[i6];

        i9 = 0;

        i10 = i4;

     label04:
        if i9 >= i5 goto label09;

        $i15 = i5 - i9;

        i11 = -1 + $i15;

        i13 = i10 + 1;

        $i14 = i11 * i2;

        $b17 = b8 >> $i14;

        $s16 = s3 & $b17;

        $i19 = r1[$s16];

        r2[i10] = $i19;

        i9 = i9 + 1;

        i10 = i13;

        goto label04;

     label05:
        s3 = 1;

        goto label02;

     label06:
        s3 = 3;

        goto label02;

     label07:
        s3 = 15;

        goto label02;

     label08:
        s3 = 255;

        goto label02;

     label09:
        i4 = i10;

        i6 = i7;

        goto label03;

     label10:
        return r2;
    }

    private static int[] mapToNon2OrderBitColor(byte[], int, int, int[], int)
    {
        byte[] r0;
        int i0, i1, i2, $i3;
        int[] r1, $r2, $r3;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: int[];

        i2 := @parameter4: int;

        $i3 = 8 % i2;

        if $i3 != 0 goto label1;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("IccUtils", "not odd number of color");

        $r3 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: int[] mapTo2OrderBitColor(byte[],int,int,int[],int)>(r0, i0, i1, r1, i2);

        return $r3;

     label1:
        $r2 = newarray (int)[i1];

        return $r2;
    }

    public static java.lang.String networkNameToString(byte[], int, int)
    {
        byte[] r0;
        int i0, i1, i3, $i11, $i12, $i13, $i15, $i16, $i17;
        java.lang.String r1, $r3;
        java.io.UnsupportedEncodingException r2, $r4;
        byte b2, $b4, $b6, $b7, $b8, $b9, $b10, $b14;
        short $s5;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $b4 = r0[i0];

        $s5 = 128 & $b4;

        if $s5 != 128 goto label1;

        if i1 >= 1 goto label3;

     label1:
        r1 = "";

     label2:
        return r1;

     label3:
        $b6 = r0[i0];

        $b7 = $b6 >>> 4;

        $b8 = 7 & $b7;

        tableswitch($b8)
        {
            case 0: goto label6;
            case 1: goto label7;
            default: goto label4;
        };

     label4:
        r1 = "";

     label5:
        $b9 = r0[i0];

        $b10 = 64 & $b9;

        if $b10 == 0 goto label2;

        return r1;

     label6:
        $b14 = r0[i0];

        b2 = 7 & $b14;

        $i13 = i1 - 1;

        $i16 = 8 * $i13;

        $i15 = $i16 - b2;

        i3 = $i15 / 7;

        $i17 = i0 + 1;

        r1 = staticinvoke <com.android.internal.telephony.GsmAlphabet: java.lang.String gsm7BitPackedToString(byte[],int,int)>(r0, $i17, i3);

        goto label5;

     label7:
        $r3 = new java.lang.String;

        $i11 = i0 + 1;

        $i12 = i1 - 1;

        specialinvoke $r3.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r0, $i11, $i12, "utf-16");

        r1 = $r3;

     label8:
        goto label5;

     label9:
        $r4 := @caughtexception;

        r2 = $r4;

        r1 = "";

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("IccUtils", "implausible UnsupportedEncodingException", r2);

        goto label5;

        catch java.io.UnsupportedEncodingException from label7 to label8 with label9;
    }

    public static android.graphics.Bitmap parseToBnW(byte[], int)
    {
        byte[] r0;
        int i0, i1, i3, i5, i6, i8, i9, i10, i11, i12, $i15, $i19;
        short s2, s4;
        int[] r1;
        byte b7, $b13, $b14, $b17, $b18;
        android.graphics.Bitmap $r2;
        android.graphics.Bitmap$Config $r3;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 = 0 + 1;

        $b14 = r0[0];

        s2 = 255 & $b14;

        i3 = i1 + 1;

        $b13 = r0[i1];

        s4 = 255 & $b13;

        i5 = s2 * s4;

        r1 = newarray (int)[i5];

        i6 = 7;

        b7 = 0;

        i8 = 0;

        i9 = i3;

     label1:
        if i8 >= i5 goto label3;

        $i15 = i8 % 8;

        if $i15 != 0 goto label5;

        i10 = i9 + 1;

        b7 = r0[i9];

        i6 = 7;

     label2:
        i11 = i8 + 1;

        i12 = i6 - 1;

        $b18 = b7 >> i6;

        $b17 = 1 & $b18;

        $i19 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: int bitToRGB(int)>($b17);

        r1[i8] = $i19;

        i6 = i12;

        i8 = i11;

        i9 = i10;

        goto label1;

     label3:
        if i8 == i5 goto label4;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("IccUtils", "parse end and size error");

     label4:
        $r3 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r2 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,android.graphics.Bitmap$Config)>(r1, s2, s4, $r3);

        return $r2;

     label5:
        i10 = i9;

        goto label2;
    }

    public static android.graphics.Bitmap parseToRGB(byte[], int, boolean)
    {
        byte[] r0;
        int i0, i1, i3, i5, i7, i9, i10, i11, $i20, $i21, $i22, $i23, $i24;
        boolean z0;
        short s2, s4, s6, s8, $s16, $s18;
        int[] r1, r2;
        byte $b12, $b13, $b14, $b15, $b17, $b19;
        android.graphics.Bitmap$Config $r3;
        android.graphics.Bitmap $r4;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        i1 = 0 + 1;

        $b13 = r0[0];

        s2 = 255 & $b13;

        i3 = i1 + 1;

        $b12 = r0[i1];

        s4 = 255 & $b12;

        i5 = i3 + 1;

        $b15 = r0[i3];

        s6 = 255 & $b15;

        i7 = i5 + 1;

        $b14 = r0[i5];

        s8 = 255 & $b14;

        i9 = i7 + 1;

        $b17 = r0[i7];

        $s16 = 255 & $b17;

        i10 = $s16 << 8;

        i11 = i9 + 1;

        $b19 = r0[i9];

        $s18 = 255 & $b19;

        $i20 = i10 | $s18;

        r1 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: int[] getCLUT(byte[],int,int)>(r0, $i20, s8);

        if 1 != z0 goto label1;

        $i24 = s8 - 1;

        r1[$i24] = 0;

     label1:
        $i22 = 8 % s6;

        if $i22 != 0 goto label3;

        $i23 = s2 * s4;

        r2 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: int[] mapTo2OrderBitColor(byte[],int,int,int[],int)>(r0, i11, $i23, r1, s6);

     label2:
        $r3 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config RGB_565>;

        $r4 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,android.graphics.Bitmap$Config)>(r2, s2, s4, $r3);

        return $r4;

     label3:
        $i21 = s2 * s4;

        r2 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: int[] mapToNon2OrderBitColor(byte[],int,int,int[],int)>(r0, i11, $i21, r1, s6);

        goto label2;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.uicc.IccUtils: java.lang.String LOG_TAG> = "IccUtils";

        return;
    }
}
