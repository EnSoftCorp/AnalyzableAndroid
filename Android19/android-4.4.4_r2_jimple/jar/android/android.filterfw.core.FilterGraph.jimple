public class android.filterfw.core.FilterGraph extends java.lang.Object
{
    public static final int AUTOBRANCH_OFF;
    public static final int AUTOBRANCH_SYNCED;
    public static final int AUTOBRANCH_UNSYNCED;
    public static final int TYPECHECK_DYNAMIC;
    public static final int TYPECHECK_OFF;
    public static final int TYPECHECK_STRICT;
    private java.lang.String TAG;
    private int mAutoBranchMode;
    private boolean mDiscardUnconnectedOutputs;
    private java.util.HashSet mFilters;
    private boolean mIsReady;
    private boolean mLogVerbose;
    private java.util.HashMap mNameMap;
    private java.util.HashMap mPreconnections;
    private int mTypeCheckMode;

    public void <init>()
    {
        android.filterfw.core.FilterGraph r0;
        java.util.HashSet $r1;
        java.util.HashMap $r2, $r3;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: android.filterfw.core.FilterGraph;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<android.filterfw.core.FilterGraph: java.util.HashSet mFilters> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<android.filterfw.core.FilterGraph: java.util.HashMap mNameMap> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<android.filterfw.core.FilterGraph: java.util.HashMap mPreconnections> = $r3;

        r0.<android.filterfw.core.FilterGraph: boolean mIsReady> = 0;

        r0.<android.filterfw.core.FilterGraph: int mAutoBranchMode> = 0;

        r0.<android.filterfw.core.FilterGraph: int mTypeCheckMode> = 2;

        r0.<android.filterfw.core.FilterGraph: boolean mDiscardUnconnectedOutputs> = 0;

        r0.<android.filterfw.core.FilterGraph: java.lang.String TAG> = "FilterGraph";

        $r4 = r0.<android.filterfw.core.FilterGraph: java.lang.String TAG>;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>($r4, 2);

        r0.<android.filterfw.core.FilterGraph: boolean mLogVerbose> = $z0;

        return;
    }

    private void checkConnections()
    {
        android.filterfw.core.FilterGraph r0;

        r0 := @this: android.filterfw.core.FilterGraph;

        return;
    }

    private void connectPorts()
    {
        android.filterfw.core.FilterGraph r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.util.Iterator r1, r8, r9;
        java.util.Map$Entry r2;
        android.filterfw.core.OutputPort r3, $r26;
        java.util.LinkedList r4;
        java.lang.StringBuilder r5, $r16, $r20, $r27, $r32, $r33, $r34, $r35, $r36, $r39, $r40, $r41;
        android.filterpacks.base.FrameBranch r6, $r18;
        java.lang.Object[] r7;
        java.util.HashMap $r10, $r13;
        java.util.Set $r11;
        boolean $z0, $z1, $z3;
        java.lang.Object $r12, $r14, $r15, $r25, $r29, $r43;
        java.lang.RuntimeException $r17, $r37;
        java.lang.String $r19, $r28, $r31, $r38;
        java.lang.Integer $r21;
        android.filterfw.core.KeyValueMap $r22;
        java.util.Collection $r23;
        android.filterfw.core.InputPort $r24, $r30, $r42;

        r0 := @this: android.filterfw.core.FilterGraph;

        i0 = 1;

        $r10 = r0.<android.filterfw.core.FilterGraph: java.util.HashMap mPreconnections>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.util.Set entrySet()>();

        r1 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r12 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Map$Entry) $r12;

        $r15 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        r3 = (android.filterfw.core.OutputPort) $r15;

        $r14 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        r4 = (java.util.LinkedList) $r14;

        $i3 = virtualinvoke r4.<java.util.LinkedList: int size()>();

        if $i3 != 1 goto label2;

        $r43 = virtualinvoke r4.<java.util.LinkedList: java.lang.Object get(int)>(0);

        $r42 = (android.filterfw.core.InputPort) $r43;

        virtualinvoke r3.<android.filterfw.core.OutputPort: void connectTo(android.filterfw.core.InputPort)>($r42);

        goto label1;

     label2:
        $i2 = r0.<android.filterfw.core.FilterGraph: int mAutoBranchMode>;

        if $i2 != 0 goto label3;

        $r37 = new java.lang.RuntimeException;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempting to connect ");

        $r41 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to multiple ");

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("filter ports! Enable auto-branching to allow this.");

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r37.<java.lang.RuntimeException: void <init>(java.lang.String)>($r38);

        throw $r37;

     label3:
        $z1 = r0.<android.filterfw.core.FilterGraph: boolean mLogVerbose>;

        if $z1 == 0 goto label4;

        $r28 = r0.<android.filterfw.core.FilterGraph: java.lang.String TAG>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating branch for ");

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r28, $r31);

     label4:
        $i4 = r0.<android.filterfw.core.FilterGraph: int mAutoBranchMode>;

        if $i4 != 1 goto label6;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        r5 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("branch");

        i1 = i0 + 1;

        $r18 = new android.filterpacks.base.FrameBranch;

        $r20 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<android.filterpacks.base.FrameBranch: void <init>(java.lang.String)>($r19);

        r6 = $r18;

        $r22 = new android.filterfw.core.KeyValueMap;

        specialinvoke $r22.<android.filterfw.core.KeyValueMap: void <init>()>();

        r7 = newarray (java.lang.Object)[2];

        r7[0] = "outputs";

        $i5 = virtualinvoke r4.<java.util.LinkedList: int size()>();

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        r7[1] = $r21;

        virtualinvoke r6.<android.filterpacks.base.FrameBranch: void initWithAssignmentList(java.lang.Object[])>(r7);

        virtualinvoke r0.<android.filterfw.core.FilterGraph: boolean addFilter(android.filterfw.core.Filter)>(r6);

        $r24 = virtualinvoke r6.<android.filterpacks.base.FrameBranch: android.filterfw.core.InputPort getInputPort(java.lang.String)>("in");

        virtualinvoke r3.<android.filterfw.core.OutputPort: void connectTo(android.filterfw.core.InputPort)>($r24);

        r8 = virtualinvoke r4.<java.util.LinkedList: java.util.Iterator iterator()>();

        $r23 = virtualinvoke r6.<android.filterfw.core.Filter: java.util.Collection getOutputPorts()>();

        r9 = interfaceinvoke $r23.<java.util.Collection: java.util.Iterator iterator()>();

     label5:
        $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label8;

        $r25 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        $r26 = (android.filterfw.core.OutputPort) $r25;

        $r29 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        $r30 = (android.filterfw.core.InputPort) $r29;

        virtualinvoke $r26.<android.filterfw.core.OutputPort: void connectTo(android.filterfw.core.InputPort)>($r30);

        goto label5;

     label6:
        $r17 = new java.lang.RuntimeException;

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String)>("TODO: Unsynced branches not implemented yet!");

        throw $r17;

     label7:
        $r13 = r0.<android.filterfw.core.FilterGraph: java.util.HashMap mPreconnections>;

        virtualinvoke $r13.<java.util.HashMap: void clear()>();

        return;

     label8:
        i0 = i1;

        goto label1;
    }

    private void discardUnconnectedOutputs()
    {
        android.filterfw.core.FilterGraph r0;
        java.util.LinkedList r1, $r8;
        java.util.Iterator r2, r3, r5;
        android.filterfw.core.Filter r4, $r10;
        int i0;
        android.filterfw.core.OutputPort r6;
        android.filterpacks.base.NullFilter r7, $r16;
        java.util.HashSet $r9;
        boolean $z0, $z1, $z3, $z4, $z5;
        java.lang.Object $r11, $r12, $r14;
        java.util.Collection $r13;
        java.lang.StringBuilder $r15, $r17, $r19, $r20, $r22, $r24, $r25, $r27;
        java.lang.String $r18, $r23, $r26, $r28;
        android.filterfw.core.InputPort $r21;

        r0 := @this: android.filterfw.core.FilterGraph;

        $r8 = new java.util.LinkedList;

        specialinvoke $r8.<java.util.LinkedList: void <init>()>();

        r1 = $r8;

        $r9 = r0.<android.filterfw.core.FilterGraph: java.util.HashSet mFilters>;

        r2 = virtualinvoke $r9.<java.util.HashSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r12 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.filterfw.core.Filter) $r12;

        i0 = 0;

        $r13 = virtualinvoke r4.<android.filterfw.core.Filter: java.util.Collection getOutputPorts()>();

        r5 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label1;

        $r14 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (android.filterfw.core.OutputPort) $r14;

        $z5 = virtualinvoke r6.<android.filterfw.core.OutputPort: boolean isConnected()>();

        if $z5 != 0 goto label2;

        $z4 = r0.<android.filterfw.core.FilterGraph: boolean mLogVerbose>;

        if $z4 == 0 goto label3;

        $r26 = r0.<android.filterfw.core.FilterGraph: java.lang.String TAG>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Autoconnecting unconnected ");

        $r24 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to Null filter.");

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r26, $r28);

     label3:
        $r16 = new android.filterpacks.base.NullFilter;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke r4.<android.filterfw.core.Filter: java.lang.String getName()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ToNull");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<android.filterpacks.base.NullFilter: void <init>(java.lang.String)>($r23);

        r7 = $r16;

        virtualinvoke r7.<android.filterpacks.base.NullFilter: void init()>();

        virtualinvoke r1.<java.util.LinkedList: boolean add(java.lang.Object)>(r7);

        $r21 = virtualinvoke r7.<android.filterpacks.base.NullFilter: android.filterfw.core.InputPort getInputPort(java.lang.String)>("frame");

        virtualinvoke r6.<android.filterfw.core.OutputPort: void connectTo(android.filterfw.core.InputPort)>($r21);

        i0 = i0 + 1;

        goto label2;

     label4:
        r3 = virtualinvoke r1.<java.util.LinkedList: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (android.filterfw.core.Filter) $r11;

        virtualinvoke r0.<android.filterfw.core.FilterGraph: boolean addFilter(android.filterfw.core.Filter)>($r10);

        goto label5;

     label6:
        return;
    }

    private java.util.HashSet getSourceFilters()
    {
        android.filterfw.core.FilterGraph r0;
        java.util.HashSet r1, $r4;
        java.util.Iterator r2;
        android.filterfw.core.Filter r3;
        java.util.Set $r5;
        boolean $z0, $z1;
        java.lang.Object $r6;
        int $i0;
        java.lang.StringBuilder $r7, $r9, $r10;
        java.lang.String $r8, $r11;

        r0 := @this: android.filterfw.core.FilterGraph;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r1 = $r4;

        $r5 = virtualinvoke r0.<android.filterfw.core.FilterGraph: java.util.Set getFilters()>();

        r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.filterfw.core.Filter) $r6;

        $i0 = virtualinvoke r3.<android.filterfw.core.Filter: int getNumberOfConnectedInputs()>();

        if $i0 != 0 goto label1;

        $z1 = r0.<android.filterfw.core.FilterGraph: boolean mLogVerbose>;

        if $z1 == 0 goto label2;

        $r8 = r0.<android.filterfw.core.FilterGraph: java.lang.String TAG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found source filter: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r8, $r11);

     label2:
        virtualinvoke r1.<java.util.HashSet: boolean add(java.lang.Object)>(r3);

        goto label1;

     label3:
        return r1;
    }

    private void preconnect(android.filterfw.core.OutputPort, android.filterfw.core.InputPort)
    {
        android.filterfw.core.FilterGraph r0;
        android.filterfw.core.OutputPort r1;
        android.filterfw.core.InputPort r2;
        java.util.LinkedList r3, $r6;
        java.util.HashMap $r4, $r7;
        java.lang.Object $r5;

        r0 := @this: android.filterfw.core.FilterGraph;

        r1 := @parameter0: android.filterfw.core.OutputPort;

        r2 := @parameter1: android.filterfw.core.InputPort;

        $r4 = r0.<android.filterfw.core.FilterGraph: java.util.HashMap mPreconnections>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (java.util.LinkedList) $r5;

        if r3 != null goto label1;

        $r6 = new java.util.LinkedList;

        specialinvoke $r6.<java.util.LinkedList: void <init>()>();

        r3 = $r6;

        $r7 = r0.<android.filterfw.core.FilterGraph: java.util.HashMap mPreconnections>;

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3);

     label1:
        virtualinvoke r3.<java.util.LinkedList: boolean add(java.lang.Object)>(r2);

        return;
    }

    private boolean readyForProcessing(android.filterfw.core.Filter, java.util.Set)
    {
        android.filterfw.core.FilterGraph r0;
        android.filterfw.core.Filter r1, r4;
        java.util.Set r2;
        java.util.Iterator r3;
        boolean $z0, $z1, $z2;
        java.util.Collection $r5;
        java.lang.Object $r6;
        android.filterfw.core.InputPort $r7;

        r0 := @this: android.filterfw.core.FilterGraph;

        r1 := @parameter0: android.filterfw.core.Filter;

        r2 := @parameter1: java.util.Set;

        $z0 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r5 = virtualinvoke r1.<android.filterfw.core.Filter: java.util.Collection getInputPorts()>();

        r3 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (android.filterfw.core.InputPort) $r6;

        r4 = virtualinvoke $r7.<android.filterfw.core.InputPort: android.filterfw.core.Filter getSourceFilter()>();

        if r4 == null goto label2;

        $z2 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>(r4);

        if $z2 != 0 goto label2;

        return 0;

     label3:
        return 1;
    }

    private void removeFilter(android.filterfw.core.Filter)
    {
        android.filterfw.core.FilterGraph r0;
        android.filterfw.core.Filter r1;
        java.util.HashSet $r2;
        java.util.HashMap $r3;
        java.lang.String $r4;

        r0 := @this: android.filterfw.core.FilterGraph;

        r1 := @parameter0: android.filterfw.core.Filter;

        $r2 = r0.<android.filterfw.core.FilterGraph: java.util.HashSet mFilters>;

        virtualinvoke $r2.<java.util.HashSet: boolean remove(java.lang.Object)>(r1);

        $r3 = r0.<android.filterfw.core.FilterGraph: java.util.HashMap mNameMap>;

        $r4 = virtualinvoke r1.<android.filterfw.core.Filter: java.lang.String getName()>();

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r4);

        return;
    }

    private void runTypeCheck()
    {
        android.filterfw.core.FilterGraph r0;
        java.util.Stack r1, $r6;
        java.util.HashSet r2, $r7, $r8;
        android.filterfw.core.Filter r3, r5;
        java.util.Iterator r4;
        boolean $z1, $z2, $z4, $z5;
        int $i0, $i1;
        java.util.Set $r9;
        java.lang.Object $r10, $r13;
        java.lang.RuntimeException $r11;
        java.util.Collection $r12;
        android.filterfw.core.OutputPort $r14;
        java.lang.String $r16, $r21;
        java.lang.StringBuilder $r17, $r18, $r19, $r20;

        r0 := @this: android.filterfw.core.FilterGraph;

        $r6 = new java.util.Stack;

        specialinvoke $r6.<java.util.Stack: void <init>()>();

        r1 = $r6;

        $r7 = new java.util.HashSet;

        specialinvoke $r7.<java.util.HashSet: void <init>()>();

        r2 = $r7;

        $r8 = specialinvoke r0.<android.filterfw.core.FilterGraph: java.util.HashSet getSourceFilters()>();

        virtualinvoke r1.<java.util.Stack: boolean addAll(java.util.Collection)>($r8);

     label1:
        $z1 = virtualinvoke r1.<java.util.Stack: boolean empty()>();

        if $z1 != 0 goto label4;

        $r10 = virtualinvoke r1.<java.util.Stack: java.lang.Object pop()>();

        r3 = (android.filterfw.core.Filter) $r10;

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>(r3);

        specialinvoke r0.<android.filterfw.core.FilterGraph: void updateOutputs(android.filterfw.core.Filter)>(r3);

        $z2 = r0.<android.filterfw.core.FilterGraph: boolean mLogVerbose>;

        if $z2 == 0 goto label2;

        $r16 = r0.<android.filterfw.core.FilterGraph: java.lang.String TAG>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Running type check on ");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r16, $r21);

     label2:
        specialinvoke r0.<android.filterfw.core.FilterGraph: void runTypeCheckOn(android.filterfw.core.Filter)>(r3);

        $r12 = virtualinvoke r3.<android.filterfw.core.Filter: java.util.Collection getOutputPorts()>();

        r4 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z4 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label1;

        $r13 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r14 = (android.filterfw.core.OutputPort) $r13;

        r5 = virtualinvoke $r14.<android.filterfw.core.OutputPort: android.filterfw.core.Filter getTargetFilter()>();

        if r5 == null goto label3;

        $z5 = specialinvoke r0.<android.filterfw.core.FilterGraph: boolean readyForProcessing(android.filterfw.core.Filter,java.util.Set)>(r5, r2);

        if $z5 == 0 goto label3;

        virtualinvoke r1.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r5);

        goto label3;

     label4:
        $i0 = interfaceinvoke r2.<java.util.Set: int size()>();

        $r9 = virtualinvoke r0.<android.filterfw.core.FilterGraph: java.util.Set getFilters()>();

        $i1 = interfaceinvoke $r9.<java.util.Set: int size()>();

        if $i0 == $i1 goto label5;

        $r11 = new java.lang.RuntimeException;

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>("Could not schedule all filters! Is your graph malformed?");

        throw $r11;

     label5:
        return;
    }

    private void runTypeCheckOn(android.filterfw.core.Filter)
    {
        android.filterfw.core.FilterGraph r0;
        android.filterfw.core.Filter r1;
        java.util.Iterator r2;
        android.filterfw.core.InputPort r3;
        android.filterfw.core.FrameFormat r4, r5;
        boolean z0, $z1, $z2, $z3;
        java.util.Collection $r6;
        java.lang.Object $r7;
        int $i0;
        java.lang.StringBuilder $r8, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r19, $r20, $r22, $r23, $r24, $r25, $r26, $r30, $r31;
        java.lang.RuntimeException $r9;
        java.lang.String $r18, $r21, $r27, $r28, $r29;

        r0 := @this: android.filterfw.core.FilterGraph;

        r1 := @parameter0: android.filterfw.core.Filter;

        $r6 = virtualinvoke r1.<android.filterfw.core.Filter: java.util.Collection getInputPorts()>();

        r2 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.filterfw.core.InputPort) $r7;

        $z2 = r0.<android.filterfw.core.FilterGraph: boolean mLogVerbose>;

        if $z2 == 0 goto label2;

        $r27 = r0.<android.filterfw.core.FilterGraph: java.lang.String TAG>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Type checking port ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r29 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r27, $r29);

     label2:
        r4 = virtualinvoke r3.<android.filterfw.core.InputPort: android.filterfw.core.FrameFormat getSourceFormat()>();

        r5 = virtualinvoke r3.<android.filterfw.core.InputPort: android.filterfw.core.FrameFormat getPortFormat()>();

        if r4 == null goto label1;

        if r5 == null goto label1;

        $z3 = r0.<android.filterfw.core.FilterGraph: boolean mLogVerbose>;

        if $z3 == 0 goto label3;

        $r21 = r0.<android.filterfw.core.FilterGraph: java.lang.String TAG>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Checking ");

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" against ");

        $r22 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r28 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r21, $r28);

     label3:
        z0 = 1;

        $i0 = r0.<android.filterfw.core.FilterGraph: int mTypeCheckMode>;

        tableswitch($i0)
        {
            case 0: goto label5;
            case 1: goto label6;
            case 2: goto label7;
            default: goto label4;
        };

     label4:
        if z0 != 0 goto label1;

        $r9 = new java.lang.RuntimeException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Type mismatch: Filter ");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expects a ");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("format of type ");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but got a format of type ");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>($r18);

        throw $r9;

     label5:
        virtualinvoke r3.<android.filterfw.core.InputPort: void setChecksType(boolean)>(0);

        goto label4;

     label6:
        z0 = virtualinvoke r4.<android.filterfw.core.FrameFormat: boolean mayBeCompatibleWith(android.filterfw.core.FrameFormat)>(r5);

        virtualinvoke r3.<android.filterfw.core.InputPort: void setChecksType(boolean)>(1);

        goto label4;

     label7:
        z0 = virtualinvoke r4.<android.filterfw.core.FrameFormat: boolean isCompatibleWith(android.filterfw.core.FrameFormat)>(r5);

        virtualinvoke r3.<android.filterfw.core.InputPort: void setChecksType(boolean)>(0);

        goto label4;

     label8:
        return;
    }

    private void updateOutputs(android.filterfw.core.Filter)
    {
        android.filterfw.core.FilterGraph r0;
        android.filterfw.core.Filter r1;
        java.util.Iterator r2;
        android.filterfw.core.OutputPort r3;
        android.filterfw.core.InputPort r4;
        android.filterfw.core.FrameFormat r5, r6;
        java.util.Collection $r7;
        boolean $z0;
        java.lang.Object $r8;
        java.lang.String $r9, $r15;
        java.lang.RuntimeException $r10;
        java.lang.StringBuilder $r11, $r12, $r13, $r14;

        r0 := @this: android.filterfw.core.FilterGraph;

        r1 := @parameter0: android.filterfw.core.Filter;

        $r7 = virtualinvoke r1.<android.filterfw.core.Filter: java.util.Collection getOutputPorts()>();

        r2 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.filterfw.core.OutputPort) $r8;

        r4 = virtualinvoke r3.<android.filterfw.core.OutputPort: android.filterfw.core.InputPort getBasePort()>();

        if r4 == null goto label1;

        r5 = virtualinvoke r4.<android.filterfw.core.InputPort: android.filterfw.core.FrameFormat getSourceFormat()>();

        $r9 = virtualinvoke r3.<android.filterfw.core.OutputPort: java.lang.String getName()>();

        r6 = virtualinvoke r1.<android.filterfw.core.Filter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>($r9, r5);

        if r6 != null goto label2;

        $r10 = new java.lang.RuntimeException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Filter did not return an output format for ");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>($r15);

        throw $r10;

     label2:
        virtualinvoke r3.<android.filterfw.core.OutputPort: void setPortFormat(android.filterfw.core.FrameFormat)>(r6);

        goto label1;

     label3:
        return;
    }

    public boolean addFilter(android.filterfw.core.Filter)
    {
        android.filterfw.core.FilterGraph r0;
        android.filterfw.core.Filter r1;
        boolean $z0;
        java.util.HashSet $r2;
        java.util.HashMap $r3;
        java.lang.String $r4;

        r0 := @this: android.filterfw.core.FilterGraph;

        r1 := @parameter0: android.filterfw.core.Filter;

        $z0 = virtualinvoke r0.<android.filterfw.core.FilterGraph: boolean containsFilter(android.filterfw.core.Filter)>(r1);

        if $z0 != 0 goto label1;

        $r2 = r0.<android.filterfw.core.FilterGraph: java.util.HashSet mFilters>;

        virtualinvoke $r2.<java.util.HashSet: boolean add(java.lang.Object)>(r1);

        $r3 = r0.<android.filterfw.core.FilterGraph: java.util.HashMap mNameMap>;

        $r4 = virtualinvoke r1.<android.filterfw.core.Filter: java.lang.String getName()>();

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, r1);

        return 1;

     label1:
        return 0;
    }

    public void beginProcessing()
    {
        android.filterfw.core.FilterGraph r0;
        java.util.Iterator r1;
        boolean $z0, $z1;
        java.util.HashSet $r2;
        java.lang.Object $r3;
        android.filterfw.core.Filter $r4;
        java.lang.String $r5;

        r0 := @this: android.filterfw.core.FilterGraph;

        $z0 = r0.<android.filterfw.core.FilterGraph: boolean mLogVerbose>;

        if $z0 == 0 goto label1;

        $r5 = r0.<android.filterfw.core.FilterGraph: java.lang.String TAG>;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r5, "Opening all filter connections...");

     label1:
        $r2 = r0.<android.filterfw.core.FilterGraph: java.util.HashSet mFilters>;

        r1 = virtualinvoke $r2.<java.util.HashSet: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (android.filterfw.core.Filter) $r3;

        virtualinvoke $r4.<android.filterfw.core.Filter: void openOutputs()>();

        goto label2;

     label3:
        r0.<android.filterfw.core.FilterGraph: boolean mIsReady> = 1;

        return;
    }

    public void closeFilters(android.filterfw.core.FilterContext)
    {
        android.filterfw.core.FilterGraph r0;
        android.filterfw.core.FilterContext r1;
        java.util.Iterator r2;
        boolean $z0, $z1;
        java.util.HashSet $r3;
        java.lang.Object $r4;
        android.filterfw.core.Filter $r5;
        java.lang.String $r6;

        r0 := @this: android.filterfw.core.FilterGraph;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        $z0 = r0.<android.filterfw.core.FilterGraph: boolean mLogVerbose>;

        if $z0 == 0 goto label1;

        $r6 = r0.<android.filterfw.core.FilterGraph: java.lang.String TAG>;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r6, "Closing all filters...");

     label1:
        $r3 = r0.<android.filterfw.core.FilterGraph: java.util.HashSet mFilters>;

        r2 = virtualinvoke $r3.<java.util.HashSet: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (android.filterfw.core.Filter) $r4;

        virtualinvoke $r5.<android.filterfw.core.Filter: void performClose(android.filterfw.core.FilterContext)>(r1);

        goto label2;

     label3:
        r0.<android.filterfw.core.FilterGraph: boolean mIsReady> = 0;

        return;
    }

    public void connect(android.filterfw.core.Filter, java.lang.String, android.filterfw.core.Filter, java.lang.String)
    {
        android.filterfw.core.FilterGraph r0;
        android.filterfw.core.Filter r1, r3;
        java.lang.String r2, r4, $r17, $r24;
        android.filterfw.core.OutputPort r5;
        android.filterfw.core.InputPort r6;
        java.lang.IllegalArgumentException $r7;
        boolean $z0, $z1;
        java.lang.RuntimeException $r8, $r9, $r16;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r14, $r15, $r18, $r19, $r20, $r21, $r22, $r23;

        r0 := @this: android.filterfw.core.FilterGraph;

        r1 := @parameter0: android.filterfw.core.Filter;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.filterfw.core.Filter;

        r4 := @parameter3: java.lang.String;

        if r1 == null goto label1;

        if r3 != null goto label2;

     label1:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Passing null Filter in connect()!");

        throw $r7;

     label2:
        $z0 = virtualinvoke r0.<android.filterfw.core.FilterGraph: boolean containsFilter(android.filterfw.core.Filter)>(r1);

        if $z0 == 0 goto label3;

        $z1 = virtualinvoke r0.<android.filterfw.core.FilterGraph: boolean containsFilter(android.filterfw.core.Filter)>(r3);

        if $z1 != 0 goto label4;

     label3:
        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>("Attempting to connect filter not in graph!");

        throw $r8;

     label4:
        r5 = virtualinvoke r1.<android.filterfw.core.Filter: android.filterfw.core.OutputPort getOutputPort(java.lang.String)>(r2);

        r6 = virtualinvoke r3.<android.filterfw.core.Filter: android.filterfw.core.InputPort getInputPort(java.lang.String)>(r4);

        if r5 != null goto label5;

        $r16 = new java.lang.RuntimeException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown output port \'");

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' on Filter ");

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String)>($r24);

        throw $r16;

     label5:
        if r6 != null goto label6;

        $r9 = new java.lang.RuntimeException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown input port \'");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' on Filter ");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>($r17);

        throw $r9;

     label6:
        specialinvoke r0.<android.filterfw.core.FilterGraph: void preconnect(android.filterfw.core.OutputPort,android.filterfw.core.InputPort)>(r5, r6);

        return;
    }

    public void connect(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        android.filterfw.core.FilterGraph r0;
        java.lang.String r1, r2, r3, r4, $r12, $r18;
        android.filterfw.core.Filter r5, r6;
        java.lang.RuntimeException $r7, $r13;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r14, $r15, $r16, $r17;

        r0 := @this: android.filterfw.core.FilterGraph;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 = virtualinvoke r0.<android.filterfw.core.FilterGraph: android.filterfw.core.Filter getFilter(java.lang.String)>(r1);

        r6 = virtualinvoke r0.<android.filterfw.core.FilterGraph: android.filterfw.core.Filter getFilter(java.lang.String)>(r3);

        if r5 != null goto label1;

        $r13 = new java.lang.RuntimeException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempting to connect unknown source filter \'");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'!");

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>($r18);

        throw $r13;

     label1:
        if r6 != null goto label2;

        $r7 = new java.lang.RuntimeException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempting to connect unknown target filter \'");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'!");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r12);

        throw $r7;

     label2:
        virtualinvoke r0.<android.filterfw.core.FilterGraph: void connect(android.filterfw.core.Filter,java.lang.String,android.filterfw.core.Filter,java.lang.String)>(r5, r2, r6, r4);

        return;
    }

    public boolean containsFilter(android.filterfw.core.Filter)
    {
        android.filterfw.core.FilterGraph r0;
        android.filterfw.core.Filter r1;
        java.util.HashSet $r2;
        boolean $z0;

        r0 := @this: android.filterfw.core.FilterGraph;

        r1 := @parameter0: android.filterfw.core.Filter;

        $r2 = r0.<android.filterfw.core.FilterGraph: java.util.HashSet mFilters>;

        $z0 = virtualinvoke $r2.<java.util.HashSet: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    public void flushFrames()
    {
        android.filterfw.core.FilterGraph r0;
        java.util.Iterator r1;
        java.util.HashSet $r2;
        boolean $z0;
        java.lang.Object $r3;
        android.filterfw.core.Filter $r4;

        r0 := @this: android.filterfw.core.FilterGraph;

        $r2 = r0.<android.filterfw.core.FilterGraph: java.util.HashSet mFilters>;

        r1 = virtualinvoke $r2.<java.util.HashSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (android.filterfw.core.Filter) $r3;

        virtualinvoke $r4.<android.filterfw.core.Filter: void clearOutputs()>();

        goto label1;

     label2:
        return;
    }

    public android.filterfw.core.Filter getFilter(java.lang.String)
    {
        android.filterfw.core.FilterGraph r0;
        java.lang.String r1;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        android.filterfw.core.Filter $r4;

        r0 := @this: android.filterfw.core.FilterGraph;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.filterfw.core.FilterGraph: java.util.HashMap mNameMap>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (android.filterfw.core.Filter) $r3;

        return $r4;
    }

    public java.util.Set getFilters()
    {
        android.filterfw.core.FilterGraph r0;
        java.util.HashSet $r1;

        r0 := @this: android.filterfw.core.FilterGraph;

        $r1 = r0.<android.filterfw.core.FilterGraph: java.util.HashSet mFilters>;

        return $r1;
    }

    public boolean isReady()
    {
        android.filterfw.core.FilterGraph r0;
        boolean $z0;

        r0 := @this: android.filterfw.core.FilterGraph;

        $z0 = r0.<android.filterfw.core.FilterGraph: boolean mIsReady>;

        return $z0;
    }

    public void setAutoBranchMode(int)
    {
        android.filterfw.core.FilterGraph r0;
        int i0;

        r0 := @this: android.filterfw.core.FilterGraph;

        i0 := @parameter0: int;

        r0.<android.filterfw.core.FilterGraph: int mAutoBranchMode> = i0;

        return;
    }

    public void setDiscardUnconnectedOutputs(boolean)
    {
        android.filterfw.core.FilterGraph r0;
        boolean z0;

        r0 := @this: android.filterfw.core.FilterGraph;

        z0 := @parameter0: boolean;

        r0.<android.filterfw.core.FilterGraph: boolean mDiscardUnconnectedOutputs> = z0;

        return;
    }

    public void setTypeCheckMode(int)
    {
        android.filterfw.core.FilterGraph r0;
        int i0;

        r0 := @this: android.filterfw.core.FilterGraph;

        i0 := @parameter0: int;

        r0.<android.filterfw.core.FilterGraph: int mTypeCheckMode> = i0;

        return;
    }

    void setupFilters()
    {
        android.filterfw.core.FilterGraph r0;
        boolean $z0;

        r0 := @this: android.filterfw.core.FilterGraph;

        $z0 = r0.<android.filterfw.core.FilterGraph: boolean mDiscardUnconnectedOutputs>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<android.filterfw.core.FilterGraph: void discardUnconnectedOutputs()>();

     label1:
        specialinvoke r0.<android.filterfw.core.FilterGraph: void connectPorts()>();

        specialinvoke r0.<android.filterfw.core.FilterGraph: void checkConnections()>();

        specialinvoke r0.<android.filterfw.core.FilterGraph: void runTypeCheck()>();

        return;
    }

    public void tearDown(android.filterfw.core.FilterContext)
    {
        android.filterfw.core.FilterGraph r0;
        android.filterfw.core.FilterContext r1;
        java.util.Iterator r2;
        java.util.HashSet $r3, $r4, $r5;
        boolean $z0, $z1;
        java.util.HashMap $r6;
        java.lang.Object $r7;
        android.filterfw.core.Filter $r8;

        r0 := @this: android.filterfw.core.FilterGraph;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        $r3 = r0.<android.filterfw.core.FilterGraph: java.util.HashSet mFilters>;

        $z0 = virtualinvoke $r3.<java.util.HashSet: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        virtualinvoke r0.<android.filterfw.core.FilterGraph: void flushFrames()>();

        $r4 = r0.<android.filterfw.core.FilterGraph: java.util.HashSet mFilters>;

        r2 = virtualinvoke $r4.<java.util.HashSet: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (android.filterfw.core.Filter) $r7;

        virtualinvoke $r8.<android.filterfw.core.Filter: void performTearDown(android.filterfw.core.FilterContext)>(r1);

        goto label1;

     label2:
        $r5 = r0.<android.filterfw.core.FilterGraph: java.util.HashSet mFilters>;

        virtualinvoke $r5.<java.util.HashSet: void clear()>();

        $r6 = r0.<android.filterfw.core.FilterGraph: java.util.HashMap mNameMap>;

        virtualinvoke $r6.<java.util.HashMap: void clear()>();

        r0.<android.filterfw.core.FilterGraph: boolean mIsReady> = 0;

     label3:
        return;
    }

    public static void <clinit>()
    {
        <android.filterfw.core.FilterGraph: int TYPECHECK_STRICT> = 2;

        <android.filterfw.core.FilterGraph: int TYPECHECK_OFF> = 0;

        <android.filterfw.core.FilterGraph: int TYPECHECK_DYNAMIC> = 1;

        <android.filterfw.core.FilterGraph: int AUTOBRANCH_UNSYNCED> = 2;

        <android.filterfw.core.FilterGraph: int AUTOBRANCH_SYNCED> = 1;

        <android.filterfw.core.FilterGraph: int AUTOBRANCH_OFF> = 0;

        return;
    }
}
