public class android.gesture.GestureOverlayView extends android.widget.FrameLayout
{
    private static final boolean DITHER_FLAG;
    private static final int FADE_ANIMATION_RATE;
    private static final boolean GESTURE_RENDERING_ANTIALIAS;
    public static final int GESTURE_STROKE_TYPE_MULTIPLE;
    public static final int GESTURE_STROKE_TYPE_SINGLE;
    public static final int ORIENTATION_HORIZONTAL;
    public static final int ORIENTATION_VERTICAL;
    private int mCertainGestureColor;
    private int mCurrentColor;
    private android.gesture.Gesture mCurrentGesture;
    private float mCurveEndX;
    private float mCurveEndY;
    private long mFadeDuration;
    private boolean mFadeEnabled;
    private long mFadeOffset;
    private float mFadingAlpha;
    private boolean mFadingHasStarted;
    private final android.gesture.GestureOverlayView$FadeOutRunnable mFadingOut;
    private long mFadingStart;
    private final android.graphics.Paint mGesturePaint;
    private float mGestureStrokeAngleThreshold;
    private float mGestureStrokeLengthThreshold;
    private float mGestureStrokeSquarenessTreshold;
    private int mGestureStrokeType;
    private float mGestureStrokeWidth;
    private boolean mGestureVisible;
    private boolean mHandleGestureActions;
    private boolean mInterceptEvents;
    private final android.view.animation.AccelerateDecelerateInterpolator mInterpolator;
    private final android.graphics.Rect mInvalidRect;
    private int mInvalidateExtraBorder;
    private boolean mIsFadingOut;
    private boolean mIsGesturing;
    private boolean mIsListeningForGestures;
    private final java.util.ArrayList mOnGestureListeners;
    private final java.util.ArrayList mOnGesturePerformedListeners;
    private final java.util.ArrayList mOnGesturingListeners;
    private int mOrientation;
    private final android.graphics.Path mPath;
    private boolean mPreviousWasGesturing;
    private boolean mResetGesture;
    private final java.util.ArrayList mStrokeBuffer;
    private float mTotalLength;
    private int mUncertainGestureColor;
    private float mX;
    private float mY;

    public void <init>(android.content.Context)
    {
        android.gesture.GestureOverlayView r0;
        android.content.Context r1;
        android.graphics.Paint $r2;
        android.graphics.Rect $r3;
        android.graphics.Path $r4;
        java.util.ArrayList $r5, $r6, $r7, $r8;
        android.view.animation.AccelerateDecelerateInterpolator $r9;
        android.gesture.GestureOverlayView$FadeOutRunnable $r10;

        r0 := @this: android.gesture.GestureOverlayView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.FrameLayout: void <init>(android.content.Context)>(r1);

        $r2 = new android.graphics.Paint;

        specialinvoke $r2.<android.graphics.Paint: void <init>()>();

        r0.<android.gesture.GestureOverlayView: android.graphics.Paint mGesturePaint> = $r2;

        r0.<android.gesture.GestureOverlayView: long mFadeDuration> = 150L;

        r0.<android.gesture.GestureOverlayView: long mFadeOffset> = 420L;

        r0.<android.gesture.GestureOverlayView: boolean mFadeEnabled> = 1;

        r0.<android.gesture.GestureOverlayView: int mCertainGestureColor> = -256;

        r0.<android.gesture.GestureOverlayView: int mUncertainGestureColor> = 1224736512;

        r0.<android.gesture.GestureOverlayView: float mGestureStrokeWidth> = 12.0F;

        r0.<android.gesture.GestureOverlayView: int mInvalidateExtraBorder> = 10;

        r0.<android.gesture.GestureOverlayView: int mGestureStrokeType> = 0;

        r0.<android.gesture.GestureOverlayView: float mGestureStrokeLengthThreshold> = 50.0F;

        r0.<android.gesture.GestureOverlayView: float mGestureStrokeSquarenessTreshold> = 0.275F;

        r0.<android.gesture.GestureOverlayView: float mGestureStrokeAngleThreshold> = 40.0F;

        r0.<android.gesture.GestureOverlayView: int mOrientation> = 1;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<android.gesture.GestureOverlayView: android.graphics.Rect mInvalidRect> = $r3;

        $r4 = new android.graphics.Path;

        specialinvoke $r4.<android.graphics.Path: void <init>()>();

        r0.<android.gesture.GestureOverlayView: android.graphics.Path mPath> = $r4;

        r0.<android.gesture.GestureOverlayView: boolean mGestureVisible> = 1;

        r0.<android.gesture.GestureOverlayView: boolean mIsGesturing> = 0;

        r0.<android.gesture.GestureOverlayView: boolean mPreviousWasGesturing> = 0;

        r0.<android.gesture.GestureOverlayView: boolean mInterceptEvents> = 1;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>(100);

        r0.<android.gesture.GestureOverlayView: java.util.ArrayList mStrokeBuffer> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<android.gesture.GestureOverlayView: java.util.ArrayList mOnGestureListeners> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<android.gesture.GestureOverlayView: java.util.ArrayList mOnGesturePerformedListeners> = $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<android.gesture.GestureOverlayView: java.util.ArrayList mOnGesturingListeners> = $r8;

        r0.<android.gesture.GestureOverlayView: boolean mIsFadingOut> = 0;

        r0.<android.gesture.GestureOverlayView: float mFadingAlpha> = 1.0F;

        $r9 = new android.view.animation.AccelerateDecelerateInterpolator;

        specialinvoke $r9.<android.view.animation.AccelerateDecelerateInterpolator: void <init>()>();

        r0.<android.gesture.GestureOverlayView: android.view.animation.AccelerateDecelerateInterpolator mInterpolator> = $r9;

        $r10 = new android.gesture.GestureOverlayView$FadeOutRunnable;

        specialinvoke $r10.<android.gesture.GestureOverlayView$FadeOutRunnable: void <init>(android.gesture.GestureOverlayView,android.gesture.GestureOverlayView$1)>(r0, null);

        r0.<android.gesture.GestureOverlayView: android.gesture.GestureOverlayView$FadeOutRunnable mFadingOut> = $r10;

        specialinvoke r0.<android.gesture.GestureOverlayView: void init()>();

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.gesture.GestureOverlayView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.gesture.GestureOverlayView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.gesture.GestureOverlayView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 16843776);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.gesture.GestureOverlayView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i11, $i12, $i14, $i15, $i16, $i18, $i19;
        android.content.res.TypedArray r3;
        android.graphics.Paint $r4;
        android.graphics.Rect $r5;
        android.graphics.Path $r6;
        java.util.ArrayList $r7, $r8, $r9, $r10;
        android.view.animation.AccelerateDecelerateInterpolator $r11;
        android.gesture.GestureOverlayView$FadeOutRunnable $r12;
        int[] $r13;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        long $l9, $l10, $l13, $l17;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: android.gesture.GestureOverlayView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        $r4 = new android.graphics.Paint;

        specialinvoke $r4.<android.graphics.Paint: void <init>()>();

        r0.<android.gesture.GestureOverlayView: android.graphics.Paint mGesturePaint> = $r4;

        r0.<android.gesture.GestureOverlayView: long mFadeDuration> = 150L;

        r0.<android.gesture.GestureOverlayView: long mFadeOffset> = 420L;

        r0.<android.gesture.GestureOverlayView: boolean mFadeEnabled> = 1;

        r0.<android.gesture.GestureOverlayView: int mCertainGestureColor> = -256;

        r0.<android.gesture.GestureOverlayView: int mUncertainGestureColor> = 1224736512;

        r0.<android.gesture.GestureOverlayView: float mGestureStrokeWidth> = 12.0F;

        r0.<android.gesture.GestureOverlayView: int mInvalidateExtraBorder> = 10;

        r0.<android.gesture.GestureOverlayView: int mGestureStrokeType> = 0;

        r0.<android.gesture.GestureOverlayView: float mGestureStrokeLengthThreshold> = 50.0F;

        r0.<android.gesture.GestureOverlayView: float mGestureStrokeSquarenessTreshold> = 0.275F;

        r0.<android.gesture.GestureOverlayView: float mGestureStrokeAngleThreshold> = 40.0F;

        r0.<android.gesture.GestureOverlayView: int mOrientation> = 1;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<android.gesture.GestureOverlayView: android.graphics.Rect mInvalidRect> = $r5;

        $r6 = new android.graphics.Path;

        specialinvoke $r6.<android.graphics.Path: void <init>()>();

        r0.<android.gesture.GestureOverlayView: android.graphics.Path mPath> = $r6;

        r0.<android.gesture.GestureOverlayView: boolean mGestureVisible> = 1;

        r0.<android.gesture.GestureOverlayView: boolean mIsGesturing> = 0;

        r0.<android.gesture.GestureOverlayView: boolean mPreviousWasGesturing> = 0;

        r0.<android.gesture.GestureOverlayView: boolean mInterceptEvents> = 1;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>(100);

        r0.<android.gesture.GestureOverlayView: java.util.ArrayList mStrokeBuffer> = $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<android.gesture.GestureOverlayView: java.util.ArrayList mOnGestureListeners> = $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r0.<android.gesture.GestureOverlayView: java.util.ArrayList mOnGesturePerformedListeners> = $r9;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r0.<android.gesture.GestureOverlayView: java.util.ArrayList mOnGesturingListeners> = $r10;

        r0.<android.gesture.GestureOverlayView: boolean mIsFadingOut> = 0;

        r0.<android.gesture.GestureOverlayView: float mFadingAlpha> = 1.0F;

        $r11 = new android.view.animation.AccelerateDecelerateInterpolator;

        specialinvoke $r11.<android.view.animation.AccelerateDecelerateInterpolator: void <init>()>();

        r0.<android.gesture.GestureOverlayView: android.view.animation.AccelerateDecelerateInterpolator mInterpolator> = $r11;

        $r12 = new android.gesture.GestureOverlayView$FadeOutRunnable;

        specialinvoke $r12.<android.gesture.GestureOverlayView$FadeOutRunnable: void <init>(android.gesture.GestureOverlayView,android.gesture.GestureOverlayView$1)>(r0, null);

        r0.<android.gesture.GestureOverlayView: android.gesture.GestureOverlayView$FadeOutRunnable mFadingOut> = $r12;

        $r13 = <com.android.internal.R$styleable: int[] GestureOverlayView>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r13, i0, 0);

        $f1 = r0.<android.gesture.GestureOverlayView: float mGestureStrokeWidth>;

        $f0 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(1, $f1);

        r0.<android.gesture.GestureOverlayView: float mGestureStrokeWidth> = $f0;

        $f2 = r0.<android.gesture.GestureOverlayView: float mGestureStrokeWidth>;

        $i1 = (int) $f2;

        $i3 = -1 + $i1;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i3);

        r0.<android.gesture.GestureOverlayView: int mInvalidateExtraBorder> = $i2;

        $i5 = r0.<android.gesture.GestureOverlayView: int mCertainGestureColor>;

        $i4 = virtualinvoke r3.<android.content.res.TypedArray: int getColor(int,int)>(2, $i5);

        r0.<android.gesture.GestureOverlayView: int mCertainGestureColor> = $i4;

        $i7 = r0.<android.gesture.GestureOverlayView: int mUncertainGestureColor>;

        $i6 = virtualinvoke r3.<android.content.res.TypedArray: int getColor(int,int)>(3, $i7);

        r0.<android.gesture.GestureOverlayView: int mUncertainGestureColor> = $i6;

        $l9 = r0.<android.gesture.GestureOverlayView: long mFadeDuration>;

        $i8 = (int) $l9;

        $i11 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(5, $i8);

        $l10 = (long) $i11;

        r0.<android.gesture.GestureOverlayView: long mFadeDuration> = $l10;

        $l13 = r0.<android.gesture.GestureOverlayView: long mFadeOffset>;

        $i12 = (int) $l13;

        $i16 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(4, $i12);

        $l17 = (long) $i16;

        r0.<android.gesture.GestureOverlayView: long mFadeOffset> = $l17;

        $i14 = r0.<android.gesture.GestureOverlayView: int mGestureStrokeType>;

        $i15 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(6, $i14);

        r0.<android.gesture.GestureOverlayView: int mGestureStrokeType> = $i15;

        $f5 = r0.<android.gesture.GestureOverlayView: float mGestureStrokeLengthThreshold>;

        $f6 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(7, $f5);

        r0.<android.gesture.GestureOverlayView: float mGestureStrokeLengthThreshold> = $f6;

        $f3 = r0.<android.gesture.GestureOverlayView: float mGestureStrokeAngleThreshold>;

        $f4 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(9, $f3);

        r0.<android.gesture.GestureOverlayView: float mGestureStrokeAngleThreshold> = $f4;

        $f7 = r0.<android.gesture.GestureOverlayView: float mGestureStrokeSquarenessTreshold>;

        $f8 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(8, $f7);

        r0.<android.gesture.GestureOverlayView: float mGestureStrokeSquarenessTreshold> = $f8;

        $z0 = r0.<android.gesture.GestureOverlayView: boolean mInterceptEvents>;

        $z1 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(10, $z0);

        r0.<android.gesture.GestureOverlayView: boolean mInterceptEvents> = $z1;

        $z2 = r0.<android.gesture.GestureOverlayView: boolean mFadeEnabled>;

        $z3 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(11, $z2);

        r0.<android.gesture.GestureOverlayView: boolean mFadeEnabled> = $z3;

        $i18 = r0.<android.gesture.GestureOverlayView: int mOrientation>;

        $i19 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(0, $i18);

        r0.<android.gesture.GestureOverlayView: int mOrientation> = $i19;

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        specialinvoke r0.<android.gesture.GestureOverlayView: void init()>();

        return;
    }

    static boolean access$100(android.gesture.GestureOverlayView)
    {
        android.gesture.GestureOverlayView r0;
        boolean $z0;

        r0 := @parameter0: android.gesture.GestureOverlayView;

        $z0 = r0.<android.gesture.GestureOverlayView: boolean mIsFadingOut>;

        return $z0;
    }

    static float access$1000(android.gesture.GestureOverlayView)
    {
        android.gesture.GestureOverlayView r0;
        float $f0;

        r0 := @parameter0: android.gesture.GestureOverlayView;

        $f0 = r0.<android.gesture.GestureOverlayView: float mFadingAlpha>;

        return $f0;
    }

    static float access$1002(android.gesture.GestureOverlayView, float)
    {
        android.gesture.GestureOverlayView r0;
        float f0;

        r0 := @parameter0: android.gesture.GestureOverlayView;

        f0 := @parameter1: float;

        r0.<android.gesture.GestureOverlayView: float mFadingAlpha> = f0;

        return f0;
    }

    static boolean access$102(android.gesture.GestureOverlayView, boolean)
    {
        android.gesture.GestureOverlayView r0;
        boolean z0;

        r0 := @parameter0: android.gesture.GestureOverlayView;

        z0 := @parameter1: boolean;

        r0.<android.gesture.GestureOverlayView: boolean mIsFadingOut> = z0;

        return z0;
    }

    static android.view.animation.AccelerateDecelerateInterpolator access$1100(android.gesture.GestureOverlayView)
    {
        android.gesture.GestureOverlayView r0;
        android.view.animation.AccelerateDecelerateInterpolator $r1;

        r0 := @parameter0: android.gesture.GestureOverlayView;

        $r1 = r0.<android.gesture.GestureOverlayView: android.view.animation.AccelerateDecelerateInterpolator mInterpolator>;

        return $r1;
    }

    static boolean access$1202(android.gesture.GestureOverlayView, boolean)
    {
        android.gesture.GestureOverlayView r0;
        boolean z0;

        r0 := @parameter0: android.gesture.GestureOverlayView;

        z0 := @parameter1: boolean;

        r0.<android.gesture.GestureOverlayView: boolean mResetGesture> = z0;

        return z0;
    }

    static long access$200(android.gesture.GestureOverlayView)
    {
        android.gesture.GestureOverlayView r0;
        long $l0;

        r0 := @parameter0: android.gesture.GestureOverlayView;

        $l0 = r0.<android.gesture.GestureOverlayView: long mFadingStart>;

        return $l0;
    }

    static long access$300(android.gesture.GestureOverlayView)
    {
        android.gesture.GestureOverlayView r0;
        long $l0;

        r0 := @parameter0: android.gesture.GestureOverlayView;

        $l0 = r0.<android.gesture.GestureOverlayView: long mFadeDuration>;

        return $l0;
    }

    static void access$400(android.gesture.GestureOverlayView)
    {
        android.gesture.GestureOverlayView r0;

        r0 := @parameter0: android.gesture.GestureOverlayView;

        specialinvoke r0.<android.gesture.GestureOverlayView: void fireOnGesturePerformed()>();

        return;
    }

    static boolean access$502(android.gesture.GestureOverlayView, boolean)
    {
        android.gesture.GestureOverlayView r0;
        boolean z0;

        r0 := @parameter0: android.gesture.GestureOverlayView;

        z0 := @parameter1: boolean;

        r0.<android.gesture.GestureOverlayView: boolean mPreviousWasGesturing> = z0;

        return z0;
    }

    static boolean access$602(android.gesture.GestureOverlayView, boolean)
    {
        android.gesture.GestureOverlayView r0;
        boolean z0;

        r0 := @parameter0: android.gesture.GestureOverlayView;

        z0 := @parameter1: boolean;

        r0.<android.gesture.GestureOverlayView: boolean mFadingHasStarted> = z0;

        return z0;
    }

    static android.graphics.Path access$700(android.gesture.GestureOverlayView)
    {
        android.gesture.GestureOverlayView r0;
        android.graphics.Path $r1;

        r0 := @parameter0: android.gesture.GestureOverlayView;

        $r1 = r0.<android.gesture.GestureOverlayView: android.graphics.Path mPath>;

        return $r1;
    }

    static android.gesture.Gesture access$802(android.gesture.GestureOverlayView, android.gesture.Gesture)
    {
        android.gesture.GestureOverlayView r0;
        android.gesture.Gesture r1;

        r0 := @parameter0: android.gesture.GestureOverlayView;

        r1 := @parameter1: android.gesture.Gesture;

        r0.<android.gesture.GestureOverlayView: android.gesture.Gesture mCurrentGesture> = r1;

        return r1;
    }

    static void access$900(android.gesture.GestureOverlayView, int)
    {
        android.gesture.GestureOverlayView r0;
        int i0;

        r0 := @parameter0: android.gesture.GestureOverlayView;

        i0 := @parameter1: int;

        specialinvoke r0.<android.gesture.GestureOverlayView: void setPaintAlpha(int)>(i0);

        return;
    }

    private void cancelGesture(android.view.MotionEvent)
    {
        android.gesture.GestureOverlayView r0;
        android.view.MotionEvent r1;
        java.util.ArrayList r2;
        int i0, i1;
        java.lang.Object $r3;
        android.gesture.GestureOverlayView$OnGestureListener $r4;

        r0 := @this: android.gesture.GestureOverlayView;

        r1 := @parameter0: android.view.MotionEvent;

        r2 = r0.<android.gesture.GestureOverlayView: java.util.ArrayList mOnGestureListeners>;

        i0 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r4 = (android.gesture.GestureOverlayView$OnGestureListener) $r3;

        interfaceinvoke $r4.<android.gesture.GestureOverlayView$OnGestureListener: void onGestureCancelled(android.gesture.GestureOverlayView,android.view.MotionEvent)>(r0, r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<android.gesture.GestureOverlayView: void clear(boolean)>(0);

        return;
    }

    private void clear(boolean, boolean, boolean)
    {
        android.gesture.GestureOverlayView r0;
        boolean z0, z1, z2;
        android.gesture.GestureOverlayView$FadeOutRunnable $r1, $r2, $r3, $r5, $r6, $r7, $r10;
        int $i0;
        android.graphics.Path $r4, $r8;
        long $l1, $l2, $l3, $l4, $l5, $l6;
        android.gesture.Gesture $r9;

        r0 := @this: android.gesture.GestureOverlayView;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        specialinvoke r0.<android.gesture.GestureOverlayView: void setPaintAlpha(int)>(255);

        $r1 = r0.<android.gesture.GestureOverlayView: android.gesture.GestureOverlayView$FadeOutRunnable mFadingOut>;

        virtualinvoke r0.<android.gesture.GestureOverlayView: boolean removeCallbacks(java.lang.Runnable)>($r1);

        r0.<android.gesture.GestureOverlayView: boolean mResetGesture> = 0;

        $r2 = r0.<android.gesture.GestureOverlayView: android.gesture.GestureOverlayView$FadeOutRunnable mFadingOut>;

        $r2.<android.gesture.GestureOverlayView$FadeOutRunnable: boolean fireActionPerformed> = z1;

        $r3 = r0.<android.gesture.GestureOverlayView: android.gesture.GestureOverlayView$FadeOutRunnable mFadingOut>;

        $r3.<android.gesture.GestureOverlayView$FadeOutRunnable: boolean resetMultipleStrokes> = 0;

        if z0 == 0 goto label1;

        $r9 = r0.<android.gesture.GestureOverlayView: android.gesture.Gesture mCurrentGesture>;

        if $r9 == null goto label1;

        r0.<android.gesture.GestureOverlayView: float mFadingAlpha> = 1.0F;

        r0.<android.gesture.GestureOverlayView: boolean mIsFadingOut> = 1;

        r0.<android.gesture.GestureOverlayView: boolean mFadingHasStarted> = 0;

        $l3 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        $l5 = r0.<android.gesture.GestureOverlayView: long mFadeOffset>;

        $l4 = $l3 + $l5;

        r0.<android.gesture.GestureOverlayView: long mFadingStart> = $l4;

        $r10 = r0.<android.gesture.GestureOverlayView: android.gesture.GestureOverlayView$FadeOutRunnable mFadingOut>;

        $l6 = r0.<android.gesture.GestureOverlayView: long mFadeOffset>;

        virtualinvoke r0.<android.gesture.GestureOverlayView: boolean postDelayed(java.lang.Runnable,long)>($r10, $l6);

        return;

     label1:
        r0.<android.gesture.GestureOverlayView: float mFadingAlpha> = 1.0F;

        r0.<android.gesture.GestureOverlayView: boolean mIsFadingOut> = 0;

        r0.<android.gesture.GestureOverlayView: boolean mFadingHasStarted> = 0;

        if z2 == 0 goto label2;

        r0.<android.gesture.GestureOverlayView: android.gesture.Gesture mCurrentGesture> = null;

        $r8 = r0.<android.gesture.GestureOverlayView: android.graphics.Path mPath>;

        virtualinvoke $r8.<android.graphics.Path: void rewind()>();

        virtualinvoke r0.<android.gesture.GestureOverlayView: void invalidate()>();

        return;

     label2:
        if z1 == 0 goto label3;

        $r7 = r0.<android.gesture.GestureOverlayView: android.gesture.GestureOverlayView$FadeOutRunnable mFadingOut>;

        $l2 = r0.<android.gesture.GestureOverlayView: long mFadeOffset>;

        virtualinvoke r0.<android.gesture.GestureOverlayView: boolean postDelayed(java.lang.Runnable,long)>($r7, $l2);

        return;

     label3:
        $i0 = r0.<android.gesture.GestureOverlayView: int mGestureStrokeType>;

        if $i0 != 1 goto label4;

        $r5 = r0.<android.gesture.GestureOverlayView: android.gesture.GestureOverlayView$FadeOutRunnable mFadingOut>;

        $r5.<android.gesture.GestureOverlayView$FadeOutRunnable: boolean resetMultipleStrokes> = 1;

        $r6 = r0.<android.gesture.GestureOverlayView: android.gesture.GestureOverlayView$FadeOutRunnable mFadingOut>;

        $l1 = r0.<android.gesture.GestureOverlayView: long mFadeOffset>;

        virtualinvoke r0.<android.gesture.GestureOverlayView: boolean postDelayed(java.lang.Runnable,long)>($r6, $l1);

        return;

     label4:
        r0.<android.gesture.GestureOverlayView: android.gesture.Gesture mCurrentGesture> = null;

        $r4 = r0.<android.gesture.GestureOverlayView: android.graphics.Path mPath>;

        virtualinvoke $r4.<android.graphics.Path: void rewind()>();

        virtualinvoke r0.<android.gesture.GestureOverlayView: void invalidate()>();

        return;
    }

    private void fireOnGesturePerformed()
    {
        android.gesture.GestureOverlayView r0;
        java.util.ArrayList r1;
        int i0, i1;
        java.lang.Object $r2;
        android.gesture.Gesture $r3;
        android.gesture.GestureOverlayView$OnGesturePerformedListener $r4;

        r0 := @this: android.gesture.GestureOverlayView;

        r1 = r0.<android.gesture.GestureOverlayView: java.util.ArrayList mOnGesturePerformedListeners>;

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r2 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r4 = (android.gesture.GestureOverlayView$OnGesturePerformedListener) $r2;

        $r3 = r0.<android.gesture.GestureOverlayView: android.gesture.Gesture mCurrentGesture>;

        interfaceinvoke $r4.<android.gesture.GestureOverlayView$OnGesturePerformedListener: void onGesturePerformed(android.gesture.GestureOverlayView,android.gesture.Gesture)>(r0, $r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void init()
    {
        android.gesture.GestureOverlayView r0;
        android.graphics.Paint r1;
        int $i0, $i1;
        android.graphics.Paint$Style $r2;
        android.graphics.Paint$Join $r3;
        android.graphics.Paint$Cap $r4;
        float $f0;

        r0 := @this: android.gesture.GestureOverlayView;

        virtualinvoke r0.<android.gesture.GestureOverlayView: void setWillNotDraw(boolean)>(0);

        r1 = r0.<android.gesture.GestureOverlayView: android.graphics.Paint mGesturePaint>;

        virtualinvoke r1.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $i0 = r0.<android.gesture.GestureOverlayView: int mCertainGestureColor>;

        virtualinvoke r1.<android.graphics.Paint: void setColor(int)>($i0);

        $r2 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke r1.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r2);

        $r3 = <android.graphics.Paint$Join: android.graphics.Paint$Join ROUND>;

        virtualinvoke r1.<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint$Join)>($r3);

        $r4 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap ROUND>;

        virtualinvoke r1.<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)>($r4);

        $f0 = r0.<android.gesture.GestureOverlayView: float mGestureStrokeWidth>;

        virtualinvoke r1.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        virtualinvoke r1.<android.graphics.Paint: void setDither(boolean)>(1);

        $i1 = r0.<android.gesture.GestureOverlayView: int mCertainGestureColor>;

        r0.<android.gesture.GestureOverlayView: int mCurrentColor> = $i1;

        specialinvoke r0.<android.gesture.GestureOverlayView: void setPaintAlpha(int)>(255);

        return;
    }

    private boolean processEvent(android.view.MotionEvent)
    {
        android.gesture.GestureOverlayView r0;
        android.view.MotionEvent r1;
        boolean z0, $z1, $z2, $z3;
        android.graphics.Rect r2;
        int $i0;

        r0 := @this: android.gesture.GestureOverlayView;

        r1 := @parameter0: android.view.MotionEvent;

        z0 = 1;

        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        tableswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label5;
            case 2: goto label4;
            case 3: goto label6;
            default: goto label1;
        };

     label1:
        z0 = 0;

     label2:
        return z0;

     label3:
        specialinvoke r0.<android.gesture.GestureOverlayView: void touchDown(android.view.MotionEvent)>(r1);

        virtualinvoke r0.<android.gesture.GestureOverlayView: void invalidate()>();

        return z0;

     label4:
        $z2 = r0.<android.gesture.GestureOverlayView: boolean mIsListeningForGestures>;

        if $z2 == 0 goto label1;

        r2 = specialinvoke r0.<android.gesture.GestureOverlayView: android.graphics.Rect touchMove(android.view.MotionEvent)>(r1);

        if r2 == null goto label2;

        virtualinvoke r0.<android.gesture.GestureOverlayView: void invalidate(android.graphics.Rect)>(r2);

        return z0;

     label5:
        $z3 = r0.<android.gesture.GestureOverlayView: boolean mIsListeningForGestures>;

        if $z3 == 0 goto label1;

        specialinvoke r0.<android.gesture.GestureOverlayView: void touchUp(android.view.MotionEvent,boolean)>(r1, 0);

        virtualinvoke r0.<android.gesture.GestureOverlayView: void invalidate()>();

        return z0;

     label6:
        $z1 = r0.<android.gesture.GestureOverlayView: boolean mIsListeningForGestures>;

        if $z1 == 0 goto label1;

        specialinvoke r0.<android.gesture.GestureOverlayView: void touchUp(android.view.MotionEvent,boolean)>(r1, z0);

        virtualinvoke r0.<android.gesture.GestureOverlayView: void invalidate()>();

        return z0;
    }

    private void setCurrentColor(int)
    {
        android.gesture.GestureOverlayView r0;
        int i0, $i1;
        boolean $z0;
        float $f0, $f1;

        r0 := @this: android.gesture.GestureOverlayView;

        i0 := @parameter0: int;

        r0.<android.gesture.GestureOverlayView: int mCurrentColor> = i0;

        $z0 = r0.<android.gesture.GestureOverlayView: boolean mFadingHasStarted>;

        if $z0 == 0 goto label2;

        $f0 = r0.<android.gesture.GestureOverlayView: float mFadingAlpha>;

        $f1 = 255.0F * $f0;

        $i1 = (int) $f1;

        specialinvoke r0.<android.gesture.GestureOverlayView: void setPaintAlpha(int)>($i1);

     label1:
        virtualinvoke r0.<android.gesture.GestureOverlayView: void invalidate()>();

        return;

     label2:
        specialinvoke r0.<android.gesture.GestureOverlayView: void setPaintAlpha(int)>(255);

        goto label1;
    }

    private void setPaintAlpha(int)
    {
        android.gesture.GestureOverlayView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        android.graphics.Paint $r1;

        r0 := @this: android.gesture.GestureOverlayView;

        i0 := @parameter0: int;

        $i2 = i0 >> 7;

        $i5 = i0 + $i2;

        $i3 = r0.<android.gesture.GestureOverlayView: int mCurrentColor>;

        $i4 = $i3 >>> 24;

        $i6 = $i5 * $i4;

        i1 = $i6 >> 8;

        $r1 = r0.<android.gesture.GestureOverlayView: android.graphics.Paint mGesturePaint>;

        $i7 = r0.<android.gesture.GestureOverlayView: int mCurrentColor>;

        $i8 = $i7 << 8;

        $i10 = $i8 >>> 8;

        $i9 = i1 << 24;

        $i11 = $i10 | $i9;

        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>($i11);

        return;
    }

    private void touchDown(android.view.MotionEvent)
    {
        android.gesture.GestureOverlayView r0;
        android.view.MotionEvent r1;
        float f0, f1;
        int i0, i1, i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        java.util.ArrayList r2, $r5;
        boolean $z0, $z1, $z2, $z4, $z6;
        android.graphics.Path $r3, $r7;
        android.gesture.Gesture $r4, $r10, $r13, $r14;
        android.gesture.GesturePoint $r6;
        long $l4;
        android.graphics.Rect $r8;
        android.gesture.GestureOverlayView$OnGestureListener $r9;
        java.lang.Object $r11;
        android.gesture.GestureOverlayView$FadeOutRunnable $r12;

        r0 := @this: android.gesture.GestureOverlayView;

        r1 := @parameter0: android.view.MotionEvent;

        r0.<android.gesture.GestureOverlayView: boolean mIsListeningForGestures> = 1;

        f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        r0.<android.gesture.GestureOverlayView: float mX> = f0;

        r0.<android.gesture.GestureOverlayView: float mY> = f1;

        r0.<android.gesture.GestureOverlayView: float mTotalLength> = 0.0F;

        r0.<android.gesture.GestureOverlayView: boolean mIsGesturing> = 0;

        $i3 = r0.<android.gesture.GestureOverlayView: int mGestureStrokeType>;

        if $i3 == 0 goto label01;

        $z4 = r0.<android.gesture.GestureOverlayView: boolean mResetGesture>;

        if $z4 == 0 goto label07;

     label01:
        $z0 = r0.<android.gesture.GestureOverlayView: boolean mHandleGestureActions>;

        if $z0 == 0 goto label02;

        $i13 = r0.<android.gesture.GestureOverlayView: int mUncertainGestureColor>;

        specialinvoke r0.<android.gesture.GestureOverlayView: void setCurrentColor(int)>($i13);

     label02:
        r0.<android.gesture.GestureOverlayView: boolean mResetGesture> = 0;

        r0.<android.gesture.GestureOverlayView: android.gesture.Gesture mCurrentGesture> = null;

        $r3 = r0.<android.gesture.GestureOverlayView: android.graphics.Path mPath>;

        virtualinvoke $r3.<android.graphics.Path: void rewind()>();

     label03:
        $z1 = r0.<android.gesture.GestureOverlayView: boolean mFadingHasStarted>;

        if $z1 == 0 goto label09;

        virtualinvoke r0.<android.gesture.GestureOverlayView: void cancelClearAnimation()>();

     label04:
        $r4 = r0.<android.gesture.GestureOverlayView: android.gesture.Gesture mCurrentGesture>;

        if $r4 != null goto label05;

        $r10 = new android.gesture.Gesture;

        specialinvoke $r10.<android.gesture.Gesture: void <init>()>();

        r0.<android.gesture.GestureOverlayView: android.gesture.Gesture mCurrentGesture> = $r10;

     label05:
        $r5 = r0.<android.gesture.GestureOverlayView: java.util.ArrayList mStrokeBuffer>;

        $r6 = new android.gesture.GesturePoint;

        $l4 = virtualinvoke r1.<android.view.MotionEvent: long getEventTime()>();

        specialinvoke $r6.<android.gesture.GesturePoint: void <init>(float,float,long)>(f0, f1, $l4);

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $r7 = r0.<android.gesture.GestureOverlayView: android.graphics.Path mPath>;

        virtualinvoke $r7.<android.graphics.Path: void moveTo(float,float)>(f0, f1);

        i0 = r0.<android.gesture.GestureOverlayView: int mInvalidateExtraBorder>;

        $r8 = r0.<android.gesture.GestureOverlayView: android.graphics.Rect mInvalidRect>;

        $i5 = (int) f0;

        $i12 = $i5 - i0;

        $i7 = (int) f1;

        $i10 = $i7 - i0;

        $i6 = (int) f0;

        $i11 = i0 + $i6;

        $i9 = (int) f1;

        $i8 = i0 + $i9;

        virtualinvoke $r8.<android.graphics.Rect: void set(int,int,int,int)>($i12, $i10, $i11, $i8);

        r0.<android.gesture.GestureOverlayView: float mCurveEndX> = f0;

        r0.<android.gesture.GestureOverlayView: float mCurveEndY> = f1;

        r2 = r0.<android.gesture.GestureOverlayView: java.util.ArrayList mOnGestureListeners>;

        i1 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i2 = 0;

     label06:
        if i2 >= i1 goto label10;

        $r11 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r9 = (android.gesture.GestureOverlayView$OnGestureListener) $r11;

        interfaceinvoke $r9.<android.gesture.GestureOverlayView$OnGestureListener: void onGestureStarted(android.gesture.GestureOverlayView,android.view.MotionEvent)>(r0, r1);

        i2 = i2 + 1;

        goto label06;

     label07:
        $r14 = r0.<android.gesture.GestureOverlayView: android.gesture.Gesture mCurrentGesture>;

        if $r14 == null goto label08;

        $r13 = r0.<android.gesture.GestureOverlayView: android.gesture.Gesture mCurrentGesture>;

        $i15 = virtualinvoke $r13.<android.gesture.Gesture: int getStrokesCount()>();

        if $i15 != 0 goto label03;

     label08:
        $z6 = r0.<android.gesture.GestureOverlayView: boolean mHandleGestureActions>;

        if $z6 == 0 goto label03;

        $i14 = r0.<android.gesture.GestureOverlayView: int mUncertainGestureColor>;

        specialinvoke r0.<android.gesture.GestureOverlayView: void setCurrentColor(int)>($i14);

        goto label03;

     label09:
        $z2 = r0.<android.gesture.GestureOverlayView: boolean mIsFadingOut>;

        if $z2 == 0 goto label04;

        specialinvoke r0.<android.gesture.GestureOverlayView: void setPaintAlpha(int)>(255);

        r0.<android.gesture.GestureOverlayView: boolean mIsFadingOut> = 0;

        r0.<android.gesture.GestureOverlayView: boolean mFadingHasStarted> = 0;

        $r12 = r0.<android.gesture.GestureOverlayView: android.gesture.GestureOverlayView$FadeOutRunnable mFadingOut>;

        virtualinvoke r0.<android.gesture.GestureOverlayView: boolean removeCallbacks(java.lang.Runnable)>($r12);

        goto label04;

     label10:
        return;
    }

    private android.graphics.Rect touchMove(android.view.MotionEvent)
    {
        android.gesture.GestureOverlayView r0;
        android.view.MotionEvent r1;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29;
        android.graphics.Rect r2;
        int i0, i1, i2, i3, i5, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i30, $i31, $i34, $i36;
        java.util.ArrayList r3, r5, r7, $r12;
        android.gesture.GesturePoint r4, $r9;
        android.gesture.OrientedBoundingBox r6;
        byte b4, $b6, $b32, $b33, $b35, $b37, $b38;
        android.graphics.Path $r8;
        long $l29;
        android.gesture.GestureOverlayView$OnGestureListener $r10;
        boolean $z0, $z2;
        java.lang.Object $r11, $r14;
        double $d0, $d1;
        android.gesture.GestureOverlayView$OnGesturingListener $r13;

        r0 := @this: android.gesture.GestureOverlayView;

        r1 := @parameter0: android.view.MotionEvent;

        f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        f2 = r0.<android.gesture.GestureOverlayView: float mX>;

        f3 = r0.<android.gesture.GestureOverlayView: float mY>;

        $f9 = f0 - f2;

        f4 = staticinvoke <java.lang.Math: float abs(float)>($f9);

        $f10 = f1 - f3;

        f5 = staticinvoke <java.lang.Math: float abs(float)>($f10);

        $b6 = f4 cmpl 3.0F;

        if $b6 >= 0 goto label1;

        b4 = f5 cmpl 3.0F;

        r2 = null;

        if b4 < 0 goto label8;

     label1:
        r2 = r0.<android.gesture.GestureOverlayView: android.graphics.Rect mInvalidRect>;

        i0 = r0.<android.gesture.GestureOverlayView: int mInvalidateExtraBorder>;

        $f11 = r0.<android.gesture.GestureOverlayView: float mCurveEndX>;

        $i8 = (int) $f11;

        $i12 = $i8 - i0;

        $f13 = r0.<android.gesture.GestureOverlayView: float mCurveEndY>;

        $i7 = (int) $f13;

        $i14 = $i7 - i0;

        $f12 = r0.<android.gesture.GestureOverlayView: float mCurveEndX>;

        $i11 = (int) $f12;

        $i13 = i0 + $i11;

        $f14 = r0.<android.gesture.GestureOverlayView: float mCurveEndY>;

        $i9 = (int) $f14;

        $i10 = i0 + $i9;

        virtualinvoke r2.<android.graphics.Rect: void set(int,int,int,int)>($i12, $i14, $i13, $i10);

        $f15 = f0 + f2;

        f6 = $f15 / 2.0F;

        r0.<android.gesture.GestureOverlayView: float mCurveEndX> = f6;

        $f16 = f1 + f3;

        f7 = $f16 / 2.0F;

        r0.<android.gesture.GestureOverlayView: float mCurveEndY> = f7;

        $r8 = r0.<android.gesture.GestureOverlayView: android.graphics.Path mPath>;

        virtualinvoke $r8.<android.graphics.Path: void quadTo(float,float,float,float)>(f2, f3, f6, f7);

        $i15 = (int) f2;

        $i23 = $i15 - i0;

        $i16 = (int) f3;

        $i24 = $i16 - i0;

        $i20 = (int) f2;

        $i17 = i0 + $i20;

        $i19 = (int) f3;

        $i18 = i0 + $i19;

        virtualinvoke r2.<android.graphics.Rect: void union(int,int,int,int)>($i23, $i24, $i17, $i18);

        $i22 = (int) f6;

        $i30 = $i22 - i0;

        $i21 = (int) f7;

        $i31 = $i21 - i0;

        $i28 = (int) f6;

        $i25 = i0 + $i28;

        $i27 = (int) f7;

        $i26 = i0 + $i27;

        virtualinvoke r2.<android.graphics.Rect: void union(int,int,int,int)>($i30, $i31, $i25, $i26);

        r0.<android.gesture.GestureOverlayView: float mX> = f0;

        r0.<android.gesture.GestureOverlayView: float mY> = f1;

        r3 = r0.<android.gesture.GestureOverlayView: java.util.ArrayList mStrokeBuffer>;

        $r9 = new android.gesture.GesturePoint;

        $l29 = virtualinvoke r1.<android.view.MotionEvent: long getEventTime()>();

        specialinvoke $r9.<android.gesture.GesturePoint: void <init>(float,float,long)>(f0, f1, $l29);

        r4 = $r9;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        $z2 = r0.<android.gesture.GestureOverlayView: boolean mHandleGestureActions>;

        if $z2 == 0 goto label6;

        $z0 = r0.<android.gesture.GestureOverlayView: boolean mIsGesturing>;

        if $z0 != 0 goto label6;

        $f24 = r0.<android.gesture.GestureOverlayView: float mTotalLength>;

        $f18 = f4 * f4;

        $f17 = f5 * f5;

        $f23 = $f18 + $f17;

        $d0 = (double) $f23;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f19 = (float) $d1;

        $f20 = $f24 + $f19;

        r0.<android.gesture.GestureOverlayView: float mTotalLength> = $f20;

        $f22 = r0.<android.gesture.GestureOverlayView: float mTotalLength>;

        $f21 = r0.<android.gesture.GestureOverlayView: float mGestureStrokeLengthThreshold>;

        $b33 = $f22 cmpl $f21;

        if $b33 <= 0 goto label6;

        $r12 = r0.<android.gesture.GestureOverlayView: java.util.ArrayList mStrokeBuffer>;

        r6 = staticinvoke <android.gesture.GestureUtils: android.gesture.OrientedBoundingBox computeOrientedBoundingBox(java.util.ArrayList)>($r12);

        $f27 = r6.<android.gesture.OrientedBoundingBox: float orientation>;

        f8 = staticinvoke <java.lang.Math: float abs(float)>($f27);

        $b32 = f8 cmpl 90.0F;

        if $b32 <= 0 goto label2;

        f8 = 180.0F - f8;

     label2:
        $f25 = r6.<android.gesture.OrientedBoundingBox: float squareness>;

        $f26 = r0.<android.gesture.GestureOverlayView: float mGestureStrokeSquarenessTreshold>;

        $b37 = $f25 cmpl $f26;

        if $b37 > 0 goto label3;

        $i34 = r0.<android.gesture.GestureOverlayView: int mOrientation>;

        if $i34 != 1 goto label5;

        $f29 = r0.<android.gesture.GestureOverlayView: float mGestureStrokeAngleThreshold>;

        $b38 = f8 cmpg $f29;

        if $b38 >= 0 goto label6;

     label3:
        r0.<android.gesture.GestureOverlayView: boolean mIsGesturing> = 1;

        $i36 = r0.<android.gesture.GestureOverlayView: int mCertainGestureColor>;

        specialinvoke r0.<android.gesture.GestureOverlayView: void setCurrentColor(int)>($i36);

        r7 = r0.<android.gesture.GestureOverlayView: java.util.ArrayList mOnGesturingListeners>;

        i3 = virtualinvoke r7.<java.util.ArrayList: int size()>();

        i5 = 0;

     label4:
        if i5 >= i3 goto label6;

        $r14 = virtualinvoke r7.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        $r13 = (android.gesture.GestureOverlayView$OnGesturingListener) $r14;

        interfaceinvoke $r13.<android.gesture.GestureOverlayView$OnGesturingListener: void onGesturingStarted(android.gesture.GestureOverlayView)>(r0);

        i5 = i5 + 1;

        goto label4;

     label5:
        $f28 = r0.<android.gesture.GestureOverlayView: float mGestureStrokeAngleThreshold>;

        $b35 = f8 cmpl $f28;

        if $b35 > 0 goto label3;

     label6:
        r5 = r0.<android.gesture.GestureOverlayView: java.util.ArrayList mOnGestureListeners>;

        i2 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        i1 = 0;

     label7:
        if i1 >= i2 goto label8;

        $r11 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r10 = (android.gesture.GestureOverlayView$OnGestureListener) $r11;

        interfaceinvoke $r10.<android.gesture.GestureOverlayView$OnGestureListener: void onGesture(android.gesture.GestureOverlayView,android.view.MotionEvent)>(r0, r1);

        i1 = i1 + 1;

        goto label7;

     label8:
        return r2;
    }

    private void touchUp(android.view.MotionEvent, boolean)
    {
        android.gesture.GestureOverlayView r0;
        android.view.MotionEvent r1;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7;
        java.util.ArrayList r2, r3, $r5, $r10;
        int i0, i1, i2, i3;
        android.gesture.Gesture $r4, $r9;
        java.lang.Object $r6, $r11;
        android.gesture.GestureStroke $r7;
        android.gesture.GestureOverlayView$OnGesturingListener $r8;
        android.gesture.GestureOverlayView$OnGestureListener $r12;

        r0 := @this: android.gesture.GestureOverlayView;

        r1 := @parameter0: android.view.MotionEvent;

        z0 := @parameter1: boolean;

        z1 = 1;

        r0.<android.gesture.GestureOverlayView: boolean mIsListeningForGestures> = 0;

        $r4 = r0.<android.gesture.GestureOverlayView: android.gesture.Gesture mCurrentGesture>;

        if $r4 == null goto label10;

        $r9 = r0.<android.gesture.GestureOverlayView: android.gesture.Gesture mCurrentGesture>;

        $r7 = new android.gesture.GestureStroke;

        $r10 = r0.<android.gesture.GestureOverlayView: java.util.ArrayList mStrokeBuffer>;

        specialinvoke $r7.<android.gesture.GestureStroke: void <init>(java.util.ArrayList)>($r10);

        virtualinvoke $r9.<android.gesture.Gesture: void addStroke(android.gesture.GestureStroke)>($r7);

        if z0 != 0 goto label09;

        r3 = r0.<android.gesture.GestureOverlayView: java.util.ArrayList mOnGestureListeners>;

        i2 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        i3 = 0;

     label01:
        if i3 >= i2 goto label02;

        $r11 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r12 = (android.gesture.GestureOverlayView$OnGestureListener) $r11;

        interfaceinvoke $r12.<android.gesture.GestureOverlayView$OnGestureListener: void onGestureEnded(android.gesture.GestureOverlayView,android.view.MotionEvent)>(r0, r1);

        i3 = i3 + 1;

        goto label01;

     label02:
        $z4 = r0.<android.gesture.GestureOverlayView: boolean mHandleGestureActions>;

        if $z4 == 0 goto label07;

        $z7 = r0.<android.gesture.GestureOverlayView: boolean mFadeEnabled>;

        if $z7 == 0 goto label07;

        z2 = z1;

     label03:
        $z6 = r0.<android.gesture.GestureOverlayView: boolean mHandleGestureActions>;

        if $z6 == 0 goto label08;

        $z5 = r0.<android.gesture.GestureOverlayView: boolean mIsGesturing>;

        if $z5 == 0 goto label08;

     label04:
        specialinvoke r0.<android.gesture.GestureOverlayView: void clear(boolean,boolean,boolean)>(z2, z1, 0);

     label05:
        $r5 = r0.<android.gesture.GestureOverlayView: java.util.ArrayList mStrokeBuffer>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        $z3 = r0.<android.gesture.GestureOverlayView: boolean mIsGesturing>;

        r0.<android.gesture.GestureOverlayView: boolean mPreviousWasGesturing> = $z3;

        r0.<android.gesture.GestureOverlayView: boolean mIsGesturing> = 0;

        r2 = r0.<android.gesture.GestureOverlayView: java.util.ArrayList mOnGesturingListeners>;

        i0 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i1 = 0;

     label06:
        if i1 >= i0 goto label11;

        $r6 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r8 = (android.gesture.GestureOverlayView$OnGesturingListener) $r6;

        interfaceinvoke $r8.<android.gesture.GestureOverlayView$OnGesturingListener: void onGesturingEnded(android.gesture.GestureOverlayView)>(r0);

        i1 = i1 + 1;

        goto label06;

     label07:
        z2 = 0;

        goto label03;

     label08:
        z1 = 0;

        goto label04;

     label09:
        specialinvoke r0.<android.gesture.GestureOverlayView: void cancelGesture(android.view.MotionEvent)>(r1);

        goto label05;

     label10:
        specialinvoke r0.<android.gesture.GestureOverlayView: void cancelGesture(android.view.MotionEvent)>(r1);

        goto label05;

     label11:
        return;
    }

    public void addOnGestureListener(android.gesture.GestureOverlayView$OnGestureListener)
    {
        android.gesture.GestureOverlayView r0;
        android.gesture.GestureOverlayView$OnGestureListener r1;
        java.util.ArrayList $r2;

        r0 := @this: android.gesture.GestureOverlayView;

        r1 := @parameter0: android.gesture.GestureOverlayView$OnGestureListener;

        $r2 = r0.<android.gesture.GestureOverlayView: java.util.ArrayList mOnGestureListeners>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void addOnGesturePerformedListener(android.gesture.GestureOverlayView$OnGesturePerformedListener)
    {
        android.gesture.GestureOverlayView r0;
        android.gesture.GestureOverlayView$OnGesturePerformedListener r1;
        java.util.ArrayList $r2, $r3;
        int $i0;

        r0 := @this: android.gesture.GestureOverlayView;

        r1 := @parameter0: android.gesture.GestureOverlayView$OnGesturePerformedListener;

        $r2 = r0.<android.gesture.GestureOverlayView: java.util.ArrayList mOnGesturePerformedListeners>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $r3 = r0.<android.gesture.GestureOverlayView: java.util.ArrayList mOnGesturePerformedListeners>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label1;

        r0.<android.gesture.GestureOverlayView: boolean mHandleGestureActions> = 1;

     label1:
        return;
    }

    public void addOnGesturingListener(android.gesture.GestureOverlayView$OnGesturingListener)
    {
        android.gesture.GestureOverlayView r0;
        android.gesture.GestureOverlayView$OnGesturingListener r1;
        java.util.ArrayList $r2;

        r0 := @this: android.gesture.GestureOverlayView;

        r1 := @parameter0: android.gesture.GestureOverlayView$OnGesturingListener;

        $r2 = r0.<android.gesture.GestureOverlayView: java.util.ArrayList mOnGesturingListeners>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void cancelClearAnimation()
    {
        android.gesture.GestureOverlayView r0;
        android.gesture.GestureOverlayView$FadeOutRunnable $r1;
        android.graphics.Path $r2;

        r0 := @this: android.gesture.GestureOverlayView;

        specialinvoke r0.<android.gesture.GestureOverlayView: void setPaintAlpha(int)>(255);

        r0.<android.gesture.GestureOverlayView: boolean mIsFadingOut> = 0;

        r0.<android.gesture.GestureOverlayView: boolean mFadingHasStarted> = 0;

        $r1 = r0.<android.gesture.GestureOverlayView: android.gesture.GestureOverlayView$FadeOutRunnable mFadingOut>;

        virtualinvoke r0.<android.gesture.GestureOverlayView: boolean removeCallbacks(java.lang.Runnable)>($r1);

        $r2 = r0.<android.gesture.GestureOverlayView: android.graphics.Path mPath>;

        virtualinvoke $r2.<android.graphics.Path: void rewind()>();

        r0.<android.gesture.GestureOverlayView: android.gesture.Gesture mCurrentGesture> = null;

        return;
    }

    public void cancelGesture()
    {
        android.gesture.GestureOverlayView r0;
        long l0;
        android.view.MotionEvent r1;
        java.util.ArrayList r2, r3, $r5, $r7;
        int i1, i2, i3, i4;
        android.gesture.GestureStroke $r4;
        android.gesture.Gesture $r6;
        android.gesture.GestureOverlayView$OnGesturingListener $r8;
        java.lang.Object $r9, $r11;
        android.gesture.GestureOverlayView$OnGestureListener $r10;

        r0 := @this: android.gesture.GestureOverlayView;

        r0.<android.gesture.GestureOverlayView: boolean mIsListeningForGestures> = 0;

        $r6 = r0.<android.gesture.GestureOverlayView: android.gesture.Gesture mCurrentGesture>;

        $r4 = new android.gesture.GestureStroke;

        $r5 = r0.<android.gesture.GestureOverlayView: java.util.ArrayList mStrokeBuffer>;

        specialinvoke $r4.<android.gesture.GestureStroke: void <init>(java.util.ArrayList)>($r5);

        virtualinvoke $r6.<android.gesture.Gesture: void addStroke(android.gesture.GestureStroke)>($r4);

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r1 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>(l0, l0, 3, 0.0F, 0.0F, 0);

        r2 = r0.<android.gesture.GestureOverlayView: java.util.ArrayList mOnGestureListeners>;

        i1 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r11 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r10 = (android.gesture.GestureOverlayView$OnGestureListener) $r11;

        interfaceinvoke $r10.<android.gesture.GestureOverlayView$OnGestureListener: void onGestureCancelled(android.gesture.GestureOverlayView,android.view.MotionEvent)>(r0, r1);

        i2 = i2 + 1;

        goto label1;

     label2:
        virtualinvoke r1.<android.view.MotionEvent: void recycle()>();

        virtualinvoke r0.<android.gesture.GestureOverlayView: void clear(boolean)>(0);

        r0.<android.gesture.GestureOverlayView: boolean mIsGesturing> = 0;

        r0.<android.gesture.GestureOverlayView: boolean mPreviousWasGesturing> = 0;

        $r7 = r0.<android.gesture.GestureOverlayView: java.util.ArrayList mStrokeBuffer>;

        virtualinvoke $r7.<java.util.ArrayList: void clear()>();

        r3 = r0.<android.gesture.GestureOverlayView: java.util.ArrayList mOnGesturingListeners>;

        i3 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        i4 = 0;

     label3:
        if i4 >= i3 goto label4;

        $r9 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r8 = (android.gesture.GestureOverlayView$OnGesturingListener) $r9;

        interfaceinvoke $r8.<android.gesture.GestureOverlayView$OnGesturingListener: void onGesturingEnded(android.gesture.GestureOverlayView)>(r0);

        i4 = i4 + 1;

        goto label3;

     label4:
        return;
    }

    public void clear(boolean)
    {
        android.gesture.GestureOverlayView r0;
        boolean z0;

        r0 := @this: android.gesture.GestureOverlayView;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.gesture.GestureOverlayView: void clear(boolean,boolean,boolean)>(z0, 0, 1);

        return;
    }

    public boolean dispatchTouchEvent(android.view.MotionEvent)
    {
        android.gesture.GestureOverlayView r0;
        android.view.MotionEvent r1;
        boolean z0, $z1, $z2, $z3, $z4, $z7;
        android.gesture.Gesture $r2, $r3;
        int $i0;

        r0 := @this: android.gesture.GestureOverlayView;

        r1 := @parameter0: android.view.MotionEvent;

        $z1 = virtualinvoke r0.<android.gesture.GestureOverlayView: boolean isEnabled()>();

        if $z1 == 0 goto label5;

        $z3 = r0.<android.gesture.GestureOverlayView: boolean mIsGesturing>;

        if $z3 != 0 goto label1;

        $r2 = r0.<android.gesture.GestureOverlayView: android.gesture.Gesture mCurrentGesture>;

        if $r2 == null goto label4;

        $r3 = r0.<android.gesture.GestureOverlayView: android.gesture.Gesture mCurrentGesture>;

        $i0 = virtualinvoke $r3.<android.gesture.Gesture: int getStrokesCount()>();

        if $i0 <= 0 goto label4;

        $z7 = r0.<android.gesture.GestureOverlayView: boolean mPreviousWasGesturing>;

        if $z7 == 0 goto label4;

     label1:
        $z4 = r0.<android.gesture.GestureOverlayView: boolean mInterceptEvents>;

        if $z4 == 0 goto label4;

        z0 = 1;

     label2:
        specialinvoke r0.<android.gesture.GestureOverlayView: boolean processEvent(android.view.MotionEvent)>(r1);

        if z0 == 0 goto label3;

        virtualinvoke r1.<android.view.MotionEvent: void setAction(int)>(3);

     label3:
        specialinvoke r0.<android.widget.FrameLayout: boolean dispatchTouchEvent(android.view.MotionEvent)>(r1);

        return 1;

     label4:
        z0 = 0;

        goto label2;

     label5:
        $z2 = specialinvoke r0.<android.widget.FrameLayout: boolean dispatchTouchEvent(android.view.MotionEvent)>(r1);

        return $z2;
    }

    public void draw(android.graphics.Canvas)
    {
        android.gesture.GestureOverlayView r0;
        android.graphics.Canvas r1;
        android.gesture.Gesture $r2;
        boolean $z0;
        android.graphics.Paint $r3;
        android.graphics.Path $r4;

        r0 := @this: android.gesture.GestureOverlayView;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.widget.FrameLayout: void draw(android.graphics.Canvas)>(r1);

        $r2 = r0.<android.gesture.GestureOverlayView: android.gesture.Gesture mCurrentGesture>;

        if $r2 == null goto label1;

        $z0 = r0.<android.gesture.GestureOverlayView: boolean mGestureVisible>;

        if $z0 == 0 goto label1;

        $r4 = r0.<android.gesture.GestureOverlayView: android.graphics.Path mPath>;

        $r3 = r0.<android.gesture.GestureOverlayView: android.graphics.Paint mGesturePaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r4, $r3);

     label1:
        return;
    }

    public java.util.ArrayList getCurrentStroke()
    {
        android.gesture.GestureOverlayView r0;
        java.util.ArrayList $r1;

        r0 := @this: android.gesture.GestureOverlayView;

        $r1 = r0.<android.gesture.GestureOverlayView: java.util.ArrayList mStrokeBuffer>;

        return $r1;
    }

    public long getFadeOffset()
    {
        android.gesture.GestureOverlayView r0;
        long $l0;

        r0 := @this: android.gesture.GestureOverlayView;

        $l0 = r0.<android.gesture.GestureOverlayView: long mFadeOffset>;

        return $l0;
    }

    public android.gesture.Gesture getGesture()
    {
        android.gesture.GestureOverlayView r0;
        android.gesture.Gesture $r1;

        r0 := @this: android.gesture.GestureOverlayView;

        $r1 = r0.<android.gesture.GestureOverlayView: android.gesture.Gesture mCurrentGesture>;

        return $r1;
    }

    public int getGestureColor()
    {
        android.gesture.GestureOverlayView r0;
        int $i0;

        r0 := @this: android.gesture.GestureOverlayView;

        $i0 = r0.<android.gesture.GestureOverlayView: int mCertainGestureColor>;

        return $i0;
    }

    public android.graphics.Paint getGesturePaint()
    {
        android.gesture.GestureOverlayView r0;
        android.graphics.Paint $r1;

        r0 := @this: android.gesture.GestureOverlayView;

        $r1 = r0.<android.gesture.GestureOverlayView: android.graphics.Paint mGesturePaint>;

        return $r1;
    }

    public android.graphics.Path getGesturePath()
    {
        android.gesture.GestureOverlayView r0;
        android.graphics.Path $r1;

        r0 := @this: android.gesture.GestureOverlayView;

        $r1 = r0.<android.gesture.GestureOverlayView: android.graphics.Path mPath>;

        return $r1;
    }

    public android.graphics.Path getGesturePath(android.graphics.Path)
    {
        android.gesture.GestureOverlayView r0;
        android.graphics.Path r1, $r2;

        r0 := @this: android.gesture.GestureOverlayView;

        r1 := @parameter0: android.graphics.Path;

        $r2 = r0.<android.gesture.GestureOverlayView: android.graphics.Path mPath>;

        virtualinvoke r1.<android.graphics.Path: void set(android.graphics.Path)>($r2);

        return r1;
    }

    public float getGestureStrokeAngleThreshold()
    {
        android.gesture.GestureOverlayView r0;
        float $f0;

        r0 := @this: android.gesture.GestureOverlayView;

        $f0 = r0.<android.gesture.GestureOverlayView: float mGestureStrokeAngleThreshold>;

        return $f0;
    }

    public float getGestureStrokeLengthThreshold()
    {
        android.gesture.GestureOverlayView r0;
        float $f0;

        r0 := @this: android.gesture.GestureOverlayView;

        $f0 = r0.<android.gesture.GestureOverlayView: float mGestureStrokeLengthThreshold>;

        return $f0;
    }

    public float getGestureStrokeSquarenessTreshold()
    {
        android.gesture.GestureOverlayView r0;
        float $f0;

        r0 := @this: android.gesture.GestureOverlayView;

        $f0 = r0.<android.gesture.GestureOverlayView: float mGestureStrokeSquarenessTreshold>;

        return $f0;
    }

    public int getGestureStrokeType()
    {
        android.gesture.GestureOverlayView r0;
        int $i0;

        r0 := @this: android.gesture.GestureOverlayView;

        $i0 = r0.<android.gesture.GestureOverlayView: int mGestureStrokeType>;

        return $i0;
    }

    public float getGestureStrokeWidth()
    {
        android.gesture.GestureOverlayView r0;
        float $f0;

        r0 := @this: android.gesture.GestureOverlayView;

        $f0 = r0.<android.gesture.GestureOverlayView: float mGestureStrokeWidth>;

        return $f0;
    }

    public int getOrientation()
    {
        android.gesture.GestureOverlayView r0;
        int $i0;

        r0 := @this: android.gesture.GestureOverlayView;

        $i0 = r0.<android.gesture.GestureOverlayView: int mOrientation>;

        return $i0;
    }

    public int getUncertainGestureColor()
    {
        android.gesture.GestureOverlayView r0;
        int $i0;

        r0 := @this: android.gesture.GestureOverlayView;

        $i0 = r0.<android.gesture.GestureOverlayView: int mUncertainGestureColor>;

        return $i0;
    }

    public boolean isEventsInterceptionEnabled()
    {
        android.gesture.GestureOverlayView r0;
        boolean $z0;

        r0 := @this: android.gesture.GestureOverlayView;

        $z0 = r0.<android.gesture.GestureOverlayView: boolean mInterceptEvents>;

        return $z0;
    }

    public boolean isFadeEnabled()
    {
        android.gesture.GestureOverlayView r0;
        boolean $z0;

        r0 := @this: android.gesture.GestureOverlayView;

        $z0 = r0.<android.gesture.GestureOverlayView: boolean mFadeEnabled>;

        return $z0;
    }

    public boolean isGestureVisible()
    {
        android.gesture.GestureOverlayView r0;
        boolean $z0;

        r0 := @this: android.gesture.GestureOverlayView;

        $z0 = r0.<android.gesture.GestureOverlayView: boolean mGestureVisible>;

        return $z0;
    }

    public boolean isGesturing()
    {
        android.gesture.GestureOverlayView r0;
        boolean $z0;

        r0 := @this: android.gesture.GestureOverlayView;

        $z0 = r0.<android.gesture.GestureOverlayView: boolean mIsGesturing>;

        return $z0;
    }

    protected void onDetachedFromWindow()
    {
        android.gesture.GestureOverlayView r0;

        r0 := @this: android.gesture.GestureOverlayView;

        specialinvoke r0.<android.widget.FrameLayout: void onDetachedFromWindow()>();

        virtualinvoke r0.<android.gesture.GestureOverlayView: void cancelClearAnimation()>();

        return;
    }

    public void removeAllOnGestureListeners()
    {
        android.gesture.GestureOverlayView r0;
        java.util.ArrayList $r1;

        r0 := @this: android.gesture.GestureOverlayView;

        $r1 = r0.<android.gesture.GestureOverlayView: java.util.ArrayList mOnGestureListeners>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        return;
    }

    public void removeAllOnGesturePerformedListeners()
    {
        android.gesture.GestureOverlayView r0;
        java.util.ArrayList $r1;

        r0 := @this: android.gesture.GestureOverlayView;

        $r1 = r0.<android.gesture.GestureOverlayView: java.util.ArrayList mOnGesturePerformedListeners>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        r0.<android.gesture.GestureOverlayView: boolean mHandleGestureActions> = 0;

        return;
    }

    public void removeAllOnGesturingListeners()
    {
        android.gesture.GestureOverlayView r0;
        java.util.ArrayList $r1;

        r0 := @this: android.gesture.GestureOverlayView;

        $r1 = r0.<android.gesture.GestureOverlayView: java.util.ArrayList mOnGesturingListeners>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        return;
    }

    public void removeOnGestureListener(android.gesture.GestureOverlayView$OnGestureListener)
    {
        android.gesture.GestureOverlayView r0;
        android.gesture.GestureOverlayView$OnGestureListener r1;
        java.util.ArrayList $r2;

        r0 := @this: android.gesture.GestureOverlayView;

        r1 := @parameter0: android.gesture.GestureOverlayView$OnGestureListener;

        $r2 = r0.<android.gesture.GestureOverlayView: java.util.ArrayList mOnGestureListeners>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public void removeOnGesturePerformedListener(android.gesture.GestureOverlayView$OnGesturePerformedListener)
    {
        android.gesture.GestureOverlayView r0;
        android.gesture.GestureOverlayView$OnGesturePerformedListener r1;
        java.util.ArrayList $r2, $r3;
        int $i0;

        r0 := @this: android.gesture.GestureOverlayView;

        r1 := @parameter0: android.gesture.GestureOverlayView$OnGesturePerformedListener;

        $r2 = r0.<android.gesture.GestureOverlayView: java.util.ArrayList mOnGesturePerformedListeners>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r3 = r0.<android.gesture.GestureOverlayView: java.util.ArrayList mOnGesturePerformedListeners>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i0 > 0 goto label1;

        r0.<android.gesture.GestureOverlayView: boolean mHandleGestureActions> = 0;

     label1:
        return;
    }

    public void removeOnGesturingListener(android.gesture.GestureOverlayView$OnGesturingListener)
    {
        android.gesture.GestureOverlayView r0;
        android.gesture.GestureOverlayView$OnGesturingListener r1;
        java.util.ArrayList $r2;

        r0 := @this: android.gesture.GestureOverlayView;

        r1 := @parameter0: android.gesture.GestureOverlayView$OnGesturingListener;

        $r2 = r0.<android.gesture.GestureOverlayView: java.util.ArrayList mOnGesturingListeners>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public void setEventsInterceptionEnabled(boolean)
    {
        android.gesture.GestureOverlayView r0;
        boolean z0;

        r0 := @this: android.gesture.GestureOverlayView;

        z0 := @parameter0: boolean;

        r0.<android.gesture.GestureOverlayView: boolean mInterceptEvents> = z0;

        return;
    }

    public void setFadeEnabled(boolean)
    {
        android.gesture.GestureOverlayView r0;
        boolean z0;

        r0 := @this: android.gesture.GestureOverlayView;

        z0 := @parameter0: boolean;

        r0.<android.gesture.GestureOverlayView: boolean mFadeEnabled> = z0;

        return;
    }

    public void setFadeOffset(long)
    {
        android.gesture.GestureOverlayView r0;
        long l0;

        r0 := @this: android.gesture.GestureOverlayView;

        l0 := @parameter0: long;

        r0.<android.gesture.GestureOverlayView: long mFadeOffset> = l0;

        return;
    }

    public void setGesture(android.gesture.Gesture)
    {
        android.gesture.GestureOverlayView r0;
        android.gesture.Gesture r1, $r4, $r5;
        android.graphics.Path r2, $r7, $r8;
        android.graphics.RectF r3, $r6;
        int $i0, $i1, $i2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13;

        r0 := @this: android.gesture.GestureOverlayView;

        r1 := @parameter0: android.gesture.Gesture;

        $r4 = r0.<android.gesture.GestureOverlayView: android.gesture.Gesture mCurrentGesture>;

        if $r4 == null goto label1;

        virtualinvoke r0.<android.gesture.GestureOverlayView: void clear(boolean)>(0);

     label1:
        $i0 = r0.<android.gesture.GestureOverlayView: int mCertainGestureColor>;

        specialinvoke r0.<android.gesture.GestureOverlayView: void setCurrentColor(int)>($i0);

        r0.<android.gesture.GestureOverlayView: android.gesture.Gesture mCurrentGesture> = r1;

        $r5 = r0.<android.gesture.GestureOverlayView: android.gesture.Gesture mCurrentGesture>;

        r2 = virtualinvoke $r5.<android.gesture.Gesture: android.graphics.Path toPath()>();

        $r6 = new android.graphics.RectF;

        specialinvoke $r6.<android.graphics.RectF: void <init>()>();

        r3 = $r6;

        virtualinvoke r2.<android.graphics.Path: void computeBounds(android.graphics.RectF,boolean)>(r3, 1);

        $r7 = r0.<android.gesture.GestureOverlayView: android.graphics.Path mPath>;

        virtualinvoke $r7.<android.graphics.Path: void rewind()>();

        $r8 = r0.<android.gesture.GestureOverlayView: android.graphics.Path mPath>;

        $f0 = r3.<android.graphics.RectF: float left>;

        $f1 = neg $f0;

        $i1 = virtualinvoke r0.<android.gesture.GestureOverlayView: int getWidth()>();

        $f2 = (float) $i1;

        $f3 = virtualinvoke r3.<android.graphics.RectF: float width()>();

        $f5 = $f2 - $f3;

        $f4 = $f5 / 2.0F;

        $f6 = $f1 + $f4;

        $f7 = r3.<android.graphics.RectF: float top>;

        $f8 = neg $f7;

        $i2 = virtualinvoke r0.<android.gesture.GestureOverlayView: int getHeight()>();

        $f10 = (float) $i2;

        $f9 = virtualinvoke r3.<android.graphics.RectF: float height()>();

        $f12 = $f10 - $f9;

        $f11 = $f12 / 2.0F;

        $f13 = $f8 + $f11;

        virtualinvoke $r8.<android.graphics.Path: void addPath(android.graphics.Path,float,float)>(r2, $f6, $f13);

        r0.<android.gesture.GestureOverlayView: boolean mResetGesture> = 1;

        virtualinvoke r0.<android.gesture.GestureOverlayView: void invalidate()>();

        return;
    }

    public void setGestureColor(int)
    {
        android.gesture.GestureOverlayView r0;
        int i0;

        r0 := @this: android.gesture.GestureOverlayView;

        i0 := @parameter0: int;

        r0.<android.gesture.GestureOverlayView: int mCertainGestureColor> = i0;

        return;
    }

    public void setGestureStrokeAngleThreshold(float)
    {
        android.gesture.GestureOverlayView r0;
        float f0;

        r0 := @this: android.gesture.GestureOverlayView;

        f0 := @parameter0: float;

        r0.<android.gesture.GestureOverlayView: float mGestureStrokeAngleThreshold> = f0;

        return;
    }

    public void setGestureStrokeLengthThreshold(float)
    {
        android.gesture.GestureOverlayView r0;
        float f0;

        r0 := @this: android.gesture.GestureOverlayView;

        f0 := @parameter0: float;

        r0.<android.gesture.GestureOverlayView: float mGestureStrokeLengthThreshold> = f0;

        return;
    }

    public void setGestureStrokeSquarenessTreshold(float)
    {
        android.gesture.GestureOverlayView r0;
        float f0;

        r0 := @this: android.gesture.GestureOverlayView;

        f0 := @parameter0: float;

        r0.<android.gesture.GestureOverlayView: float mGestureStrokeSquarenessTreshold> = f0;

        return;
    }

    public void setGestureStrokeType(int)
    {
        android.gesture.GestureOverlayView r0;
        int i0;

        r0 := @this: android.gesture.GestureOverlayView;

        i0 := @parameter0: int;

        r0.<android.gesture.GestureOverlayView: int mGestureStrokeType> = i0;

        return;
    }

    public void setGestureStrokeWidth(float)
    {
        android.gesture.GestureOverlayView r0;
        float f0;
        int $i0, $i1, $i2;
        android.graphics.Paint $r1;

        r0 := @this: android.gesture.GestureOverlayView;

        f0 := @parameter0: float;

        r0.<android.gesture.GestureOverlayView: float mGestureStrokeWidth> = f0;

        $i0 = (int) f0;

        $i1 = -1 + $i0;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i1);

        r0.<android.gesture.GestureOverlayView: int mInvalidateExtraBorder> = $i2;

        $r1 = r0.<android.gesture.GestureOverlayView: android.graphics.Paint mGesturePaint>;

        virtualinvoke $r1.<android.graphics.Paint: void setStrokeWidth(float)>(f0);

        return;
    }

    public void setGestureVisible(boolean)
    {
        android.gesture.GestureOverlayView r0;
        boolean z0;

        r0 := @this: android.gesture.GestureOverlayView;

        z0 := @parameter0: boolean;

        r0.<android.gesture.GestureOverlayView: boolean mGestureVisible> = z0;

        return;
    }

    public void setOrientation(int)
    {
        android.gesture.GestureOverlayView r0;
        int i0;

        r0 := @this: android.gesture.GestureOverlayView;

        i0 := @parameter0: int;

        r0.<android.gesture.GestureOverlayView: int mOrientation> = i0;

        return;
    }

    public void setUncertainGestureColor(int)
    {
        android.gesture.GestureOverlayView r0;
        int i0;

        r0 := @this: android.gesture.GestureOverlayView;

        i0 := @parameter0: int;

        r0.<android.gesture.GestureOverlayView: int mUncertainGestureColor> = i0;

        return;
    }

    public static void <clinit>()
    {
        <android.gesture.GestureOverlayView: int ORIENTATION_VERTICAL> = 1;

        <android.gesture.GestureOverlayView: int ORIENTATION_HORIZONTAL> = 0;

        <android.gesture.GestureOverlayView: int GESTURE_STROKE_TYPE_SINGLE> = 0;

        <android.gesture.GestureOverlayView: int GESTURE_STROKE_TYPE_MULTIPLE> = 1;

        <android.gesture.GestureOverlayView: boolean GESTURE_RENDERING_ANTIALIAS> = 1;

        <android.gesture.GestureOverlayView: int FADE_ANIMATION_RATE> = 16;

        <android.gesture.GestureOverlayView: boolean DITHER_FLAG> = 1;

        return;
    }
}
