public final class org.apache.harmony.security.x501.AttributeValue extends java.lang.Object
{
    public byte[] bytes;
    public byte[] encoded;
    public final java.lang.String escapedString;
    public boolean hasQE;
    private java.lang.String hexString;
    public final java.lang.String rawString;
    private final int tag;
    public boolean wasEncoded;

    public void <init>(java.lang.String, boolean, org.apache.harmony.security.utils.ObjectIdentifier)
    {
        org.apache.harmony.security.x501.AttributeValue r0;
        java.lang.String r1, $r3, $r4, $r8;
        boolean z0, $z1;
        org.apache.harmony.security.utils.ObjectIdentifier r2, $r5, $r7;
        int i0;
        org.apache.harmony.security.asn1.ASN1StringType $r6, $r9, $r10;

        r0 := @this: org.apache.harmony.security.x501.AttributeValue;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: org.apache.harmony.security.utils.ObjectIdentifier;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.harmony.security.x501.AttributeValue: boolean wasEncoded> = 0;

        r0.<org.apache.harmony.security.x501.AttributeValue: boolean hasQE> = z0;

        r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String rawString> = r1;

        $r3 = r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String rawString>;

        $r4 = specialinvoke r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String makeEscaped(java.lang.String)>($r3);

        r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String escapedString> = $r4;

        $r5 = <org.apache.harmony.security.x501.AttributeTypeAndValue: org.apache.harmony.security.utils.ObjectIdentifier EMAILADDRESS>;

        if r2 == $r5 goto label1;

        $r7 = <org.apache.harmony.security.x501.AttributeTypeAndValue: org.apache.harmony.security.utils.ObjectIdentifier DC>;

        if r2 != $r7 goto label3;

     label1:
        $r6 = <org.apache.harmony.security.asn1.ASN1StringType: org.apache.harmony.security.asn1.ASN1StringType IA5STRING>;

        i0 = $r6.<org.apache.harmony.security.asn1.ASN1StringType: int id>;

     label2:
        r0.<org.apache.harmony.security.x501.AttributeValue: int tag> = i0;

        return;

     label3:
        $r8 = r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String rawString>;

        $z1 = staticinvoke <org.apache.harmony.security.x501.AttributeValue: boolean isPrintableString(java.lang.String)>($r8);

        if $z1 == 0 goto label4;

        $r10 = <org.apache.harmony.security.asn1.ASN1StringType: org.apache.harmony.security.asn1.ASN1StringType PRINTABLESTRING>;

        i0 = $r10.<org.apache.harmony.security.asn1.ASN1StringType: int id>;

        goto label2;

     label4:
        $r9 = <org.apache.harmony.security.asn1.ASN1StringType: org.apache.harmony.security.asn1.ASN1StringType UTF8STRING>;

        i0 = $r9.<org.apache.harmony.security.asn1.ASN1StringType: int id>;

        goto label2;
    }

    public void <init>(java.lang.String, byte[])
    {
        org.apache.harmony.security.x501.AttributeValue r0;
        java.lang.String r1, $r10, $r11, $r12;
        byte[] r2;
        org.apache.harmony.security.asn1.DerInputStream r3, $r6;
        java.io.IOException r4, $r14;
        java.lang.IllegalArgumentException r5, $r13;
        int $i0, $i1;
        org.apache.harmony.security.asn1.ASN1Choice $r7, $r8;
        boolean $z0;
        java.lang.Object $r9;

        r0 := @this: org.apache.harmony.security.x501.AttributeValue;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.harmony.security.x501.AttributeValue: boolean wasEncoded> = 1;

        r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String hexString> = r1;

        r0.<org.apache.harmony.security.x501.AttributeValue: byte[] encoded> = r2;

     label1:
        $r6 = new org.apache.harmony.security.asn1.DerInputStream;

        specialinvoke $r6.<org.apache.harmony.security.asn1.DerInputStream: void <init>(byte[])>(r2);

        r3 = $r6;

        $i0 = r3.<org.apache.harmony.security.asn1.DerInputStream: int tag>;

        r0.<org.apache.harmony.security.x501.AttributeValue: int tag> = $i0;

        $r7 = <org.apache.harmony.security.x501.DirectoryString: org.apache.harmony.security.asn1.ASN1Choice ASN1>;

        $i1 = r0.<org.apache.harmony.security.x501.AttributeValue: int tag>;

        $z0 = virtualinvoke $r7.<org.apache.harmony.security.asn1.ASN1Choice: boolean checkTag(int)>($i1);

        if $z0 == 0 goto label3;

        $r8 = <org.apache.harmony.security.x501.DirectoryString: org.apache.harmony.security.asn1.ASN1Choice ASN1>;

        $r9 = virtualinvoke $r8.<org.apache.harmony.security.asn1.ASN1Choice: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)>(r3);

        $r10 = (java.lang.String) $r9;

        r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String rawString> = $r10;

        $r11 = r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String rawString>;

        $r12 = specialinvoke r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String makeEscaped(java.lang.String)>($r11);

        r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String escapedString> = $r12;

     label2:
        return;

     label3:
        r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String rawString> = r1;

        r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String escapedString> = r1;

     label4:
        return;

     label5:
        $r14 := @caughtexception;

        r4 = $r14;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>()>();

        r5 = $r13;

        virtualinvoke r5.<java.lang.IllegalArgumentException: java.lang.Throwable initCause(java.lang.Throwable)>(r4);

        throw r5;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }

    public void <init>(java.lang.String, byte[], int)
    {
        org.apache.harmony.security.x501.AttributeValue r0;
        java.lang.String r1, $r3, $r4, $r5;
        byte[] r2;
        int i0;

        r0 := @this: org.apache.harmony.security.x501.AttributeValue;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.harmony.security.x501.AttributeValue: boolean wasEncoded> = 1;

        r0.<org.apache.harmony.security.x501.AttributeValue: byte[] encoded> = r2;

        r0.<org.apache.harmony.security.x501.AttributeValue: int tag> = i0;

        if r1 != null goto label1;

        $r4 = virtualinvoke r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String getHexString()>();

        r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String rawString> = $r4;

        $r5 = r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String hexString>;

        r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String escapedString> = $r5;

        return;

     label1:
        r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String rawString> = r1;

        $r3 = specialinvoke r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String makeEscaped(java.lang.String)>(r1);

        r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String escapedString> = $r3;

        return;
    }

    private static boolean isPrintableString(java.lang.String)
    {
        java.lang.String r0;
        int i0, $i2;
        char c1;

        r0 := @parameter0: java.lang.String;

        i0 = 0;

     label1:
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if i0 >= $i2 goto label7;

        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        if c1 == 32 goto label6;

        if c1 < 39 goto label2;

        if c1 <= 41 goto label6;

     label2:
        if c1 < 43 goto label3;

        if c1 <= 58 goto label6;

     label3:
        if c1 == 61 goto label6;

        if c1 == 63 goto label6;

        if c1 < 65 goto label4;

        if c1 <= 90 goto label6;

     label4:
        if c1 < 97 goto label5;

        if c1 <= 122 goto label6;

     label5:
        return 0;

     label6:
        i0 = i0 + 1;

        goto label1;

     label7:
        return 1;
    }

    private java.lang.String makeEscaped(java.lang.String)
    {
        org.apache.harmony.security.x501.AttributeValue r0;
        java.lang.String r1, $r4;
        int i0, i1, $i3, $i4;
        java.lang.StringBuilder r2, $r3;
        char c2;

        r0 := @this: org.apache.harmony.security.x501.AttributeValue;

        r1 := @parameter0: java.lang.String;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if i0 != 0 goto label01;

        return r1;

     label01:
        $r3 = new java.lang.StringBuilder;

        $i3 = i0 * 2;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>($i3);

        r2 = $r3;

        i1 = 0;

     label02:
        if i1 >= i0 goto label10;

        c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);

        lookupswitch(c2)
        {
            case 32: goto label05;
            case 34: goto label08;
            case 35: goto label09;
            case 43: goto label09;
            case 44: goto label09;
            case 59: goto label09;
            case 60: goto label09;
            case 61: goto label09;
            case 62: goto label09;
            case 92: goto label08;
            default: goto label03;
        };

     label03:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c2);

     label04:
        i1 = i1 + 1;

        goto label02;

     label05:
        if i1 == 0 goto label06;

        $i4 = i0 - 1;

        if i1 != $i4 goto label07;

     label06:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92);

     label07:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        goto label04;

     label08:
        r0.<org.apache.harmony.security.x501.AttributeValue: boolean hasQE> = 1;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c2);

        goto label04;

     label09:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c2);

        goto label04;

     label10:
        $r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public void appendQEString(java.lang.StringBuilder)
    {
        org.apache.harmony.security.x501.AttributeValue r0;
        java.lang.StringBuilder r1;
        int i0, $i2;
        char c1;
        boolean $z0;
        java.lang.String $r3, $r6, $r7;

        r0 := @this: org.apache.harmony.security.x501.AttributeValue;

        r1 := @parameter0: java.lang.StringBuilder;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $z0 = r0.<org.apache.harmony.security.x501.AttributeValue: boolean hasQE>;

        if $z0 == 0 goto label4;

        i0 = 0;

     label1:
        $r6 = r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String rawString>;

        $i2 = virtualinvoke $r6.<java.lang.String: int length()>();

        if i0 >= $i2 goto label5;

        $r7 = r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String rawString>;

        c1 = virtualinvoke $r7.<java.lang.String: char charAt(int)>(i0);

        if c1 == 34 goto label2;

        if c1 != 92 goto label3;

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92);

     label3:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

        i0 = i0 + 1;

        goto label1;

     label4:
        $r3 = r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String rawString>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label5:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        return;
    }

    public java.lang.String getHexString()
    {
        org.apache.harmony.security.x501.AttributeValue r0;
        java.lang.StringBuilder r1, $r4;
        int i0, $i3, $i4, $i5, $i6, $i10, $i11, $i15, $i17, $i18, $i19, $i20, $i21;
        byte b1, b2, $b7, $b8, $b12;
        java.lang.String $r2, $r3, $r9, $r17, $r22, $r25;
        boolean $z0;
        byte[] $r5, $r7, $r8, $r10, $r20, $r21, $r23;
        char $c9, $c13, $c14, $c16;
        org.apache.harmony.security.asn1.ASN1StringType $r15, $r16, $r18, $r19, $r24;

        r0 := @this: org.apache.harmony.security.x501.AttributeValue;

        $r2 = r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String hexString>;

        if $r2 != null goto label11;

        $z0 = r0.<org.apache.harmony.security.x501.AttributeValue: boolean wasEncoded>;

        if $z0 != 0 goto label02;

        $i18 = r0.<org.apache.harmony.security.x501.AttributeValue: int tag>;

        $r16 = <org.apache.harmony.security.asn1.ASN1StringType: org.apache.harmony.security.asn1.ASN1StringType IA5STRING>;

        $i19 = $r16.<org.apache.harmony.security.asn1.ASN1StringType: int id>;

        if $i18 != $i19 goto label06;

        $r24 = <org.apache.harmony.security.asn1.ASN1StringType: org.apache.harmony.security.asn1.ASN1StringType IA5STRING>;

        $r25 = r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String rawString>;

        $r23 = virtualinvoke $r24.<org.apache.harmony.security.asn1.ASN1StringType: byte[] encode(java.lang.Object)>($r25);

        r0.<org.apache.harmony.security.x501.AttributeValue: byte[] encoded> = $r23;

     label01:
        r0.<org.apache.harmony.security.x501.AttributeValue: boolean wasEncoded> = 1;

     label02:
        $r4 = new java.lang.StringBuilder;

        $r5 = r0.<org.apache.harmony.security.x501.AttributeValue: byte[] encoded>;

        $i3 = lengthof $r5;

        $i4 = 2 * $i3;

        $i5 = 1 + $i4;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>($i5);

        r1 = $r4;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(35);

        i0 = 0;

     label03:
        $r7 = r0.<org.apache.harmony.security.x501.AttributeValue: byte[] encoded>;

        $i6 = lengthof $r7;

        if i0 >= $i6 goto label10;

        $r8 = r0.<org.apache.harmony.security.x501.AttributeValue: byte[] encoded>;

        $b8 = $r8[i0];

        $b7 = $b8 >> 4;

        b1 = 15 & $b7;

        if b1 >= 10 goto label08;

        $i17 = b1 + 48;

        $c16 = (char) $i17;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c16);

     label04:
        $r10 = r0.<org.apache.harmony.security.x501.AttributeValue: byte[] encoded>;

        $b12 = $r10[i0];

        b2 = 15 & $b12;

        if b2 >= 10 goto label09;

        $i15 = b2 + 48;

        $c14 = (char) $i15;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c14);

     label05:
        i0 = i0 + 1;

        goto label03;

     label06:
        $i21 = r0.<org.apache.harmony.security.x501.AttributeValue: int tag>;

        $r15 = <org.apache.harmony.security.asn1.ASN1StringType: org.apache.harmony.security.asn1.ASN1StringType PRINTABLESTRING>;

        $i20 = $r15.<org.apache.harmony.security.asn1.ASN1StringType: int id>;

        if $i21 != $i20 goto label07;

        $r19 = <org.apache.harmony.security.asn1.ASN1StringType: org.apache.harmony.security.asn1.ASN1StringType PRINTABLESTRING>;

        $r22 = r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String rawString>;

        $r20 = virtualinvoke $r19.<org.apache.harmony.security.asn1.ASN1StringType: byte[] encode(java.lang.Object)>($r22);

        r0.<org.apache.harmony.security.x501.AttributeValue: byte[] encoded> = $r20;

        goto label01;

     label07:
        $r18 = <org.apache.harmony.security.asn1.ASN1StringType: org.apache.harmony.security.asn1.ASN1StringType UTF8STRING>;

        $r17 = r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String rawString>;

        $r21 = virtualinvoke $r18.<org.apache.harmony.security.asn1.ASN1StringType: byte[] encode(java.lang.Object)>($r17);

        r0.<org.apache.harmony.security.x501.AttributeValue: byte[] encoded> = $r21;

        goto label01;

     label08:
        $i10 = b1 + 87;

        $c9 = (char) $i10;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c9);

        goto label04;

     label09:
        $i11 = b2 + 87;

        $c13 = (char) $i11;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c13);

        goto label05;

     label10:
        $r9 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String hexString> = $r9;

     label11:
        $r3 = r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String hexString>;

        return $r3;
    }

    public int getTag()
    {
        org.apache.harmony.security.x501.AttributeValue r0;
        int $i0;

        r0 := @this: org.apache.harmony.security.x501.AttributeValue;

        $i0 = r0.<org.apache.harmony.security.x501.AttributeValue: int tag>;

        return $i0;
    }

    public java.util.Collection getValues(org.apache.harmony.security.asn1.ASN1Type) throws java.io.IOException
    {
        org.apache.harmony.security.x501.AttributeValue r0;
        org.apache.harmony.security.asn1.ASN1Type r1;
        org.apache.harmony.security.asn1.ASN1SetOf $r2;
        byte[] $r3;
        java.lang.Object $r4;
        java.util.Collection $r5;

        r0 := @this: org.apache.harmony.security.x501.AttributeValue;

        r1 := @parameter0: org.apache.harmony.security.asn1.ASN1Type;

        $r2 = new org.apache.harmony.security.asn1.ASN1SetOf;

        specialinvoke $r2.<org.apache.harmony.security.asn1.ASN1SetOf: void <init>(org.apache.harmony.security.asn1.ASN1Type)>(r1);

        $r3 = r0.<org.apache.harmony.security.x501.AttributeValue: byte[] encoded>;

        $r4 = virtualinvoke $r2.<org.apache.harmony.security.asn1.ASN1SetOf: java.lang.Object decode(byte[])>($r3);

        $r5 = (java.util.Collection) $r4;

        return $r5;
    }

    public java.lang.String makeCanonical()
    {
        org.apache.harmony.security.x501.AttributeValue r0;
        int i0, i2, i3, i5, $i6, $i7, $i8, $i11;
        java.lang.StringBuilder r1, $r3;
        char c1, c4, $c9, $c10;
        java.lang.String $r2, $r4, $r5, $r6, $r11;

        r0 := @this: org.apache.harmony.security.x501.AttributeValue;

        $r2 = r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String rawString>;

        i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if i0 != 0 goto label1;

        $r11 = r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String rawString>;

        return $r11;

     label1:
        $r3 = new java.lang.StringBuilder;

        $i6 = i0 * 2;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>($i6);

        r1 = $r3;

        $r4 = r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String rawString>;

        c1 = virtualinvoke $r4.<java.lang.String: char charAt(int)>(0);

        i2 = 0;

        if c1 != 35 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(35);

        i2 = 0 + 1;

     label2:
        if i2 >= i0 goto label7;

        $r6 = r0.<org.apache.harmony.security.x501.AttributeValue: java.lang.String rawString>;

        c4 = virtualinvoke $r6.<java.lang.String: char charAt(int)>(i2);

        lookupswitch(c4)
        {
            case 32: goto label5;
            case 34: goto label6;
            case 43: goto label6;
            case 44: goto label6;
            case 59: goto label6;
            case 60: goto label6;
            case 62: goto label6;
            case 92: goto label6;
            default: goto label3;
        };

     label3:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c4);

     label4:
        i2 = i2 + 1;

        goto label2;

     label5:
        i5 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();

        if i5 == 0 goto label4;

        $i11 = i5 - 1;

        $c10 = virtualinvoke r1.<java.lang.StringBuilder: char charAt(int)>($i11);

        if $c10 == 32 goto label4;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        goto label4;

     label6:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92);

        goto label3;

     label7:
        $i7 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();

        i3 = -1 + $i7;

     label8:
        if i3 <= -1 goto label9;

        $c9 = virtualinvoke r1.<java.lang.StringBuilder: char charAt(int)>(i3);

        if $c9 != 32 goto label9;

        i3 = i3 + -1;

        goto label8;

     label9:
        $i8 = i3 + 1;

        virtualinvoke r1.<java.lang.StringBuilder: void setLength(int)>($i8);

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }
}
