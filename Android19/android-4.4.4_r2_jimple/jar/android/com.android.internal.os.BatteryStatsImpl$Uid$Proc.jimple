public final class com.android.internal.os.BatteryStatsImpl$Uid$Proc extends android.os.BatteryStats$Uid$Proc implements com.android.internal.os.BatteryStatsImpl$Unpluggable
{
    java.util.ArrayList mExcessivePower;
    long mForegroundTime;
    long mLastForegroundTime;
    int mLastStarts;
    long mLastSystemTime;
    long mLastUserTime;
    long mLoadedForegroundTime;
    int mLoadedStarts;
    long mLoadedSystemTime;
    long mLoadedUserTime;
    com.android.internal.os.BatteryStatsImpl$SamplingCounter[] mSpeedBins;
    int mStarts;
    long mSystemTime;
    long mUnpluggedForegroundTime;
    int mUnpluggedStarts;
    long mUnpluggedSystemTime;
    long mUnpluggedUserTime;
    long mUserTime;
    final com.android.internal.os.BatteryStatsImpl$Uid this$1;

    void <init>(com.android.internal.os.BatteryStatsImpl$Uid)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        com.android.internal.os.BatteryStatsImpl$Uid r1;
        com.android.internal.os.BatteryStatsImpl $r2, $r4;
        java.util.ArrayList $r3;
        int $i0;
        com.android.internal.os.BatteryStatsImpl$SamplingCounter[] $r5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        r1 := @parameter0: com.android.internal.os.BatteryStatsImpl$Uid;

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$Uid this$1> = r1;

        specialinvoke r0.<android.os.BatteryStats$Uid$Proc: void <init>()>();

        $r2 = r1.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl this$0>;

        $r3 = $r2.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r0);

        $r4 = r1.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl this$0>;

        $i0 = virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: int getCpuSpeedSteps()>();

        $r5 = newarray (com.android.internal.os.BatteryStatsImpl$SamplingCounter)[$i0];

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$SamplingCounter[] mSpeedBins> = $r5;

        return;
    }

    public void addCpuTimeLocked(int, int)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        int i0, i1;
        long $l2, $l3, $l4, $l5, $l6, $l7;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $l3 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUserTime>;

        $l2 = (long) i0;

        $l4 = $l3 + $l2;

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUserTime> = $l4;

        $l6 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mSystemTime>;

        $l5 = (long) i1;

        $l7 = $l6 + $l5;

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mSystemTime> = $l7;

        return;
    }

    public void addExcessiveCpu(long, long)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        long l0, l1;
        android.os.BatteryStats$Uid$Proc$ExcessivePower r1, $r3;
        java.util.ArrayList $r2, $r4, $r5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: java.util.ArrayList mExcessivePower>;

        if $r2 != null goto label1;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: java.util.ArrayList mExcessivePower> = $r5;

     label1:
        $r3 = new android.os.BatteryStats$Uid$Proc$ExcessivePower;

        specialinvoke $r3.<android.os.BatteryStats$Uid$Proc$ExcessivePower: void <init>()>();

        r1 = $r3;

        r1.<android.os.BatteryStats$Uid$Proc$ExcessivePower: int type> = 2;

        r1.<android.os.BatteryStats$Uid$Proc$ExcessivePower: long overTime> = l0;

        r1.<android.os.BatteryStats$Uid$Proc$ExcessivePower: long usedTime> = l1;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: java.util.ArrayList mExcessivePower>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void addExcessiveWake(long, long)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        long l0, l1;
        android.os.BatteryStats$Uid$Proc$ExcessivePower r1, $r3;
        java.util.ArrayList $r2, $r4, $r5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: java.util.ArrayList mExcessivePower>;

        if $r2 != null goto label1;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: java.util.ArrayList mExcessivePower> = $r5;

     label1:
        $r3 = new android.os.BatteryStats$Uid$Proc$ExcessivePower;

        specialinvoke $r3.<android.os.BatteryStats$Uid$Proc$ExcessivePower: void <init>()>();

        r1 = $r3;

        r1.<android.os.BatteryStats$Uid$Proc$ExcessivePower: int type> = 1;

        r1.<android.os.BatteryStats$Uid$Proc$ExcessivePower: long overTime> = l0;

        r1.<android.os.BatteryStats$Uid$Proc$ExcessivePower: long usedTime> = l1;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: java.util.ArrayList mExcessivePower>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void addForegroundTimeLocked(long)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        long l0, $l1, $l2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        l0 := @parameter0: long;

        $l1 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mForegroundTime>;

        $l2 = l0 + $l1;

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mForegroundTime> = $l2;

        return;
    }

    public void addSpeedStepTimes(long[])
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        long[] r1;
        int i0, $i1, $i2;
        com.android.internal.os.BatteryStatsImpl$SamplingCounter r2, $r6;
        com.android.internal.os.BatteryStatsImpl$SamplingCounter[] r3, $r4, $r5;
        long $l3, $l5;
        byte $b4;
        com.android.internal.os.BatteryStatsImpl$Uid $r7;
        com.android.internal.os.BatteryStatsImpl $r8;
        java.util.ArrayList $r9;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        r1 := @parameter0: long[];

        i0 = 0;

     label1:
        $r4 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$SamplingCounter[] mSpeedBins>;

        $i1 = lengthof $r4;

        if i0 >= $i1 goto label4;

        $i2 = lengthof r1;

        if i0 >= $i2 goto label4;

        $l3 = r1[i0];

        $b4 = $l3 cmp 0L;

        if $b4 == 0 goto label3;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$SamplingCounter[] mSpeedBins>;

        r2 = $r5[i0];

        if r2 != null goto label2;

        r3 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$SamplingCounter[] mSpeedBins>;

        $r6 = new com.android.internal.os.BatteryStatsImpl$SamplingCounter;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$Uid this$1>;

        $r8 = $r7.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl this$0>;

        $r9 = $r8.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r6.<com.android.internal.os.BatteryStatsImpl$SamplingCounter: void <init>(java.util.ArrayList)>($r9);

        r2 = $r6;

        r3[i0] = r2;

     label2:
        $l5 = r1[i0];

        virtualinvoke r2.<com.android.internal.os.BatteryStatsImpl$SamplingCounter: void addCountAtomic(long)>($l5);

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        return;
    }

    public int countExcessivePowers()
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        java.util.ArrayList $r1, $r2;
        int $i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: java.util.ArrayList mExcessivePower>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: java.util.ArrayList mExcessivePower>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        return $i0;

     label1:
        return 0;
    }

    void detach()
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        int i0, $i1;
        com.android.internal.os.BatteryStatsImpl$SamplingCounter r1;
        com.android.internal.os.BatteryStatsImpl$Uid $r2, $r7;
        com.android.internal.os.BatteryStatsImpl $r3, $r8;
        java.util.ArrayList $r4, $r9;
        com.android.internal.os.BatteryStatsImpl$SamplingCounter[] $r5, $r6, $r10;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$Uid this$1>;

        $r3 = $r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl this$0>;

        $r4 = $r3.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        virtualinvoke $r4.<java.util.ArrayList: boolean remove(java.lang.Object)>(r0);

        i0 = 0;

     label1:
        $r5 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$SamplingCounter[] mSpeedBins>;

        $i1 = lengthof $r5;

        if i0 >= $i1 goto label3;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$SamplingCounter[] mSpeedBins>;

        r1 = $r6[i0];

        if r1 == null goto label2;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$Uid this$1>;

        $r8 = $r7.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl this$0>;

        $r9 = $r8.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        virtualinvoke $r9.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r10 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$SamplingCounter[] mSpeedBins>;

        $r10[i0] = null;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return;
    }

    public com.android.internal.os.BatteryStatsImpl getBatteryStats()
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        com.android.internal.os.BatteryStatsImpl$Uid $r1;
        com.android.internal.os.BatteryStatsImpl $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$Uid this$1>;

        $r2 = $r1.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl this$0>;

        return $r2;
    }

    public android.os.BatteryStats$Uid$Proc$ExcessivePower getExcessivePower(int)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        int i0;
        java.util.ArrayList $r1, $r2;
        java.lang.Object $r3;
        android.os.BatteryStats$Uid$Proc$ExcessivePower $r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: java.util.ArrayList mExcessivePower>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: java.util.ArrayList mExcessivePower>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r4 = (android.os.BatteryStats$Uid$Proc$ExcessivePower) $r3;

        return $r4;

     label1:
        return null;
    }

    public long getForegroundTime(int)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        int i0;
        long l1, $l2, $l3, $l4, $l5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        i0 := @parameter0: int;

        if i0 != 1 goto label2;

        l1 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mLastForegroundTime>;

     label1:
        return l1;

     label2:
        l1 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mForegroundTime>;

        if i0 != 2 goto label3;

        $l4 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mLoadedForegroundTime>;

        $l5 = l1 - $l4;

        return $l5;

     label3:
        if i0 != 3 goto label1;

        $l2 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUnpluggedForegroundTime>;

        $l3 = l1 - $l2;

        return $l3;
    }

    public int getStarts(int)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        int i0, i1, $i2, $i3, $i4, $i5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        i0 := @parameter0: int;

        if i0 != 1 goto label2;

        i1 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mLastStarts>;

     label1:
        return i1;

     label2:
        i1 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mStarts>;

        if i0 != 2 goto label3;

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mLoadedStarts>;

        $i5 = i1 - $i4;

        return $i5;

     label3:
        if i0 != 3 goto label1;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mUnpluggedStarts>;

        $i3 = i1 - $i2;

        return $i3;
    }

    public long getSystemTime(int)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        int i0;
        long l1, $l2, $l3, $l4, $l5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        i0 := @parameter0: int;

        if i0 != 1 goto label2;

        l1 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mLastSystemTime>;

     label1:
        return l1;

     label2:
        l1 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mSystemTime>;

        if i0 != 2 goto label3;

        $l4 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mLoadedSystemTime>;

        $l5 = l1 - $l4;

        return $l5;

     label3:
        if i0 != 3 goto label1;

        $l2 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUnpluggedSystemTime>;

        $l3 = l1 - $l2;

        return $l3;
    }

    public long getTimeAtCpuSpeedStep(int, int)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        int i0, i1, $i3, $i4;
        long l2;
        com.android.internal.os.BatteryStatsImpl$SamplingCounter r1;
        com.android.internal.os.BatteryStatsImpl$SamplingCounter[] $r2, $r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 = 0L;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$SamplingCounter[] mSpeedBins>;

        $i3 = lengthof $r2;

        if i0 >= $i3 goto label1;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$SamplingCounter[] mSpeedBins>;

        r1 = $r3[i0];

        if r1 == null goto label1;

        $i4 = virtualinvoke r1.<com.android.internal.os.BatteryStatsImpl$SamplingCounter: int getCountLocked(int)>(i1);

        l2 = (long) $i4;

     label1:
        return l2;
    }

    public long getUserTime(int)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        int i0;
        long l1, $l2, $l3, $l4, $l5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        i0 := @parameter0: int;

        if i0 != 1 goto label2;

        l1 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mLastUserTime>;

     label1:
        return l1;

     label2:
        l1 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUserTime>;

        if i0 != 2 goto label3;

        $l4 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mLoadedUserTime>;

        $l5 = l1 - $l4;

        return $l5;

     label3:
        if i0 != 3 goto label1;

        $l2 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUnpluggedUserTime>;

        $l3 = l1 - $l2;

        return $l3;
    }

    public void incStartsLocked()
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        int $i0, $i1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mStarts>;

        $i1 = 1 + $i0;

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mStarts> = $i1;

        return;
    }

    public void plug(long, long, long)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        long l0, l1, l2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        return;
    }

    boolean readExcessivePowerFromParcelLocked(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        android.os.Parcel r1;
        int i0, i1, $i2;
        android.os.BatteryStats$Uid$Proc$ExcessivePower r2, $r4;
        java.util.ArrayList $r3, $r5;
        long $l3, $l4;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.String $r8;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        r1 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i0 != 0 goto label2;

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: java.util.ArrayList mExcessivePower> = null;

     label1:
        return 1;

     label2:
        if i0 <= 10000 goto label3;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File corrupt: too many excessive power entries ");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r8);

        return 0;

     label3:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: java.util.ArrayList mExcessivePower> = $r3;

        i1 = 0;

     label4:
        if i1 >= i0 goto label1;

        $r4 = new android.os.BatteryStats$Uid$Proc$ExcessivePower;

        specialinvoke $r4.<android.os.BatteryStats$Uid$Proc$ExcessivePower: void <init>()>();

        r2 = $r4;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<android.os.BatteryStats$Uid$Proc$ExcessivePower: int type> = $i2;

        $l3 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r2.<android.os.BatteryStats$Uid$Proc$ExcessivePower: long overTime> = $l3;

        $l4 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r2.<android.os.BatteryStats$Uid$Proc$ExcessivePower: long usedTime> = $l4;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: java.util.ArrayList mExcessivePower>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        i1 = i1 + 1;

        goto label4;
    }

    void readFromParcelLocked(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        android.os.Parcel r1;
        int i0, i1, i2, $i6, $i10, $i14, $i15;
        long $l3, $l4, $l5, $l7, $l8, $l9, $l11, $l12, $l13;
        com.android.internal.os.BatteryStatsImpl $r2, $r8;
        com.android.internal.os.BatteryStatsImpl$Uid $r3, $r5;
        com.android.internal.os.BatteryStatsImpl$SamplingCounter[] $r4, $r9;
        com.android.internal.os.BatteryStatsImpl$SamplingCounter $r6;
        java.util.ArrayList $r7;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        r1 := @parameter0: android.os.Parcel;

        $l3 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUserTime> = $l3;

        $l4 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mSystemTime> = $l4;

        $l5 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mForegroundTime> = $l5;

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mStarts> = $i6;

        $l7 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mLoadedUserTime> = $l7;

        $l8 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mLoadedSystemTime> = $l8;

        $l9 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mLoadedForegroundTime> = $l9;

        $i10 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mLoadedStarts> = $i10;

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mLastUserTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mLastSystemTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mLastForegroundTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mLastStarts> = 0;

        $l11 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUnpluggedUserTime> = $l11;

        $l12 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUnpluggedSystemTime> = $l12;

        $l13 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUnpluggedForegroundTime> = $l13;

        $i14 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mUnpluggedStarts> = $i14;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$Uid this$1>;

        $r2 = $r3.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl this$0>;

        i1 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: int getCpuSpeedSteps()>();

        if i0 < i1 goto label1;

        i1 = i0;

     label1:
        $r4 = newarray (com.android.internal.os.BatteryStatsImpl$SamplingCounter)[i1];

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$SamplingCounter[] mSpeedBins> = $r4;

        i2 = 0;

     label2:
        if i2 >= i0 goto label4;

        $i15 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i15 == 0 goto label3;

        $r9 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$SamplingCounter[] mSpeedBins>;

        $r6 = new com.android.internal.os.BatteryStatsImpl$SamplingCounter;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$Uid this$1>;

        $r8 = $r5.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl this$0>;

        $r7 = $r8.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mUnpluggables>;

        specialinvoke $r6.<com.android.internal.os.BatteryStatsImpl$SamplingCounter: void <init>(java.util.ArrayList,android.os.Parcel)>($r7, r1);

        $r9[i2] = $r6;

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: boolean readExcessivePowerFromParcelLocked(android.os.Parcel)>(r1);

        return;
    }

    public void unplug(long, long, long)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        long l0, l1, l2, $l3, $l4, $l5;
        int $i6;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        $l3 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUserTime>;

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUnpluggedUserTime> = $l3;

        $l4 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mSystemTime>;

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUnpluggedSystemTime> = $l4;

        $l5 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mForegroundTime>;

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUnpluggedForegroundTime> = $l5;

        $i6 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mStarts>;

        r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mUnpluggedStarts> = $i6;

        return;
    }

    void writeExcessivePowerToParcelLocked(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        android.os.Parcel r1;
        int i0, i1, $i2;
        android.os.BatteryStats$Uid$Proc$ExcessivePower r2;
        java.util.ArrayList $r3, $r4, $r5;
        java.lang.Object $r6;
        long $l3, $l4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        r1 := @parameter0: android.os.Parcel;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: java.util.ArrayList mExcessivePower>;

        if $r3 != null goto label2;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label1:
        return;

     label2:
        $r4 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: java.util.ArrayList mExcessivePower>;

        i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        i1 = 0;

     label3:
        if i1 >= i0 goto label1;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: java.util.ArrayList mExcessivePower>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (android.os.BatteryStats$Uid$Proc$ExcessivePower) $r6;

        $i2 = r2.<android.os.BatteryStats$Uid$Proc$ExcessivePower: int type>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $l3 = r2.<android.os.BatteryStats$Uid$Proc$ExcessivePower: long overTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l3);

        $l4 = r2.<android.os.BatteryStats$Uid$Proc$ExcessivePower: long usedTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l4);

        i1 = i1 + 1;

        goto label3;
    }

    void writeToParcelLocked(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r0;
        android.os.Parcel r1;
        int i0, $i4, $i8, $i12, $i13, $i14;
        com.android.internal.os.BatteryStatsImpl$SamplingCounter r2;
        long $l1, $l2, $l3, $l5, $l6, $l7, $l9, $l10, $l11;
        com.android.internal.os.BatteryStatsImpl$SamplingCounter[] $r3, $r4, $r5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$Uid$Proc;

        r1 := @parameter0: android.os.Parcel;

        $l1 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUserTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l1);

        $l2 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mSystemTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l2);

        $l3 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mForegroundTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l3);

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mStarts>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        $l5 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mLoadedUserTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l5);

        $l6 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mLoadedSystemTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l6);

        $l7 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mLoadedForegroundTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l7);

        $i8 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mLoadedStarts>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i8);

        $l9 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUnpluggedUserTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l9);

        $l10 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUnpluggedSystemTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l10);

        $l11 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUnpluggedForegroundTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l11);

        $i12 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mUnpluggedStarts>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i12);

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$SamplingCounter[] mSpeedBins>;

        $i13 = lengthof $r3;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i13);

        i0 = 0;

     label1:
        $r4 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$SamplingCounter[] mSpeedBins>;

        $i14 = lengthof $r4;

        if i0 >= $i14 goto label4;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$SamplingCounter[] mSpeedBins>;

        r2 = $r5[i0];

        if r2 == null goto label3;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<com.android.internal.os.BatteryStatsImpl$SamplingCounter: void writeToParcel(android.os.Parcel)>(r1);

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        goto label2;

     label4:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void writeExcessivePowerToParcelLocked(android.os.Parcel)>(r1);

        return;
    }
}
