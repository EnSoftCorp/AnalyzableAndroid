class com.android.server.BackupManagerService$PerformFullRestoreTask extends com.android.server.BackupManagerService$ObbServiceClient implements java.lang.Runnable
{
    android.app.IBackupAgent mAgent;
    java.lang.String mAgentPackage;
    long mBytes;
    final java.util.HashSet mClearedPackages;
    java.lang.String mCurrentPassword;
    java.lang.String mDecryptPassword;
    final com.android.server.BackupManagerService$PerformFullRestoreTask$RestoreDeleteObserver mDeleteObserver;
    android.os.ParcelFileDescriptor mInputFile;
    final com.android.server.BackupManagerService$PerformFullRestoreTask$RestoreInstallObserver mInstallObserver;
    java.util.concurrent.atomic.AtomicBoolean mLatchObject;
    final java.util.HashMap mManifestSignatures;
    com.android.server.BackupManagerService$FullBackupObbConnection mObbConnection;
    android.app.backup.IFullBackupRestoreObserver mObserver;
    final java.util.HashMap mPackageInstallers;
    final java.util.HashMap mPackagePolicies;
    android.os.ParcelFileDescriptor[] mPipes;
    android.content.pm.ApplicationInfo mTargetApp;
    final com.android.server.BackupManagerService this$0;

    void <init>(com.android.server.BackupManagerService, android.os.ParcelFileDescriptor, java.lang.String, java.lang.String, android.app.backup.IFullBackupRestoreObserver, java.util.concurrent.atomic.AtomicBoolean)
    {
        com.android.server.BackupManagerService$PerformFullRestoreTask r0;
        com.android.server.BackupManagerService r1;
        android.os.ParcelFileDescriptor r2;
        java.lang.String r3, r4;
        android.app.backup.IFullBackupRestoreObserver r5;
        java.util.concurrent.atomic.AtomicBoolean r6;
        java.util.HashMap $r7, $r8, $r9;
        java.util.HashSet $r10, $r14, $r15;
        com.android.server.BackupManagerService$PerformFullRestoreTask$RestoreInstallObserver $r11;
        com.android.server.BackupManagerService$PerformFullRestoreTask$RestoreDeleteObserver $r12;
        com.android.server.BackupManagerService$FullBackupObbConnection $r13;

        r0 := @this: com.android.server.BackupManagerService$PerformFullRestoreTask;

        r1 := @parameter0: com.android.server.BackupManagerService;

        r2 := @parameter1: android.os.ParcelFileDescriptor;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: android.app.backup.IFullBackupRestoreObserver;

        r6 := @parameter5: java.util.concurrent.atomic.AtomicBoolean;

        r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService this$0> = r1;

        specialinvoke r0.<com.android.server.BackupManagerService$ObbServiceClient: void <init>(com.android.server.BackupManagerService)>(r1);

        r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService$FullBackupObbConnection mObbConnection> = null;

        r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.os.ParcelFileDescriptor[] mPipes> = null;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.util.HashMap mPackagePolicies> = $r7;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.util.HashMap mPackageInstallers> = $r8;

        $r9 = new java.util.HashMap;

        specialinvoke $r9.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.util.HashMap mManifestSignatures> = $r9;

        $r10 = new java.util.HashSet;

        specialinvoke $r10.<java.util.HashSet: void <init>()>();

        r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.util.HashSet mClearedPackages> = $r10;

        $r11 = new com.android.server.BackupManagerService$PerformFullRestoreTask$RestoreInstallObserver;

        specialinvoke $r11.<com.android.server.BackupManagerService$PerformFullRestoreTask$RestoreInstallObserver: void <init>(com.android.server.BackupManagerService$PerformFullRestoreTask)>(r0);

        r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService$PerformFullRestoreTask$RestoreInstallObserver mInstallObserver> = $r11;

        $r12 = new com.android.server.BackupManagerService$PerformFullRestoreTask$RestoreDeleteObserver;

        specialinvoke $r12.<com.android.server.BackupManagerService$PerformFullRestoreTask$RestoreDeleteObserver: void <init>(com.android.server.BackupManagerService$PerformFullRestoreTask)>(r0);

        r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService$PerformFullRestoreTask$RestoreDeleteObserver mDeleteObserver> = $r12;

        r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.os.ParcelFileDescriptor mInputFile> = r2;

        r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.lang.String mCurrentPassword> = r3;

        r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.lang.String mDecryptPassword> = r4;

        r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.app.backup.IFullBackupRestoreObserver mObserver> = r5;

        r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject> = r6;

        r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.app.IBackupAgent mAgent> = null;

        r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.lang.String mAgentPackage> = null;

        r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.content.pm.ApplicationInfo mTargetApp> = null;

        $r13 = new com.android.server.BackupManagerService$FullBackupObbConnection;

        specialinvoke $r13.<com.android.server.BackupManagerService$FullBackupObbConnection: void <init>(com.android.server.BackupManagerService)>(r1);

        r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService$FullBackupObbConnection mObbConnection> = $r13;

        $r14 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.util.HashSet mClearedPackages>;

        virtualinvoke $r14.<java.util.HashSet: boolean add(java.lang.Object)>("android");

        $r15 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.util.HashSet mClearedPackages>;

        virtualinvoke $r15.<java.util.HashSet: boolean add(java.lang.Object)>("com.android.providers.settings");

        return;
    }

    private void HEXLOG(byte[])
    {
        com.android.server.BackupManagerService$PerformFullRestoreTask r0;
        byte[] r1;
        int i0, i1, i2, i3, $i4;
        java.lang.StringBuilder r2, $r5;
        java.lang.Object[] r3, r4;
        java.lang.Integer $r6;
        java.lang.String $r7, $r9, $r10;
        byte $b6;
        java.lang.Byte $r11;

        r0 := @this: com.android.server.BackupManagerService$PerformFullRestoreTask;

        r1 := @parameter0: byte[];

        i0 = 0;

        i1 = lengthof r1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(int)>(64);

        r2 = $r5;

     label1:
        if i1 <= 0 goto label6;

        r3 = newarray (java.lang.Object)[1];

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r3[0] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%04x   ", r3);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        if i1 <= 16 goto label4;

        i2 = 16;

     label2:
        i3 = 0;

     label3:
        if i3 >= i2 goto label5;

        r4 = newarray (java.lang.Object)[1];

        $i4 = i0 + i3;

        $b6 = r1[$i4];

        $r11 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b6);

        r4[0] = $r11;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%02x ", r4);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        i3 = i3 + 1;

        goto label3;

     label4:
        i2 = i1;

        goto label2;

     label5:
        $r9 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("hexdump", $r9);

        virtualinvoke r2.<java.lang.StringBuilder: void setLength(int)>(0);

        i1 = i1 - i2;

        i0 = i0 + i2;

        goto label1;

     label6:
        return;
    }

    java.io.InputStream attemptMasterKeyDecryption(java.lang.String, byte[], byte[], int, java.lang.String, java.lang.String, java.io.InputStream, boolean)
    {
        com.android.server.BackupManagerService$PerformFullRestoreTask r0;
        java.lang.String r1, r4, r5, $r21;
        byte[] r2, r3, r16, r17, r18, r19, $r27, $r28, $r30, $r32;
        int i0, i1, i3, i4, i6, i7, $i8, $i10, $i11;
        java.io.InputStream r6;
        boolean z0, $z1;
        java.security.InvalidAlgorithmParameterException r12, $r37;
        javax.crypto.Cipher r13;
        javax.crypto.spec.IvParameterSpec r14, r20, $r24, $r35;
        javax.crypto.SecretKey r15;
        byte b2, b5, $b9;
        javax.crypto.spec.SecretKeySpec r22, $r29, $r34;
        javax.crypto.CipherInputStream r23, $r38;
        com.android.server.BackupManagerService $r25, $r26, $r31, $r33;
        java.security.NoSuchAlgorithmException $r36;
        javax.crypto.BadPaddingException $r39;
        java.security.InvalidKeyException $r40;
        javax.crypto.NoSuchPaddingException $r41;
        javax.crypto.IllegalBlockSizeException $r42;

        r0 := @this: com.android.server.BackupManagerService$PerformFullRestoreTask;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        r3 := @parameter2: byte[];

        i0 := @parameter3: int;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: java.lang.String;

        r6 := @parameter6: java.io.InputStream;

        z0 := @parameter7: boolean;

     label01:
        r13 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/CBC/PKCS5Padding");

        $r26 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService this$0>;

        $r21 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.lang.String mDecryptPassword>;

        r15 = staticinvoke <com.android.server.BackupManagerService: javax.crypto.SecretKey access$1500(com.android.server.BackupManagerService,java.lang.String,java.lang.String,byte[],int)>($r26, r1, $r21, r2, i0);

        $r24 = new javax.crypto.spec.IvParameterSpec;

        $r25 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService this$0>;

        $r28 = staticinvoke <com.android.server.BackupManagerService: byte[] access$1900(com.android.server.BackupManagerService,java.lang.String)>($r25, r4);

        specialinvoke $r24.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r28);

        r14 = $r24;

        $r29 = new javax.crypto.spec.SecretKeySpec;

        $r27 = interfaceinvoke r15.<javax.crypto.SecretKey: byte[] getEncoded()>();

        specialinvoke $r29.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r27, "AES");

        virtualinvoke r13.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r29, r14);

        $r31 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService this$0>;

        $r30 = staticinvoke <com.android.server.BackupManagerService: byte[] access$1900(com.android.server.BackupManagerService,java.lang.String)>($r31, r5);

        r16 = virtualinvoke r13.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r30);

     label02:
        i1 = 0 + 1;

     label03:
        b2 = r16[0];

        $i8 = b2 + 1;

        r17 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>(r16, i1, $i8);

     label04:
        i4 = b2 + 1;

        i3 = i4 + 1;

     label05:
        b5 = r16[i4];

        $i10 = i3 + b5;

        r18 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>(r16, i3, $i10);

     label06:
        i6 = i3 + b5;

        i7 = i6 + 1;

     label07:
        $b9 = r16[i6];

        $i11 = i7 + $b9;

        r19 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>(r16, i7, $i11);

        $r33 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService this$0>;

        $r32 = staticinvoke <com.android.server.BackupManagerService: byte[] access$1800(com.android.server.BackupManagerService,java.lang.String,byte[],byte[],int)>($r33, r1, r18, r3, i0);

        $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r32, r19);

        if $z1 == 0 goto label09;

        $r35 = new javax.crypto.spec.IvParameterSpec;

        specialinvoke $r35.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r17);

        r20 = $r35;

        $r34 = new javax.crypto.spec.SecretKeySpec;

        specialinvoke $r34.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r18, "AES");

        r22 = $r34;

        virtualinvoke r13.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, r22, r20);

        $r38 = new javax.crypto.CipherInputStream;

        specialinvoke $r38.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>(r6, r13);

        r23 = $r38;

     label08:
        return r23;

     label09:
        if z0 == 0 goto label18;

     label10:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", "Incorrect password");

     label11:
        return null;

     label12:
        $r37 := @caughtexception;

        r12 = $r37;

        if z0 == 0 goto label18;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BackupManagerService", "Needed parameter spec unavailable!", r12);

        return null;

     label13:
        $r39 := @caughtexception;

        if z0 == 0 goto label18;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", "Incorrect password");

        return null;

     label14:
        $r42 := @caughtexception;

        if z0 == 0 goto label18;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", "Invalid block size in master key");

        return null;

     label15:
        $r36 := @caughtexception;

        if z0 == 0 goto label18;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BackupManagerService", "Needed decryption algorithm unavailable!");

        return null;

     label16:
        $r41 := @caughtexception;

        if z0 == 0 goto label18;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BackupManagerService", "Needed padding mechanism unavailable!");

        return null;

     label17:
        $r40 := @caughtexception;

        if z0 == 0 goto label18;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", "Illegal password; aborting");

     label18:
        return null;

        catch java.security.InvalidAlgorithmParameterException from label01 to label02 with label12;
        catch javax.crypto.BadPaddingException from label01 to label02 with label13;
        catch javax.crypto.IllegalBlockSizeException from label01 to label02 with label14;
        catch java.security.NoSuchAlgorithmException from label01 to label02 with label15;
        catch javax.crypto.NoSuchPaddingException from label01 to label02 with label16;
        catch java.security.InvalidKeyException from label01 to label02 with label17;
        catch java.security.InvalidAlgorithmParameterException from label03 to label04 with label12;
        catch javax.crypto.BadPaddingException from label03 to label04 with label13;
        catch javax.crypto.IllegalBlockSizeException from label03 to label04 with label14;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label15;
        catch javax.crypto.NoSuchPaddingException from label03 to label04 with label16;
        catch java.security.InvalidKeyException from label03 to label04 with label17;
        catch java.security.InvalidAlgorithmParameterException from label05 to label06 with label12;
        catch javax.crypto.BadPaddingException from label05 to label06 with label13;
        catch javax.crypto.IllegalBlockSizeException from label05 to label06 with label14;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label15;
        catch javax.crypto.NoSuchPaddingException from label05 to label06 with label16;
        catch java.security.InvalidKeyException from label05 to label06 with label17;
        catch java.security.InvalidAlgorithmParameterException from label07 to label08 with label12;
        catch javax.crypto.BadPaddingException from label07 to label08 with label13;
        catch javax.crypto.IllegalBlockSizeException from label07 to label08 with label14;
        catch java.security.NoSuchAlgorithmException from label07 to label08 with label15;
        catch javax.crypto.NoSuchPaddingException from label07 to label08 with label16;
        catch java.security.InvalidKeyException from label07 to label08 with label17;
        catch java.security.InvalidAlgorithmParameterException from label10 to label11 with label12;
        catch javax.crypto.BadPaddingException from label10 to label11 with label13;
        catch javax.crypto.IllegalBlockSizeException from label10 to label11 with label14;
        catch java.security.NoSuchAlgorithmException from label10 to label11 with label15;
        catch javax.crypto.NoSuchPaddingException from label10 to label11 with label16;
        catch java.security.InvalidKeyException from label10 to label11 with label17;
    }

    java.io.InputStream decodeAesHeaderAndInitialize(java.lang.String, boolean, java.io.InputStream)
    {
        com.android.server.BackupManagerService$PerformFullRestoreTask r0;
        java.lang.String r1, r6, r8, r10, r11, $r15, $r18;
        boolean z0, $z1;
        java.io.InputStream r2, r3, $r19;
        byte[] r7, r9;
        int i0;
        java.lang.StringBuilder $r12, $r13, $r14;
        com.android.server.BackupManagerService $r16, $r17;
        java.io.IOException $r20;
        java.lang.NumberFormatException $r21;

        r0 := @this: com.android.server.BackupManagerService$PerformFullRestoreTask;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.io.InputStream;

        r3 = null;

     label1:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("AES-256");

        if $z1 == 0 goto label4;

        r6 = virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.lang.String readHeaderLine(java.io.InputStream)>(r2);

        $r16 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService this$0>;

        r7 = staticinvoke <com.android.server.BackupManagerService: byte[] access$1900(com.android.server.BackupManagerService,java.lang.String)>($r16, r6);

        r8 = virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.lang.String readHeaderLine(java.io.InputStream)>(r2);

        $r17 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService this$0>;

        r9 = staticinvoke <com.android.server.BackupManagerService: byte[] access$1900(com.android.server.BackupManagerService,java.lang.String)>($r17, r8);

        $r18 = virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.lang.String readHeaderLine(java.io.InputStream)>(r2);

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r18);

        r10 = virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.lang.String readHeaderLine(java.io.InputStream)>(r2);

        r11 = virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.lang.String readHeaderLine(java.io.InputStream)>(r2);

        r3 = virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.io.InputStream attemptMasterKeyDecryption(java.lang.String,byte[],byte[],int,java.lang.String,java.lang.String,java.io.InputStream,boolean)>("PBKDF2WithHmacSHA1", r7, r9, i0, r10, r11, r2, 0);

     label2:
        if r3 != null goto label8;

        if z0 == 0 goto label8;

     label3:
        $r19 = virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.io.InputStream attemptMasterKeyDecryption(java.lang.String,byte[],byte[],int,java.lang.String,java.lang.String,java.io.InputStream,boolean)>("PBKDF2WithHmacSHA1And8bit", r7, r9, i0, r10, r11, r2, 1);

        return $r19;

     label4:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported encryption method: ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", $r15);

     label5:
        return null;

     label6:
        $r21 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", "Can\'t parse restore data header");

        return r3;

     label7:
        $r20 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", "Can\'t read input header");

     label8:
        return r3;

        catch java.lang.NumberFormatException from label1 to label2 with label6;
        catch java.io.IOException from label1 to label2 with label7;
        catch java.lang.NumberFormatException from label3 to label4 with label6;
        catch java.io.IOException from label3 to label4 with label7;
        catch java.lang.NumberFormatException from label4 to label5 with label6;
        catch java.io.IOException from label4 to label5 with label7;
    }

    void dumpFileMetadata(com.android.server.BackupManagerService$FileMetadata)
    {
        com.android.server.BackupManagerService$PerformFullRestoreTask r0;
        com.android.server.BackupManagerService$FileMetadata r1;
        char c0, c1, c2, c3, c4, c5, c6, c7, c8, c9;
        java.lang.StringBuilder r2, $r5;
        java.lang.Object[] r3;
        java.util.Date r4, $r17;
        int $i10;
        long $l11, $l13, $l14, $l16, $l17, $l19, $l20, $l22, $l23, $l25, $l27, $l28, $l30, $l31, $l33, $l34, $l36, $l37, $l38, $l39;
        byte $b12, $b15, $b18, $b21, $b24, $b26, $b29, $b32, $b35;
        java.lang.String $r15, $r22, $r25, $r27, $r28, $r29;
        java.lang.Long $r19;
        java.text.SimpleDateFormat $r24;

        r0 := @this: com.android.server.BackupManagerService$PerformFullRestoreTask;

        r1 := @parameter0: com.android.server.BackupManagerService$FileMetadata;

        c0 = 120;

        c1 = 119;

        c2 = 114;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(int)>(128);

        r2 = $r5;

        $i10 = r1.<com.android.server.BackupManagerService$FileMetadata: int type>;

        if $i10 != 2 goto label11;

        c3 = 100;

     label01:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c3);

        $l11 = r1.<com.android.server.BackupManagerService$FileMetadata: long mode>;

        $l13 = 256L & $l11;

        $b12 = $l13 cmp 0L;

        if $b12 == 0 goto label12;

        c4 = c2;

     label02:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c4);

        $l16 = r1.<com.android.server.BackupManagerService$FileMetadata: long mode>;

        $l14 = 128L & $l16;

        $b15 = $l14 cmp 0L;

        if $b15 == 0 goto label13;

        c5 = c1;

     label03:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c5);

        $l19 = r1.<com.android.server.BackupManagerService$FileMetadata: long mode>;

        $l17 = 64L & $l19;

        $b18 = $l17 cmp 0L;

        if $b18 == 0 goto label14;

        c6 = c0;

     label04:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c6);

        $l22 = r1.<com.android.server.BackupManagerService$FileMetadata: long mode>;

        $l20 = 32L & $l22;

        $b21 = $l20 cmp 0L;

        if $b21 == 0 goto label15;

        c7 = c2;

     label05:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c7);

        $l25 = r1.<com.android.server.BackupManagerService$FileMetadata: long mode>;

        $l23 = 16L & $l25;

        $b24 = $l23 cmp 0L;

        if $b24 == 0 goto label16;

        c8 = c1;

     label06:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c8);

        $l28 = r1.<com.android.server.BackupManagerService$FileMetadata: long mode>;

        $l27 = 8L & $l28;

        $b26 = $l27 cmp 0L;

        if $b26 == 0 goto label17;

        c9 = c0;

     label07:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c9);

        $l31 = r1.<com.android.server.BackupManagerService$FileMetadata: long mode>;

        $l30 = 4L & $l31;

        $b29 = $l30 cmp 0L;

        if $b29 == 0 goto label18;

     label08:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c2);

        $l34 = r1.<com.android.server.BackupManagerService$FileMetadata: long mode>;

        $l33 = 2L & $l34;

        $b32 = $l33 cmp 0L;

        if $b32 == 0 goto label19;

     label09:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

        $l37 = r1.<com.android.server.BackupManagerService$FileMetadata: long mode>;

        $l36 = 1L & $l37;

        $b35 = $l36 cmp 0L;

        if $b35 == 0 goto label20;

     label10:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        r3 = newarray (java.lang.Object)[1];

        $l39 = r1.<com.android.server.BackupManagerService$FileMetadata: long size>;

        $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l39);

        r3[0] = $r19;

        $r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" %9d ", r3);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = new java.util.Date;

        $l38 = r1.<com.android.server.BackupManagerService$FileMetadata: long mtime>;

        specialinvoke $r17.<java.util.Date: void <init>(long)>($l38);

        r4 = $r17;

        $r24 = new java.text.SimpleDateFormat;

        specialinvoke $r24.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("MMM dd HH:mm:ss ");

        $r25 = virtualinvoke $r24.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r4);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = r1.<com.android.server.BackupManagerService$FileMetadata: java.lang.String packageName>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" :: ");

        $r22 = r1.<com.android.server.BackupManagerService$FileMetadata: java.lang.String domain>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" :: ");

        $r29 = r1.<com.android.server.BackupManagerService$FileMetadata: java.lang.String path>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r28 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BackupManagerService", $r28);

        return;

     label11:
        c3 = 45;

        goto label01;

     label12:
        c4 = 45;

        goto label02;

     label13:
        c5 = 45;

        goto label03;

     label14:
        c6 = 45;

        goto label04;

     label15:
        c7 = 45;

        goto label05;

     label16:
        c8 = 45;

        goto label06;

     label17:
        c9 = 45;

        goto label07;

     label18:
        c2 = 45;

        goto label08;

     label19:
        c1 = 45;

        goto label09;

     label20:
        c0 = 45;

        goto label10;
    }

    int extractLine(byte[], int, java.lang.String[]) throws java.io.IOException
    {
        com.android.server.BackupManagerService$PerformFullRestoreTask r0;
        byte[] r1;
        int i0, i1, i2, $i3, $i4;
        java.lang.String[] r2;
        java.lang.String $r3;
        byte $b5;
        java.io.IOException $r4;

        r0 := @this: com.android.server.BackupManagerService$PerformFullRestoreTask;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String[];

        i1 = lengthof r1;

        if i0 < i1 goto label1;

        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("Incomplete data");

        throw $r4;

     label1:
        i2 = i0;

     label2:
        if i2 >= i1 goto label3;

        $b5 = r1[i2];

        if $b5 != 10 goto label4;

     label3:
        $r3 = new java.lang.String;

        $i3 = i2 - i0;

        specialinvoke $r3.<java.lang.String: void <init>(byte[],int,int)>(r1, i0, $i3);

        r2[0] = $r3;

        $i4 = i2 + 1;

        return $i4;

     label4:
        i2 = i2 + 1;

        goto label2;
    }

    long extractRadix(byte[], int, int, int) throws java.io.IOException
    {
        com.android.server.BackupManagerService$PerformFullRestoreTask r0;
        byte[] r1;
        int i0, i1, i2, i4, i5, $i8, $i9, $i10;
        long l3, $l11, $l12, $l13;
        byte b6;
        java.io.IOException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r8;
        char $c7;
        java.lang.String $r7;

        r0 := @this: com.android.server.BackupManagerService$PerformFullRestoreTask;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        l3 = 0L;

        i4 = i0 + i1;

        i5 = i0;

     label1:
        if i5 >= i4 goto label2;

        b6 = r1[i5];

        if b6 == 0 goto label2;

        if b6 != 32 goto label3;

     label2:
        return l3;

     label3:
        if b6 < 48 goto label4;

        $i9 = i2 + 48;

        $i8 = -1 + $i9;

        if b6 <= $i8 goto label5;

     label4:
        $r2 = new java.io.IOException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid number in header: \'");

        $c7 = (char) b6;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c7);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' for radix ");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label5:
        $l11 = (long) i2;

        $l12 = l3 * $l11;

        $i10 = b6 - 48;

        $l13 = (long) $i10;

        l3 = $l12 + $l13;

        i5 = i5 + 1;

        goto label1;
    }

    java.lang.String extractString(byte[], int, int) throws java.io.IOException
    {
        com.android.server.BackupManagerService$PerformFullRestoreTask r0;
        byte[] r1;
        int i0, i1, i2, i3, $i4;
        java.lang.String $r2;
        byte $b5;

        r0 := @this: com.android.server.BackupManagerService$PerformFullRestoreTask;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = i0 + i1;

        i3 = i0;

     label1:
        if i3 >= i2 goto label2;

        $b5 = r1[i3];

        if $b5 == 0 goto label2;

        i3 = i3 + 1;

        goto label1;

     label2:
        $r2 = new java.lang.String;

        $i4 = i3 - i0;

        specialinvoke $r2.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r1, i0, $i4, "US-ASCII");

        return $r2;
    }

    boolean installApk(com.android.server.BackupManagerService$FileMetadata, java.lang.String, java.io.InputStream)
    {
        com.android.server.BackupManagerService$PerformFullRestoreTask r0;
        com.android.server.BackupManagerService$FileMetadata r1;
        java.lang.String r2, r13, $r18, $r20, $r22, $r32, $r33, $r35, $r42, $r45, $r48, $r52, $r56, $r66, $r68, $r72, $r74, $r76, $r77, $r79, $r82, $r83;
        java.io.InputStream r3;
        boolean z0, z1, $z3, $z4;
        java.io.File r4, $r23, $r24;
        java.io.FileOutputStream r5, $r25;
        java.lang.Throwable r6, $r85;
        byte[] r8;
        long l0, l1, $l13, $l14, $l15, $l18, $l22;
        int i2, i3, $i6, $i7, $i8, $i16, $i19, $i21;
        android.net.Uri r10;
        android.content.pm.Signature[] r11;
        android.content.pm.PackageInfo r12;
        java.lang.StringBuilder $r14, $r17, $r19, $r43, $r44, $r46, $r47, $r57, $r58, $r59, $r62, $r63, $r64, $r65, $r67, $r69, $r70, $r71, $r73, $r78, $r81, $r84, $r87, $r89;
        java.lang.Object r15, $r39;
        com.android.server.BackupManagerService$RestorePolicy r16;
        com.android.server.BackupManagerService $r21, $r27, $r37, $r40, $r55;
        byte $b5, $b17;
        android.content.pm.PackageManager $r26, $r36, $r54;
        com.android.server.BackupManagerService$PerformFullRestoreTask$RestoreInstallObserver $r28, $r29, $r30, $r31, $r34, $r50, $r80;
        java.util.HashMap $r38, $r75;
        android.content.pm.ApplicationInfo $r41, $r60, $r61;
        com.android.server.BackupManagerService$PerformFullRestoreTask$RestoreDeleteObserver $r49, $r51, $r53;
        java.io.IOException $r86;
        android.content.pm.PackageManager$NameNotFoundException $r88;

        r0 := @this: com.android.server.BackupManagerService$PerformFullRestoreTask;

        r1 := @parameter0: com.android.server.BackupManagerService$FileMetadata;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.io.InputStream;

        z0 = 1;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Installing from backup: ");

        $r20 = r1.<com.android.server.BackupManagerService$FileMetadata: java.lang.String packageName>;

        $r17 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", $r18);

        $r23 = new java.io.File;

        $r21 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService this$0>;

        $r24 = $r21.<com.android.server.BackupManagerService: java.io.File mDataDir>;

        $r22 = r1.<com.android.server.BackupManagerService$FileMetadata: java.lang.String packageName>;

        specialinvoke $r23.<java.io.File: void <init>(java.io.File,java.lang.String)>($r24, $r22);

        r4 = $r23;

     label01:
        $r25 = new java.io.FileOutputStream;

        specialinvoke $r25.<java.io.FileOutputStream: void <init>(java.io.File)>(r4);

        r5 = $r25;

        r8 = newarray (byte)[32768];

        l0 = r1.<com.android.server.BackupManagerService$FileMetadata: long size>;

     label02:
        $b5 = l0 cmp 0L;

        if $b5 <= 0 goto label09;

     label03:
        $i19 = lengthof r8;

        $l18 = (long) $i19;

        $b17 = $l18 cmp l0;

        if $b17 >= 0 goto label34;

        $i21 = lengthof r8;

        l1 = (long) $i21;

     label04:
        $i16 = (int) l1;

        i2 = virtualinvoke r3.<java.io.InputStream: int read(byte[],int,int)>(r8, 0, $i16);

     label05:
        if i2 < 0 goto label07;

     label06:
        $l13 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: long mBytes>;

        $l14 = (long) i2;

        $l22 = $l13 + $l14;

        r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: long mBytes> = $l22;

     label07:
        virtualinvoke r5.<java.io.FileOutputStream: void write(byte[],int,int)>(r8, 0, i2);

     label08:
        $l15 = (long) i2;

        l0 = l0 - $l15;

        goto label02;

     label09:
        virtualinvoke r5.<java.io.FileOutputStream: void close()>();

        virtualinvoke r4.<java.io.File: boolean setReadable(boolean,boolean)>(1, 0);

        r10 = staticinvoke <android.net.Uri: android.net.Uri fromFile(java.io.File)>(r4);

        $r28 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService$PerformFullRestoreTask$RestoreInstallObserver mInstallObserver>;

        virtualinvoke $r28.<com.android.server.BackupManagerService$PerformFullRestoreTask$RestoreInstallObserver: void reset()>();

        $r27 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService this$0>;

        $r26 = staticinvoke <com.android.server.BackupManagerService: android.content.pm.PackageManager access$600(com.android.server.BackupManagerService)>($r27);

        $r31 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService$PerformFullRestoreTask$RestoreInstallObserver mInstallObserver>;

        virtualinvoke $r26.<android.content.pm.PackageManager: void installPackage(android.net.Uri,android.content.pm.IPackageInstallObserver,int,java.lang.String)>(r10, $r31, 34, r2);

        $r30 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService$PerformFullRestoreTask$RestoreInstallObserver mInstallObserver>;

        virtualinvoke $r30.<com.android.server.BackupManagerService$PerformFullRestoreTask$RestoreInstallObserver: void waitForCompletion()>();

        $r29 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService$PerformFullRestoreTask$RestoreInstallObserver mInstallObserver>;

        $i6 = virtualinvoke $r29.<com.android.server.BackupManagerService$PerformFullRestoreTask$RestoreInstallObserver: int getResult()>();

        if $i6 == 1 goto label12;

        $r75 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.util.HashMap mPackagePolicies>;

        $r76 = r1.<com.android.server.BackupManagerService$FileMetadata: java.lang.String packageName>;

        r15 = virtualinvoke $r75.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r76);

        r16 = <com.android.server.BackupManagerService$RestorePolicy: com.android.server.BackupManagerService$RestorePolicy ACCEPT>;

     label10:
        if r15 == r16 goto label11;

        z0 = 0;

     label11:
        virtualinvoke r4.<java.io.File: boolean delete()>();

        return z0;

     label12:
        $r34 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService$PerformFullRestoreTask$RestoreInstallObserver mInstallObserver>;

        $r32 = $r34.<com.android.server.BackupManagerService$PerformFullRestoreTask$RestoreInstallObserver: java.lang.String mPackageName>;

        $r33 = r1.<com.android.server.BackupManagerService$FileMetadata: java.lang.String packageName>;

        $z3 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>($r33);

        if $z3 != 0 goto label20;

        $r73 = new java.lang.StringBuilder;

        specialinvoke $r73.<java.lang.StringBuilder: void <init>()>();

        $r71 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Restore stream claimed to include apk for ");

        $r72 = r1.<com.android.server.BackupManagerService$FileMetadata: java.lang.String packageName>;

        $r69 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r72);

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but apk was really ");

        $r80 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService$PerformFullRestoreTask$RestoreInstallObserver mInstallObserver>;

        $r79 = $r80.<com.android.server.BackupManagerService$PerformFullRestoreTask$RestoreInstallObserver: java.lang.String mPackageName>;

        $r78 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r79);

        $r77 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", $r77);

     label13:
        z0 = 0;

        z1 = 1;

     label14:
        if z1 == 0 goto label11;

     label15:
        $r53 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService$PerformFullRestoreTask$RestoreDeleteObserver mDeleteObserver>;

        virtualinvoke $r53.<com.android.server.BackupManagerService$PerformFullRestoreTask$RestoreDeleteObserver: void reset()>();

        $r55 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService this$0>;

        $r54 = staticinvoke <com.android.server.BackupManagerService: android.content.pm.PackageManager access$600(com.android.server.BackupManagerService)>($r55);

        $r50 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService$PerformFullRestoreTask$RestoreInstallObserver mInstallObserver>;

        $r52 = $r50.<com.android.server.BackupManagerService$PerformFullRestoreTask$RestoreInstallObserver: java.lang.String mPackageName>;

        $r49 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService$PerformFullRestoreTask$RestoreDeleteObserver mDeleteObserver>;

        virtualinvoke $r54.<android.content.pm.PackageManager: void deletePackage(java.lang.String,android.content.pm.IPackageDeleteObserver,int)>($r52, $r49, 0);

        $r51 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService$PerformFullRestoreTask$RestoreDeleteObserver mDeleteObserver>;

        virtualinvoke $r51.<com.android.server.BackupManagerService$PerformFullRestoreTask$RestoreDeleteObserver: void waitForCompletion()>();

     label16:
        goto label11;

     label17:
        $r86 := @caughtexception;

     label18:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BackupManagerService", "Unable to transcribe restored apk for install");

     label19:
        z0 = 0;

        goto label11;

     label20:
        $r37 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService this$0>;

        $r36 = staticinvoke <com.android.server.BackupManagerService: android.content.pm.PackageManager access$600(com.android.server.BackupManagerService)>($r37);

        $r35 = r1.<com.android.server.BackupManagerService$FileMetadata: java.lang.String packageName>;

        r12 = virtualinvoke $r36.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r35, 64);

        $r41 = r12.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i7 = $r41.<android.content.pm.ApplicationInfo: int flags>;

        $i8 = 32768 & $i7;

        if $i8 != 0 goto label22;

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        $r65 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Restore stream contains apk of package ");

        $r66 = r1.<com.android.server.BackupManagerService$FileMetadata: java.lang.String packageName>;

        $r63 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r66);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but it disallows backup/restore");

        $r74 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", $r74);

     label21:
        z0 = 0;

        z1 = 0;

        goto label14;

     label22:
        $r38 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.util.HashMap mManifestSignatures>;

        $r42 = r1.<com.android.server.BackupManagerService$FileMetadata: java.lang.String packageName>;

        $r39 = virtualinvoke $r38.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r42);

        r11 = (android.content.pm.Signature[]) $r39;

        $r40 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService this$0>;

        $z4 = staticinvoke <com.android.server.BackupManagerService: boolean access$2000(com.android.server.BackupManagerService,android.content.pm.Signature[],android.content.pm.PackageInfo)>($r40, r11, r12);

        if $z4 == 0 goto label28;

        $r61 = r12.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        i3 = $r61.<android.content.pm.ApplicationInfo: int uid>;

     label23:
        z1 = 0;

        if i3 >= 10000 goto label14;

     label24:
        $r60 = r12.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        r13 = $r60.<android.content.pm.ApplicationInfo: java.lang.String backupAgentName>;

     label25:
        z1 = 0;

        if r13 != null goto label14;

     label26:
        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Installed app ");

        $r56 = r1.<com.android.server.BackupManagerService$FileMetadata: java.lang.String packageName>;

        $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);

        $r58 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has restricted uid and no agent");

        $r68 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", $r68);

     label27:
        z0 = 0;

        z1 = 0;

        goto label14;

     label28:
        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Installed app ");

        $r48 = r1.<com.android.server.BackupManagerService$FileMetadata: java.lang.String packageName>;

        $r43 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" signatures do not match restore manifest");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", $r45);

     label29:
        z1 = 1;

        z0 = 0;

        goto label14;

     label30:
        $r88 := @caughtexception;

     label31:
        $r87 = new java.lang.StringBuilder;

        specialinvoke $r87.<java.lang.StringBuilder: void <init>()>();

        $r89 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Install of package ");

        $r82 = r1.<com.android.server.BackupManagerService$FileMetadata: java.lang.String packageName>;

        $r81 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r82);

        $r84 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" succeeded but now not found");

        $r83 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", $r83);

     label32:
        z0 = 0;

        z1 = 0;

        goto label14;

     label33:
        $r85 := @caughtexception;

        r6 = $r85;

        virtualinvoke r4.<java.io.File: boolean delete()>();

        throw r6;

     label34:
        l1 = l0;

        goto label04;

        catch java.io.IOException from label01 to label02 with label17;
        catch java.lang.Throwable from label01 to label02 with label33;
        catch java.io.IOException from label03 to label04 with label17;
        catch java.lang.Throwable from label03 to label04 with label33;
        catch java.io.IOException from label04 to label05 with label17;
        catch java.lang.Throwable from label04 to label05 with label33;
        catch java.io.IOException from label06 to label07 with label17;
        catch java.lang.Throwable from label06 to label07 with label33;
        catch java.io.IOException from label07 to label08 with label17;
        catch java.lang.Throwable from label07 to label08 with label33;
        catch java.io.IOException from label09 to label10 with label17;
        catch java.lang.Throwable from label09 to label10 with label33;
        catch java.io.IOException from label12 to label13 with label17;
        catch java.lang.Throwable from label12 to label13 with label33;
        catch java.io.IOException from label15 to label16 with label17;
        catch java.lang.Throwable from label15 to label16 with label33;
        catch java.lang.Throwable from label18 to label19 with label33;
        catch android.content.pm.PackageManager$NameNotFoundException from label20 to label21 with label30;
        catch java.io.IOException from label20 to label21 with label17;
        catch java.lang.Throwable from label20 to label21 with label33;
        catch android.content.pm.PackageManager$NameNotFoundException from label22 to label23 with label30;
        catch java.io.IOException from label22 to label23 with label17;
        catch java.lang.Throwable from label22 to label23 with label33;
        catch android.content.pm.PackageManager$NameNotFoundException from label24 to label25 with label30;
        catch java.io.IOException from label24 to label25 with label17;
        catch java.lang.Throwable from label24 to label25 with label33;
        catch android.content.pm.PackageManager$NameNotFoundException from label26 to label27 with label30;
        catch java.io.IOException from label26 to label27 with label17;
        catch java.lang.Throwable from label26 to label27 with label33;
        catch android.content.pm.PackageManager$NameNotFoundException from label28 to label29 with label30;
        catch java.io.IOException from label28 to label29 with label17;
        catch java.lang.Throwable from label28 to label29 with label33;
        catch java.io.IOException from label31 to label32 with label17;
        catch java.lang.Throwable from label31 to label32 with label33;
    }

    com.android.server.BackupManagerService$RestorePolicy readAppManifest(com.android.server.BackupManagerService$FileMetadata, java.io.InputStream) throws java.io.IOException
    {
        com.android.server.BackupManagerService$PerformFullRestoreTask r0;
        com.android.server.BackupManagerService$FileMetadata r1;
        java.io.InputStream r2;
        byte[] r3;
        com.android.server.BackupManagerService$RestorePolicy r4, $r48;
        java.lang.String[] r5;
        java.lang.IllegalArgumentException r6, $r95;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, $i12, $i15, $i18, $i26, $i29, $i30, $i33, $i34, $i38;
        java.lang.String r8, r9, $r14, $r18, $r21, $r22, $r25, $r26, $r27, $r31, $r32, $r35, $r36, $r38, $r42, $r43, $r47, $r50, $r54, $r56, $r59, $r62, $r67, $r69, $r71, $r77, $r84, $r87, $r88, $r90, $r94, $r96, $r102, $r103;
        boolean z0, $z1, $z2;
        android.content.pm.Signature[] r10;
        android.content.pm.PackageInfo r12;
        long $l11, $l13, $l16, $l17, $l19, $l20, $l22, $l23, $l39;
        byte $b14, $b21;
        java.io.IOException $r13, $r78;
        java.lang.StringBuilder $r15, $r16, $r17, $r19, $r20, $r23, $r24, $r28, $r29, $r30, $r33, $r34, $r41, $r44, $r49, $r51, $r52, $r53, $r57, $r58, $r60, $r61, $r63, $r64, $r66, $r68, $r72, $r73, $r74, $r75, $r79, $r80, $r81, $r82, $r83, $r85, $r86, $r89, $r91, $r92, $r97, $r99, $r100, $r101;
        java.util.HashMap $r37;
        com.android.server.BackupManagerService $r39, $r65;
        android.content.pm.ApplicationInfo $r45, $r55, $r70;
        android.content.pm.PackageManager $r46;
        android.content.pm.Signature $r76;
        android.content.pm.PackageManager$NameNotFoundException $r93;
        java.lang.NumberFormatException $r98;

        r0 := @this: com.android.server.BackupManagerService$PerformFullRestoreTask;

        r1 := @parameter0: com.android.server.BackupManagerService$FileMetadata;

        r2 := @parameter1: java.io.InputStream;

        $l13 = r1.<com.android.server.BackupManagerService$FileMetadata: long size>;

        $b14 = $l13 cmp 65536L;

        if $b14 <= 0 goto label01;

        $r78 = new java.io.IOException;

        $r79 = new java.lang.StringBuilder;

        specialinvoke $r79.<java.lang.StringBuilder: void <init>()>();

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Restore manifest too big; corrupt? size=");

        $l39 = r1.<com.android.server.BackupManagerService$FileMetadata: long size>;

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l39);

        $r96 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r78.<java.io.IOException: void <init>(java.lang.String)>($r96);

        throw $r78;

     label01:
        $l11 = r1.<com.android.server.BackupManagerService$FileMetadata: long size>;

        $i12 = (int) $l11;

        r3 = newarray (byte)[$i12];

        $l17 = r1.<com.android.server.BackupManagerService$FileMetadata: long size>;

        $i18 = (int) $l17;

        $i15 = virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: int readExactly(java.io.InputStream,byte[],int,int)>(r2, r3, 0, $i18);

        $l20 = (long) $i15;

        $l16 = r1.<com.android.server.BackupManagerService$FileMetadata: long size>;

        $b21 = $l20 cmp $l16;

        if $b21 != 0 goto label12;

        $l22 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: long mBytes>;

        $l19 = r1.<com.android.server.BackupManagerService$FileMetadata: long size>;

        $l23 = $l22 + $l19;

        r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: long mBytes> = $l23;

        r4 = <com.android.server.BackupManagerService$RestorePolicy: com.android.server.BackupManagerService$RestorePolicy IGNORE>;

        r5 = newarray (java.lang.String)[1];

     label02:
        i0 = virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: int extractLine(byte[],int,java.lang.String[])>(r3, 0, r5);

        $r14 = r5[0];

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r14);

     label03:
        if i1 != 1 goto label38;

     label04:
        i2 = virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: int extractLine(byte[],int,java.lang.String[])>(r3, i0, r5);

        r8 = r5[0];

        $r21 = r1.<com.android.server.BackupManagerService$FileMetadata: java.lang.String packageName>;

        $z1 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>($r21);

        if $z1 == 0 goto label36;

        i3 = virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: int extractLine(byte[],int,java.lang.String[])>(r3, i2, r5);

        $r26 = r5[0];

        i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r26);

        i4 = virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: int extractLine(byte[],int,java.lang.String[])>(r3, i3, r5);

        $r32 = r5[0];

        staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r32);

        i6 = virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: int extractLine(byte[],int,java.lang.String[])>(r3, i4, r5);

        $r31 = r5[0];

        $i26 = virtualinvoke $r31.<java.lang.String: int length()>();

        if $i26 <= 0 goto label13;

        r9 = r5[0];

     label05:
        r1.<com.android.server.BackupManagerService$FileMetadata: java.lang.String installerPackageName> = r9;

        i7 = virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: int extractLine(byte[],int,java.lang.String[])>(r3, i6, r5);

        $r35 = r5[0];

        z0 = virtualinvoke $r35.<java.lang.String: boolean equals(java.lang.Object)>("1");

        i8 = virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: int extractLine(byte[],int,java.lang.String[])>(r3, i7, r5);

        $r36 = r5[0];

        i9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r36);

     label06:
        if i9 <= 0 goto label34;

     label07:
        r10 = newarray (android.content.pm.Signature)[i9];

     label08:
        i10 = 0;

     label09:
        if i10 >= i9 goto label14;

     label10:
        i8 = virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: int extractLine(byte[],int,java.lang.String[])>(r3, i8, r5);

        $r76 = new android.content.pm.Signature;

        $r77 = r5[0];

        specialinvoke $r76.<android.content.pm.Signature: void <init>(java.lang.String)>($r77);

        r10[i10] = $r76;

     label11:
        i10 = i10 + 1;

        goto label09;

     label12:
        $r13 = new java.io.IOException;

        specialinvoke $r13.<java.io.IOException: void <init>(java.lang.String)>("Unexpected EOF in manifest");

        throw $r13;

     label13:
        r9 = null;

        goto label05;

     label14:
        $r37 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.util.HashMap mManifestSignatures>;

        $r38 = r1.<com.android.server.BackupManagerService$FileMetadata: java.lang.String packageName>;

        virtualinvoke $r37.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r38, r10);

     label15:
        $r39 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService this$0>;

        $r46 = staticinvoke <com.android.server.BackupManagerService: android.content.pm.PackageManager access$600(com.android.server.BackupManagerService)>($r39);

        $r47 = r1.<com.android.server.BackupManagerService$FileMetadata: java.lang.String packageName>;

        r12 = virtualinvoke $r46.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r47, 64);

        $r45 = r12.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i29 = $r45.<android.content.pm.ApplicationInfo: int flags>;

        $i30 = 32768 & $i29;

        if $i30 == 0 goto label31;

        $r55 = r12.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i33 = $r55.<android.content.pm.ApplicationInfo: int uid>;

        if $i33 >= 10000 goto label16;

        $r70 = r12.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r69 = $r70.<android.content.pm.ApplicationInfo: java.lang.String backupAgentName>;

        if $r69 == null goto label28;

     label16:
        $r65 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService this$0>;

        $z2 = staticinvoke <com.android.server.BackupManagerService: boolean access$2000(com.android.server.BackupManagerService,android.content.pm.Signature[],android.content.pm.PackageInfo)>($r65, r10, r12);

        if $z2 == 0 goto label23;

        $i38 = r12.<android.content.pm.PackageInfo: int versionCode>;

        if $i38 < i5 goto label21;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BackupManagerService", "Sig + version match; taking data");

        r4 = <com.android.server.BackupManagerService$RestorePolicy: com.android.server.BackupManagerService$RestorePolicy ACCEPT>;

     label17:
        $r48 = <com.android.server.BackupManagerService$RestorePolicy: com.android.server.BackupManagerService$RestorePolicy ACCEPT_IF_APK>;

        if r4 != $r48 goto label20;

     label18:
        if z0 != 0 goto label20;

     label19:
        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot restore package ");

        $r59 = r1.<com.android.server.BackupManagerService$FileMetadata: java.lang.String packageName>;

        $r58 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        $r57 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" without the matching .apk");

        $r56 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BackupManagerService", $r56);

     label20:
        return r4;

     label21:
        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Data version ");

        $r75 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r74 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is newer than installed version ");

        $i34 = r12.<android.content.pm.PackageInfo: int versionCode>;

        $r66 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i34);

        $r68 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - requiring apk");

        $r67 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", $r67);

        r4 = <com.android.server.BackupManagerService$RestorePolicy: com.android.server.BackupManagerService$RestorePolicy ACCEPT_IF_APK>;

     label22:
        goto label17;

     label23:
        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        $r63 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Restore manifest signatures do not match installed application for ");

        $r62 = r1.<com.android.server.BackupManagerService$FileMetadata: java.lang.String packageName>;

        $r61 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        $r71 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", $r71);

     label24:
        goto label17;

     label25:
        $r93 := @caughtexception;

     label26:
        $r92 = new java.lang.StringBuilder;

        specialinvoke $r92.<java.lang.StringBuilder: void <init>()>();

        $r101 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r102 = r1.<com.android.server.BackupManagerService$FileMetadata: java.lang.String packageName>;

        $r99 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r102);

        $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not installed; requiring apk in dataset");

        $r103 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BackupManagerService", $r103);

        r4 = <com.android.server.BackupManagerService$RestorePolicy: com.android.server.BackupManagerService$RestorePolicy ACCEPT_IF_APK>;

     label27:
        goto label17;

     label28:
        $r82 = new java.lang.StringBuilder;

        specialinvoke $r82.<java.lang.StringBuilder: void <init>()>();

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r84 = r1.<com.android.server.BackupManagerService$FileMetadata: java.lang.String packageName>;

        $r85 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r84);

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is system level with no agent");

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", $r87);

     label29:
        goto label17;

     label30:
        $r98 := @caughtexception;

        $r97 = new java.lang.StringBuilder;

        specialinvoke $r97.<java.lang.StringBuilder: void <init>()>();

        $r91 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Corrupt restore manifest for package ");

        $r90 = r1.<com.android.server.BackupManagerService$FileMetadata: java.lang.String packageName>;

        $r89 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r90);

        $r88 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", $r88);

        return r4;

     label31:
        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Restore manifest from ");

        $r54 = r1.<com.android.server.BackupManagerService$FileMetadata: java.lang.String packageName>;

        $r51 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but allowBackup=false");

        $r50 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BackupManagerService", $r50);

     label32:
        goto label17;

     label33:
        $r95 := @caughtexception;

        r6 = $r95;

        $r94 = virtualinvoke r6.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", $r94);

        return r4;

     label34:
        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing signature on backed-up package ");

        $r42 = r1.<com.android.server.BackupManagerService$FileMetadata: java.lang.String packageName>;

        $r41 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BackupManagerService", $r43);

     label35:
        return r4;

     label36:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected package ");

        $r27 = r1.<com.android.server.BackupManagerService$FileMetadata: java.lang.String packageName>;

        $r28 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but restore manifest claims ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r25 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BackupManagerService", $r25);

     label37:
        return r4;

     label38:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown restore manifest version ");

        $r20 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for package ");

        $r18 = r1.<com.android.server.BackupManagerService$FileMetadata: java.lang.String packageName>;

        $r17 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r22 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BackupManagerService", $r22);

     label39:
        return r4;

        catch java.lang.NumberFormatException from label02 to label03 with label30;
        catch java.lang.IllegalArgumentException from label02 to label03 with label33;
        catch java.lang.NumberFormatException from label04 to label05 with label30;
        catch java.lang.IllegalArgumentException from label04 to label05 with label33;
        catch java.lang.NumberFormatException from label05 to label06 with label30;
        catch java.lang.IllegalArgumentException from label05 to label06 with label33;
        catch java.lang.NumberFormatException from label07 to label08 with label30;
        catch java.lang.IllegalArgumentException from label07 to label08 with label33;
        catch java.lang.NumberFormatException from label10 to label11 with label30;
        catch java.lang.IllegalArgumentException from label10 to label11 with label33;
        catch java.lang.NumberFormatException from label14 to label15 with label30;
        catch java.lang.IllegalArgumentException from label14 to label15 with label33;
        catch android.content.pm.PackageManager$NameNotFoundException from label15 to label16 with label25;
        catch java.lang.NumberFormatException from label15 to label16 with label30;
        catch java.lang.IllegalArgumentException from label15 to label16 with label33;
        catch android.content.pm.PackageManager$NameNotFoundException from label16 to label17 with label25;
        catch java.lang.NumberFormatException from label16 to label17 with label30;
        catch java.lang.IllegalArgumentException from label16 to label17 with label33;
        catch java.lang.NumberFormatException from label17 to label18 with label30;
        catch java.lang.IllegalArgumentException from label17 to label18 with label33;
        catch java.lang.NumberFormatException from label19 to label20 with label30;
        catch java.lang.IllegalArgumentException from label19 to label20 with label33;
        catch android.content.pm.PackageManager$NameNotFoundException from label21 to label22 with label25;
        catch java.lang.NumberFormatException from label21 to label22 with label30;
        catch java.lang.IllegalArgumentException from label21 to label22 with label33;
        catch android.content.pm.PackageManager$NameNotFoundException from label23 to label24 with label25;
        catch java.lang.NumberFormatException from label23 to label24 with label30;
        catch java.lang.IllegalArgumentException from label23 to label24 with label33;
        catch java.lang.NumberFormatException from label26 to label27 with label30;
        catch java.lang.IllegalArgumentException from label26 to label27 with label33;
        catch android.content.pm.PackageManager$NameNotFoundException from label28 to label29 with label25;
        catch java.lang.NumberFormatException from label28 to label29 with label30;
        catch java.lang.IllegalArgumentException from label28 to label29 with label33;
        catch android.content.pm.PackageManager$NameNotFoundException from label31 to label32 with label25;
        catch java.lang.NumberFormatException from label31 to label32 with label30;
        catch java.lang.IllegalArgumentException from label31 to label32 with label33;
        catch java.lang.NumberFormatException from label34 to label35 with label30;
        catch java.lang.IllegalArgumentException from label34 to label35 with label33;
        catch java.lang.NumberFormatException from label36 to label37 with label30;
        catch java.lang.IllegalArgumentException from label36 to label37 with label33;
        catch java.lang.NumberFormatException from label38 to label39 with label30;
        catch java.lang.IllegalArgumentException from label38 to label39 with label33;
    }

    int readExactly(java.io.InputStream, byte[], int, int) throws java.io.IOException
    {
        com.android.server.BackupManagerService$PerformFullRestoreTask r0;
        java.io.InputStream r1;
        byte[] r2;
        int i0, i1, i2, i3, $i4, $i5;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: com.android.server.BackupManagerService$PerformFullRestoreTask;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        if i1 > 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("size must be > 0");

        throw $r3;

     label1:
        i2 = 0;

     label2:
        if i2 >= i1 goto label3;

        $i5 = i0 + i2;

        $i4 = i1 - i2;

        i3 = virtualinvoke r1.<java.io.InputStream: int read(byte[],int,int)>(r2, $i5, $i4);

        if i3 > 0 goto label4;

     label3:
        return i2;

     label4:
        i2 = i2 + i3;

        goto label2;
    }

    java.lang.String readHeaderLine(java.io.InputStream) throws java.io.IOException
    {
        com.android.server.BackupManagerService$PerformFullRestoreTask r0;
        java.io.InputStream r1;
        java.lang.StringBuilder r2, $r3;
        int i0;
        java.lang.String $r4;
        char $c1;

        r0 := @this: com.android.server.BackupManagerService$PerformFullRestoreTask;

        r1 := @parameter0: java.io.InputStream;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>(80);

        r2 = $r3;

     label1:
        i0 = virtualinvoke r1.<java.io.InputStream: int read()>();

        if i0 < 0 goto label2;

        if i0 != 10 goto label3;

     label2:
        $r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label3:
        $c1 = (char) i0;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        goto label1;
    }

    boolean readPaxExtendedHeader(java.io.InputStream, com.android.server.BackupManagerService$FileMetadata) throws java.io.IOException
    {
        com.android.server.BackupManagerService$PerformFullRestoreTask r0;
        java.io.InputStream r1;
        com.android.server.BackupManagerService$FileMetadata r2;
        byte[] r3;
        int i0, i1, i2, i3, i4, i5, i6, $i12, $i13, $i14, $i15, $i16, $i17, $i23, $i25, $i26, $i27, $i28, $i29;
        java.lang.String r4, r5, $r6, $r7, $r8, $r10, $r11, $r19, $r26;
        long $l7, $l9, $l10, $l11, $l18, $l19, $l20, $l21, $l22, $l32, $l33, $l35;
        byte $b8, $b24, $b31;
        boolean $z0, $z1;
        java.lang.StringBuilder $r9, $r12, $r13, $r16, $r17, $r20, $r21, $r22, $r23, $r25;
        java.io.IOException $r14, $r15, $r18, $r24;

        r0 := @this: com.android.server.BackupManagerService$PerformFullRestoreTask;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: com.android.server.BackupManagerService$FileMetadata;

        $l7 = r2.<com.android.server.BackupManagerService$FileMetadata: long size>;

        $b8 = $l7 cmp 32768L;

        if $b8 <= 0 goto label01;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Suspiciously large pax header size ");

        $l33 = r2.<com.android.server.BackupManagerService$FileMetadata: long size>;

        $r21 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l33);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - aborting");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", $r19);

        $r24 = new java.io.IOException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sanity failure: pax header size ");

        $l35 = r2.<com.android.server.BackupManagerService$FileMetadata: long size>;

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l35);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<java.io.IOException: void <init>(java.lang.String)>($r26);

        throw $r24;

     label01:
        $l9 = r2.<com.android.server.BackupManagerService$FileMetadata: long size>;

        $l11 = 511L + $l9;

        $l10 = $l11 >> 9;

        $i13 = (int) $l10;

        $i12 = 512 * $i13;

        r3 = newarray (byte)[$i12];

        $i15 = lengthof r3;

        $i14 = virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: int readExactly(java.io.InputStream,byte[],int,int)>(r1, r3, 0, $i15);

        $i17 = lengthof r3;

        if $i14 >= $i17 goto label02;

        $r18 = new java.io.IOException;

        specialinvoke $r18.<java.io.IOException: void <init>(java.lang.String)>("Unable to read full pax header");

        throw $r18;

     label02:
        $l18 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: long mBytes>;

        $i16 = lengthof r3;

        $l19 = (long) $i16;

        $l21 = $l18 + $l19;

        r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: long mBytes> = $l21;

        $l20 = r2.<com.android.server.BackupManagerService$FileMetadata: long size>;

        i0 = (int) $l20;

        i1 = 0;

     label03:
        i2 = i1 + 1;

     label04:
        if i2 >= i0 goto label05;

        $b31 = r3[i2];

        if $b31 == 32 goto label05;

        i2 = i2 + 1;

        goto label04;

     label05:
        if i2 < i0 goto label06;

        $r14 = new java.io.IOException;

        specialinvoke $r14.<java.io.IOException: void <init>(java.lang.String)>("Invalid pax data");

        throw $r14;

     label06:
        $i23 = i2 - i1;

        $l22 = virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: long extractRadix(byte[],int,int,int)>(r3, i1, $i23, 10);

        i3 = (int) $l22;

        i4 = i2 + 1;

        $i25 = i1 + i3;

        i5 = -1 + $i25;

        i6 = i4 + 1;

     label07:
        $b24 = r3[i6];

        if $b24 == 61 goto label08;

        if i6 > i5 goto label08;

        i6 = i6 + 1;

        goto label07;

     label08:
        if i6 <= i5 goto label09;

        $r15 = new java.io.IOException;

        specialinvoke $r15.<java.io.IOException: void <init>(java.lang.String)>("Invalid pax declaration");

        throw $r15;

     label09:
        $r7 = new java.lang.String;

        $i27 = i6 - i4;

        specialinvoke $r7.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r3, i4, $i27, "UTF-8");

        r4 = $r7;

        $r6 = new java.lang.String;

        $i29 = i6 + 1;

        $i26 = i5 - i6;

        $i28 = -1 + $i26;

        specialinvoke $r6.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r3, $i29, $i28, "UTF-8");

        r5 = $r6;

        $r8 = "path";

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label11;

        r2.<com.android.server.BackupManagerService$FileMetadata: java.lang.String path> = r5;

     label10:
        i1 = i1 + i3;

        if i1 < i0 goto label03;

        return 1;

     label11:
        $r10 = "size";

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z1 == 0 goto label12;

        $l32 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r5);

        r2.<com.android.server.BackupManagerService$FileMetadata: long size> = $l32;

        goto label10;

     label12:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unhandled pax key: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r11 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BackupManagerService", $r11);

        goto label10;
    }

    boolean readTarHeader(java.io.InputStream, byte[]) throws java.io.IOException
    {
        com.android.server.BackupManagerService$PerformFullRestoreTask r0;
        java.io.InputStream r1;
        byte[] r2;
        int i0;
        long $l1, $l2;
        java.io.IOException $r3;

        r0 := @this: com.android.server.BackupManagerService$PerformFullRestoreTask;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: byte[];

        i0 = virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: int readExactly(java.io.InputStream,byte[],int,int)>(r1, r2, 0, 512);

        if i0 != 0 goto label1;

        return 0;

     label1:
        if i0 >= 512 goto label2;

        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("Unable to read full block header");

        throw $r3;

     label2:
        $l1 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: long mBytes>;

        $l2 = 512L + $l1;

        r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: long mBytes> = $l2;

        return 1;
    }

    com.android.server.BackupManagerService$FileMetadata readTarHeaders(java.io.InputStream) throws java.io.IOException
    {
        com.android.server.BackupManagerService$PerformFullRestoreTask r0;
        java.io.InputStream r1;
        byte[] r2;
        boolean z0, z1, $z2, $z3, $z4;
        com.android.server.BackupManagerService$FileMetadata r3, r4, $r7;
        java.io.IOException r5, $r27, $r39, $r55, $r59, $r74, $r78;
        java.lang.String r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r28, $r29, $r31, $r34, $r36, $r37, $r38, $r43, $r45, $r46, $r49, $r51, $r53, $r58, $r61, $r65, $r67, $r68, $r71, $r75, $r79;
        byte b0, $b8;
        int i1, i2, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i19;
        long $l3, $l4, $l5, $l6;
        java.lang.StringBuilder $r30, $r32, $r33, $r35, $r40, $r41, $r42, $r44, $r47, $r48, $r50, $r52, $r54, $r56, $r57, $r60, $r62, $r63, $r64, $r66, $r69, $r70, $r72, $r73, $r76, $r77, $r80;

        r0 := @this: com.android.server.BackupManagerService$PerformFullRestoreTask;

        r1 := @parameter0: java.io.InputStream;

        r2 = newarray (byte)[512];

        z0 = virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: boolean readTarHeader(java.io.InputStream,byte[])>(r1, r2);

        r3 = null;

        if z0 == 0 goto label34;

     label01:
        $r7 = new com.android.server.BackupManagerService$FileMetadata;

        specialinvoke $r7.<com.android.server.BackupManagerService$FileMetadata: void <init>()>();

        r4 = $r7;

     label02:
        $l3 = virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: long extractRadix(byte[],int,int,int)>(r2, 124, 12, 8);

        r4.<com.android.server.BackupManagerService$FileMetadata: long size> = $l3;

        $l5 = virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: long extractRadix(byte[],int,int,int)>(r2, 136, 12, 8);

        r4.<com.android.server.BackupManagerService$FileMetadata: long mtime> = $l5;

        $l4 = virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: long extractRadix(byte[],int,int,int)>(r2, 100, 8, 8);

        r4.<com.android.server.BackupManagerService$FileMetadata: long mode> = $l4;

        $r8 = virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.lang.String extractString(byte[],int,int)>(r2, 345, 155);

        r4.<com.android.server.BackupManagerService$FileMetadata: java.lang.String path> = $r8;

        r6 = virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.lang.String extractString(byte[],int,int)>(r2, 0, 100);

        $i7 = virtualinvoke r6.<java.lang.String: int length()>();

        if $i7 <= 0 goto label04;

        $r58 = r4.<com.android.server.BackupManagerService$FileMetadata: java.lang.String path>;

        $i19 = virtualinvoke $r58.<java.lang.String: int length()>();

        if $i19 <= 0 goto label03;

        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        $r65 = r4.<com.android.server.BackupManagerService$FileMetadata: java.lang.String path>;

        $r77 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

        $r76 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $r75 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

        r4.<com.android.server.BackupManagerService$FileMetadata: java.lang.String path> = $r75;

     label03:
        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        $r68 = r4.<com.android.server.BackupManagerService$FileMetadata: java.lang.String path>;

        $r69 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r68);

        $r66 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        r4.<com.android.server.BackupManagerService$FileMetadata: java.lang.String path> = $r67;

     label04:
        b0 = r2[156];

     label05:
        if b0 != 120 goto label32;

     label06:
        z1 = virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: boolean readPaxExtendedHeader(java.io.InputStream,com.android.server.BackupManagerService$FileMetadata)>(r1, r4);

     label07:
        if z1 == 0 goto label09;

     label08:
        z1 = virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: boolean readTarHeader(java.io.InputStream,byte[])>(r1, r2);

     label09:
        if z1 != 0 goto label13;

     label10:
        $r59 = new java.io.IOException;

        specialinvoke $r59.<java.io.IOException: void <init>(java.lang.String)>("Bad or missing pax header");

        throw $r59;

     label11:
        $r78 := @caughtexception;

        r5 = $r78;

     label12:
        $r73 = new java.lang.StringBuilder;

        specialinvoke $r73.<java.lang.StringBuilder: void <init>()>();

        $r72 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parse error in header: ");

        $r71 = virtualinvoke r5.<java.io.IOException: java.lang.String getMessage()>();

        $r80 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);

        $r79 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BackupManagerService", $r79);

        specialinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: void HEXLOG(byte[])>(r2);

        throw r5;

     label13:
        b0 = r2[156];

     label14:
        goto label32;

     label15:
        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown tar entity type: ");

        $r54 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0);

        $r53 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BackupManagerService", $r53);

        $r55 = new java.io.IOException;

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown entity type ");

        $r60 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r55.<java.io.IOException: void <init>(java.lang.String)>($r61);

        throw $r55;

     label16:
        r4.<com.android.server.BackupManagerService$FileMetadata: int type> = 1;

     label17:
        $r10 = "shared/";

        $r11 = r4.<com.android.server.BackupManagerService$FileMetadata: java.lang.String path>;

        $r9 = "shared/";

        $i9 = virtualinvoke $r9.<java.lang.String: int length()>();

        $z2 = virtualinvoke $r10.<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>(0, $r11, 0, $i9);

        if $z2 == 0 goto label23;

        $r45 = r4.<com.android.server.BackupManagerService$FileMetadata: java.lang.String path>;

        $r37 = "shared/";

        $i14 = virtualinvoke $r37.<java.lang.String: int length()>();

        $r46 = virtualinvoke $r45.<java.lang.String: java.lang.String substring(int)>($i14);

        r4.<com.android.server.BackupManagerService$FileMetadata: java.lang.String path> = $r46;

        r4.<com.android.server.BackupManagerService$FileMetadata: java.lang.String packageName> = "com.android.sharedstoragebackup";

        r4.<com.android.server.BackupManagerService$FileMetadata: java.lang.String domain> = "shared";

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File in shared storage: ");

        $r43 = r4.<com.android.server.BackupManagerService$FileMetadata: java.lang.String path>;

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r51 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BackupManagerService", $r51);

     label18:
        goto label33;

     label19:
        r4.<com.android.server.BackupManagerService$FileMetadata: int type> = 2;

        $l6 = r4.<com.android.server.BackupManagerService$FileMetadata: long size>;

        $b8 = $l6 cmp 0L;

        if $b8 == 0 goto label17;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", "Directory entry with nonzero size in header");

        r4.<com.android.server.BackupManagerService$FileMetadata: long size> = 0L;

     label20:
        goto label17;

     label21:
        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Saw type=0 in tar header block, info=");

        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r49 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", $r49);

     label22:
        return null;

     label23:
        $r14 = "apps/";

        $r12 = r4.<com.android.server.BackupManagerService$FileMetadata: java.lang.String path>;

        $r13 = "apps/";

        $i10 = virtualinvoke $r13.<java.lang.String: int length()>();

        $z3 = virtualinvoke $r14.<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>(0, $r12, 0, $i10);

        if $z3 == 0 goto label33;

        $r18 = r4.<com.android.server.BackupManagerService$FileMetadata: java.lang.String path>;

        $r15 = "apps/";

        $i11 = virtualinvoke $r15.<java.lang.String: int length()>();

        $r16 = virtualinvoke $r18.<java.lang.String: java.lang.String substring(int)>($i11);

        r4.<com.android.server.BackupManagerService$FileMetadata: java.lang.String path> = $r16;

        $r17 = r4.<com.android.server.BackupManagerService$FileMetadata: java.lang.String path>;

        i1 = virtualinvoke $r17.<java.lang.String: int indexOf(int)>(47);

     label24:
        if i1 >= 0 goto label26;

     label25:
        $r39 = new java.io.IOException;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal semantic path in ");

        $r34 = r4.<com.android.server.BackupManagerService$FileMetadata: java.lang.String path>;

        $r35 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r39.<java.io.IOException: void <init>(java.lang.String)>($r36);

        throw $r39;

     label26:
        $r20 = r4.<com.android.server.BackupManagerService$FileMetadata: java.lang.String path>;

        $r19 = virtualinvoke $r20.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

        r4.<com.android.server.BackupManagerService$FileMetadata: java.lang.String packageName> = $r19;

        $r23 = r4.<com.android.server.BackupManagerService$FileMetadata: java.lang.String path>;

        $i12 = i1 + 1;

        $r22 = virtualinvoke $r23.<java.lang.String: java.lang.String substring(int)>($i12);

        r4.<com.android.server.BackupManagerService$FileMetadata: java.lang.String path> = $r22;

        $r21 = r4.<com.android.server.BackupManagerService$FileMetadata: java.lang.String path>;

        $z4 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>("_manifest");

        if $z4 != 0 goto label33;

        $r26 = r4.<com.android.server.BackupManagerService$FileMetadata: java.lang.String path>;

        i2 = virtualinvoke $r26.<java.lang.String: int indexOf(int)>(47);

     label27:
        if i2 >= 0 goto label29;

     label28:
        $r27 = new java.io.IOException;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal semantic path in non-manifest ");

        $r31 = r4.<com.android.server.BackupManagerService$FileMetadata: java.lang.String path>;

        $r30 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r38 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.io.IOException: void <init>(java.lang.String)>($r38);

        throw $r27;

     label29:
        $r25 = r4.<com.android.server.BackupManagerService$FileMetadata: java.lang.String path>;

        $r24 = virtualinvoke $r25.<java.lang.String: java.lang.String substring(int,int)>(0, i2);

        r4.<com.android.server.BackupManagerService$FileMetadata: java.lang.String domain> = $r24;

        $r29 = r4.<com.android.server.BackupManagerService$FileMetadata: java.lang.String path>;

        $i13 = i2 + 1;

        $r28 = virtualinvoke $r29.<java.lang.String: java.lang.String substring(int)>($i13);

        r4.<com.android.server.BackupManagerService$FileMetadata: java.lang.String path> = $r28;

     label30:
        goto label33;

     label31:
        $r74 := @caughtexception;

        r5 = $r74;

        goto label12;

     label32:
        lookupswitch(b0)
        {
            case 0: goto label21;
            case 48: goto label16;
            case 53: goto label19;
            default: goto label15;
        };

     label33:
        r3 = r4;

     label34:
        return r3;

        catch java.io.IOException from label01 to label02 with label31;
        catch java.io.IOException from label02 to label03 with label11;
        catch java.io.IOException from label03 to label04 with label11;
        catch java.io.IOException from label04 to label05 with label11;
        catch java.io.IOException from label06 to label07 with label11;
        catch java.io.IOException from label08 to label09 with label11;
        catch java.io.IOException from label10 to label11 with label11;
        catch java.io.IOException from label13 to label14 with label11;
        catch java.io.IOException from label15 to label16 with label11;
        catch java.io.IOException from label16 to label17 with label11;
        catch java.io.IOException from label17 to label18 with label11;
        catch java.io.IOException from label19 to label20 with label11;
        catch java.io.IOException from label21 to label22 with label11;
        catch java.io.IOException from label23 to label24 with label11;
        catch java.io.IOException from label25 to label26 with label11;
        catch java.io.IOException from label26 to label27 with label11;
        catch java.io.IOException from label28 to label29 with label11;
        catch java.io.IOException from label29 to label30 with label11;
    }

    boolean restoreOneFile(java.io.InputStream, byte[])
    {
        com.android.server.BackupManagerService$PerformFullRestoreTask r0;
        java.io.InputStream r1;
        byte[] r2;
        java.io.IOException r3, r9, $r125, $r127, $r128, $r135;
        com.android.server.BackupManagerService$FileMetadata r4;
        java.lang.String r5, r16, $r17, $r21, $r28, $r31, $r32, $r35, $r39, $r40, $r55, $r56, $r71, $r73, $r74, $r77, $r86, $r94, $r99, $r102, $r103, $r106, $r108, $r113;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z12, $z13;
        com.android.server.BackupManagerService$RestorePolicy r6, r18, $r23, $r44, $r91, $r118, $r121, $r131;
        long l0, l2, l3, $l10, $l11, $l16, $l17, $l18, $l23, $l25, $l26, $l28, $l31, $l32, $l33, $l34, $l36, $l38, $l39, $l41, $l50, $l55;
        int i1, i4, i5, i6, $i8, $i9, $i13, $i20, $i24, $i27, $i40;
        java.io.FileOutputStream r8, $r43;
        android.os.ParcelFileDescriptor r11, $r38, $r52, $r75;
        android.app.IBackupAgent r12, $r48, $r85, $r97, $r98, $r105, $r133;
        java.util.HashMap r15, $r20, $r24, $r45, $r92, $r114, $r117, $r119, $r122, $r130, $r134;
        java.lang.Object $r19, $r120;
        int[] $r22;
        byte $b12, $b15, $b19, $b21, $b29, $b35;
        com.android.server.BackupManagerService $r26, $r30, $r33, $r49, $r50, $r57, $r81, $r82, $r104;
        java.lang.StringBuilder $r27, $r29, $r36, $r54, $r62, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r72, $r84, $r87, $r88, $r93, $r95, $r96, $r100, $r101, $r110, $r111;
        android.os.ParcelFileDescriptor[] $r34, $r53, $r58, $r61;
        android.content.pm.ApplicationInfo $r37, $r47, $r79, $r83, $r90, $r109, $r132;
        android.app.backup.IBackupManager $r41, $r59;
        com.android.server.BackupManagerService$BackupHandler $r46;
        java.io.FileDescriptor $r51;
        java.lang.Thread $r60;
        com.android.server.BackupManagerService$PerformFullRestoreTask$RestoreFileRunnable $r63;
        com.android.server.BackupManagerService$FullBackupObbConnection $r76;
        java.util.HashSet $r78, $r107;
        android.content.pm.PackageManager $r80;
        android.os.RemoteException $r124;
        android.content.pm.PackageManager$NameNotFoundException $r126;

        r0 := @this: com.android.server.BackupManagerService$PerformFullRestoreTask;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: byte[];

     label01:
        r4 = virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService$FileMetadata readTarHeaders(java.io.InputStream)>(r1);

     label02:
        if r4 == null goto label83;

     label03:
        r5 = r4.<com.android.server.BackupManagerService$FileMetadata: java.lang.String packageName>;

        $r17 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.lang.String mAgentPackage>;

        $z4 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z4 != 0 goto label05;

        $r134 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.util.HashMap mPackagePolicies>;

        $z13 = virtualinvoke $r134.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r5);

        if $z13 != 0 goto label04;

        $r130 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.util.HashMap mPackagePolicies>;

        $r131 = <com.android.server.BackupManagerService$RestorePolicy: com.android.server.BackupManagerService$RestorePolicy IGNORE>;

        virtualinvoke $r130.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r131);

     label04:
        $r133 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.app.IBackupAgent mAgent>;

        if $r133 == null goto label05;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", "Saw new package; tearing down old one");

        virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: void tearDownPipes()>();

        $r132 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.content.pm.ApplicationInfo mTargetApp>;

        virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: void tearDownAgent(android.content.pm.ApplicationInfo)>($r132);

        r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.content.pm.ApplicationInfo mTargetApp> = null;

        r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.lang.String mAgentPackage> = null;

     label05:
        $r21 = r4.<com.android.server.BackupManagerService$FileMetadata: java.lang.String path>;

        $z5 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>("_manifest");

        if $z5 == 0 goto label07;

        $r117 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.util.HashMap mPackagePolicies>;

        $r118 = virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService$RestorePolicy readAppManifest(com.android.server.BackupManagerService$FileMetadata,java.io.InputStream)>(r4, r1);

        virtualinvoke $r117.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r118);

        $r114 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.util.HashMap mPackageInstallers>;

        $r113 = r4.<com.android.server.BackupManagerService$FileMetadata: java.lang.String installerPackageName>;

        virtualinvoke $r114.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r113);

        $l55 = r4.<com.android.server.BackupManagerService$FileMetadata: long size>;

        virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: void skipTarPadding(long,java.io.InputStream)>($l55, r1);

        virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: void sendOnRestorePackage(java.lang.String)>(r5);

     label06:
        goto label83;

     label07:
        z0 = 1;

     label08:
        $r20 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.util.HashMap mPackagePolicies>;

        $r19 = virtualinvoke $r20.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r5);

        r6 = (com.android.server.BackupManagerService$RestorePolicy) $r19;

        $r22 = <com.android.server.BackupManagerService$3: int[] $SwitchMap$com$android$server$BackupManagerService$RestorePolicy>;

        $i9 = virtualinvoke r6.<com.android.server.BackupManagerService$RestorePolicy: int ordinal()>();

        $i8 = $r22[$i9];

        tableswitch($i8)
        {
            case 1: goto label86;
            case 2: goto label47;
            case 3: goto label56;
            default: goto label09;
        };

     label09:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BackupManagerService", "Invalid policy from manifest");

     label10:
        z0 = 0;

     label11:
        $r24 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.util.HashMap mPackagePolicies>;

        $r23 = <com.android.server.BackupManagerService$RestorePolicy: com.android.server.BackupManagerService$RestorePolicy IGNORE>;

        virtualinvoke $r24.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r23);

     label12:
        if z0 == 0 goto label14;

     label13:
        $r105 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.app.IBackupAgent mAgent>;

        if $r105 == null goto label14;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BackupManagerService", "Reusing existing agent instance");

     label14:
        if z0 == 0 goto label22;

     label15:
        $r85 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.app.IBackupAgent mAgent>;

        if $r85 != null goto label22;

        $r84 = new java.lang.StringBuilder;

        specialinvoke $r84.<java.lang.StringBuilder: void <init>()>();

        $r88 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Need to launch agent for ");

        $r87 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r86 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", $r86);

     label16:
        $r81 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService this$0>;

        $r80 = staticinvoke <com.android.server.BackupManagerService: android.content.pm.PackageManager access$600(com.android.server.BackupManagerService)>($r81);

        $r79 = virtualinvoke $r80.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r5, 0);

        r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.content.pm.ApplicationInfo mTargetApp> = $r79;

        $r78 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.util.HashSet mClearedPackages>;

        $z9 = virtualinvoke $r78.<java.util.HashSet: boolean contains(java.lang.Object)>(r5);

        if $z9 != 0 goto label60;

        $r90 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.content.pm.ApplicationInfo mTargetApp>;

        $r94 = $r90.<android.content.pm.ApplicationInfo: java.lang.String backupAgentName>;

        if $r94 != null goto label58;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", "Clearing app data preparatory to full restore");

        $r104 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService this$0>;

        virtualinvoke $r104.<com.android.server.BackupManagerService: void clearApplicationDataSynchronous(java.lang.String)>(r5);

     label17:
        $r107 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.util.HashSet mClearedPackages>;

        virtualinvoke $r107.<java.util.HashSet: boolean add(java.lang.Object)>(r5);

     label18:
        virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: void setUpPipes()>();

        $r82 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService this$0>;

        $r83 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.content.pm.ApplicationInfo mTargetApp>;

        $r97 = virtualinvoke $r82.<com.android.server.BackupManagerService: android.app.IBackupAgent bindToAgentSynchronous(android.content.pm.ApplicationInfo,int)>($r83, 3);

        r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.app.IBackupAgent mAgent> = $r97;

        r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.lang.String mAgentPackage> = r5;

     label19:
        $r98 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.app.IBackupAgent mAgent>;

        if $r98 != null goto label22;

        $r96 = new java.lang.StringBuilder;

        specialinvoke $r96.<java.lang.StringBuilder: void <init>()>();

        $r100 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create agent for ");

        $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r99 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", $r99);

     label20:
        z0 = 0;

     label21:
        virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: void tearDownPipes()>();

        $r92 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.util.HashMap mPackagePolicies>;

        $r91 = <com.android.server.BackupManagerService$RestorePolicy: com.android.server.BackupManagerService$RestorePolicy IGNORE>;

        virtualinvoke $r92.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r91);

     label22:
        if z0 == 0 goto label25;

     label23:
        $r77 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.lang.String mAgentPackage>;

        $z8 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>($r77);

        if $z8 != 0 goto label25;

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Restoring data for ");

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but agent is for ");

        $r71 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.lang.String mAgentPackage>;

        $r72 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BackupManagerService", $r73);

     label24:
        z0 = 0;

     label25:
        if z0 == 0 goto label39;

        z1 = 1;

     label26:
        l3 = r4.<com.android.server.BackupManagerService$FileMetadata: long size>;

        $r26 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService this$0>;

        i4 = virtualinvoke $r26.<com.android.server.BackupManagerService: int generateToken()>();

     label27:
        $r30 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService this$0>;

        virtualinvoke $r30.<com.android.server.BackupManagerService: void prepareOperationTimeout(int,long,com.android.server.BackupManagerService$BackupRestoreTask)>(i4, 300000L, null);

        $r31 = r4.<com.android.server.BackupManagerService$FileMetadata: java.lang.String domain>;

        $z6 = virtualinvoke $r31.<java.lang.String: boolean equals(java.lang.Object)>("obb");

        if $z6 == 0 goto label63;

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        $r64 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Restoring OBB file for ");

        $r66 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r65 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r55 = r4.<com.android.server.BackupManagerService$FileMetadata: java.lang.String path>;

        $r54 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);

        $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", $r56);

        $r76 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService$FullBackupObbConnection mObbConnection>;

        $r58 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.os.ParcelFileDescriptor[] mPipes>;

        $r75 = $r58[0];

        $l41 = r4.<com.android.server.BackupManagerService$FileMetadata: long size>;

        $i40 = r4.<com.android.server.BackupManagerService$FileMetadata: int type>;

        $r74 = r4.<com.android.server.BackupManagerService$FileMetadata: java.lang.String path>;

        $l39 = r4.<com.android.server.BackupManagerService$FileMetadata: long mode>;

        $l38 = r4.<com.android.server.BackupManagerService$FileMetadata: long mtime>;

        $r57 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService this$0>;

        $r59 = $r57.<com.android.server.BackupManagerService: android.app.backup.IBackupManager mBackupManagerBinder>;

        virtualinvoke $r76.<com.android.server.BackupManagerService$FullBackupObbConnection: void restoreObbFile(java.lang.String,android.os.ParcelFileDescriptor,long,int,java.lang.String,long,long,int,android.app.backup.IBackupManager)>(r5, $r75, $l41, $i40, $r74, $l39, $l38, i4, $r59);

     label28:
        if z0 == 0 goto label37;

        z2 = 1;

     label29:
        $r43 = new java.io.FileOutputStream;

        $r53 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.os.ParcelFileDescriptor[] mPipes>;

        $r52 = $r53[1];

        $r51 = virtualinvoke $r52.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke $r43.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>($r51);

        r8 = $r43;

     label30:
        $b29 = l3 cmp 0L;

        if $b29 <= 0 goto label36;

     label31:
        $i27 = lengthof r2;

        $l36 = (long) $i27;

        $b35 = l3 cmp $l36;

        if $b35 <= 0 goto label73;

        i5 = lengthof r2;

     label32:
        i6 = virtualinvoke r1.<java.io.InputStream: int read(byte[],int,int)>(r2, 0, i5);

     label33:
        if i6 < 0 goto label84;

     label34:
        $l32 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: long mBytes>;

        $l33 = (long) i6;

        $l31 = $l32 + $l33;

        r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: long mBytes> = $l31;

     label35:
        goto label84;

     label36:
        $l28 = r4.<com.android.server.BackupManagerService$FileMetadata: long size>;

        virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: void skipTarPadding(long,java.io.InputStream)>($l28, r1);

        $r50 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService this$0>;

        z1 = virtualinvoke $r50.<com.android.server.BackupManagerService: boolean waitUntilOperationComplete(int)>(i4);

     label37:
        if z1 != 0 goto label39;

     label38:
        $r49 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService this$0>;

        $r46 = $r49.<com.android.server.BackupManagerService: com.android.server.BackupManagerService$BackupHandler mBackupHandler>;

        virtualinvoke $r46.<com.android.server.BackupManagerService$BackupHandler: void removeMessages(int)>(7);

        virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: void tearDownPipes()>();

        $r47 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.content.pm.ApplicationInfo mTargetApp>;

        virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: void tearDownAgent(android.content.pm.ApplicationInfo)>($r47);

        r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.app.IBackupAgent mAgent> = null;

        $r45 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.util.HashMap mPackagePolicies>;

        $r44 = <com.android.server.BackupManagerService$RestorePolicy: com.android.server.BackupManagerService$RestorePolicy IGNORE>;

        virtualinvoke $r45.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r44);

     label39:
        if z0 != 0 goto label83;

     label40:
        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", "[discarding file content]");

        $l10 = r4.<com.android.server.BackupManagerService$FileMetadata: long size>;

        $l11 = 511L + $l10;

        l0 = -512L & $l11;

     label41:
        $b12 = l0 cmp 0L;

        if $b12 <= 0 goto label83;

     label42:
        $i13 = lengthof r2;

        $l18 = (long) $i13;

        $b19 = l0 cmp $l18;

        if $b19 <= 0 goto label80;

        i1 = lengthof r2;

     label43:
        $i20 = virtualinvoke r1.<java.io.InputStream: int read(byte[],int,int)>(r2, 0, i1);

        l2 = (long) $i20;

     label44:
        $b21 = l2 cmp 0L;

        if $b21 < 0 goto label85;

     label45:
        $l16 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: long mBytes>;

        $l17 = l2 + $l16;

        r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: long mBytes> = $l17;

     label46:
        goto label85;

     label47:
        $r103 = r4.<com.android.server.BackupManagerService$FileMetadata: java.lang.String domain>;

        $z12 = virtualinvoke $r103.<java.lang.String: boolean equals(java.lang.Object)>("a");

        if $z12 == 0 goto label54;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", "APK file; installing");

        $r119 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.util.HashMap mPackageInstallers>;

        $r120 = virtualinvoke $r119.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r5);

        r16 = (java.lang.String) $r120;

        z3 = virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: boolean installApk(com.android.server.BackupManagerService$FileMetadata,java.lang.String,java.io.InputStream)>(r4, r16, r1);

        r15 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.util.HashMap mPackagePolicies>;

     label48:
        if z3 == 0 goto label52;

     label49:
        r18 = <com.android.server.BackupManagerService$RestorePolicy: com.android.server.BackupManagerService$RestorePolicy ACCEPT>;

     label50:
        virtualinvoke r15.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r18);

        $l50 = r4.<com.android.server.BackupManagerService$FileMetadata: long size>;

        virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: void skipTarPadding(long,java.io.InputStream)>($l50, r1);

     label51:
        return 1;

     label52:
        r18 = <com.android.server.BackupManagerService$RestorePolicy: com.android.server.BackupManagerService$RestorePolicy IGNORE>;

     label53:
        goto label50;

     label54:
        $r122 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.util.HashMap mPackagePolicies>;

        $r121 = <com.android.server.BackupManagerService$RestorePolicy: com.android.server.BackupManagerService$RestorePolicy IGNORE>;

        virtualinvoke $r122.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r121);

     label55:
        z0 = 0;

        goto label12;

     label56:
        $r102 = r4.<com.android.server.BackupManagerService$FileMetadata: java.lang.String domain>;

        $z10 = virtualinvoke $r102.<java.lang.String: boolean equals(java.lang.Object)>("a");

        if $z10 == 0 goto label12;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", "apk present but ACCEPT");

     label57:
        z0 = 0;

        goto label12;

     label58:
        $r95 = new java.lang.StringBuilder;

        specialinvoke $r95.<java.lang.StringBuilder: void <init>()>();

        $r93 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("backup agent (");

        $r109 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.content.pm.ApplicationInfo mTargetApp>;

        $r108 = $r109.<android.content.pm.ApplicationInfo: java.lang.String backupAgentName>;

        $r111 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r108);

        $r110 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") => no clear");

        $r106 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", $r106);

     label59:
        goto label17;

     label60:
        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", "We\'ve initialized this app already; no clear required");

     label61:
        goto label18;

     label62:
        $r126 := @caughtexception;

        goto label19;

     label63:
        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invoking agent to restore file ");

        $r28 = r4.<com.android.server.BackupManagerService$FileMetadata: java.lang.String path>;

        $r36 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", $r35);

        $r37 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.content.pm.ApplicationInfo mTargetApp>;

        $r32 = $r37.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $z7 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>("system");

        if $z7 == 0 goto label68;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", "system process agent - spinning a thread");

        r12 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.app.IBackupAgent mAgent>;

        $r61 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.os.ParcelFileDescriptor[] mPipes>;

        r11 = $r61[0];

        $r60 = new java.lang.Thread;

        $r63 = new com.android.server.BackupManagerService$PerformFullRestoreTask$RestoreFileRunnable;

        specialinvoke $r63.<com.android.server.BackupManagerService$PerformFullRestoreTask$RestoreFileRunnable: void <init>(com.android.server.BackupManagerService$PerformFullRestoreTask,android.app.IBackupAgent,com.android.server.BackupManagerService$FileMetadata,android.os.ParcelFileDescriptor,int)>(r0, r12, r4, r11, i4);

        specialinvoke $r60.<java.lang.Thread: void <init>(java.lang.Runnable)>($r63);

        virtualinvoke $r60.<java.lang.Thread: void start()>();

     label64:
        goto label28;

     label65:
        $r128 := @caughtexception;

     label66:
        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", "Couldn\'t establish restore");

     label67:
        z1 = 0;

        z0 = 0;

        goto label28;

     label68:
        $r48 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.app.IBackupAgent mAgent>;

        $r34 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.os.ParcelFileDescriptor[] mPipes>;

        $r38 = $r34[0];

        $l23 = r4.<com.android.server.BackupManagerService$FileMetadata: long size>;

        $i24 = r4.<com.android.server.BackupManagerService$FileMetadata: int type>;

        $r39 = r4.<com.android.server.BackupManagerService$FileMetadata: java.lang.String domain>;

        $r40 = r4.<com.android.server.BackupManagerService$FileMetadata: java.lang.String path>;

        $l25 = r4.<com.android.server.BackupManagerService$FileMetadata: long mode>;

        $l26 = r4.<com.android.server.BackupManagerService$FileMetadata: long mtime>;

        $r33 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService this$0>;

        $r41 = $r33.<com.android.server.BackupManagerService: android.app.backup.IBackupManager mBackupManagerBinder>;

        interfaceinvoke $r48.<android.app.IBackupAgent: void doRestoreFile(android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager)>($r38, $l23, $i24, $r39, $r40, $l25, $l26, i4, $r41);

     label69:
        goto label28;

     label70:
        $r124 := @caughtexception;

     label71:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BackupManagerService", "Agent crashed during full restore");

     label72:
        z1 = 0;

        z0 = 0;

        goto label28;

     label73:
        i5 = (int) l3;

        goto label32;

     label74:
        $l34 = (long) i6;

        l3 = l3 - $l34;

        if z2 == 0 goto label30;

     label75:
        virtualinvoke r8.<java.io.FileOutputStream: void write(byte[],int,int)>(r2, 0, i6);

     label76:
        goto label30;

     label77:
        $r135 := @caughtexception;

        r9 = $r135;

     label78:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BackupManagerService", "Failed to write to restore pipe", r9);

     label79:
        z2 = 0;

        goto label30;

     label80:
        i1 = (int) l0;

        goto label43;

     label81:
        $r125 := @caughtexception;

        r3 = $r125;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("BackupManagerService", "io exception on restore socket read", r3);

        r4 = null;

        goto label83;

     label82:
        return 0;

     label83:
        if r4 == null goto label82;

        return 1;

     label84:
        if i6 > 0 goto label74;

        goto label36;

     label85:
        $b15 = l2 cmp 0L;

        if $b15 <= 0 goto label83;

        l0 = l0 - l2;

        goto label41;

     label86:
        z0 = 0;

        goto label12;

     label87:
        $r127 := @caughtexception;

        goto label19;

        catch java.io.IOException from label01 to label02 with label81;
        catch java.io.IOException from label03 to label04 with label81;
        catch java.io.IOException from label04 to label05 with label81;
        catch java.io.IOException from label05 to label06 with label81;
        catch java.io.IOException from label08 to label09 with label81;
        catch java.io.IOException from label09 to label10 with label81;
        catch java.io.IOException from label11 to label12 with label81;
        catch java.io.IOException from label13 to label14 with label81;
        catch java.io.IOException from label15 to label16 with label81;
        catch java.io.IOException from label16 to label17 with label87;
        catch android.content.pm.PackageManager$NameNotFoundException from label16 to label17 with label62;
        catch java.io.IOException from label17 to label18 with label87;
        catch android.content.pm.PackageManager$NameNotFoundException from label17 to label18 with label62;
        catch java.io.IOException from label18 to label19 with label87;
        catch android.content.pm.PackageManager$NameNotFoundException from label18 to label19 with label62;
        catch java.io.IOException from label19 to label20 with label81;
        catch java.io.IOException from label21 to label22 with label81;
        catch java.io.IOException from label23 to label24 with label81;
        catch java.io.IOException from label26 to label27 with label81;
        catch java.io.IOException from label27 to label28 with label65;
        catch android.os.RemoteException from label27 to label28 with label70;
        catch java.io.IOException from label29 to label30 with label81;
        catch java.io.IOException from label31 to label32 with label81;
        catch java.io.IOException from label32 to label33 with label81;
        catch java.io.IOException from label34 to label35 with label81;
        catch java.io.IOException from label36 to label37 with label81;
        catch java.io.IOException from label38 to label39 with label81;
        catch java.io.IOException from label40 to label41 with label81;
        catch java.io.IOException from label42 to label43 with label81;
        catch java.io.IOException from label43 to label44 with label81;
        catch java.io.IOException from label45 to label46 with label81;
        catch java.io.IOException from label47 to label48 with label81;
        catch java.io.IOException from label49 to label50 with label81;
        catch java.io.IOException from label50 to label51 with label81;
        catch java.io.IOException from label52 to label53 with label81;
        catch java.io.IOException from label54 to label55 with label81;
        catch java.io.IOException from label56 to label57 with label81;
        catch java.io.IOException from label58 to label59 with label87;
        catch android.content.pm.PackageManager$NameNotFoundException from label58 to label59 with label62;
        catch java.io.IOException from label60 to label61 with label87;
        catch android.content.pm.PackageManager$NameNotFoundException from label60 to label61 with label62;
        catch java.io.IOException from label63 to label64 with label65;
        catch android.os.RemoteException from label63 to label64 with label70;
        catch java.io.IOException from label66 to label67 with label81;
        catch java.io.IOException from label68 to label69 with label65;
        catch android.os.RemoteException from label68 to label69 with label70;
        catch java.io.IOException from label71 to label72 with label81;
        catch java.io.IOException from label75 to label76 with label77;
        catch java.io.IOException from label78 to label79 with label81;
    }

    public void run()
    {
        com.android.server.BackupManagerService$PerformFullRestoreTask r0;
        java.io.FileInputStream r1, r15, $r39;
        java.io.DataInputStream r2, r18, $r46;
        java.lang.Throwable r3, r6, r8, r10, r12, r21, r25, r28, r29, r33, r37, $r93, $r96, $r99, $r102, $r103, $r108, $r115, $r117, $r118, $r119, $r121, $r124, $r125;
        java.io.IOException r4, r9, r22, r27, r35, $r97, $r98, $r116, $r120, $r122, $r123, $r126, $r127;
        java.lang.Object r5, r11, r20, r26, r34;
        java.util.concurrent.atomic.AtomicBoolean r7, r13, r24, r30, r38, $r57, $r58, $r68, $r69, $r77, $r78, $r89, $r90, $r106, $r107;
        android.os.PowerManager$WakeLock r14, $r56, $r66, $r104;
        byte[] r16, r19, $r45;
        java.io.InputStream r17, r23;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7;
        int i0, $i1, $i2, $i3;
        java.lang.String r31, r32, $r42, $r43, $r47, $r48, $r70, $r74, $r75, $r76;
        com.android.server.BackupManagerService$FullBackupObbConnection $r36, $r59, $r67, $r79, $r101, $r105;
        android.os.ParcelFileDescriptor $r40, $r51, $r62, $r81, $r95, $r112;
        java.io.FileDescriptor $r41;
        com.android.server.BackupManagerService $r44, $r50, $r53, $r54, $r61, $r63, $r65, $r80, $r83, $r85, $r86, $r87, $r100, $r109, $r110, $r113;
        android.util.SparseArray $r49, $r60, $r84, $r88, $r114;
        android.content.pm.ApplicationInfo $r52, $r64, $r82, $r94, $r111;
        java.util.zip.InflaterInputStream $r55;
        java.lang.StringBuilder $r71, $r72, $r73;
        com.android.server.BackupManagerService$RestorePolicy $r91;
        java.util.HashMap $r92;

        r0 := @this: com.android.server.BackupManagerService$PerformFullRestoreTask;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BackupManagerService", "--- Performing full-dataset restore ---");

        $r36 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService$FullBackupObbConnection mObbConnection>;

        virtualinvoke $r36.<com.android.server.BackupManagerService$FullBackupObbConnection: void establish()>();

        virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: void sendStartRestore()>();

        $r42 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        $z5 = virtualinvoke $r42.<java.lang.String: boolean equals(java.lang.Object)>("mounted");

        if $z5 == 0 goto label001;

        $r92 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.util.HashMap mPackagePolicies>;

        $r91 = <com.android.server.BackupManagerService$RestorePolicy: com.android.server.BackupManagerService$RestorePolicy ACCEPT>;

        virtualinvoke $r92.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("com.android.sharedstoragebackup", $r91);

     label001:
        r1 = null;

        r2 = null;

     label002:
        $r44 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService this$0>;

        $r43 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.lang.String mCurrentPassword>;

        $z4 = staticinvoke <com.android.server.BackupManagerService: boolean access$1300(com.android.server.BackupManagerService,java.lang.String)>($r44, $r43);

        if $z4 != 0 goto label012;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", "Backup password mismatch; aborting");

     label003:
        virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: void tearDownPipes()>();

        $r82 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.content.pm.ApplicationInfo mTargetApp>;

        virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: void tearDownAgent(android.content.pm.ApplicationInfo)>($r82);

        goto label004;

     label004:
        goto label005;

     label005:
        $r81 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.os.ParcelFileDescriptor mInputFile>;

        virtualinvoke $r81.<android.os.ParcelFileDescriptor: void close()>();

     label006:
        $r83 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService this$0>;

        r34 = $r83.<com.android.server.BackupManagerService: java.lang.Object mCurrentOpLock>;

        entermonitor r34;

     label007:
        $r85 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService this$0>;

        $r84 = $r85.<com.android.server.BackupManagerService: android.util.SparseArray mCurrentOperations>;

        virtualinvoke $r84.<android.util.SparseArray: void clear()>();

        exitmonitor r34;

     label008:
        r38 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        entermonitor r38;

     label009:
        $r78 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        virtualinvoke $r78.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        $r77 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        virtualinvoke $r77.<java.lang.Object: void notifyAll()>();

        exitmonitor r38;

     label010:
        $r79 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService$FullBackupObbConnection mObbConnection>;

        virtualinvoke $r79.<com.android.server.BackupManagerService$FullBackupObbConnection: void tearDown()>();

        virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: void sendEndRestore()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", "Full restore pass complete.");

        $r80 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService this$0>;

        r14 = $r80.<com.android.server.BackupManagerService: android.os.PowerManager$WakeLock mWakelock>;

     label011:
        virtualinvoke r14.<android.os.PowerManager$WakeLock: void release()>();

        return;

     label012:
        r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: long mBytes> = 0L;

        r16 = newarray (byte)[32768];

        $r39 = new java.io.FileInputStream;

        $r40 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.os.ParcelFileDescriptor mInputFile>;

        $r41 = virtualinvoke $r40.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke $r39.<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>($r41);

        r15 = $r39;

     label013:
        $r46 = new java.io.DataInputStream;

        specialinvoke $r46.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r15);

        r18 = $r46;

     label014:
        r17 = r15;

     label015:
        $r47 = "ANDROID BACKUP\n";

        $i1 = virtualinvoke $r47.<java.lang.String: int length()>();

        r19 = newarray (byte)[$i1];

        virtualinvoke r18.<java.io.DataInputStream: void readFully(byte[])>(r19);

        $r48 = "ANDROID BACKUP\n";

        $r45 = virtualinvoke $r48.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $z6 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r45, r19);

        if $z6 == 0 goto label064;

        r31 = virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.lang.String readHeaderLine(java.io.InputStream)>(r15);

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r31);

     label016:
        if i0 > 2 goto label051;

        if i0 != 1 goto label033;

        z3 = 1;

     label017:
        $r76 = virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.lang.String readHeaderLine(java.io.InputStream)>(r15);

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r76);

        if $i3 == 0 goto label034;

     label018:
        z0 = 1;

     label019:
        r32 = virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.lang.String readHeaderLine(java.io.InputStream)>(r15);

        $z7 = virtualinvoke r32.<java.lang.String: boolean equals(java.lang.Object)>("none");

        if $z7 == 0 goto label035;

     label020:
        z1 = 1;

     label021:
        if z1 != 0 goto label066;

     label022:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", "Invalid restore data; aborting.");

     label023:
        virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: void tearDownPipes()>();

        $r64 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.content.pm.ApplicationInfo mTargetApp>;

        virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: void tearDownAgent(android.content.pm.ApplicationInfo)>($r64);

        if r18 == null goto label025;

     label024:
        virtualinvoke r18.<java.io.DataInputStream: void close()>();

     label025:
        if r15 == null goto label027;

     label026:
        virtualinvoke r15.<java.io.FileInputStream: void close()>();

     label027:
        $r62 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.os.ParcelFileDescriptor mInputFile>;

        virtualinvoke $r62.<android.os.ParcelFileDescriptor: void close()>();

     label028:
        $r63 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService this$0>;

        r20 = $r63.<com.android.server.BackupManagerService: java.lang.Object mCurrentOpLock>;

        entermonitor r20;

     label029:
        $r61 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService this$0>;

        $r60 = $r61.<com.android.server.BackupManagerService: android.util.SparseArray mCurrentOperations>;

        virtualinvoke $r60.<android.util.SparseArray: void clear()>();

        exitmonitor r20;

     label030:
        r24 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        entermonitor r24;

     label031:
        $r69 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        virtualinvoke $r69.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        $r68 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        virtualinvoke $r68.<java.lang.Object: void notifyAll()>();

        exitmonitor r24;

     label032:
        $r67 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService$FullBackupObbConnection mObbConnection>;

        virtualinvoke $r67.<com.android.server.BackupManagerService$FullBackupObbConnection: void tearDown()>();

        virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: void sendEndRestore()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", "Full restore pass complete.");

        $r65 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService this$0>;

        $r66 = $r65.<com.android.server.BackupManagerService: android.os.PowerManager$WakeLock mWakelock>;

        virtualinvoke $r66.<android.os.PowerManager$WakeLock: void release()>();

        return;

     label033:
        z3 = 0;

        goto label017;

     label034:
        z0 = 0;

        goto label019;

     label035:
        $r75 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.lang.String mDecryptPassword>;

        if $r75 == null goto label037;

        $r74 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.lang.String mDecryptPassword>;

        $i2 = virtualinvoke $r74.<java.lang.String: int length()>();

        if $i2 <= 0 goto label037;

        r17 = virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.io.InputStream decodeAesHeaderAndInitialize(java.lang.String,boolean,java.io.InputStream)>(r32, z3, r15);

     label036:
        z1 = 0;

        if r17 == null goto label021;

        z1 = 1;

        goto label021;

     label037:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", "Archive is encrypted but no password given");

     label038:
        z1 = 0;

        goto label021;

     label039:
        $r98 := @caughtexception;

        r2 = r18;

        r1 = r15;

     label040:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BackupManagerService", "Unable to read restore input");

     label041:
        virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: void tearDownPipes()>();

        $r111 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.content.pm.ApplicationInfo mTargetApp>;

        virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: void tearDownAgent(android.content.pm.ApplicationInfo)>($r111);

        if r2 == null goto label043;

     label042:
        virtualinvoke r2.<java.io.DataInputStream: void close()>();

     label043:
        if r1 == null goto label045;

     label044:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label045:
        $r112 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.os.ParcelFileDescriptor mInputFile>;

        virtualinvoke $r112.<android.os.ParcelFileDescriptor: void close()>();

     label046:
        $r110 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService this$0>;

        r11 = $r110.<com.android.server.BackupManagerService: java.lang.Object mCurrentOpLock>;

        entermonitor r11;

     label047:
        $r113 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService this$0>;

        $r114 = $r113.<com.android.server.BackupManagerService: android.util.SparseArray mCurrentOperations>;

        virtualinvoke $r114.<android.util.SparseArray: void clear()>();

        exitmonitor r11;

     label048:
        r13 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        entermonitor r13;

     label049:
        $r106 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        virtualinvoke $r106.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        $r107 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        virtualinvoke $r107.<java.lang.Object: void notifyAll()>();

        exitmonitor r13;

     label050:
        $r105 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService$FullBackupObbConnection mObbConnection>;

        virtualinvoke $r105.<com.android.server.BackupManagerService$FullBackupObbConnection: void tearDown()>();

        virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: void sendEndRestore()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", "Full restore pass complete.");

        $r109 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService this$0>;

        r14 = $r109.<com.android.server.BackupManagerService: android.os.PowerManager$WakeLock mWakelock>;

        goto label011;

     label051:
        $r73 = new java.lang.StringBuilder;

        specialinvoke $r73.<java.lang.StringBuilder: void <init>()>();

        $r72 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wrong header version: ");

        $r71 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        $r70 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", $r70);

     label052:
        z0 = 0;

        z1 = 0;

        goto label021;

     label053:
        $r124 := @caughtexception;

        r3 = $r124;

        r2 = r18;

        r1 = r15;

     label054:
        virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: void tearDownPipes()>();

        $r94 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.content.pm.ApplicationInfo mTargetApp>;

        virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: void tearDownAgent(android.content.pm.ApplicationInfo)>($r94);

        if r2 == null goto label056;

     label055:
        virtualinvoke r2.<java.io.DataInputStream: void close()>();

     label056:
        if r1 == null goto label058;

     label057:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label058:
        $r95 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.os.ParcelFileDescriptor mInputFile>;

        virtualinvoke $r95.<android.os.ParcelFileDescriptor: void close()>();

     label059:
        $r86 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService this$0>;

        r5 = $r86.<com.android.server.BackupManagerService: java.lang.Object mCurrentOpLock>;

        entermonitor r5;

     label060:
        $r87 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService this$0>;

        $r88 = $r87.<com.android.server.BackupManagerService: android.util.SparseArray mCurrentOperations>;

        virtualinvoke $r88.<android.util.SparseArray: void clear()>();

        exitmonitor r5;

     label061:
        r7 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        entermonitor r7;

     label062:
        $r89 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        virtualinvoke $r89.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        $r90 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        virtualinvoke $r90.<java.lang.Object: void notifyAll()>();

        exitmonitor r7;

     label063:
        $r101 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService$FullBackupObbConnection mObbConnection>;

        virtualinvoke $r101.<com.android.server.BackupManagerService$FullBackupObbConnection: void tearDown()>();

        virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: void sendEndRestore()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", "Full restore pass complete.");

        $r100 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService this$0>;

        $r104 = $r100.<com.android.server.BackupManagerService: android.os.PowerManager$WakeLock mWakelock>;

        virtualinvoke $r104.<android.os.PowerManager$WakeLock: void release()>();

        throw r3;

     label064:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", "Didn\'t read the right header magic");

     label065:
        z0 = 0;

        z1 = 0;

        goto label021;

     label066:
        if z0 == 0 goto label079;

     label067:
        $r55 = new java.util.zip.InflaterInputStream;

        specialinvoke $r55.<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream)>(r17);

        r23 = $r55;

     label068:
        z2 = virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: boolean restoreOneFile(java.io.InputStream,byte[])>(r23, r16);

     label069:
        if z2 != 0 goto label068;

        virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: void tearDownPipes()>();

        $r52 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.content.pm.ApplicationInfo mTargetApp>;

        virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: void tearDownAgent(android.content.pm.ApplicationInfo)>($r52);

        if r18 == null goto label071;

     label070:
        virtualinvoke r18.<java.io.DataInputStream: void close()>();

     label071:
        if r15 == null goto label073;

     label072:
        virtualinvoke r15.<java.io.FileInputStream: void close()>();

     label073:
        $r51 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.os.ParcelFileDescriptor mInputFile>;

        virtualinvoke $r51.<android.os.ParcelFileDescriptor: void close()>();

     label074:
        $r53 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService this$0>;

        r26 = $r53.<com.android.server.BackupManagerService: java.lang.Object mCurrentOpLock>;

        entermonitor r26;

     label075:
        $r50 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService this$0>;

        $r49 = $r50.<com.android.server.BackupManagerService: android.util.SparseArray mCurrentOperations>;

        virtualinvoke $r49.<android.util.SparseArray: void clear()>();

        exitmonitor r26;

     label076:
        r30 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        entermonitor r30;

     label077:
        $r58 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        virtualinvoke $r58.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        $r57 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        virtualinvoke $r57.<java.lang.Object: void notifyAll()>();

        exitmonitor r30;

     label078:
        $r59 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService$FullBackupObbConnection mObbConnection>;

        virtualinvoke $r59.<com.android.server.BackupManagerService$FullBackupObbConnection: void tearDown()>();

        virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: void sendEndRestore()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", "Full restore pass complete.");

        $r54 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService this$0>;

        $r56 = $r54.<com.android.server.BackupManagerService: android.os.PowerManager$WakeLock mWakelock>;

        virtualinvoke $r56.<android.os.PowerManager$WakeLock: void release()>();

        return;

     label079:
        r23 = r17;

        goto label068;

     label080:
        $r116 := @caughtexception;

        r4 = $r116;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("BackupManagerService", "Close of restore data pipe threw", r4);

        goto label059;

     label081:
        $r103 := @caughtexception;

        r6 = $r103;

     label082:
        exitmonitor r5;

     label083:
        throw r6;

     label084:
        $r96 := @caughtexception;

        r8 = $r96;

     label085:
        exitmonitor r7;

     label086:
        throw r8;

     label087:
        $r120 := @caughtexception;

        r9 = $r120;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("BackupManagerService", "Close of restore data pipe threw", r9);

        goto label046;

     label088:
        $r115 := @caughtexception;

        r10 = $r115;

     label089:
        exitmonitor r11;

     label090:
        throw r10;

     label091:
        $r118 := @caughtexception;

        r12 = $r118;

     label092:
        exitmonitor r13;

     label093:
        throw r12;

     label094:
        $r122 := @caughtexception;

        r35 = $r122;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("BackupManagerService", "Close of restore data pipe threw", r35);

        goto label006;

     label095:
        $r119 := @caughtexception;

        r33 = $r119;

     label096:
        exitmonitor r34;

     label097:
        throw r33;

     label098:
        $r99 := @caughtexception;

        r37 = $r99;

     label099:
        exitmonitor r38;

     label100:
        throw r37;

     label101:
        $r97 := @caughtexception;

        r22 = $r97;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("BackupManagerService", "Close of restore data pipe threw", r22);

        goto label028;

     label102:
        $r121 := @caughtexception;

        r21 = $r121;

     label103:
        exitmonitor r20;

     label104:
        throw r21;

     label105:
        $r125 := @caughtexception;

        r25 = $r125;

     label106:
        exitmonitor r24;

     label107:
        throw r25;

     label108:
        $r126 := @caughtexception;

        r27 = $r126;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("BackupManagerService", "Close of restore data pipe threw", r27);

        goto label074;

     label109:
        $r108 := @caughtexception;

        r29 = $r108;

     label110:
        exitmonitor r26;

     label111:
        throw r29;

     label112:
        $r117 := @caughtexception;

        r28 = $r117;

     label113:
        exitmonitor r30;

     label114:
        throw r28;

     label115:
        $r93 := @caughtexception;

        r3 = $r93;

        goto label054;

     label116:
        $r102 := @caughtexception;

        r3 = $r102;

        r1 = r15;

        r2 = null;

        goto label054;

     label117:
        $r123 := @caughtexception;

        r2 = null;

        r1 = null;

        goto label040;

     label118:
        $r127 := @caughtexception;

        r1 = r15;

        r2 = null;

        goto label040;

        catch java.io.IOException from label002 to label003 with label117;
        catch java.lang.Throwable from label002 to label003 with label115;
        catch java.io.IOException from label004 to label004 with label094;
        catch java.io.IOException from label005 to label005 with label094;
        catch java.io.IOException from label005 to label006 with label094;
        catch java.lang.Throwable from label007 to label008 with label095;
        catch java.lang.Throwable from label009 to label010 with label098;
        catch java.io.IOException from label012 to label013 with label117;
        catch java.lang.Throwable from label012 to label013 with label115;
        catch java.io.IOException from label013 to label014 with label118;
        catch java.lang.Throwable from label013 to label014 with label116;
        catch java.io.IOException from label015 to label016 with label039;
        catch java.lang.Throwable from label015 to label016 with label053;
        catch java.io.IOException from label017 to label018 with label039;
        catch java.lang.Throwable from label017 to label018 with label053;
        catch java.io.IOException from label019 to label020 with label039;
        catch java.lang.Throwable from label019 to label020 with label053;
        catch java.io.IOException from label022 to label023 with label039;
        catch java.lang.Throwable from label022 to label023 with label053;
        catch java.io.IOException from label024 to label025 with label101;
        catch java.io.IOException from label026 to label027 with label101;
        catch java.io.IOException from label027 to label028 with label101;
        catch java.lang.Throwable from label029 to label030 with label102;
        catch java.lang.Throwable from label031 to label032 with label105;
        catch java.io.IOException from label035 to label036 with label039;
        catch java.lang.Throwable from label035 to label036 with label053;
        catch java.io.IOException from label037 to label038 with label039;
        catch java.lang.Throwable from label037 to label038 with label053;
        catch java.lang.Throwable from label040 to label041 with label115;
        catch java.io.IOException from label042 to label043 with label087;
        catch java.io.IOException from label044 to label045 with label087;
        catch java.io.IOException from label045 to label046 with label087;
        catch java.lang.Throwable from label047 to label048 with label088;
        catch java.lang.Throwable from label049 to label050 with label091;
        catch java.io.IOException from label051 to label052 with label039;
        catch java.lang.Throwable from label051 to label052 with label053;
        catch java.io.IOException from label055 to label056 with label080;
        catch java.io.IOException from label057 to label058 with label080;
        catch java.io.IOException from label058 to label059 with label080;
        catch java.lang.Throwable from label060 to label061 with label081;
        catch java.lang.Throwable from label062 to label063 with label084;
        catch java.io.IOException from label064 to label065 with label039;
        catch java.lang.Throwable from label064 to label065 with label053;
        catch java.io.IOException from label067 to label068 with label039;
        catch java.lang.Throwable from label067 to label068 with label053;
        catch java.io.IOException from label068 to label069 with label039;
        catch java.lang.Throwable from label068 to label069 with label053;
        catch java.io.IOException from label070 to label071 with label108;
        catch java.io.IOException from label072 to label073 with label108;
        catch java.io.IOException from label073 to label074 with label108;
        catch java.lang.Throwable from label075 to label076 with label109;
        catch java.lang.Throwable from label077 to label078 with label112;
        catch java.lang.Throwable from label082 to label083 with label081;
        catch java.lang.Throwable from label085 to label086 with label084;
        catch java.lang.Throwable from label089 to label090 with label088;
        catch java.lang.Throwable from label092 to label093 with label091;
        catch java.lang.Throwable from label096 to label097 with label095;
        catch java.lang.Throwable from label099 to label100 with label098;
        catch java.lang.Throwable from label103 to label104 with label102;
        catch java.lang.Throwable from label106 to label107 with label105;
        catch java.lang.Throwable from label110 to label111 with label109;
        catch java.lang.Throwable from label113 to label114 with label112;
    }

    void sendEndRestore()
    {
        com.android.server.BackupManagerService$PerformFullRestoreTask r0;
        android.app.backup.IFullBackupRestoreObserver $r2, $r3;
        android.os.RemoteException $r4;

        r0 := @this: com.android.server.BackupManagerService$PerformFullRestoreTask;

        $r2 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.app.backup.IFullBackupRestoreObserver mObserver>;

        if $r2 == null goto label2;

     label1:
        $r3 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.app.backup.IFullBackupRestoreObserver mObserver>;

        interfaceinvoke $r3.<android.app.backup.IFullBackupRestoreObserver: void onEndRestore()>();

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", "full restore observer went away: endRestore");

        r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.app.backup.IFullBackupRestoreObserver mObserver> = null;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    void sendOnRestorePackage(java.lang.String)
    {
        com.android.server.BackupManagerService$PerformFullRestoreTask r0;
        java.lang.String r1;
        android.app.backup.IFullBackupRestoreObserver $r3, $r4;
        android.os.RemoteException $r5;

        r0 := @this: com.android.server.BackupManagerService$PerformFullRestoreTask;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.app.backup.IFullBackupRestoreObserver mObserver>;

        if $r3 == null goto label2;

     label1:
        $r4 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.app.backup.IFullBackupRestoreObserver mObserver>;

        interfaceinvoke $r4.<android.app.backup.IFullBackupRestoreObserver: void onRestorePackage(java.lang.String)>(r1);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", "full restore observer went away: restorePackage");

        r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.app.backup.IFullBackupRestoreObserver mObserver> = null;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    void sendStartRestore()
    {
        com.android.server.BackupManagerService$PerformFullRestoreTask r0;
        android.app.backup.IFullBackupRestoreObserver $r2, $r3;
        android.os.RemoteException $r4;

        r0 := @this: com.android.server.BackupManagerService$PerformFullRestoreTask;

        $r2 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.app.backup.IFullBackupRestoreObserver mObserver>;

        if $r2 == null goto label2;

     label1:
        $r3 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.app.backup.IFullBackupRestoreObserver mObserver>;

        interfaceinvoke $r3.<android.app.backup.IFullBackupRestoreObserver: void onStartRestore()>();

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", "full restore observer went away: startRestore");

        r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.app.backup.IFullBackupRestoreObserver mObserver> = null;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    void setUpPipes() throws java.io.IOException
    {
        com.android.server.BackupManagerService$PerformFullRestoreTask r0;
        android.os.ParcelFileDescriptor[] $r1;

        r0 := @this: com.android.server.BackupManagerService$PerformFullRestoreTask;

        $r1 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor[] createPipe()>();

        r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.os.ParcelFileDescriptor[] mPipes> = $r1;

        return;
    }

    void skipTarPadding(long, java.io.InputStream) throws java.io.IOException
    {
        com.android.server.BackupManagerService$PerformFullRestoreTask r0;
        long l0, l1, $l3, $l7, $l8, $l9;
        java.io.InputStream r1;
        int i2, $i5, $i6;
        byte $b4;
        byte[] $r2;
        java.io.IOException $r3;

        r0 := @this: com.android.server.BackupManagerService$PerformFullRestoreTask;

        l0 := @parameter0: long;

        r1 := @parameter1: java.io.InputStream;

        $l3 = l0 + 512L;

        l1 = $l3 % 512L;

        $b4 = l1 cmp 0L;

        if $b4 <= 0 goto label1;

        $i5 = (int) l1;

        i2 = 512 - $i5;

        $r2 = newarray (byte)[i2];

        $i6 = virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: int readExactly(java.io.InputStream,byte[],int,int)>(r1, $r2, 0, i2);

        if $i6 != i2 goto label2;

        $l8 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: long mBytes>;

        $l7 = (long) i2;

        $l9 = $l8 + $l7;

        r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: long mBytes> = $l9;

     label1:
        return;

     label2:
        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("Unexpected EOF in padding");

        throw $r3;
    }

    void tearDownAgent(android.content.pm.ApplicationInfo)
    {
        com.android.server.BackupManagerService$PerformFullRestoreTask r0;
        android.content.pm.ApplicationInfo r1;
        android.app.IBackupAgent $r3;
        com.android.server.BackupManagerService $r4, $r7;
        android.app.IActivityManager $r5, $r8;
        int $i0, $i3;
        java.lang.String $r6, $r9;
        boolean $z0;
        android.os.RemoteException $r10;

        r0 := @this: com.android.server.BackupManagerService$PerformFullRestoreTask;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        $r3 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.app.IBackupAgent mAgent>;

        if $r3 == null goto label3;

     label1:
        $r4 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService this$0>;

        $r5 = staticinvoke <com.android.server.BackupManagerService: android.app.IActivityManager access$800(com.android.server.BackupManagerService)>($r4);

        interfaceinvoke $r5.<android.app.IActivityManager: void unbindBackupAgent(android.content.pm.ApplicationInfo)>(r1);

        $i0 = r1.<android.content.pm.ApplicationInfo: int uid>;

        if $i0 == 1000 goto label4;

        $r6 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("com.android.backupconfirm");

        if $z0 != 0 goto label4;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", "Killing host process");

        $r7 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService this$0>;

        $r8 = staticinvoke <com.android.server.BackupManagerService: android.app.IActivityManager access$800(com.android.server.BackupManagerService)>($r7);

        $r9 = r1.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $i3 = r1.<android.content.pm.ApplicationInfo: int uid>;

        interfaceinvoke $r8.<android.app.IActivityManager: void killApplicationProcess(java.lang.String,int)>($r9, $i3);

     label2:
        r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.app.IBackupAgent mAgent> = null;

     label3:
        return;

     label4:
        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", "Not killing after full restore");

     label5:
        goto label2;

     label6:
        $r10 := @caughtexception;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", "Lost app trying to shut down");

        goto label2;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    void tearDownPipes()
    {
        com.android.server.BackupManagerService$PerformFullRestoreTask r0;
        java.io.IOException r1, $r9;
        android.os.ParcelFileDescriptor[] $r2, $r3, $r5, $r6, $r8;
        android.os.ParcelFileDescriptor $r4, $r7;

        r0 := @this: com.android.server.BackupManagerService$PerformFullRestoreTask;

        $r2 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.os.ParcelFileDescriptor[] mPipes>;

        if $r2 == null goto label3;

     label1:
        $r3 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.os.ParcelFileDescriptor[] mPipes>;

        $r4 = $r3[0];

        virtualinvoke $r4.<android.os.ParcelFileDescriptor: void close()>();

        $r5 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.os.ParcelFileDescriptor[] mPipes>;

        $r5[0] = null;

        $r6 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.os.ParcelFileDescriptor[] mPipes>;

        $r7 = $r6[1];

        virtualinvoke $r7.<android.os.ParcelFileDescriptor: void close()>();

        $r8 = r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.os.ParcelFileDescriptor[] mPipes>;

        $r8[1] = null;

     label2:
        r0.<com.android.server.BackupManagerService$PerformFullRestoreTask: android.os.ParcelFileDescriptor[] mPipes> = null;

     label3:
        return;

     label4:
        $r9 := @caughtexception;

        r1 = $r9;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("BackupManagerService", "Couldn\'t close agent pipes", r1);

        goto label2;

        catch java.io.IOException from label1 to label2 with label4;
    }
}
