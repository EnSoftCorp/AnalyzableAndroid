public final class android.telephony.SmsManager extends java.lang.Object
{
    public static final int RESULT_ERROR_FDN_CHECK_FAILURE;
    public static final int RESULT_ERROR_GENERIC_FAILURE;
    public static final int RESULT_ERROR_LIMIT_EXCEEDED;
    public static final int RESULT_ERROR_NO_SERVICE;
    public static final int RESULT_ERROR_NULL_PDU;
    public static final int RESULT_ERROR_RADIO_OFF;
    public static final int STATUS_ON_ICC_FREE;
    public static final int STATUS_ON_ICC_READ;
    public static final int STATUS_ON_ICC_SENT;
    public static final int STATUS_ON_ICC_UNREAD;
    public static final int STATUS_ON_ICC_UNSENT;
    private static final android.telephony.SmsManager sInstance;

    static void <clinit>()
    {
        android.telephony.SmsManager $r0;

        <android.telephony.SmsManager: int STATUS_ON_ICC_UNSENT> = 7;

        <android.telephony.SmsManager: int STATUS_ON_ICC_UNREAD> = 3;

        <android.telephony.SmsManager: int STATUS_ON_ICC_SENT> = 5;

        <android.telephony.SmsManager: int STATUS_ON_ICC_READ> = 1;

        <android.telephony.SmsManager: int STATUS_ON_ICC_FREE> = 0;

        <android.telephony.SmsManager: int RESULT_ERROR_RADIO_OFF> = 2;

        <android.telephony.SmsManager: int RESULT_ERROR_NULL_PDU> = 3;

        <android.telephony.SmsManager: int RESULT_ERROR_NO_SERVICE> = 4;

        <android.telephony.SmsManager: int RESULT_ERROR_LIMIT_EXCEEDED> = 5;

        <android.telephony.SmsManager: int RESULT_ERROR_GENERIC_FAILURE> = 1;

        <android.telephony.SmsManager: int RESULT_ERROR_FDN_CHECK_FAILURE> = 6;

        $r0 = new android.telephony.SmsManager;

        specialinvoke $r0.<android.telephony.SmsManager: void <init>()>();

        <android.telephony.SmsManager: android.telephony.SmsManager sInstance> = $r0;

        return;
    }

    private void <init>()
    {
        android.telephony.SmsManager r0;

        r0 := @this: android.telephony.SmsManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.util.ArrayList createMessageListFromRawRecords(java.util.List)
    {
        java.util.List r0;
        java.util.ArrayList r1, $r4;
        int i0, i1, $i2;
        com.android.internal.telephony.SmsRawData r2;
        android.telephony.SmsMessage r3;
        java.lang.Object $r5;
        byte[] $r6;

        r0 := @parameter0: java.util.List;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r1 = $r4;

        if r0 == null goto label3;

        i0 = interfaceinvoke r0.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r5 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);

        r2 = (com.android.internal.telephony.SmsRawData) $r5;

        if r2 == null goto label2;

        $i2 = i1 + 1;

        $r6 = virtualinvoke r2.<com.android.internal.telephony.SmsRawData: byte[] getBytes()>();

        r3 = staticinvoke <android.telephony.SmsMessage: android.telephony.SmsMessage createFromEfRecord(int,byte[])>($i2, $r6);

        if r3 == null goto label2;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return r1;
    }

    public static java.util.ArrayList getAllMessagesFromIcc()
    {
        java.util.List r1, r3;
        com.android.internal.telephony.ISms r2;
        android.os.IBinder $r4;
        java.util.ArrayList $r5;
        java.lang.String $r6;
        android.os.RemoteException $r7;

     label1:
        $r4 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isms");

        r2 = staticinvoke <com.android.internal.telephony.ISms$Stub: com.android.internal.telephony.ISms asInterface(android.os.IBinder)>($r4);

     label2:
        r1 = null;

        if r2 == null goto label5;

     label3:
        $r6 = staticinvoke <android.app.ActivityThread: java.lang.String currentPackageName()>();

        r3 = interfaceinvoke r2.<com.android.internal.telephony.ISms: java.util.List getAllMessagesFromIccEf(java.lang.String)>($r6);

     label4:
        r1 = r3;

     label5:
        $r5 = staticinvoke <android.telephony.SmsManager: java.util.ArrayList createMessageListFromRawRecords(java.util.List)>(r1);

        return $r5;

     label6:
        $r7 := @caughtexception;

        r1 = null;

        goto label5;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label6;
    }

    public static android.telephony.SmsManager getDefault()
    {
        android.telephony.SmsManager $r0;

        $r0 = <android.telephony.SmsManager: android.telephony.SmsManager sInstance>;

        return $r0;
    }

    public boolean copyMessageToIcc(byte[], byte[], int)
    {
        android.telephony.SmsManager r0;
        byte[] r1, r2;
        int i0;
        com.android.internal.telephony.ISms r4;
        boolean z0, z1;
        android.os.IBinder $r5;
        java.lang.String $r6;
        java.lang.IllegalArgumentException $r7;
        android.os.RemoteException $r8;

        r0 := @this: android.telephony.SmsManager;

        r1 := @parameter0: byte[];

        r2 := @parameter1: byte[];

        i0 := @parameter2: int;

        if r2 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("pdu is NULL");

        throw $r7;

     label1:
        $r5 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isms");

        r4 = staticinvoke <com.android.internal.telephony.ISms$Stub: com.android.internal.telephony.ISms asInterface(android.os.IBinder)>($r5);

     label2:
        z0 = 0;

        if r4 == null goto label5;

     label3:
        $r6 = staticinvoke <android.app.ActivityThread: java.lang.String currentPackageName()>();

        z1 = interfaceinvoke r4.<com.android.internal.telephony.ISms: boolean copyMessageToIccEf(java.lang.String,int,byte[],byte[])>($r6, i0, r2, r1);

     label4:
        z0 = z1;

     label5:
        return z0;

     label6:
        $r8 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label6;
    }

    public boolean deleteMessageFromIcc(int)
    {
        android.telephony.SmsManager r0;
        int i0;
        byte[] r1;
        com.android.internal.telephony.ISms r3;
        boolean z0, z1;
        android.os.IBinder $r4;
        java.lang.String $r5;
        android.os.RemoteException $r6;

        r0 := @this: android.telephony.SmsManager;

        i0 := @parameter0: int;

        r1 = newarray (byte)[175];

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>(r1, -1);

     label1:
        $r4 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isms");

        r3 = staticinvoke <com.android.internal.telephony.ISms$Stub: com.android.internal.telephony.ISms asInterface(android.os.IBinder)>($r4);

     label2:
        z0 = 0;

        if r3 == null goto label5;

     label3:
        $r5 = staticinvoke <android.app.ActivityThread: java.lang.String currentPackageName()>();

        z1 = interfaceinvoke r3.<com.android.internal.telephony.ISms: boolean updateMessageOnIccEf(java.lang.String,int,int,byte[])>($r5, i0, 0, r1);

     label4:
        z0 = z1;

     label5:
        return z0;

     label6:
        $r6 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label6;
    }

    public boolean disableCellBroadcast(int)
    {
        android.telephony.SmsManager r0;
        int i0;
        com.android.internal.telephony.ISms r2;
        boolean z0, z1;
        android.os.IBinder $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.telephony.SmsManager;

        i0 := @parameter0: int;

     label1:
        $r3 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isms");

        r2 = staticinvoke <com.android.internal.telephony.ISms$Stub: com.android.internal.telephony.ISms asInterface(android.os.IBinder)>($r3);

     label2:
        z0 = 0;

        if r2 == null goto label5;

     label3:
        z1 = interfaceinvoke r2.<com.android.internal.telephony.ISms: boolean disableCellBroadcast(int)>(i0);

     label4:
        z0 = z1;

     label5:
        return z0;

     label6:
        $r4 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label6;
    }

    public boolean disableCellBroadcastRange(int, int)
    {
        android.telephony.SmsManager r0;
        int i0, i1;
        com.android.internal.telephony.ISms r2;
        boolean z0, z1;
        android.os.IBinder $r3;
        java.lang.IllegalArgumentException $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.telephony.SmsManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 >= i0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("endMessageId < startMessageId");

        throw $r4;

     label1:
        $r3 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isms");

        r2 = staticinvoke <com.android.internal.telephony.ISms$Stub: com.android.internal.telephony.ISms asInterface(android.os.IBinder)>($r3);

     label2:
        z0 = 0;

        if r2 == null goto label5;

     label3:
        z1 = interfaceinvoke r2.<com.android.internal.telephony.ISms: boolean disableCellBroadcastRange(int,int)>(i0, i1);

     label4:
        z0 = z1;

     label5:
        return z0;

     label6:
        $r5 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label6;
    }

    public java.util.ArrayList divideMessage(java.lang.String)
    {
        android.telephony.SmsManager r0;
        java.lang.String r1;
        java.util.ArrayList $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.telephony.SmsManager;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("text is null");

        throw $r3;

     label1:
        $r2 = staticinvoke <android.telephony.SmsMessage: java.util.ArrayList fragmentText(java.lang.String)>(r1);

        return $r2;
    }

    public boolean enableCellBroadcast(int)
    {
        android.telephony.SmsManager r0;
        int i0;
        com.android.internal.telephony.ISms r2;
        boolean z0, z1;
        android.os.IBinder $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.telephony.SmsManager;

        i0 := @parameter0: int;

     label1:
        $r3 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isms");

        r2 = staticinvoke <com.android.internal.telephony.ISms$Stub: com.android.internal.telephony.ISms asInterface(android.os.IBinder)>($r3);

     label2:
        z0 = 0;

        if r2 == null goto label5;

     label3:
        z1 = interfaceinvoke r2.<com.android.internal.telephony.ISms: boolean enableCellBroadcast(int)>(i0);

     label4:
        z0 = z1;

     label5:
        return z0;

     label6:
        $r4 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label6;
    }

    public boolean enableCellBroadcastRange(int, int)
    {
        android.telephony.SmsManager r0;
        int i0, i1;
        com.android.internal.telephony.ISms r2;
        boolean z0, z1;
        android.os.IBinder $r3;
        java.lang.IllegalArgumentException $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.telephony.SmsManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 >= i0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("endMessageId < startMessageId");

        throw $r4;

     label1:
        $r3 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isms");

        r2 = staticinvoke <com.android.internal.telephony.ISms$Stub: com.android.internal.telephony.ISms asInterface(android.os.IBinder)>($r3);

     label2:
        z0 = 0;

        if r2 == null goto label5;

     label3:
        z1 = interfaceinvoke r2.<com.android.internal.telephony.ISms: boolean enableCellBroadcastRange(int,int)>(i0, i1);

     label4:
        z0 = z1;

     label5:
        return z0;

     label6:
        $r5 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label6;
    }

    java.lang.String getImsSmsFormat()
    {
        android.telephony.SmsManager r0;
        java.lang.String r1, r4;
        com.android.internal.telephony.ISms r3;
        android.os.IBinder $r5;
        android.os.RemoteException $r6;

        r0 := @this: android.telephony.SmsManager;

        r1 = "unknown";

     label1:
        $r5 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isms");

        r3 = staticinvoke <com.android.internal.telephony.ISms$Stub: com.android.internal.telephony.ISms asInterface(android.os.IBinder)>($r5);

     label2:
        if r3 == null goto label5;

     label3:
        r4 = interfaceinvoke r3.<com.android.internal.telephony.ISms: java.lang.String getImsSmsFormat()>();

     label4:
        r1 = r4;

     label5:
        return r1;

     label6:
        $r6 := @caughtexception;

        return r1;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label6;
    }

    boolean isImsSmsSupported()
    {
        android.telephony.SmsManager r0;
        com.android.internal.telephony.ISms r2;
        boolean z0, z1;
        android.os.IBinder $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.telephony.SmsManager;

     label1:
        $r3 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isms");

        r2 = staticinvoke <com.android.internal.telephony.ISms$Stub: com.android.internal.telephony.ISms asInterface(android.os.IBinder)>($r3);

     label2:
        z0 = 0;

        if r2 == null goto label5;

     label3:
        z1 = interfaceinvoke r2.<com.android.internal.telephony.ISms: boolean isImsSmsSupported()>();

     label4:
        z0 = z1;

     label5:
        return z0;

     label6:
        $r4 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label6;
    }

    public void sendDataMessage(java.lang.String, java.lang.String, short, byte[], android.app.PendingIntent, android.app.PendingIntent)
    {
        android.telephony.SmsManager r0;
        java.lang.String r1, r2, $r10;
        short s0;
        byte[] r3;
        android.app.PendingIntent r4, r5;
        com.android.internal.telephony.ISms r7;
        boolean $z0;
        java.lang.IllegalArgumentException $r8, $r12;
        int $i1, $i2;
        android.os.IBinder $r9;
        android.os.RemoteException $r11;

        r0 := @this: android.telephony.SmsManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        s0 := @parameter2: short;

        r3 := @parameter3: byte[];

        r4 := @parameter4: android.app.PendingIntent;

        r5 := @parameter5: android.app.PendingIntent;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid destinationAddress");

        throw $r12;

     label1:
        if r3 == null goto label2;

        $i1 = lengthof r3;

        if $i1 != 0 goto label3;

     label2:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid message data");

        throw $r8;

     label3:
        $r9 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isms");

        r7 = staticinvoke <com.android.internal.telephony.ISms$Stub: com.android.internal.telephony.ISms asInterface(android.os.IBinder)>($r9);

     label4:
        if r7 == null goto label6;

     label5:
        $r10 = staticinvoke <android.app.ActivityThread: java.lang.String currentPackageName()>();

        $i2 = s0 & 65535;

        interfaceinvoke r7.<com.android.internal.telephony.ISms: void sendData(java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>($r10, r1, r2, $i2, r3, r4, r5);

     label6:
        return;

     label7:
        $r11 := @caughtexception;

        return;

        catch android.os.RemoteException from label3 to label4 with label7;
        catch android.os.RemoteException from label5 to label6 with label7;
    }

    public void sendMultipartTextMessage(java.lang.String, java.lang.String, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList)
    {
        android.telephony.SmsManager r0;
        java.lang.String r1, r2, $r11, $r17;
        java.util.ArrayList r3, r4, r5;
        android.app.PendingIntent r6, r7;
        int i0, i1, $i2, $i3;
        com.android.internal.telephony.ISms r9;
        boolean $z0;
        java.lang.IllegalArgumentException $r10, $r16;
        java.lang.Object $r12, $r13, $r14;
        android.os.IBinder $r15;
        android.os.RemoteException $r18;

        r0 := @this: android.telephony.SmsManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.ArrayList;

        r4 := @parameter3: java.util.ArrayList;

        r5 := @parameter4: java.util.ArrayList;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label01;

        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid destinationAddress");

        throw $r16;

     label01:
        if r3 == null goto label02;

        $i2 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if $i2 >= 1 goto label03;

     label02:
        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid message body");

        throw $r10;

     label03:
        $i3 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if $i3 <= 1 goto label08;

     label04:
        $r15 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isms");

        r9 = staticinvoke <com.android.internal.telephony.ISms$Stub: com.android.internal.telephony.ISms asInterface(android.os.IBinder)>($r15);

     label05:
        if r9 == null goto label07;

     label06:
        $r17 = staticinvoke <android.app.ActivityThread: java.lang.String currentPackageName()>();

        interfaceinvoke r9.<com.android.internal.telephony.ISms: void sendMultipartText(java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>($r17, r1, r2, r3, r4, r5);

     label07:
        return;

     label08:
        r6 = null;

        if r4 == null goto label09;

        i1 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        r6 = null;

        if i1 <= 0 goto label09;

        $r14 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r6 = (android.app.PendingIntent) $r14;

     label09:
        r7 = null;

        if r5 == null goto label10;

        i0 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        r7 = null;

        if i0 <= 0 goto label10;

        $r13 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r7 = (android.app.PendingIntent) $r13;

     label10:
        $r12 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r11 = (java.lang.String) $r12;

        virtualinvoke r0.<android.telephony.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>(r1, r2, $r11, r6, r7);

        return;

     label11:
        $r18 := @caughtexception;

        return;

        catch android.os.RemoteException from label04 to label05 with label11;
        catch android.os.RemoteException from label06 to label07 with label11;
    }

    public void sendTextMessage(java.lang.String, java.lang.String, java.lang.String, android.app.PendingIntent, android.app.PendingIntent)
    {
        android.telephony.SmsManager r0;
        java.lang.String r1, r2, r3, $r9;
        android.app.PendingIntent r4, r5;
        com.android.internal.telephony.ISms r7;
        boolean $z0, $z1;
        android.os.IBinder $r8;
        java.lang.IllegalArgumentException $r10, $r11;
        android.os.RemoteException $r12;

        r0 := @this: android.telephony.SmsManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.app.PendingIntent;

        r5 := @parameter4: android.app.PendingIntent;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid destinationAddress");

        throw $r11;

     label1:
        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z1 == 0 goto label2;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid message body");

        throw $r10;

     label2:
        $r8 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isms");

        r7 = staticinvoke <com.android.internal.telephony.ISms$Stub: com.android.internal.telephony.ISms asInterface(android.os.IBinder)>($r8);

     label3:
        if r7 == null goto label5;

     label4:
        $r9 = staticinvoke <android.app.ActivityThread: java.lang.String currentPackageName()>();

        interfaceinvoke r7.<com.android.internal.telephony.ISms: void sendText(java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>($r9, r1, r2, r3, r4, r5);

     label5:
        return;

     label6:
        $r12 := @caughtexception;

        return;

        catch android.os.RemoteException from label2 to label3 with label6;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public boolean updateMessageOnIcc(int, int, byte[])
    {
        android.telephony.SmsManager r0;
        int i0, i1;
        byte[] r1;
        com.android.internal.telephony.ISms r3;
        boolean z0, z1;
        android.os.IBinder $r4;
        java.lang.String $r5;
        android.os.RemoteException $r6;

        r0 := @this: android.telephony.SmsManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: byte[];

     label1:
        $r4 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isms");

        r3 = staticinvoke <com.android.internal.telephony.ISms$Stub: com.android.internal.telephony.ISms asInterface(android.os.IBinder)>($r4);

     label2:
        z0 = 0;

        if r3 == null goto label5;

     label3:
        $r5 = staticinvoke <android.app.ActivityThread: java.lang.String currentPackageName()>();

        z1 = interfaceinvoke r3.<com.android.internal.telephony.ISms: boolean updateMessageOnIccEf(java.lang.String,int,int,byte[])>($r5, i0, i1, r1);

     label4:
        z0 = z1;

     label5:
        return z0;

     label6:
        $r6 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label6;
    }
}
