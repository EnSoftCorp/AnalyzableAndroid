final class android.os.Handler$BlockingRunnable extends java.lang.Object implements java.lang.Runnable
{
    private boolean mDone;
    private final java.lang.Runnable mTask;

    public void <init>(java.lang.Runnable)
    {
        android.os.Handler$BlockingRunnable r0;
        java.lang.Runnable r1;

        r0 := @this: android.os.Handler$BlockingRunnable;

        r1 := @parameter0: java.lang.Runnable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.os.Handler$BlockingRunnable: java.lang.Runnable mTask> = r1;

        return;
    }

    public boolean postAndWait(android.os.Handler, long)
    {
        android.os.Handler$BlockingRunnable r0;
        android.os.Handler r1;
        long l0, l1, l2, $l4, $l6;
        boolean z0, $z1, $z2;
        java.lang.Throwable r2, $r5;
        byte $b3, $b5;
        java.lang.InterruptedException $r6, $r7;

        r0 := @this: android.os.Handler$BlockingRunnable;

        r1 := @parameter0: android.os.Handler;

        l0 := @parameter1: long;

        $z1 = virtualinvoke r1.<android.os.Handler: boolean post(java.lang.Runnable)>(r0);

        if $z1 != 0 goto label01;

        return 0;

     label01:
        entermonitor r0;

        $b3 = l0 cmp 0L;

        if $b3 <= 0 goto label13;

     label02:
        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l1 = l0 + $l4;

     label03:
        $z2 = r0.<android.os.Handler$BlockingRunnable: boolean mDone>;

        if $z2 != 0 goto label18;

        $l6 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l2 = l1 - $l6;

     label04:
        $b5 = l2 cmp 0L;

        if $b5 > 0 goto label10;

     label05:
        exitmonitor r0;

     label06:
        return 0;

     label07:
        $r5 := @caughtexception;

        r2 = $r5;

     label08:
        exitmonitor r0;

     label09:
        throw r2;

     label10:
        virtualinvoke r0.<java.lang.Object: void wait(long)>(l2);

     label11:
        goto label03;

     label12:
        $r6 := @caughtexception;

        goto label03;

     label13:
        z0 = r0.<android.os.Handler$BlockingRunnable: boolean mDone>;

     label14:
        if z0 != 0 goto label18;

     label15:
        virtualinvoke r0.<java.lang.Object: void wait()>();

     label16:
        goto label13;

     label17:
        $r7 := @caughtexception;

        goto label13;

     label18:
        exitmonitor r0;

     label19:
        return 1;

        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.InterruptedException from label10 to label11 with label12;
        catch java.lang.Throwable from label10 to label11 with label07;
        catch java.lang.Throwable from label13 to label14 with label07;
        catch java.lang.InterruptedException from label15 to label16 with label17;
        catch java.lang.Throwable from label15 to label16 with label07;
        catch java.lang.Throwable from label18 to label19 with label07;
    }

    public void run()
    {
        android.os.Handler$BlockingRunnable r0;
        java.lang.Throwable r1, r2, r3, $r5, $r6, $r7;
        java.lang.Runnable $r4;

        r0 := @this: android.os.Handler$BlockingRunnable;

     label01:
        $r4 = r0.<android.os.Handler$BlockingRunnable: java.lang.Runnable mTask>;

        interfaceinvoke $r4.<java.lang.Runnable: void run()>();

     label02:
        entermonitor r0;

     label03:
        r0.<android.os.Handler$BlockingRunnable: boolean mDone> = 1;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r0;

     label04:
        return;

     label05:
        $r6 := @caughtexception;

        r3 = $r6;

     label06:
        exitmonitor r0;

     label07:
        throw r3;

     label08:
        $r7 := @caughtexception;

        r1 = $r7;

        entermonitor r0;

     label09:
        r0.<android.os.Handler$BlockingRunnable: boolean mDone> = 1;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r0;

     label10:
        throw r1;

     label11:
        $r5 := @caughtexception;

        r2 = $r5;

     label12:
        exitmonitor r0;

     label13:
        throw r2;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }
}
