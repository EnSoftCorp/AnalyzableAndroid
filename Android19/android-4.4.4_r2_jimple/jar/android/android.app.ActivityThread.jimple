public final class android.app.ActivityThread extends java.lang.Object
{
    private static final int ACTIVITY_THREAD_CHECKIN_VERSION;
    private static final boolean DEBUG_BACKUP;
    public static final boolean DEBUG_BROADCAST;
    public static final boolean DEBUG_CONFIGURATION;
    private static final boolean DEBUG_MEMORY_TRIM;
    static final boolean DEBUG_MESSAGES;
    private static final boolean DEBUG_PROVIDER;
    private static final boolean DEBUG_RESULTS;
    private static final boolean DEBUG_SERVICE;
    private static final java.lang.String HEAP_COLUMN;
    private static final java.lang.String HEAP_FULL_COLUMN;
    private static final int LOG_ON_PAUSE_CALLED;
    private static final int LOG_ON_RESUME_CALLED;
    private static final long MIN_TIME_BETWEEN_GCS;
    private static final java.util.regex.Pattern PATTERN_SEMICOLON;
    private static final int SQLITE_MEM_RELEASED_EVENT_LOG_TAG;
    public static final java.lang.String TAG;
    private static final android.graphics.Bitmap$Config THUMBNAIL_FORMAT;
    static final boolean localLOGV;
    private static android.app.ActivityThread sCurrentActivityThread;
    private static final java.lang.ThreadLocal sCurrentBroadcastIntent;
    static android.os.Handler sMainThreadHandler;
    static android.content.pm.IPackageManager sPackageManager;
    final android.util.ArrayMap mActivities;
    final java.util.ArrayList mAllApplications;
    final android.app.ActivityThread$ApplicationThread mAppThread;
    private android.graphics.Bitmap mAvailThumbnailBitmap;
    final android.util.ArrayMap mBackupAgents;
    android.app.ActivityThread$AppBindData mBoundApplication;
    android.content.res.Configuration mCompatConfiguration;
    android.content.res.Configuration mConfiguration;
    android.os.Bundle mCoreSettings;
    int mCurDefaultDisplayDpi;
    boolean mDensityCompatMode;
    final android.app.ActivityThread$GcIdler mGcIdler;
    boolean mGcIdlerScheduled;
    final android.app.ActivityThread$H mH;
    android.app.Application mInitialApplication;
    android.app.Instrumentation mInstrumentation;
    java.lang.String mInstrumentationAppDir;
    java.lang.String mInstrumentationAppLibraryDir;
    java.lang.String mInstrumentationAppPackage;
    java.lang.String mInstrumentedAppDir;
    java.lang.String mInstrumentedAppLibraryDir;
    boolean mJitEnabled;
    final android.util.ArrayMap mLocalProviders;
    final android.util.ArrayMap mLocalProvidersByName;
    final android.os.Looper mLooper;
    private android.content.res.Configuration mMainThreadConfig;
    android.app.ActivityThread$ActivityClientRecord mNewActivities;
    int mNumVisibleActivities;
    final android.util.ArrayMap mOnPauseListeners;
    final android.util.ArrayMap mPackages;
    android.content.res.Configuration mPendingConfiguration;
    android.app.ActivityThread$Profiler mProfiler;
    final android.util.ArrayMap mProviderMap;
    final android.util.ArrayMap mProviderRefCountMap;
    final java.util.ArrayList mRelaunchingActivities;
    final android.util.ArrayMap mResourcePackages;
    private final android.app.ResourcesManager mResourcesManager;
    final android.util.ArrayMap mServices;
    private android.app.ContextImpl mSystemContext;
    boolean mSystemThread;
    private android.graphics.Canvas mThumbnailCanvas;
    private int mThumbnailHeight;
    private int mThumbnailWidth;

    static void <clinit>()
    {
        android.graphics.Bitmap$Config $r0;
        java.util.regex.Pattern $r1;
        java.lang.ThreadLocal $r2;

        <android.app.ActivityThread: java.lang.String TAG> = "ActivityThread";

        <android.app.ActivityThread: int SQLITE_MEM_RELEASED_EVENT_LOG_TAG> = 75003;

        <android.app.ActivityThread: long MIN_TIME_BETWEEN_GCS> = 5000L;

        <android.app.ActivityThread: int LOG_ON_RESUME_CALLED> = 30022;

        <android.app.ActivityThread: int LOG_ON_PAUSE_CALLED> = 30021;

        <android.app.ActivityThread: java.lang.String HEAP_FULL_COLUMN> = "%13s %8s %8s %8s %8s %8s %8s %8s %8s %8s %8s";

        <android.app.ActivityThread: java.lang.String HEAP_COLUMN> = "%13s %8s %8s %8s %8s %8s %8s %8s";

        <android.app.ActivityThread: boolean DEBUG_SERVICE> = 0;

        <android.app.ActivityThread: boolean DEBUG_RESULTS> = 0;

        <android.app.ActivityThread: boolean DEBUG_PROVIDER> = 0;

        <android.app.ActivityThread: boolean DEBUG_MESSAGES> = 0;

        <android.app.ActivityThread: boolean DEBUG_MEMORY_TRIM> = 0;

        <android.app.ActivityThread: boolean DEBUG_CONFIGURATION> = 0;

        <android.app.ActivityThread: boolean DEBUG_BROADCAST> = 0;

        <android.app.ActivityThread: boolean DEBUG_BACKUP> = 0;

        <android.app.ActivityThread: int ACTIVITY_THREAD_CHECKIN_VERSION> = 3;

        $r0 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config RGB_565>;

        <android.app.ActivityThread: android.graphics.Bitmap$Config THUMBNAIL_FORMAT> = $r0;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(";");

        <android.app.ActivityThread: java.util.regex.Pattern PATTERN_SEMICOLON> = $r1;

        $r2 = new java.lang.ThreadLocal;

        specialinvoke $r2.<java.lang.ThreadLocal: void <init>()>();

        <android.app.ActivityThread: java.lang.ThreadLocal sCurrentBroadcastIntent> = $r2;

        return;
    }

    void <init>()
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$ApplicationThread $r1;
        android.os.Looper $r2;
        android.app.ActivityThread$H $r3;
        android.util.ArrayMap $r4, $r5, $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r15;
        java.util.ArrayList $r6, $r10;
        android.content.res.Configuration $r16;
        android.app.ActivityThread$GcIdler $r17;
        android.app.ResourcesManager $r18;

        r0 := @this: android.app.ActivityThread;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.app.ActivityThread$ApplicationThread;

        specialinvoke $r1.<android.app.ActivityThread$ApplicationThread: void <init>(android.app.ActivityThread,android.app.ActivityThread$1)>(r0, null);

        r0.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread mAppThread> = $r1;

        $r2 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        r0.<android.app.ActivityThread: android.os.Looper mLooper> = $r2;

        $r3 = new android.app.ActivityThread$H;

        specialinvoke $r3.<android.app.ActivityThread$H: void <init>(android.app.ActivityThread,android.app.ActivityThread$1)>(r0, null);

        r0.<android.app.ActivityThread: android.app.ActivityThread$H mH> = $r3;

        $r4 = new android.util.ArrayMap;

        specialinvoke $r4.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.ActivityThread: android.util.ArrayMap mActivities> = $r4;

        r0.<android.app.ActivityThread: android.app.ActivityThread$ActivityClientRecord mNewActivities> = null;

        r0.<android.app.ActivityThread: int mNumVisibleActivities> = 0;

        $r5 = new android.util.ArrayMap;

        specialinvoke $r5.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.ActivityThread: android.util.ArrayMap mServices> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<android.app.ActivityThread: java.util.ArrayList mAllApplications> = $r6;

        $r7 = new android.util.ArrayMap;

        specialinvoke $r7.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.ActivityThread: android.util.ArrayMap mBackupAgents> = $r7;

        r0.<android.app.ActivityThread: java.lang.String mInstrumentationAppDir> = null;

        r0.<android.app.ActivityThread: java.lang.String mInstrumentationAppLibraryDir> = null;

        r0.<android.app.ActivityThread: java.lang.String mInstrumentationAppPackage> = null;

        r0.<android.app.ActivityThread: java.lang.String mInstrumentedAppDir> = null;

        r0.<android.app.ActivityThread: java.lang.String mInstrumentedAppLibraryDir> = null;

        r0.<android.app.ActivityThread: boolean mSystemThread> = 0;

        r0.<android.app.ActivityThread: boolean mJitEnabled> = 0;

        $r8 = new android.util.ArrayMap;

        specialinvoke $r8.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.ActivityThread: android.util.ArrayMap mPackages> = $r8;

        $r9 = new android.util.ArrayMap;

        specialinvoke $r9.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.ActivityThread: android.util.ArrayMap mResourcePackages> = $r9;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r0.<android.app.ActivityThread: java.util.ArrayList mRelaunchingActivities> = $r10;

        r0.<android.app.ActivityThread: android.content.res.Configuration mPendingConfiguration> = null;

        $r11 = new android.util.ArrayMap;

        specialinvoke $r11.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.ActivityThread: android.util.ArrayMap mProviderMap> = $r11;

        $r12 = new android.util.ArrayMap;

        specialinvoke $r12.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.ActivityThread: android.util.ArrayMap mProviderRefCountMap> = $r12;

        $r13 = new android.util.ArrayMap;

        specialinvoke $r13.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.ActivityThread: android.util.ArrayMap mLocalProviders> = $r13;

        $r14 = new android.util.ArrayMap;

        specialinvoke $r14.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.ActivityThread: android.util.ArrayMap mLocalProvidersByName> = $r14;

        $r15 = new android.util.ArrayMap;

        specialinvoke $r15.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.ActivityThread: android.util.ArrayMap mOnPauseListeners> = $r15;

        $r17 = new android.app.ActivityThread$GcIdler;

        specialinvoke $r17.<android.app.ActivityThread$GcIdler: void <init>(android.app.ActivityThread)>(r0);

        r0.<android.app.ActivityThread: android.app.ActivityThread$GcIdler mGcIdler> = $r17;

        r0.<android.app.ActivityThread: boolean mGcIdlerScheduled> = 0;

        r0.<android.app.ActivityThread: android.os.Bundle mCoreSettings> = null;

        $r16 = new android.content.res.Configuration;

        specialinvoke $r16.<android.content.res.Configuration: void <init>()>();

        r0.<android.app.ActivityThread: android.content.res.Configuration mMainThreadConfig> = $r16;

        r0.<android.app.ActivityThread: int mThumbnailWidth> = -1;

        r0.<android.app.ActivityThread: int mThumbnailHeight> = -1;

        r0.<android.app.ActivityThread: android.graphics.Bitmap mAvailThumbnailBitmap> = null;

        r0.<android.app.ActivityThread: android.graphics.Canvas mThumbnailCanvas> = null;

        $r18 = staticinvoke <android.app.ResourcesManager: android.app.ResourcesManager getInstance()>();

        r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager> = $r18;

        return;
    }

    static void access$1000(android.app.ActivityThread, android.os.IBinder, boolean, boolean, int)
    {
        android.app.ActivityThread r0;
        android.os.IBinder r1;
        boolean z0, z1;
        int i0;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.os.IBinder;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        i0 := @parameter4: int;

        specialinvoke r0.<android.app.ActivityThread: void handlePauseActivity(android.os.IBinder,boolean,boolean,int)>(r1, z0, z1, i0);

        return;
    }

    static void access$1100(android.app.ActivityThread, android.os.IBinder, boolean, int)
    {
        android.app.ActivityThread r0;
        android.os.IBinder r1;
        boolean z0;
        int i0;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.os.IBinder;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        specialinvoke r0.<android.app.ActivityThread: void handleStopActivity(android.os.IBinder,boolean,int)>(r1, z0, i0);

        return;
    }

    static void access$1200(android.app.ActivityThread, android.os.IBinder, boolean)
    {
        android.app.ActivityThread r0;
        android.os.IBinder r1;
        boolean z0;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.os.IBinder;

        z0 := @parameter2: boolean;

        specialinvoke r0.<android.app.ActivityThread: void handleWindowVisibility(android.os.IBinder,boolean)>(r1, z0);

        return;
    }

    static void access$1300(android.app.ActivityThread, android.app.ActivityThread$ResultData)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$ResultData r1;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.app.ActivityThread$ResultData;

        specialinvoke r0.<android.app.ActivityThread: void handleSendResult(android.app.ActivityThread$ResultData)>(r1);

        return;
    }

    static void access$1400(android.app.ActivityThread, android.os.IBinder, boolean, int, boolean)
    {
        android.app.ActivityThread r0;
        android.os.IBinder r1;
        boolean z0, z1;
        int i0;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.os.IBinder;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        z1 := @parameter4: boolean;

        specialinvoke r0.<android.app.ActivityThread: void handleDestroyActivity(android.os.IBinder,boolean,int,boolean)>(r1, z0, i0, z1);

        return;
    }

    static void access$1500(android.app.ActivityThread, android.app.ActivityThread$AppBindData)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$AppBindData r1;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.app.ActivityThread$AppBindData;

        specialinvoke r0.<android.app.ActivityThread: void handleBindApplication(android.app.ActivityThread$AppBindData)>(r1);

        return;
    }

    static void access$1600(android.app.ActivityThread, android.app.ActivityThread$NewIntentData)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$NewIntentData r1;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.app.ActivityThread$NewIntentData;

        specialinvoke r0.<android.app.ActivityThread: void handleNewIntent(android.app.ActivityThread$NewIntentData)>(r1);

        return;
    }

    static void access$1700(android.app.ActivityThread, android.app.ActivityThread$ReceiverData)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$ReceiverData r1;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.app.ActivityThread$ReceiverData;

        specialinvoke r0.<android.app.ActivityThread: void handleReceiver(android.app.ActivityThread$ReceiverData)>(r1);

        return;
    }

    static void access$1800(android.app.ActivityThread, android.app.ActivityThread$CreateServiceData)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$CreateServiceData r1;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.app.ActivityThread$CreateServiceData;

        specialinvoke r0.<android.app.ActivityThread: void handleCreateService(android.app.ActivityThread$CreateServiceData)>(r1);

        return;
    }

    static void access$1900(android.app.ActivityThread, android.app.ActivityThread$BindServiceData)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$BindServiceData r1;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.app.ActivityThread$BindServiceData;

        specialinvoke r0.<android.app.ActivityThread: void handleBindService(android.app.ActivityThread$BindServiceData)>(r1);

        return;
    }

    static android.app.ResourcesManager access$200(android.app.ActivityThread)
    {
        android.app.ActivityThread r0;
        android.app.ResourcesManager $r1;

        r0 := @parameter0: android.app.ActivityThread;

        $r1 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        return $r1;
    }

    static void access$2000(android.app.ActivityThread, android.app.ActivityThread$BindServiceData)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$BindServiceData r1;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.app.ActivityThread$BindServiceData;

        specialinvoke r0.<android.app.ActivityThread: void handleUnbindService(android.app.ActivityThread$BindServiceData)>(r1);

        return;
    }

    static void access$2100(android.app.ActivityThread, android.app.ActivityThread$ServiceArgsData)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$ServiceArgsData r1;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.app.ActivityThread$ServiceArgsData;

        specialinvoke r0.<android.app.ActivityThread: void handleServiceArgs(android.app.ActivityThread$ServiceArgsData)>(r1);

        return;
    }

    static void access$2200(android.app.ActivityThread, android.os.IBinder)
    {
        android.app.ActivityThread r0;
        android.os.IBinder r1;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.os.IBinder;

        specialinvoke r0.<android.app.ActivityThread: void handleStopService(android.os.IBinder)>(r1);

        return;
    }

    static void access$2300(android.app.ActivityThread, android.os.IBinder)
    {
        android.app.ActivityThread r0;
        android.os.IBinder r1;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.os.IBinder;

        specialinvoke r0.<android.app.ActivityThread: void handleRequestThumbnail(android.os.IBinder)>(r1);

        return;
    }

    static void access$2400(android.app.ActivityThread, android.app.ActivityThread$DumpComponentInfo)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$DumpComponentInfo r1;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.app.ActivityThread$DumpComponentInfo;

        specialinvoke r0.<android.app.ActivityThread: void handleDumpService(android.app.ActivityThread$DumpComponentInfo)>(r1);

        return;
    }

    static void access$2500(android.app.ActivityThread, android.app.ActivityThread$CreateBackupAgentData)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$CreateBackupAgentData r1;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.app.ActivityThread$CreateBackupAgentData;

        specialinvoke r0.<android.app.ActivityThread: void handleCreateBackupAgent(android.app.ActivityThread$CreateBackupAgentData)>(r1);

        return;
    }

    static void access$2600(android.app.ActivityThread, android.app.ActivityThread$CreateBackupAgentData)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$CreateBackupAgentData r1;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.app.ActivityThread$CreateBackupAgentData;

        specialinvoke r0.<android.app.ActivityThread: void handleDestroyBackupAgent(android.app.ActivityThread$CreateBackupAgentData)>(r1);

        return;
    }

    static void access$2700(android.app.ActivityThread, android.app.ActivityThread$DumpComponentInfo)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$DumpComponentInfo r1;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.app.ActivityThread$DumpComponentInfo;

        specialinvoke r0.<android.app.ActivityThread: void handleDumpActivity(android.app.ActivityThread$DumpComponentInfo)>(r1);

        return;
    }

    static void access$2800(android.app.ActivityThread, android.app.ActivityThread$DumpComponentInfo)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$DumpComponentInfo r1;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.app.ActivityThread$DumpComponentInfo;

        specialinvoke r0.<android.app.ActivityThread: void handleDumpProvider(android.app.ActivityThread$DumpComponentInfo)>(r1);

        return;
    }

    static void access$2900(android.app.ActivityThread, android.os.IBinder, boolean)
    {
        android.app.ActivityThread r0;
        android.os.IBinder r1;
        boolean z0;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.os.IBinder;

        z0 := @parameter2: boolean;

        specialinvoke r0.<android.app.ActivityThread: void handleSleeping(android.os.IBinder,boolean)>(r1, z0);

        return;
    }

    static void access$300(android.app.ActivityThread, int, java.lang.Object, int, int)
    {
        android.app.ActivityThread r0;
        int i0, i1, i2;
        java.lang.Object r1;

        r0 := @parameter0: android.app.ActivityThread;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        specialinvoke r0.<android.app.ActivityThread: void sendMessage(int,java.lang.Object,int,int)>(i0, r1, i1, i2);

        return;
    }

    static void access$3000(android.app.ActivityThread, android.os.Bundle)
    {
        android.app.ActivityThread r0;
        android.os.Bundle r1;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.os.Bundle;

        specialinvoke r0.<android.app.ActivityThread: void handleSetCoreSettings(android.os.Bundle)>(r1);

        return;
    }

    static void access$3100(android.app.ActivityThread, android.app.ActivityThread$UpdateCompatibilityData)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$UpdateCompatibilityData r1;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.app.ActivityThread$UpdateCompatibilityData;

        specialinvoke r0.<android.app.ActivityThread: void handleUpdatePackageCompatibilityInfo(android.app.ActivityThread$UpdateCompatibilityData)>(r1);

        return;
    }

    static void access$400(android.app.ActivityThread, int, java.lang.Object)
    {
        android.app.ActivityThread r0;
        int i0;
        java.lang.Object r1;

        r0 := @parameter0: android.app.ActivityThread;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        specialinvoke r0.<android.app.ActivityThread: void sendMessage(int,java.lang.Object)>(i0, r1);

        return;
    }

    static void access$500(android.app.ActivityThread, int, java.lang.Object, int)
    {
        android.app.ActivityThread r0;
        int i0, i1;
        java.lang.Object r1;

        r0 := @parameter0: android.app.ActivityThread;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        i1 := @parameter3: int;

        specialinvoke r0.<android.app.ActivityThread: void sendMessage(int,java.lang.Object,int)>(i0, r1, i1);

        return;
    }

    static void access$600(android.app.ActivityThread, int, java.lang.Object, int, int, boolean)
    {
        android.app.ActivityThread r0;
        int i0, i1, i2;
        java.lang.Object r1;
        boolean z0;

        r0 := @parameter0: android.app.ActivityThread;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        z0 := @parameter5: boolean;

        specialinvoke r0.<android.app.ActivityThread: void sendMessage(int,java.lang.Object,int,int,boolean)>(i0, r1, i1, i2, z0);

        return;
    }

    static void access$700(android.app.ActivityThread, java.io.FileDescriptor)
    {
        android.app.ActivityThread r0;
        java.io.FileDescriptor r1;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: java.io.FileDescriptor;

        specialinvoke r0.<android.app.ActivityThread: void dumpGraphicsInfo(java.io.FileDescriptor)>(r1);

        return;
    }

    static void access$800(android.app.ActivityThread, android.app.ActivityThread$ActivityClientRecord, android.content.Intent)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$ActivityClientRecord r1;
        android.content.Intent r2;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.app.ActivityThread$ActivityClientRecord;

        r2 := @parameter2: android.content.Intent;

        specialinvoke r0.<android.app.ActivityThread: void handleLaunchActivity(android.app.ActivityThread$ActivityClientRecord,android.content.Intent)>(r1, r2);

        return;
    }

    static void access$900(android.app.ActivityThread, android.app.ActivityThread$ActivityClientRecord)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$ActivityClientRecord r1;

        r0 := @parameter0: android.app.ActivityThread;

        r1 := @parameter1: android.app.ActivityThread$ActivityClientRecord;

        specialinvoke r0.<android.app.ActivityThread: void handleRelaunchActivity(android.app.ActivityThread$ActivityClientRecord)>(r1);

        return;
    }

    private void attach(boolean)
    {
        android.app.ActivityThread r0;
        boolean z0;
        java.lang.Exception r1, $r16;
        android.app.Application r2;
        android.app.IActivityManager r3;
        int $i0, $i1;
        android.app.Instrumentation $r5;
        android.app.ContextImpl $r6, $r8;
        android.app.LoadedApk $r7;
        java.util.ArrayList $r9;
        android.app.ActivityThread$DropBoxReporter $r10;
        android.app.ActivityThread$1 $r11;
        android.app.ActivityThread$2 $r12;
        android.os.IBinder $r13;
        android.app.ActivityThread$ApplicationThread $r14, $r15;
        android.os.RemoteException $r17;
        java.lang.StringBuilder $r18, $r21, $r22;
        java.lang.RuntimeException $r19;
        java.lang.String $r20, $r23;

        r0 := @this: android.app.ActivityThread;

        z0 := @parameter0: boolean;

        <android.app.ActivityThread: android.app.ActivityThread sCurrentActivityThread> = r0;

        r0.<android.app.ActivityThread: boolean mSystemThread> = z0;

        if z0 != 0 goto label3;

        $r11 = new android.app.ActivityThread$1;

        specialinvoke $r11.<android.app.ActivityThread$1: void <init>(android.app.ActivityThread)>(r0);

        staticinvoke <android.view.ViewRootImpl: void addFirstDrawHandler(java.lang.Runnable)>($r11);

        $i1 = staticinvoke <android.os.UserHandle: int myUserId()>();

        staticinvoke <android.ddm.DdmHandleAppName: void setAppName(java.lang.String,int)>("<pre-initialized>", $i1);

        $r14 = r0.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread mAppThread>;

        $r13 = virtualinvoke $r14.<android.app.ActivityThread$ApplicationThread: android.os.IBinder asBinder()>();

        staticinvoke <com.android.internal.os.RuntimeInit: void setApplicationObject(android.os.IBinder)>($r13);

        r3 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

     label1:
        $r15 = r0.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread mAppThread>;

        interfaceinvoke r3.<android.app.IActivityManager: void attachApplication(android.app.IApplicationThread)>($r15);

     label2:
        $r10 = new android.app.ActivityThread$DropBoxReporter;

        specialinvoke $r10.<android.app.ActivityThread$DropBoxReporter: void <init>(android.app.ActivityThread)>(r0);

        staticinvoke <libcore.io.DropBox: void setReporter(libcore.io.DropBox$Reporter)>($r10);

        $r12 = new android.app.ActivityThread$2;

        specialinvoke $r12.<android.app.ActivityThread$2: void <init>(android.app.ActivityThread)>(r0);

        staticinvoke <android.view.ViewRootImpl: void addConfigCallback(android.content.ComponentCallbacks)>($r12);

        return;

     label3:
        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        staticinvoke <android.ddm.DdmHandleAppName: void setAppName(java.lang.String,int)>("system_process", $i0);

     label4:
        $r5 = new android.app.Instrumentation;

        specialinvoke $r5.<android.app.Instrumentation: void <init>()>();

        r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation> = $r5;

        $r6 = virtualinvoke r0.<android.app.ActivityThread: android.app.ContextImpl getSystemContext()>();

        $r7 = $r6.<android.app.ContextImpl: android.app.LoadedApk mPackageInfo>;

        $r8 = staticinvoke <android.app.ContextImpl: android.app.ContextImpl createAppContext(android.app.ActivityThread,android.app.LoadedApk)>(r0, $r7);

        r2 = staticinvoke <android.app.Instrumentation: android.app.Application newApplication(java.lang.Class,android.content.Context)>(class "android/app/Application", $r8);

        $r9 = r0.<android.app.ActivityThread: java.util.ArrayList mAllApplications>;

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        r0.<android.app.ActivityThread: android.app.Application mInitialApplication> = r2;

        virtualinvoke r2.<android.app.Application: void onCreate()>();

     label5:
        goto label2;

     label6:
        $r16 := @caughtexception;

        r1 = $r16;

        $r19 = new java.lang.RuntimeException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to instantiate Application():");

        $r20 = virtualinvoke r1.<java.lang.Exception: java.lang.String toString()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r23, r1);

        throw $r19;

     label7:
        $r17 := @caughtexception;

        goto label2;

        catch android.os.RemoteException from label1 to label2 with label7;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    static final void cleanUpPendingRemoveWindows(android.app.ActivityThread$ActivityClientRecord)
    {
        android.app.ActivityThread$ActivityClientRecord r0;
        android.os.IBinder r1;
        android.view.View $r2, $r3, $r5;
        android.view.WindowManager $r4;
        android.view.WindowManagerGlobal $r6;
        android.app.Activity $r7;
        java.lang.Class $r8;
        java.lang.String $r9;

        r0 := @parameter0: android.app.ActivityThread$ActivityClientRecord;

        $r2 = r0.<android.app.ActivityThread$ActivityClientRecord: android.view.View mPendingRemoveWindow>;

        if $r2 == null goto label1;

        $r4 = r0.<android.app.ActivityThread$ActivityClientRecord: android.view.WindowManager mPendingRemoveWindowManager>;

        $r3 = r0.<android.app.ActivityThread$ActivityClientRecord: android.view.View mPendingRemoveWindow>;

        interfaceinvoke $r4.<android.view.WindowManager: void removeViewImmediate(android.view.View)>($r3);

        $r5 = r0.<android.app.ActivityThread$ActivityClientRecord: android.view.View mPendingRemoveWindow>;

        r1 = virtualinvoke $r5.<android.view.View: android.os.IBinder getWindowToken()>();

        if r1 == null goto label1;

        $r6 = staticinvoke <android.view.WindowManagerGlobal: android.view.WindowManagerGlobal getInstance()>();

        $r7 = r0.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r6.<android.view.WindowManagerGlobal: void closeAll(android.os.IBinder,java.lang.String,java.lang.String)>(r1, $r9, "Activity");

     label1:
        r0.<android.app.ActivityThread$ActivityClientRecord: android.view.View mPendingRemoveWindow> = null;

        r0.<android.app.ActivityThread$ActivityClientRecord: android.view.WindowManager mPendingRemoveWindowManager> = null;

        return;
    }

    private android.content.Context createBaseContextForActivity(android.app.ActivityThread$ActivityClientRecord, android.app.Activity)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$ActivityClientRecord r1;
        android.app.Activity r2;
        android.app.ContextImpl r3;
        android.content.Context r4;
        java.lang.String r5, $r10;
        android.hardware.display.DisplayManagerGlobal r6;
        int[] r7;
        int i0, i1, i2;
        android.os.IBinder $r8, $r12;
        android.app.LoadedApk $r9, $r11;
        boolean $z0, $z1;
        android.view.Display $r13;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$ActivityClientRecord;

        r2 := @parameter1: android.app.Activity;

        $r9 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.LoadedApk packageInfo>;

        $r8 = r1.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder token>;

        r3 = staticinvoke <android.app.ContextImpl: android.app.ContextImpl createActivityContext(android.app.ActivityThread,android.app.LoadedApk,android.os.IBinder)>(r0, $r9, $r8);

        virtualinvoke r3.<android.app.ContextImpl: void setOuterContext(android.content.Context)>(r2);

        r4 = r3;

        r5 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("debug.second-display.pkg");

        if r5 == null goto label2;

        $z0 = virtualinvoke r5.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r11 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.LoadedApk packageInfo>;

        $r10 = $r11.<android.app.LoadedApk: java.lang.String mPackageName>;

        $z1 = virtualinvoke $r10.<java.lang.String: boolean contains(java.lang.CharSequence)>(r5);

        if $z1 == 0 goto label2;

        r6 = staticinvoke <android.hardware.display.DisplayManagerGlobal: android.hardware.display.DisplayManagerGlobal getInstance()>();

        r7 = virtualinvoke r6.<android.hardware.display.DisplayManagerGlobal: int[] getDisplayIds()>();

        i0 = lengthof r7;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        i2 = r7[i1];

        if i2 == 0 goto label3;

        $r12 = r1.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder token>;

        $r13 = virtualinvoke r6.<android.hardware.display.DisplayManagerGlobal: android.view.Display getRealDisplay(int,android.os.IBinder)>(i2, $r12);

        r4 = virtualinvoke r3.<android.app.ContextImpl: android.content.Context createDisplayContext(android.view.Display)>($r13);

     label2:
        return r4;

     label3:
        i1 = i1 + 1;

        goto label1;
    }

    private android.graphics.Bitmap createThumbnailBitmap(android.app.ActivityThread$ActivityClientRecord)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$ActivityClientRecord r1;
        android.graphics.Bitmap r2;
        java.lang.Exception r3, $r14;
        android.graphics.Canvas r4, $r7;
        int i0, i1;
        android.content.res.Resources r5, $r9;
        android.app.Activity $r6, $r8, $r12, $r13;
        boolean $z0, $z1;
        android.util.DisplayMetrics $r10;
        android.graphics.Bitmap$Config $r11;
        android.app.Instrumentation $r15;
        java.lang.StringBuilder $r16, $r19, $r22, $r23, $r26;
        java.lang.RuntimeException $r17;
        android.content.Intent $r18;
        java.lang.String $r20, $r24, $r25;
        android.content.ComponentName $r21;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$ActivityClientRecord;

        r2 = r0.<android.app.ActivityThread: android.graphics.Bitmap mAvailThumbnailBitmap>;

        if r2 != null goto label06;

     label01:
        i0 = r0.<android.app.ActivityThread: int mThumbnailWidth>;

     label02:
        if i0 >= 0 goto label14;

     label03:
        $r12 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        r5 = virtualinvoke $r12.<android.app.Activity: android.content.res.Resources getResources()>();

        i1 = virtualinvoke r5.<android.content.res.Resources: int getDimensionPixelSize(int)>(17104897);

        r0.<android.app.ActivityThread: int mThumbnailHeight> = i1;

        i0 = virtualinvoke r5.<android.content.res.Resources: int getDimensionPixelSize(int)>(17104898);

        r0.<android.app.ActivityThread: int mThumbnailWidth> = i0;

     label04:
        if i0 <= 0 goto label06;

        if i1 <= 0 goto label06;

     label05:
        $r8 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r9 = virtualinvoke $r8.<android.app.Activity: android.content.res.Resources getResources()>();

        $r10 = virtualinvoke $r9.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $r11 = <android.app.ActivityThread: android.graphics.Bitmap$Config THUMBNAIL_FORMAT>;

        r2 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.util.DisplayMetrics,int,int,android.graphics.Bitmap$Config)>($r10, i0, i1, $r11);

        virtualinvoke r2.<android.graphics.Bitmap: void eraseColor(int)>(0);

     label06:
        if r2 == null goto label18;

     label07:
        r4 = r0.<android.app.ActivityThread: android.graphics.Canvas mThumbnailCanvas>;

     label08:
        if r4 != null goto label10;

     label09:
        $r7 = new android.graphics.Canvas;

        specialinvoke $r7.<android.graphics.Canvas: void <init>()>();

        r4 = $r7;

        r0.<android.app.ActivityThread: android.graphics.Canvas mThumbnailCanvas> = r4;

     label10:
        virtualinvoke r4.<android.graphics.Canvas: void setBitmap(android.graphics.Bitmap)>(r2);

        $r6 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z0 = virtualinvoke $r6.<android.app.Activity: boolean onCreateThumbnail(android.graphics.Bitmap,android.graphics.Canvas)>(r2, r4);

        if $z0 != 0 goto label12;

        r0.<android.app.ActivityThread: android.graphics.Bitmap mAvailThumbnailBitmap> = r2;

     label11:
        r2 = null;

     label12:
        virtualinvoke r4.<android.graphics.Canvas: void setBitmap(android.graphics.Bitmap)>(null);

     label13:
        return r2;

     label14:
        i1 = r0.<android.app.ActivityThread: int mThumbnailHeight>;

     label15:
        goto label04;

     label16:
        $r14 := @caughtexception;

        r3 = $r14;

        $r15 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r13 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z1 = virtualinvoke $r15.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>($r13, r3);

        if $z1 != 0 goto label17;

        $r17 = new java.lang.RuntimeException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create thumbnail of ");

        $r18 = r1.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        $r21 = virtualinvoke $r18.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r20 = virtualinvoke $r21.<android.content.ComponentName: java.lang.String toShortString()>();

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r25 = virtualinvoke r3.<java.lang.Exception: java.lang.String toString()>();

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r24 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r24, r3);

        throw $r17;

     label17:
        r2 = null;

     label18:
        return r2;

        catch java.lang.Exception from label01 to label02 with label16;
        catch java.lang.Exception from label03 to label04 with label16;
        catch java.lang.Exception from label05 to label06 with label16;
        catch java.lang.Exception from label07 to label08 with label16;
        catch java.lang.Exception from label09 to label10 with label16;
        catch java.lang.Exception from label10 to label11 with label16;
        catch java.lang.Exception from label12 to label13 with label16;
        catch java.lang.Exception from label14 to label15 with label16;
    }

    public static android.app.ActivityThread currentActivityThread()
    {
        android.app.ActivityThread $r0;

        $r0 = <android.app.ActivityThread: android.app.ActivityThread sCurrentActivityThread>;

        return $r0;
    }

    public static android.app.Application currentApplication()
    {
        android.app.ActivityThread r0;
        android.app.Application $r1;

        r0 = staticinvoke <android.app.ActivityThread: android.app.ActivityThread currentActivityThread()>();

        if r0 == null goto label1;

        $r1 = r0.<android.app.ActivityThread: android.app.Application mInitialApplication>;

        return $r1;

     label1:
        return null;
    }

    public static java.lang.String currentPackageName()
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$AppBindData $r1, $r2;
        android.content.pm.ApplicationInfo $r3;
        java.lang.String $r4;

        r0 = staticinvoke <android.app.ActivityThread: android.app.ActivityThread currentActivityThread()>();

        if r0 == null goto label1;

        $r1 = r0.<android.app.ActivityThread: android.app.ActivityThread$AppBindData mBoundApplication>;

        if $r1 == null goto label1;

        $r2 = r0.<android.app.ActivityThread: android.app.ActivityThread$AppBindData mBoundApplication>;

        $r3 = $r2.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo>;

        $r4 = $r3.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        return $r4;

     label1:
        return null;
    }

    public static java.lang.String currentProcessName()
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$AppBindData $r1, $r2;
        java.lang.String $r3;

        r0 = staticinvoke <android.app.ActivityThread: android.app.ActivityThread currentActivityThread()>();

        if r0 == null goto label1;

        $r1 = r0.<android.app.ActivityThread: android.app.ActivityThread$AppBindData mBoundApplication>;

        if $r1 == null goto label1;

        $r2 = r0.<android.app.ActivityThread: android.app.ActivityThread$AppBindData mBoundApplication>;

        $r3 = $r2.<android.app.ActivityThread$AppBindData: java.lang.String processName>;

        return $r3;

     label1:
        return null;
    }

    private void deliverNewIntents(android.app.ActivityThread$ActivityClientRecord, java.util.List)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$ActivityClientRecord r1;
        java.util.List r2;
        int i0, i1;
        android.content.Intent r3;
        java.lang.Object $r4;
        android.app.Activity $r5, $r7, $r9;
        java.lang.ClassLoader $r6;
        android.app.FragmentManagerImpl $r8;
        android.app.Instrumentation $r10;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$ActivityClientRecord;

        r2 := @parameter1: java.util.List;

        i0 = interfaceinvoke r2.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r4 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        r3 = (android.content.Intent) $r4;

        $r5 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r6 = virtualinvoke $r5.<android.app.Activity: java.lang.ClassLoader getClassLoader()>();

        virtualinvoke r3.<android.content.Intent: void setExtrasClassLoader(java.lang.ClassLoader)>($r6);

        $r7 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r8 = $r7.<android.app.Activity: android.app.FragmentManagerImpl mFragments>;

        virtualinvoke $r8.<android.app.FragmentManagerImpl: void noteStateNotSaved()>();

        $r10 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r9 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r10.<android.app.Instrumentation: void callActivityOnNewIntent(android.app.Activity,android.content.Intent)>($r9, r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void deliverResults(android.app.ActivityThread$ActivityClientRecord, java.util.List)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$ActivityClientRecord r1;
        java.util.List r2;
        int i0, i1, $i2, $i3;
        android.app.ResultInfo r3;
        java.lang.Exception r4, $r14;
        java.lang.Object $r5;
        android.content.Intent $r6, $r7, $r12, $r20;
        java.lang.String $r8, $r22, $r26, $r27;
        android.app.Activity $r9, $r10, $r13;
        java.lang.ClassLoader $r11;
        boolean $z0;
        android.app.Instrumentation $r15;
        java.lang.StringBuilder $r16, $r18, $r19, $r21, $r24, $r25, $r28;
        java.lang.RuntimeException $r17;
        android.content.ComponentName $r23;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$ActivityClientRecord;

        r2 := @parameter1: java.util.List;

        i0 = interfaceinvoke r2.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label6;

        $r5 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        r3 = (android.app.ResultInfo) $r5;

     label2:
        $r6 = r3.<android.app.ResultInfo: android.content.Intent mData>;

        if $r6 == null goto label3;

        $r12 = r3.<android.app.ResultInfo: android.content.Intent mData>;

        $r10 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r11 = virtualinvoke $r10.<android.app.Activity: java.lang.ClassLoader getClassLoader()>();

        virtualinvoke $r12.<android.content.Intent: void setExtrasClassLoader(java.lang.ClassLoader)>($r11);

     label3:
        $r9 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r8 = r3.<android.app.ResultInfo: java.lang.String mResultWho>;

        $i3 = r3.<android.app.ResultInfo: int mRequestCode>;

        $i2 = r3.<android.app.ResultInfo: int mResultCode>;

        $r7 = r3.<android.app.ResultInfo: android.content.Intent mData>;

        virtualinvoke $r9.<android.app.Activity: void dispatchActivityResult(java.lang.String,int,int,android.content.Intent)>($r8, $i3, $i2, $r7);

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        $r14 := @caughtexception;

        r4 = $r14;

        $r15 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r13 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z0 = virtualinvoke $r15.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>($r13, r4);

        if $z0 != 0 goto label4;

        $r17 = new java.lang.RuntimeException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure delivering result ");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to activity ");

        $r20 = r1.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        $r23 = virtualinvoke $r20.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r22 = virtualinvoke $r23.<android.content.ComponentName: java.lang.String toShortString()>();

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r27 = virtualinvoke r4.<java.lang.Exception: java.lang.String toString()>();

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r26 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r26, r4);

        throw $r17;

     label6:
        return;

        catch java.lang.Exception from label2 to label3 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    private native void dumpGraphicsInfo(java.io.FileDescriptor);

    public static void dumpMemInfoTable(java.io.PrintWriter, android.os.Debug$MemoryInfo, boolean, boolean, boolean, int, java.lang.String, long, long, long, long, long, long)
    {
        java.io.PrintWriter r0;
        android.os.Debug$MemoryInfo r1;
        boolean z0, z1, z2;
        int i0, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, i29, i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i44, $i46, $i47, $i48, $i50, $i51, $i52, $i53, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102;
        java.lang.String r2, $r45, $r47, $r76, $r79, $r108;
        long l1, l2, l3, l4, l5, l6, $l42, $l43, $l45, $l49, $l54, $l55, $l85, $l86, $l87;
        java.lang.Object[] r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, $r13, r14, r15, $r16, $r17, $r82, $r83, $r84;
        java.lang.Integer $r18, $r19, $r20, $r22, $r23, $r26, $r27, $r28, $r30, $r33, $r34, $r35, $r36, $r37, $r38, $r41, $r43, $r44, $r46, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r73, $r74, $r75, $r77, $r78, $r80, $r81, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r98, $r102, $r105, $r106, $r107;
        java.lang.Long $r21, $r24, $r25, $r29, $r31, $r32, $r39, $r40, $r42, $r70, $r71, $r72, $r99, $r100, $r101, $r103, $r104, $r109;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: android.os.Debug$MemoryInfo;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        i0 := @parameter5: int;

        r2 := @parameter6: java.lang.String;

        l1 := @parameter7: long;

        l2 := @parameter8: long;

        l3 := @parameter9: long;

        l4 := @parameter10: long;

        l5 := @parameter11: long;

        l6 := @parameter12: long;

        if z0 == 0 goto label02;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>(3);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>(i0);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>(l1);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>(l4);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("N/A,");

        $l85 = l1 + l4;

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>($l85);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>(l2);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>(l5);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("N/A,");

        $l86 = l2 + l5;

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>($l86);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>(l3);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>(l6);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("N/A,");

        $l87 = l3 + l6;

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>($l87);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i88 = r1.<android.os.Debug$MemoryInfo: int nativePss>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i88);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i89 = r1.<android.os.Debug$MemoryInfo: int dalvikPss>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i89);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i90 = r1.<android.os.Debug$MemoryInfo: int otherPss>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i90);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i91 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalPss()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i91);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i92 = r1.<android.os.Debug$MemoryInfo: int nativeSwappablePss>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i92);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i93 = r1.<android.os.Debug$MemoryInfo: int dalvikSwappablePss>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i93);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i94 = r1.<android.os.Debug$MemoryInfo: int otherSwappablePss>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i94);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i95 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalSwappablePss()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i95);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i96 = r1.<android.os.Debug$MemoryInfo: int nativeSharedDirty>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i96);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i97 = r1.<android.os.Debug$MemoryInfo: int dalvikSharedDirty>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i97);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i98 = r1.<android.os.Debug$MemoryInfo: int otherSharedDirty>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i98);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i71 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalSharedDirty()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i71);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i70 = r1.<android.os.Debug$MemoryInfo: int nativeSharedClean>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i70);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i73 = r1.<android.os.Debug$MemoryInfo: int dalvikSharedClean>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i73);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i72 = r1.<android.os.Debug$MemoryInfo: int otherSharedClean>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i72);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i75 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalSharedClean()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i75);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i74 = r1.<android.os.Debug$MemoryInfo: int nativePrivateDirty>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i74);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i77 = r1.<android.os.Debug$MemoryInfo: int dalvikPrivateDirty>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i77);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i76 = r1.<android.os.Debug$MemoryInfo: int otherPrivateDirty>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i76);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i79 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalPrivateDirty()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i79);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i78 = r1.<android.os.Debug$MemoryInfo: int nativePrivateClean>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i78);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i81 = r1.<android.os.Debug$MemoryInfo: int dalvikPrivateClean>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i81);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i80 = r1.<android.os.Debug$MemoryInfo: int otherPrivateClean>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i80);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i82 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalPrivateClean()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i82);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        i30 = 0;

     label01:
        if i30 >= 16 goto label17;

        $r108 = staticinvoke <android.os.Debug$MemoryInfo: java.lang.String getOtherLabel(int)>(i30);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r108);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i84 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherPss(int)>(i30);

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i84);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i83 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherSwappablePss(int)>(i30);

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i83);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i101 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherSharedDirty(int)>(i30);

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i101);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i102 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherSharedClean(int)>(i30);

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i102);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i99 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherPrivateDirty(int)>(i30);

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i99);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        $i100 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherPrivateClean(int)>(i30);

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i100);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        i30 = i30 + 1;

        goto label01;

     label02:
        if z1 == 0 goto label08;

        $r84 = newarray (java.lang.Object)[11];

        $r84[0] = "";

        $r84[1] = "Pss";

        $r84[2] = "Pss";

        $r84[3] = "Shared";

        $r84[4] = "Private";

        $r84[5] = "Shared";

        $r84[6] = "Private";

        $r84[7] = "Swapped";

        $r84[8] = "Heap";

        $r84[9] = "Heap";

        $r84[10] = "Heap";

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%13s %8s %8s %8s %8s %8s %8s %8s %8s %8s %8s", $r84);

        $r83 = newarray (java.lang.Object)[11];

        $r83[0] = "";

        $r83[1] = "Total";

        $r83[2] = "Clean";

        $r83[3] = "Dirty";

        $r83[4] = "Dirty";

        $r83[5] = "Clean";

        $r83[6] = "Clean";

        $r83[7] = "Dirty";

        $r83[8] = "Size";

        $r83[9] = "Alloc";

        $r83[10] = "Free";

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%13s %8s %8s %8s %8s %8s %8s %8s %8s %8s %8s", $r83);

        $r82 = newarray (java.lang.Object)[11];

        $r82[0] = "";

        $r82[1] = "------";

        $r82[2] = "------";

        $r82[3] = "------";

        $r82[4] = "------";

        $r82[5] = "------";

        $r82[6] = "------";

        $r82[7] = "------";

        $r82[8] = "------";

        $r82[9] = "------";

        $r82[10] = "------";

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%13s %8s %8s %8s %8s %8s %8s %8s %8s %8s %8s", $r82);

        r15 = newarray (java.lang.Object)[11];

        r15[0] = "Native Heap";

        $i57 = r1.<android.os.Debug$MemoryInfo: int nativePss>;

        $r81 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i57);

        r15[1] = $r81;

        $i56 = r1.<android.os.Debug$MemoryInfo: int nativeSwappablePss>;

        $r94 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i56);

        r15[2] = $r94;

        $i62 = r1.<android.os.Debug$MemoryInfo: int nativeSharedDirty>;

        $r93 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i62);

        r15[3] = $r93;

        $i61 = r1.<android.os.Debug$MemoryInfo: int nativePrivateDirty>;

        $r92 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i61);

        r15[4] = $r92;

        $i60 = r1.<android.os.Debug$MemoryInfo: int nativeSharedClean>;

        $r91 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i60);

        r15[5] = $r91;

        $i59 = r1.<android.os.Debug$MemoryInfo: int nativePrivateClean>;

        $r90 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i59);

        r15[6] = $r90;

        $i58 = r1.<android.os.Debug$MemoryInfo: int nativeSwappedOut>;

        $r102 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i58);

        r15[7] = $r102;

        $r101 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        r15[8] = $r101;

        $r104 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        r15[9] = $r104;

        $r103 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l3);

        r15[10] = $r103;

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%13s %8s %8s %8s %8s %8s %8s %8s %8s %8s %8s", r15);

        r14 = newarray (java.lang.Object)[11];

        r14[0] = "Dalvik Heap";

        $i67 = r1.<android.os.Debug$MemoryInfo: int dalvikPss>;

        $r105 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i67);

        r14[1] = $r105;

        $i68 = r1.<android.os.Debug$MemoryInfo: int dalvikSwappablePss>;

        $r107 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i68);

        r14[2] = $r107;

        $i69 = r1.<android.os.Debug$MemoryInfo: int dalvikSharedDirty>;

        $r106 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i69);

        r14[3] = $r106;

        $i64 = r1.<android.os.Debug$MemoryInfo: int dalvikPrivateDirty>;

        $r95 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i64);

        r14[4] = $r95;

        $i63 = r1.<android.os.Debug$MemoryInfo: int dalvikSharedClean>;

        $r96 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i63);

        r14[5] = $r96;

        $i65 = r1.<android.os.Debug$MemoryInfo: int dalvikPrivateClean>;

        $r98 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i65);

        r14[6] = $r98;

        $i66 = r1.<android.os.Debug$MemoryInfo: int dalvikSwappedOut>;

        $r97 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i66);

        r14[7] = $r97;

        $r100 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l4);

        r14[8] = $r100;

        $r99 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l5);

        r14[9] = $r99;

        $r109 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l6);

        r14[10] = $r109;

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%13s %8s %8s %8s %8s %8s %8s %8s %8s %8s %8s", r14);

     label03:
        i7 = r1.<android.os.Debug$MemoryInfo: int otherPss>;

        i9 = r1.<android.os.Debug$MemoryInfo: int otherSwappablePss>;

        i8 = r1.<android.os.Debug$MemoryInfo: int otherSharedDirty>;

        i11 = r1.<android.os.Debug$MemoryInfo: int otherPrivateDirty>;

        i10 = r1.<android.os.Debug$MemoryInfo: int otherSharedClean>;

        i13 = r1.<android.os.Debug$MemoryInfo: int otherPrivateClean>;

        i12 = r1.<android.os.Debug$MemoryInfo: int otherSwappedOut>;

        i14 = 0;

     label04:
        if i14 >= 16 goto label10;

        i23 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherPss(int)>(i14);

        i26 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherSwappablePss(int)>(i14);

        i27 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherSharedDirty(int)>(i14);

        i24 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherPrivateDirty(int)>(i14);

        i25 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherSharedClean(int)>(i14);

        i29 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherPrivateClean(int)>(i14);

        i28 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherSwappedOut(int)>(i14);

        if i23 != 0 goto label05;

        if i27 != 0 goto label05;

        if i24 != 0 goto label05;

        if i25 != 0 goto label05;

        if i29 != 0 goto label05;

        if i28 == 0 goto label07;

     label05:
        if z1 == 0 goto label09;

        r11 = newarray (java.lang.Object)[11];

        $r76 = staticinvoke <android.os.Debug$MemoryInfo: java.lang.String getOtherLabel(int)>(i14);

        r11[0] = $r76;

        $r73 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i23);

        r11[1] = $r73;

        $r74 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i26);

        r11[2] = $r74;

        $r89 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i27);

        r11[3] = $r89;

        $r88 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i24);

        r11[4] = $r88;

        $r87 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i25);

        r11[5] = $r87;

        $r86 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i29);

        r11[6] = $r86;

        $r85 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i28);

        r11[7] = $r85;

        r11[8] = "";

        r11[9] = "";

        r11[10] = "";

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%13s %8s %8s %8s %8s %8s %8s %8s %8s %8s %8s", r11);

     label06:
        i7 = i7 - i23;

        i9 = i9 - i26;

        i8 = i8 - i27;

        i11 = i11 - i24;

        i10 = i10 - i25;

        i13 = i13 - i29;

        i12 = i12 - i28;

     label07:
        i14 = i14 + 1;

        goto label04;

     label08:
        $r13 = newarray (java.lang.Object)[8];

        $r13[0] = "";

        $r13[1] = "Pss";

        $r13[2] = "Private";

        $r13[3] = "Private";

        $r13[4] = "Swapped";

        $r13[5] = "Heap";

        $r13[6] = "Heap";

        $r13[7] = "Heap";

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%13s %8s %8s %8s %8s %8s %8s %8s", $r13);

        $r17 = newarray (java.lang.Object)[8];

        $r17[0] = "";

        $r17[1] = "Total";

        $r17[2] = "Dirty";

        $r17[3] = "Clean";

        $r17[4] = "Dirty";

        $r17[5] = "Size";

        $r17[6] = "Alloc";

        $r17[7] = "Free";

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%13s %8s %8s %8s %8s %8s %8s %8s", $r17);

        $r16 = newarray (java.lang.Object)[9];

        $r16[0] = "";

        $r16[1] = "------";

        $r16[2] = "------";

        $r16[3] = "------";

        $r16[4] = "------";

        $r16[5] = "------";

        $r16[6] = "------";

        $r16[7] = "------";

        $r16[8] = "------";

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%13s %8s %8s %8s %8s %8s %8s %8s", $r16);

        r3 = newarray (java.lang.Object)[8];

        r3[0] = "Native Heap";

        $i31 = r1.<android.os.Debug$MemoryInfo: int nativePss>;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i31);

        r3[1] = $r19;

        $i32 = r1.<android.os.Debug$MemoryInfo: int nativePrivateDirty>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i32);

        r3[2] = $r18;

        $i33 = r1.<android.os.Debug$MemoryInfo: int nativePrivateClean>;

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i33);

        r3[3] = $r22;

        $i34 = r1.<android.os.Debug$MemoryInfo: int nativeSwappedOut>;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i34);

        r3[4] = $r20;

        $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        r3[5] = $r21;

        $r24 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        r3[6] = $r24;

        $r25 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l3);

        r3[7] = $r25;

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%13s %8s %8s %8s %8s %8s %8s %8s", r3);

        r4 = newarray (java.lang.Object)[8];

        r4[0] = "Dalvik Heap";

        $i35 = r1.<android.os.Debug$MemoryInfo: int dalvikPss>;

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i35);

        r4[1] = $r23;

        $i36 = r1.<android.os.Debug$MemoryInfo: int dalvikPrivateDirty>;

        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i36);

        r4[2] = $r28;

        $i38 = r1.<android.os.Debug$MemoryInfo: int dalvikPrivateClean>;

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i38);

        r4[3] = $r26;

        $i37 = r1.<android.os.Debug$MemoryInfo: int dalvikSwappedOut>;

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i37);

        r4[4] = $r27;

        $r31 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l4);

        r4[5] = $r31;

        $r32 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l5);

        r4[6] = $r32;

        $r29 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l6);

        r4[7] = $r29;

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%13s %8s %8s %8s %8s %8s %8s %8s", r4);

        goto label03;

     label09:
        r12 = newarray (java.lang.Object)[8];

        $r79 = staticinvoke <android.os.Debug$MemoryInfo: java.lang.String getOtherLabel(int)>(i14);

        r12[0] = $r79;

        $r80 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i23);

        r12[1] = $r80;

        $r77 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i24);

        r12[2] = $r77;

        $r78 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i29);

        r12[3] = $r78;

        $r75 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i28);

        r12[4] = $r75;

        r12[5] = "";

        r12[6] = "";

        r12[7] = "";

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%13s %8s %8s %8s %8s %8s %8s %8s", r12);

        goto label06;

     label10:
        if z1 == 0 goto label15;

        r10 = newarray (java.lang.Object)[11];

        r10[0] = "Unknown";

        $r52 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7);

        r10[1] = $r52;

        $r53 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i9);

        r10[2] = $r53;

        $r62 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8);

        r10[3] = $r62;

        $r61 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i11);

        r10[4] = $r61;

        $r64 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i10);

        r10[5] = $r64;

        $r63 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i13);

        r10[6] = $r63;

        $r58 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i12);

        r10[7] = $r58;

        r10[8] = "";

        r10[9] = "";

        r10[10] = "";

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%13s %8s %8s %8s %8s %8s %8s %8s %8s %8s %8s", r10);

        r8 = newarray (java.lang.Object)[11];

        r8[0] = "TOTAL";

        $i46 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalPss()>();

        $r60 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i46);

        r8[1] = $r60;

        $i47 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalSwappablePss()>();

        $r59 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i47);

        r8[2] = $r59;

        $i51 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalSharedDirty()>();

        $r68 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i51);

        r8[3] = $r68;

        $i53 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalPrivateDirty()>();

        $r69 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i53);

        r8[4] = $r69;

        $i52 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalSharedClean()>();

        $r66 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i52);

        r8[5] = $r66;

        $i48 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalPrivateClean()>();

        $r65 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i48);

        r8[6] = $r65;

        $i50 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalSwappedOut()>();

        $r67 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i50);

        r8[7] = $r67;

        $l49 = l1 + l4;

        $r72 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l49);

        r8[8] = $r72;

        $l55 = l2 + l5;

        $r70 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l55);

        r8[9] = $r70;

        $l54 = l3 + l6;

        $r71 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l54);

        r8[10] = $r71;

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%13s %8s %8s %8s %8s %8s %8s %8s %8s %8s %8s", r8);

     label11:
        if z2 == 0 goto label17;

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>(" Dalvik Details");

        i15 = 16;

     label12:
        if i15 >= 21 goto label17;

        i18 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherPss(int)>(i15);

        i19 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherSwappablePss(int)>(i15);

        i16 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherSharedDirty(int)>(i15);

        i17 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherPrivateDirty(int)>(i15);

        i21 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherSharedClean(int)>(i15);

        i22 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherPrivateClean(int)>(i15);

        i20 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getOtherSwappedOut(int)>(i15);

        if i18 != 0 goto label13;

        if i16 != 0 goto label13;

        if i17 != 0 goto label13;

        if i21 != 0 goto label13;

        if i22 == 0 goto label14;

     label13:
        if z1 == 0 goto label16;

        r9 = newarray (java.lang.Object)[11];

        $r45 = staticinvoke <android.os.Debug$MemoryInfo: java.lang.String getOtherLabel(int)>(i15);

        r9[0] = $r45;

        $r46 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i18);

        r9[1] = $r46;

        $r54 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i19);

        r9[2] = $r54;

        $r55 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i16);

        r9[3] = $r55;

        $r56 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i17);

        r9[4] = $r56;

        $r57 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i21);

        r9[5] = $r57;

        $r50 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i22);

        r9[6] = $r50;

        $r51 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i20);

        r9[7] = $r51;

        r9[8] = "";

        r9[9] = "";

        r9[10] = "";

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%13s %8s %8s %8s %8s %8s %8s %8s %8s %8s %8s", r9);

     label14:
        i15 = i15 + 1;

        goto label12;

     label15:
        r5 = newarray (java.lang.Object)[8];

        r5[0] = "Unknown";

        $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7);

        r5[1] = $r30;

        $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i11);

        r5[2] = $r35;

        $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i13);

        r5[3] = $r34;

        $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i12);

        r5[4] = $r33;

        r5[5] = "";

        r5[6] = "";

        r5[7] = "";

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%13s %8s %8s %8s %8s %8s %8s %8s", r5);

        r6 = newarray (java.lang.Object)[8];

        r6[0] = "TOTAL";

        $i39 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalPss()>();

        $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i39);

        r6[1] = $r38;

        $i41 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalPrivateDirty()>();

        $r37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i41);

        r6[2] = $r37;

        $i40 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalPrivateClean()>();

        $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i40);

        r6[3] = $r36;

        $i44 = virtualinvoke r1.<android.os.Debug$MemoryInfo: int getTotalSwappedOut()>();

        $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i44);

        r6[4] = $r41;

        $l43 = l1 + l4;

        $r40 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l43);

        r6[5] = $r40;

        $l42 = l2 + l5;

        $r39 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l42);

        r6[6] = $r39;

        $l45 = l3 + l6;

        $r42 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l45);

        r6[7] = $r42;

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%13s %8s %8s %8s %8s %8s %8s %8s", r6);

        goto label11;

     label16:
        r7 = newarray (java.lang.Object)[8];

        $r47 = staticinvoke <android.os.Debug$MemoryInfo: java.lang.String getOtherLabel(int)>(i15);

        r7[0] = $r47;

        $r48 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i18);

        r7[1] = $r48;

        $r49 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i17);

        r7[2] = $r49;

        $r43 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i22);

        r7[3] = $r43;

        $r44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i20);

        r7[4] = $r44;

        r7[5] = "";

        r7[6] = "";

        r7[7] = "";

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r0, "%13s %8s %8s %8s %8s %8s %8s %8s", r7);

        goto label14;

     label17:
        return;
    }

    static void freeTextLayoutCachesIfNeeded(int)
    {
        int i0, $i1;
        boolean z0;

        i0 := @parameter0: int;

        if i0 == 0 goto label2;

        $i1 = i0 & 4;

        if $i1 == 0 goto label3;

        z0 = 1;

     label1:
        if z0 == 0 goto label2;

        staticinvoke <android.graphics.Canvas: void freeTextLayoutCaches()>();

     label2:
        return;

     label3:
        z0 = 0;

        goto label1;
    }

    public static android.content.Intent getIntentBeingBroadcast()
    {
        java.lang.ThreadLocal $r0;
        java.lang.Object $r1;
        android.content.Intent $r2;

        $r0 = <android.app.ActivityThread: java.lang.ThreadLocal sCurrentBroadcastIntent>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r2 = (android.content.Intent) $r1;

        return $r2;
    }

    private android.app.LoadedApk getPackageInfo(android.content.pm.ApplicationInfo, android.content.res.CompatibilityInfo, java.lang.ClassLoader, boolean, boolean)
    {
        android.app.ActivityThread r0;
        android.content.pm.ApplicationInfo r1;
        android.content.res.CompatibilityInfo r2;
        java.lang.ClassLoader r3;
        boolean z0, z1, z2, $z3;
        android.app.ResourcesManager r4;
        java.lang.Throwable r5, $r25;
        java.lang.ref.WeakReference r6, $r13, $r16;
        android.app.LoadedApk r7, $r11;
        java.lang.String $r8, $r15, $r17, $r26;
        android.util.ArrayMap $r9, $r12, $r18, $r27;
        java.lang.Object $r10, $r23, $r24;
        int $i0, $i1;
        android.content.res.Resources $r20, $r22;
        android.content.res.AssetManager $r21;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        r2 := @parameter1: android.content.res.CompatibilityInfo;

        r3 := @parameter2: java.lang.ClassLoader;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        r4 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        entermonitor r4;

        if z1 == 0 goto label14;

     label01:
        $r27 = r0.<android.app.ActivityThread: android.util.ArrayMap mPackages>;

        $r26 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r24 = virtualinvoke $r27.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r26);

        r6 = (java.lang.ref.WeakReference) $r24;

     label02:
        if r6 == null goto label21;

     label03:
        $r23 = virtualinvoke r6.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r7 = (android.app.LoadedApk) $r23;

     label04:
        if r7 == null goto label06;

     label05:
        $r20 = r7.<android.app.LoadedApk: android.content.res.Resources mResources>;

        if $r20 == null goto label12;

        $r22 = r7.<android.app.LoadedApk: android.content.res.Resources mResources>;

        $r21 = virtualinvoke $r22.<android.content.res.Resources: android.content.res.AssetManager getAssets()>();

        $z3 = virtualinvoke $r21.<android.content.res.AssetManager: boolean isUpToDate()>();

        if $z3 != 0 goto label12;

     label06:
        if z1 == 0 goto label22;

     label07:
        $i0 = r1.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = 4 & $i0;

        if $i1 == 0 goto label22;

     label08:
        z2 = 1;

     label09:
        $r11 = new android.app.LoadedApk;

        specialinvoke $r11.<android.app.LoadedApk: void <init>(android.app.ActivityThread,android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,java.lang.ClassLoader,boolean,boolean)>(r0, r1, r2, r3, z0, z2);

        r7 = $r11;

     label10:
        if z1 == 0 goto label16;

     label11:
        $r18 = r0.<android.app.ActivityThread: android.util.ArrayMap mPackages>;

        $r17 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r16 = new java.lang.ref.WeakReference;

        specialinvoke $r16.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r7);

        virtualinvoke $r18.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, $r16);

     label12:
        exitmonitor r4;

     label13:
        return r7;

     label14:
        $r9 = r0.<android.app.ActivityThread: android.util.ArrayMap mResourcePackages>;

        $r8 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r10 = virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r8);

        r6 = (java.lang.ref.WeakReference) $r10;

     label15:
        goto label02;

     label16:
        $r12 = r0.<android.app.ActivityThread: android.util.ArrayMap mResourcePackages>;

        $r15 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r13 = new java.lang.ref.WeakReference;

        specialinvoke $r13.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r7);

        virtualinvoke $r12.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r13);

     label17:
        goto label12;

     label18:
        $r25 := @caughtexception;

        r5 = $r25;

     label19:
        exitmonitor r4;

     label20:
        throw r5;

     label21:
        r7 = null;

        goto label04;

     label22:
        z2 = 0;

        goto label09;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label05 to label06 with label18;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch java.lang.Throwable from label09 to label10 with label18;
        catch java.lang.Throwable from label11 to label12 with label18;
        catch java.lang.Throwable from label12 to label13 with label18;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
    }

    public static android.content.pm.IPackageManager getPackageManager()
    {
        android.content.pm.IPackageManager $r0, $r2, $r3, $r4;
        android.os.IBinder $r1;

        $r0 = <android.app.ActivityThread: android.content.pm.IPackageManager sPackageManager>;

        if $r0 == null goto label1;

        $r4 = <android.app.ActivityThread: android.content.pm.IPackageManager sPackageManager>;

        return $r4;

     label1:
        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("package");

        $r2 = staticinvoke <android.content.pm.IPackageManager$Stub: android.content.pm.IPackageManager asInterface(android.os.IBinder)>($r1);

        <android.app.ActivityThread: android.content.pm.IPackageManager sPackageManager> = $r2;

        $r3 = <android.app.ActivityThread: android.content.pm.IPackageManager sPackageManager>;

        return $r3;
    }

    private void handleBindApplication(android.app.ActivityThread$AppBindData)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$AppBindData r1;
        android.app.ContextImpl r2, r12;
        boolean z0, $z1, $z2, $z4, $z5, $z6, $z8, $z10, $z12, $z13;
        android.os.IBinder r3;
        android.os.StrictMode$ThreadPolicy r4;
        java.lang.Throwable r5, $r129;
        android.app.Application r6;
        java.lang.Exception r7, r8, r15, $r130, $r142, $r155;
        java.util.List r9;
        android.content.pm.InstrumentationInfo r11, r16;
        android.content.pm.ApplicationInfo r13, $r39, $r45, $r47, $r49, $r51, $r52, $r56, $r73;
        java.io.File r14, r23, $r92, $r105;
        android.net.IConnectivityManager r18;
        android.app.IActivityManager r20;
        android.content.res.Configuration $r22, $r24, $r26, $r27, $r38, $r41, $r44;
        android.app.ActivityThread$Profiler $r25, $r29, $r31, $r34, $r35, $r100, $r101, $r102, $r104, $r135;
        android.os.ParcelFileDescriptor $r28, $r36, $r103;
        java.lang.String $r30, $r32, $r33, $r63, $r64, $r65, $r66, $r69, $r70, $r71, $r72, $r74, $r76, $r78, $r87, $r88, $r93, $r94, $r99, $r107, $r110, $r113, $r120, $r122, $r125, $r143, $r148, $r154, $r156, $r158, $r159, $r162;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15;
        java.util.Locale $r37;
        android.app.ResourcesManager $r40;
        android.content.res.CompatibilityInfo $r42, $r48, $r83;
        android.app.LoadedApk $r46, $r50, $r53, $r62, $r75, $r81, $r106, $r123, $r136;
        android.app.Instrumentation $r54, $r58, $r60, $r86, $r90, $r144;
        android.content.ComponentName $r55, $r68, $r79, $r89, $r97, $r134, $r151;
        android.app.ActivityThread$H $r57;
        dalvik.system.VMRuntime $r59;
        android.os.Bundle $r61;
        android.content.pm.PackageManager $r67;
        java.lang.Class $r77, $r166;
        java.lang.ClassLoader $r80, $r82;
        android.app.IInstrumentationWatcher $r84;
        android.app.IUiAutomationConnection $r85;
        java.lang.Object $r91;
        java.lang.StringBuilder $r95, $r98, $r108, $r109, $r111, $r112, $r115, $r116, $r121, $r124, $r126, $r128, $r131, $r132, $r133, $r145, $r146, $r147, $r149, $r152, $r153, $r157, $r160, $r161, $r164, $r165;
        java.lang.RuntimeException $r96, $r127, $r150, $r163;
        android.net.ProxyProperties $r114;
        android.app.ActivityThread$ApplicationThread $r117, $r118;
        java.util.concurrent.Executor $r137;
        android.content.pm.PackageManager$NameNotFoundException $r138;
        android.os.RemoteException $r139, $r140, $r141;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$AppBindData;

        r0.<android.app.ActivityThread: android.app.ActivityThread$AppBindData mBoundApplication> = r1;

        $r22 = new android.content.res.Configuration;

        $r26 = r1.<android.app.ActivityThread$AppBindData: android.content.res.Configuration config>;

        specialinvoke $r22.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>($r26);

        r0.<android.app.ActivityThread: android.content.res.Configuration mConfiguration> = $r22;

        $r27 = new android.content.res.Configuration;

        $r24 = r1.<android.app.ActivityThread$AppBindData: android.content.res.Configuration config>;

        specialinvoke $r27.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>($r24);

        r0.<android.app.ActivityThread: android.content.res.Configuration mCompatConfiguration> = $r27;

        $r25 = new android.app.ActivityThread$Profiler;

        specialinvoke $r25.<android.app.ActivityThread$Profiler: void <init>()>();

        r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler> = $r25;

        $r31 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        $r30 = r1.<android.app.ActivityThread$AppBindData: java.lang.String initProfileFile>;

        $r31.<android.app.ActivityThread$Profiler: java.lang.String profileFile> = $r30;

        $r29 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        $r28 = r1.<android.app.ActivityThread$AppBindData: android.os.ParcelFileDescriptor initProfileFd>;

        $r29.<android.app.ActivityThread$Profiler: android.os.ParcelFileDescriptor profileFd> = $r28;

        $r34 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        $z1 = r1.<android.app.ActivityThread$AppBindData: boolean initAutoStopProfiler>;

        $r34.<android.app.ActivityThread$Profiler: boolean autoStopProfiler> = $z1;

        $r32 = r1.<android.app.ActivityThread$AppBindData: java.lang.String processName>;

        staticinvoke <android.os.Process: void setArgV0(java.lang.String)>($r32);

        $r33 = r1.<android.app.ActivityThread$AppBindData: java.lang.String processName>;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        staticinvoke <android.ddm.DdmHandleAppName: void setAppName(java.lang.String,int)>($r33, $i0);

        $z2 = r1.<android.app.ActivityThread$AppBindData: boolean persistent>;

        if $z2 == 0 goto label01;

        $z12 = staticinvoke <android.app.ActivityManager: boolean isHighEndGfx()>();

        if $z12 != 0 goto label01;

        staticinvoke <android.view.HardwareRenderer: void disable(boolean)>(0);

     label01:
        $r35 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        $r36 = $r35.<android.app.ActivityThread$Profiler: android.os.ParcelFileDescriptor profileFd>;

        if $r36 == null goto label02;

        $r135 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        virtualinvoke $r135.<android.app.ActivityThread$Profiler: void startProfiling()>();

     label02:
        $r39 = r1.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo>;

        $i1 = $r39.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i1 > 12 goto label03;

        $r137 = <android.os.AsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        staticinvoke <android.os.AsyncTask: void setDefaultExecutor(java.util.concurrent.Executor)>($r137);

     label03:
        staticinvoke <java.util.TimeZone: void setDefault(java.util.TimeZone)>(null);

        $r38 = r1.<android.app.ActivityThread$AppBindData: android.content.res.Configuration config>;

        $r37 = $r38.<android.content.res.Configuration: java.util.Locale locale>;

        staticinvoke <java.util.Locale: void setDefault(java.util.Locale)>($r37);

        $r40 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        $r41 = r1.<android.app.ActivityThread$AppBindData: android.content.res.Configuration config>;

        $r42 = r1.<android.app.ActivityThread$AppBindData: android.content.res.CompatibilityInfo compatInfo>;

        virtualinvoke $r40.<android.app.ResourcesManager: boolean applyConfigurationToResourcesLocked(android.content.res.Configuration,android.content.res.CompatibilityInfo)>($r41, $r42);

        $r44 = r1.<android.app.ActivityThread$AppBindData: android.content.res.Configuration config>;

        $i3 = $r44.<android.content.res.Configuration: int densityDpi>;

        r0.<android.app.ActivityThread: int mCurDefaultDisplayDpi> = $i3;

        $i2 = r0.<android.app.ActivityThread: int mCurDefaultDisplayDpi>;

        virtualinvoke r0.<android.app.ActivityThread: android.content.res.Configuration applyCompatConfiguration(int)>($i2);

        $r47 = r1.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo>;

        $r48 = r1.<android.app.ActivityThread$AppBindData: android.content.res.CompatibilityInfo compatInfo>;

        $r46 = virtualinvoke r0.<android.app.ActivityThread: android.app.LoadedApk getPackageInfoNoCheck(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo)>($r47, $r48);

        r1.<android.app.ActivityThread$AppBindData: android.app.LoadedApk info> = $r46;

        $r45 = r1.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo>;

        $i6 = $r45.<android.content.pm.ApplicationInfo: int flags>;

        $i7 = 8192 & $i6;

        if $i7 != 0 goto label04;

        r0.<android.app.ActivityThread: boolean mDensityCompatMode> = 1;

        staticinvoke <android.graphics.Bitmap: void setDefaultDensity(int)>(160);

     label04:
        specialinvoke r0.<android.app.ActivityThread: void updateDefaultDensity()>();

        $r50 = r1.<android.app.ActivityThread$AppBindData: android.app.LoadedApk info>;

        r2 = staticinvoke <android.app.ContextImpl: android.app.ContextImpl createAppContext(android.app.ActivityThread,android.app.LoadedApk)>(r0, $r50);

        $z4 = staticinvoke <android.os.Process: boolean isIsolated()>();

        if $z4 != 0 goto label05;

        r23 = virtualinvoke r2.<android.app.ContextImpl: java.io.File getCacheDir()>();

        if r23 == null goto label19;

        $r120 = virtualinvoke r23.<java.io.File: java.lang.String getAbsolutePath()>();

        staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>("java.io.tmpdir", $r120);

        $r136 = r1.<android.app.ActivityThread$AppBindData: android.app.LoadedApk info>;

        specialinvoke r0.<android.app.ActivityThread: void setupGraphicsSupport(android.app.LoadedApk,java.io.File)>($r136, r23);

     label05:
        $r49 = r1.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo>;

        $i4 = $r49.<android.content.pm.ApplicationInfo: int flags>;

        $i5 = 129 & $i4;

        if $i5 == 0 goto label06;

        staticinvoke <android.os.StrictMode: boolean conditionallyEnableDebugLogging()>();

     label06:
        $r52 = r1.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo>;

        $i10 = $r52.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i10 <= 9 goto label07;

        staticinvoke <android.os.StrictMode: void enableDeathOnNetwork()>();

     label07:
        $i11 = r1.<android.app.ActivityThread$AppBindData: int debugMode>;

        if $i11 == 0 goto label11;

        staticinvoke <android.os.Debug: void changeDebugPort(int)>(8100);

        $i15 = r1.<android.app.ActivityThread$AppBindData: int debugMode>;

        if $i15 != 2 goto label20;

        $r111 = new java.lang.StringBuilder;

        specialinvoke $r111.<java.lang.StringBuilder: void <init>()>();

        $r124 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Application ");

        $r123 = r1.<android.app.ActivityThread$AppBindData: android.app.LoadedApk info>;

        $r122 = virtualinvoke $r123.<android.app.LoadedApk: java.lang.String getPackageName()>();

        $r121 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r122);

        $r126 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is waiting for the debugger on port 8100...");

        $r125 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityThread", $r125);

        r20 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

     label08:
        $r118 = r0.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread mAppThread>;

        interfaceinvoke r20.<android.app.IActivityManager: void showWaitingForDebugger(android.app.IApplicationThread,boolean)>($r118, 1);

     label09:
        staticinvoke <android.os.Debug: void waitForDebugger()>();

     label10:
        $r117 = r0.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread mAppThread>;

        interfaceinvoke r20.<android.app.IActivityManager: void showWaitingForDebugger(android.app.IApplicationThread,boolean)>($r117, 0);

     label11:
        $z5 = r1.<android.app.ActivityThread$AppBindData: boolean enableOpenGlTrace>;

        if $z5 == 0 goto label12;

        staticinvoke <android.opengl.GLUtils: void setTracingLevel(int)>(1);

     label12:
        $r51 = r1.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo>;

        $i8 = $r51.<android.content.pm.ApplicationInfo: int flags>;

        $i9 = 2 & $i8;

        if $i9 == 0 goto label21;

        z0 = 1;

     label13:
        staticinvoke <android.os.Trace: void setAppTracingAllowed(boolean)>(z0);

        r3 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("connectivity");

        if r3 == null goto label15;

        r18 = staticinvoke <android.net.IConnectivityManager$Stub: android.net.IConnectivityManager asInterface(android.os.IBinder)>(r3);

     label14:
        $r114 = interfaceinvoke r18.<android.net.IConnectivityManager: android.net.ProxyProperties getProxy()>();

        staticinvoke <android.net.Proxy: void setHttpProxySystemProperty(android.net.ProxyProperties)>($r114);

     label15:
        $r55 = r1.<android.app.ActivityThread$AppBindData: android.content.ComponentName instrumentationName>;

        if $r55 == null goto label34;

     label16:
        $r67 = virtualinvoke r2.<android.app.ContextImpl: android.content.pm.PackageManager getPackageManager()>();

        $r68 = r1.<android.app.ActivityThread$AppBindData: android.content.ComponentName instrumentationName>;

        r16 = virtualinvoke $r67.<android.content.pm.PackageManager: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)>($r68, 0);

     label17:
        r11 = r16;

     label18:
        if r11 != null goto label22;

        $r96 = new java.lang.RuntimeException;

        $r95 = new java.lang.StringBuilder;

        specialinvoke $r95.<java.lang.StringBuilder: void <init>()>();

        $r98 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find instrumentation info for: ");

        $r97 = r1.<android.app.ActivityThread$AppBindData: android.content.ComponentName instrumentationName>;

        $r112 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r97);

        $r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r96.<java.lang.RuntimeException: void <init>(java.lang.String)>($r113);

        throw $r96;

     label19:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ActivityThread", "Unable to setupGraphicsSupport due to missing cache directory");

        goto label05;

     label20:
        $r115 = new java.lang.StringBuilder;

        specialinvoke $r115.<java.lang.StringBuilder: void <init>()>();

        $r116 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Application ");

        $r106 = r1.<android.app.ActivityThread$AppBindData: android.app.LoadedApk info>;

        $r107 = virtualinvoke $r106.<android.app.LoadedApk: java.lang.String getPackageName()>();

        $r108 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r107);

        $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" can be debugged on port 8100...");

        $r110 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityThread", $r110);

        goto label11;

     label21:
        z0 = 0;

        goto label13;

     label22:
        $r66 = r11.<android.content.pm.InstrumentationInfo: java.lang.String sourceDir>;

        r0.<android.app.ActivityThread: java.lang.String mInstrumentationAppDir> = $r66;

        $r64 = r11.<android.content.pm.InstrumentationInfo: java.lang.String nativeLibraryDir>;

        r0.<android.app.ActivityThread: java.lang.String mInstrumentationAppLibraryDir> = $r64;

        $r65 = r11.<android.content.pm.InstrumentationInfo: java.lang.String packageName>;

        r0.<android.app.ActivityThread: java.lang.String mInstrumentationAppPackage> = $r65;

        $r62 = r1.<android.app.ActivityThread$AppBindData: android.app.LoadedApk info>;

        $r63 = virtualinvoke $r62.<android.app.LoadedApk: java.lang.String getAppDir()>();

        r0.<android.app.ActivityThread: java.lang.String mInstrumentedAppDir> = $r63;

        $r75 = r1.<android.app.ActivityThread$AppBindData: android.app.LoadedApk info>;

        $r76 = virtualinvoke $r75.<android.app.LoadedApk: java.lang.String getLibDir()>();

        r0.<android.app.ActivityThread: java.lang.String mInstrumentedAppLibraryDir> = $r76;

        $r73 = new android.content.pm.ApplicationInfo;

        specialinvoke $r73.<android.content.pm.ApplicationInfo: void <init>()>();

        r13 = $r73;

        $r74 = r11.<android.content.pm.InstrumentationInfo: java.lang.String packageName>;

        r13.<android.content.pm.ApplicationInfo: java.lang.String packageName> = $r74;

        $r71 = r11.<android.content.pm.InstrumentationInfo: java.lang.String sourceDir>;

        r13.<android.content.pm.ApplicationInfo: java.lang.String sourceDir> = $r71;

        $r72 = r11.<android.content.pm.InstrumentationInfo: java.lang.String publicSourceDir>;

        r13.<android.content.pm.ApplicationInfo: java.lang.String publicSourceDir> = $r72;

        $r69 = r11.<android.content.pm.InstrumentationInfo: java.lang.String dataDir>;

        r13.<android.content.pm.ApplicationInfo: java.lang.String dataDir> = $r69;

        $r70 = r11.<android.content.pm.InstrumentationInfo: java.lang.String nativeLibraryDir>;

        r13.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryDir> = $r70;

        $r83 = r1.<android.app.ActivityThread$AppBindData: android.content.res.CompatibilityInfo compatInfo>;

        $r82 = virtualinvoke r2.<android.app.ContextImpl: java.lang.ClassLoader getClassLoader()>();

        $r81 = specialinvoke r0.<android.app.ActivityThread: android.app.LoadedApk getPackageInfo(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,java.lang.ClassLoader,boolean,boolean)>(r13, $r83, $r82, 0, 1);

        r12 = staticinvoke <android.app.ContextImpl: android.app.ContextImpl createAppContext(android.app.ActivityThread,android.app.LoadedApk)>(r0, $r81);

     label23:
        $r80 = virtualinvoke r12.<android.app.ContextImpl: java.lang.ClassLoader getClassLoader()>();

        $r79 = r1.<android.app.ActivityThread$AppBindData: android.content.ComponentName instrumentationName>;

        $r78 = virtualinvoke $r79.<android.content.ComponentName: java.lang.String getClassName()>();

        $r77 = virtualinvoke $r80.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r78);

        $r91 = virtualinvoke $r77.<java.lang.Class: java.lang.Object newInstance()>();

        $r90 = (android.app.Instrumentation) $r91;

        r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation> = $r90;

     label24:
        $r86 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r89 = new android.content.ComponentName;

        $r87 = r11.<android.content.pm.InstrumentationInfo: java.lang.String packageName>;

        $r88 = r11.<android.content.pm.InstrumentationInfo: java.lang.String name>;

        specialinvoke $r89.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r87, $r88);

        $r84 = r1.<android.app.ActivityThread$AppBindData: android.app.IInstrumentationWatcher instrumentationWatcher>;

        $r85 = r1.<android.app.ActivityThread$AppBindData: android.app.IUiAutomationConnection instrumentationUiAutomationConnection>;

        virtualinvoke $r86.<android.app.Instrumentation: void init(android.app.ActivityThread,android.content.Context,android.content.Context,android.content.ComponentName,android.app.IInstrumentationWatcher,android.app.IUiAutomationConnection)>(r0, r12, r2, $r89, $r84, $r85);

        $r100 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        $r99 = $r100.<android.app.ActivityThread$Profiler: java.lang.String profileFile>;

        if $r99 == null goto label25;

        $z10 = r11.<android.content.pm.InstrumentationInfo: boolean handleProfiling>;

        if $z10 != 0 goto label25;

        $r101 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        $r103 = $r101.<android.app.ActivityThread$Profiler: android.os.ParcelFileDescriptor profileFd>;

        if $r103 != null goto label25;

        $r102 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        $r102.<android.app.ActivityThread$Profiler: boolean handlingProfiling> = 1;

        $r105 = new java.io.File;

        $r104 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        $r93 = $r104.<android.app.ActivityThread$Profiler: java.lang.String profileFile>;

        specialinvoke $r105.<java.io.File: void <init>(java.lang.String)>($r93);

        r14 = $r105;

        $r92 = virtualinvoke r14.<java.io.File: java.io.File getParentFile()>();

        virtualinvoke $r92.<java.io.File: boolean mkdirs()>();

        $r94 = virtualinvoke r14.<java.io.File: java.lang.String toString()>();

        staticinvoke <android.os.Debug: void startMethodTracing(java.lang.String,int)>($r94, 8388608);

     label25:
        $r56 = r1.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo>;

        $i13 = $r56.<android.content.pm.ApplicationInfo: int flags>;

        $i12 = 1048576 & $i13;

        if $i12 == 0 goto label26;

        $r59 = staticinvoke <dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>();

        virtualinvoke $r59.<dalvik.system.VMRuntime: void clearGrowthLimit()>();

     label26:
        r4 = staticinvoke <android.os.StrictMode: android.os.StrictMode$ThreadPolicy allowThreadDiskWrites()>();

     label27:
        $r53 = r1.<android.app.ActivityThread$AppBindData: android.app.LoadedApk info>;

        $z6 = r1.<android.app.ActivityThread$AppBindData: boolean restrictedBackupMode>;

        r6 = virtualinvoke $r53.<android.app.LoadedApk: android.app.Application makeApplication(boolean,android.app.Instrumentation)>($z6, null);

        r0.<android.app.ActivityThread: android.app.Application mInitialApplication> = r6;

        $z8 = r1.<android.app.ActivityThread$AppBindData: boolean restrictedBackupMode>;

        if $z8 != 0 goto label30;

        r9 = r1.<android.app.ActivityThread$AppBindData: java.util.List providers>;

     label28:
        if r9 == null goto label30;

     label29:
        specialinvoke r0.<android.app.ActivityThread: void installContentProviders(android.content.Context,java.util.List)>(r6, r9);

        $r57 = r0.<android.app.ActivityThread: android.app.ActivityThread$H mH>;

        virtualinvoke $r57.<android.app.ActivityThread$H: boolean sendEmptyMessageDelayed(int,long)>(132, 10000L);

     label30:
        $r60 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r61 = r1.<android.app.ActivityThread$AppBindData: android.os.Bundle instrumentationArgs>;

        virtualinvoke $r60.<android.app.Instrumentation: void onCreate(android.os.Bundle)>($r61);

     label31:
        $r58 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        virtualinvoke $r58.<android.app.Instrumentation: void callApplicationOnCreate(android.app.Application)>(r6);

     label32:
        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r4);

        return;

     label33:
        $r155 := @caughtexception;

        r15 = $r155;

        $r150 = new java.lang.RuntimeException;

        $r149 = new java.lang.StringBuilder;

        specialinvoke $r149.<java.lang.StringBuilder: void <init>()>();

        $r152 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to instantiate instrumentation ");

        $r151 = r1.<android.app.ActivityThread$AppBindData: android.content.ComponentName instrumentationName>;

        $r146 = virtualinvoke $r152.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r151);

        $r145 = virtualinvoke $r146.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r148 = virtualinvoke r15.<java.lang.Exception: java.lang.String toString()>();

        $r147 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r148);

        $r143 = virtualinvoke $r147.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r150.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r143, r15);

        throw $r150;

     label34:
        $r54 = new android.app.Instrumentation;

        specialinvoke $r54.<android.app.Instrumentation: void <init>()>();

        r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation> = $r54;

        goto label25;

     label35:
        $r130 := @caughtexception;

        r7 = $r130;

     label36:
        $r127 = new java.lang.RuntimeException;

        $r128 = new java.lang.StringBuilder;

        specialinvoke $r128.<java.lang.StringBuilder: void <init>()>();

        $r133 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception thrown in onCreate() of ");

        $r134 = r1.<android.app.ActivityThread$AppBindData: android.content.ComponentName instrumentationName>;

        $r131 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r134);

        $r132 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r154 = virtualinvoke r7.<java.lang.Exception: java.lang.String toString()>();

        $r153 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r154);

        $r156 = virtualinvoke $r153.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r127.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r156, r7);

        throw $r127;

     label37:
        $r129 := @caughtexception;

        r5 = $r129;

        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r4);

        throw r5;

     label38:
        $r142 := @caughtexception;

        r8 = $r142;

     label39:
        $r144 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $z13 = virtualinvoke $r144.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>(r6, r8);

        if $z13 != 0 goto label32;

        $r163 = new java.lang.RuntimeException;

        $r164 = new java.lang.StringBuilder;

        specialinvoke $r164.<java.lang.StringBuilder: void <init>()>();

        $r165 = virtualinvoke $r164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create application ");

        $r166 = virtualinvoke r6.<java.lang.Object: java.lang.Class getClass()>();

        $r159 = virtualinvoke $r166.<java.lang.Class: java.lang.String getName()>();

        $r160 = virtualinvoke $r165.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r159);

        $r161 = virtualinvoke $r160.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r162 = virtualinvoke r8.<java.lang.Exception: java.lang.String toString()>();

        $r157 = virtualinvoke $r161.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r162);

        $r158 = virtualinvoke $r157.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r163.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r158, r8);

        throw $r163;

     label40:
        $r138 := @caughtexception;

        r11 = null;

        goto label18;

     label41:
        $r141 := @caughtexception;

        goto label15;

     label42:
        $r139 := @caughtexception;

        goto label11;

     label43:
        $r140 := @caughtexception;

        goto label09;

        catch android.os.RemoteException from label08 to label09 with label43;
        catch android.os.RemoteException from label10 to label11 with label42;
        catch android.os.RemoteException from label14 to label15 with label41;
        catch android.content.pm.PackageManager$NameNotFoundException from label16 to label17 with label40;
        catch java.lang.Exception from label23 to label24 with label33;
        catch java.lang.Throwable from label27 to label28 with label37;
        catch java.lang.Throwable from label29 to label30 with label37;
        catch java.lang.Exception from label30 to label31 with label35;
        catch java.lang.Throwable from label30 to label31 with label37;
        catch java.lang.Exception from label31 to label32 with label38;
        catch java.lang.Throwable from label31 to label32 with label37;
        catch java.lang.Throwable from label36 to label37 with label37;
        catch java.lang.Throwable from label39 to label40 with label37;
    }

    private void handleBindService(android.app.ActivityThread$BindServiceData)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$BindServiceData r1;
        android.app.Service r2;
        java.lang.Exception r3, $r18;
        android.os.IBinder r5, $r6, $r13, $r16;
        android.util.ArrayMap $r7;
        java.lang.Object $r8;
        android.content.Intent $r9, $r11, $r14, $r17, $r25;
        java.lang.ClassLoader $r10;
        boolean $z0, $z1;
        android.app.IActivityManager $r12, $r15;
        android.os.RemoteException $r19;
        android.app.Instrumentation $r20;
        java.lang.StringBuilder $r21, $r23, $r24, $r26, $r27, $r28, $r31;
        java.lang.RuntimeException $r22;
        java.lang.String $r29, $r30;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$BindServiceData;

        $r7 = r0.<android.app.ActivityThread: android.util.ArrayMap mServices>;

        $r6 = r1.<android.app.ActivityThread$BindServiceData: android.os.IBinder token>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r6);

        r2 = (android.app.Service) $r8;

        if r2 == null goto label9;

     label1:
        $r9 = r1.<android.app.ActivityThread$BindServiceData: android.content.Intent intent>;

        $r10 = virtualinvoke r2.<android.app.Service: java.lang.ClassLoader getClassLoader()>();

        virtualinvoke $r9.<android.content.Intent: void setExtrasClassLoader(java.lang.ClassLoader)>($r10);

     label2:
        $z0 = r1.<android.app.ActivityThread$BindServiceData: boolean rebind>;

        if $z0 != 0 goto label5;

        $r14 = r1.<android.app.ActivityThread$BindServiceData: android.content.Intent intent>;

        r5 = virtualinvoke r2.<android.app.Service: android.os.IBinder onBind(android.content.Intent)>($r14);

        $r15 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r16 = r1.<android.app.ActivityThread$BindServiceData: android.os.IBinder token>;

        $r17 = r1.<android.app.ActivityThread$BindServiceData: android.content.Intent intent>;

        interfaceinvoke $r15.<android.app.IActivityManager: void publishService(android.os.IBinder,android.content.Intent,android.os.IBinder)>($r16, $r17, r5);

     label3:
        virtualinvoke r0.<android.app.ActivityThread: void ensureJitEnabled()>();

     label4:
        return;

     label5:
        $r11 = r1.<android.app.ActivityThread$BindServiceData: android.content.Intent intent>;

        virtualinvoke r2.<android.app.Service: void onRebind(android.content.Intent)>($r11);

        $r12 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r13 = r1.<android.app.ActivityThread$BindServiceData: android.os.IBinder token>;

        interfaceinvoke $r12.<android.app.IActivityManager: void serviceDoneExecuting(android.os.IBinder,int,int,int)>($r13, 0, 0, 0);

     label6:
        goto label3;

     label7:
        $r19 := @caughtexception;

        return;

     label8:
        $r18 := @caughtexception;

        r3 = $r18;

        $r20 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $z1 = virtualinvoke $r20.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>(r2, r3);

        if $z1 != 0 goto label9;

        $r22 = new java.lang.RuntimeException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to bind to service ");

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with ");

        $r25 = r1.<android.app.ActivityThread$BindServiceData: android.content.Intent intent>;

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r30 = virtualinvoke r3.<java.lang.Exception: java.lang.String toString()>();

        $r31 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r29 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r29, r3);

        throw $r22;

     label9:
        return;

        catch java.lang.Exception from label1 to label2 with label8;
        catch android.os.RemoteException from label2 to label3 with label7;
        catch java.lang.Exception from label2 to label3 with label8;
        catch android.os.RemoteException from label3 to label4 with label7;
        catch java.lang.Exception from label3 to label4 with label8;
        catch android.os.RemoteException from label5 to label6 with label7;
        catch java.lang.Exception from label5 to label6 with label8;
    }

    private void handleCreateBackupAgent(android.app.ActivityThread$CreateBackupAgentData)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$CreateBackupAgentData r1;
        android.os.RemoteException r2, $r51, $r54;
        android.app.LoadedApk r3;
        java.lang.String r4, r5, $r14, $r33, $r34, $r38, $r44, $r46, $r50;
        android.os.IBinder r6;
        java.lang.Exception r7, r8, $r37, $r52;
        android.app.backup.BackupAgent r10;
        android.app.ContextImpl r11;
        android.content.pm.IPackageManager $r12;
        android.content.pm.ApplicationInfo $r13, $r16, $r18, $r22, $r35;
        android.content.pm.PackageInfo $r15;
        int $i0, $i1, $i2, $i3, $i4, $i10, $i11;
        android.content.res.CompatibilityInfo $r17;
        java.lang.Object $r19, $r23;
        android.util.ArrayMap $r20, $r25;
        java.lang.ClassLoader $r21;
        java.lang.Class $r24;
        java.lang.StringBuilder $r27, $r29, $r30, $r31, $r32, $r36, $r39, $r40, $r41, $r42, $r45, $r47, $r48, $r49, $r53;
        android.app.IActivityManager $r28;
        java.lang.RuntimeException $r43;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$CreateBackupAgentData;

     label01:
        $r12 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        $r13 = r1.<android.app.ActivityThread$CreateBackupAgentData: android.content.pm.ApplicationInfo appInfo>;

        $r14 = $r13.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $r15 = interfaceinvoke $r12.<android.content.pm.IPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>($r14, 0, $i0);

        $r16 = $r15.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i1 = $r16.<android.content.pm.ApplicationInfo: int uid>;

        $i2 = staticinvoke <android.os.Process: int myUid()>();

        if $i1 == $i2 goto label04;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Asked to instantiate non-matching package ");

        $r35 = r1.<android.app.ActivityThread$CreateBackupAgentData: android.content.pm.ApplicationInfo appInfo>;

        $r34 = $r35.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r39 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityThread", $r38);

     label02:
        return;

     label03:
        $r51 := @caughtexception;

        r2 = $r51;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityThread", "Can\'t reach package manager", r2);

        return;

     label04:
        virtualinvoke r0.<android.app.ActivityThread: void unscheduleGcIdler()>();

        $r18 = r1.<android.app.ActivityThread$CreateBackupAgentData: android.content.pm.ApplicationInfo appInfo>;

        $r17 = r1.<android.app.ActivityThread$CreateBackupAgentData: android.content.res.CompatibilityInfo compatInfo>;

        r3 = virtualinvoke r0.<android.app.ActivityThread: android.app.LoadedApk getPackageInfoNoCheck(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo)>($r18, $r17);

        r4 = r3.<android.app.LoadedApk: java.lang.String mPackageName>;

        if r4 != null goto label05;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ActivityThread", "Asked to create backup agent for nonexistent package");

        return;

     label05:
        $r20 = r0.<android.app.ActivityThread: android.util.ArrayMap mBackupAgents>;

        $r19 = virtualinvoke $r20.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r4);

        if $r19 == null goto label06;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BackupAgent   for ");

        $r29 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already exists");

        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ActivityThread", $r33);

        return;

     label06:
        $r22 = r1.<android.app.ActivityThread$CreateBackupAgentData: android.content.pm.ApplicationInfo appInfo>;

        r5 = $r22.<android.content.pm.ApplicationInfo: java.lang.String backupAgentName>;

        if r5 != null goto label08;

        $i4 = r1.<android.app.ActivityThread$CreateBackupAgentData: int backupMode>;

        if $i4 == 1 goto label07;

        $i3 = r1.<android.app.ActivityThread$CreateBackupAgentData: int backupMode>;

        if $i3 != 3 goto label08;

     label07:
        r5 = "android.app.backup.FullBackupAgent";

     label08:
        r6 = null;

     label09:
        $r21 = virtualinvoke r3.<android.app.LoadedApk: java.lang.ClassLoader getClassLoader()>();

        $r24 = virtualinvoke $r21.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r5);

        $r23 = virtualinvoke $r24.<java.lang.Class: java.lang.Object newInstance()>();

        r10 = (android.app.backup.BackupAgent) $r23;

        r11 = staticinvoke <android.app.ContextImpl: android.app.ContextImpl createAppContext(android.app.ActivityThread,android.app.LoadedApk)>(r0, r3);

        virtualinvoke r11.<android.app.ContextImpl: void setOuterContext(android.content.Context)>(r10);

        virtualinvoke r10.<android.app.backup.BackupAgent: void attach(android.content.Context)>(r11);

        virtualinvoke r10.<android.app.backup.BackupAgent: void onCreate()>();

        r6 = virtualinvoke r10.<android.app.backup.BackupAgent: android.os.IBinder onBind()>();

        $r25 = r0.<android.app.ActivityThread: android.util.ArrayMap mBackupAgents>;

        virtualinvoke $r25.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r10);

     label10:
        $r28 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        interfaceinvoke $r28.<android.app.IActivityManager: void backupAgentCreated(java.lang.String,android.os.IBinder)>(r4, r6);

     label11:
        return;

     label12:
        $r54 := @caughtexception;

        return;

     label13:
        $r52 := @caughtexception;

        r7 = $r52;

     label14:
        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Agent threw during creation: ");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityThread", $r50);

        $i10 = r1.<android.app.ActivityThread$CreateBackupAgentData: int backupMode>;

        if $i10 == 2 goto label10;

        $i11 = r1.<android.app.ActivityThread$CreateBackupAgentData: int backupMode>;

        if $i11 == 3 goto label10;

        throw r7;

     label15:
        $r37 := @caughtexception;

        r8 = $r37;

        $r43 = new java.lang.RuntimeException;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create BackupAgent ");

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r47 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r46 = virtualinvoke r8.<java.lang.Exception: java.lang.String toString()>();

        $r45 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r43.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r44, r8);

        throw $r43;

        catch android.os.RemoteException from label01 to label02 with label03;
        catch java.lang.Exception from label09 to label10 with label13;
        catch android.os.RemoteException from label10 to label11 with label12;
        catch java.lang.Exception from label10 to label11 with label15;
        catch java.lang.Exception from label14 to label15 with label15;
    }

    private void handleCreateService(android.app.ActivityThread$CreateServiceData)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$CreateServiceData r1;
        android.app.LoadedApk r2;
        java.lang.Exception r3, r5, $r29, $r38;
        boolean z0, $z1;
        android.app.Service r4;
        android.app.ContextImpl r6;
        android.app.Application r7;
        android.content.pm.ServiceInfo $r9, $r14, $r18, $r31, $r48;
        android.content.res.CompatibilityInfo $r10;
        android.content.pm.ApplicationInfo $r11;
        java.lang.ClassLoader $r12;
        java.lang.String $r13, $r20, $r35, $r36, $r41, $r47, $r49, $r51;
        java.lang.Object $r15;
        java.lang.Class $r16;
        android.app.Instrumentation $r17, $r27, $r39;
        android.os.IBinder $r19, $r21, $r25;
        android.app.IActivityManager $r22, $r26;
        android.util.ArrayMap $r24;
        android.os.RemoteException $r28;
        java.lang.StringBuilder $r30, $r33, $r34, $r37, $r40, $r42, $r43, $r45, $r46, $r50;
        java.lang.RuntimeException $r32, $r44;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$CreateServiceData;

        virtualinvoke r0.<android.app.ActivityThread: void unscheduleGcIdler()>();

        $r9 = r1.<android.app.ActivityThread$CreateServiceData: android.content.pm.ServiceInfo info>;

        $r11 = $r9.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r10 = r1.<android.app.ActivityThread$CreateServiceData: android.content.res.CompatibilityInfo compatInfo>;

        r2 = virtualinvoke r0.<android.app.ActivityThread: android.app.LoadedApk getPackageInfoNoCheck(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo)>($r11, $r10);

     label1:
        $r12 = virtualinvoke r2.<android.app.LoadedApk: java.lang.ClassLoader getClassLoader()>();

        $r14 = r1.<android.app.ActivityThread$CreateServiceData: android.content.pm.ServiceInfo info>;

        $r13 = $r14.<android.content.pm.ServiceInfo: java.lang.String name>;

        $r16 = virtualinvoke $r12.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r13);

        $r15 = virtualinvoke $r16.<java.lang.Class: java.lang.Object newInstance()>();

        r4 = (android.app.Service) $r15;

     label2:
        r6 = staticinvoke <android.app.ContextImpl: android.app.ContextImpl createAppContext(android.app.ActivityThread,android.app.LoadedApk)>(r0, r2);

        virtualinvoke r6.<android.app.ContextImpl: void setOuterContext(android.content.Context)>(r4);

        $r17 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        r7 = virtualinvoke r2.<android.app.LoadedApk: android.app.Application makeApplication(boolean,android.app.Instrumentation)>(0, $r17);

        $r18 = r1.<android.app.ActivityThread$CreateServiceData: android.content.pm.ServiceInfo info>;

        $r20 = $r18.<android.content.pm.ServiceInfo: java.lang.String name>;

        $r19 = r1.<android.app.ActivityThread$CreateServiceData: android.os.IBinder token>;

        $r22 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        virtualinvoke r4.<android.app.Service: void attach(android.content.Context,android.app.ActivityThread,java.lang.String,android.os.IBinder,android.app.Application,java.lang.Object)>(r6, r0, $r20, $r19, r7, $r22);

        virtualinvoke r4.<android.app.Service: void onCreate()>();

        $r24 = r0.<android.app.ActivityThread: android.util.ArrayMap mServices>;

        $r21 = r1.<android.app.ActivityThread$CreateServiceData: android.os.IBinder token>;

        virtualinvoke $r24.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, r4);

     label3:
        $r26 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r25 = r1.<android.app.ActivityThread$CreateServiceData: android.os.IBinder token>;

        interfaceinvoke $r26.<android.app.IActivityManager: void serviceDoneExecuting(android.os.IBinder,int,int,int)>($r25, 0, 0, 0);

     label4:
        return;

     label5:
        $r38 := @caughtexception;

        r3 = $r38;

        $r39 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        z0 = virtualinvoke $r39.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>(null, r3);

        r4 = null;

        if z0 != 0 goto label2;

        $r44 = new java.lang.RuntimeException;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to instantiate service ");

        $r48 = r1.<android.app.ActivityThread$CreateServiceData: android.content.pm.ServiceInfo info>;

        $r47 = $r48.<android.content.pm.ServiceInfo: java.lang.String name>;

        $r46 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r51 = virtualinvoke r3.<java.lang.Exception: java.lang.String toString()>();

        $r50 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);

        $r49 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r44.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r49, r3);

        throw $r44;

     label6:
        $r29 := @caughtexception;

        r5 = $r29;

        $r27 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $z1 = virtualinvoke $r27.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>(r4, r5);

        if $z1 != 0 goto label4;

        $r32 = new java.lang.RuntimeException;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create service ");

        $r31 = r1.<android.app.ActivityThread$CreateServiceData: android.content.pm.ServiceInfo info>;

        $r36 = $r31.<android.content.pm.ServiceInfo: java.lang.String name>;

        $r37 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r34 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r35 = virtualinvoke r5.<java.lang.Exception: java.lang.String toString()>();

        $r40 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r41, r5);

        throw $r32;

     label7:
        $r28 := @caughtexception;

        return;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label2 to label3 with label6;
        catch android.os.RemoteException from label3 to label4 with label7;
        catch java.lang.Exception from label3 to label4 with label6;
    }

    private void handleDestroyActivity(android.os.IBinder, boolean, int, boolean)
    {
        android.app.ActivityThread r0;
        android.os.IBinder r1, r7;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        int i0, $i1, $i2;
        android.app.ActivityThread$ActivityClientRecord r2;
        android.view.WindowManager r4;
        android.view.View r5, $r12, $r23;
        android.content.Context r6;
        android.app.IActivityManager $r8;
        android.app.Activity $r9, $r10, $r11, $r14, $r17, $r21, $r22, $r25, $r27;
        android.app.ContextImpl $r13;
        java.lang.String $r15, $r19, $r26;
        java.lang.Class $r16, $r20, $r28;
        android.view.WindowManagerGlobal $r18, $r24;
        android.os.RemoteException $r29;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        z1 := @parameter3: boolean;

        r2 = specialinvoke r0.<android.app.ActivityThread: android.app.ActivityThread$ActivityClientRecord performDestroyActivity(android.os.IBinder,boolean,int,boolean)>(r1, z0, i0, z1);

        if r2 == null goto label06;

        staticinvoke <android.app.ActivityThread: void cleanUpPendingRemoveWindows(android.app.ActivityThread$ActivityClientRecord)>(r2);

        $r9 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        r4 = virtualinvoke $r9.<android.app.Activity: android.view.WindowManager getWindowManager()>();

        $r10 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        r5 = $r10.<android.app.Activity: android.view.View mDecor>;

        if r5 == null goto label04;

        $r21 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z3 = $r21.<android.app.Activity: boolean mVisibleFromServer>;

        if $z3 == 0 goto label01;

        $i1 = r0.<android.app.ActivityThread: int mNumVisibleActivities>;

        $i2 = -1 + $i1;

        r0.<android.app.ActivityThread: int mNumVisibleActivities> = $i2;

     label01:
        r7 = virtualinvoke r5.<android.view.View: android.os.IBinder getWindowToken()>();

        $r22 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z4 = $r22.<android.app.Activity: boolean mWindowAdded>;

        if $z4 == 0 goto label02;

        $z5 = r2.<android.app.ActivityThread$ActivityClientRecord: boolean onlyLocalRequest>;

        if $z5 == 0 goto label09;

        r2.<android.app.ActivityThread$ActivityClientRecord: android.view.View mPendingRemoveWindow> = r5;

        r2.<android.app.ActivityThread$ActivityClientRecord: android.view.WindowManager mPendingRemoveWindowManager> = r4;

     label02:
        if r7 == null goto label03;

        $r23 = r2.<android.app.ActivityThread$ActivityClientRecord: android.view.View mPendingRemoveWindow>;

        if $r23 != null goto label03;

        $r24 = staticinvoke <android.view.WindowManagerGlobal: android.view.WindowManagerGlobal getInstance()>();

        $r27 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r28 = virtualinvoke $r27.<java.lang.Object: java.lang.Class getClass()>();

        $r26 = virtualinvoke $r28.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r24.<android.view.WindowManagerGlobal: void closeAll(android.os.IBinder,java.lang.String,java.lang.String)>(r7, $r26, "Activity");

     label03:
        $r25 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r25.<android.app.Activity: android.view.View mDecor> = null;

     label04:
        $r12 = r2.<android.app.ActivityThread$ActivityClientRecord: android.view.View mPendingRemoveWindow>;

        if $r12 != null goto label05;

        $r18 = staticinvoke <android.view.WindowManagerGlobal: android.view.WindowManagerGlobal getInstance()>();

        $r17 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r20 = virtualinvoke $r17.<java.lang.Object: java.lang.Class getClass()>();

        $r19 = virtualinvoke $r20.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r18.<android.view.WindowManagerGlobal: void closeAll(android.os.IBinder,java.lang.String,java.lang.String)>(r1, $r19, "Activity");

     label05:
        $r11 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        r6 = virtualinvoke $r11.<android.app.Activity: android.content.Context getBaseContext()>();

        $z2 = r6 instanceof android.app.ContextImpl;

        if $z2 == 0 goto label06;

        $r13 = (android.app.ContextImpl) r6;

        $r14 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r16 = virtualinvoke $r14.<java.lang.Object: java.lang.Class getClass()>();

        $r15 = virtualinvoke $r16.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r13.<android.app.ContextImpl: void scheduleFinalCleanup(java.lang.String,java.lang.String)>($r15, "Activity");

     label06:
        if z0 == 0 goto label08;

     label07:
        $r8 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        interfaceinvoke $r8.<android.app.IActivityManager: void activityDestroyed(android.os.IBinder)>(r1);

     label08:
        return;

     label09:
        interfaceinvoke r4.<android.view.WindowManager: void removeViewImmediate(android.view.View)>(r5);

        goto label02;

     label10:
        $r29 := @caughtexception;

        return;

        catch android.os.RemoteException from label07 to label08 with label10;
    }

    private void handleDestroyBackupAgent(android.app.ActivityThread$CreateBackupAgentData)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$CreateBackupAgentData r1;
        java.lang.String r2, $r13, $r20;
        android.app.backup.BackupAgent r3;
        java.lang.Exception r4, $r15;
        android.content.res.CompatibilityInfo $r5;
        android.content.pm.ApplicationInfo $r6, $r18;
        android.app.LoadedApk $r7;
        android.util.ArrayMap $r8, $r14;
        java.lang.Object $r9;
        java.lang.StringBuilder $r10, $r11, $r12, $r17, $r19, $r21;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$CreateBackupAgentData;

        $r6 = r1.<android.app.ActivityThread$CreateBackupAgentData: android.content.pm.ApplicationInfo appInfo>;

        $r5 = r1.<android.app.ActivityThread$CreateBackupAgentData: android.content.res.CompatibilityInfo compatInfo>;

        $r7 = virtualinvoke r0.<android.app.ActivityThread: android.app.LoadedApk getPackageInfoNoCheck(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo)>($r6, $r5);

        r2 = $r7.<android.app.LoadedApk: java.lang.String mPackageName>;

        $r8 = r0.<android.app.ActivityThread: android.util.ArrayMap mBackupAgents>;

        $r9 = virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        r3 = (android.app.backup.BackupAgent) $r9;

        if r3 == null goto label4;

     label1:
        virtualinvoke r3.<android.app.backup.BackupAgent: void onDestroy()>();

     label2:
        $r14 = r0.<android.app.ActivityThread: android.util.ArrayMap mBackupAgents>;

        virtualinvoke $r14.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r2);

        return;

     label3:
        $r15 := @caughtexception;

        r4 = $r15;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception thrown in onDestroy by backup agent of ");

        $r18 = r1.<android.app.ActivityThread$CreateBackupAgentData: android.content.pm.ApplicationInfo appInfo>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityThread", $r20);

        virtualinvoke r4.<java.lang.Exception: void printStackTrace()>();

        goto label2;

     label4:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempt to destroy unknown backup agent ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityThread", $r13);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void handleDumpActivity(android.app.ActivityThread$DumpComponentInfo)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$DumpComponentInfo r1;
        android.os.StrictMode$ThreadPolicy r2;
        java.lang.Throwable r3, $r19;
        android.app.ActivityThread$ActivityClientRecord r4;
        com.android.internal.util.FastPrintWriter r5, $r11;
        android.os.IBinder $r6;
        android.util.ArrayMap $r7;
        java.lang.Object $r8;
        android.os.ParcelFileDescriptor $r9, $r13, $r16, $r21;
        android.app.Activity $r10, $r15;
        java.io.FileOutputStream $r12;
        java.io.FileDescriptor $r14, $r17;
        java.lang.String $r18;
        java.lang.String[] $r20;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$DumpComponentInfo;

        r2 = staticinvoke <android.os.StrictMode: android.os.StrictMode$ThreadPolicy allowThreadDiskWrites()>();

     label1:
        $r7 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r6 = r1.<android.app.ActivityThread$DumpComponentInfo: android.os.IBinder token>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r6);

        r4 = (android.app.ActivityThread$ActivityClientRecord) $r8;

     label2:
        if r4 == null goto label4;

     label3:
        $r10 = r4.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        if $r10 == null goto label4;

        $r11 = new com.android.internal.util.FastPrintWriter;

        $r12 = new java.io.FileOutputStream;

        $r13 = r1.<android.app.ActivityThread$DumpComponentInfo: android.os.ParcelFileDescriptor fd>;

        $r14 = virtualinvoke $r13.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke $r12.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>($r14);

        specialinvoke $r11.<com.android.internal.util.FastPrintWriter: void <init>(java.io.OutputStream)>($r12);

        r5 = $r11;

        $r15 = r4.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r18 = r1.<android.app.ActivityThread$DumpComponentInfo: java.lang.String prefix>;

        $r16 = r1.<android.app.ActivityThread$DumpComponentInfo: android.os.ParcelFileDescriptor fd>;

        $r17 = virtualinvoke $r16.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        $r20 = r1.<android.app.ActivityThread$DumpComponentInfo: java.lang.String[] args>;

        virtualinvoke $r15.<android.app.Activity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>($r18, $r17, r5, $r20);

        virtualinvoke r5.<java.io.PrintWriter: void flush()>();

     label4:
        $r9 = r1.<android.app.ActivityThread$DumpComponentInfo: android.os.ParcelFileDescriptor fd>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r9);

        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r2);

        return;

     label5:
        $r19 := @caughtexception;

        r3 = $r19;

        $r21 = r1.<android.app.ActivityThread$DumpComponentInfo: android.os.ParcelFileDescriptor fd>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r21);

        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r2);

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    static final void handleDumpHeap(boolean, android.app.ActivityThread$DumpHeapData)
    {
        boolean z0;
        android.app.ActivityThread$DumpHeapData r0;
        java.lang.Throwable r1, $r23;
        java.io.IOException r2, r4, r5, $r12, $r13, $r14, $r16;
        android.os.ParcelFileDescriptor $r6, $r8, $r11, $r22, $r24;
        java.io.FileDescriptor $r7, $r10;
        java.lang.String $r9, $r19, $r20;
        java.lang.StringBuilder $r15, $r17, $r18, $r21;

        z0 := @parameter0: boolean;

        r0 := @parameter1: android.app.ActivityThread$DumpHeapData;

        if z0 == 0 goto label14;

     label01:
        $r9 = r0.<android.app.ActivityThread$DumpHeapData: java.lang.String path>;

        $r8 = r0.<android.app.ActivityThread$DumpHeapData: android.os.ParcelFileDescriptor fd>;

        $r10 = virtualinvoke $r8.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        staticinvoke <android.os.Debug: void dumpHprofData(java.lang.String,java.io.FileDescriptor)>($r9, $r10);

     label02:
        $r11 = r0.<android.app.ActivityThread$DumpHeapData: android.os.ParcelFileDescriptor fd>;

        virtualinvoke $r11.<android.os.ParcelFileDescriptor: void close()>();

     label03:
        return;

     label04:
        $r14 := @caughtexception;

        r5 = $r14;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityThread", "Failure closing profile fd", r5);

        return;

     label05:
        $r16 := @caughtexception;

     label06:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Managed heap dump failed on path ");

        $r19 = r0.<android.app.ActivityThread$DumpHeapData: java.lang.String path>;

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -- can the process access this path?");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityThread", $r20);

     label07:
        $r22 = r0.<android.app.ActivityThread$DumpHeapData: android.os.ParcelFileDescriptor fd>;

        virtualinvoke $r22.<android.os.ParcelFileDescriptor: void close()>();

     label08:
        return;

     label09:
        $r13 := @caughtexception;

        r4 = $r13;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityThread", "Failure closing profile fd", r4);

        return;

     label10:
        $r23 := @caughtexception;

        r1 = $r23;

     label11:
        $r24 = r0.<android.app.ActivityThread$DumpHeapData: android.os.ParcelFileDescriptor fd>;

        virtualinvoke $r24.<android.os.ParcelFileDescriptor: void close()>();

     label12:
        throw r1;

     label13:
        $r12 := @caughtexception;

        r2 = $r12;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityThread", "Failure closing profile fd", r2);

        goto label12;

     label14:
        $r6 = r0.<android.app.ActivityThread$DumpHeapData: android.os.ParcelFileDescriptor fd>;

        $r7 = virtualinvoke $r6.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        staticinvoke <android.os.Debug: void dumpNativeHeap(java.io.FileDescriptor)>($r7);

        return;

        catch java.io.IOException from label01 to label02 with label05;
        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.io.IOException from label02 to label03 with label04;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.io.IOException from label11 to label12 with label13;
    }

    private void handleDumpProvider(android.app.ActivityThread$DumpComponentInfo)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$DumpComponentInfo r1;
        android.os.StrictMode$ThreadPolicy r2;
        java.lang.Throwable r3, $r20;
        android.app.ActivityThread$ProviderClientRecord r4;
        com.android.internal.util.FastPrintWriter r5, $r11;
        android.os.IBinder $r6;
        android.util.ArrayMap $r7;
        java.lang.Object $r8;
        android.os.ParcelFileDescriptor $r9, $r13, $r16, $r19;
        android.content.ContentProvider $r10, $r15;
        java.io.FileOutputStream $r12;
        java.io.FileDescriptor $r14, $r18;
        java.lang.String[] $r17;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$DumpComponentInfo;

        r2 = staticinvoke <android.os.StrictMode: android.os.StrictMode$ThreadPolicy allowThreadDiskWrites()>();

     label1:
        $r7 = r0.<android.app.ActivityThread: android.util.ArrayMap mLocalProviders>;

        $r6 = r1.<android.app.ActivityThread$DumpComponentInfo: android.os.IBinder token>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r6);

        r4 = (android.app.ActivityThread$ProviderClientRecord) $r8;

     label2:
        if r4 == null goto label4;

     label3:
        $r10 = r4.<android.app.ActivityThread$ProviderClientRecord: android.content.ContentProvider mLocalProvider>;

        if $r10 == null goto label4;

        $r11 = new com.android.internal.util.FastPrintWriter;

        $r12 = new java.io.FileOutputStream;

        $r13 = r1.<android.app.ActivityThread$DumpComponentInfo: android.os.ParcelFileDescriptor fd>;

        $r14 = virtualinvoke $r13.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke $r12.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>($r14);

        specialinvoke $r11.<com.android.internal.util.FastPrintWriter: void <init>(java.io.OutputStream)>($r12);

        r5 = $r11;

        $r15 = r4.<android.app.ActivityThread$ProviderClientRecord: android.content.ContentProvider mLocalProvider>;

        $r16 = r1.<android.app.ActivityThread$DumpComponentInfo: android.os.ParcelFileDescriptor fd>;

        $r18 = virtualinvoke $r16.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        $r17 = r1.<android.app.ActivityThread$DumpComponentInfo: java.lang.String[] args>;

        virtualinvoke $r15.<android.content.ContentProvider: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>($r18, r5, $r17);

        virtualinvoke r5.<java.io.PrintWriter: void flush()>();

     label4:
        $r9 = r1.<android.app.ActivityThread$DumpComponentInfo: android.os.ParcelFileDescriptor fd>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r9);

        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r2);

        return;

     label5:
        $r20 := @caughtexception;

        r3 = $r20;

        $r19 = r1.<android.app.ActivityThread$DumpComponentInfo: android.os.ParcelFileDescriptor fd>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r19);

        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r2);

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    private void handleDumpService(android.app.ActivityThread$DumpComponentInfo)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$DumpComponentInfo r1;
        android.os.StrictMode$ThreadPolicy r2;
        java.lang.Throwable r3, $r18;
        android.app.Service r4;
        com.android.internal.util.FastPrintWriter r5, $r10;
        android.os.IBinder $r6;
        android.util.ArrayMap $r7;
        java.lang.Object $r8;
        android.os.ParcelFileDescriptor $r9, $r12, $r14, $r17;
        java.io.FileOutputStream $r11;
        java.io.FileDescriptor $r13, $r16;
        java.lang.String[] $r15;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$DumpComponentInfo;

        r2 = staticinvoke <android.os.StrictMode: android.os.StrictMode$ThreadPolicy allowThreadDiskWrites()>();

     label1:
        $r7 = r0.<android.app.ActivityThread: android.util.ArrayMap mServices>;

        $r6 = r1.<android.app.ActivityThread$DumpComponentInfo: android.os.IBinder token>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r6);

        r4 = (android.app.Service) $r8;

     label2:
        if r4 == null goto label4;

     label3:
        $r10 = new com.android.internal.util.FastPrintWriter;

        $r11 = new java.io.FileOutputStream;

        $r12 = r1.<android.app.ActivityThread$DumpComponentInfo: android.os.ParcelFileDescriptor fd>;

        $r13 = virtualinvoke $r12.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke $r11.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>($r13);

        specialinvoke $r10.<com.android.internal.util.FastPrintWriter: void <init>(java.io.OutputStream)>($r11);

        r5 = $r10;

        $r14 = r1.<android.app.ActivityThread$DumpComponentInfo: android.os.ParcelFileDescriptor fd>;

        $r16 = virtualinvoke $r14.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        $r15 = r1.<android.app.ActivityThread$DumpComponentInfo: java.lang.String[] args>;

        virtualinvoke r4.<android.app.Service: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>($r16, r5, $r15);

        virtualinvoke r5.<java.io.PrintWriter: void flush()>();

     label4:
        $r9 = r1.<android.app.ActivityThread$DumpComponentInfo: android.os.ParcelFileDescriptor fd>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r9);

        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r2);

        return;

     label5:
        $r18 := @caughtexception;

        r3 = $r18;

        $r17 = r1.<android.app.ActivityThread$DumpComponentInfo: android.os.ParcelFileDescriptor fd>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r17);

        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r2);

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    private void handleLaunchActivity(android.app.ActivityThread$ActivityClientRecord, android.content.Intent)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$ActivityClientRecord r1;
        android.content.Intent r2, $r25, $r43;
        android.os.Bundle r4;
        android.os.IBinder r5, $r11;
        boolean z0, z1, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.lang.Exception r6, $r36;
        android.util.SuperNotCalledException r7, $r20, $r49;
        android.os.ParcelFileDescriptor $r8, $r27;
        android.app.Activity $r9, $r14, $r15, $r16, $r18, $r19, $r33;
        android.app.IActivityManager $r10;
        android.content.res.Configuration $r12, $r13;
        android.app.Instrumentation $r17, $r34;
        java.lang.StringBuilder $r21, $r22, $r24, $r28, $r37, $r38, $r40, $r45, $r47;
        java.lang.String $r23, $r29, $r31, $r41, $r44, $r46;
        android.content.ComponentName $r26, $r42;
        android.app.ActivityThread$Profiler $r30, $r32, $r35;
        java.lang.RuntimeException $r39;
        android.os.RemoteException $r48;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$ActivityClientRecord;

        r2 := @parameter1: android.content.Intent;

        virtualinvoke r0.<android.app.ActivityThread: void unscheduleGcIdler()>();

        $r8 = r1.<android.app.ActivityThread$ActivityClientRecord: android.os.ParcelFileDescriptor profileFd>;

        if $r8 == null goto label01;

        $r32 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        $r31 = r1.<android.app.ActivityThread$ActivityClientRecord: java.lang.String profileFile>;

        $r27 = r1.<android.app.ActivityThread$ActivityClientRecord: android.os.ParcelFileDescriptor profileFd>;

        virtualinvoke $r32.<android.app.ActivityThread$Profiler: void setProfiler(java.lang.String,android.os.ParcelFileDescriptor)>($r31, $r27);

        $r30 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        virtualinvoke $r30.<android.app.ActivityThread$Profiler: void startProfiling()>();

        $r35 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        $z9 = r1.<android.app.ActivityThread$ActivityClientRecord: boolean autoStopProfiler>;

        $r35.<android.app.ActivityThread$Profiler: boolean autoStopProfiler> = $z9;

     label01:
        virtualinvoke r0.<android.app.ActivityThread: void handleConfigurationChanged(android.content.res.Configuration,android.content.res.CompatibilityInfo)>(null, null);

        $r9 = specialinvoke r0.<android.app.ActivityThread: android.app.Activity performLaunchActivity(android.app.ActivityThread$ActivityClientRecord,android.content.Intent)>(r1, r2);

        if $r9 == null goto label10;

        $r13 = new android.content.res.Configuration;

        $r12 = r0.<android.app.ActivityThread: android.content.res.Configuration mConfiguration>;

        specialinvoke $r13.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>($r12);

        r1.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration createdConfig> = $r13;

        r4 = r1.<android.app.ActivityThread$ActivityClientRecord: android.os.Bundle state>;

        r5 = r1.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder token>;

        z0 = r1.<android.app.ActivityThread$ActivityClientRecord: boolean isForward>;

        $r14 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z3 = $r14.<android.app.Activity: boolean mFinished>;

        if $z3 != 0 goto label06;

        $z8 = r1.<android.app.ActivityThread$ActivityClientRecord: boolean startsNotResumed>;

        if $z8 != 0 goto label06;

        z1 = 1;

     label02:
        virtualinvoke r0.<android.app.ActivityThread: void handleResumeActivity(android.os.IBinder,boolean,boolean,boolean)>(r5, 0, z0, z1);

        $r15 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z4 = $r15.<android.app.Activity: boolean mFinished>;

        if $z4 != 0 goto label09;

        $z5 = r1.<android.app.ActivityThread$ActivityClientRecord: boolean startsNotResumed>;

        if $z5 == 0 goto label09;

     label03:
        $r16 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r16.<android.app.Activity: boolean mCalled> = 0;

        $r17 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r18 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r17.<android.app.Instrumentation: void callActivityOnPause(android.app.Activity)>($r18);

        $z6 = virtualinvoke r1.<android.app.ActivityThread$ActivityClientRecord: boolean isPreHoneycomb()>();

        if $z6 == 0 goto label04;

        r1.<android.app.ActivityThread$ActivityClientRecord: android.os.Bundle state> = r4;

     label04:
        $r19 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z7 = $r19.<android.app.Activity: boolean mCalled>;

        if $z7 != 0 goto label08;

        $r20 = new android.util.SuperNotCalledException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity ");

        $r25 = r1.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        $r26 = virtualinvoke $r25.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r23 = virtualinvoke $r26.<android.content.ComponentName: java.lang.String toShortString()>();

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not call through to super.onPause()");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<android.util.SuperNotCalledException: void <init>(java.lang.String)>($r29);

        throw $r20;

     label05:
        $r49 := @caughtexception;

        r7 = $r49;

        throw r7;

     label06:
        z1 = 0;

        goto label02;

     label07:
        $r36 := @caughtexception;

        r6 = $r36;

        $r34 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r33 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z10 = virtualinvoke $r34.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>($r33, r6);

        if $z10 != 0 goto label08;

        $r39 = new java.lang.RuntimeException;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to pause activity ");

        $r43 = r1.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        $r42 = virtualinvoke $r43.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r41 = virtualinvoke $r42.<android.content.ComponentName: java.lang.String toShortString()>();

        $r40 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r47 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r46 = virtualinvoke r6.<java.lang.Exception: java.lang.String toString()>();

        $r45 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r39.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r44, r6);

        throw $r39;

     label08:
        r1.<android.app.ActivityThread$ActivityClientRecord: boolean paused> = 1;

     label09:
        return;

     label10:
        $r10 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r11 = r1.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder token>;

        interfaceinvoke $r10.<android.app.IActivityManager: boolean finishActivity(android.os.IBinder,int,android.content.Intent)>($r11, 0, null);

     label11:
        return;

     label12:
        $r48 := @caughtexception;

        return;

        catch android.util.SuperNotCalledException from label03 to label04 with label05;
        catch java.lang.Exception from label03 to label04 with label07;
        catch android.util.SuperNotCalledException from label04 to label05 with label05;
        catch java.lang.Exception from label04 to label05 with label07;
        catch android.os.RemoteException from label10 to label11 with label12;
    }

    private void handleNewIntent(android.app.ActivityThread$NewIntentData)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$NewIntentData r1;
        java.util.List $r2;
        android.os.IBinder $r3;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$NewIntentData;

        $r3 = r1.<android.app.ActivityThread$NewIntentData: android.os.IBinder token>;

        $r2 = r1.<android.app.ActivityThread$NewIntentData: java.util.List intents>;

        virtualinvoke r0.<android.app.ActivityThread: void performNewIntents(android.os.IBinder,java.util.List)>($r3, $r2);

        return;
    }

    private void handlePauseActivity(android.os.IBinder, boolean, boolean, int)
    {
        android.app.ActivityThread r0;
        android.os.IBinder r1;
        boolean z0, z1, $z2, $z3;
        int i0, $i1, $i2;
        android.app.ActivityThread$ActivityClientRecord r2;
        android.app.Activity r3;
        android.util.ArrayMap $r5;
        java.lang.Object $r6;
        android.os.RemoteException $r8;
        android.app.IActivityManager $r9;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        i0 := @parameter3: int;

        $r5 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (android.app.ActivityThread$ActivityClientRecord) $r6;

        if r2 == null goto label3;

        if z1 == 0 goto label1;

        virtualinvoke r0.<android.app.ActivityThread: void performUserLeavingActivity(android.app.ActivityThread$ActivityClientRecord)>(r2);

     label1:
        r3 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $i1 = r3.<android.app.Activity: int mConfigChangeFlags>;

        $i2 = i0 | $i1;

        r3.<android.app.Activity: int mConfigChangeFlags> = $i2;

        $z2 = virtualinvoke r2.<android.app.ActivityThread$ActivityClientRecord: boolean isPreHoneycomb()>();

        virtualinvoke r0.<android.app.ActivityThread: android.os.Bundle performPauseActivity(android.os.IBinder,boolean,boolean)>(r1, z0, $z2);

        $z3 = virtualinvoke r2.<android.app.ActivityThread$ActivityClientRecord: boolean isPreHoneycomb()>();

        if $z3 == 0 goto label2;

        staticinvoke <android.app.QueuedWork: void waitToFinish()>();

     label2:
        $r9 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        interfaceinvoke $r9.<android.app.IActivityManager: void activityPaused(android.os.IBinder)>(r1);

     label3:
        return;

     label4:
        $r8 := @caughtexception;

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private void handleReceiver(android.app.ActivityThread$ReceiverData)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$ReceiverData r1;
        java.lang.String r2, $r36, $r42, $r47, $r49;
        android.app.LoadedApk r3;
        android.app.IActivityManager r4;
        java.lang.Exception r5, r9, $r28, $r39;
        java.lang.ClassLoader r6;
        android.content.BroadcastReceiver r7;
        java.lang.Throwable r8, $r30;
        android.app.ContextImpl r10;
        android.content.Intent $r11, $r17, $r23, $r24;
        android.content.ComponentName $r12;
        android.content.pm.ActivityInfo $r13;
        android.content.res.CompatibilityInfo $r14;
        android.content.pm.ApplicationInfo $r15;
        java.lang.Class $r16;
        android.app.Instrumentation $r18, $r29;
        java.lang.Object $r19;
        android.content.Context $r20, $r25;
        android.app.Application $r21;
        java.lang.ThreadLocal $r22, $r27, $r31, $r34;
        android.content.BroadcastReceiver$PendingResult $r26;
        java.lang.RuntimeException $r32, $r40;
        java.lang.StringBuilder $r33, $r35, $r37, $r38, $r41, $r43, $r44, $r45, $r46, $r48;
        boolean $z0;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$ReceiverData;

        virtualinvoke r0.<android.app.ActivityThread: void unscheduleGcIdler()>();

        $r11 = r1.<android.app.ActivityThread$ReceiverData: android.content.Intent intent>;

        $r12 = virtualinvoke $r11.<android.content.Intent: android.content.ComponentName getComponent()>();

        r2 = virtualinvoke $r12.<android.content.ComponentName: java.lang.String getClassName()>();

        $r13 = r1.<android.app.ActivityThread$ReceiverData: android.content.pm.ActivityInfo info>;

        $r15 = $r13.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r14 = r1.<android.app.ActivityThread$ReceiverData: android.content.res.CompatibilityInfo compatInfo>;

        r3 = virtualinvoke r0.<android.app.ActivityThread: android.app.LoadedApk getPackageInfoNoCheck(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo)>($r15, $r14);

        r4 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

     label01:
        r6 = virtualinvoke r3.<android.app.LoadedApk: java.lang.ClassLoader getClassLoader()>();

        $r17 = r1.<android.app.ActivityThread$ReceiverData: android.content.Intent intent>;

        virtualinvoke $r17.<android.content.Intent: void setExtrasClassLoader(java.lang.ClassLoader)>(r6);

        virtualinvoke r1.<android.app.ActivityThread$ReceiverData: void setExtrasClassLoader(java.lang.ClassLoader)>(r6);

        $r16 = virtualinvoke r6.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r2);

        $r19 = virtualinvoke $r16.<java.lang.Class: java.lang.Object newInstance()>();

        r7 = (android.content.BroadcastReceiver) $r19;

     label02:
        $r18 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r21 = virtualinvoke r3.<android.app.LoadedApk: android.app.Application makeApplication(boolean,android.app.Instrumentation)>(0, $r18);

        $r20 = virtualinvoke $r21.<android.app.Application: android.content.Context getBaseContext()>();

        r10 = (android.app.ContextImpl) $r20;

        $r22 = <android.app.ActivityThread: java.lang.ThreadLocal sCurrentBroadcastIntent>;

        $r23 = r1.<android.app.ActivityThread$ReceiverData: android.content.Intent intent>;

        virtualinvoke $r22.<java.lang.ThreadLocal: void set(java.lang.Object)>($r23);

        virtualinvoke r7.<android.content.BroadcastReceiver: void setPendingResult(android.content.BroadcastReceiver$PendingResult)>(r1);

        $r25 = virtualinvoke r10.<android.app.ContextImpl: android.content.Context getReceiverRestrictedContext()>();

        $r24 = r1.<android.app.ActivityThread$ReceiverData: android.content.Intent intent>;

        virtualinvoke r7.<android.content.BroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>($r25, $r24);

     label03:
        $r27 = <android.app.ActivityThread: java.lang.ThreadLocal sCurrentBroadcastIntent>;

        virtualinvoke $r27.<java.lang.ThreadLocal: void set(java.lang.Object)>(null);

     label04:
        $r26 = virtualinvoke r7.<android.content.BroadcastReceiver: android.content.BroadcastReceiver$PendingResult getPendingResult()>();

        if $r26 == null goto label05;

        virtualinvoke r1.<android.app.ActivityThread$ReceiverData: void finish()>();

     label05:
        return;

     label06:
        $r39 := @caughtexception;

        r5 = $r39;

        virtualinvoke r1.<android.app.ActivityThread$ReceiverData: void sendFinished(android.app.IActivityManager)>(r4);

        $r40 = new java.lang.RuntimeException;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to instantiate receiver ");

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r49 = virtualinvoke r5.<java.lang.Exception: java.lang.String toString()>();

        $r48 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r47 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r40.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r47, r5);

        throw $r40;

     label07:
        $r28 := @caughtexception;

        r9 = $r28;

     label08:
        virtualinvoke r1.<android.app.ActivityThread$ReceiverData: void sendFinished(android.app.IActivityManager)>(r4);

        $r29 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $z0 = virtualinvoke $r29.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>(r7, r9);

        if $z0 != 0 goto label10;

        $r32 = new java.lang.RuntimeException;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to start receiver ");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r35 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r36 = virtualinvoke r9.<java.lang.Exception: java.lang.String toString()>();

        $r41 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r42, r9);

        throw $r32;

     label09:
        $r30 := @caughtexception;

        r8 = $r30;

        $r31 = <android.app.ActivityThread: java.lang.ThreadLocal sCurrentBroadcastIntent>;

        virtualinvoke $r31.<java.lang.ThreadLocal: void set(java.lang.Object)>(null);

        throw r8;

     label10:
        $r34 = <android.app.ActivityThread: java.lang.ThreadLocal sCurrentBroadcastIntent>;

        virtualinvoke $r34.<java.lang.ThreadLocal: void set(java.lang.Object)>(null);

        goto label04;

        catch java.lang.Exception from label01 to label02 with label06;
        catch java.lang.Exception from label02 to label03 with label07;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label08 to label09 with label09;
    }

    private void handleRelaunchActivity(android.app.ActivityThread$ActivityClientRecord)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$ActivityClientRecord r1, r5, r6, r9;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        android.app.ResourcesManager r2;
        java.lang.Throwable r3, $r49;
        android.os.IBinder r4, $r13, $r19, $r35, $r44;
        android.content.res.Configuration r7, r8, $r14, $r37, $r38, $r40, $r41, $r45, $r46;
        android.app.Activity r10, $r17, $r18, $r32;
        android.content.Intent r11;
        java.util.ArrayList $r12, $r42, $r47;
        java.lang.Object $r15, $r43;
        android.util.ArrayMap $r16;
        boolean $z0, $z1, $z2, $z5, $z6, $z8, $z9, $z10;
        android.os.Bundle $r20, $r30, $r33, $r34;
        java.util.List $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r31;
        android.app.Instrumentation $r36;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$ActivityClientRecord;

        virtualinvoke r0.<android.app.ActivityThread: void unscheduleGcIdler()>();

        i0 = 0;

        r2 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        entermonitor r2;

     label01:
        $r12 = r0.<android.app.ActivityThread: java.util.ArrayList mRelaunchingActivities>;

        i1 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

        r4 = r1.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder token>;

     label02:
        r5 = null;

        i2 = 0;

     label03:
        if i2 >= i1 goto label08;

     label04:
        $r42 = r0.<android.app.ActivityThread: java.util.ArrayList mRelaunchingActivities>;

        $r43 = virtualinvoke $r42.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r6 = (android.app.ActivityThread$ActivityClientRecord) $r43;

        $r44 = r6.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder token>;

        if $r44 != r4 goto label29;

     label05:
        r5 = r6;

     label06:
        $i6 = r5.<android.app.ActivityThread$ActivityClientRecord: int pendingConfigChanges>;

        i0 = i0 | $i6;

        $r47 = r0.<android.app.ActivityThread: java.util.ArrayList mRelaunchingActivities>;

        virtualinvoke $r47.<java.util.ArrayList: java.lang.Object remove(int)>(i2);

     label07:
        i2 = i2 + -1;

        i1 = i1 + -1;

        goto label29;

     label08:
        if r5 != null goto label11;

     label09:
        exitmonitor r2;

     label10:
        return;

     label11:
        r7 = r0.<android.app.ActivityThread: android.content.res.Configuration mPendingConfiguration>;

     label12:
        r8 = null;

        if r7 == null goto label14;

     label13:
        r8 = r0.<android.app.ActivityThread: android.content.res.Configuration mPendingConfiguration>;

        r0.<android.app.ActivityThread: android.content.res.Configuration mPendingConfiguration> = null;

     label14:
        exitmonitor r2;

     label15:
        $r14 = r5.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration createdConfig>;

        if $r14 == null goto label18;

        $r38 = r0.<android.app.ActivityThread: android.content.res.Configuration mConfiguration>;

        if $r38 == null goto label16;

        $r40 = r5.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration createdConfig>;

        $r41 = r0.<android.app.ActivityThread: android.content.res.Configuration mConfiguration>;

        $z9 = virtualinvoke $r40.<android.content.res.Configuration: boolean isOtherSeqNewer(android.content.res.Configuration)>($r41);

        if $z9 == 0 goto label18;

        $r46 = r0.<android.app.ActivityThread: android.content.res.Configuration mConfiguration>;

        $r45 = r5.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration createdConfig>;

        $i7 = virtualinvoke $r46.<android.content.res.Configuration: int diff(android.content.res.Configuration)>($r45);

        if $i7 == 0 goto label18;

     label16:
        if r8 == null goto label17;

        $r37 = r5.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration createdConfig>;

        $z10 = virtualinvoke $r37.<android.content.res.Configuration: boolean isOtherSeqNewer(android.content.res.Configuration)>(r8);

        if $z10 == 0 goto label18;

     label17:
        r8 = r5.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration createdConfig>;

     label18:
        if r8 == null goto label19;

        $i5 = r8.<android.content.res.Configuration: int densityDpi>;

        r0.<android.app.ActivityThread: int mCurDefaultDisplayDpi> = $i5;

        specialinvoke r0.<android.app.ActivityThread: void updateDefaultDensity()>();

        virtualinvoke r0.<android.app.ActivityThread: void handleConfigurationChanged(android.content.res.Configuration,android.content.res.CompatibilityInfo)>(r8, null);

     label19:
        $r16 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r13 = r5.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder token>;

        $r15 = virtualinvoke $r16.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r13);

        r9 = (android.app.ActivityThread$ActivityClientRecord) $r15;

        if r9 == null goto label30;

        r10 = r9.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $i4 = r10.<android.app.Activity: int mConfigChangeFlags>;

        $i3 = i0 | $i4;

        r10.<android.app.Activity: int mConfigChangeFlags> = $i3;

        $z0 = r5.<android.app.ActivityThread$ActivityClientRecord: boolean onlyLocalRequest>;

        r9.<android.app.ActivityThread$ActivityClientRecord: boolean onlyLocalRequest> = $z0;

        $r17 = r9.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        r11 = $r17.<android.app.Activity: android.content.Intent mIntent>;

        $r18 = r9.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r18.<android.app.Activity: boolean mChangingConfigurations> = 1;

        $z1 = r9.<android.app.ActivityThread$ActivityClientRecord: boolean paused>;

        if $z1 != 0 goto label20;

        $r35 = r9.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder token>;

        $z8 = virtualinvoke r9.<android.app.ActivityThread$ActivityClientRecord: boolean isPreHoneycomb()>();

        virtualinvoke r0.<android.app.ActivityThread: android.os.Bundle performPauseActivity(android.os.IBinder,boolean,boolean)>($r35, 0, $z8);

     label20:
        $r20 = r9.<android.app.ActivityThread$ActivityClientRecord: android.os.Bundle state>;

        if $r20 != null goto label21;

        $z6 = r9.<android.app.ActivityThread$ActivityClientRecord: boolean stopped>;

        if $z6 != 0 goto label21;

        $z5 = virtualinvoke r9.<android.app.ActivityThread$ActivityClientRecord: boolean isPreHoneycomb()>();

        if $z5 != 0 goto label21;

        $r30 = new android.os.Bundle;

        specialinvoke $r30.<android.os.Bundle: void <init>()>();

        r9.<android.app.ActivityThread$ActivityClientRecord: android.os.Bundle state> = $r30;

        $r34 = r9.<android.app.ActivityThread$ActivityClientRecord: android.os.Bundle state>;

        virtualinvoke $r34.<android.os.Bundle: boolean setAllowFds(boolean)>(0);

        $r36 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r32 = r9.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r33 = r9.<android.app.ActivityThread$ActivityClientRecord: android.os.Bundle state>;

        virtualinvoke $r36.<android.app.Instrumentation: void callActivityOnSaveInstanceState(android.app.Activity,android.os.Bundle)>($r32, $r33);

     label21:
        $r19 = r9.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder token>;

        specialinvoke r0.<android.app.ActivityThread: void handleDestroyActivity(android.os.IBinder,boolean,int,boolean)>($r19, 0, i0, 1);

        r9.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity> = null;

        r9.<android.app.ActivityThread$ActivityClientRecord: android.view.Window window> = null;

        r9.<android.app.ActivityThread$ActivityClientRecord: boolean hideForNow> = 0;

        r9.<android.app.ActivityThread$ActivityClientRecord: android.app.ActivityThread$ActivityClientRecord nextIdle> = null;

        $r22 = r5.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingResults>;

        if $r22 == null goto label22;

        $r28 = r9.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingResults>;

        if $r28 != null goto label27;

        $r31 = r5.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingResults>;

        r9.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingResults> = $r31;

     label22:
        $r23 = r5.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingIntents>;

        if $r23 == null goto label23;

        $r21 = r9.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingIntents>;

        if $r21 != null goto label28;

        $r24 = r5.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingIntents>;

        r9.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingIntents> = $r24;

     label23:
        $z2 = r5.<android.app.ActivityThread$ActivityClientRecord: boolean startsNotResumed>;

        r9.<android.app.ActivityThread$ActivityClientRecord: boolean startsNotResumed> = $z2;

        specialinvoke r0.<android.app.ActivityThread: void handleLaunchActivity(android.app.ActivityThread$ActivityClientRecord,android.content.Intent)>(r9, r11);

        return;

     label24:
        $r49 := @caughtexception;

        r3 = $r49;

     label25:
        exitmonitor r2;

     label26:
        throw r3;

     label27:
        $r27 = r9.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingResults>;

        $r29 = r5.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingResults>;

        interfaceinvoke $r27.<java.util.List: boolean addAll(java.util.Collection)>($r29);

        goto label22;

     label28:
        $r26 = r9.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingIntents>;

        $r25 = r5.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingIntents>;

        interfaceinvoke $r26.<java.util.List: boolean addAll(java.util.Collection)>($r25);

        goto label23;

     label29:
        i2 = i2 + 1;

        goto label03;

     label30:
        return;

        catch java.lang.Throwable from label01 to label02 with label24;
        catch java.lang.Throwable from label04 to label05 with label24;
        catch java.lang.Throwable from label06 to label07 with label24;
        catch java.lang.Throwable from label09 to label10 with label24;
        catch java.lang.Throwable from label11 to label12 with label24;
        catch java.lang.Throwable from label13 to label14 with label24;
        catch java.lang.Throwable from label14 to label15 with label24;
        catch java.lang.Throwable from label25 to label26 with label24;
    }

    private void handleRequestThumbnail(android.os.IBinder)
    {
        android.app.ActivityThread r0;
        android.os.IBinder r1;
        android.app.ActivityThread$ActivityClientRecord r2;
        android.graphics.Bitmap r3;
        java.lang.Exception r4, $r14;
        boolean z0;
        java.lang.CharSequence r5, r7;
        android.util.ArrayMap $r8;
        java.lang.Object $r9;
        android.app.Activity $r10, $r13;
        android.app.IActivityManager $r11;
        android.os.RemoteException $r12;
        android.app.Instrumentation $r15;
        java.lang.StringBuilder $r16, $r19, $r22, $r23, $r24;
        java.lang.RuntimeException $r17;
        android.content.Intent $r18;
        java.lang.String $r20, $r25, $r26;
        android.content.ComponentName $r21;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.os.IBinder;

        $r8 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r9 = virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (android.app.ActivityThread$ActivityClientRecord) $r9;

        r3 = specialinvoke r0.<android.app.ActivityThread: android.graphics.Bitmap createThumbnailBitmap(android.app.ActivityThread$ActivityClientRecord)>(r2);

     label1:
        $r10 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        r7 = virtualinvoke $r10.<android.app.Activity: java.lang.CharSequence onCreateDescription()>();

     label2:
        r5 = r7;

     label3:
        $r11 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        interfaceinvoke $r11.<android.app.IActivityManager: void reportThumbnail(android.os.IBinder,android.graphics.Bitmap,java.lang.CharSequence)>(r1, r3, r5);

     label4:
        return;

     label5:
        $r14 := @caughtexception;

        r4 = $r14;

        $r15 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r13 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        z0 = virtualinvoke $r15.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>($r13, r4);

        r5 = null;

        if z0 != 0 goto label3;

        $r17 = new java.lang.RuntimeException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create description of activity ");

        $r18 = r2.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        $r21 = virtualinvoke $r18.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r20 = virtualinvoke $r21.<android.content.ComponentName: java.lang.String toShortString()>();

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r25 = virtualinvoke r4.<java.lang.Exception: java.lang.String toString()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r26, r4);

        throw $r17;

     label6:
        $r12 := @caughtexception;

        return;

        catch java.lang.Exception from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label6;
    }

    private void handleSendResult(android.app.ActivityThread$ResultData)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$ResultData r1;
        android.app.ActivityThread$ActivityClientRecord r2;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Exception r3, $r30;
        android.util.SuperNotCalledException r4, $r17, $r42;
        android.os.IBinder $r5;
        android.util.ArrayMap $r6;
        java.lang.Object $r7;
        android.app.Activity $r8, $r10, $r11, $r12, $r13, $r14, $r15, $r27, $r28;
        java.util.List $r9;
        android.app.Instrumentation $r16, $r29;
        java.lang.StringBuilder $r18, $r19, $r22, $r25, $r31, $r32, $r35, $r38, $r40;
        android.content.ComponentName $r20, $r37;
        android.content.Intent $r21, $r36;
        java.lang.String $r23, $r24, $r34, $r39, $r41;
        android.view.View $r26;
        java.lang.RuntimeException $r33;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$ResultData;

        $r6 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r5 = r1.<android.app.ActivityThread$ResultData: android.os.IBinder token>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r5);

        r2 = (android.app.ActivityThread$ActivityClientRecord) $r7;

        if r2 == null goto label8;

        $z1 = r2.<android.app.ActivityThread$ActivityClientRecord: boolean paused>;

        if $z1 != 0 goto label5;

        z0 = 1;

     label1:
        $r8 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z2 = $r8.<android.app.Activity: boolean mFinished>;

        if $z2 != 0 goto label2;

        $r27 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r26 = $r27.<android.app.Activity: android.view.View mDecor>;

        if $r26 == null goto label2;

        $z4 = r2.<android.app.ActivityThread$ActivityClientRecord: boolean hideForNow>;

        if $z4 == 0 goto label2;

        if z0 == 0 goto label2;

        specialinvoke r0.<android.app.ActivityThread: void updateVisibility(android.app.ActivityThread$ActivityClientRecord,boolean)>(r2, 1);

     label2:
        if z0 == 0 goto label7;

     label3:
        $r12 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r12.<android.app.Activity: boolean mCalled> = 0;

        $r14 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r14.<android.app.Activity: boolean mTemporaryPause> = 1;

        $r16 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r13 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r16.<android.app.Instrumentation: void callActivityOnPause(android.app.Activity)>($r13);

        $r15 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z3 = $r15.<android.app.Activity: boolean mCalled>;

        if $z3 != 0 goto label7;

        $r17 = new android.util.SuperNotCalledException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity ");

        $r21 = r2.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        $r20 = virtualinvoke $r21.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r23 = virtualinvoke $r20.<android.content.ComponentName: java.lang.String toShortString()>();

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not call through to super.onPause()");

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<android.util.SuperNotCalledException: void <init>(java.lang.String)>($r24);

        throw $r17;

     label4:
        $r42 := @caughtexception;

        r4 = $r42;

        throw r4;

     label5:
        z0 = 0;

        goto label1;

     label6:
        $r30 := @caughtexception;

        r3 = $r30;

        $r29 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r28 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z5 = virtualinvoke $r29.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>($r28, r3);

        if $z5 != 0 goto label7;

        $r33 = new java.lang.RuntimeException;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to pause activity ");

        $r36 = r2.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        $r37 = virtualinvoke $r36.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r34 = virtualinvoke $r37.<android.content.ComponentName: java.lang.String toShortString()>();

        $r35 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r40 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r41 = virtualinvoke r3.<java.lang.Exception: java.lang.String toString()>();

        $r38 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r39, r3);

        throw $r33;

     label7:
        $r9 = r1.<android.app.ActivityThread$ResultData: java.util.List results>;

        specialinvoke r0.<android.app.ActivityThread: void deliverResults(android.app.ActivityThread$ActivityClientRecord,java.util.List)>(r2, $r9);

        if z0 == 0 goto label8;

        $r10 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r10.<android.app.Activity: void performResume()>();

        $r11 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r11.<android.app.Activity: boolean mTemporaryPause> = 0;

     label8:
        return;

        catch android.util.SuperNotCalledException from label3 to label4 with label4;
        catch java.lang.Exception from label3 to label4 with label6;
    }

    private void handleServiceArgs(android.app.ActivityThread$ServiceArgsData)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$ServiceArgsData r1;
        android.app.Service r2;
        java.lang.Exception r3, $r14;
        int i0, $i1, $i2, $i3;
        android.os.IBinder $r5, $r11;
        android.util.ArrayMap $r6;
        java.lang.Object $r7;
        android.content.Intent $r8, $r9, $r12, $r13, $r21;
        boolean $z0, $z1;
        android.app.IActivityManager $r10;
        java.lang.ClassLoader $r15;
        android.app.Instrumentation $r16;
        java.lang.StringBuilder $r17, $r19, $r20, $r22, $r23, $r24, $r28;
        java.lang.RuntimeException $r18;
        java.lang.String $r25, $r27;
        android.os.RemoteException $r26;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$ServiceArgsData;

        $r6 = r0.<android.app.ActivityThread: android.util.ArrayMap mServices>;

        $r5 = r1.<android.app.ActivityThread$ServiceArgsData: android.os.IBinder token>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r5);

        r2 = (android.app.Service) $r7;

        if r2 == null goto label11;

     label01:
        $r8 = r1.<android.app.ActivityThread$ServiceArgsData: android.content.Intent args>;

        if $r8 == null goto label02;

        $r13 = r1.<android.app.ActivityThread$ServiceArgsData: android.content.Intent args>;

        $r15 = virtualinvoke r2.<android.app.Service: java.lang.ClassLoader getClassLoader()>();

        virtualinvoke $r13.<android.content.Intent: void setExtrasClassLoader(java.lang.ClassLoader)>($r15);

     label02:
        $z0 = r1.<android.app.ActivityThread$ServiceArgsData: boolean taskRemoved>;

        if $z0 != 0 goto label07;

        $r12 = r1.<android.app.ActivityThread$ServiceArgsData: android.content.Intent args>;

        $i3 = r1.<android.app.ActivityThread$ServiceArgsData: int flags>;

        $i2 = r1.<android.app.ActivityThread$ServiceArgsData: int startId>;

        i0 = virtualinvoke r2.<android.app.Service: int onStartCommand(android.content.Intent,int,int)>($r12, $i3, $i2);

     label03:
        staticinvoke <android.app.QueuedWork: void waitToFinish()>();

     label04:
        $r10 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r11 = r1.<android.app.ActivityThread$ServiceArgsData: android.os.IBinder token>;

        $i1 = r1.<android.app.ActivityThread$ServiceArgsData: int startId>;

        interfaceinvoke $r10.<android.app.IActivityManager: void serviceDoneExecuting(android.os.IBinder,int,int,int)>($r11, 1, $i1, i0);

     label05:
        virtualinvoke r0.<android.app.ActivityThread: void ensureJitEnabled()>();

     label06:
        return;

     label07:
        $r9 = r1.<android.app.ActivityThread$ServiceArgsData: android.content.Intent args>;

        virtualinvoke r2.<android.app.Service: void onTaskRemoved(android.content.Intent)>($r9);

     label08:
        i0 = 1000;

        goto label03;

     label09:
        $r14 := @caughtexception;

        r3 = $r14;

        $r16 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $z1 = virtualinvoke $r16.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>(r2, r3);

        if $z1 != 0 goto label11;

        $r18 = new java.lang.RuntimeException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to start service ");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with ");

        $r21 = r1.<android.app.ActivityThread$ServiceArgsData: android.content.Intent args>;

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r27 = virtualinvoke r3.<java.lang.Exception: java.lang.String toString()>();

        $r28 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r25 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r25, r3);

        throw $r18;

     label10:
        $r26 := @caughtexception;

        goto label05;

     label11:
        return;

        catch java.lang.Exception from label01 to label02 with label09;
        catch java.lang.Exception from label02 to label03 with label09;
        catch java.lang.Exception from label03 to label04 with label09;
        catch android.os.RemoteException from label04 to label05 with label10;
        catch java.lang.Exception from label04 to label05 with label09;
        catch java.lang.Exception from label05 to label06 with label09;
        catch java.lang.Exception from label07 to label08 with label09;
    }

    private void handleSetCoreSettings(android.os.Bundle)
    {
        android.app.ActivityThread r0;
        android.os.Bundle r1;
        android.app.ResourcesManager r2;
        java.lang.Throwable r3, $r4;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.os.Bundle;

        r2 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        entermonitor r2;

     label1:
        r0.<android.app.ActivityThread: android.os.Bundle mCoreSettings> = r1;

        exitmonitor r2;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void handleSleeping(android.os.IBinder, boolean)
    {
        android.app.ActivityThread r0;
        android.os.IBinder r1, $r10;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        android.app.ActivityThread$ActivityClientRecord r2;
        java.lang.Exception r4, $r16;
        android.util.ArrayMap $r5;
        java.lang.Object $r6;
        android.app.Activity $r7, $r8, $r11, $r19;
        android.app.IActivityManager $r9;
        java.lang.StringBuilder $r12, $r13, $r14, $r21, $r22, $r24, $r27, $r29;
        java.lang.String $r15, $r23, $r28, $r30;
        android.os.RemoteException $r17;
        android.app.Instrumentation $r18;
        java.lang.RuntimeException $r20;
        android.content.Intent $r25;
        android.content.ComponentName $r26;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        $r5 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (android.app.ActivityThread$ActivityClientRecord) $r6;

        if r2 != null goto label02;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleSleeping: no activity for token ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityThread", $r15);

     label01:
        return;

     label02:
        if z0 == 0 goto label10;

        $z3 = r2.<android.app.ActivityThread$ActivityClientRecord: boolean stopped>;

        if $z3 != 0 goto label05;

        $z5 = virtualinvoke r2.<android.app.ActivityThread$ActivityClientRecord: boolean isPreHoneycomb()>();

        if $z5 != 0 goto label05;

     label03:
        $r11 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r11.<android.app.Activity: void performStop()>();

     label04:
        r2.<android.app.ActivityThread$ActivityClientRecord: boolean stopped> = 1;

     label05:
        $z4 = virtualinvoke r2.<android.app.ActivityThread$ActivityClientRecord: boolean isPreHoneycomb()>();

        if $z4 != 0 goto label06;

        staticinvoke <android.app.QueuedWork: void waitToFinish()>();

     label06:
        $r9 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r10 = r2.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder token>;

        interfaceinvoke $r9.<android.app.IActivityManager: void activitySlept(android.os.IBinder)>($r10);

     label07:
        return;

     label08:
        $r17 := @caughtexception;

        return;

     label09:
        $r16 := @caughtexception;

        r4 = $r16;

        $r18 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r19 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z6 = virtualinvoke $r18.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>($r19, r4);

        if $z6 != 0 goto label04;

        $r20 = new java.lang.RuntimeException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to stop activity ");

        $r25 = r2.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        $r26 = virtualinvoke $r25.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r23 = virtualinvoke $r26.<android.content.ComponentName: java.lang.String toShortString()>();

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r30 = virtualinvoke r4.<java.lang.Exception: java.lang.String toString()>();

        $r27 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r28, r4);

        throw $r20;

     label10:
        $z1 = r2.<android.app.ActivityThread$ActivityClientRecord: boolean stopped>;

        if $z1 == 0 goto label01;

        $r7 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z2 = $r7.<android.app.Activity: boolean mVisibleFromServer>;

        if $z2 == 0 goto label01;

        $r8 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r8.<android.app.Activity: void performRestart()>();

        r2.<android.app.ActivityThread$ActivityClientRecord: boolean stopped> = 0;

        return;

        catch java.lang.Exception from label03 to label04 with label09;
        catch android.os.RemoteException from label06 to label07 with label08;
    }

    private void handleStopActivity(android.os.IBinder, boolean, int)
    {
        android.app.ActivityThread r0;
        android.os.IBinder r1;
        boolean z0, $z1;
        int i0, $i1, $i2;
        android.app.ActivityThread$ActivityClientRecord r2;
        android.app.Activity r3;
        android.app.ActivityThread$StopInfo r4, $r7;
        android.util.ArrayMap $r5;
        java.lang.Object $r6;
        android.os.Bundle $r8;
        android.app.ActivityThread$H $r9;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        $r5 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (android.app.ActivityThread$ActivityClientRecord) $r6;

        r3 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $i1 = r3.<android.app.Activity: int mConfigChangeFlags>;

        $i2 = i0 | $i1;

        r3.<android.app.Activity: int mConfigChangeFlags> = $i2;

        $r7 = new android.app.ActivityThread$StopInfo;

        specialinvoke $r7.<android.app.ActivityThread$StopInfo: void <init>(android.app.ActivityThread$1)>(null);

        r4 = $r7;

        specialinvoke r0.<android.app.ActivityThread: void performStopActivityInner(android.app.ActivityThread$ActivityClientRecord,android.app.ActivityThread$StopInfo,boolean,boolean)>(r2, r4, z0, 1);

        specialinvoke r0.<android.app.ActivityThread: void updateVisibility(android.app.ActivityThread$ActivityClientRecord,boolean)>(r2, z0);

        $z1 = virtualinvoke r2.<android.app.ActivityThread$ActivityClientRecord: boolean isPreHoneycomb()>();

        if $z1 != 0 goto label1;

        staticinvoke <android.app.QueuedWork: void waitToFinish()>();

     label1:
        r4.<android.app.ActivityThread$StopInfo: android.app.ActivityThread$ActivityClientRecord activity> = r2;

        $r8 = r2.<android.app.ActivityThread$ActivityClientRecord: android.os.Bundle state>;

        r4.<android.app.ActivityThread$StopInfo: android.os.Bundle state> = $r8;

        $r9 = r0.<android.app.ActivityThread: android.app.ActivityThread$H mH>;

        virtualinvoke $r9.<android.app.ActivityThread$H: boolean post(java.lang.Runnable)>(r4);

        return;
    }

    private void handleStopService(android.os.IBinder)
    {
        android.app.ActivityThread r0;
        android.os.IBinder r1;
        android.app.Service r2;
        java.lang.Exception r3, $r12;
        android.content.Context r4;
        java.lang.String r6, $r18, $r20;
        android.util.ArrayMap $r7;
        java.lang.Object $r8;
        boolean $z0, $z1;
        android.app.IActivityManager $r9;
        android.app.ContextImpl $r10;
        android.os.RemoteException $r11;
        android.app.Instrumentation $r13;
        java.lang.StringBuilder $r14, $r16, $r17, $r19, $r21;
        java.lang.RuntimeException $r15;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.os.IBinder;

        $r7 = r0.<android.app.ActivityThread: android.util.ArrayMap mServices>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

        r2 = (android.app.Service) $r8;

        if r2 == null goto label4;

     label1:
        virtualinvoke r2.<android.app.Service: void onDestroy()>();

        r4 = virtualinvoke r2.<android.app.Service: android.content.Context getBaseContext()>();

        $z0 = r4 instanceof android.app.ContextImpl;

        if $z0 == 0 goto label2;

        r6 = virtualinvoke r2.<android.app.Service: java.lang.String getClassName()>();

        $r10 = (android.app.ContextImpl) r4;

        virtualinvoke $r10.<android.app.ContextImpl: void scheduleFinalCleanup(java.lang.String,java.lang.String)>(r6, "Service");

     label2:
        staticinvoke <android.app.QueuedWork: void waitToFinish()>();

     label3:
        $r9 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        interfaceinvoke $r9.<android.app.IActivityManager: void serviceDoneExecuting(android.os.IBinder,int,int,int)>(r1, 0, 0, 0);

     label4:
        return;

     label5:
        $r12 := @caughtexception;

        r3 = $r12;

        $r13 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $z1 = virtualinvoke $r13.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>(r2, r3);

        if $z1 != 0 goto label4;

        $r15 = new java.lang.RuntimeException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to stop service ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r18 = virtualinvoke r3.<java.lang.Exception: java.lang.String toString()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r20, r3);

        throw $r15;

     label6:
        $r11 := @caughtexception;

        return;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label2 to label3 with label5;
        catch android.os.RemoteException from label3 to label4 with label6;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    private void handleUnbindService(android.app.ActivityThread$BindServiceData)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$BindServiceData r1;
        android.app.Service r2;
        java.lang.Exception r3, $r16;
        boolean z0, $z1;
        android.os.IBinder $r5, $r12, $r14;
        android.util.ArrayMap $r6;
        java.lang.Object $r7;
        android.content.Intent $r8, $r10, $r15, $r23;
        java.lang.ClassLoader $r9;
        android.app.IActivityManager $r11, $r13;
        android.os.RemoteException $r17;
        android.app.Instrumentation $r18;
        java.lang.StringBuilder $r19, $r21, $r22, $r24, $r25, $r26, $r27;
        java.lang.RuntimeException $r20;
        java.lang.String $r28, $r29;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$BindServiceData;

        $r6 = r0.<android.app.ActivityThread: android.util.ArrayMap mServices>;

        $r5 = r1.<android.app.ActivityThread$BindServiceData: android.os.IBinder token>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r5);

        r2 = (android.app.Service) $r7;

        if r2 == null goto label9;

     label1:
        $r8 = r1.<android.app.ActivityThread$BindServiceData: android.content.Intent intent>;

        $r9 = virtualinvoke r2.<android.app.Service: java.lang.ClassLoader getClassLoader()>();

        virtualinvoke $r8.<android.content.Intent: void setExtrasClassLoader(java.lang.ClassLoader)>($r9);

        $r10 = r1.<android.app.ActivityThread$BindServiceData: android.content.Intent intent>;

        z0 = virtualinvoke r2.<android.app.Service: boolean onUnbind(android.content.Intent)>($r10);

     label2:
        if z0 == 0 goto label5;

     label3:
        $r13 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r14 = r1.<android.app.ActivityThread$BindServiceData: android.os.IBinder token>;

        $r15 = r1.<android.app.ActivityThread$BindServiceData: android.content.Intent intent>;

        interfaceinvoke $r13.<android.app.IActivityManager: void unbindFinished(android.os.IBinder,android.content.Intent,boolean)>($r14, $r15, z0);

     label4:
        return;

     label5:
        $r11 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r12 = r1.<android.app.ActivityThread$BindServiceData: android.os.IBinder token>;

        interfaceinvoke $r11.<android.app.IActivityManager: void serviceDoneExecuting(android.os.IBinder,int,int,int)>($r12, 0, 0, 0);

     label6:
        return;

     label7:
        $r17 := @caughtexception;

        return;

     label8:
        $r16 := @caughtexception;

        r3 = $r16;

        $r18 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $z1 = virtualinvoke $r18.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>(r2, r3);

        if $z1 != 0 goto label9;

        $r20 = new java.lang.RuntimeException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to unbind to service ");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with ");

        $r23 = r1.<android.app.ActivityThread$BindServiceData: android.content.Intent intent>;

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r28 = virtualinvoke r3.<java.lang.Exception: java.lang.String toString()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r29, r3);

        throw $r20;

     label9:
        return;

        catch java.lang.Exception from label1 to label2 with label8;
        catch android.os.RemoteException from label3 to label4 with label7;
        catch java.lang.Exception from label3 to label4 with label8;
        catch android.os.RemoteException from label5 to label6 with label7;
        catch java.lang.Exception from label5 to label6 with label8;
    }

    private void handleUpdatePackageCompatibilityInfo(android.app.ActivityThread$UpdateCompatibilityData)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$UpdateCompatibilityData r1;
        android.app.LoadedApk r2, r3;
        java.lang.String $r4, $r5;
        android.content.res.CompatibilityInfo $r6, $r10, $r11;
        android.content.res.Configuration $r7, $r9;
        android.view.WindowManagerGlobal $r8;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$UpdateCompatibilityData;

        $r4 = r1.<android.app.ActivityThread$UpdateCompatibilityData: java.lang.String pkg>;

        r2 = virtualinvoke r0.<android.app.ActivityThread: android.app.LoadedApk peekPackageInfo(java.lang.String,boolean)>($r4, 0);

        if r2 == null goto label1;

        $r11 = r1.<android.app.ActivityThread$UpdateCompatibilityData: android.content.res.CompatibilityInfo info>;

        virtualinvoke r2.<android.app.LoadedApk: void setCompatibilityInfo(android.content.res.CompatibilityInfo)>($r11);

     label1:
        $r5 = r1.<android.app.ActivityThread$UpdateCompatibilityData: java.lang.String pkg>;

        r3 = virtualinvoke r0.<android.app.ActivityThread: android.app.LoadedApk peekPackageInfo(java.lang.String,boolean)>($r5, 1);

        if r3 == null goto label2;

        $r10 = r1.<android.app.ActivityThread$UpdateCompatibilityData: android.content.res.CompatibilityInfo info>;

        virtualinvoke r3.<android.app.LoadedApk: void setCompatibilityInfo(android.content.res.CompatibilityInfo)>($r10);

     label2:
        $r7 = r0.<android.app.ActivityThread: android.content.res.Configuration mConfiguration>;

        $r6 = r1.<android.app.ActivityThread$UpdateCompatibilityData: android.content.res.CompatibilityInfo info>;

        virtualinvoke r0.<android.app.ActivityThread: void handleConfigurationChanged(android.content.res.Configuration,android.content.res.CompatibilityInfo)>($r7, $r6);

        $r8 = staticinvoke <android.view.WindowManagerGlobal: android.view.WindowManagerGlobal getInstance()>();

        $r9 = r0.<android.app.ActivityThread: android.content.res.Configuration mConfiguration>;

        virtualinvoke $r8.<android.view.WindowManagerGlobal: void reportNewConfiguration(android.content.res.Configuration)>($r9);

        return;
    }

    private void handleWindowVisibility(android.os.IBinder, boolean)
    {
        android.app.ActivityThread r0;
        android.os.IBinder r1;
        boolean z0, $z1, $z2;
        android.app.ActivityThread$ActivityClientRecord r2;
        android.util.ArrayMap $r3;
        java.lang.Object $r4;
        android.app.Activity $r5, $r7;
        android.view.View $r6;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String $r11;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        $r3 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (android.app.ActivityThread$ActivityClientRecord) $r4;

        if r2 != null goto label2;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleWindowVisibility: no activity for token ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityThread", $r11);

     label1:
        return;

     label2:
        if z0 != 0 goto label4;

        $z2 = r2.<android.app.ActivityThread$ActivityClientRecord: boolean stopped>;

        if $z2 != 0 goto label4;

        specialinvoke r0.<android.app.ActivityThread: void performStopActivityInner(android.app.ActivityThread$ActivityClientRecord,android.app.ActivityThread$StopInfo,boolean,boolean)>(r2, null, z0, 0);

     label3:
        $r5 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r6 = $r5.<android.app.Activity: android.view.View mDecor>;

        if $r6 == null goto label1;

        specialinvoke r0.<android.app.ActivityThread: void updateVisibility(android.app.ActivityThread$ActivityClientRecord,boolean)>(r2, z0);

        return;

     label4:
        if z0 == 0 goto label3;

        $z1 = r2.<android.app.ActivityThread$ActivityClientRecord: boolean stopped>;

        if $z1 == 0 goto label3;

        virtualinvoke r0.<android.app.ActivityThread: void unscheduleGcIdler()>();

        $r7 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r7.<android.app.Activity: void performRestart()>();

        r2.<android.app.ActivityThread$ActivityClientRecord: boolean stopped> = 0;

        goto label3;
    }

    private final void incProviderRefLocked(android.app.ActivityThread$ProviderRefCount, boolean)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$ProviderRefCount r1;
        boolean z0, $z1, $z3;
        byte b0;
        int $i1, $i2, $i3, $i4, $i5, $i6;
        android.app.IActivityManager $r4, $r9;
        android.app.IActivityManager$ContentProviderHolder $r5, $r8;
        android.os.IBinder $r6, $r10;
        android.app.ActivityThread$H $r7, $r12;
        android.os.RemoteException $r11, $r13;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$ProviderRefCount;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label4;

        $i5 = r1.<android.app.ActivityThread$ProviderRefCount: int stableCount>;

        $i4 = 1 + $i5;

        r1.<android.app.ActivityThread$ProviderRefCount: int stableCount> = $i4;

        $i6 = r1.<android.app.ActivityThread$ProviderRefCount: int stableCount>;

        if $i6 != 1 goto label2;

        $z3 = r1.<android.app.ActivityThread$ProviderRefCount: boolean removePending>;

        if $z3 == 0 goto label3;

        b0 = -1;

        r1.<android.app.ActivityThread$ProviderRefCount: boolean removePending> = 0;

        $r12 = r0.<android.app.ActivityThread: android.app.ActivityThread$H mH>;

        virtualinvoke $r12.<android.app.ActivityThread$H: void removeMessages(int,java.lang.Object)>(131, r1);

     label1:
        $r9 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r8 = r1.<android.app.ActivityThread$ProviderRefCount: android.app.IActivityManager$ContentProviderHolder holder>;

        $r10 = $r8.<android.app.IActivityManager$ContentProviderHolder: android.os.IBinder connection>;

        interfaceinvoke $r9.<android.app.IActivityManager: boolean refContentProvider(android.os.IBinder,int,int)>($r10, 1, b0);

     label2:
        return;

     label3:
        b0 = 0;

        goto label1;

     label4:
        $i1 = r1.<android.app.ActivityThread$ProviderRefCount: int unstableCount>;

        $i2 = 1 + $i1;

        r1.<android.app.ActivityThread$ProviderRefCount: int unstableCount> = $i2;

        $i3 = r1.<android.app.ActivityThread$ProviderRefCount: int unstableCount>;

        if $i3 != 1 goto label2;

        $z1 = r1.<android.app.ActivityThread$ProviderRefCount: boolean removePending>;

        if $z1 == 0 goto label5;

        r1.<android.app.ActivityThread$ProviderRefCount: boolean removePending> = 0;

        $r7 = r0.<android.app.ActivityThread: android.app.ActivityThread$H mH>;

        virtualinvoke $r7.<android.app.ActivityThread$H: void removeMessages(int,java.lang.Object)>(131, r1);

        return;

     label5:
        $r4 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r5 = r1.<android.app.ActivityThread$ProviderRefCount: android.app.IActivityManager$ContentProviderHolder holder>;

        $r6 = $r5.<android.app.IActivityManager$ContentProviderHolder: android.os.IBinder connection>;

        interfaceinvoke $r4.<android.app.IActivityManager: boolean refContentProvider(android.os.IBinder,int,int)>($r6, 0, 1);

     label6:
        return;

     label7:
        $r13 := @caughtexception;

        return;

     label8:
        $r11 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label8;
        catch android.os.RemoteException from label5 to label6 with label7;
    }

    private void installContentProviders(android.content.Context, java.util.List)
    {
        android.app.ActivityThread r0;
        android.content.Context r1;
        java.util.List r2;
        java.util.ArrayList r3, $r7;
        java.util.Iterator r4;
        android.app.IActivityManager$ContentProviderHolder r6;
        boolean $z0;
        android.app.IActivityManager $r8;
        android.app.ActivityThread$ApplicationThread $r9;
        java.lang.Object $r10;
        android.content.pm.ProviderInfo $r11;
        android.os.RemoteException $r12;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.util.List;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r3 = $r7;

        r4 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (android.content.pm.ProviderInfo) $r10;

        r6 = specialinvoke r0.<android.app.ActivityThread: android.app.IActivityManager$ContentProviderHolder installProvider(android.content.Context,android.app.IActivityManager$ContentProviderHolder,android.content.pm.ProviderInfo,boolean,boolean,boolean)>(r1, null, $r11, 0, 1, 1);

        if r6 == null goto label1;

        r6.<android.app.IActivityManager$ContentProviderHolder: boolean noReleaseNeeded> = 1;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

        goto label1;

     label2:
        $r8 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r9 = virtualinvoke r0.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread getApplicationThread()>();

        interfaceinvoke $r8.<android.app.IActivityManager: void publishContentProviders(android.app.IApplicationThread,java.util.List)>($r9, r3);

     label3:
        return;

     label4:
        $r12 := @caughtexception;

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private android.app.IActivityManager$ContentProviderHolder installProvider(android.content.Context, android.app.IActivityManager$ContentProviderHolder, android.content.pm.ProviderInfo, boolean, boolean, boolean)
    {
        android.app.ActivityThread r0;
        android.content.Context r1, r6, r20;
        android.app.IActivityManager$ContentProviderHolder r2, r15, r16, $r40;
        android.content.pm.ProviderInfo r3;
        boolean z0, z1, z2, $z3, $z4, $z5;
        android.content.pm.ApplicationInfo r4, $r56;
        java.lang.Exception r7, $r82;
        android.content.ContentProvider r8;
        android.content.IContentProvider r9, $r52, $r74;
        android.util.ArrayMap r10, $r29, $r31, $r42, $r44, $r46;
        java.lang.Throwable r11, $r73, $r84;
        android.content.ComponentName r12, $r37;
        android.os.IBinder r13, $r38;
        android.app.ActivityThread$ProviderClientRecord r14, r17;
        android.app.ActivityThread$ProviderRefCount r18, $r30, $r33, $r34;
        java.lang.String $r21, $r22, $r23, $r28, $r36, $r43, $r48, $r57, $r59, $r60, $r64, $r65, $r69, $r70, $r71, $r76, $r78, $r87, $r89, $r92;
        android.app.Application $r24, $r62;
        java.lang.Class $r25;
        java.lang.Object $r26, $r32, $r41;
        java.lang.ClassLoader $r27;
        android.app.IActivityManager $r39;
        java.lang.StringBuilder $r47, $r49, $r50, $r53, $r54, $r55, $r58, $r61, $r63, $r66, $r67, $r68, $r72, $r75, $r77, $r79, $r80, $r88, $r90, $r91;
        java.lang.RuntimeException $r81;
        android.app.Instrumentation $r83;
        android.os.RemoteException $r85;
        android.content.pm.PackageManager$NameNotFoundException $r86;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.app.IActivityManager$ContentProviderHolder;

        r3 := @parameter2: android.content.pm.ProviderInfo;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        z2 := @parameter5: boolean;

        if r2 == null goto label01;

        $r74 = r2.<android.app.IActivityManager$ContentProviderHolder: android.content.IContentProvider provider>;

        if $r74 != null goto label25;

     label01:
        if z0 == 0 goto label02;

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loading provider ");

        $r69 = r3.<android.content.pm.ProviderInfo: java.lang.String authority>;

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r69);

        $r77 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r78 = r3.<android.content.pm.ProviderInfo: java.lang.String name>;

        $r75 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r78);

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ActivityThread", $r76);

     label02:
        r4 = r3.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r22 = virtualinvoke r1.<android.content.Context: java.lang.String getPackageName()>();

        $r21 = r4.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z3 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>($r21);

        if $z3 == 0 goto label04;

        r6 = r1;

     label03:
        if r6 != null goto label07;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to get context for package ");

        $r64 = r4.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r63 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r64);

        $r66 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" while loading content provider ");

        $r65 = r3.<android.content.pm.ProviderInfo: java.lang.String name>;

        $r61 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

        $r60 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityThread", $r60);

        return null;

     label04:
        $r24 = r0.<android.app.ActivityThread: android.app.Application mInitialApplication>;

        if $r24 == null goto label05;

        $r62 = r0.<android.app.ActivityThread: android.app.Application mInitialApplication>;

        $r71 = virtualinvoke $r62.<android.app.Application: java.lang.String getPackageName()>();

        $r70 = r4.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z4 = virtualinvoke $r71.<java.lang.String: boolean equals(java.lang.Object)>($r70);

        if $z4 == 0 goto label05;

        r6 = r0.<android.app.ActivityThread: android.app.Application mInitialApplication>;

        goto label03;

     label05:
        $r23 = r4.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        r20 = virtualinvoke r1.<android.content.Context: android.content.Context createPackageContext(java.lang.String,int)>($r23, 1);

     label06:
        r6 = r20;

        goto label03;

     label07:
        $r27 = virtualinvoke r6.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

        $r28 = r3.<android.content.pm.ProviderInfo: java.lang.String name>;

        $r25 = virtualinvoke $r27.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r28);

        $r26 = virtualinvoke $r25.<java.lang.Class: java.lang.Object newInstance()>();

        r8 = (android.content.ContentProvider) $r26;

        r9 = virtualinvoke r8.<android.content.ContentProvider: android.content.IContentProvider getIContentProvider()>();

     label08:
        if r9 != null goto label11;

     label09:
        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to instantiate class ");

        $r48 = r3.<android.content.pm.ProviderInfo: java.lang.String name>;

        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from sourceDir ");

        $r56 = r3.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r57 = $r56.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        $r58 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityThread", $r59);

     label10:
        return null;

     label11:
        virtualinvoke r8.<android.content.ContentProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)>(r6, r3);

     label12:
        r10 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderMap>;

        entermonitor r10;

     label13:
        r13 = interfaceinvoke r9.<android.content.IContentProvider: android.os.IBinder asBinder()>();

     label14:
        if r8 == null goto label29;

     label15:
        $r37 = new android.content.ComponentName;

        $r43 = r3.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        $r36 = r3.<android.content.pm.ProviderInfo: java.lang.String name>;

        specialinvoke $r37.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r43, $r36);

        r12 = $r37;

        $r42 = r0.<android.app.ActivityThread: android.util.ArrayMap mLocalProvidersByName>;

        $r41 = virtualinvoke $r42.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r12);

        r14 = (android.app.ActivityThread$ProviderClientRecord) $r41;

     label16:
        if r14 == null goto label26;

     label17:
        $r52 = r14.<android.app.ActivityThread$ProviderClientRecord: android.content.IContentProvider mProvider>;

     label18:
        r16 = r14.<android.app.ActivityThread$ProviderClientRecord: android.app.IActivityManager$ContentProviderHolder mHolder>;

     label19:
        exitmonitor r10;

     label20:
        return r16;

     label21:
        exitmonitor r10;

     label22:
        throw r11;

     label23:
        $r82 := @caughtexception;

        r7 = $r82;

        $r83 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $z5 = virtualinvoke $r83.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>(null, r7);

        if $z5 != 0 goto label24;

        $r81 = new java.lang.RuntimeException;

        $r79 = new java.lang.StringBuilder;

        specialinvoke $r79.<java.lang.StringBuilder: void <init>()>();

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to get provider ");

        $r92 = r3.<android.content.pm.ProviderInfo: java.lang.String name>;

        $r91 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r92);

        $r90 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r89 = virtualinvoke r7.<java.lang.Exception: java.lang.String toString()>();

        $r88 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r89);

        $r87 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r81.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r87, r7);

        throw $r81;

     label24:
        return null;

     label25:
        r9 = r2.<android.app.IActivityManager$ContentProviderHolder: android.content.IContentProvider provider>;

        r8 = null;

        goto label12;

     label26:
        $r40 = new android.app.IActivityManager$ContentProviderHolder;

        specialinvoke $r40.<android.app.IActivityManager$ContentProviderHolder: void <init>(android.content.pm.ProviderInfo)>(r3);

        r15 = $r40;

     label27:
        r15.<android.app.IActivityManager$ContentProviderHolder: android.content.IContentProvider provider> = r9;

        r15.<android.app.IActivityManager$ContentProviderHolder: boolean noReleaseNeeded> = 1;

        r14 = specialinvoke r0.<android.app.ActivityThread: android.app.ActivityThread$ProviderClientRecord installProviderAuthoritiesLocked(android.content.IContentProvider,android.content.ContentProvider,android.app.IActivityManager$ContentProviderHolder)>(r9, r8, r15);

        $r46 = r0.<android.app.ActivityThread: android.util.ArrayMap mLocalProviders>;

        virtualinvoke $r46.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r13, r14);

        $r44 = r0.<android.app.ActivityThread: android.util.ArrayMap mLocalProvidersByName>;

        virtualinvoke $r44.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r12, r14);

     label28:
        goto label18;

     label29:
        $r29 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderRefCountMap>;

        $r32 = virtualinvoke $r29.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r13);

        r18 = (android.app.ActivityThread$ProviderRefCount) $r32;

     label30:
        if r18 == null goto label35;

        if z1 != 0 goto label33;

     label31:
        specialinvoke r0.<android.app.ActivityThread: void incProviderRefLocked(android.app.ActivityThread$ProviderRefCount,boolean)>(r18, z2);

     label32:
        $r39 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r38 = r2.<android.app.IActivityManager$ContentProviderHolder: android.os.IBinder connection>;

        interfaceinvoke $r39.<android.app.IActivityManager: void removeContentProvider(android.os.IBinder,boolean)>($r38, z2);

     label33:
        r16 = r18.<android.app.ActivityThread$ProviderRefCount: android.app.IActivityManager$ContentProviderHolder holder>;

     label34:
        goto label19;

     label35:
        r17 = specialinvoke r0.<android.app.ActivityThread: android.app.ActivityThread$ProviderClientRecord installProviderAuthoritiesLocked(android.content.IContentProvider,android.content.ContentProvider,android.app.IActivityManager$ContentProviderHolder)>(r9, r8, r2);

     label36:
        if z1 == 0 goto label40;

     label37:
        $r33 = new android.app.ActivityThread$ProviderRefCount;

        specialinvoke $r33.<android.app.ActivityThread$ProviderRefCount: void <init>(android.app.IActivityManager$ContentProviderHolder,android.app.ActivityThread$ProviderClientRecord,int,int)>(r2, r17, 1000, 1000);

        r18 = $r33;

     label38:
        $r31 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderRefCountMap>;

        virtualinvoke $r31.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r13, r18);

     label39:
        goto label33;

     label40:
        if z2 == 0 goto label43;

     label41:
        $r34 = new android.app.ActivityThread$ProviderRefCount;

        specialinvoke $r34.<android.app.ActivityThread$ProviderRefCount: void <init>(android.app.IActivityManager$ContentProviderHolder,android.app.ActivityThread$ProviderClientRecord,int,int)>(r2, r17, 1, 0);

        r18 = $r34;

     label42:
        goto label49;

     label43:
        $r30 = new android.app.ActivityThread$ProviderRefCount;

        specialinvoke $r30.<android.app.ActivityThread$ProviderRefCount: void <init>(android.app.IActivityManager$ContentProviderHolder,android.app.ActivityThread$ProviderClientRecord,int,int)>(r2, r17, 0, 1);

        r18 = $r30;

     label44:
        goto label49;

     label45:
        $r73 := @caughtexception;

        r11 = $r73;

        goto label21;

     label46:
        $r85 := @caughtexception;

        goto label33;

     label47:
        $r86 := @caughtexception;

        r6 = null;

        goto label03;

     label48:
        $r84 := @caughtexception;

        r11 = $r84;

        goto label21;

     label49:
        goto label38;

        catch android.content.pm.PackageManager$NameNotFoundException from label05 to label06 with label47;
        catch java.lang.Exception from label07 to label08 with label23;
        catch java.lang.Exception from label09 to label10 with label23;
        catch java.lang.Exception from label11 to label12 with label23;
        catch java.lang.Throwable from label13 to label14 with label48;
        catch java.lang.Throwable from label15 to label16 with label48;
        catch java.lang.Throwable from label17 to label18 with label48;
        catch java.lang.Throwable from label18 to label19 with label48;
        catch java.lang.Throwable from label19 to label20 with label48;
        catch java.lang.Throwable from label21 to label22 with label48;
        catch java.lang.Throwable from label26 to label27 with label48;
        catch java.lang.Throwable from label27 to label28 with label45;
        catch java.lang.Throwable from label29 to label30 with label48;
        catch java.lang.Throwable from label31 to label32 with label48;
        catch android.os.RemoteException from label32 to label33 with label46;
        catch java.lang.Throwable from label32 to label33 with label48;
        catch java.lang.Throwable from label33 to label34 with label48;
        catch java.lang.Throwable from label35 to label36 with label48;
        catch java.lang.Throwable from label37 to label38 with label48;
        catch java.lang.Throwable from label38 to label39 with label48;
        catch java.lang.Throwable from label41 to label42 with label48;
        catch java.lang.Throwable from label43 to label44 with label48;
    }

    private android.app.ActivityThread$ProviderClientRecord installProviderAuthoritiesLocked(android.content.IContentProvider, android.content.ContentProvider, android.app.IActivityManager$ContentProviderHolder)
    {
        android.app.ActivityThread r0;
        android.content.IContentProvider r1;
        android.content.ContentProvider r2;
        android.app.IActivityManager$ContentProviderHolder r3, $r21;
        java.lang.String[] r4;
        int i0, i1, i2, $i3;
        android.app.ActivityThread$ProviderClientRecord r5, $r13, $r16;
        java.lang.String r6, $r9, $r23, $r26;
        android.app.ActivityThread$ProviderKey r7, $r15;
        android.content.pm.ProviderInfo $r8, $r11, $r24;
        java.util.regex.Pattern $r10;
        android.content.pm.ApplicationInfo $r12;
        android.util.ArrayMap $r14, $r19;
        java.lang.Object $r17;
        java.lang.StringBuilder $r20, $r22, $r25, $r27, $r28;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.content.IContentProvider;

        r2 := @parameter1: android.content.ContentProvider;

        r3 := @parameter2: android.app.IActivityManager$ContentProviderHolder;

        $r10 = <android.app.ActivityThread: java.util.regex.Pattern PATTERN_SEMICOLON>;

        $r8 = r3.<android.app.IActivityManager$ContentProviderHolder: android.content.pm.ProviderInfo info>;

        $r9 = $r8.<android.content.pm.ProviderInfo: java.lang.String authority>;

        r4 = virtualinvoke $r10.<java.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence)>($r9);

        $r11 = r3.<android.app.IActivityManager$ContentProviderHolder: android.content.pm.ProviderInfo info>;

        $r12 = $r11.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r12.<android.content.pm.ApplicationInfo: int uid>;

        i0 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i3);

        $r13 = new android.app.ActivityThread$ProviderClientRecord;

        specialinvoke $r13.<android.app.ActivityThread$ProviderClientRecord: void <init>(android.app.ActivityThread,java.lang.String[],android.content.IContentProvider,android.content.ContentProvider,android.app.IActivityManager$ContentProviderHolder)>(r0, r4, r1, r2, r3);

        r5 = $r13;

        i1 = lengthof r4;

        i2 = 0;

     label1:
        if i2 >= i1 goto label4;

        r6 = r4[i2];

        $r15 = new android.app.ActivityThread$ProviderKey;

        specialinvoke $r15.<android.app.ActivityThread$ProviderKey: void <init>(java.lang.String,int)>(r6, i0);

        r7 = $r15;

        $r14 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderMap>;

        $r17 = virtualinvoke $r14.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r7);

        $r16 = (android.app.ActivityThread$ProviderClientRecord) $r17;

        if $r16 == null goto label3;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Content provider ");

        $r21 = r5.<android.app.ActivityThread$ProviderClientRecord: android.app.IActivityManager$ContentProviderHolder mHolder>;

        $r24 = $r21.<android.app.IActivityManager$ContentProviderHolder: android.content.pm.ProviderInfo info>;

        $r23 = $r24.<android.content.pm.ProviderInfo: java.lang.String name>;

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already published as ");

        $r25 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityThread", $r26);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r19 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderMap>;

        virtualinvoke $r19.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, r5);

        goto label2;

     label4:
        return r5;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;
        android.app.ActivityThread r1, $r4;
        android.app.ActivityThread$EventLoggingReporter $r2;
        android.security.AndroidKeyStoreProvider $r3;
        android.os.Handler $r5, $r7;
        java.lang.RuntimeException $r6;

        r0 := @parameter0: java.lang.String[];

        staticinvoke <com.android.internal.os.SamplingProfilerIntegration: void start()>();

        staticinvoke <dalvik.system.CloseGuard: void setEnabled(boolean)>(0);

        staticinvoke <android.os.Environment: void initForCurrentUser()>();

        $r2 = new android.app.ActivityThread$EventLoggingReporter;

        specialinvoke $r2.<android.app.ActivityThread$EventLoggingReporter: void <init>(android.app.ActivityThread$1)>(null);

        staticinvoke <libcore.io.EventLogger: void setReporter(libcore.io.EventLogger$Reporter)>($r2);

        $r3 = new android.security.AndroidKeyStoreProvider;

        specialinvoke $r3.<android.security.AndroidKeyStoreProvider: void <init>()>();

        staticinvoke <java.security.Security: int addProvider(java.security.Provider)>($r3);

        staticinvoke <android.os.Process: void setArgV0(java.lang.String)>("<pre-initialized>");

        staticinvoke <android.os.Looper: void prepareMainLooper()>();

        $r4 = new android.app.ActivityThread;

        specialinvoke $r4.<android.app.ActivityThread: void <init>()>();

        r1 = $r4;

        specialinvoke r1.<android.app.ActivityThread: void attach(boolean)>(0);

        $r5 = <android.app.ActivityThread: android.os.Handler sMainThreadHandler>;

        if $r5 != null goto label1;

        $r7 = virtualinvoke r1.<android.app.ActivityThread: android.os.Handler getHandler()>();

        <android.app.ActivityThread: android.os.Handler sMainThreadHandler> = $r7;

     label1:
        staticinvoke <android.os.AsyncTask: void init()>();

        staticinvoke <android.os.Looper: void loop()>();

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>("Main thread loop unexpectedly exited");

        throw $r6;
    }

    private static void performConfigurationChanged(android.content.ComponentCallbacks2, android.content.res.Configuration)
    {
        android.content.ComponentCallbacks2 r0;
        android.content.res.Configuration r1, $r3, $r11, $r12;
        android.app.Activity r2;
        boolean z0, $z1, $z2;
        int i0, i1, $i2, $i3;
        android.util.SuperNotCalledException $r4;
        java.lang.StringBuilder $r5, $r6, $r8, $r9;
        java.lang.String $r7, $r10;
        android.content.pm.ActivityInfo $r13;

        r0 := @parameter0: android.content.ComponentCallbacks2;

        r1 := @parameter1: android.content.res.Configuration;

        $z1 = r0 instanceof android.app.Activity;

        if $z1 == 0 goto label5;

        r2 = (android.app.Activity) r0;

     label1:
        if r2 == null goto label2;

        r2.<android.app.Activity: boolean mCalled> = 0;

     label2:
        if r2 == null goto label3;

        $r12 = r2.<android.app.Activity: android.content.res.Configuration mCurrentConfig>;

        if $r12 != null goto label6;

     label3:
        z0 = 1;

     label4:
        if z0 == 0 goto label8;

        interfaceinvoke r0.<android.content.ComponentCallbacks2: void onConfigurationChanged(android.content.res.Configuration)>(r1);

        if r2 == null goto label8;

        $z2 = r2.<android.app.Activity: boolean mCalled>;

        if $z2 != 0 goto label7;

        $r4 = new android.util.SuperNotCalledException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity ");

        $r7 = virtualinvoke r2.<android.app.Activity: java.lang.String getLocalClassName()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not call through to super.onConfigurationChanged()");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<android.util.SuperNotCalledException: void <init>(java.lang.String)>($r10);

        throw $r4;

     label5:
        r2 = null;

        goto label1;

     label6:
        $r11 = r2.<android.app.Activity: android.content.res.Configuration mCurrentConfig>;

        i0 = virtualinvoke $r11.<android.content.res.Configuration: int diff(android.content.res.Configuration)>(r1);

        z0 = 0;

        if i0 == 0 goto label4;

        $r13 = r2.<android.app.Activity: android.content.pm.ActivityInfo mActivityInfo>;

        $i2 = virtualinvoke $r13.<android.content.pm.ActivityInfo: int getRealConfigChanged()>();

        $i3 = -1 ^ $i2;

        i1 = i0 & $i3;

        z0 = 0;

        if i1 != 0 goto label4;

        z0 = 1;

        goto label4;

     label7:
        r2.<android.app.Activity: int mConfigChangeFlags> = 0;

        $r3 = new android.content.res.Configuration;

        specialinvoke $r3.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>(r1);

        r2.<android.app.Activity: android.content.res.Configuration mCurrentConfig> = $r3;

     label8:
        return;
    }

    private android.app.ActivityThread$ActivityClientRecord performDestroyActivity(android.os.IBinder, boolean, int, boolean)
    {
        android.app.ActivityThread r0;
        android.os.IBinder r1;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        int i0, $i1, $i2, $i3;
        android.app.ActivityThread$ActivityClientRecord r2;
        java.lang.Class r3;
        android.app.Activity r4, $r16, $r18, $r20, $r21, $r30, $r34, $r36, $r37, $r38, $r44, $r51, $r55, $r67, $r80, $r98;
        java.lang.Exception r5, r7, r8, r10, $r50, $r64, $r83, $r99;
        android.util.SuperNotCalledException r6, r9, r11, $r22, $r43, $r49, $r56, $r65;
        android.util.ArrayMap $r12, $r14;
        java.lang.Object[] r13;
        java.lang.Object $r15;
        android.app.Instrumentation $r19, $r35, $r52, $r66, $r81, $r97;
        java.lang.StringBuilder $r23, $r27, $r28, $r32, $r42, $r45, $r48, $r53, $r60, $r62, $r63, $r69, $r71, $r74, $r75, $r77, $r78, $r85, $r87, $r88, $r89, $r92, $r93, $r94, $r95, $r102, $r104, $r105;
        android.view.Window $r24, $r25;
        java.lang.String $r26, $r33, $r40, $r46, $r54, $r59, $r68, $r70, $r72, $r82, $r84, $r86, $r91, $r100, $r101, $r103, $r106;
        android.content.Intent $r29, $r47, $r57, $r73, $r90, $r107;
        android.app.Activity$NonConfigurationInstances $r31;
        java.lang.Integer $r39;
        android.content.ComponentName $r41, $r58;
        java.lang.RuntimeException $r61, $r76, $r79, $r96;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        z1 := @parameter3: boolean;

        $r12 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r15 = virtualinvoke $r12.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (android.app.ActivityThread$ActivityClientRecord) $r15;

        r3 = null;

        if r2 == null goto label17;

        $r16 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        r3 = virtualinvoke $r16.<java.lang.Object: java.lang.Class getClass()>();

        r4 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $i1 = r4.<android.app.Activity: int mConfigChangeFlags>;

        $i2 = i0 | $i1;

        r4.<android.app.Activity: int mConfigChangeFlags> = $i2;

        if z0 == 0 goto label01;

        $r55 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r55.<android.app.Activity: boolean mFinished> = 1;

     label01:
        $z2 = r2.<android.app.ActivityThread$ActivityClientRecord: boolean paused>;

        if $z2 != 0 goto label06;

     label02:
        $r37 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r37.<android.app.Activity: boolean mCalled> = 0;

        $r35 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r34 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r35.<android.app.Instrumentation: void callActivityOnPause(android.app.Activity)>($r34);

        r13 = newarray (java.lang.Object)[2];

        $i3 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        r13[0] = $r39;

        $r38 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r41 = virtualinvoke $r38.<android.app.Activity: android.content.ComponentName getComponentName()>();

        $r40 = virtualinvoke $r41.<android.content.ComponentName: java.lang.String getClassName()>();

        r13[1] = $r40;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30021, r13);

        $r44 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z5 = $r44.<android.app.Activity: boolean mCalled>;

        if $z5 != 0 goto label05;

        $r43 = new android.util.SuperNotCalledException;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity ");

        $r47 = r2.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        $r46 = staticinvoke <android.app.ActivityThread: java.lang.String safeToComponentShortString(android.content.Intent)>($r47);

        $r45 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        $r53 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not call through to super.onPause()");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r43.<android.util.SuperNotCalledException: void <init>(java.lang.String)>($r54);

        throw $r43;

     label03:
        $r49 := @caughtexception;

        r11 = $r49;

        throw r11;

     label04:
        $r64 := @caughtexception;

        r10 = $r64;

        $r66 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r67 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z7 = virtualinvoke $r66.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>($r67, r10);

        if $z7 != 0 goto label05;

        $r76 = new java.lang.RuntimeException;

        $r78 = new java.lang.StringBuilder;

        specialinvoke $r78.<java.lang.StringBuilder: void <init>()>();

        $r77 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to pause activity ");

        $r73 = r2.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        $r72 = staticinvoke <android.app.ActivityThread: java.lang.String safeToComponentShortString(android.content.Intent)>($r73);

        $r75 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r72);

        $r74 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r84 = virtualinvoke r10.<java.lang.Exception: java.lang.String toString()>();

        $r85 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r84);

        $r82 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r76.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r82, r10);

        throw $r76;

     label05:
        r2.<android.app.ActivityThread$ActivityClientRecord: boolean paused> = 1;

     label06:
        $z3 = r2.<android.app.ActivityThread$ActivityClientRecord: boolean stopped>;

        if $z3 != 0 goto label09;

     label07:
        $r36 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r36.<android.app.Activity: void performStop()>();

     label08:
        r2.<android.app.ActivityThread$ActivityClientRecord: boolean stopped> = 1;

     label09:
        if z1 == 0 goto label11;

     label10:
        $r30 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r31 = virtualinvoke $r30.<android.app.Activity: android.app.Activity$NonConfigurationInstances retainNonConfigurationInstances()>();

        r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity$NonConfigurationInstances lastNonConfigurationInstances> = $r31;

     label11:
        $r18 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r18.<android.app.Activity: boolean mCalled> = 0;

        $r19 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r20 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r19.<android.app.Instrumentation: void callActivityOnDestroy(android.app.Activity)>($r20);

        $r21 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z4 = $r21.<android.app.Activity: boolean mCalled>;

        if $z4 != 0 goto label16;

        $r22 = new android.util.SuperNotCalledException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity ");

        $r29 = r2.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        $r26 = staticinvoke <android.app.ActivityThread: java.lang.String safeToComponentShortString(android.content.Intent)>($r29);

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r32 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not call through to super.onDestroy()");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<android.util.SuperNotCalledException: void <init>(java.lang.String)>($r33);

        throw $r22;

     label12:
        $r56 := @caughtexception;

        r6 = $r56;

        throw r6;

     label13:
        $r65 := @caughtexception;

        r9 = $r65;

        throw r9;

     label14:
        $r83 := @caughtexception;

        r8 = $r83;

        $r81 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r80 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z8 = virtualinvoke $r81.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>($r80, r8);

        if $z8 != 0 goto label08;

        $r79 = new java.lang.RuntimeException;

        $r92 = new java.lang.StringBuilder;

        specialinvoke $r92.<java.lang.StringBuilder: void <init>()>();

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to stop activity ");

        $r90 = r2.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        $r91 = staticinvoke <android.app.ActivityThread: java.lang.String safeToComponentShortString(android.content.Intent)>($r90);

        $r88 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r91);

        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r86 = virtualinvoke r8.<java.lang.Exception: java.lang.String toString()>();

        $r87 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r86);

        $r100 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r79.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r100, r8);

        throw $r79;

     label15:
        $r50 := @caughtexception;

        r7 = $r50;

        $r52 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r51 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z6 = virtualinvoke $r52.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>($r51, r7);

        if $z6 != 0 goto label11;

        $r61 = new java.lang.RuntimeException;

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to retain activity ");

        $r57 = r2.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        $r58 = virtualinvoke $r57.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r59 = virtualinvoke $r58.<android.content.ComponentName: java.lang.String toShortString()>();

        $r60 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        $r69 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r68 = virtualinvoke r7.<java.lang.Exception: java.lang.String toString()>();

        $r71 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r68);

        $r70 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r61.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r70, r7);

        throw $r61;

     label16:
        $r24 = r2.<android.app.ActivityThread$ActivityClientRecord: android.view.Window window>;

        if $r24 == null goto label17;

        $r25 = r2.<android.app.ActivityThread$ActivityClientRecord: android.view.Window window>;

        virtualinvoke $r25.<android.view.Window: void closeAllPanels()>();

     label17:
        $r14 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        virtualinvoke $r14.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

        staticinvoke <android.os.StrictMode: void decrementExpectedActivityCount(java.lang.Class)>(r3);

        return r2;

     label18:
        $r99 := @caughtexception;

        r5 = $r99;

        $r97 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r98 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z9 = virtualinvoke $r97.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>($r98, r5);

        if $z9 != 0 goto label17;

        $r96 = new java.lang.RuntimeException;

        $r95 = new java.lang.StringBuilder;

        specialinvoke $r95.<java.lang.StringBuilder: void <init>()>();

        $r94 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to destroy activity ");

        $r107 = r2.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        $r106 = staticinvoke <android.app.ActivityThread: java.lang.String safeToComponentShortString(android.content.Intent)>($r107);

        $r105 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r106);

        $r104 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r103 = virtualinvoke r5.<java.lang.Exception: java.lang.String toString()>();

        $r102 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r103);

        $r101 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r96.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r101, r5);

        throw $r96;

        catch android.util.SuperNotCalledException from label02 to label03 with label03;
        catch java.lang.Exception from label02 to label03 with label04;
        catch android.util.SuperNotCalledException from label07 to label08 with label13;
        catch java.lang.Exception from label07 to label08 with label14;
        catch java.lang.Exception from label10 to label11 with label15;
        catch android.util.SuperNotCalledException from label11 to label12 with label12;
        catch java.lang.Exception from label11 to label12 with label18;
        catch android.util.SuperNotCalledException from label16 to label17 with label12;
        catch java.lang.Exception from label16 to label17 with label18;
    }

    private android.app.Activity performLaunchActivity(android.app.ActivityThread$ActivityClientRecord, android.content.Intent)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$ActivityClientRecord r1;
        android.content.Intent r2, $r16, $r22, $r26, $r41, $r51, $r69, $r74, $r75;
        android.content.pm.ActivityInfo r3, $r18, $r30, $r42, $r45, $r76, $r77;
        android.content.ComponentName r4, $r52, $r72, $r79;
        android.app.Activity r5, $r37, $r46, $r47, $r49;
        java.lang.Exception r6, r7, $r81, $r88;
        android.util.SuperNotCalledException r8, $r55, $r59, $r102;
        android.app.Application r9, $r78;
        android.content.Context r10;
        java.lang.CharSequence r11;
        android.content.res.Configuration r12, $r33, $r34;
        int i0, $i1;
        java.lang.ClassLoader r13;
        java.lang.String r14, r15, $r20, $r23, $r36, $r53, $r63, $r68, $r71, $r87, $r89, $r95, $r103;
        android.app.LoadedApk $r17, $r19, $r29, $r84;
        android.app.Instrumentation $r21, $r28, $r38, $r43, $r54, $r58, $r82, $r101;
        java.lang.Class $r24;
        android.os.Bundle $r25, $r44, $r48, $r57, $r64, $r67;
        android.os.IBinder $r27, $r40;
        android.util.ArrayMap $r31;
        android.content.pm.PackageManager $r35, $r73;
        android.app.Activity$NonConfigurationInstances $r39;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.StringBuilder $r50, $r56, $r60, $r61, $r62, $r65, $r66, $r70, $r90, $r91, $r92, $r93, $r94, $r96, $r97, $r98, $r99, $r104;
        java.lang.RuntimeException $r80, $r100;
        android.content.pm.ApplicationInfo $r83;
        android.content.res.CompatibilityInfo $r86;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$ActivityClientRecord;

        r2 := @parameter1: android.content.Intent;

        r3 = r1.<android.app.ActivityThread$ActivityClientRecord: android.content.pm.ActivityInfo activityInfo>;

        $r17 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.LoadedApk packageInfo>;

        if $r17 != null goto label01;

        $r83 = r3.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r86 = r1.<android.app.ActivityThread$ActivityClientRecord: android.content.res.CompatibilityInfo compatInfo>;

        $r84 = virtualinvoke r0.<android.app.ActivityThread: android.app.LoadedApk getPackageInfo(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,int)>($r83, $r86, 1);

        r1.<android.app.ActivityThread$ActivityClientRecord: android.app.LoadedApk packageInfo> = $r84;

     label01:
        $r16 = r1.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        r4 = virtualinvoke $r16.<android.content.Intent: android.content.ComponentName getComponent()>();

        if r4 != null goto label02;

        $r74 = r1.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        $r78 = r0.<android.app.ActivityThread: android.app.Application mInitialApplication>;

        $r73 = virtualinvoke $r78.<android.app.Application: android.content.pm.PackageManager getPackageManager()>();

        r4 = virtualinvoke $r74.<android.content.Intent: android.content.ComponentName resolveActivity(android.content.pm.PackageManager)>($r73);

        $r75 = r1.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        virtualinvoke $r75.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r4);

     label02:
        $r18 = r1.<android.app.ActivityThread$ActivityClientRecord: android.content.pm.ActivityInfo activityInfo>;

        $r20 = $r18.<android.content.pm.ActivityInfo: java.lang.String targetActivity>;

        if $r20 == null goto label03;

        $r77 = r1.<android.app.ActivityThread$ActivityClientRecord: android.content.pm.ActivityInfo activityInfo>;

        r15 = $r77.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r76 = r1.<android.app.ActivityThread$ActivityClientRecord: android.content.pm.ActivityInfo activityInfo>;

        r14 = $r76.<android.content.pm.ActivityInfo: java.lang.String targetActivity>;

        $r79 = new android.content.ComponentName;

        specialinvoke $r79.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>(r15, r14);

        r4 = $r79;

     label03:
        r5 = null;

     label04:
        $r19 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.LoadedApk packageInfo>;

        r13 = virtualinvoke $r19.<android.app.LoadedApk: java.lang.ClassLoader getClassLoader()>();

        $r21 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r23 = virtualinvoke r4.<android.content.ComponentName: java.lang.String getClassName()>();

        $r22 = r1.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        r5 = virtualinvoke $r21.<android.app.Instrumentation: android.app.Activity newActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)>(r13, $r23, $r22);

        $r24 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        staticinvoke <android.os.StrictMode: void incrementExpectedActivityCount(java.lang.Class)>($r24);

        $r26 = r1.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        virtualinvoke $r26.<android.content.Intent: void setExtrasClassLoader(java.lang.ClassLoader)>(r13);

        $r25 = r1.<android.app.ActivityThread$ActivityClientRecord: android.os.Bundle state>;

        if $r25 == null goto label05;

        $r67 = r1.<android.app.ActivityThread$ActivityClientRecord: android.os.Bundle state>;

        virtualinvoke $r67.<android.os.Bundle: void setClassLoader(java.lang.ClassLoader)>(r13);

     label05:
        $r29 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.LoadedApk packageInfo>;

        $r28 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        r9 = virtualinvoke $r29.<android.app.LoadedApk: android.app.Application makeApplication(boolean,android.app.Instrumentation)>(0, $r28);

     label06:
        if r5 == null goto label20;

     label07:
        r10 = specialinvoke r0.<android.app.ActivityThread: android.content.Context createBaseContextForActivity(android.app.ActivityThread$ActivityClientRecord,android.app.Activity)>(r1, r5);

        $r30 = r1.<android.app.ActivityThread$ActivityClientRecord: android.content.pm.ActivityInfo activityInfo>;

        $r35 = virtualinvoke r10.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r11 = virtualinvoke $r30.<android.content.pm.ActivityInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>($r35);

        $r33 = new android.content.res.Configuration;

        $r34 = r0.<android.app.ActivityThread: android.content.res.Configuration mCompatConfiguration>;

        specialinvoke $r33.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>($r34);

        r12 = $r33;

        $r38 = virtualinvoke r0.<android.app.ActivityThread: android.app.Instrumentation getInstrumentation()>();

        $r40 = r1.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder token>;

        $i1 = r1.<android.app.ActivityThread$ActivityClientRecord: int ident>;

        $r41 = r1.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        $r42 = r1.<android.app.ActivityThread$ActivityClientRecord: android.content.pm.ActivityInfo activityInfo>;

        $r37 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity parent>;

        $r36 = r1.<android.app.ActivityThread$ActivityClientRecord: java.lang.String embeddedID>;

        $r39 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity$NonConfigurationInstances lastNonConfigurationInstances>;

        virtualinvoke r5.<android.app.Activity: void attach(android.content.Context,android.app.ActivityThread,android.app.Instrumentation,android.os.IBinder,int,android.app.Application,android.content.Intent,android.content.pm.ActivityInfo,java.lang.CharSequence,android.app.Activity,java.lang.String,android.app.Activity$NonConfigurationInstances,android.content.res.Configuration)>(r10, r0, $r38, $r40, $i1, r9, $r41, $r42, r11, $r37, $r36, $r39, r12);

     label08:
        if r2 == null goto label10;

     label09:
        r5.<android.app.Activity: android.content.Intent mIntent> = r2;

     label10:
        r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity$NonConfigurationInstances lastNonConfigurationInstances> = null;

        r5.<android.app.Activity: boolean mStartedActivity> = 0;

        $r45 = r1.<android.app.ActivityThread$ActivityClientRecord: android.content.pm.ActivityInfo activityInfo>;

        i0 = virtualinvoke $r45.<android.content.pm.ActivityInfo: int getThemeResource()>();

     label11:
        if i0 == 0 goto label13;

     label12:
        virtualinvoke r5.<android.app.Activity: void setTheme(int)>(i0);

     label13:
        r5.<android.app.Activity: boolean mCalled> = 0;

        $r43 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r44 = r1.<android.app.ActivityThread$ActivityClientRecord: android.os.Bundle state>;

        virtualinvoke $r43.<android.app.Instrumentation: void callActivityOnCreate(android.app.Activity,android.os.Bundle)>(r5, $r44);

        $z1 = r5.<android.app.Activity: boolean mCalled>;

        if $z1 != 0 goto label16;

        $r59 = new android.util.SuperNotCalledException;

        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        $r70 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity ");

        $r69 = r1.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        $r72 = virtualinvoke $r69.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r71 = virtualinvoke $r72.<android.content.ComponentName: java.lang.String toShortString()>();

        $r66 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);

        $r65 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not call through to super.onCreate()");

        $r68 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r59.<android.util.SuperNotCalledException: void <init>(java.lang.String)>($r68);

        throw $r59;

     label14:
        $r102 := @caughtexception;

        r8 = $r102;

        throw r8;

     label15:
        $r81 := @caughtexception;

        r6 = $r81;

        $r82 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $z5 = virtualinvoke $r82.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>(r5, r6);

        if $z5 != 0 goto label05;

        $r80 = new java.lang.RuntimeException;

        $r93 = new java.lang.StringBuilder;

        specialinvoke $r93.<java.lang.StringBuilder: void <init>()>();

        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to instantiate activity ");

        $r91 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r89 = virtualinvoke r6.<java.lang.Exception: java.lang.String toString()>();

        $r90 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r89);

        $r87 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r80.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r87, r6);

        throw $r80;

     label16:
        r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity> = r5;

        r1.<android.app.ActivityThread$ActivityClientRecord: boolean stopped> = 1;

        $r47 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z0 = $r47.<android.app.Activity: boolean mFinished>;

        if $z0 != 0 goto label17;

        virtualinvoke r5.<android.app.Activity: void performStart()>();

        r1.<android.app.ActivityThread$ActivityClientRecord: boolean stopped> = 0;

     label17:
        $r46 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z3 = $r46.<android.app.Activity: boolean mFinished>;

        if $z3 != 0 goto label18;

        $r64 = r1.<android.app.ActivityThread$ActivityClientRecord: android.os.Bundle state>;

        if $r64 == null goto label18;

        $r58 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r57 = r1.<android.app.ActivityThread$ActivityClientRecord: android.os.Bundle state>;

        virtualinvoke $r58.<android.app.Instrumentation: void callActivityOnRestoreInstanceState(android.app.Activity,android.os.Bundle)>(r5, $r57);

     label18:
        $r49 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z2 = $r49.<android.app.Activity: boolean mFinished>;

        if $z2 != 0 goto label20;

        r5.<android.app.Activity: boolean mCalled> = 0;

        $r54 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r48 = r1.<android.app.ActivityThread$ActivityClientRecord: android.os.Bundle state>;

        virtualinvoke $r54.<android.app.Instrumentation: void callActivityOnPostCreate(android.app.Activity,android.os.Bundle)>(r5, $r48);

        $z4 = r5.<android.app.Activity: boolean mCalled>;

        if $z4 != 0 goto label20;

        $r55 = new android.util.SuperNotCalledException;

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity ");

        $r51 = r1.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        $r52 = virtualinvoke $r51.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r53 = virtualinvoke $r52.<android.content.ComponentName: java.lang.String toShortString()>();

        $r61 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r53);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not call through to super.onPostCreate()");

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r55.<android.util.SuperNotCalledException: void <init>(java.lang.String)>($r63);

        throw $r55;

     label19:
        $r88 := @caughtexception;

        r7 = $r88;

        $r101 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $z6 = virtualinvoke $r101.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>(r5, r7);

        if $z6 != 0 goto label21;

        $r100 = new java.lang.RuntimeException;

        $r99 = new java.lang.StringBuilder;

        specialinvoke $r99.<java.lang.StringBuilder: void <init>()>();

        $r98 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to start activity ");

        $r97 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r96 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r95 = virtualinvoke r7.<java.lang.Exception: java.lang.String toString()>();

        $r104 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r95);

        $r103 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r100.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r103, r7);

        throw $r100;

     label20:
        r1.<android.app.ActivityThread$ActivityClientRecord: boolean paused> = 1;

        $r31 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r27 = r1.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder token>;

        virtualinvoke $r31.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r27, r1);

     label21:
        return r5;

        catch java.lang.Exception from label04 to label05 with label15;
        catch android.util.SuperNotCalledException from label05 to label06 with label14;
        catch java.lang.Exception from label05 to label06 with label19;
        catch android.util.SuperNotCalledException from label07 to label08 with label14;
        catch java.lang.Exception from label07 to label08 with label19;
        catch android.util.SuperNotCalledException from label09 to label10 with label14;
        catch java.lang.Exception from label09 to label10 with label19;
        catch android.util.SuperNotCalledException from label10 to label11 with label14;
        catch java.lang.Exception from label10 to label11 with label19;
        catch android.util.SuperNotCalledException from label12 to label13 with label14;
        catch java.lang.Exception from label12 to label13 with label19;
        catch android.util.SuperNotCalledException from label13 to label14 with label14;
        catch java.lang.Exception from label13 to label14 with label19;
        catch android.util.SuperNotCalledException from label16 to label17 with label14;
        catch java.lang.Exception from label16 to label17 with label19;
        catch android.util.SuperNotCalledException from label17 to label18 with label14;
        catch java.lang.Exception from label17 to label18 with label19;
        catch android.util.SuperNotCalledException from label18 to label19 with label14;
        catch java.lang.Exception from label18 to label19 with label19;
        catch android.util.SuperNotCalledException from label20 to label21 with label14;
        catch java.lang.Exception from label20 to label21 with label19;
    }

    private void performStopActivityInner(android.app.ActivityThread$ActivityClientRecord, android.app.ActivityThread$StopInfo, boolean, boolean)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$ActivityClientRecord r1;
        android.app.ActivityThread$StopInfo r2;
        boolean z0, z1, $z2, $z4, $z5, $z6, $z7;
        java.lang.Exception r3, r5, $r27, $r37;
        android.os.Bundle r4, $r9, $r10, $r11;
        java.lang.RuntimeException r6, $r17, $r31, $r41;
        android.app.Activity $r7, $r8, $r13, $r15, $r16, $r28, $r43;
        android.app.Instrumentation $r12, $r26, $r42;
        java.lang.CharSequence $r14;
        java.lang.StringBuilder $r18, $r19, $r22, $r29, $r32, $r33, $r34, $r39, $r46, $r47, $r49, $r50, $r52;
        android.content.ComponentName $r20, $r35, $r44;
        android.content.Intent $r21, $r30, $r45;
        java.lang.String $r23, $r24, $r25, $r36, $r38, $r40, $r48, $r51, $r53;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$ActivityClientRecord;

        r2 := @parameter1: android.app.ActivityThread$StopInfo;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        if r1 == null goto label01;

        if z0 != 0 goto label03;

        $z4 = r1.<android.app.ActivityThread$ActivityClientRecord: boolean stopped>;

        if $z4 == 0 goto label03;

        $r16 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z5 = $r16.<android.app.Activity: boolean mFinished>;

        if $z5 == 0 goto label02;

     label01:
        return;

     label02:
        $r17 = new java.lang.RuntimeException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Performing stop of activity that is not resumed: ");

        $r21 = r1.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        $r20 = virtualinvoke $r21.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r23 = virtualinvoke $r20.<android.content.ComponentName: java.lang.String toShortString()>();

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String)>($r25);

        r6 = $r17;

        $r24 = virtualinvoke r6.<java.lang.RuntimeException: java.lang.String getMessage()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityThread", $r24, r6);

     label03:
        if r2 == null goto label05;

     label04:
        r2.<android.app.ActivityThread$StopInfo: android.graphics.Bitmap thumbnail> = null;

        $r15 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r14 = virtualinvoke $r15.<android.app.Activity: java.lang.CharSequence onCreateDescription()>();

        r2.<android.app.ActivityThread$StopInfo: java.lang.CharSequence description> = $r14;

     label05:
        $r7 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z2 = $r7.<android.app.Activity: boolean mFinished>;

        if $z2 != 0 goto label06;

        if z1 == 0 goto label06;

        $r9 = r1.<android.app.ActivityThread$ActivityClientRecord: android.os.Bundle state>;

        if $r9 != null goto label11;

        $r11 = new android.os.Bundle;

        specialinvoke $r11.<android.os.Bundle: void <init>()>();

        r4 = $r11;

        virtualinvoke r4.<android.os.Bundle: boolean setAllowFds(boolean)>(0);

        $r12 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r13 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r12.<android.app.Instrumentation: void callActivityOnSaveInstanceState(android.app.Activity,android.os.Bundle)>($r13, r4);

        r1.<android.app.ActivityThread$ActivityClientRecord: android.os.Bundle state> = r4;

     label06:
        if z0 != 0 goto label09;

     label07:
        $r8 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r8.<android.app.Activity: void performStop()>();

     label08:
        r1.<android.app.ActivityThread$ActivityClientRecord: boolean stopped> = 1;

     label09:
        r1.<android.app.ActivityThread$ActivityClientRecord: boolean paused> = 1;

        return;

     label10:
        $r27 := @caughtexception;

        r5 = $r27;

        $r26 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r28 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z6 = virtualinvoke $r26.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>($r28, r5);

        if $z6 != 0 goto label05;

        $r31 = new java.lang.RuntimeException;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to save state of activity ");

        $r30 = r1.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        $r35 = virtualinvoke $r30.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r36 = virtualinvoke $r35.<android.content.ComponentName: java.lang.String toShortString()>();

        $r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r40 = virtualinvoke r5.<java.lang.Exception: java.lang.String toString()>();

        $r39 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r31.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r38, r5);

        throw $r31;

     label11:
        $r10 = r1.<android.app.ActivityThread$ActivityClientRecord: android.os.Bundle state>;

        goto label06;

     label12:
        $r37 := @caughtexception;

        r3 = $r37;

        $r42 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r43 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z7 = virtualinvoke $r42.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>($r43, r3);

        if $z7 != 0 goto label08;

        $r41 = new java.lang.RuntimeException;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to stop activity ");

        $r45 = r1.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        $r44 = virtualinvoke $r45.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r51 = virtualinvoke $r44.<android.content.ComponentName: java.lang.String toShortString()>();

        $r50 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);

        $r49 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r48 = virtualinvoke r3.<java.lang.Exception: java.lang.String toString()>();

        $r52 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r41.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r53, r3);

        throw $r41;

        catch java.lang.Exception from label04 to label05 with label10;
        catch java.lang.Exception from label07 to label08 with label12;
    }

    static transient void printRow(java.io.PrintWriter, java.lang.String, java.lang.Object[])
    {
        java.io.PrintWriter r0;
        java.lang.String r1, $r3;
        java.lang.Object[] r2;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, r2);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r3);

        return;
    }

    private static java.lang.String safeToComponentShortString(android.content.Intent)
    {
        android.content.Intent r0;
        android.content.ComponentName r1;
        java.lang.String $r2;

        r0 := @parameter0: android.content.Intent;

        r1 = virtualinvoke r0.<android.content.Intent: android.content.ComponentName getComponent()>();

        if r1 != null goto label1;

        return "[Unknown]";

     label1:
        $r2 = virtualinvoke r1.<android.content.ComponentName: java.lang.String toShortString()>();

        return $r2;
    }

    private void sendMessage(int, java.lang.Object)
    {
        android.app.ActivityThread r0;
        int i0;
        java.lang.Object r1;

        r0 := @this: android.app.ActivityThread;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        specialinvoke r0.<android.app.ActivityThread: void sendMessage(int,java.lang.Object,int,int,boolean)>(i0, r1, 0, 0, 0);

        return;
    }

    private void sendMessage(int, java.lang.Object, int)
    {
        android.app.ActivityThread r0;
        int i0, i1;
        java.lang.Object r1;

        r0 := @this: android.app.ActivityThread;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        i1 := @parameter2: int;

        specialinvoke r0.<android.app.ActivityThread: void sendMessage(int,java.lang.Object,int,int,boolean)>(i0, r1, i1, 0, 0);

        return;
    }

    private void sendMessage(int, java.lang.Object, int, int)
    {
        android.app.ActivityThread r0;
        int i0, i1, i2;
        java.lang.Object r1;

        r0 := @this: android.app.ActivityThread;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<android.app.ActivityThread: void sendMessage(int,java.lang.Object,int,int,boolean)>(i0, r1, i1, i2, 0);

        return;
    }

    private void sendMessage(int, java.lang.Object, int, int, boolean)
    {
        android.app.ActivityThread r0;
        int i0, i1, i2;
        java.lang.Object r1;
        boolean z0;
        android.os.Message r2;
        android.app.ActivityThread$H $r3;

        r0 := @this: android.app.ActivityThread;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        z0 := @parameter4: boolean;

        r2 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r2.<android.os.Message: int what> = i0;

        r2.<android.os.Message: java.lang.Object obj> = r1;

        r2.<android.os.Message: int arg1> = i1;

        r2.<android.os.Message: int arg2> = i2;

        if z0 == 0 goto label1;

        virtualinvoke r2.<android.os.Message: void setAsynchronous(boolean)>(1);

     label1:
        $r3 = r0.<android.app.ActivityThread: android.app.ActivityThread$H mH>;

        virtualinvoke $r3.<android.app.ActivityThread$H: boolean sendMessage(android.os.Message)>(r2);

        return;
    }

    private void setupGraphicsSupport(android.app.LoadedApk, java.io.File)
    {
        android.app.ActivityThread r0;
        android.app.LoadedApk r1;
        java.io.File r2;
        int i0, $i1;
        java.lang.String[] r4;
        boolean $z0;
        android.content.pm.IPackageManager $r5;
        android.os.RemoteException $r6;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.LoadedApk;

        r2 := @parameter1: java.io.File;

        $z0 = staticinvoke <android.os.Process: boolean isIsolated()>();

        if $z0 == 0 goto label2;

     label1:
        return;

     label2:
        i0 = staticinvoke <android.os.Process: int myUid()>();

        $r5 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        r4 = interfaceinvoke $r5.<android.content.pm.IPackageManager: java.lang.String[] getPackagesForUid(int)>(i0);

     label3:
        if r4 == null goto label1;

     label4:
        $i1 = lengthof r4;

        if $i1 != 1 goto label1;

        staticinvoke <android.view.HardwareRenderer: void setupDiskCache(java.io.File)>(r2);

        staticinvoke <android.renderscript.RenderScript: void setupDiskCache(java.io.File)>(r2);

     label5:
        return;

     label6:
        $r6 := @caughtexception;

        return;

        catch android.os.RemoteException from label2 to label3 with label6;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public static android.app.ActivityThread systemMain()
    {
        android.app.ActivityThread r0, $r1;

        staticinvoke <android.view.HardwareRenderer: void disable(boolean)>(1);

        $r1 = new android.app.ActivityThread;

        specialinvoke $r1.<android.app.ActivityThread: void <init>()>();

        r0 = $r1;

        specialinvoke r0.<android.app.ActivityThread: void attach(boolean)>(1);

        return r0;
    }

    private void updateDefaultDensity()
    {
        android.app.ActivityThread r0;
        int $i0, $i1, $i2, $i3, $i4, $i6;
        boolean $z0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: android.app.ActivityThread;

        $i0 = r0.<android.app.ActivityThread: int mCurDefaultDisplayDpi>;

        if $i0 == 0 goto label1;

        $i2 = r0.<android.app.ActivityThread: int mCurDefaultDisplayDpi>;

        $i1 = <android.util.DisplayMetrics: int DENSITY_DEVICE>;

        if $i2 == $i1 goto label1;

        $z0 = r0.<android.app.ActivityThread: boolean mDensityCompatMode>;

        if $z0 != 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Switching default density from ");

        $i3 = <android.util.DisplayMetrics: int DENSITY_DEVICE>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $i4 = r0.<android.app.ActivityThread: int mCurDefaultDisplayDpi>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityThread", $r6);

        $i6 = r0.<android.app.ActivityThread: int mCurDefaultDisplayDpi>;

        <android.util.DisplayMetrics: int DENSITY_DEVICE> = $i6;

        staticinvoke <android.graphics.Bitmap: void setDefaultDensity(int)>(160);

     label1:
        return;
    }

    private void updateVisibility(android.app.ActivityThread$ActivityClientRecord, boolean)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$ActivityClientRecord r1;
        boolean z0, $z1, $z2, $z3;
        android.view.View r2;
        android.app.Activity $r3, $r4, $r5, $r6, $r9, $r10, $r13, $r14, $r15;
        int $i0, $i1, $i2, $i3, $i4;
        android.content.res.Configuration $r7, $r8, $r11, $r12;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$ActivityClientRecord;

        z0 := @parameter1: boolean;

        $r3 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        r2 = $r3.<android.app.Activity: android.view.View mDecor>;

        if r2 == null goto label2;

        if z0 == 0 goto label3;

        $r6 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z2 = $r6.<android.app.Activity: boolean mVisibleFromServer>;

        if $z2 != 0 goto label1;

        $r13 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r13.<android.app.Activity: boolean mVisibleFromServer> = 1;

        $i4 = r0.<android.app.ActivityThread: int mNumVisibleActivities>;

        $i3 = 1 + $i4;

        r0.<android.app.ActivityThread: int mNumVisibleActivities> = $i3;

        $r14 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z3 = $r14.<android.app.Activity: boolean mVisibleFromClient>;

        if $z3 == 0 goto label1;

        $r15 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r15.<android.app.Activity: void makeVisible()>();

     label1:
        $r7 = r1.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration newConfig>;

        if $r7 == null goto label2;

        $r9 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r8 = r1.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration newConfig>;

        staticinvoke <android.app.ActivityThread: void performConfigurationChanged(android.content.ComponentCallbacks2,android.content.res.Configuration)>($r9, $r8);

        $r10 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r11 = $r10.<android.app.Activity: android.content.res.Configuration mCurrentConfig>;

        $r12 = r1.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration newConfig>;

        $i2 = virtualinvoke $r11.<android.content.res.Configuration: int diff(android.content.res.Configuration)>($r12);

        staticinvoke <android.app.ActivityThread: void freeTextLayoutCachesIfNeeded(int)>($i2);

        r1.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration newConfig> = null;

     label2:
        return;

     label3:
        $r4 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z1 = $r4.<android.app.Activity: boolean mVisibleFromServer>;

        if $z1 == 0 goto label2;

        $r5 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r5.<android.app.Activity: boolean mVisibleFromServer> = 0;

        $i0 = r0.<android.app.ActivityThread: int mNumVisibleActivities>;

        $i1 = -1 + $i0;

        r0.<android.app.ActivityThread: int mNumVisibleActivities> = $i1;

        virtualinvoke r2.<android.view.View: void setVisibility(int)>(4);

        return;
    }

    public final android.content.IContentProvider acquireExistingProvider(android.content.Context, java.lang.String, int, boolean)
    {
        android.app.ActivityThread r0;
        android.content.Context r1;
        java.lang.String r2, $r21;
        int i0;
        boolean z0, $z1;
        android.util.ArrayMap r3, $r11, $r14;
        android.app.ActivityThread$ProviderKey r4, $r10;
        java.lang.Throwable r5, $r22;
        android.app.ActivityThread$ProviderClientRecord r6;
        android.content.IContentProvider r7;
        android.os.IBinder r8;
        android.app.ActivityThread$ProviderRefCount r9;
        java.lang.Object $r12, $r13;
        java.lang.StringBuilder $r15, $r16, $r17, $r18, $r19, $r20;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        r3 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderMap>;

        entermonitor r3;

     label01:
        $r10 = new android.app.ActivityThread$ProviderKey;

        specialinvoke $r10.<android.app.ActivityThread$ProviderKey: void <init>(java.lang.String,int)>(r2, i0);

        r4 = $r10;

        $r11 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderMap>;

        $r12 = virtualinvoke $r11.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r4);

        r6 = (android.app.ActivityThread$ProviderClientRecord) $r12;

     label02:
        if r6 != null goto label05;

     label03:
        exitmonitor r3;

     label04:
        return null;

     label05:
        r7 = r6.<android.app.ActivityThread$ProviderClientRecord: android.content.IContentProvider mProvider>;

        r8 = interfaceinvoke r7.<android.content.IContentProvider: android.os.IBinder asBinder()>();

        $z1 = interfaceinvoke r8.<android.os.IBinder: boolean isBinderAlive()>();

        if $z1 != 0 goto label07;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Acquiring provider ");

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for user ");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": existing object\'s process dead");

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ActivityThread", $r21);

        virtualinvoke r0.<android.app.ActivityThread: void handleUnstableProviderDiedLocked(android.os.IBinder,boolean)>(r8, 1);

        exitmonitor r3;

     label06:
        return null;

     label07:
        $r14 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderRefCountMap>;

        $r13 = virtualinvoke $r14.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r8);

        r9 = (android.app.ActivityThread$ProviderRefCount) $r13;

     label08:
        if r9 == null goto label10;

     label09:
        specialinvoke r0.<android.app.ActivityThread: void incProviderRefLocked(android.app.ActivityThread$ProviderRefCount,boolean)>(r9, z0);

     label10:
        exitmonitor r3;

     label11:
        return r7;

     label12:
        $r22 := @caughtexception;

        r5 = $r22;

     label13:
        exitmonitor r3;

     label14:
        throw r5;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public final android.content.IContentProvider acquireProvider(android.content.Context, java.lang.String, int, boolean)
    {
        android.app.ActivityThread r0;
        android.content.Context r1;
        java.lang.String r2, $r15;
        int i0;
        boolean z0, $z1;
        android.content.IContentProvider r3, $r10;
        android.app.IActivityManager$ContentProviderHolder r5, r6, $r11;
        android.app.IActivityManager $r7;
        android.app.ActivityThread$ApplicationThread $r8;
        android.content.pm.ProviderInfo $r9;
        java.lang.StringBuilder $r12, $r13, $r14;
        android.os.RemoteException $r16;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        r3 = virtualinvoke r0.<android.app.ActivityThread: android.content.IContentProvider acquireExistingProvider(android.content.Context,java.lang.String,int,boolean)>(r1, r2, i0, z0);

        if r3 == null goto label1;

        return r3;

     label1:
        $r7 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r8 = virtualinvoke r0.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread getApplicationThread()>();

        r6 = interfaceinvoke $r7.<android.app.IActivityManager: android.app.IActivityManager$ContentProviderHolder getContentProvider(android.app.IApplicationThread,java.lang.String,int,boolean)>($r8, r2, i0, z0);

     label2:
        r5 = r6;

     label3:
        if r5 != null goto label4;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to find provider info for ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityThread", $r15);

        return null;

     label4:
        $r9 = r5.<android.app.IActivityManager$ContentProviderHolder: android.content.pm.ProviderInfo info>;

        $z1 = r5.<android.app.IActivityManager$ContentProviderHolder: boolean noReleaseNeeded>;

        $r11 = specialinvoke r0.<android.app.ActivityThread: android.app.IActivityManager$ContentProviderHolder installProvider(android.content.Context,android.app.IActivityManager$ContentProviderHolder,android.content.pm.ProviderInfo,boolean,boolean,boolean)>(r1, r5, $r9, 1, $z1, z0);

        $r10 = $r11.<android.app.IActivityManager$ContentProviderHolder: android.content.IContentProvider provider>;

        return $r10;

     label5:
        $r16 := @caughtexception;

        r5 = null;

        goto label3;

        catch android.os.RemoteException from label1 to label2 with label5;
    }

    final void appNotRespondingViaProvider(android.os.IBinder)
    {
        android.app.ActivityThread r0;
        android.os.IBinder r1, $r10;
        android.util.ArrayMap r2, $r6;
        java.lang.Throwable r3, $r12;
        android.app.ActivityThread$ProviderRefCount r4;
        java.lang.Object $r7;
        android.app.IActivityManager $r8;
        android.app.IActivityManager$ContentProviderHolder $r9;
        android.os.RemoteException $r11;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.os.IBinder;

        r2 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderMap>;

        entermonitor r2;

     label1:
        $r6 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderRefCountMap>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (android.app.ActivityThread$ProviderRefCount) $r7;

     label2:
        if r4 == null goto label4;

     label3:
        $r8 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r9 = r4.<android.app.ActivityThread$ProviderRefCount: android.app.IActivityManager$ContentProviderHolder holder>;

        $r10 = $r9.<android.app.IActivityManager$ContentProviderHolder: android.os.IBinder connection>;

        interfaceinvoke $r8.<android.app.IActivityManager: void appNotRespondingViaProvider(android.os.IBinder)>($r10);

     label4:
        exitmonitor r2;

     label5:
        return;

     label6:
        $r12 := @caughtexception;

        r3 = $r12;

     label7:
        exitmonitor r2;

     label8:
        throw r3;

     label9:
        $r11 := @caughtexception;

        goto label4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label9;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    final android.content.res.Configuration applyCompatConfiguration(int)
    {
        android.app.ActivityThread r0;
        int i0;
        android.content.res.Configuration r1, $r2, $r3, $r4, $r5, $r7;
        android.app.ResourcesManager $r6;
        boolean $z0;

        r0 := @this: android.app.ActivityThread;

        i0 := @parameter0: int;

        r1 = r0.<android.app.ActivityThread: android.content.res.Configuration mConfiguration>;

        $r2 = r0.<android.app.ActivityThread: android.content.res.Configuration mCompatConfiguration>;

        if $r2 != null goto label1;

        $r7 = new android.content.res.Configuration;

        specialinvoke $r7.<android.content.res.Configuration: void <init>()>();

        r0.<android.app.ActivityThread: android.content.res.Configuration mCompatConfiguration> = $r7;

     label1:
        $r4 = r0.<android.app.ActivityThread: android.content.res.Configuration mCompatConfiguration>;

        $r3 = r0.<android.app.ActivityThread: android.content.res.Configuration mConfiguration>;

        virtualinvoke $r4.<android.content.res.Configuration: void setTo(android.content.res.Configuration)>($r3);

        $r6 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        $r5 = r0.<android.app.ActivityThread: android.content.res.Configuration mCompatConfiguration>;

        $z0 = virtualinvoke $r6.<android.app.ResourcesManager: boolean applyCompatConfiguration(int,android.content.res.Configuration)>(i0, $r5);

        if $z0 == 0 goto label2;

        r1 = r0.<android.app.ActivityThread: android.content.res.Configuration mCompatConfiguration>;

     label2:
        return r1;
    }

    android.content.res.Configuration applyConfigCompatMainThread(int, android.content.res.Configuration, android.content.res.CompatibilityInfo)
    {
        android.app.ActivityThread r0;
        int i0;
        android.content.res.Configuration r1, $r3;
        android.content.res.CompatibilityInfo r2;
        boolean $z0;

        r0 := @this: android.app.ActivityThread;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.res.Configuration;

        r2 := @parameter2: android.content.res.CompatibilityInfo;

        if r1 != null goto label1;

        return null;

     label1:
        $z0 = virtualinvoke r2.<android.content.res.CompatibilityInfo: boolean supportsScreen()>();

        if $z0 != 0 goto label2;

        $r3 = r0.<android.app.ActivityThread: android.content.res.Configuration mMainThreadConfig>;

        virtualinvoke $r3.<android.content.res.Configuration: void setTo(android.content.res.Configuration)>(r1);

        r1 = r0.<android.app.ActivityThread: android.content.res.Configuration mMainThreadConfig>;

        virtualinvoke r2.<android.content.res.CompatibilityInfo: void applyToConfiguration(int,android.content.res.Configuration)>(i0, r1);

     label2:
        return r1;
    }

    public final void applyConfigurationToResources(android.content.res.Configuration)
    {
        android.app.ActivityThread r0;
        android.content.res.Configuration r1;
        android.app.ResourcesManager r2, $r4;
        java.lang.Throwable r3, $r5;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.content.res.Configuration;

        r2 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        entermonitor r2;

     label1:
        $r4 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        virtualinvoke $r4.<android.app.ResourcesManager: boolean applyConfigurationToResourcesLocked(android.content.res.Configuration,android.content.res.CompatibilityInfo)>(r1, null);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    java.util.ArrayList collectComponentCallbacks(boolean, android.content.res.Configuration)
    {
        android.app.ActivityThread r0;
        boolean z0, $z4, $z6;
        android.content.res.Configuration r1, r7;
        java.util.ArrayList r2, $r10, $r11, $r27;
        android.app.ResourcesManager r3;
        java.lang.Throwable r4, r8, $r28, $r29;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8;
        android.app.ActivityThread$ActivityClientRecord r5;
        android.app.Activity r6, $r25;
        android.util.ArrayMap r9, $r12, $r13, $r14, $r15, $r19, $r20;
        android.content.ContentProvider $r16;
        java.lang.Object $r17, $r21, $r23, $r26;
        android.app.ActivityThread$ProviderClientRecord $r18;
        android.content.res.CompatibilityInfo $r22;
        android.app.LoadedApk $r24;

        r0 := @this: android.app.ActivityThread;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.content.res.Configuration;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r2 = $r10;

        r3 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        entermonitor r3;

     label01:
        $r11 = r0.<android.app.ActivityThread: java.util.ArrayList mAllApplications>;

        i0 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label06;

     label04:
        $r27 = r0.<android.app.ActivityThread: java.util.ArrayList mAllApplications>;

        $r26 = virtualinvoke $r27.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r26);

     label05:
        i1 = i1 + 1;

        goto label03;

     label06:
        $r12 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        i2 = virtualinvoke $r12.<android.util.ArrayMap: int size()>();

     label07:
        i3 = 0;

     label08:
        if i3 >= i2 goto label22;

     label09:
        $r19 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r23 = virtualinvoke $r19.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i3);

        r5 = (android.app.ActivityThread$ActivityClientRecord) $r23;

        r6 = r5.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

     label10:
        if r6 == null goto label39;

     label11:
        $i8 = r0.<android.app.ActivityThread: int mCurDefaultDisplayDpi>;

        $r24 = r5.<android.app.ActivityThread$ActivityClientRecord: android.app.LoadedApk packageInfo>;

        $r22 = virtualinvoke $r24.<android.app.LoadedApk: android.content.res.CompatibilityInfo getCompatibilityInfo()>();

        r7 = virtualinvoke r0.<android.app.ActivityThread: android.content.res.Configuration applyConfigCompatMainThread(int,android.content.res.Configuration,android.content.res.CompatibilityInfo)>($i8, r1, $r22);

        $r25 = r5.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z4 = $r25.<android.app.Activity: boolean mFinished>;

        if $z4 != 0 goto label16;

     label12:
        if z0 != 0 goto label14;

     label13:
        $z6 = r5.<android.app.ActivityThread$ActivityClientRecord: boolean paused>;

        if $z6 != 0 goto label16;

     label14:
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

     label15:
        goto label39;

     label16:
        if r7 == null goto label39;

     label17:
        r5.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration newConfig> = r7;

     label18:
        goto label39;

     label19:
        $r28 := @caughtexception;

        r4 = $r28;

     label20:
        exitmonitor r3;

     label21:
        throw r4;

     label22:
        $r13 = r0.<android.app.ActivityThread: android.util.ArrayMap mServices>;

        i4 = virtualinvoke $r13.<android.util.ArrayMap: int size()>();

     label23:
        i5 = 0;

     label24:
        if i5 >= i4 goto label27;

     label25:
        $r20 = r0.<android.app.ActivityThread: android.util.ArrayMap mServices>;

        $r21 = virtualinvoke $r20.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i5);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r21);

     label26:
        i5 = i5 + 1;

        goto label24;

     label27:
        exitmonitor r3;

     label28:
        r9 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderMap>;

        entermonitor r9;

     label29:
        $r15 = r0.<android.app.ActivityThread: android.util.ArrayMap mLocalProviders>;

        i7 = virtualinvoke $r15.<android.util.ArrayMap: int size()>();

     label30:
        i6 = 0;

     label31:
        if i6 >= i7 goto label34;

     label32:
        $r14 = r0.<android.app.ActivityThread: android.util.ArrayMap mLocalProviders>;

        $r17 = virtualinvoke $r14.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i6);

        $r18 = (android.app.ActivityThread$ProviderClientRecord) $r17;

        $r16 = $r18.<android.app.ActivityThread$ProviderClientRecord: android.content.ContentProvider mLocalProvider>;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);

     label33:
        i6 = i6 + 1;

        goto label31;

     label34:
        exitmonitor r9;

     label35:
        return r2;

     label36:
        $r29 := @caughtexception;

        r8 = $r29;

     label37:
        exitmonitor r9;

     label38:
        throw r8;

     label39:
        i3 = i3 + 1;

        goto label08;

        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label04 to label05 with label19;
        catch java.lang.Throwable from label06 to label07 with label19;
        catch java.lang.Throwable from label09 to label10 with label19;
        catch java.lang.Throwable from label11 to label12 with label19;
        catch java.lang.Throwable from label13 to label14 with label19;
        catch java.lang.Throwable from label14 to label15 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
        catch java.lang.Throwable from label22 to label23 with label19;
        catch java.lang.Throwable from label25 to label26 with label19;
        catch java.lang.Throwable from label27 to label28 with label19;
        catch java.lang.Throwable from label29 to label30 with label36;
        catch java.lang.Throwable from label32 to label33 with label36;
        catch java.lang.Throwable from label34 to label35 with label36;
        catch java.lang.Throwable from label37 to label38 with label36;
    }

    final void completeRemoveProvider(android.app.ActivityThread$ProviderRefCount)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$ProviderRefCount r1, $r10;
        android.util.ArrayMap r2, $r8, $r11, $r14, $r21, $r23;
        java.lang.Throwable r3, $r24;
        android.os.IBinder r4, $r15, $r18;
        int i0, $i1;
        boolean $z0;
        android.app.IActivityManager$ContentProviderHolder $r6, $r12;
        android.content.IContentProvider $r7, $r19;
        java.lang.Object $r9, $r17;
        android.app.IActivityManager $r13;
        android.app.ActivityThread$ProviderClientRecord $r16;
        android.os.RemoteException $r25;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$ProviderRefCount;

        r2 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderMap>;

        entermonitor r2;

     label01:
        $z0 = r1.<android.app.ActivityThread$ProviderRefCount: boolean removePending>;

        if $z0 != 0 goto label03;

        exitmonitor r2;

     label02:
        return;

     label03:
        r1.<android.app.ActivityThread$ProviderRefCount: boolean removePending> = 0;

        $r6 = r1.<android.app.ActivityThread$ProviderRefCount: android.app.IActivityManager$ContentProviderHolder holder>;

        $r7 = $r6.<android.app.IActivityManager$ContentProviderHolder: android.content.IContentProvider provider>;

        r4 = interfaceinvoke $r7.<android.content.IContentProvider: android.os.IBinder asBinder()>();

        $r8 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderRefCountMap>;

        $r9 = virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r4);

        $r10 = (android.app.ActivityThread$ProviderRefCount) $r9;

        if $r10 != r1 goto label04;

        $r23 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderRefCountMap>;

        virtualinvoke $r23.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r4);

     label04:
        $r11 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderMap>;

        $i1 = virtualinvoke $r11.<android.util.ArrayMap: int size()>();

        i0 = -1 + $i1;

     label05:
        if i0 < 0 goto label08;

     label06:
        $r14 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderMap>;

        $r17 = virtualinvoke $r14.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i0);

        $r16 = (android.app.ActivityThread$ProviderClientRecord) $r17;

        $r19 = $r16.<android.app.ActivityThread$ProviderClientRecord: android.content.IContentProvider mProvider>;

        $r18 = interfaceinvoke $r19.<android.content.IContentProvider: android.os.IBinder asBinder()>();

        if $r18 != r4 goto label15;

        $r21 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderMap>;

        virtualinvoke $r21.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i0);

     label07:
        goto label15;

     label08:
        exitmonitor r2;

     label09:
        $r13 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r12 = r1.<android.app.ActivityThread$ProviderRefCount: android.app.IActivityManager$ContentProviderHolder holder>;

        $r15 = $r12.<android.app.IActivityManager$ContentProviderHolder: android.os.IBinder connection>;

        interfaceinvoke $r13.<android.app.IActivityManager: void removeContentProvider(android.os.IBinder,boolean)>($r15, 0);

     label10:
        return;

     label11:
        $r25 := @caughtexception;

        return;

     label12:
        $r24 := @caughtexception;

        r3 = $r24;

     label13:
        exitmonitor r2;

     label14:
        throw r3;

     label15:
        i0 = i0 + -1;

        goto label05;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch android.os.RemoteException from label09 to label10 with label11;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    void doGcIfNeeded()
    {
        android.app.ActivityThread r0;
        long l0, $l1, $l2;
        byte $b3;

        r0 := @this: android.app.ActivityThread;

        r0.<android.app.ActivityThread: boolean mGcIdlerScheduled> = 0;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l1 = staticinvoke <com.android.internal.os.BinderInternal: long getLastGcTime()>();

        $l2 = 5000L + $l1;

        $b3 = $l2 cmp l0;

        if $b3 >= 0 goto label1;

        staticinvoke <com.android.internal.os.BinderInternal: void forceGc(java.lang.String)>("bg");

     label1:
        return;
    }

    void ensureJitEnabled()
    {
        android.app.ActivityThread r0;
        boolean $z0;
        dalvik.system.VMRuntime $r1;

        r0 := @this: android.app.ActivityThread;

        $z0 = r0.<android.app.ActivityThread: boolean mJitEnabled>;

        if $z0 != 0 goto label1;

        r0.<android.app.ActivityThread: boolean mJitEnabled> = 1;

        $r1 = staticinvoke <dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>();

        virtualinvoke $r1.<dalvik.system.VMRuntime: void startJitCompilation()>();

     label1:
        return;
    }

    final void finishInstrumentation(int, android.os.Bundle)
    {
        android.app.ActivityThread r0;
        int i0;
        android.os.Bundle r1;
        android.app.IActivityManager r2;
        android.app.ActivityThread$Profiler $r4, $r7, $r8;
        java.lang.String $r5;
        android.app.ActivityThread$ApplicationThread $r6;
        boolean $z0;
        android.os.ParcelFileDescriptor $r9;
        android.os.RemoteException $r10;

        r0 := @this: android.app.ActivityThread;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        r2 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r4 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        $r5 = $r4.<android.app.ActivityThread$Profiler: java.lang.String profileFile>;

        if $r5 == null goto label1;

        $r7 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        $z0 = $r7.<android.app.ActivityThread$Profiler: boolean handlingProfiling>;

        if $z0 == 0 goto label1;

        $r8 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        $r9 = $r8.<android.app.ActivityThread$Profiler: android.os.ParcelFileDescriptor profileFd>;

        if $r9 != null goto label1;

        staticinvoke <android.os.Debug: void stopMethodTracing()>();

     label1:
        $r6 = r0.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread mAppThread>;

        interfaceinvoke r2.<android.app.IActivityManager: void finishInstrumentation(android.app.IApplicationThread,int,android.os.Bundle)>($r6, i0, r1);

     label2:
        return;

     label3:
        $r10 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public final android.app.Activity getActivity(android.os.IBinder)
    {
        android.app.ActivityThread r0;
        android.os.IBinder r1;
        android.util.ArrayMap $r2;
        java.lang.Object $r3;
        android.app.ActivityThread$ActivityClientRecord $r4;
        android.app.Activity $r5;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.os.IBinder;

        $r2 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (android.app.ActivityThread$ActivityClientRecord) $r3;

        $r5 = $r4.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        return $r5;
    }

    public android.app.Application getApplication()
    {
        android.app.ActivityThread r0;
        android.app.Application $r1;

        r0 := @this: android.app.ActivityThread;

        $r1 = r0.<android.app.ActivityThread: android.app.Application mInitialApplication>;

        return $r1;
    }

    public android.app.ActivityThread$ApplicationThread getApplicationThread()
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$ApplicationThread $r1;

        r0 := @this: android.app.ActivityThread;

        $r1 = r0.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread mAppThread>;

        return $r1;
    }

    final android.os.Handler getHandler()
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$H $r1;

        r0 := @this: android.app.ActivityThread;

        $r1 = r0.<android.app.ActivityThread: android.app.ActivityThread$H mH>;

        return $r1;
    }

    public android.app.Instrumentation getInstrumentation()
    {
        android.app.ActivityThread r0;
        android.app.Instrumentation $r1;

        r0 := @this: android.app.ActivityThread;

        $r1 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        return $r1;
    }

    public int getIntCoreSetting(java.lang.String, int)
    {
        android.app.ActivityThread r0;
        java.lang.String r1;
        int i0, i1;
        android.app.ResourcesManager r2;
        java.lang.Throwable r3, $r6;
        android.os.Bundle $r4, $r5;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        entermonitor r2;

     label1:
        $r4 = r0.<android.app.ActivityThread: android.os.Bundle mCoreSettings>;

        if $r4 == null goto label3;

        $r5 = r0.<android.app.ActivityThread: android.os.Bundle mCoreSettings>;

        i1 = virtualinvoke $r5.<android.os.Bundle: int getInt(java.lang.String,int)>(r1, i0);

        exitmonitor r2;

     label2:
        return i1;

     label3:
        exitmonitor r2;

     label4:
        return i0;

     label5:
        $r6 := @caughtexception;

        r3 = $r6;

     label6:
        exitmonitor r2;

     label7:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public android.os.Looper getLooper()
    {
        android.app.ActivityThread r0;
        android.os.Looper $r1;

        r0 := @this: android.app.ActivityThread;

        $r1 = r0.<android.app.ActivityThread: android.os.Looper mLooper>;

        return $r1;
    }

    public final android.app.LoadedApk getPackageInfo(android.content.pm.ApplicationInfo, android.content.res.CompatibilityInfo, int)
    {
        android.app.ActivityThread r0;
        android.content.pm.ApplicationInfo r1, $r24, $r26;
        android.content.res.CompatibilityInfo r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean z0, z1, z2;
        java.lang.String r3, $r7, $r19;
        android.app.LoadedApk $r4;
        java.lang.StringBuilder $r5, $r6, $r8, $r9, $r10, $r11, $r14, $r15, $r17, $r18, $r21, $r22, $r23;
        java.lang.SecurityException $r12;
        android.app.ActivityThread$AppBindData $r13, $r16, $r20, $r25, $r27;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        r2 := @parameter1: android.content.res.CompatibilityInfo;

        i0 := @parameter2: int;

        $i3 = i0 & 1;

        if $i3 == 0 goto label5;

        z0 = 1;

     label1:
        z1 = 0;

        if z0 == 0 goto label3;

        i1 = r1.<android.content.pm.ApplicationInfo: int uid>;

        z1 = 0;

        if i1 == 0 goto label3;

        i2 = r1.<android.content.pm.ApplicationInfo: int uid>;

        z1 = 0;

        if i2 == 1000 goto label3;

        $r27 = r0.<android.app.ActivityThread: android.app.ActivityThread$AppBindData mBoundApplication>;

        if $r27 == null goto label2;

        $i8 = r1.<android.content.pm.ApplicationInfo: int uid>;

        $r25 = r0.<android.app.ActivityThread: android.app.ActivityThread$AppBindData mBoundApplication>;

        $r26 = $r25.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo>;

        $i7 = $r26.<android.content.pm.ApplicationInfo: int uid>;

        z2 = staticinvoke <android.os.UserHandle: boolean isSameApp(int,int)>($i8, $i7);

        z1 = 0;

        if z2 != 0 goto label3;

     label2:
        z1 = 1;

     label3:
        $i4 = i0 & 3;

        if $i4 != 1 goto label6;

        if z1 == 0 goto label6;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requesting code from ");

        $r7 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (with uid ");

        $i5 = r1.<android.content.pm.ApplicationInfo: int uid>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        r3 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = r0.<android.app.ActivityThread: android.app.ActivityThread$AppBindData mBoundApplication>;

        if $r13 == null goto label4;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to be run in process ");

        $r16 = r0.<android.app.ActivityThread: android.app.ActivityThread$AppBindData mBoundApplication>;

        $r19 = $r16.<android.app.ActivityThread$AppBindData: java.lang.String processName>;

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (with uid ");

        $r20 = r0.<android.app.ActivityThread: android.app.ActivityThread$AppBindData mBoundApplication>;

        $r24 = $r20.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo>;

        $i6 = $r24.<android.content.pm.ApplicationInfo: int uid>;

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        r3 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        $r12 = new java.lang.SecurityException;

        specialinvoke $r12.<java.lang.SecurityException: void <init>(java.lang.String)>(r3);

        throw $r12;

     label5:
        z0 = 0;

        goto label1;

     label6:
        $r4 = specialinvoke r0.<android.app.ActivityThread: android.app.LoadedApk getPackageInfo(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,java.lang.ClassLoader,boolean,boolean)>(r1, r2, null, z1, z0);

        return $r4;
    }

    public final android.app.LoadedApk getPackageInfo(java.lang.String, android.content.res.CompatibilityInfo, int)
    {
        android.app.ActivityThread r0;
        java.lang.String r1;
        android.content.res.CompatibilityInfo r2;
        int i0, $i1;
        android.app.LoadedApk $r3;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.res.CompatibilityInfo;

        i0 := @parameter2: int;

        $i1 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $r3 = virtualinvoke r0.<android.app.ActivityThread: android.app.LoadedApk getPackageInfo(java.lang.String,android.content.res.CompatibilityInfo,int,int)>(r1, r2, i0, $i1);

        return $r3;
    }

    public final android.app.LoadedApk getPackageInfo(java.lang.String, android.content.res.CompatibilityInfo, int, int)
    {
        android.app.ActivityThread r0;
        java.lang.String r1, $r22, $r29;
        android.content.res.CompatibilityInfo r2;
        int i0, i1, $i2, $i3, $i4;
        android.app.ResourcesManager r3;
        java.lang.ref.WeakReference r4;
        java.lang.Throwable r5, $r34;
        android.app.LoadedApk r6, $r13;
        android.content.pm.ApplicationInfo r8, r9, $r23;
        android.util.ArrayMap $r10, $r30;
        java.lang.Object $r11, $r31, $r32;
        android.content.pm.IPackageManager $r12;
        boolean $z0, $z1;
        android.content.res.Resources $r14, $r26;
        java.lang.StringBuilder $r15, $r17, $r18, $r20, $r21, $r24, $r28;
        java.lang.SecurityException $r16;
        android.app.ActivityThread$AppBindData $r19, $r25;
        android.content.res.AssetManager $r27;
        android.os.RemoteException $r33;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.res.CompatibilityInfo;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        entermonitor r3;

        $i2 = i0 & 1;

        if $i2 == 0 goto label12;

     label01:
        $r30 = r0.<android.app.ActivityThread: android.util.ArrayMap mPackages>;

        $r31 = virtualinvoke $r30.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.lang.ref.WeakReference) $r31;

     label02:
        if r4 == null goto label22;

     label03:
        $r32 = virtualinvoke r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r6 = (android.app.LoadedApk) $r32;

     label04:
        if r6 == null goto label16;

     label05:
        $r14 = r6.<android.app.LoadedApk: android.content.res.Resources mResources>;

        if $r14 == null goto label06;

        $r26 = r6.<android.app.LoadedApk: android.content.res.Resources mResources>;

        $r27 = virtualinvoke $r26.<android.content.res.Resources: android.content.res.AssetManager getAssets()>();

        $z1 = virtualinvoke $r27.<android.content.res.AssetManager: boolean isUpToDate()>();

        if $z1 == 0 goto label16;

     label06:
        $z0 = virtualinvoke r6.<android.app.LoadedApk: boolean isSecurityViolation()>();

        if $z0 == 0 goto label14;

     label07:
        $i3 = i0 & 2;

        if $i3 != 0 goto label14;

     label08:
        $r16 = new java.lang.SecurityException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requesting code from ");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to be run in process ");

        $r19 = r0.<android.app.ActivityThread: android.app.ActivityThread$AppBindData mBoundApplication>;

        $r22 = $r19.<android.app.ActivityThread$AppBindData: java.lang.String processName>;

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r25 = r0.<android.app.ActivityThread: android.app.ActivityThread$AppBindData mBoundApplication>;

        $r23 = $r25.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo>;

        $i4 = $r23.<android.content.pm.ApplicationInfo: int uid>;

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.SecurityException: void <init>(java.lang.String)>($r29);

        throw $r16;

     label09:
        $r34 := @caughtexception;

        r5 = $r34;

     label10:
        exitmonitor r3;

     label11:
        throw r5;

     label12:
        $r10 = r0.<android.app.ActivityThread: android.util.ArrayMap mResourcePackages>;

        $r11 = virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.lang.ref.WeakReference) $r11;

     label13:
        goto label02;

     label14:
        exitmonitor r3;

     label15:
        return r6;

     label16:
        exitmonitor r3;

     label17:
        $r12 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        r9 = interfaceinvoke $r12.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>(r1, 1024, i1);

     label18:
        r8 = r9;

     label19:
        if r8 == null goto label20;

        $r13 = virtualinvoke r0.<android.app.ActivityThread: android.app.LoadedApk getPackageInfo(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,int)>(r8, r2, i0);

        return $r13;

     label20:
        return null;

     label21:
        $r33 := @caughtexception;

        r8 = null;

        goto label19;

     label22:
        r6 = null;

        goto label04;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label12 to label13 with label09;
        catch java.lang.Throwable from label14 to label15 with label09;
        catch java.lang.Throwable from label16 to label17 with label09;
        catch android.os.RemoteException from label17 to label18 with label21;
    }

    public final android.app.LoadedApk getPackageInfoNoCheck(android.content.pm.ApplicationInfo, android.content.res.CompatibilityInfo)
    {
        android.app.ActivityThread r0;
        android.content.pm.ApplicationInfo r1;
        android.content.res.CompatibilityInfo r2;
        android.app.LoadedApk $r3;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        r2 := @parameter1: android.content.res.CompatibilityInfo;

        $r3 = specialinvoke r0.<android.app.ActivityThread: android.app.LoadedApk getPackageInfo(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,java.lang.ClassLoader,boolean,boolean)>(r1, r2, null, 0, 1);

        return $r3;
    }

    public java.lang.String getProcessName()
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$AppBindData $r1;
        java.lang.String $r2;

        r0 := @this: android.app.ActivityThread;

        $r1 = r0.<android.app.ActivityThread: android.app.ActivityThread$AppBindData mBoundApplication>;

        $r2 = $r1.<android.app.ActivityThread$AppBindData: java.lang.String processName>;

        return $r2;
    }

    public java.lang.String getProfileFilePath()
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$Profiler $r1;
        java.lang.String $r2;

        r0 := @this: android.app.ActivityThread;

        $r1 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        $r2 = $r1.<android.app.ActivityThread$Profiler: java.lang.String profileFile>;

        return $r2;
    }

    public android.app.ContextImpl getSystemContext()
    {
        android.app.ActivityThread r0;
        java.lang.Throwable r1, $r5;
        android.app.ContextImpl r2, $r3, $r4;

        r0 := @this: android.app.ActivityThread;

        entermonitor r0;

     label1:
        $r3 = r0.<android.app.ActivityThread: android.app.ContextImpl mSystemContext>;

        if $r3 != null goto label2;

        $r4 = staticinvoke <android.app.ContextImpl: android.app.ContextImpl createSystemContext(android.app.ActivityThread)>(r0);

        r0.<android.app.ActivityThread: android.app.ContextImpl mSystemContext> = $r4;

     label2:
        r2 = r0.<android.app.ActivityThread: android.app.ContextImpl mSystemContext>;

        exitmonitor r0;

     label3:
        return r2;

     label4:
        $r5 := @caughtexception;

        r1 = $r5;

     label5:
        exitmonitor r0;

     label6:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    android.content.res.Resources getTopLevelResources(java.lang.String, int, android.content.res.Configuration, android.app.LoadedApk)
    {
        android.app.ActivityThread r0;
        java.lang.String r1;
        int i0;
        android.content.res.Configuration r2;
        android.app.LoadedApk r3;
        android.app.ResourcesManager $r4;
        android.content.res.CompatibilityInfo $r5;
        android.content.res.Resources $r6;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.res.Configuration;

        r3 := @parameter3: android.app.LoadedApk;

        $r4 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        $r5 = virtualinvoke r3.<android.app.LoadedApk: android.content.res.CompatibilityInfo getCompatibilityInfo()>();

        $r6 = virtualinvoke $r4.<android.app.ResourcesManager: android.content.res.Resources getTopLevelResources(java.lang.String,int,android.content.res.Configuration,android.content.res.CompatibilityInfo,android.os.IBinder)>(r1, i0, r2, $r5, null);

        return $r6;
    }

    final void handleActivityConfigurationChanged(android.os.IBinder)
    {
        android.app.ActivityThread r0;
        android.os.IBinder r1;
        android.app.ActivityThread$ActivityClientRecord r2;
        android.util.ArrayMap $r3;
        java.lang.Object $r4;
        android.app.Activity $r5, $r7, $r8;
        android.content.res.Configuration $r6, $r9, $r10;
        int $i0;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.os.IBinder;

        $r3 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (android.app.ActivityThread$ActivityClientRecord) $r4;

        if r2 == null goto label1;

        $r5 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        if $r5 != null goto label2;

     label1:
        return;

     label2:
        $r7 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r6 = r0.<android.app.ActivityThread: android.content.res.Configuration mCompatConfiguration>;

        staticinvoke <android.app.ActivityThread: void performConfigurationChanged(android.content.ComponentCallbacks2,android.content.res.Configuration)>($r7, $r6);

        $r8 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r10 = $r8.<android.app.Activity: android.content.res.Configuration mCurrentConfig>;

        $r9 = r0.<android.app.ActivityThread: android.content.res.Configuration mCompatConfiguration>;

        $i0 = virtualinvoke $r10.<android.content.res.Configuration: int diff(android.content.res.Configuration)>($r9);

        staticinvoke <android.app.ActivityThread: void freeTextLayoutCachesIfNeeded(int)>($i0);

        return;
    }

    final void handleConfigurationChanged(android.content.res.Configuration, android.content.res.CompatibilityInfo)
    {
        android.app.ActivityThread r0;
        android.content.res.Configuration r1, r5, $r7, $r9, $r10, $r11, $r12, $r16, $r17;
        android.content.res.CompatibilityInfo r2;
        android.app.ResourcesManager r3, $r8;
        java.lang.Throwable r4, $r18;
        int i0, i1, i2, $i3, $i5;
        java.util.ArrayList r6;
        boolean $z1, $z2;
        android.view.WindowManagerGlobal $r13;
        java.lang.Object $r14;
        android.content.ComponentCallbacks2 $r15;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.content.res.Configuration;

        r2 := @parameter1: android.content.res.CompatibilityInfo;

        r3 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        entermonitor r3;

     label01:
        $r7 = r0.<android.app.ActivityThread: android.content.res.Configuration mPendingConfiguration>;

        if $r7 == null goto label03;

        $r16 = r0.<android.app.ActivityThread: android.content.res.Configuration mPendingConfiguration>;

        $z2 = virtualinvoke $r16.<android.content.res.Configuration: boolean isOtherSeqNewer(android.content.res.Configuration)>(r1);

        if $z2 != 0 goto label02;

        r1 = r0.<android.app.ActivityThread: android.content.res.Configuration mPendingConfiguration>;

        $i5 = r1.<android.content.res.Configuration: int densityDpi>;

        r0.<android.app.ActivityThread: int mCurDefaultDisplayDpi> = $i5;

        specialinvoke r0.<android.app.ActivityThread: void updateDefaultDensity()>();

     label02:
        r0.<android.app.ActivityThread: android.content.res.Configuration mPendingConfiguration> = null;

     label03:
        if r1 != null goto label06;

     label04:
        exitmonitor r3;

     label05:
        return;

     label06:
        $r8 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        virtualinvoke $r8.<android.app.ResourcesManager: boolean applyConfigurationToResourcesLocked(android.content.res.Configuration,android.content.res.CompatibilityInfo)>(r1, r2);

        $r10 = r0.<android.app.ActivityThread: android.content.res.Configuration mConfiguration>;

        if $r10 != null goto label07;

        $r17 = new android.content.res.Configuration;

        specialinvoke $r17.<android.content.res.Configuration: void <init>()>();

        r0.<android.app.ActivityThread: android.content.res.Configuration mConfiguration> = $r17;

     label07:
        $r9 = r0.<android.app.ActivityThread: android.content.res.Configuration mConfiguration>;

        $z1 = virtualinvoke $r9.<android.content.res.Configuration: boolean isOtherSeqNewer(android.content.res.Configuration)>(r1);

        if $z1 != 0 goto label14;

     label08:
        if r2 != null goto label14;

     label09:
        exitmonitor r3;

     label10:
        return;

     label11:
        $r18 := @caughtexception;

        r4 = $r18;

     label12:
        exitmonitor r3;

     label13:
        throw r4;

     label14:
        $r11 = r0.<android.app.ActivityThread: android.content.res.Configuration mConfiguration>;

        i0 = virtualinvoke $r11.<android.content.res.Configuration: int diff(android.content.res.Configuration)>(r1);

        $r12 = r0.<android.app.ActivityThread: android.content.res.Configuration mConfiguration>;

        virtualinvoke $r12.<android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>(r1);

        $i3 = r0.<android.app.ActivityThread: int mCurDefaultDisplayDpi>;

        r5 = virtualinvoke r0.<android.app.ActivityThread: android.content.res.Configuration applyCompatConfiguration(int)>($i3);

        exitmonitor r3;

     label15:
        r6 = virtualinvoke r0.<android.app.ActivityThread: java.util.ArrayList collectComponentCallbacks(boolean,android.content.res.Configuration)>(0, r5);

        $r13 = staticinvoke <android.view.WindowManagerGlobal: android.view.WindowManagerGlobal getInstance()>();

        virtualinvoke $r13.<android.view.WindowManagerGlobal: void trimLocalMemory()>();

        staticinvoke <android.app.ActivityThread: void freeTextLayoutCachesIfNeeded(int)>(i0);

        if r6 == null goto label17;

        i1 = virtualinvoke r6.<java.util.ArrayList: int size()>();

        i2 = 0;

     label16:
        if i2 >= i1 goto label17;

        $r14 = virtualinvoke r6.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r15 = (android.content.ComponentCallbacks2) $r14;

        staticinvoke <android.app.ActivityThread: void performConfigurationChanged(android.content.ComponentCallbacks2,android.content.res.Configuration)>($r15, r5);

        i2 = i2 + 1;

        goto label16;

     label17:
        return;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.Throwable from label14 to label15 with label11;
    }

    final void handleDispatchPackageBroadcast(int, java.lang.String[])
    {
        android.app.ActivityThread r0;
        int i0, i1, $i2;
        java.lang.String[] r1;
        boolean z0;
        java.lang.ref.WeakReference r2, r3;
        java.lang.String $r4, $r7, $r11, $r12;
        android.util.ArrayMap $r5, $r8, $r10, $r15;
        java.lang.Object $r13, $r14, $r16, $r17;

        r0 := @this: android.app.ActivityThread;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String[];

        z0 = 0;

        if r1 == null goto label4;

        $i2 = lengthof r1;

        i1 = -1 + $i2;

     label1:
        if i1 < 0 goto label4;

        if z0 != 0 goto label2;

        $r10 = r0.<android.app.ActivityThread: android.util.ArrayMap mPackages>;

        $r11 = r1[i1];

        $r13 = virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r11);

        r2 = (java.lang.ref.WeakReference) $r13;

        if r2 == null goto label3;

        $r16 = virtualinvoke r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r16 == null goto label3;

        z0 = 1;

     label2:
        $r5 = r0.<android.app.ActivityThread: android.util.ArrayMap mPackages>;

        $r4 = r1[i1];

        virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r4);

        $r8 = r0.<android.app.ActivityThread: android.util.ArrayMap mResourcePackages>;

        $r7 = r1[i1];

        virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r7);

        i1 = i1 + -1;

        goto label1;

     label3:
        $r15 = r0.<android.app.ActivityThread: android.util.ArrayMap mResourcePackages>;

        $r12 = r1[i1];

        $r14 = virtualinvoke $r15.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r12);

        r3 = (java.lang.ref.WeakReference) $r14;

        if r3 == null goto label2;

        $r17 = virtualinvoke r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r17 == null goto label2;

        z0 = 1;

        goto label2;

     label4:
        staticinvoke <android.app.ApplicationPackageManager: void handlePackageBroadcast(int,java.lang.String[],boolean)>(i0, r1, z0);

        return;
    }

    public void handleInstallProvider(android.content.pm.ProviderInfo)
    {
        android.app.ActivityThread r0;
        android.content.pm.ProviderInfo r1;
        android.content.pm.ProviderInfo[] $r2;
        android.app.Application $r3;
        java.util.ArrayList $r4;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.content.pm.ProviderInfo;

        $r3 = r0.<android.app.ActivityThread: android.app.Application mInitialApplication>;

        $r2 = newarray (android.content.pm.ProviderInfo)[1];

        $r2[0] = r1;

        $r4 = staticinvoke <com.google.android.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>($r2);

        specialinvoke r0.<android.app.ActivityThread: void installContentProviders(android.content.Context,java.util.List)>($r3, $r4);

        return;
    }

    final void handleLowMemory()
    {
        android.app.ActivityThread r0;
        java.util.ArrayList r1;
        int i0, i1, $i2, $i3;
        java.lang.Object $r2;
        android.content.ComponentCallbacks2 $r3;

        r0 := @this: android.app.ActivityThread;

        r1 = virtualinvoke r0.<android.app.ActivityThread: java.util.ArrayList collectComponentCallbacks(boolean,android.content.res.Configuration)>(1, null);

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r2 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r3 = (android.content.ComponentCallbacks2) $r2;

        interfaceinvoke $r3.<android.content.ComponentCallbacks2: void onLowMemory()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        $i2 = staticinvoke <android.os.Process: int myUid()>();

        if $i2 == 1000 goto label3;

        $i3 = staticinvoke <android.database.sqlite.SQLiteDatabase: int releaseMemory()>();

        staticinvoke <android.util.EventLog: int writeEvent(int,int)>(75003, $i3);

     label3:
        staticinvoke <android.graphics.Canvas: void freeCaches()>();

        staticinvoke <android.graphics.Canvas: void freeTextLayoutCaches()>();

        staticinvoke <com.android.internal.os.BinderInternal: void forceGc(java.lang.String)>("mem");

        return;
    }

    final void handleProfilerControl(boolean, android.app.ActivityThread$ProfilerControlData, int)
    {
        android.app.ActivityThread r0;
        boolean z0;
        android.app.ActivityThread$ProfilerControlData r1;
        int i0;
        java.lang.Throwable r2, $r24;
        java.io.IOException r3, r5, r6, $r13, $r15, $r16;
        android.app.ActivityThread$Profiler $r7, $r10, $r11, $r12;
        android.os.ParcelFileDescriptor $r8, $r14, $r23, $r26;
        java.lang.String $r9, $r19, $r25;
        java.lang.RuntimeException $r17;
        java.lang.StringBuilder $r18, $r20, $r21, $r22;

        r0 := @this: android.app.ActivityThread;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.app.ActivityThread$ProfilerControlData;

        i0 := @parameter2: int;

        if z0 == 0 goto label14;

     label01:
        $r10 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        $r9 = r1.<android.app.ActivityThread$ProfilerControlData: java.lang.String path>;

        $r8 = r1.<android.app.ActivityThread$ProfilerControlData: android.os.ParcelFileDescriptor fd>;

        virtualinvoke $r10.<android.app.ActivityThread$Profiler: void setProfiler(java.lang.String,android.os.ParcelFileDescriptor)>($r9, $r8);

        $r12 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        $r12.<android.app.ActivityThread$Profiler: boolean autoStopProfiler> = 0;

        $r11 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        virtualinvoke $r11.<android.app.ActivityThread$Profiler: void startProfiling()>();

     label02:
        $r14 = r1.<android.app.ActivityThread$ProfilerControlData: android.os.ParcelFileDescriptor fd>;

        virtualinvoke $r14.<android.os.ParcelFileDescriptor: void close()>();

     label03:
        return;

     label04:
        $r13 := @caughtexception;

        r6 = $r13;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityThread", "Failure closing profile fd", r6);

        return;

     label05:
        $r17 := @caughtexception;

     label06:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Profiling failed on path ");

        $r19 = r1.<android.app.ActivityThread$ProfilerControlData: java.lang.String path>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -- can the process access this path?");

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityThread", $r25);

     label07:
        $r23 = r1.<android.app.ActivityThread$ProfilerControlData: android.os.ParcelFileDescriptor fd>;

        virtualinvoke $r23.<android.os.ParcelFileDescriptor: void close()>();

     label08:
        return;

     label09:
        $r16 := @caughtexception;

        r5 = $r16;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityThread", "Failure closing profile fd", r5);

        return;

     label10:
        $r24 := @caughtexception;

        r2 = $r24;

     label11:
        $r26 = r1.<android.app.ActivityThread$ProfilerControlData: android.os.ParcelFileDescriptor fd>;

        virtualinvoke $r26.<android.os.ParcelFileDescriptor: void close()>();

     label12:
        throw r2;

     label13:
        $r15 := @caughtexception;

        r3 = $r15;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityThread", "Failure closing profile fd", r3);

        goto label12;

     label14:
        $r7 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        virtualinvoke $r7.<android.app.ActivityThread$Profiler: void stopProfiling()>();

        return;

        catch java.lang.RuntimeException from label01 to label02 with label05;
        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.io.IOException from label02 to label03 with label04;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.io.IOException from label11 to label12 with label13;
    }

    public void handleRequestAssistContextExtras(android.app.ActivityThread$RequestAssistContextExtras)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$RequestAssistContextExtras r1;
        android.os.Bundle r2, $r6;
        android.app.ActivityThread$ActivityClientRecord r3;
        android.app.IActivityManager r4;
        android.os.IBinder $r7, $r10;
        android.util.ArrayMap $r8;
        java.lang.Object $r9;
        boolean $z0;
        android.app.Activity $r11, $r13, $r15;
        android.app.Application $r12;
        android.os.RemoteException $r14;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$RequestAssistContextExtras;

        $r6 = new android.os.Bundle;

        specialinvoke $r6.<android.os.Bundle: void <init>()>();

        r2 = $r6;

        $r8 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r7 = r1.<android.app.ActivityThread$RequestAssistContextExtras: android.os.IBinder activityToken>;

        $r9 = virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r7);

        r3 = (android.app.ActivityThread$ActivityClientRecord) $r9;

        if r3 == null goto label1;

        $r11 = r3.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r12 = virtualinvoke $r11.<android.app.Activity: android.app.Application getApplication()>();

        $r13 = r3.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r12.<android.app.Application: void dispatchOnProvideAssistData(android.app.Activity,android.os.Bundle)>($r13, r2);

        $r15 = r3.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r15.<android.app.Activity: void onProvideAssistData(android.os.Bundle)>(r2);

     label1:
        $z0 = virtualinvoke r2.<android.os.Bundle: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        r2 = null;

     label2:
        r4 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

     label3:
        $r10 = r1.<android.app.ActivityThread$RequestAssistContextExtras: android.os.IBinder requestToken>;

        interfaceinvoke r4.<android.app.IActivityManager: void reportAssistContextExtras(android.os.IBinder,android.os.Bundle)>($r10, r2);

     label4:
        return;

     label5:
        $r14 := @caughtexception;

        return;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    final void handleResumeActivity(android.os.IBinder, boolean, boolean, boolean)
    {
        android.app.ActivityThread r0;
        android.os.IBinder r1, $r38;
        boolean z0, z1, z2, z3, z4, $z5, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        android.app.ActivityThread$ActivityClientRecord r2, $r14;
        android.app.Activity r4, $r12, $r19, $r22, $r23, $r24, $r25, $r30, $r31, $r33;
        short s0;
        android.view.WindowManager$LayoutParams r6, r9;
        android.view.View r7, $r18, $r26;
        android.view.WindowManager r8, $r28;
        android.app.IActivityManager $r11, $r15, $r37;
        android.view.Window $r13, $r20, $r27, $r35, $r36, $r39;
        android.app.ActivityThread$Idler $r16;
        android.os.MessageQueue $r17;
        android.content.res.Configuration $r21, $r29, $r32, $r34;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        android.os.RemoteException $r40, $r41, $r42;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        virtualinvoke r0.<android.app.ActivityThread: void unscheduleGcIdler()>();

        r2 = virtualinvoke r0.<android.app.ActivityThread: android.app.ActivityThread$ActivityClientRecord performResumeActivity(android.os.IBinder,boolean)>(r1, z0);

        if r2 == null goto label16;

        r4 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        if z1 == 0 goto label13;

        s0 = 256;

     label01:
        $z5 = r4.<android.app.Activity: boolean mStartedActivity>;

        if $z5 != 0 goto label14;

        z3 = 1;

     label02:
        if z3 != 0 goto label05;

     label03:
        $r37 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r38 = virtualinvoke r4.<android.app.Activity: android.os.IBinder getActivityToken()>();

        z4 = interfaceinvoke $r37.<android.app.IActivityManager: boolean willActivityBeVisible(android.os.IBinder)>($r38);

     label04:
        z3 = z4;

     label05:
        $r13 = r2.<android.app.ActivityThread$ActivityClientRecord: android.view.Window window>;

        if $r13 != null goto label15;

        $z12 = r4.<android.app.Activity: boolean mFinished>;

        if $z12 != 0 goto label15;

        if z3 == 0 goto label15;

        $r33 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r36 = virtualinvoke $r33.<android.app.Activity: android.view.Window getWindow()>();

        r2.<android.app.ActivityThread$ActivityClientRecord: android.view.Window window> = $r36;

        $r35 = r2.<android.app.ActivityThread$ActivityClientRecord: android.view.Window window>;

        r7 = virtualinvoke $r35.<android.view.Window: android.view.View getDecorView()>();

        virtualinvoke r7.<android.view.View: void setVisibility(int)>(4);

        r8 = virtualinvoke r4.<android.app.Activity: android.view.WindowManager getWindowManager()>();

        $r39 = r2.<android.app.ActivityThread$ActivityClientRecord: android.view.Window window>;

        r9 = virtualinvoke $r39.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        r4.<android.app.Activity: android.view.View mDecor> = r7;

        r9.<android.view.WindowManager$LayoutParams: int type> = 1;

        $i9 = r9.<android.view.WindowManager$LayoutParams: int softInputMode>;

        $i10 = s0 | $i9;

        r9.<android.view.WindowManager$LayoutParams: int softInputMode> = $i10;

        $z13 = r4.<android.app.Activity: boolean mVisibleFromClient>;

        if $z13 == 0 goto label06;

        r4.<android.app.Activity: boolean mWindowAdded> = 1;

        interfaceinvoke r8.<android.view.ViewManager: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r7, r9);

     label06:
        staticinvoke <android.app.ActivityThread: void cleanUpPendingRemoveWindows(android.app.ActivityThread$ActivityClientRecord)>(r2);

        $r12 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z8 = $r12.<android.app.Activity: boolean mFinished>;

        if $z8 != 0 goto label09;

        if z3 == 0 goto label09;

        $r19 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r18 = $r19.<android.app.Activity: android.view.View mDecor>;

        if $r18 == null goto label09;

        $z9 = r2.<android.app.ActivityThread$ActivityClientRecord: boolean hideForNow>;

        if $z9 != 0 goto label09;

        $r21 = r2.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration newConfig>;

        if $r21 == null goto label07;

        $r31 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r32 = r2.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration newConfig>;

        staticinvoke <android.app.ActivityThread: void performConfigurationChanged(android.content.ComponentCallbacks2,android.content.res.Configuration)>($r31, $r32);

        $r30 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r34 = $r30.<android.app.Activity: android.content.res.Configuration mCurrentConfig>;

        $r29 = r2.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration newConfig>;

        $i8 = virtualinvoke $r34.<android.content.res.Configuration: int diff(android.content.res.Configuration)>($r29);

        staticinvoke <android.app.ActivityThread: void freeTextLayoutCachesIfNeeded(int)>($i8);

        r2.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration newConfig> = null;

     label07:
        $r20 = r2.<android.app.ActivityThread$ActivityClientRecord: android.view.Window window>;

        r6 = virtualinvoke $r20.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        $i2 = r6.<android.view.WindowManager$LayoutParams: int softInputMode>;

        $i3 = 256 & $i2;

        if $i3 == s0 goto label08;

        $i6 = r6.<android.view.WindowManager$LayoutParams: int softInputMode>;

        $i7 = -257 & $i6;

        $i5 = s0 | $i7;

        r6.<android.view.WindowManager$LayoutParams: int softInputMode> = $i5;

        $r25 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z11 = $r25.<android.app.Activity: boolean mVisibleFromClient>;

        if $z11 == 0 goto label08;

        $r28 = virtualinvoke r4.<android.app.Activity: android.view.WindowManager getWindowManager()>();

        $r27 = r2.<android.app.ActivityThread$ActivityClientRecord: android.view.Window window>;

        $r26 = virtualinvoke $r27.<android.view.Window: android.view.View getDecorView()>();

        interfaceinvoke $r28.<android.view.ViewManager: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>($r26, r6);

     label08:
        $r22 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r22.<android.app.Activity: boolean mVisibleFromServer> = 1;

        $i1 = r0.<android.app.ActivityThread: int mNumVisibleActivities>;

        $i4 = 1 + $i1;

        r0.<android.app.ActivityThread: int mNumVisibleActivities> = $i4;

        $r24 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z10 = $r24.<android.app.Activity: boolean mVisibleFromClient>;

        if $z10 == 0 goto label09;

        $r23 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r23.<android.app.Activity: void makeVisible()>();

     label09:
        $z7 = r2.<android.app.ActivityThread$ActivityClientRecord: boolean onlyLocalRequest>;

        if $z7 != 0 goto label10;

        $r14 = r0.<android.app.ActivityThread: android.app.ActivityThread$ActivityClientRecord mNewActivities>;

        r2.<android.app.ActivityThread$ActivityClientRecord: android.app.ActivityThread$ActivityClientRecord nextIdle> = $r14;

        r0.<android.app.ActivityThread: android.app.ActivityThread$ActivityClientRecord mNewActivities> = r2;

        $r17 = staticinvoke <android.os.Looper: android.os.MessageQueue myQueue()>();

        $r16 = new android.app.ActivityThread$Idler;

        specialinvoke $r16.<android.app.ActivityThread$Idler: void <init>(android.app.ActivityThread,android.app.ActivityThread$1)>(r0, null);

        virtualinvoke $r17.<android.os.MessageQueue: void addIdleHandler(android.os.MessageQueue$IdleHandler)>($r16);

     label10:
        r2.<android.app.ActivityThread$ActivityClientRecord: boolean onlyLocalRequest> = 0;

        if z2 == 0 goto label12;

     label11:
        $r15 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        interfaceinvoke $r15.<android.app.IActivityManager: void activityResumed(android.os.IBinder)>(r1);

     label12:
        return;

     label13:
        s0 = 0;

        goto label01;

     label14:
        z3 = 0;

        goto label02;

     label15:
        if z3 != 0 goto label06;

        r2.<android.app.ActivityThread$ActivityClientRecord: boolean hideForNow> = 1;

        goto label06;

     label16:
        $r11 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        interfaceinvoke $r11.<android.app.IActivityManager: boolean finishActivity(android.os.IBinder,int,android.content.Intent)>(r1, 0, null);

     label17:
        return;

     label18:
        $r41 := @caughtexception;

        return;

     label19:
        $r42 := @caughtexception;

        return;

     label20:
        $r40 := @caughtexception;

        goto label05;

        catch android.os.RemoteException from label03 to label04 with label20;
        catch android.os.RemoteException from label11 to label12 with label19;
        catch android.os.RemoteException from label16 to label17 with label18;
    }

    public void handleTranslucentConversionComplete(android.os.IBinder, boolean)
    {
        android.app.ActivityThread r0;
        android.os.IBinder r1;
        boolean z0;
        android.app.ActivityThread$ActivityClientRecord r2;
        android.util.ArrayMap $r3;
        java.lang.Object $r4;
        android.app.Activity $r5;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        $r3 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (android.app.ActivityThread$ActivityClientRecord) $r4;

        if r2 == null goto label1;

        $r5 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r5.<android.app.Activity: void onTranslucentConversionComplete(boolean)>(z0);

     label1:
        return;
    }

    final void handleTrimMemory(int)
    {
        android.app.ActivityThread r0;
        int i0, i1, i2;
        android.view.WindowManagerGlobal r1;
        java.util.ArrayList r2;
        java.lang.Object $r3;
        android.content.ComponentCallbacks2 $r4;

        r0 := @this: android.app.ActivityThread;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.view.WindowManagerGlobal: android.view.WindowManagerGlobal getInstance()>();

        virtualinvoke r1.<android.view.WindowManagerGlobal: void startTrimMemory(int)>(i0);

        r2 = virtualinvoke r0.<android.app.ActivityThread: java.util.ArrayList collectComponentCallbacks(boolean,android.content.res.Configuration)>(1, null);

        i1 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r3 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r4 = (android.content.ComponentCallbacks2) $r3;

        interfaceinvoke $r4.<android.content.ComponentCallbacks2: void onTrimMemory(int)>(i0);

        i2 = i2 + 1;

        goto label1;

     label2:
        virtualinvoke r1.<android.view.WindowManagerGlobal: void endTrimMemory()>();

        return;
    }

    final void handleUnstableProviderDied(android.os.IBinder, boolean)
    {
        android.app.ActivityThread r0;
        android.os.IBinder r1;
        boolean z0;
        android.util.ArrayMap r2;
        java.lang.Throwable r3, $r4;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        r2 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderMap>;

        entermonitor r2;

     label1:
        virtualinvoke r0.<android.app.ActivityThread: void handleUnstableProviderDiedLocked(android.os.IBinder,boolean)>(r1, z0);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    final void handleUnstableProviderDiedLocked(android.os.IBinder, boolean)
    {
        android.app.ActivityThread r0;
        android.os.IBinder r1, $r11, $r15;
        boolean z0;
        android.app.ActivityThread$ProviderRefCount r2;
        int i0, $i1;
        android.app.ActivityThread$ProviderClientRecord r4;
        android.util.ArrayMap $r5, $r7, $r9, $r14, $r24;
        java.lang.Object $r6, $r13;
        android.app.IActivityManager $r10;
        android.app.IActivityManager$ContentProviderHolder $r12;
        android.content.IContentProvider $r16, $r18;
        java.lang.StringBuilder $r17, $r19, $r20;
        java.lang.String $r21, $r22;
        android.os.RemoteException $r25;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        $r5 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderRefCountMap>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (android.app.ActivityThread$ProviderRefCount) $r6;

        if r2 == null goto label5;

        $r7 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderRefCountMap>;

        virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

        $r9 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderMap>;

        $i1 = virtualinvoke $r9.<android.util.ArrayMap: int size()>();

        i0 = -1 + $i1;

     label1:
        if i0 < 0 goto label3;

        $r14 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderMap>;

        $r13 = virtualinvoke $r14.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i0);

        r4 = (android.app.ActivityThread$ProviderClientRecord) $r13;

        if r4 == null goto label2;

        $r16 = r4.<android.app.ActivityThread$ProviderClientRecord: android.content.IContentProvider mProvider>;

        $r15 = interfaceinvoke $r16.<android.content.IContentProvider: android.os.IBinder asBinder()>();

        if $r15 != r1 goto label2;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing dead content provider:");

        $r18 = r4.<android.app.ActivityThread$ProviderClientRecord: android.content.IContentProvider mProvider>;

        $r21 = virtualinvoke $r18.<java.lang.Object: java.lang.String toString()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityThread", $r22);

        $r24 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderMap>;

        virtualinvoke $r24.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i0);

     label2:
        i0 = i0 + -1;

        goto label1;

     label3:
        if z0 == 0 goto label5;

     label4:
        $r10 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r12 = r2.<android.app.ActivityThread$ProviderRefCount: android.app.IActivityManager$ContentProviderHolder holder>;

        $r11 = $r12.<android.app.IActivityManager$ContentProviderHolder: android.os.IBinder connection>;

        interfaceinvoke $r10.<android.app.IActivityManager: void unstableProviderDied(android.os.IBinder)>($r11);

     label5:
        return;

     label6:
        $r25 := @caughtexception;

        return;

        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public void installSystemApplicationInfo(android.content.pm.ApplicationInfo)
    {
        android.app.ActivityThread r0;
        android.content.pm.ApplicationInfo r1;
        java.lang.Throwable r2, $r5;
        android.app.ContextImpl $r3;
        android.app.ActivityThread$Profiler $r4;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        entermonitor r0;

     label1:
        $r3 = virtualinvoke r0.<android.app.ActivityThread: android.app.ContextImpl getSystemContext()>();

        virtualinvoke $r3.<android.app.ContextImpl: void installSystemApplicationInfo(android.content.pm.ApplicationInfo)>(r1);

        $r4 = new android.app.ActivityThread$Profiler;

        specialinvoke $r4.<android.app.ActivityThread$Profiler: void <init>()>();

        r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler> = $r4;

        exitmonitor r0;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

     label4:
        exitmonitor r0;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public final void installSystemProviders(java.util.List)
    {
        android.app.ActivityThread r0;
        java.util.List r1;
        android.app.Application $r2;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: java.util.List;

        if r1 == null goto label1;

        $r2 = r0.<android.app.ActivityThread: android.app.Application mInitialApplication>;

        specialinvoke r0.<android.app.ActivityThread: void installContentProviders(android.content.Context,java.util.List)>($r2, r1);

     label1:
        return;
    }

    public boolean isProfiling()
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$Profiler $r1, $r2, $r4;
        java.lang.String $r3;
        android.os.ParcelFileDescriptor $r5;

        r0 := @this: android.app.ActivityThread;

        $r1 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        if $r1 == null goto label1;

        $r2 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        $r3 = $r2.<android.app.ActivityThread$Profiler: java.lang.String profileFile>;

        if $r3 == null goto label1;

        $r4 = r0.<android.app.ActivityThread: android.app.ActivityThread$Profiler mProfiler>;

        $r5 = $r4.<android.app.ActivityThread$Profiler: android.os.ParcelFileDescriptor profileFd>;

        if $r5 != null goto label1;

        return 1;

     label1:
        return 0;
    }

    public final android.app.LoadedApk peekPackageInfo(java.lang.String, boolean)
    {
        android.app.ActivityThread r0;
        java.lang.String r1;
        boolean z0;
        android.app.ResourcesManager r2;
        java.lang.Throwable r3, $r11;
        java.lang.ref.WeakReference r4;
        android.app.LoadedApk r5;
        android.util.ArrayMap $r6, $r9;
        java.lang.Object $r7, $r8, $r10;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        entermonitor r2;

        if z0 == 0 goto label06;

     label01:
        $r9 = r0.<android.app.ActivityThread: android.util.ArrayMap mPackages>;

        $r10 = virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.lang.ref.WeakReference) $r10;

     label02:
        if r4 == null goto label11;

     label03:
        $r8 = virtualinvoke r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r5 = (android.app.LoadedApk) $r8;

     label04:
        exitmonitor r2;

     label05:
        return r5;

     label06:
        $r6 = r0.<android.app.ActivityThread: android.util.ArrayMap mResourcePackages>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.lang.ref.WeakReference) $r7;

     label07:
        goto label02;

     label08:
        $r11 := @caughtexception;

        r3 = $r11;

     label09:
        exitmonitor r2;

     label10:
        throw r3;

     label11:
        r5 = null;

        goto label04;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public final android.app.ActivityThread$ActivityClientRecord performDestroyActivity(android.os.IBinder, boolean)
    {
        android.app.ActivityThread r0;
        android.os.IBinder r1;
        boolean z0;
        android.app.ActivityThread$ActivityClientRecord $r2;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        $r2 = specialinvoke r0.<android.app.ActivityThread: android.app.ActivityThread$ActivityClientRecord performDestroyActivity(android.os.IBinder,boolean,int,boolean)>(r1, z0, 0, 0);

        return $r2;
    }

    public final void performNewIntents(android.os.IBinder, java.util.List)
    {
        android.app.ActivityThread r0;
        android.os.IBinder r1;
        java.util.List r2;
        android.app.ActivityThread$ActivityClientRecord r3;
        boolean z0, $z1;
        android.util.ArrayMap $r4;
        java.lang.Object $r5;
        android.app.Activity $r6, $r7, $r8, $r9;
        android.app.Instrumentation $r10;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: java.util.List;

        $r4 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (android.app.ActivityThread$ActivityClientRecord) $r5;

        if r3 == null goto label3;

        $z1 = r3.<android.app.ActivityThread$ActivityClientRecord: boolean paused>;

        if $z1 != 0 goto label4;

        z0 = 1;

     label1:
        if z0 == 0 goto label2;

        $r8 = r3.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r8.<android.app.Activity: boolean mTemporaryPause> = 1;

        $r10 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r9 = r3.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r10.<android.app.Instrumentation: void callActivityOnPause(android.app.Activity)>($r9);

     label2:
        specialinvoke r0.<android.app.ActivityThread: void deliverNewIntents(android.app.ActivityThread$ActivityClientRecord,java.util.List)>(r3, r2);

        if z0 == 0 goto label3;

        $r6 = r3.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r6.<android.app.Activity: void performResume()>();

        $r7 = r3.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r7.<android.app.Activity: boolean mTemporaryPause> = 0;

     label3:
        return;

     label4:
        z0 = 0;

        goto label1;
    }

    final android.os.Bundle performPauseActivity(android.app.ActivityThread$ActivityClientRecord, boolean, boolean)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$ActivityClientRecord r1;
        boolean z0, z1, z2, $z3, $z4, $z6, $z7;
        android.os.Bundle r2, r8, $r32;
        java.lang.Exception r3, $r46, $r60;
        android.util.ArrayMap r4, $r21;
        java.lang.Throwable r5, $r59;
        java.util.ArrayList r6;
        int i0, i1, $i2;
        android.util.SuperNotCalledException r7, $r25, $r61, $r66;
        java.lang.Object[] r9;
        java.lang.RuntimeException r10, $r40, $r56;
        android.app.Activity $r11, $r12, $r13, $r16, $r19, $r20, $r23, $r36, $r38, $r41, $r47;
        android.app.Instrumentation $r14, $r37, $r48;
        java.lang.Integer $r15;
        java.lang.String $r17, $r29, $r33, $r42, $r50, $r51, $r54, $r62, $r64;
        android.content.ComponentName $r18, $r28, $r43, $r53;
        java.lang.Object $r22, $r24;
        java.lang.StringBuilder $r26, $r30, $r34, $r35, $r39, $r45, $r49, $r55, $r57, $r58, $r63, $r65;
        android.app.OnActivityPausedListener $r27;
        android.content.Intent $r31, $r44, $r52;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$ActivityClientRecord;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $z3 = r1.<android.app.ActivityThread$ActivityClientRecord: boolean paused>;

        if $z3 == 0 goto label03;

        $r41 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z6 = $r41.<android.app.Activity: boolean mFinished>;

        if $z6 == 0 goto label02;

        r2 = null;

     label01:
        return r2;

     label02:
        $r40 = new java.lang.RuntimeException;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Performing pause of activity that is not resumed: ");

        $r44 = r1.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        $r43 = virtualinvoke $r44.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r42 = virtualinvoke $r43.<android.content.ComponentName: java.lang.String toShortString()>();

        $r49 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r40.<java.lang.RuntimeException: void <init>(java.lang.String)>($r50);

        r10 = $r40;

        $r51 = virtualinvoke r10.<java.lang.RuntimeException: java.lang.String getMessage()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityThread", $r51, r10);

     label03:
        r2 = null;

        if z0 == 0 goto label04;

        $r36 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r36.<android.app.Activity: boolean mFinished> = 1;

     label04:
        $r11 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        z2 = $r11.<android.app.Activity: boolean mFinished>;

     label05:
        r2 = null;

        if z2 != 0 goto label09;

        r2 = null;

        if z1 == 0 goto label09;

     label06:
        $r32 = new android.os.Bundle;

        specialinvoke $r32.<android.os.Bundle: void <init>()>();

        r8 = $r32;

     label07:
        virtualinvoke r8.<android.os.Bundle: boolean setAllowFds(boolean)>(0);

        $r37 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r38 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r37.<android.app.Instrumentation: void callActivityOnSaveInstanceState(android.app.Activity,android.os.Bundle)>($r38, r8);

        r1.<android.app.ActivityThread$ActivityClientRecord: android.os.Bundle state> = r8;

     label08:
        r2 = r8;

     label09:
        $r13 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r13.<android.app.Activity: boolean mCalled> = 0;

        $r14 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r12 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r14.<android.app.Instrumentation: void callActivityOnPause(android.app.Activity)>($r12);

        r9 = newarray (java.lang.Object)[2];

        $i2 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        r9[0] = $r15;

        $r16 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r18 = virtualinvoke $r16.<android.app.Activity: android.content.ComponentName getComponentName()>();

        $r17 = virtualinvoke $r18.<android.content.ComponentName: java.lang.String getClassName()>();

        r9[1] = $r17;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30021, r9);

        $r19 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z4 = $r19.<android.app.Activity: boolean mCalled>;

        if $z4 != 0 goto label14;

        $r25 = new android.util.SuperNotCalledException;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity ");

        $r31 = r1.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        $r28 = virtualinvoke $r31.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r29 = virtualinvoke $r28.<android.content.ComponentName: java.lang.String toShortString()>();

        $r35 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not call through to super.onPause()");

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<android.util.SuperNotCalledException: void <init>(java.lang.String)>($r33);

        throw $r25;

     label10:
        $r66 := @caughtexception;

        r7 = $r66;

     label11:
        throw r7;

     label12:
        $r60 := @caughtexception;

        r3 = $r60;

     label13:
        $r48 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r47 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z7 = virtualinvoke $r48.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>($r47, r3);

        if $z7 != 0 goto label14;

        $r56 = new java.lang.RuntimeException;

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to pause activity ");

        $r52 = r1.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        $r53 = virtualinvoke $r52.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r54 = virtualinvoke $r53.<android.content.ComponentName: java.lang.String toShortString()>();

        $r55 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        $r63 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r62 = virtualinvoke r3.<java.lang.Exception: java.lang.String toString()>();

        $r65 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        $r64 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r56.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r64, r3);

        throw $r56;

     label14:
        r1.<android.app.ActivityThread$ActivityClientRecord: boolean paused> = 1;

        r4 = r0.<android.app.ActivityThread: android.util.ArrayMap mOnPauseListeners>;

        entermonitor r4;

     label15:
        $r21 = r0.<android.app.ActivityThread: android.util.ArrayMap mOnPauseListeners>;

        $r20 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r24 = virtualinvoke $r21.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r20);

        r6 = (java.util.ArrayList) $r24;

        exitmonitor r4;

     label16:
        i0 = 0;

        if r6 == null goto label17;

        i0 = virtualinvoke r6.<java.util.ArrayList: int size()>();

     label17:
        i1 = 0;

     label18:
        if i1 >= i0 goto label01;

        $r22 = virtualinvoke r6.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r27 = (android.app.OnActivityPausedListener) $r22;

        $r23 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        interfaceinvoke $r27.<android.app.OnActivityPausedListener: void onPaused(android.app.Activity)>($r23);

        i1 = i1 + 1;

        goto label18;

     label19:
        $r59 := @caughtexception;

        r5 = $r59;

     label20:
        exitmonitor r4;

     label21:
        throw r5;

     label22:
        $r46 := @caughtexception;

        r3 = $r46;

        r2 = r8;

        goto label13;

     label23:
        $r61 := @caughtexception;

        r7 = $r61;

        goto label11;

        catch android.util.SuperNotCalledException from label04 to label05 with label10;
        catch java.lang.Exception from label04 to label05 with label12;
        catch android.util.SuperNotCalledException from label06 to label07 with label10;
        catch java.lang.Exception from label06 to label07 with label12;
        catch android.util.SuperNotCalledException from label07 to label08 with label23;
        catch java.lang.Exception from label07 to label08 with label22;
        catch android.util.SuperNotCalledException from label09 to label10 with label10;
        catch java.lang.Exception from label09 to label10 with label12;
        catch java.lang.Throwable from label15 to label16 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
    }

    final android.os.Bundle performPauseActivity(android.os.IBinder, boolean, boolean)
    {
        android.app.ActivityThread r0;
        android.os.IBinder r1;
        boolean z0, z1;
        android.app.ActivityThread$ActivityClientRecord r2;
        android.util.ArrayMap $r3;
        java.lang.Object $r4;
        android.os.Bundle $r5;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r3 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (android.app.ActivityThread$ActivityClientRecord) $r4;

        if r2 == null goto label1;

        $r5 = virtualinvoke r0.<android.app.ActivityThread: android.os.Bundle performPauseActivity(android.app.ActivityThread$ActivityClientRecord,boolean,boolean)>(r2, z0, z1);

        return $r5;

     label1:
        return null;
    }

    final void performRestartActivity(android.os.IBinder)
    {
        android.app.ActivityThread r0;
        android.os.IBinder r1;
        android.app.ActivityThread$ActivityClientRecord r2;
        android.util.ArrayMap $r3;
        java.lang.Object $r4;
        boolean $z0;
        android.app.Activity $r5;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.os.IBinder;

        $r3 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (android.app.ActivityThread$ActivityClientRecord) $r4;

        $z0 = r2.<android.app.ActivityThread$ActivityClientRecord: boolean stopped>;

        if $z0 == 0 goto label1;

        $r5 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r5.<android.app.Activity: void performRestart()>();

        r2.<android.app.ActivityThread$ActivityClientRecord: boolean stopped> = 0;

     label1:
        return;
    }

    public final android.app.ActivityThread$ActivityClientRecord performResumeActivity(android.os.IBinder, boolean)
    {
        android.app.ActivityThread r0;
        android.os.IBinder r1;
        boolean z0, $z1, $z2;
        android.app.ActivityThread$ActivityClientRecord r2;
        java.lang.Exception r3, $r21;
        java.lang.Object[] r4;
        android.util.ArrayMap $r5;
        java.lang.Object $r6;
        android.app.Activity $r7, $r8, $r12, $r14, $r18, $r20;
        android.app.FragmentManagerImpl $r9;
        java.util.List $r10, $r11, $r17, $r19;
        java.lang.Integer $r13;
        int $i0;
        java.lang.String $r15, $r26, $r29, $r33;
        android.content.ComponentName $r16, $r25;
        android.app.Instrumentation $r22;
        java.lang.StringBuilder $r23, $r27, $r30, $r31, $r32;
        java.lang.RuntimeException $r24;
        android.content.Intent $r28;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        $r5 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (android.app.ActivityThread$ActivityClientRecord) $r6;

        if r2 == null goto label4;

        $r7 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z1 = $r7.<android.app.Activity: boolean mFinished>;

        if $z1 != 0 goto label4;

        if z0 == 0 goto label1;

        r2.<android.app.ActivityThread$ActivityClientRecord: boolean hideForNow> = 0;

        $r18 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r18.<android.app.Activity: boolean mStartedActivity> = 0;

     label1:
        $r8 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r9 = $r8.<android.app.Activity: android.app.FragmentManagerImpl mFragments>;

        virtualinvoke $r9.<android.app.FragmentManagerImpl: void noteStateNotSaved()>();

        $r10 = r2.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingIntents>;

        if $r10 == null goto label2;

        $r19 = r2.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingIntents>;

        specialinvoke r0.<android.app.ActivityThread: void deliverNewIntents(android.app.ActivityThread$ActivityClientRecord,java.util.List)>(r2, $r19);

        r2.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingIntents> = null;

     label2:
        $r11 = r2.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingResults>;

        if $r11 == null goto label3;

        $r17 = r2.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingResults>;

        specialinvoke r0.<android.app.ActivityThread: void deliverResults(android.app.ActivityThread$ActivityClientRecord,java.util.List)>(r2, $r17);

        r2.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingResults> = null;

     label3:
        $r12 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r12.<android.app.Activity: void performResume()>();

        r4 = newarray (java.lang.Object)[2];

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        r4[0] = $r13;

        $r14 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $r16 = virtualinvoke $r14.<android.app.Activity: android.content.ComponentName getComponentName()>();

        $r15 = virtualinvoke $r16.<android.content.ComponentName: java.lang.String getClassName()>();

        r4[1] = $r15;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30022, r4);

        r2.<android.app.ActivityThread$ActivityClientRecord: boolean paused> = 0;

        r2.<android.app.ActivityThread$ActivityClientRecord: boolean stopped> = 0;

        r2.<android.app.ActivityThread$ActivityClientRecord: android.os.Bundle state> = null;

     label4:
        return r2;

     label5:
        $r21 := @caughtexception;

        r3 = $r21;

        $r22 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r20 = r2.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        $z2 = virtualinvoke $r22.<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>($r20, r3);

        if $z2 != 0 goto label4;

        $r24 = new java.lang.RuntimeException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to resume activity ");

        $r28 = r2.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent>;

        $r25 = virtualinvoke $r28.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r26 = virtualinvoke $r25.<android.content.ComponentName: java.lang.String toShortString()>();

        $r31 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r29 = virtualinvoke r3.<java.lang.Exception: java.lang.String toString()>();

        $r30 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r33, r3);

        throw $r24;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label2 to label3 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    final void performStopActivity(android.os.IBinder, boolean)
    {
        android.app.ActivityThread r0;
        android.os.IBinder r1;
        boolean z0;
        android.util.ArrayMap $r2;
        java.lang.Object $r3;
        android.app.ActivityThread$ActivityClientRecord $r4;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        $r2 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (android.app.ActivityThread$ActivityClientRecord) $r3;

        specialinvoke r0.<android.app.ActivityThread: void performStopActivityInner(android.app.ActivityThread$ActivityClientRecord,android.app.ActivityThread$StopInfo,boolean,boolean)>($r4, null, 0, z0);

        return;
    }

    final void performUserLeavingActivity(android.app.ActivityThread$ActivityClientRecord)
    {
        android.app.ActivityThread r0;
        android.app.ActivityThread$ActivityClientRecord r1;
        android.app.Activity $r2;
        android.app.Instrumentation $r3;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ActivityThread$ActivityClientRecord;

        $r3 = r0.<android.app.ActivityThread: android.app.Instrumentation mInstrumentation>;

        $r2 = r1.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity activity>;

        virtualinvoke $r3.<android.app.Instrumentation: void callActivityOnUserLeaving(android.app.Activity)>($r2);

        return;
    }

    public void registerOnActivityPausedListener(android.app.Activity, android.app.OnActivityPausedListener)
    {
        android.app.ActivityThread r0;
        android.app.Activity r1;
        android.app.OnActivityPausedListener r2;
        android.util.ArrayMap r3, $r6, $r9;
        java.lang.Throwable r4, $r11;
        java.util.ArrayList r5, $r8;
        java.lang.Object $r7;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.app.OnActivityPausedListener;

        r3 = r0.<android.app.ActivityThread: android.util.ArrayMap mOnPauseListeners>;

        entermonitor r3;

     label1:
        $r6 = r0.<android.app.ActivityThread: android.util.ArrayMap mOnPauseListeners>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (java.util.ArrayList) $r7;

     label2:
        if r5 != null goto label4;

     label3:
        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r5 = $r8;

        $r9 = r0.<android.app.ActivityThread: android.util.ArrayMap mOnPauseListeners>;

        virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r5);

     label4:
        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        exitmonitor r3;

     label5:
        return;

     label6:
        $r11 := @caughtexception;

        r4 = $r11;

     label7:
        exitmonitor r3;

     label8:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public final boolean releaseProvider(android.content.IContentProvider, boolean)
    {
        android.app.ActivityThread r0;
        android.content.IContentProvider r1;
        boolean z0, z1, $z2;
        android.os.IBinder r2, r9, $r24;
        android.util.ArrayMap r3, $r11;
        java.lang.Throwable r4, $r28;
        android.app.ActivityThread$ProviderRefCount r5;
        int i0, i1, i2, i3, $i5, $i6, $i7, $i9, $i10, $i11;
        android.os.Message r7;
        android.app.IActivityManager r10, $r21;
        byte b4;
        java.lang.Object $r12;
        java.lang.StringBuilder $r13, $r16, $r19;
        android.content.pm.ProviderInfo $r14;
        java.lang.String $r15, $r20;
        android.app.IActivityManager$ContentProviderHolder $r17, $r23, $r25;
        android.app.ActivityThread$H $r18, $r22;
        android.os.RemoteException $r26, $r27;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.content.IContentProvider;

        z0 := @parameter1: boolean;

        if r1 != null goto label01;

        return 0;

     label01:
        r2 = interfaceinvoke r1.<android.content.IContentProvider: android.os.IBinder asBinder()>();

        r3 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderMap>;

        entermonitor r3;

     label02:
        $r11 = r0.<android.app.ActivityThread: android.util.ArrayMap mProviderRefCountMap>;

        $r12 = virtualinvoke $r11.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        r5 = (android.app.ActivityThread$ProviderRefCount) $r12;

     label03:
        if r5 != null goto label09;

     label04:
        exitmonitor r3;

     label05:
        return 0;

     label06:
        $r28 := @caughtexception;

        r4 = $r28;

     label07:
        exitmonitor r3;

     label08:
        throw r4;

     label09:
        if z0 == 0 goto label23;

     label10:
        $i11 = r5.<android.app.ActivityThread$ProviderRefCount: int stableCount>;

        if $i11 != 0 goto label12;

        exitmonitor r3;

     label11:
        return 0;

     label12:
        $i10 = r5.<android.app.ActivityThread$ProviderRefCount: int stableCount>;

        $i9 = -1 + $i10;

        r5.<android.app.ActivityThread$ProviderRefCount: int stableCount> = $i9;

        i2 = r5.<android.app.ActivityThread$ProviderRefCount: int stableCount>;

     label13:
        z1 = 0;

        if i2 != 0 goto label19;

     label14:
        i3 = r5.<android.app.ActivityThread$ProviderRefCount: int unstableCount>;

     label15:
        if i3 != 0 goto label37;

        z1 = 1;

     label16:
        r10 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r25 = r5.<android.app.ActivityThread$ProviderRefCount: android.app.IActivityManager$ContentProviderHolder holder>;

        r9 = $r25.<android.app.IActivityManager$ContentProviderHolder: android.os.IBinder connection>;

     label17:
        b4 = 0;

        if z1 == 0 goto label18;

        b4 = 1;

     label18:
        interfaceinvoke r10.<android.app.IActivityManager: boolean refContentProvider(android.os.IBinder,int,int)>(r9, -1, b4);

     label19:
        if z1 == 0 goto label21;

     label20:
        $z2 = r5.<android.app.ActivityThread$ProviderRefCount: boolean removePending>;

        if $z2 != 0 goto label34;

        r5.<android.app.ActivityThread$ProviderRefCount: boolean removePending> = 1;

        $r18 = r0.<android.app.ActivityThread: android.app.ActivityThread$H mH>;

        r7 = virtualinvoke $r18.<android.app.ActivityThread$H: android.os.Message obtainMessage(int,java.lang.Object)>(131, r5);

        $r22 = r0.<android.app.ActivityThread: android.app.ActivityThread$H mH>;

        virtualinvoke $r22.<android.app.ActivityThread$H: boolean sendMessage(android.os.Message)>(r7);

     label21:
        exitmonitor r3;

     label22:
        return 1;

     label23:
        $i5 = r5.<android.app.ActivityThread$ProviderRefCount: int unstableCount>;

        if $i5 != 0 goto label25;

        exitmonitor r3;

     label24:
        return 0;

     label25:
        $i7 = r5.<android.app.ActivityThread$ProviderRefCount: int unstableCount>;

        $i6 = -1 + $i7;

        r5.<android.app.ActivityThread$ProviderRefCount: int unstableCount> = $i6;

        i0 = r5.<android.app.ActivityThread$ProviderRefCount: int unstableCount>;

     label26:
        z1 = 0;

        if i0 != 0 goto label19;

     label27:
        i1 = r5.<android.app.ActivityThread$ProviderRefCount: int stableCount>;

     label28:
        if i1 != 0 goto label33;

        z1 = 1;

     label29:
        if z1 != 0 goto label19;

     label30:
        $r21 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r23 = r5.<android.app.ActivityThread$ProviderRefCount: android.app.IActivityManager$ContentProviderHolder holder>;

        $r24 = $r23.<android.app.IActivityManager$ContentProviderHolder: android.os.IBinder connection>;

        interfaceinvoke $r21.<android.app.IActivityManager: boolean refContentProvider(android.os.IBinder,int,int)>($r24, 0, -1);

     label31:
        goto label19;

     label32:
        $r27 := @caughtexception;

        goto label19;

     label33:
        z1 = 0;

        goto label29;

     label34:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate remove pending of provider ");

        $r17 = r5.<android.app.ActivityThread$ProviderRefCount: android.app.IActivityManager$ContentProviderHolder holder>;

        $r14 = $r17.<android.app.IActivityManager$ContentProviderHolder: android.content.pm.ProviderInfo info>;

        $r15 = $r14.<android.content.pm.ProviderInfo: java.lang.String name>;

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityThread", $r20);

     label35:
        goto label21;

     label36:
        $r26 := @caughtexception;

        goto label19;

     label37:
        z1 = 0;

        goto label16;

        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label10 to label11 with label06;
        catch java.lang.Throwable from label12 to label13 with label06;
        catch java.lang.Throwable from label14 to label15 with label06;
        catch android.os.RemoteException from label16 to label17 with label36;
        catch java.lang.Throwable from label16 to label17 with label06;
        catch android.os.RemoteException from label18 to label19 with label36;
        catch java.lang.Throwable from label18 to label19 with label06;
        catch java.lang.Throwable from label20 to label21 with label06;
        catch java.lang.Throwable from label21 to label22 with label06;
        catch java.lang.Throwable from label23 to label24 with label06;
        catch java.lang.Throwable from label25 to label26 with label06;
        catch java.lang.Throwable from label27 to label28 with label06;
        catch android.os.RemoteException from label30 to label31 with label32;
        catch java.lang.Throwable from label30 to label31 with label06;
        catch java.lang.Throwable from label34 to label35 with label06;
    }

    public final void requestRelaunchActivity(android.os.IBinder, java.util.List, java.util.List, int, boolean, android.content.res.Configuration, boolean)
    {
        android.app.ActivityThread r0;
        android.os.IBinder r1, $r18;
        java.util.List r2, r3, $r20, $r21, $r22, $r24;
        int i0, i1, i2, $i3, $i4;
        boolean z0, z1, $z3;
        android.content.res.Configuration r4;
        android.app.ResourcesManager r5;
        java.lang.Throwable r6, $r23, $r25;
        android.app.ActivityThread$ActivityClientRecord r7, r8, r9, r10, r11, $r13;
        java.util.ArrayList $r12, $r14, $r17;
        java.lang.Object $r15, $r19;
        android.util.ArrayMap $r16;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        r4 := @parameter5: android.content.res.Configuration;

        z1 := @parameter6: boolean;

        r5 = r0.<android.app.ActivityThread: android.app.ResourcesManager mResourcesManager>;

        entermonitor r5;

        i1 = 0;

     label01:
        $r12 = r0.<android.app.ActivityThread: java.util.ArrayList mRelaunchingActivities>;

        i2 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

     label02:
        r7 = null;

        if i1 >= i2 goto label33;

     label03:
        $r17 = r0.<android.app.ActivityThread: java.util.ArrayList mRelaunchingActivities>;

        $r19 = virtualinvoke $r17.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r8 = (android.app.ActivityThread$ActivityClientRecord) $r19;

        $r18 = r8.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder token>;

        if $r18 != r1 goto label30;

     label04:
        r7 = r8;

        if r2 == null goto label06;

     label05:
        $r20 = r8.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingResults>;

        if $r20 == null goto label24;

        $r24 = r8.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingResults>;

        interfaceinvoke $r24.<java.util.List: boolean addAll(java.util.Collection)>(r2);

     label06:
        if r3 == null goto label33;

     label07:
        $r21 = r8.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingIntents>;

        if $r21 == null goto label28;

        $r22 = r8.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingIntents>;

        interfaceinvoke $r22.<java.util.List: boolean addAll(java.util.Collection)>(r3);

     label08:
        r9 = r7;

     label09:
        if r9 != null goto label32;

     label10:
        $r13 = new android.app.ActivityThread$ActivityClientRecord;

        specialinvoke $r13.<android.app.ActivityThread$ActivityClientRecord: void <init>()>();

        r10 = $r13;

     label11:
        r10.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder token> = r1;

        r10.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingResults> = r2;

        r10.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingIntents> = r3;

     label12:
        if z1 != 0 goto label17;

     label13:
        $r16 = r0.<android.app.ActivityThread: android.util.ArrayMap mActivities>;

        $r15 = virtualinvoke $r16.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r11 = (android.app.ActivityThread$ActivityClientRecord) $r15;

     label14:
        if r11 == null goto label16;

     label15:
        $z3 = r11.<android.app.ActivityThread$ActivityClientRecord: boolean paused>;

        r10.<android.app.ActivityThread$ActivityClientRecord: boolean startsNotResumed> = $z3;

     label16:
        r10.<android.app.ActivityThread$ActivityClientRecord: boolean onlyLocalRequest> = 1;

     label17:
        $r14 = r0.<android.app.ActivityThread: java.util.ArrayList mRelaunchingActivities>;

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>(r10);

        specialinvoke r0.<android.app.ActivityThread: void sendMessage(int,java.lang.Object)>(126, r10);

     label18:
        if z1 == 0 goto label20;

     label19:
        r10.<android.app.ActivityThread$ActivityClientRecord: boolean startsNotResumed> = z0;

        r10.<android.app.ActivityThread$ActivityClientRecord: boolean onlyLocalRequest> = 0;

     label20:
        if r4 == null goto label22;

     label21:
        r10.<android.app.ActivityThread$ActivityClientRecord: android.content.res.Configuration createdConfig> = r4;

     label22:
        $i4 = r10.<android.app.ActivityThread$ActivityClientRecord: int pendingConfigChanges>;

        $i3 = i0 | $i4;

        r10.<android.app.ActivityThread$ActivityClientRecord: int pendingConfigChanges> = $i3;

        exitmonitor r5;

     label23:
        return;

     label24:
        r8.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingResults> = r2;

     label25:
        goto label06;

     label26:
        exitmonitor r5;

     label27:
        throw r6;

     label28:
        r8.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingIntents> = r3;

     label29:
        r9 = r7;

        goto label09;

     label30:
        i1 = i1 + 1;

        goto label01;

     label31:
        $r25 := @caughtexception;

        r6 = $r25;

        goto label26;

     label32:
        r10 = r9;

        goto label18;

     label33:
        r9 = r7;

        goto label09;

     label34:
        $r23 := @caughtexception;

        r6 = $r23;

        goto label26;

        catch java.lang.Throwable from label01 to label02 with label34;
        catch java.lang.Throwable from label03 to label04 with label34;
        catch java.lang.Throwable from label05 to label06 with label34;
        catch java.lang.Throwable from label07 to label08 with label34;
        catch java.lang.Throwable from label10 to label11 with label31;
        catch java.lang.Throwable from label11 to label12 with label34;
        catch java.lang.Throwable from label13 to label14 with label34;
        catch java.lang.Throwable from label15 to label16 with label34;
        catch java.lang.Throwable from label16 to label17 with label34;
        catch java.lang.Throwable from label17 to label18 with label34;
        catch java.lang.Throwable from label19 to label20 with label34;
        catch java.lang.Throwable from label21 to label22 with label34;
        catch java.lang.Throwable from label22 to label23 with label34;
        catch java.lang.Throwable from label24 to label25 with label34;
        catch java.lang.Throwable from label26 to label27 with label34;
        catch java.lang.Throwable from label28 to label29 with label34;
    }

    public final android.content.pm.ActivityInfo resolveActivityInfo(android.content.Intent)
    {
        android.app.ActivityThread r0;
        android.content.Intent r1;
        android.content.pm.ActivityInfo r2;
        android.app.Application $r3;
        android.content.pm.PackageManager $r4;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.content.Intent;

        $r3 = r0.<android.app.ActivityThread: android.app.Application mInitialApplication>;

        $r4 = virtualinvoke $r3.<android.app.Application: android.content.pm.PackageManager getPackageManager()>();

        r2 = virtualinvoke r1.<android.content.Intent: android.content.pm.ActivityInfo resolveActivityInfo(android.content.pm.PackageManager,int)>($r4, 1024);

        if r2 != null goto label1;

        staticinvoke <android.app.Instrumentation: void checkStartActivityResult(int,java.lang.Object)>(-2, r1);

     label1:
        return r2;
    }

    final void scheduleContextCleanup(android.app.ContextImpl, java.lang.String, java.lang.String)
    {
        android.app.ActivityThread r0;
        android.app.ContextImpl r1;
        java.lang.String r2, r3;
        android.app.ActivityThread$ContextCleanupInfo r4, $r5;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.ContextImpl;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r5 = new android.app.ActivityThread$ContextCleanupInfo;

        specialinvoke $r5.<android.app.ActivityThread$ContextCleanupInfo: void <init>()>();

        r4 = $r5;

        r4.<android.app.ActivityThread$ContextCleanupInfo: android.app.ContextImpl context> = r1;

        r4.<android.app.ActivityThread$ContextCleanupInfo: java.lang.String who> = r2;

        r4.<android.app.ActivityThread$ContextCleanupInfo: java.lang.String what> = r3;

        specialinvoke r0.<android.app.ActivityThread: void sendMessage(int,java.lang.Object)>(119, r4);

        return;
    }

    void scheduleGcIdler()
    {
        android.app.ActivityThread r0;
        boolean $z0;
        android.app.ActivityThread$H $r1;
        android.os.MessageQueue $r2;
        android.app.ActivityThread$GcIdler $r3;

        r0 := @this: android.app.ActivityThread;

        $z0 = r0.<android.app.ActivityThread: boolean mGcIdlerScheduled>;

        if $z0 != 0 goto label1;

        r0.<android.app.ActivityThread: boolean mGcIdlerScheduled> = 1;

        $r2 = staticinvoke <android.os.Looper: android.os.MessageQueue myQueue()>();

        $r3 = r0.<android.app.ActivityThread: android.app.ActivityThread$GcIdler mGcIdler>;

        virtualinvoke $r2.<android.os.MessageQueue: void addIdleHandler(android.os.MessageQueue$IdleHandler)>($r3);

     label1:
        $r1 = r0.<android.app.ActivityThread: android.app.ActivityThread$H mH>;

        virtualinvoke $r1.<android.app.ActivityThread$H: void removeMessages(int)>(120);

        return;
    }

    public final void sendActivityResult(android.os.IBinder, java.lang.String, int, int, android.content.Intent)
    {
        android.app.ActivityThread r0;
        android.os.IBinder r1;
        java.lang.String r2;
        int i0, i1;
        android.content.Intent r3;
        java.util.ArrayList r4, $r5;
        android.app.ResultInfo $r6;
        android.app.ActivityThread$ApplicationThread $r7;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: android.content.Intent;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r4 = $r5;

        $r6 = new android.app.ResultInfo;

        specialinvoke $r6.<android.app.ResultInfo: void <init>(java.lang.String,int,int,android.content.Intent)>(r2, i0, i1, r3);

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $r7 = r0.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread mAppThread>;

        virtualinvoke $r7.<android.app.ActivityThread$ApplicationThread: void scheduleSendResult(android.os.IBinder,java.util.List)>(r1, r4);

        return;
    }

    public final android.app.Activity startActivityNow(android.app.Activity, java.lang.String, android.content.Intent, android.content.pm.ActivityInfo, android.os.IBinder, android.os.Bundle, android.app.Activity$NonConfigurationInstances)
    {
        android.app.ActivityThread r0;
        android.app.Activity r1, $r10;
        java.lang.String r2;
        android.content.Intent r3;
        android.content.pm.ActivityInfo r4;
        android.os.IBinder r5;
        android.os.Bundle r6;
        android.app.Activity$NonConfigurationInstances r7;
        android.app.ActivityThread$ActivityClientRecord r8, $r9;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.Intent;

        r4 := @parameter3: android.content.pm.ActivityInfo;

        r5 := @parameter4: android.os.IBinder;

        r6 := @parameter5: android.os.Bundle;

        r7 := @parameter6: android.app.Activity$NonConfigurationInstances;

        $r9 = new android.app.ActivityThread$ActivityClientRecord;

        specialinvoke $r9.<android.app.ActivityThread$ActivityClientRecord: void <init>()>();

        r8 = $r9;

        r8.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder token> = r5;

        r8.<android.app.ActivityThread$ActivityClientRecord: int ident> = 0;

        r8.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent> = r3;

        r8.<android.app.ActivityThread$ActivityClientRecord: android.os.Bundle state> = r6;

        r8.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity parent> = r1;

        r8.<android.app.ActivityThread$ActivityClientRecord: java.lang.String embeddedID> = r2;

        r8.<android.app.ActivityThread$ActivityClientRecord: android.content.pm.ActivityInfo activityInfo> = r4;

        r8.<android.app.ActivityThread$ActivityClientRecord: android.app.Activity$NonConfigurationInstances lastNonConfigurationInstances> = r7;

        $r10 = specialinvoke r0.<android.app.ActivityThread: android.app.Activity performLaunchActivity(android.app.ActivityThread$ActivityClientRecord,android.content.Intent)>(r8, null);

        return $r10;
    }

    public void unregisterOnActivityPausedListener(android.app.Activity, android.app.OnActivityPausedListener)
    {
        android.app.ActivityThread r0;
        android.app.Activity r1;
        android.app.OnActivityPausedListener r2;
        android.util.ArrayMap r3, $r6;
        java.lang.Throwable r4, $r8;
        java.util.ArrayList r5;
        java.lang.Object $r7;

        r0 := @this: android.app.ActivityThread;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.app.OnActivityPausedListener;

        r3 = r0.<android.app.ActivityThread: android.util.ArrayMap mOnPauseListeners>;

        entermonitor r3;

     label1:
        $r6 = r0.<android.app.ActivityThread: android.util.ArrayMap mOnPauseListeners>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (java.util.ArrayList) $r7;

     label2:
        if r5 == null goto label4;

     label3:
        virtualinvoke r5.<java.util.ArrayList: boolean remove(java.lang.Object)>(r2);

     label4:
        exitmonitor r3;

     label5:
        return;

     label6:
        $r8 := @caughtexception;

        r4 = $r8;

     label7:
        exitmonitor r3;

     label8:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    void unscheduleGcIdler()
    {
        android.app.ActivityThread r0;
        boolean $z0;
        android.app.ActivityThread$H $r1;
        android.os.MessageQueue $r2;
        android.app.ActivityThread$GcIdler $r3;

        r0 := @this: android.app.ActivityThread;

        $z0 = r0.<android.app.ActivityThread: boolean mGcIdlerScheduled>;

        if $z0 == 0 goto label1;

        r0.<android.app.ActivityThread: boolean mGcIdlerScheduled> = 0;

        $r2 = staticinvoke <android.os.Looper: android.os.MessageQueue myQueue()>();

        $r3 = r0.<android.app.ActivityThread: android.app.ActivityThread$GcIdler mGcIdler>;

        virtualinvoke $r2.<android.os.MessageQueue: void removeIdleHandler(android.os.MessageQueue$IdleHandler)>($r3);

     label1:
        $r1 = r0.<android.app.ActivityThread: android.app.ActivityThread$H mH>;

        virtualinvoke $r1.<android.app.ActivityThread$H: void removeMessages(int)>(120);

        return;
    }
}
