class com.android.server.ServerThread$2 extends java.lang.Object implements java.lang.Runnable
{
    final com.android.server.ServerThread this$0;
    final com.android.server.AppWidgetService val$appWidgetF;
    final com.android.server.AssetAtlasService val$atlasF;
    final com.android.server.BatteryService val$batteryF;
    final com.android.server.CommonTimeManagementService val$commonTimeMgmtServiceF;
    final com.android.server.ConnectivityService val$connectivityF;
    final android.content.Context val$contextF;
    final com.android.server.CountryDetectorService val$countryDetectorF;
    final com.android.server.DockObserver val$dockF;
    final com.android.server.dreams.DreamManagerService val$dreamyF;
    final boolean val$headless;
    final com.android.server.InputMethodManagerService val$immF;
    final com.android.server.input.InputManagerService val$inputManagerF;
    final com.android.server.LocationManagerService val$locationF;
    final com.android.server.media.MediaRouterService val$mediaRouterF;
    final com.android.server.MountService val$mountServiceF;
    final com.android.server.NetworkManagementService val$networkManagementF;
    final com.android.server.net.NetworkPolicyManagerService val$networkPolicyF;
    final com.android.server.net.NetworkStatsService val$networkStatsF;
    final com.android.server.NetworkTimeUpdateService val$networkTimeUpdaterF;
    final com.android.server.print.PrintManagerService val$printManagerF;
    final com.android.server.RecognitionManagerService val$recognitionF;
    final boolean val$safeMode;
    final com.android.server.StatusBarManagerService val$statusBarF;
    final com.android.server.TelephonyRegistry val$telephonyRegistryF;
    final com.android.server.TextServicesManagerService val$textServiceManagerServiceF;
    final com.android.server.TwilightService val$twilightF;
    final com.android.server.UiModeManagerService val$uiModeF;
    final com.android.server.usb.UsbService val$usbF;
    final com.android.server.WallpaperManagerService val$wallpaperF;

    void <init>(com.android.server.ServerThread, boolean, android.content.Context, com.android.server.MountService, com.android.server.BatteryService, com.android.server.NetworkManagementService, com.android.server.net.NetworkStatsService, com.android.server.net.NetworkPolicyManagerService, com.android.server.ConnectivityService, com.android.server.DockObserver, com.android.server.usb.UsbService, com.android.server.TwilightService, com.android.server.UiModeManagerService, com.android.server.RecognitionManagerService, com.android.server.AppWidgetService, boolean, com.android.server.WallpaperManagerService, com.android.server.InputMethodManagerService, com.android.server.StatusBarManagerService, com.android.server.LocationManagerService, com.android.server.CountryDetectorService, com.android.server.NetworkTimeUpdateService, com.android.server.CommonTimeManagementService, com.android.server.TextServicesManagerService, com.android.server.dreams.DreamManagerService, com.android.server.AssetAtlasService, com.android.server.input.InputManagerService, com.android.server.TelephonyRegistry, com.android.server.print.PrintManagerService, com.android.server.media.MediaRouterService)
    {
        com.android.server.ServerThread$2 r0;
        com.android.server.ServerThread r1;
        boolean z0, z1;
        android.content.Context r2;
        com.android.server.MountService r3;
        com.android.server.BatteryService r4;
        com.android.server.NetworkManagementService r5;
        com.android.server.net.NetworkStatsService r6;
        com.android.server.net.NetworkPolicyManagerService r7;
        com.android.server.ConnectivityService r8;
        com.android.server.DockObserver r9;
        com.android.server.usb.UsbService r10;
        com.android.server.TwilightService r11;
        com.android.server.UiModeManagerService r12;
        com.android.server.RecognitionManagerService r13;
        com.android.server.AppWidgetService r14;
        com.android.server.WallpaperManagerService r15;
        com.android.server.StatusBarManagerService r16;
        com.android.server.InputMethodManagerService r17;
        com.android.server.CountryDetectorService r18;
        com.android.server.LocationManagerService r19;
        com.android.server.CommonTimeManagementService r20;
        com.android.server.NetworkTimeUpdateService r21;
        com.android.server.dreams.DreamManagerService r22;
        com.android.server.TextServicesManagerService r23;
        com.android.server.input.InputManagerService r24;
        com.android.server.AssetAtlasService r25;
        com.android.server.print.PrintManagerService r26;
        com.android.server.TelephonyRegistry r27;
        com.android.server.media.MediaRouterService r28;

        r0 := @this: com.android.server.ServerThread$2;

        r1 := @parameter0: com.android.server.ServerThread;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.content.Context;

        r3 := @parameter3: com.android.server.MountService;

        r4 := @parameter4: com.android.server.BatteryService;

        r5 := @parameter5: com.android.server.NetworkManagementService;

        r6 := @parameter6: com.android.server.net.NetworkStatsService;

        r7 := @parameter7: com.android.server.net.NetworkPolicyManagerService;

        r8 := @parameter8: com.android.server.ConnectivityService;

        r9 := @parameter9: com.android.server.DockObserver;

        r10 := @parameter10: com.android.server.usb.UsbService;

        r11 := @parameter11: com.android.server.TwilightService;

        r12 := @parameter12: com.android.server.UiModeManagerService;

        r13 := @parameter13: com.android.server.RecognitionManagerService;

        r14 := @parameter14: com.android.server.AppWidgetService;

        z1 := @parameter15: boolean;

        r15 := @parameter16: com.android.server.WallpaperManagerService;

        r17 := @parameter17: com.android.server.InputMethodManagerService;

        r16 := @parameter18: com.android.server.StatusBarManagerService;

        r19 := @parameter19: com.android.server.LocationManagerService;

        r18 := @parameter20: com.android.server.CountryDetectorService;

        r21 := @parameter21: com.android.server.NetworkTimeUpdateService;

        r20 := @parameter22: com.android.server.CommonTimeManagementService;

        r23 := @parameter23: com.android.server.TextServicesManagerService;

        r22 := @parameter24: com.android.server.dreams.DreamManagerService;

        r25 := @parameter25: com.android.server.AssetAtlasService;

        r24 := @parameter26: com.android.server.input.InputManagerService;

        r27 := @parameter27: com.android.server.TelephonyRegistry;

        r26 := @parameter28: com.android.server.print.PrintManagerService;

        r28 := @parameter29: com.android.server.media.MediaRouterService;

        r0.<com.android.server.ServerThread$2: com.android.server.ServerThread this$0> = r1;

        r0.<com.android.server.ServerThread$2: boolean val$headless> = z0;

        r0.<com.android.server.ServerThread$2: android.content.Context val$contextF> = r2;

        r0.<com.android.server.ServerThread$2: com.android.server.MountService val$mountServiceF> = r3;

        r0.<com.android.server.ServerThread$2: com.android.server.BatteryService val$batteryF> = r4;

        r0.<com.android.server.ServerThread$2: com.android.server.NetworkManagementService val$networkManagementF> = r5;

        r0.<com.android.server.ServerThread$2: com.android.server.net.NetworkStatsService val$networkStatsF> = r6;

        r0.<com.android.server.ServerThread$2: com.android.server.net.NetworkPolicyManagerService val$networkPolicyF> = r7;

        r0.<com.android.server.ServerThread$2: com.android.server.ConnectivityService val$connectivityF> = r8;

        r0.<com.android.server.ServerThread$2: com.android.server.DockObserver val$dockF> = r9;

        r0.<com.android.server.ServerThread$2: com.android.server.usb.UsbService val$usbF> = r10;

        r0.<com.android.server.ServerThread$2: com.android.server.TwilightService val$twilightF> = r11;

        r0.<com.android.server.ServerThread$2: com.android.server.UiModeManagerService val$uiModeF> = r12;

        r0.<com.android.server.ServerThread$2: com.android.server.RecognitionManagerService val$recognitionF> = r13;

        r0.<com.android.server.ServerThread$2: com.android.server.AppWidgetService val$appWidgetF> = r14;

        r0.<com.android.server.ServerThread$2: boolean val$safeMode> = z1;

        r0.<com.android.server.ServerThread$2: com.android.server.WallpaperManagerService val$wallpaperF> = r15;

        r0.<com.android.server.ServerThread$2: com.android.server.InputMethodManagerService val$immF> = r17;

        r0.<com.android.server.ServerThread$2: com.android.server.StatusBarManagerService val$statusBarF> = r16;

        r0.<com.android.server.ServerThread$2: com.android.server.LocationManagerService val$locationF> = r19;

        r0.<com.android.server.ServerThread$2: com.android.server.CountryDetectorService val$countryDetectorF> = r18;

        r0.<com.android.server.ServerThread$2: com.android.server.NetworkTimeUpdateService val$networkTimeUpdaterF> = r21;

        r0.<com.android.server.ServerThread$2: com.android.server.CommonTimeManagementService val$commonTimeMgmtServiceF> = r20;

        r0.<com.android.server.ServerThread$2: com.android.server.TextServicesManagerService val$textServiceManagerServiceF> = r23;

        r0.<com.android.server.ServerThread$2: com.android.server.dreams.DreamManagerService val$dreamyF> = r22;

        r0.<com.android.server.ServerThread$2: com.android.server.AssetAtlasService val$atlasF> = r25;

        r0.<com.android.server.ServerThread$2: com.android.server.input.InputManagerService val$inputManagerF> = r24;

        r0.<com.android.server.ServerThread$2: com.android.server.TelephonyRegistry val$telephonyRegistryF> = r27;

        r0.<com.android.server.ServerThread$2: com.android.server.print.PrintManagerService val$printManagerF> = r26;

        r0.<com.android.server.ServerThread$2: com.android.server.media.MediaRouterService val$mediaRouterF> = r28;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        com.android.server.ServerThread$2 r0;
        java.lang.Throwable r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, $r76, $r78, $r84, $r86, $r88, $r90, $r93, $r95, $r97, $r99, $r101, $r103, $r105, $r107, $r108, $r110, $r112, $r114, $r116, $r118, $r120, $r122, $r125, $r127, $r129, $r131;
        com.android.server.am.ActivityManagerService $r27;
        com.android.server.MountService $r28, $r82;
        boolean $z0, $z1;
        com.android.server.net.NetworkStatsService $r29, $r81;
        com.android.server.net.NetworkPolicyManagerService $r30, $r71;
        com.android.server.BatteryService $r31, $r83;
        com.android.server.NetworkManagementService $r32, $r80;
        com.android.server.usb.UsbService $r33, $r68;
        com.android.server.TwilightService $r34, $r75;
        com.android.server.ConnectivityService $r35, $r70;
        com.android.server.DockObserver $r36, $r69;
        com.android.server.Watchdog $r37;
        com.android.server.AppWidgetService $r38, $r72;
        com.android.server.UiModeManagerService $r39, $r74;
        com.android.server.RecognitionManagerService $r40, $r73;
        com.android.server.LocationManagerService $r41, $r67;
        com.android.server.CountryDetectorService $r42, $r66;
        com.android.server.WallpaperManagerService $r43, $r63;
        com.android.server.InputMethodManagerService $r44, $r62;
        com.android.server.dreams.DreamManagerService $r45, $r58;
        com.android.server.TextServicesManagerService $r46, $r57;
        com.android.server.CommonTimeManagementService $r47, $r64;
        com.android.server.NetworkTimeUpdateService $r48, $r65;
        com.android.server.print.PrintManagerService $r49, $r54;
        com.android.server.TelephonyRegistry $r50, $r53;
        com.android.server.input.InputManagerService $r51, $r60;
        com.android.server.AssetAtlasService $r52, $r59;
        com.android.server.media.MediaRouterService $r55, $r56;
        com.android.server.StatusBarManagerService $r61;
        android.content.Context $r77;
        com.android.server.ServerThread $r79, $r85, $r87, $r89, $r91, $r92, $r94, $r96, $r98, $r100, $r102, $r104, $r106, $r109, $r111, $r113, $r115, $r117, $r119, $r121, $r123, $r124, $r126, $r128, $r130, $r132;

        r0 := @this: com.android.server.ServerThread$2;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemServer", "Making services ready");

     label01:
        $r27 = staticinvoke <com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService self()>();

        virtualinvoke $r27.<com.android.server.am.ActivityManagerService: void startObservingNativeCrashes()>();

     label02:
        $z0 = r0.<com.android.server.ServerThread$2: boolean val$headless>;

        if $z0 != 0 goto label03;

        $r77 = r0.<com.android.server.ServerThread$2: android.content.Context val$contextF>;

        staticinvoke <com.android.server.ServerThread: void startSystemUi(android.content.Context)>($r77);

     label03:
        $r28 = r0.<com.android.server.ServerThread$2: com.android.server.MountService val$mountServiceF>;

        if $r28 == null goto label04;

        $r82 = r0.<com.android.server.ServerThread$2: com.android.server.MountService val$mountServiceF>;

        virtualinvoke $r82.<com.android.server.MountService: void systemReady()>();

     label04:
        $r31 = r0.<com.android.server.ServerThread$2: com.android.server.BatteryService val$batteryF>;

        if $r31 == null goto label05;

        $r83 = r0.<com.android.server.ServerThread$2: com.android.server.BatteryService val$batteryF>;

        virtualinvoke $r83.<com.android.server.BatteryService: void systemReady()>();

     label05:
        $r32 = r0.<com.android.server.ServerThread$2: com.android.server.NetworkManagementService val$networkManagementF>;

        if $r32 == null goto label06;

        $r80 = r0.<com.android.server.ServerThread$2: com.android.server.NetworkManagementService val$networkManagementF>;

        virtualinvoke $r80.<com.android.server.NetworkManagementService: void systemReady()>();

     label06:
        $r29 = r0.<com.android.server.ServerThread$2: com.android.server.net.NetworkStatsService val$networkStatsF>;

        if $r29 == null goto label07;

        $r81 = r0.<com.android.server.ServerThread$2: com.android.server.net.NetworkStatsService val$networkStatsF>;

        virtualinvoke $r81.<com.android.server.net.NetworkStatsService: void systemReady()>();

     label07:
        $r30 = r0.<com.android.server.ServerThread$2: com.android.server.net.NetworkPolicyManagerService val$networkPolicyF>;

        if $r30 == null goto label08;

        $r71 = r0.<com.android.server.ServerThread$2: com.android.server.net.NetworkPolicyManagerService val$networkPolicyF>;

        virtualinvoke $r71.<com.android.server.net.NetworkPolicyManagerService: void systemReady()>();

     label08:
        $r35 = r0.<com.android.server.ServerThread$2: com.android.server.ConnectivityService val$connectivityF>;

        if $r35 == null goto label09;

        $r70 = r0.<com.android.server.ServerThread$2: com.android.server.ConnectivityService val$connectivityF>;

        virtualinvoke $r70.<com.android.server.ConnectivityService: void systemReady()>();

     label09:
        $r36 = r0.<com.android.server.ServerThread$2: com.android.server.DockObserver val$dockF>;

        if $r36 == null goto label10;

        $r69 = r0.<com.android.server.ServerThread$2: com.android.server.DockObserver val$dockF>;

        virtualinvoke $r69.<com.android.server.DockObserver: void systemReady()>();

     label10:
        $r33 = r0.<com.android.server.ServerThread$2: com.android.server.usb.UsbService val$usbF>;

        if $r33 == null goto label11;

        $r68 = r0.<com.android.server.ServerThread$2: com.android.server.usb.UsbService val$usbF>;

        virtualinvoke $r68.<com.android.server.usb.UsbService: void systemReady()>();

     label11:
        $r34 = r0.<com.android.server.ServerThread$2: com.android.server.TwilightService val$twilightF>;

        if $r34 == null goto label12;

        $r75 = r0.<com.android.server.ServerThread$2: com.android.server.TwilightService val$twilightF>;

        virtualinvoke $r75.<com.android.server.TwilightService: void systemReady()>();

     label12:
        $r39 = r0.<com.android.server.ServerThread$2: com.android.server.UiModeManagerService val$uiModeF>;

        if $r39 == null goto label13;

        $r74 = r0.<com.android.server.ServerThread$2: com.android.server.UiModeManagerService val$uiModeF>;

        virtualinvoke $r74.<com.android.server.UiModeManagerService: void systemReady()>();

     label13:
        $r40 = r0.<com.android.server.ServerThread$2: com.android.server.RecognitionManagerService val$recognitionF>;

        if $r40 == null goto label14;

        $r73 = r0.<com.android.server.ServerThread$2: com.android.server.RecognitionManagerService val$recognitionF>;

        virtualinvoke $r73.<com.android.server.RecognitionManagerService: void systemReady()>();

     label14:
        $r37 = staticinvoke <com.android.server.Watchdog: com.android.server.Watchdog getInstance()>();

        virtualinvoke $r37.<com.android.server.Watchdog: void start()>();

     label15:
        $r38 = r0.<com.android.server.ServerThread$2: com.android.server.AppWidgetService val$appWidgetF>;

        if $r38 == null goto label16;

        $r72 = r0.<com.android.server.ServerThread$2: com.android.server.AppWidgetService val$appWidgetF>;

        $z1 = r0.<com.android.server.ServerThread$2: boolean val$safeMode>;

        virtualinvoke $r72.<com.android.server.AppWidgetService: void systemRunning(boolean)>($z1);

     label16:
        $r43 = r0.<com.android.server.ServerThread$2: com.android.server.WallpaperManagerService val$wallpaperF>;

        if $r43 == null goto label17;

        $r63 = r0.<com.android.server.ServerThread$2: com.android.server.WallpaperManagerService val$wallpaperF>;

        virtualinvoke $r63.<com.android.server.WallpaperManagerService: void systemRunning()>();

     label17:
        $r44 = r0.<com.android.server.ServerThread$2: com.android.server.InputMethodManagerService val$immF>;

        if $r44 == null goto label18;

        $r62 = r0.<com.android.server.ServerThread$2: com.android.server.InputMethodManagerService val$immF>;

        $r61 = r0.<com.android.server.ServerThread$2: com.android.server.StatusBarManagerService val$statusBarF>;

        virtualinvoke $r62.<com.android.server.InputMethodManagerService: void systemRunning(com.android.server.StatusBarManagerService)>($r61);

     label18:
        $r41 = r0.<com.android.server.ServerThread$2: com.android.server.LocationManagerService val$locationF>;

        if $r41 == null goto label19;

        $r67 = r0.<com.android.server.ServerThread$2: com.android.server.LocationManagerService val$locationF>;

        virtualinvoke $r67.<com.android.server.LocationManagerService: void systemRunning()>();

     label19:
        $r42 = r0.<com.android.server.ServerThread$2: com.android.server.CountryDetectorService val$countryDetectorF>;

        if $r42 == null goto label20;

        $r66 = r0.<com.android.server.ServerThread$2: com.android.server.CountryDetectorService val$countryDetectorF>;

        virtualinvoke $r66.<com.android.server.CountryDetectorService: void systemRunning()>();

     label20:
        $r48 = r0.<com.android.server.ServerThread$2: com.android.server.NetworkTimeUpdateService val$networkTimeUpdaterF>;

        if $r48 == null goto label21;

        $r65 = r0.<com.android.server.ServerThread$2: com.android.server.NetworkTimeUpdateService val$networkTimeUpdaterF>;

        virtualinvoke $r65.<com.android.server.NetworkTimeUpdateService: void systemRunning()>();

     label21:
        $r47 = r0.<com.android.server.ServerThread$2: com.android.server.CommonTimeManagementService val$commonTimeMgmtServiceF>;

        if $r47 == null goto label22;

        $r64 = r0.<com.android.server.ServerThread$2: com.android.server.CommonTimeManagementService val$commonTimeMgmtServiceF>;

        virtualinvoke $r64.<com.android.server.CommonTimeManagementService: void systemRunning()>();

     label22:
        $r46 = r0.<com.android.server.ServerThread$2: com.android.server.TextServicesManagerService val$textServiceManagerServiceF>;

        if $r46 == null goto label23;

        $r57 = r0.<com.android.server.ServerThread$2: com.android.server.TextServicesManagerService val$textServiceManagerServiceF>;

        virtualinvoke $r57.<com.android.server.TextServicesManagerService: void systemRunning()>();

     label23:
        $r45 = r0.<com.android.server.ServerThread$2: com.android.server.dreams.DreamManagerService val$dreamyF>;

        if $r45 == null goto label24;

        $r58 = r0.<com.android.server.ServerThread$2: com.android.server.dreams.DreamManagerService val$dreamyF>;

        virtualinvoke $r58.<com.android.server.dreams.DreamManagerService: void systemRunning()>();

     label24:
        $r52 = r0.<com.android.server.ServerThread$2: com.android.server.AssetAtlasService val$atlasF>;

        if $r52 == null goto label25;

        $r59 = r0.<com.android.server.ServerThread$2: com.android.server.AssetAtlasService val$atlasF>;

        virtualinvoke $r59.<com.android.server.AssetAtlasService: void systemRunning()>();

     label25:
        $r51 = r0.<com.android.server.ServerThread$2: com.android.server.input.InputManagerService val$inputManagerF>;

        if $r51 == null goto label26;

        $r60 = r0.<com.android.server.ServerThread$2: com.android.server.input.InputManagerService val$inputManagerF>;

        virtualinvoke $r60.<com.android.server.input.InputManagerService: void systemRunning()>();

     label26:
        $r50 = r0.<com.android.server.ServerThread$2: com.android.server.TelephonyRegistry val$telephonyRegistryF>;

        if $r50 == null goto label27;

        $r53 = r0.<com.android.server.ServerThread$2: com.android.server.TelephonyRegistry val$telephonyRegistryF>;

        virtualinvoke $r53.<com.android.server.TelephonyRegistry: void systemRunning()>();

     label27:
        $r49 = r0.<com.android.server.ServerThread$2: com.android.server.print.PrintManagerService val$printManagerF>;

        if $r49 == null goto label28;

        $r54 = r0.<com.android.server.ServerThread$2: com.android.server.print.PrintManagerService val$printManagerF>;

        virtualinvoke $r54.<com.android.server.print.PrintManagerService: void systemRuning()>();

     label28:
        $r56 = r0.<com.android.server.ServerThread$2: com.android.server.media.MediaRouterService val$mediaRouterF>;

        if $r56 == null goto label29;

        $r55 = r0.<com.android.server.ServerThread$2: com.android.server.media.MediaRouterService val$mediaRouterF>;

        virtualinvoke $r55.<com.android.server.media.MediaRouterService: void systemRunning()>();

     label29:
        return;

     label30:
        $r88 := @caughtexception;

        r1 = $r88;

        $r91 = r0.<com.android.server.ServerThread$2: com.android.server.ServerThread this$0>;

        virtualinvoke $r91.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("observing native crashes", r1);

        goto label02;

     label31:
        $r120 := @caughtexception;

        r2 = $r120;

        $r119 = r0.<com.android.server.ServerThread$2: com.android.server.ServerThread this$0>;

        virtualinvoke $r119.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("making Mount Service ready", r2);

        goto label04;

     label32:
        $r127 := @caughtexception;

        r3 = $r127;

        $r130 = r0.<com.android.server.ServerThread$2: com.android.server.ServerThread this$0>;

        virtualinvoke $r130.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("making Battery Service ready", r3);

        goto label05;

     label33:
        $r122 := @caughtexception;

        r4 = $r122;

        $r121 = r0.<com.android.server.ServerThread$2: com.android.server.ServerThread this$0>;

        virtualinvoke $r121.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("making Network Managment Service ready", r4);

        goto label06;

     label34:
        $r76 := @caughtexception;

        r5 = $r76;

        $r79 = r0.<com.android.server.ServerThread$2: com.android.server.ServerThread this$0>;

        virtualinvoke $r79.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("making Network Stats Service ready", r5);

        goto label07;

     label35:
        $r107 := @caughtexception;

        r6 = $r107;

        $r104 = r0.<com.android.server.ServerThread$2: com.android.server.ServerThread this$0>;

        virtualinvoke $r104.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("making Network Policy Service ready", r6);

        goto label08;

     label36:
        $r84 := @caughtexception;

        r7 = $r84;

        $r87 = r0.<com.android.server.ServerThread$2: com.android.server.ServerThread this$0>;

        virtualinvoke $r87.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("making Connectivity Service ready", r7);

        goto label09;

     label37:
        $r114 := @caughtexception;

        r8 = $r114;

        $r113 = r0.<com.android.server.ServerThread$2: com.android.server.ServerThread this$0>;

        virtualinvoke $r113.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("making Dock Service ready", r8);

        goto label10;

     label38:
        $r105 := @caughtexception;

        r9 = $r105;

        $r102 = r0.<com.android.server.ServerThread$2: com.android.server.ServerThread this$0>;

        virtualinvoke $r102.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("making USB Service ready", r9);

        goto label11;

     label39:
        $r103 := @caughtexception;

        r10 = $r103;

        $r100 = r0.<com.android.server.ServerThread$2: com.android.server.ServerThread this$0>;

        virtualinvoke $r100.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("makin Twilight Service ready", r10);

        goto label12;

     label40:
        $r93 := @caughtexception;

        r11 = $r93;

        $r106 = r0.<com.android.server.ServerThread$2: com.android.server.ServerThread this$0>;

        virtualinvoke $r106.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("making UI Mode Service ready", r11);

        goto label13;

     label41:
        $r108 := @caughtexception;

        r12 = $r108;

        $r123 = r0.<com.android.server.ServerThread$2: com.android.server.ServerThread this$0>;

        virtualinvoke $r123.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("making Recognition Service ready", r12);

        goto label14;

     label42:
        $r78 := @caughtexception;

        r13 = $r78;

        $r89 = r0.<com.android.server.ServerThread$2: com.android.server.ServerThread this$0>;

        virtualinvoke $r89.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("Notifying AppWidgetService running", r13);

        goto label16;

     label43:
        $r110 := @caughtexception;

        r14 = $r110;

        $r109 = r0.<com.android.server.ServerThread$2: com.android.server.ServerThread this$0>;

        virtualinvoke $r109.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("Notifying WallpaperService running", r14);

        goto label17;

     label44:
        $r97 := @caughtexception;

        r16 = $r97;

        $r94 = r0.<com.android.server.ServerThread$2: com.android.server.ServerThread this$0>;

        virtualinvoke $r94.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("Notifying InputMethodService running", r16);

        goto label18;

     label45:
        $r101 := @caughtexception;

        r15 = $r101;

        $r115 = r0.<com.android.server.ServerThread$2: com.android.server.ServerThread this$0>;

        virtualinvoke $r115.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("Notifying Location Service running", r15);

        goto label19;

     label46:
        $r90 := @caughtexception;

        r18 = $r90;

        $r85 = r0.<com.android.server.ServerThread$2: com.android.server.ServerThread this$0>;

        virtualinvoke $r85.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("Notifying CountryDetectorService running", r18);

        goto label20;

     label47:
        $r95 := @caughtexception;

        r17 = $r95;

        $r92 = r0.<com.android.server.ServerThread$2: com.android.server.ServerThread this$0>;

        virtualinvoke $r92.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("Notifying NetworkTimeService running", r17);

        goto label21;

     label48:
        $r112 := @caughtexception;

        r20 = $r112;

        $r111 = r0.<com.android.server.ServerThread$2: com.android.server.ServerThread this$0>;

        virtualinvoke $r111.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("Notifying CommonTimeManagementService running", r20);

        goto label22;

     label49:
        $r116 := @caughtexception;

        r19 = $r116;

        $r126 = r0.<com.android.server.ServerThread$2: com.android.server.ServerThread this$0>;

        virtualinvoke $r126.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("Notifying TextServicesManagerService running", r19);

        goto label23;

     label50:
        $r99 := @caughtexception;

        r22 = $r99;

        $r96 = r0.<com.android.server.ServerThread$2: com.android.server.ServerThread this$0>;

        virtualinvoke $r96.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("Notifying DreamManagerService running", r22);

        goto label24;

     label51:
        $r129 := @caughtexception;

        r21 = $r129;

        $r132 = r0.<com.android.server.ServerThread$2: com.android.server.ServerThread this$0>;

        virtualinvoke $r132.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("Notifying AssetAtlasService running", r21);

        goto label25;

     label52:
        $r118 := @caughtexception;

        r24 = $r118;

        $r117 = r0.<com.android.server.ServerThread$2: com.android.server.ServerThread this$0>;

        virtualinvoke $r117.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("Notifying InputManagerService running", r24);

        goto label26;

     label53:
        $r125 := @caughtexception;

        r23 = $r125;

        $r128 = r0.<com.android.server.ServerThread$2: com.android.server.ServerThread this$0>;

        virtualinvoke $r128.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("Notifying TelephonyRegistry running", r23);

        goto label27;

     label54:
        $r86 := @caughtexception;

        r26 = $r86;

        $r98 = r0.<com.android.server.ServerThread$2: com.android.server.ServerThread this$0>;

        virtualinvoke $r98.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("Notifying PrintManagerService running", r26);

        goto label28;

     label55:
        $r131 := @caughtexception;

        r25 = $r131;

        $r124 = r0.<com.android.server.ServerThread$2: com.android.server.ServerThread this$0>;

        virtualinvoke $r124.<com.android.server.ServerThread: void reportWtf(java.lang.String,java.lang.Throwable)>("Notifying MediaRouterService running", r25);

        return;

        catch java.lang.Throwable from label01 to label02 with label30;
        catch java.lang.Throwable from label03 to label04 with label31;
        catch java.lang.Throwable from label04 to label05 with label32;
        catch java.lang.Throwable from label05 to label06 with label33;
        catch java.lang.Throwable from label06 to label07 with label34;
        catch java.lang.Throwable from label07 to label08 with label35;
        catch java.lang.Throwable from label08 to label09 with label36;
        catch java.lang.Throwable from label09 to label10 with label37;
        catch java.lang.Throwable from label10 to label11 with label38;
        catch java.lang.Throwable from label11 to label12 with label39;
        catch java.lang.Throwable from label12 to label13 with label40;
        catch java.lang.Throwable from label13 to label14 with label41;
        catch java.lang.Throwable from label15 to label16 with label42;
        catch java.lang.Throwable from label16 to label17 with label43;
        catch java.lang.Throwable from label17 to label18 with label44;
        catch java.lang.Throwable from label18 to label19 with label45;
        catch java.lang.Throwable from label19 to label20 with label46;
        catch java.lang.Throwable from label20 to label21 with label47;
        catch java.lang.Throwable from label21 to label22 with label48;
        catch java.lang.Throwable from label22 to label23 with label49;
        catch java.lang.Throwable from label23 to label24 with label50;
        catch java.lang.Throwable from label24 to label25 with label51;
        catch java.lang.Throwable from label25 to label26 with label52;
        catch java.lang.Throwable from label26 to label27 with label53;
        catch java.lang.Throwable from label27 to label28 with label54;
        catch java.lang.Throwable from label28 to label29 with label55;
    }
}
