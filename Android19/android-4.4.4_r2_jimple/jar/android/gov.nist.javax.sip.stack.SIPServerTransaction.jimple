public class gov.nist.javax.sip.stack.SIPServerTransaction extends gov.nist.javax.sip.stack.SIPTransaction implements gov.nist.javax.sip.stack.ServerRequestInterface, javax.sip.ServerTransaction, gov.nist.javax.sip.ServerTransactionExt
{
    private gov.nist.javax.sip.stack.SIPDialog dialog;
    private gov.nist.javax.sip.stack.SIPServerTransaction inviteTransaction;
    protected boolean isAckSeen;
    private gov.nist.javax.sip.message.SIPResponse pendingReliableResponse;
    private gov.nist.javax.sip.stack.SIPClientTransaction pendingSubscribeTransaction;
    private java.util.concurrent.Semaphore provisionalResponseSem;
    private gov.nist.javax.sip.stack.SIPServerTransaction$ProvisionalResponseTask provisionalResponseTask;
    private transient gov.nist.javax.sip.stack.ServerRequestInterface requestOf;
    private boolean retransmissionAlertEnabled;
    private gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask retransmissionAlertTimerTask;
    private int rseqNumber;

    protected void <init>(gov.nist.javax.sip.stack.SIPTransactionStack, gov.nist.javax.sip.stack.MessageChannel)
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        gov.nist.javax.sip.stack.SIPTransactionStack r1;
        gov.nist.javax.sip.stack.MessageChannel r2;
        java.util.concurrent.Semaphore $r3;
        int $i0, $i1, $i2, $i4;
        double $d0, $d1;
        boolean $z0;
        gov.nist.core.StackLogger $r4, $r11;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.String $r7, $r9;
        java.util.Timer $r10;
        gov.nist.javax.sip.stack.SIPServerTransaction$ListenerExecutionMaxTimer $r12;
        long $l3;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        r1 := @parameter0: gov.nist.javax.sip.stack.SIPTransactionStack;

        r2 := @parameter1: gov.nist.javax.sip.stack.MessageChannel;

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPTransaction: void <init>(gov.nist.javax.sip.stack.SIPTransactionStack,gov.nist.javax.sip.stack.MessageChannel)>(r1, r2);

        $r3 = new java.util.concurrent.Semaphore;

        specialinvoke $r3.<java.util.concurrent.Semaphore: void <init>(int)>(1);

        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.util.concurrent.Semaphore provisionalResponseSem> = $r3;

        $i0 = r1.<gov.nist.javax.sip.stack.SIPTransactionStack: int maxListenerResponseTime>;

        if $i0 == -1 goto label1;

        $r10 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Timer getTimer()>();

        $r12 = new gov.nist.javax.sip.stack.SIPServerTransaction$ListenerExecutionMaxTimer;

        specialinvoke $r12.<gov.nist.javax.sip.stack.SIPServerTransaction$ListenerExecutionMaxTimer: void <init>(gov.nist.javax.sip.stack.SIPServerTransaction)>(r0);

        $i2 = r1.<gov.nist.javax.sip.stack.SIPTransactionStack: int maxListenerResponseTime>;

        $i4 = 1000 * $i2;

        $l3 = (long) $i4;

        virtualinvoke $r10.<java.util.Timer: void schedule(java.util.TimerTask,long)>($r12, $l3);

     label1:
        $d0 = staticinvoke <java.lang.Math: double random()>();

        $d1 = 1000.0 * $d0;

        $i1 = (int) $d1;

        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: int rseqNumber> = $i1;

        $z0 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating Server Transaction");

        $r7 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.lang.String getBranchId()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r9);

        $r11 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r11.<gov.nist.core.StackLogger: void logStackTrace()>();

     label2:
        return;
    }

    static void access$000(gov.nist.javax.sip.stack.SIPServerTransaction)
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;

        r0 := @parameter0: gov.nist.javax.sip.stack.SIPServerTransaction;

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void fireReliableResponseRetransmissionTimer()>();

        return;
    }

    static javax.sip.TransactionState access$100(gov.nist.javax.sip.stack.SIPServerTransaction)
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        javax.sip.TransactionState $r1;

        r0 := @parameter0: gov.nist.javax.sip.stack.SIPServerTransaction;

        $r1 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        return $r1;
    }

    private void fireReliableResponseRetransmissionTimer()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        java.io.IOException r1, $r3;
        gov.nist.javax.sip.message.SIPResponse $r2;
        gov.nist.javax.sip.stack.SIPTransactionStack $r4, $r6;
        boolean $z0;
        javax.sip.TransactionState $r5;
        gov.nist.core.StackLogger $r7;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

     label1:
        $r2 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse pendingReliableResponse>;

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPTransaction: void sendMessage(gov.nist.javax.sip.message.SIPMessage)>($r2);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $r4 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r4.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label4;

        $r6 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r7 = virtualinvoke $r6.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r7.<gov.nist.core.StackLogger: void logException(java.lang.Throwable)>(r1);

     label4:
        $r5 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)>($r5);

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void raiseErrorEvent(int)>(2);

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private javax.sip.TransactionState getRealState()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        javax.sip.TransactionState $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        $r1 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPTransaction: javax.sip.TransactionState getState()>();

        return $r1;
    }

    private void sendResponse(gov.nist.javax.sip.message.SIPResponse) throws java.io.IOException
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        gov.nist.javax.sip.message.SIPResponse r1;
        java.lang.Throwable r2, $r24;
        gov.nist.javax.sip.header.Via r3;
        java.lang.String r4, r5, $r8, $r13, $r15, $r21;
        int i0, $i1;
        javax.sip.address.Hop r6;
        gov.nist.javax.sip.stack.MessageChannel r7, $r23;
        boolean $z0, $z1;
        gov.nist.javax.sip.stack.SIPTransactionStack $r9, $r12;
        gov.nist.core.net.AddressResolver $r10;
        gov.nist.javax.sip.stack.HopImpl $r11;
        gov.nist.javax.sip.SipProviderImpl $r14;
        javax.sip.ListeningPoint $r16;
        java.lang.StringBuilder $r17, $r19, $r20;
        java.io.IOException $r18, $r22;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        r1 := @parameter0: gov.nist.javax.sip.message.SIPResponse;

     label01:
        $z0 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isReliable()>();

        if $z0 == 0 goto label03;

        $r23 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.MessageChannel getMessageChannel()>();

        virtualinvoke $r23.<gov.nist.javax.sip.stack.MessageChannel: void sendMessage(gov.nist.javax.sip.message.SIPMessage)>(r1);

     label02:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void startTransactionTimer()>();

        return;

     label03:
        r3 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.Via getTopmostVia()>();

        r4 = virtualinvoke r3.<gov.nist.javax.sip.header.Via: java.lang.String getTransport()>();

     label04:
        if r4 != null goto label07;

     label05:
        $r22 = new java.io.IOException;

        specialinvoke $r22.<java.io.IOException: void <init>(java.lang.String)>("missing transport!");

        throw $r22;

     label06:
        $r24 := @caughtexception;

        r2 = $r24;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void startTransactionTimer()>();

        throw r2;

     label07:
        i0 = virtualinvoke r3.<gov.nist.javax.sip.header.Via: int getRPort()>();

     label08:
        if i0 != -1 goto label10;

     label09:
        i0 = virtualinvoke r3.<gov.nist.javax.sip.header.Via: int getPort()>();

     label10:
        if i0 != -1 goto label13;

     label11:
        $z1 = virtualinvoke r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("TLS");

        if $z1 == 0 goto label23;

     label12:
        i0 = 5061;

     label13:
        $r8 = virtualinvoke r3.<gov.nist.javax.sip.header.Via: java.lang.String getMAddr()>();

        if $r8 == null goto label18;

        r5 = virtualinvoke r3.<gov.nist.javax.sip.header.Via: java.lang.String getMAddr()>();

     label14:
        $r9 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r10 = $r9.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.net.AddressResolver addressResolver>;

        $r11 = new gov.nist.javax.sip.stack.HopImpl;

        specialinvoke $r11.<gov.nist.javax.sip.stack.HopImpl: void <init>(java.lang.String,int,java.lang.String)>(r5, i0, r4);

        r6 = interfaceinvoke $r10.<gov.nist.core.net.AddressResolver: javax.sip.address.Hop resolveAddress(javax.sip.address.Hop)>($r11);

        $r12 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()>();

        $r14 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.SipProviderImpl getSipProvider()>();

        $r13 = interfaceinvoke r6.<javax.sip.address.Hop: java.lang.String getTransport()>();

        $r16 = virtualinvoke $r14.<gov.nist.javax.sip.SipProviderImpl: javax.sip.ListeningPoint getListeningPoint(java.lang.String)>($r13);

        $r15 = interfaceinvoke $r16.<javax.sip.ListeningPoint: java.lang.String getIPAddress()>();

        $i1 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: int getPort()>();

        r7 = virtualinvoke $r12.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.MessageChannel createRawMessageChannel(java.lang.String,int,javax.sip.address.Hop)>($r15, $i1, r6);

     label15:
        if r7 == null goto label22;

     label16:
        virtualinvoke r7.<gov.nist.javax.sip.stack.MessageChannel: void sendMessage(gov.nist.javax.sip.message.SIPMessage)>(r1);

     label17:
        goto label02;

     label18:
        r5 = virtualinvoke r3.<gov.nist.javax.sip.header.Via: java.lang.String getParameter(java.lang.String)>("received");

     label19:
        if r5 != null goto label14;

     label20:
        r5 = virtualinvoke r3.<gov.nist.javax.sip.header.Via: java.lang.String getHost()>();

     label21:
        goto label14;

     label22:
        $r18 = new java.io.IOException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not create a message channel for ");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.io.IOException: void <init>(java.lang.String)>($r21);

        throw $r18;

     label23:
        i0 = 5060;

        goto label13;

        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label05 to label06 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label09 to label10 with label06;
        catch java.lang.Throwable from label11 to label12 with label06;
        catch java.lang.Throwable from label13 to label14 with label06;
        catch java.lang.Throwable from label14 to label15 with label06;
        catch java.lang.Throwable from label16 to label17 with label06;
        catch java.lang.Throwable from label18 to label19 with label06;
        catch java.lang.Throwable from label20 to label21 with label06;
        catch java.lang.Throwable from label22 to label23 with label06;
    }

    public boolean ackSeen()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        $z0 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isAckSeen>;

        return $z0;
    }

    public void disableRetransmissionAlerts()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        java.lang.String r1;
        gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask $r2, $r3, $r4;
        boolean $z0;
        gov.nist.javax.sip.stack.SIPTransactionStack $r5;
        java.util.concurrent.ConcurrentHashMap $r6;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        $r2 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask retransmissionAlertTimerTask>;

        if $r2 == null goto label2;

        $z0 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean retransmissionAlertEnabled>;

        if $z0 == 0 goto label2;

        $r3 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask retransmissionAlertTimerTask>;

        virtualinvoke $r3.<gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask: boolean cancel()>();

        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean retransmissionAlertEnabled> = 0;

        $r4 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask retransmissionAlertTimerTask>;

        r1 = $r4.<gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask: java.lang.String dialogId>;

        if r1 == null goto label1;

        $r5 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r6 = $r5.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.concurrent.ConcurrentHashMap retransmissionAlertTransactions>;

        virtualinvoke $r6.<java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>(r1);

     label1:
        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask retransmissionAlertTimerTask> = null;

     label2:
        return;
    }

    public void enableRetransmissionAlerts() throws javax.sip.SipException
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        javax.sip.Dialog $r1;
        java.lang.String $r2;
        boolean $z0;
        javax.sip.SipException $r3, $r4;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        $r1 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.Dialog getDialog()>();

        if $r1 == null goto label1;

        $r4 = new javax.sip.SipException;

        specialinvoke $r4.<javax.sip.SipException: void <init>(java.lang.String)>("Dialog associated with tx");

        throw $r4;

     label1:
        $r2 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.lang.String getMethod()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z0 != 0 goto label2;

        $r3 = new javax.sip.SipException;

        specialinvoke $r3.<javax.sip.SipException: void <init>(java.lang.String)>("Request Method must be INVITE");

        throw $r3;

     label2:
        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean retransmissionAlertEnabled> = 1;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        boolean $z0, $z1;
        java.lang.String $r5, $r6;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        r1 := @parameter0: java.lang.Object;

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (gov.nist.javax.sip.stack.SIPServerTransaction) r1;

        $r5 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.lang.String getBranch()>();

        $r6 = virtualinvoke r2.<gov.nist.javax.sip.stack.SIPServerTransaction: java.lang.String getBranch()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r6);

        return $z1;
    }

    protected void fireRetransmissionTimer()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        java.io.IOException r1, $r13;
        gov.nist.javax.sip.SipProviderImpl r2;
        gov.nist.javax.sip.stack.SIPTransactionStack $r3, $r7, $r11, $r12, $r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        gov.nist.javax.sip.message.SIPResponse $r4, $r5, $r6;
        int $i0, $i1;
        javax.sip.Timeout $r8;
        javax.sip.TimeoutEvent $r9;
        gov.nist.core.StackLogger $r10, $r15;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

     label1:
        $r3 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r3.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label2;

        $r11 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r10 = virtualinvoke $r11.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r10.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("fireRetransmissionTimer() -- ");

     label2:
        $z1 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isInviteTransaction()>();

        if $z1 == 0 goto label9;

        $r4 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse lastResponse>;

        if $r4 == null goto label9;

        $z2 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean retransmissionAlertEnabled>;

        if $z2 == 0 goto label3;

        $r7 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z4 = virtualinvoke $r7.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isTransactionPendingAck(gov.nist.javax.sip.stack.SIPServerTransaction)>(r0);

        if $z4 == 0 goto label5;

     label3:
        $r5 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse lastResponse>;

        $i0 = virtualinvoke $r5.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

        $i1 = $i0 / 100;

        if $i1 <= 2 goto label9;

        $z3 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isAckSeen>;

        if $z3 != 0 goto label9;

        $r6 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse lastResponse>;

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPTransaction: void sendMessage(gov.nist.javax.sip.message.SIPMessage)>($r6);

     label4:
        return;

     label5:
        r2 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.SipProviderImpl getSipProvider()>();

        $r9 = new javax.sip.TimeoutEvent;

        $r8 = <javax.sip.Timeout: javax.sip.Timeout RETRANSMIT>;

        specialinvoke $r9.<javax.sip.TimeoutEvent: void <init>(java.lang.Object,javax.sip.ServerTransaction,javax.sip.Timeout)>(r2, r0, $r8);

        virtualinvoke r2.<gov.nist.javax.sip.SipProviderImpl: void handleEvent(java.util.EventObject,gov.nist.javax.sip.stack.SIPTransaction)>($r9, r0);

     label6:
        return;

     label7:
        $r13 := @caughtexception;

        r1 = $r13;

        $r12 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z5 = virtualinvoke $r12.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z5 == 0 goto label8;

        $r14 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r15 = virtualinvoke $r14.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r15.<gov.nist.core.StackLogger: void logException(java.lang.Throwable)>(r1);

     label8:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void raiseErrorEvent(int)>(2);

     label9:
        return;

        catch java.io.IOException from label1 to label2 with label7;
        catch java.io.IOException from label2 to label3 with label7;
        catch java.io.IOException from label3 to label4 with label7;
        catch java.io.IOException from label5 to label6 with label7;
    }

    protected void fireTimeoutTimer()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        gov.nist.javax.sip.stack.SIPDialog r1;
        gov.nist.javax.sip.stack.SIPTransactionStack $r2, $r22, $r24, $r27, $r31, $r33, $r34, $r36;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.lang.String $r3, $r6, $r8, $r45, $r47;
        gov.nist.javax.sip.message.SIPRequest $r5, $r7, $r48;
        javax.sip.TransactionState $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r23, $r25, $r26, $r28, $r29, $r30, $r32, $r43;
        int $i0, $i1, $i2;
        gov.nist.core.StackLogger $r35, $r40;
        java.lang.StringBuilder $r37, $r38, $r39, $r41, $r42, $r44, $r46;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        $r2 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r2.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label01;

        $r34 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r40 = virtualinvoke $r34.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SIPServerTransaction.fireTimeoutTimer this = ");

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r44 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" current state = ");

        $r43 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        $r42 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r43);

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" method = ");

        $r48 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r47 = virtualinvoke $r48.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $r46 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r40.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r45);

     label01:
        $r3 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.lang.String getMethod()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z1 == 0 goto label03;

        $r33 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z10 = virtualinvoke $r33.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean removeTransactionPendingAck(gov.nist.javax.sip.stack.SIPServerTransaction)>(r0);

        if $z10 == 0 goto label03;

        $r31 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z11 = virtualinvoke $r31.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z11 == 0 goto label02;

        $r36 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r35 = virtualinvoke $r36.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r35.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Found tx pending ACK - returning");

     label02:
        return;

     label03:
        r1 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPDialog dialog>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()>();

        $r5 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r6 = virtualinvoke $r5.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z2 = staticinvoke <gov.nist.javax.sip.stack.SIPTransactionStack: boolean isDialogCreated(java.lang.String)>($r6);

        if $z2 == 0 goto label06;

        $r29 = <javax.sip.TransactionState: javax.sip.TransactionState CALLING>;

        $r30 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        if $r29 == $r30 goto label04;

        $r28 = <javax.sip.TransactionState: javax.sip.TransactionState TRYING>;

        $r32 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        if $r28 != $r32 goto label06;

     label04:
        $i2 = <gov.nist.javax.sip.stack.SIPDialog: int TERMINATED_STATE>;

        virtualinvoke r1.<gov.nist.javax.sip.stack.SIPDialog: void setState(int)>($i2);

     label05:
        $r9 = <javax.sip.TransactionState: javax.sip.TransactionState COMPLETED>;

        $r10 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        if $r9 != $r10 goto label07;

        $z7 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isInviteTransaction()>();

        if $z7 == 0 goto label07;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void raiseErrorEvent(int)>(1);

        $r26 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)>($r26);

        $r27 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        virtualinvoke $r27.<gov.nist.javax.sip.stack.SIPTransactionStack: void removeTransaction(gov.nist.javax.sip.stack.SIPTransaction)>(r0);

        return;

     label06:
        $r7 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r8 = virtualinvoke $r7.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("BYE");

        if $z3 == 0 goto label05;

        if r1 == null goto label05;

        $z9 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPDialog: boolean isTerminatedOnBye()>();

        if $z9 == 0 goto label05;

        $i1 = <gov.nist.javax.sip.stack.SIPDialog: int TERMINATED_STATE>;

        virtualinvoke r1.<gov.nist.javax.sip.stack.SIPDialog: void setState(int)>($i1);

        goto label05;

     label07:
        $r11 = <javax.sip.TransactionState: javax.sip.TransactionState COMPLETED>;

        $r13 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        if $r11 != $r13 goto label08;

        $z8 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isInviteTransaction()>();

        if $z8 != 0 goto label08;

        $r25 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)>($r25);

        $r24 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        virtualinvoke $r24.<gov.nist.javax.sip.stack.SIPTransactionStack: void removeTransaction(gov.nist.javax.sip.stack.SIPTransaction)>(r0);

        return;

     label08:
        $r12 = <javax.sip.TransactionState: javax.sip.TransactionState CONFIRMED>;

        $r14 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        if $r12 != $r14 goto label09;

        $z6 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isInviteTransaction()>();

        if $z6 == 0 goto label09;

        $r23 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)>($r23);

        $r22 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        virtualinvoke $r22.<gov.nist.javax.sip.stack.SIPTransactionStack: void removeTransaction(gov.nist.javax.sip.stack.SIPTransaction)>(r0);

        return;

     label09:
        $z4 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isInviteTransaction()>();

        if $z4 != 0 goto label11;

        $r18 = <javax.sip.TransactionState: javax.sip.TransactionState COMPLETED>;

        $r17 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        if $r18 == $r17 goto label10;

        $r19 = <javax.sip.TransactionState: javax.sip.TransactionState CONFIRMED>;

        $r21 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        if $r19 != $r21 goto label11;

     label10:
        $r20 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)>($r20);

        return;

     label11:
        $z5 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isInviteTransaction()>();

        if $z5 == 0 goto label02;

        $r15 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        $r16 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        if $r15 != $r16 goto label02;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void raiseErrorEvent(int)>(1);

        if r1 == null goto label02;

        $i0 = <gov.nist.javax.sip.stack.SIPDialog: int TERMINATED_STATE>;

        virtualinvoke r1.<gov.nist.javax.sip.stack.SIPDialog: void setState(int)>($i0);

        return;
    }

    public gov.nist.javax.sip.stack.SIPServerTransaction getCanceledInviteTransaction()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0, $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction inviteTransaction>;

        return $r1;
    }

    public volatile javax.sip.ServerTransaction getCanceledInviteTransaction()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0, $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        $r1 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction getCanceledInviteTransaction()>();

        return $r1;
    }

    public javax.sip.Dialog getDialog()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        gov.nist.javax.sip.stack.SIPDialog $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPDialog dialog>;

        return $r1;
    }

    public gov.nist.javax.sip.message.SIPResponse getLastResponse()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        gov.nist.javax.sip.message.SIPResponse $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse lastResponse>;

        return $r1;
    }

    public gov.nist.javax.sip.message.SIPResponse getReliableProvisionalResponse()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        gov.nist.javax.sip.message.SIPResponse $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse pendingReliableResponse>;

        return $r1;
    }

    public gov.nist.javax.sip.stack.MessageChannel getResponseChannel()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        return r0;
    }

    public javax.sip.TransactionState getState()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        boolean $z0;
        javax.sip.TransactionState $r1, $r2, $r3, $r4;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        $z0 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isInviteTransaction()>();

        if $z0 == 0 goto label1;

        $r2 = <javax.sip.TransactionState: javax.sip.TransactionState TRYING>;

        $r3 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPTransaction: javax.sip.TransactionState getState()>();

        if $r2 != $r3 goto label1;

        $r4 = <javax.sip.TransactionState: javax.sip.TransactionState PROCEEDING>;

        return $r4;

     label1:
        $r1 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPTransaction: javax.sip.TransactionState getState()>();

        return $r1;
    }

    public java.lang.String getViaHost()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        gov.nist.javax.sip.stack.MessageChannel $r1;
        java.lang.String $r2;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        $r1 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.MessageChannel getMessageChannel()>();

        $r2 = virtualinvoke $r1.<gov.nist.javax.sip.stack.MessageChannel: java.lang.String getViaHost()>();

        return $r2;
    }

    public int getViaPort()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        gov.nist.javax.sip.stack.MessageChannel $r1;
        int $i0;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        $r1 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.MessageChannel getMessageChannel()>();

        $i0 = virtualinvoke $r1.<gov.nist.javax.sip.stack.MessageChannel: int getViaPort()>();

        return $i0;
    }

    public boolean isMessagePartOfTransaction(gov.nist.javax.sip.message.SIPMessage)
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        gov.nist.javax.sip.message.SIPMessage r1;
        java.lang.String r2, r5, r6, r7, r8, r9, $r16, $r18, $r20, $r24, $r30, $r32, $r37, $r38, $r41, $r52, $r53, $r56;
        gov.nist.javax.sip.header.ViaList r3, $r27, $r47, $r51;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21;
        gov.nist.javax.sip.header.Via r4, $r43, $r55;
        byte b0;
        javax.sip.header.CSeqHeader $r10, $r15, $r21, $r23, $r25, $r29, $r40;
        javax.sip.header.Header $r11, $r26, $r42, $r50;
        javax.sip.header.FromHeader $r12;
        javax.sip.header.ToHeader $r13;
        gov.nist.javax.sip.message.SIPRequest $r14, $r22, $r28, $r31, $r34, $r36, $r39, $r46, $r48;
        javax.sip.header.CallIdHeader $r17, $r19;
        long $l1, $l2;
        javax.sip.address.URI $r33, $r35;
        gov.nist.core.HostPort $r44, $r45, $r49, $r54;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        r1 := @parameter0: gov.nist.javax.sip.message.SIPMessage;

        $r10 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CSeqHeader getCSeq()>();

        r2 = interfaceinvoke $r10.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        $z11 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z11 != 0 goto label01;

        z9 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isTerminated()>();

        z0 = 0;

        if z9 != 0 goto label03;

     label01:
        r3 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ViaList getViaHeaders()>();

        z0 = 0;

        if r3 == null goto label03;

        $r11 = virtualinvoke r3.<gov.nist.javax.sip.header.ViaList: javax.sip.header.Header getFirst()>();

        r4 = (gov.nist.javax.sip.header.Via) $r11;

        r5 = virtualinvoke r4.<gov.nist.javax.sip.header.Via: java.lang.String getBranch()>();

        if r5 == null goto label02;

        $r56 = virtualinvoke r5.<java.lang.String: java.lang.String toLowerCase()>();

        $z20 = virtualinvoke $r56.<java.lang.String: boolean startsWith(java.lang.String)>("z9hg4bk");

        if $z20 != 0 goto label02;

        r5 = null;

     label02:
        if r5 == null goto label07;

        $r37 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.lang.String getBranch()>();

        if $r37 == null goto label07;

        $z15 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("CANCEL");

        if $z15 == 0 goto label05;

        $r52 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.lang.String getMethod()>();

        $z18 = virtualinvoke $r52.<java.lang.String: boolean equals(java.lang.Object)>("CANCEL");

        if $z18 == 0 goto label04;

        $r53 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.lang.String getBranch()>();

        $z19 = virtualinvoke $r53.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r5);

        if $z19 == 0 goto label04;

        $r49 = virtualinvoke r4.<gov.nist.javax.sip.header.Via: gov.nist.core.HostPort getSentBy()>();

        $r48 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r51 = virtualinvoke $r48.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.ViaList getViaHeaders()>();

        $r50 = virtualinvoke $r51.<gov.nist.javax.sip.header.ViaList: javax.sip.header.Header getFirst()>();

        $r55 = (gov.nist.javax.sip.header.Via) $r50;

        $r54 = virtualinvoke $r55.<gov.nist.javax.sip.header.Via: gov.nist.core.HostPort getSentBy()>();

        $z21 = virtualinvoke $r49.<gov.nist.core.HostPort: boolean equals(java.lang.Object)>($r54);

        if $z21 == 0 goto label04;

        z0 = 1;

     label03:
        return z0;

     label04:
        return 0;

     label05:
        $r38 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.lang.String getBranch()>();

        $z17 = virtualinvoke $r38.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r5);

        if $z17 == 0 goto label06;

        $r45 = virtualinvoke r4.<gov.nist.javax.sip.header.Via: gov.nist.core.HostPort getSentBy()>();

        $r46 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r47 = virtualinvoke $r46.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.ViaList getViaHeaders()>();

        $r42 = virtualinvoke $r47.<gov.nist.javax.sip.header.ViaList: javax.sip.header.Header getFirst()>();

        $r43 = (gov.nist.javax.sip.header.Via) $r42;

        $r44 = virtualinvoke $r43.<gov.nist.javax.sip.header.Via: gov.nist.core.HostPort getSentBy()>();

        $z16 = virtualinvoke $r45.<gov.nist.core.HostPort: boolean equals(java.lang.Object)>($r44);

        if $z16 == 0 goto label06;

        return 1;

     label06:
        return 0;

     label07:
        r6 = r0.<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String fromTag>;

        $r12 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.FromHeader getFrom()>();

        r7 = interfaceinvoke $r12.<javax.sip.header.FromHeader: java.lang.String getTag()>();

        if r6 == null goto label08;

        if r7 != null goto label12;

     label08:
        z1 = 1;

     label09:
        r8 = r0.<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String toTag>;

        $r13 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ToHeader getTo()>();

        r9 = interfaceinvoke $r13.<javax.sip.header.ToHeader: java.lang.String getTag()>();

        if r8 == null goto label10;

        if r9 != null goto label13;

     label10:
        z2 = 1;

     label11:
        z3 = r1 instanceof gov.nist.javax.sip.message.SIPResponse;

        $r15 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CSeqHeader getCSeq()>();

        $r16 = interfaceinvoke $r15.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        $z12 = virtualinvoke $r16.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("CANCEL");

        if $z12 == 0 goto label14;

        $r39 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r40 = virtualinvoke $r39.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CSeqHeader getCSeq()>();

        $r41 = interfaceinvoke $r40.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        $z14 = virtualinvoke $r41.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("CANCEL");

        if $z14 != 0 goto label14;

        return 0;

     label12:
        z1 = 0;

        goto label09;

     label13:
        z2 = 0;

        goto label11;

     label14:
        if z3 != 0 goto label15;

        $r36 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r35 = virtualinvoke $r36.<gov.nist.javax.sip.message.SIPRequest: javax.sip.address.URI getRequestURI()>();

        $r34 = (gov.nist.javax.sip.message.SIPRequest) r1;

        $r33 = virtualinvoke $r34.<gov.nist.javax.sip.message.SIPRequest: javax.sip.address.URI getRequestURI()>();

        z10 = virtualinvoke $r35.<java.lang.Object: boolean equals(java.lang.Object)>($r33);

        z0 = 0;

        if z10 == 0 goto label03;

     label15:
        if z1 != 0 goto label16;

        z0 = 0;

        if r6 == null goto label03;

        z4 = virtualinvoke r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r7);

        z0 = 0;

        if z4 == 0 goto label03;

     label16:
        if z2 != 0 goto label17;

        z0 = 0;

        if r8 == null goto label03;

        z5 = virtualinvoke r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r9);

        z0 = 0;

        if z5 == 0 goto label03;

     label17:
        $r14 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r19 = virtualinvoke $r14.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CallIdHeader getCallId()>();

        $r20 = interfaceinvoke $r19.<javax.sip.header.CallIdHeader: java.lang.String getCallId()>();

        $r17 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CallIdHeader getCallId()>();

        $r18 = interfaceinvoke $r17.<javax.sip.header.CallIdHeader: java.lang.String getCallId()>();

        z6 = virtualinvoke $r20.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r18);

        z0 = 0;

        if z6 == 0 goto label03;

        $r22 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r21 = virtualinvoke $r22.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CSeqHeader getCSeq()>();

        $l1 = interfaceinvoke $r21.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        $r25 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CSeqHeader getCSeq()>();

        $l2 = interfaceinvoke $r25.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        b0 = $l1 cmp $l2;

        z0 = 0;

        if b0 != 0 goto label03;

        $r23 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CSeqHeader getCSeq()>();

        $r24 = interfaceinvoke $r23.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        $z13 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>("CANCEL");

        if $z13 == 0 goto label18;

        $r31 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r30 = virtualinvoke $r31.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $r29 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CSeqHeader getCSeq()>();

        $r32 = interfaceinvoke $r29.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        z7 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>($r32);

        z0 = 0;

        if z7 == 0 goto label03;

     label18:
        $r28 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r27 = virtualinvoke $r28.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.ViaList getViaHeaders()>();

        $r26 = virtualinvoke $r27.<gov.nist.javax.sip.header.ViaList: javax.sip.header.Header getFirst()>();

        z8 = virtualinvoke r4.<gov.nist.javax.sip.header.Via: boolean equals(java.lang.Object)>($r26);

        z0 = 0;

        if z8 == 0 goto label03;

        return 1;
    }

    public boolean isRetransmissionAlertEnabled()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        $z0 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean retransmissionAlertEnabled>;

        return $z0;
    }

    public boolean isTransactionMapped()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        $z0 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isMapped>;

        return $z0;
    }

    protected void map()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        javax.sip.TransactionState r1, $r8;
        boolean $z0, $z1;
        gov.nist.javax.sip.stack.SIPTransactionStack $r2, $r3, $r5;
        java.util.Timer $r4, $r6;
        gov.nist.javax.sip.stack.SIPServerTransaction$SendTrying $r7;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        r1 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        if r1 == null goto label1;

        $r8 = <javax.sip.TransactionState: javax.sip.TransactionState TRYING>;

        if r1 != $r8 goto label2;

     label1:
        $z0 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isInviteTransaction()>();

        if $z0 == 0 goto label3;

        $z1 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isMapped>;

        if $z1 != 0 goto label3;

        $r3 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r4 = virtualinvoke $r3.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Timer getTimer()>();

        if $r4 == null goto label3;

        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isMapped> = 1;

        $r5 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r6 = virtualinvoke $r5.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Timer getTimer()>();

        $r7 = new gov.nist.javax.sip.stack.SIPServerTransaction$SendTrying;

        specialinvoke $r7.<gov.nist.javax.sip.stack.SIPServerTransaction$SendTrying: void <init>(gov.nist.javax.sip.stack.SIPServerTransaction)>(r0);

        virtualinvoke $r6.<java.util.Timer: void schedule(java.util.TimerTask,long)>($r7, 200L);

     label2:
        $r2 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        virtualinvoke $r2.<gov.nist.javax.sip.stack.SIPTransactionStack: void removePendingTransaction(gov.nist.javax.sip.stack.SIPServerTransaction)>(r0);

        return;

     label3:
        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isMapped> = 1;

        goto label2;
    }

    public boolean prackRecieved()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        gov.nist.javax.sip.message.SIPResponse $r1;
        gov.nist.javax.sip.stack.SIPServerTransaction$ProvisionalResponseTask $r2, $r4;
        java.util.concurrent.Semaphore $r3;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse pendingReliableResponse>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$ProvisionalResponseTask provisionalResponseTask>;

        if $r2 == null goto label2;

        $r4 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$ProvisionalResponseTask provisionalResponseTask>;

        virtualinvoke $r4.<gov.nist.javax.sip.stack.SIPServerTransaction$ProvisionalResponseTask: boolean cancel()>();

     label2:
        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse pendingReliableResponse> = null;

        $r3 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.util.concurrent.Semaphore provisionalResponseSem>;

        virtualinvoke $r3.<java.util.concurrent.Semaphore: void release()>();

        return 1;
    }

    public void processRequest(gov.nist.javax.sip.message.SIPRequest, gov.nist.javax.sip.stack.MessageChannel)
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        gov.nist.javax.sip.message.SIPRequest r1, $r9, $r15, $r38;
        gov.nist.javax.sip.stack.MessageChannel r2;
        java.io.IOException r3, $r98, $r102;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19;
        gov.nist.javax.sip.stack.SIPDialog r5;
        gov.nist.javax.sip.stack.SIPTransactionStack $r6, $r17, $r18, $r23, $r29, $r43, $r49, $r71, $r74, $r76, $r89, $r95, $r100, $r101;
        javax.sip.TransactionState $r7, $r11, $r13, $r21, $r27, $r31, $r33, $r34, $r45, $r46, $r51, $r58, $r59, $r66, $r69, $r70, $r75, $r77, $r91;
        java.lang.String $r8, $r10, $r14, $r16, $r25, $r32, $r36, $r37, $r55, $r60, $r63, $r65, $r78, $r83, $r85, $r96, $r103;
        java.lang.StringBuilder $r19, $r22, $r24, $r47, $r50, $r52, $r53, $r54, $r56, $r57, $r62, $r72, $r80, $r81, $r82, $r84, $r87, $r90, $r92, $r93, $r97;
        gov.nist.core.StackLogger $r20, $r26, $r48, $r73, $r86, $r94, $r99;
        gov.nist.javax.sip.message.SIPResponse $r28, $r44, $r61, $r64, $r88;
        gov.nist.javax.sip.stack.ServerRequestInterface $r30, $r35, $r39, $r40, $r41, $r42, $r67, $r68, $r79;
        int $i0;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        r1 := @parameter0: gov.nist.javax.sip.message.SIPRequest;

        r2 := @parameter1: gov.nist.javax.sip.stack.MessageChannel;

        $r6 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z2 = virtualinvoke $r6.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z2 == 0 goto label01;

        $r89 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r86 = virtualinvoke $r89.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r87 = new java.lang.StringBuilder;

        specialinvoke $r87.<java.lang.StringBuilder: void <init>()>();

        $r84 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processRequest: ");

        $r85 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getFirstLine()>();

        $r97 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r85);

        $r96 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r86.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r96);

        $r95 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r94 = virtualinvoke $r95.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r93 = new java.lang.StringBuilder;

        specialinvoke $r93.<java.lang.StringBuilder: void <init>()>();

        $r92 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tx state = ");

        $r91 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        $r90 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r91);

        $r103 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r94.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r103);

     label01:
        $r7 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        if $r7 != null goto label08;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setOriginalRequest(gov.nist.javax.sip.message.SIPRequest)>(r1);

        $r77 = <javax.sip.TransactionState: javax.sip.TransactionState TRYING>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)>($r77);

     label02:
        z1 = 1;

     label03:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setPassToListener()>();

        $z17 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isInviteTransaction()>();

        if $z17 == 0 goto label04;

        $z18 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isMapped>;

        if $z18 == 0 goto label04;

        $r88 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.message.SIPResponse createResponse(int,java.lang.String)>(100, "Trying");

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void sendMessage(gov.nist.javax.sip.message.SIPMessage)>($r88);

     label04:
        $r11 = <javax.sip.TransactionState: javax.sip.TransactionState COMPLETED>;

        $r13 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        if $r11 == $r13 goto label34;

        $r33 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        $r34 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        if $r33 == $r34 goto label34;

        $r39 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.ServerRequestInterface requestOf>;

        if $r39 == null goto label34;

        $r38 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r37 = virtualinvoke $r38.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $r36 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z10 = virtualinvoke $r37.<java.lang.String: boolean equals(java.lang.Object)>($r36);

        if $z10 == 0 goto label30;

     label05:
        if z1 == 0 goto label28;

     label06:
        $r40 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.ServerRequestInterface requestOf>;

        interfaceinvoke $r40.<gov.nist.javax.sip.stack.ServerRequestInterface: void processRequest(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.MessageChannel)>(r1, r0);

     label07:
        return;

     label08:
        $z3 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isInviteTransaction()>();

        if $z3 == 0 goto label18;

        $r70 = <javax.sip.TransactionState: javax.sip.TransactionState COMPLETED>;

        $r69 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        if $r70 != $r69 goto label18;

        $r65 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z13 = virtualinvoke $r65.<java.lang.String: boolean equals(java.lang.Object)>("ACK");

        if $z13 == 0 goto label18;

        $r66 = <javax.sip.TransactionState: javax.sip.TransactionState CONFIRMED>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)>($r66);

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void disableRetransmissionTimer()>();

        $z14 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isReliable()>();

        if $z14 != 0 goto label13;

        $i0 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: int TIMER_I>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void enableTimeoutTimer(int)>($i0);

     label09:
        $r74 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z16 = virtualinvoke $r74.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isNon2XXAckPassedToListener()>();

        if $z16 == 0 goto label15;

        $r79 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.ServerRequestInterface requestOf>;

        interfaceinvoke $r79.<gov.nist.javax.sip.stack.ServerRequestInterface: void processRequest(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.MessageChannel)>(r1, r0);

     label10:
        return;

     label11:
        $r102 := @caughtexception;

        r3 = $r102;

        $r101 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z19 = virtualinvoke $r101.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z19 == 0 goto label12;

        $r100 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r99 = virtualinvoke $r100.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r99.<gov.nist.core.StackLogger: void logError(java.lang.String,java.lang.Exception)>("IOException ", r3);

     label12:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void semRelease()>();

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void raiseIOExceptionEvent()>();

        return;

     label13:
        $r75 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)>($r75);

     label14:
        goto label09;

     label15:
        $r76 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z15 = virtualinvoke $r76.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z15 == 0 goto label16;

        $r71 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r73 = virtualinvoke $r71.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        $r82 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ACK received for server Tx ");

        $r83 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.lang.String getTransactionId()>();

        $r80 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r83);

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not delivering to application!");

        $r78 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r73.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r78);

     label16:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void semRelease()>();

     label17:
        return;

     label18:
        $r8 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $r9 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r10 = virtualinvoke $r9.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r10);

     label19:
        z1 = 0;

        if z0 == 0 goto label04;

     label20:
        $r46 = <javax.sip.TransactionState: javax.sip.TransactionState PROCEEDING>;

        $r45 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        if $r46 == $r45 goto label21;

        $r58 = <javax.sip.TransactionState: javax.sip.TransactionState COMPLETED>;

        $r59 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        if $r58 != $r59 goto label24;

     label21:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void semRelease()>();

        $r44 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse lastResponse>;

        if $r44 == null goto label22;

        $r64 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse lastResponse>;

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPTransaction: void sendMessage(gov.nist.javax.sip.message.SIPMessage)>($r64);

     label22:
        $r43 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z11 = virtualinvoke $r43.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z11 == 0 goto label49;

        $r49 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r48 = virtualinvoke $r49.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("completed processing retransmitted request : ");

        $r55 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getFirstLine()>();

        $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r50 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" txState = ");

        $r51 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getState()>();

        $r52 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r51);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" lastResponse = ");

        $r61 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse getLastResponse()>();

        $r62 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r61);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r48.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r63);

     label23:
        return;

     label24:
        $r60 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z12 = virtualinvoke $r60.<java.lang.String: boolean equals(java.lang.Object)>("ACK");

        if $z12 == 0 goto label22;

        $r68 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.ServerRequestInterface requestOf>;

        if $r68 == null goto label26;

        $r67 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.ServerRequestInterface requestOf>;

        interfaceinvoke $r67.<gov.nist.javax.sip.stack.ServerRequestInterface: void processRequest(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.MessageChannel)>(r1, r0);

     label25:
        goto label22;

     label26:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void semRelease()>();

     label27:
        goto label22;

     label28:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void semRelease()>();

     label29:
        return;

     label30:
        $r42 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.ServerRequestInterface requestOf>;

        if $r42 == null goto label32;

        $r41 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.ServerRequestInterface requestOf>;

        interfaceinvoke $r41.<gov.nist.javax.sip.stack.ServerRequestInterface: void processRequest(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.MessageChannel)>(r1, r0);

     label31:
        return;

     label32:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void semRelease()>();

     label33:
        return;

     label34:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()>();

        $r15 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r14 = virtualinvoke $r15.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z4 = staticinvoke <gov.nist.javax.sip.stack.SIPTransactionStack: boolean isDialogCreated(java.lang.String)>($r14);

        if $z4 == 0 goto label44;

        $r27 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        $r31 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        if $r27 != $r31 goto label44;

        $r32 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z8 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>("ACK");

        if $z8 == 0 goto label44;

        $r30 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.ServerRequestInterface requestOf>;

        if $r30 == null goto label44;

        r5 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPDialog dialog>;

     label35:
        if r5 == null goto label37;

     label36:
        $z9 = r5.<gov.nist.javax.sip.stack.SIPDialog: boolean ackProcessed>;

        if $z9 != 0 goto label42;

     label37:
        if r5 == null goto label39;

     label38:
        virtualinvoke r5.<gov.nist.javax.sip.stack.SIPDialog: void ackReceived(gov.nist.javax.sip.message.SIPRequest)>(r1);

        r5.<gov.nist.javax.sip.stack.SIPDialog: boolean ackProcessed> = 1;

     label39:
        $r35 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.ServerRequestInterface requestOf>;

        interfaceinvoke $r35.<gov.nist.javax.sip.stack.ServerRequestInterface: void processRequest(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.MessageChannel)>(r1, r0);

     label40:
        $r17 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z6 = virtualinvoke $r17.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z6 == 0 goto label49;

        $r18 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r20 = virtualinvoke $r18.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dropping request ");

        $r21 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r20.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r25);

     label41:
        return;

     label42:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void semRelease()>();

     label43:
        goto label40;

     label44:
        $r16 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z5 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>("CANCEL");

        if $z5 == 0 goto label40;

        $r23 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z7 = virtualinvoke $r23.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z7 == 0 goto label45;

        $r29 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r26 = virtualinvoke $r29.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r26.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Too late to cancel Transaction");

     label45:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void semRelease()>();

     label46:
        $r28 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.message.SIPResponse createResponse(int)>(200);

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void sendMessage(gov.nist.javax.sip.message.SIPMessage)>($r28);

     label47:
        goto label40;

     label48:
        $r98 := @caughtexception;

        goto label40;

     label49:
        return;

        catch java.io.IOException from label01 to label02 with label11;
        catch java.io.IOException from label03 to label04 with label11;
        catch java.io.IOException from label04 to label05 with label11;
        catch java.io.IOException from label06 to label07 with label11;
        catch java.io.IOException from label08 to label09 with label11;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.io.IOException from label13 to label14 with label11;
        catch java.io.IOException from label15 to label16 with label11;
        catch java.io.IOException from label16 to label17 with label11;
        catch java.io.IOException from label18 to label19 with label11;
        catch java.io.IOException from label20 to label21 with label11;
        catch java.io.IOException from label21 to label22 with label11;
        catch java.io.IOException from label22 to label23 with label11;
        catch java.io.IOException from label24 to label25 with label11;
        catch java.io.IOException from label26 to label27 with label11;
        catch java.io.IOException from label28 to label29 with label11;
        catch java.io.IOException from label30 to label31 with label11;
        catch java.io.IOException from label32 to label33 with label11;
        catch java.io.IOException from label34 to label35 with label11;
        catch java.io.IOException from label36 to label37 with label11;
        catch java.io.IOException from label38 to label39 with label11;
        catch java.io.IOException from label39 to label40 with label11;
        catch java.io.IOException from label40 to label41 with label11;
        catch java.io.IOException from label42 to label43 with label11;
        catch java.io.IOException from label44 to label45 with label11;
        catch java.io.IOException from label45 to label46 with label11;
        catch java.io.IOException from label46 to label47 with label48;
    }

    public void releaseSem()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0, $r2, $r4;
        gov.nist.javax.sip.stack.SIPClientTransaction $r1, $r5;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPClientTransaction pendingSubscribeTransaction>;

        if $r1 == null goto label2;

        $r5 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPClientTransaction pendingSubscribeTransaction>;

        virtualinvoke $r5.<gov.nist.javax.sip.stack.SIPClientTransaction: void releaseSem()>();

     label1:
        specialinvoke r0.<gov.nist.javax.sip.stack.SIPTransaction: void releaseSem()>();

        return;

     label2:
        $r2 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction inviteTransaction>;

        if $r2 == null goto label1;

        $r3 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.lang.String getMethod()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("CANCEL");

        if $z0 == 0 goto label1;

        $r4 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction inviteTransaction>;

        virtualinvoke $r4.<gov.nist.javax.sip.stack.SIPServerTransaction: void releaseSem()>();

        goto label1;
    }

    public void scheduleAckRemoval() throws java.lang.IllegalStateException
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        java.lang.StringBuilder r1, $r3, $r6, $r7, $r9, $r10;
        boolean z0, $z1;
        java.lang.String $r2, $r4, $r8, $r11, $r12;
        java.lang.IllegalStateException $r5;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        $r2 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.lang.String getMethod()>();

        if $r2 == null goto label1;

        $r12 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.lang.String getMethod()>();

        $z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("ACK");

        if $z1 != 0 goto label4;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Method is null[");

        $r4 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.lang.String getMethod()>();

        if $r4 != null goto label3;

        z0 = 1;

     label2:
        $r5 = new java.lang.IllegalStateException;

        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] or method is not ACK[");

        $r8 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.lang.String getMethod()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r5;

     label3:
        z0 = 0;

        goto label2;

     label4:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void startTransactionTimer()>();

        return;
    }

    public void sendMessage(gov.nist.javax.sip.message.SIPMessage) throws java.io.IOException
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        gov.nist.javax.sip.message.SIPMessage r1;
        java.lang.Throwable r2, $r51;
        gov.nist.javax.sip.message.SIPResponse r3;
        int i0, $i1, $i2, $i3;
        java.text.ParseException r4, $r50;
        javax.sip.TransactionState r5, r6, $r18, $r19, $r20, $r21, $r27, $r30, $r33, $r34, $r37, $r38, $r41, $r42, $r43, $r44, $r49;
        java.io.IOException r7, $r45;
        gov.nist.javax.sip.message.SIPRequest $r8, $r12, $r15;
        gov.nist.javax.sip.header.Via $r9, $r11, $r13, $r47, $r48;
        java.lang.String $r10, $r16, $r17, $r32, $r46;
        javax.sip.header.CSeqHeader $r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        gov.nist.javax.sip.stack.SIPTransactionStack $r22, $r23;
        java.lang.StringBuilder $r24, $r26, $r28, $r29, $r31;
        gov.nist.core.StackLogger $r25;
        gov.nist.javax.sip.stack.SIPDialog $r35, $r36, $r39, $r40;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        r1 := @parameter0: gov.nist.javax.sip.message.SIPMessage;

     label01:
        r3 = (gov.nist.javax.sip.message.SIPResponse) r1;

        i0 = virtualinvoke r3.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

     label02:
        $r8 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r9 = virtualinvoke $r8.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.Via getTopmostVia()>();

        $r10 = virtualinvoke $r9.<gov.nist.javax.sip.header.Via: java.lang.String getBranch()>();

        if $r10 == null goto label06;

        $r47 = virtualinvoke r3.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.Via getTopmostVia()>();

        $r46 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.lang.String getBranch()>();

        virtualinvoke $r47.<gov.nist.javax.sip.header.Via: void setBranch(java.lang.String)>($r46);

     label03:
        $r12 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r13 = virtualinvoke $r12.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.Via getTopmostVia()>();

        $z0 = virtualinvoke $r13.<gov.nist.javax.sip.header.Via: boolean hasPort()>();

        if $z0 != 0 goto label04;

        $r48 = virtualinvoke r3.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.Via getTopmostVia()>();

        virtualinvoke $r48.<gov.nist.javax.sip.header.Via: void removePort()>();

     label04:
        $r14 = virtualinvoke r3.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        $r16 = interfaceinvoke $r14.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        $r15 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r17 = virtualinvoke $r15.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z1 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z1 != 0 goto label12;

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void sendResponse(gov.nist.javax.sip.message.SIPResponse)>(r3);

     label05:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void startTransactionTimer()>();

        return;

     label06:
        $r11 = virtualinvoke r3.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.Via getTopmostVia()>();

        virtualinvoke $r11.<gov.nist.javax.sip.header.Via: void removeParameter(java.lang.String)>("branch");

     label07:
        goto label03;

     label08:
        $r50 := @caughtexception;

        r4 = $r50;

     label09:
        virtualinvoke r4.<java.text.ParseException: void printStackTrace()>();

     label10:
        goto label04;

     label11:
        $r51 := @caughtexception;

        r2 = $r51;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void startTransactionTimer()>();

        throw r2;

     label12:
        $r19 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        $r18 = <javax.sip.TransactionState: javax.sip.TransactionState TRYING>;

        if $r19 != $r18 goto label28;

        $i3 = i0 / 100;

        if $i3 != 1 goto label18;

        $r42 = <javax.sip.TransactionState: javax.sip.TransactionState PROCEEDING>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)>($r42);

     label13:
        $r22 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z2 = virtualinvoke $r22.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z2 == 0 goto label14;

        $r23 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r25 = virtualinvoke $r23.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendMessage : tx = ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r26 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" getState = ");

        $r27 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getState()>();

        $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r27);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r25.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r32);

     label14:
        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse lastResponse> = r3;

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void sendResponse(gov.nist.javax.sip.message.SIPResponse)>(r3);

     label15:
        goto label05;

     label16:
        $r45 := @caughtexception;

        r7 = $r45;

     label17:
        $r49 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)>($r49);

        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: int collectionTime> = 0;

        throw r7;

     label18:
        if 200 > i0 goto label13;

        if i0 > 699 goto label13;

     label19:
        $z6 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isInviteTransaction()>();

        if $z6 != 0 goto label23;

        $z8 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isReliable()>();

        if $z8 != 0 goto label21;

        $r43 = <javax.sip.TransactionState: javax.sip.TransactionState COMPLETED>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)>($r43);

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void enableTimeoutTimer(int)>(64);

     label20:
        goto label13;

     label21:
        $r44 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)>($r44);

     label22:
        goto label13;

     label23:
        $i2 = i0 / 100;

        if $i2 != 2 goto label25;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void disableRetransmissionTimer()>();

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void disableTimeoutTimer()>();

        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: int collectionTime> = 64;

        $r41 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)>($r41);

        $r40 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPDialog dialog>;

        if $r40 == null goto label13;

        $r39 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPDialog dialog>;

        virtualinvoke $r39.<gov.nist.javax.sip.stack.SIPDialog: void setRetransmissionTicks()>();

     label24:
        goto label13;

     label25:
        $r38 = <javax.sip.TransactionState: javax.sip.TransactionState COMPLETED>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)>($r38);

        $z7 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isReliable()>();

        if $z7 != 0 goto label26;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void enableRetransmissionTimer()>();

     label26:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void enableTimeoutTimer(int)>(64);

     label27:
        goto label13;

     label28:
        $r21 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        $r20 = <javax.sip.TransactionState: javax.sip.TransactionState PROCEEDING>;

        if $r21 != $r20 goto label39;

        $z3 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isInviteTransaction()>();

        if $z3 == 0 goto label34;

        $i1 = i0 / 100;

        if $i1 != 2 goto label30;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void disableRetransmissionTimer()>();

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void disableTimeoutTimer()>();

        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: int collectionTime> = 64;

        $r37 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)>($r37);

        $r35 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPDialog dialog>;

        if $r35 == null goto label13;

        $r36 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPDialog dialog>;

        virtualinvoke $r36.<gov.nist.javax.sip.stack.SIPDialog: void setRetransmissionTicks()>();

     label29:
        goto label13;

     label30:
        if 300 > i0 goto label13;

        if i0 > 699 goto label13;

     label31:
        $r33 = <javax.sip.TransactionState: javax.sip.TransactionState COMPLETED>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)>($r33);

        $z5 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isReliable()>();

        if $z5 != 0 goto label32;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void enableRetransmissionTimer()>();

     label32:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void enableTimeoutTimer(int)>(64);

     label33:
        goto label13;

     label34:
        if 200 > i0 goto label13;

        if i0 > 699 goto label13;

     label35:
        $r30 = <javax.sip.TransactionState: javax.sip.TransactionState COMPLETED>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)>($r30);

        $z4 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isReliable()>();

        if $z4 != 0 goto label37;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void disableRetransmissionTimer()>();

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void enableTimeoutTimer(int)>(64);

     label36:
        goto label13;

     label37:
        $r34 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)>($r34);

     label38:
        goto label13;

     label39:
        r5 = <javax.sip.TransactionState: javax.sip.TransactionState COMPLETED>;

        r6 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

     label40:
        if r5 != r6 goto label13;

        goto label05;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.text.ParseException from label02 to label03 with label08;
        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.text.ParseException from label03 to label04 with label08;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.text.ParseException from label06 to label07 with label08;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.io.IOException from label13 to label14 with label16;
        catch java.lang.Throwable from label13 to label14 with label11;
        catch java.io.IOException from label14 to label15 with label16;
        catch java.lang.Throwable from label14 to label15 with label11;
        catch java.lang.Throwable from label17 to label18 with label11;
        catch java.lang.Throwable from label19 to label20 with label11;
        catch java.lang.Throwable from label21 to label22 with label11;
        catch java.lang.Throwable from label23 to label24 with label11;
        catch java.lang.Throwable from label25 to label26 with label11;
        catch java.lang.Throwable from label26 to label27 with label11;
        catch java.lang.Throwable from label28 to label29 with label11;
        catch java.lang.Throwable from label31 to label32 with label11;
        catch java.lang.Throwable from label32 to label33 with label11;
        catch java.lang.Throwable from label35 to label36 with label11;
        catch java.lang.Throwable from label37 to label38 with label11;
        catch java.lang.Throwable from label39 to label40 with label11;
    }

    protected void sendReliableProvisionalResponse(javax.sip.message.Response) throws javax.sip.SipException
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        javax.sip.message.Response r1;
        gov.nist.javax.sip.header.RSeq r2, $r17;
        java.lang.Exception r3, $r19;
        gov.nist.javax.sip.message.SIPResponse $r4, $r5, $r8;
        javax.sip.header.Header $r6, $r7;
        int $i0, $i1, $i2;
        long $l3;
        javax.sip.Dialog $r9;
        gov.nist.javax.sip.message.SIPMessage $r10;
        gov.nist.javax.sip.stack.SIPServerTransaction$ProvisionalResponseTask $r11, $r15;
        java.util.Timer $r12;
        gov.nist.javax.sip.stack.SIPTransactionStack $r13;
        java.util.concurrent.TimeUnit $r14;
        boolean $z0;
        java.util.concurrent.Semaphore $r16;
        javax.sip.SipException $r18, $r20;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        r1 := @parameter0: javax.sip.message.Response;

        $r4 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse pendingReliableResponse>;

        if $r4 == null goto label1;

        $r20 = new javax.sip.SipException;

        specialinvoke $r20.<javax.sip.SipException: void <init>(java.lang.String)>("Unacknowledged response");

        throw $r20;

     label1:
        $r5 = (gov.nist.javax.sip.message.SIPResponse) r1;

        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse pendingReliableResponse> = $r5;

        $r6 = interfaceinvoke r1.<javax.sip.message.Response: javax.sip.header.Header getHeader(java.lang.String)>("RSeq");

        r2 = (gov.nist.javax.sip.header.RSeq) $r6;

        $r7 = interfaceinvoke r1.<javax.sip.message.Response: javax.sip.header.Header getHeader(java.lang.String)>("RSeq");

        if $r7 != null goto label2;

        $r17 = new gov.nist.javax.sip.header.RSeq;

        specialinvoke $r17.<gov.nist.javax.sip.header.RSeq: void <init>()>();

        r2 = $r17;

        interfaceinvoke r1.<javax.sip.message.Response: void setHeader(javax.sip.header.Header)>(r2);

     label2:
        $i0 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: int rseqNumber>;

        $i1 = 1 + $i0;

        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: int rseqNumber> = $i1;

        $i2 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: int rseqNumber>;

        $l3 = (long) $i2;

        virtualinvoke r2.<gov.nist.javax.sip.header.RSeq: void setSeqNumber(long)>($l3);

        $r8 = (gov.nist.javax.sip.message.SIPResponse) r1;

        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse lastResponse> = $r8;

        $r9 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.Dialog getDialog()>();

        if $r9 == null goto label4;

        $r16 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.util.concurrent.Semaphore provisionalResponseSem>;

        $r14 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $z0 = virtualinvoke $r16.<java.util.concurrent.Semaphore: boolean tryAcquire(long,java.util.concurrent.TimeUnit)>(1L, $r14);

        if $z0 != 0 goto label4;

        $r18 = new javax.sip.SipException;

        specialinvoke $r18.<javax.sip.SipException: void <init>(java.lang.String)>("Unacknowledged response");

        throw $r18;

     label3:
        $r19 := @caughtexception;

        r3 = $r19;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r3);

        return;

     label4:
        $r10 = (gov.nist.javax.sip.message.SIPMessage) r1;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void sendMessage(gov.nist.javax.sip.message.SIPMessage)>($r10);

        $r11 = new gov.nist.javax.sip.stack.SIPServerTransaction$ProvisionalResponseTask;

        specialinvoke $r11.<gov.nist.javax.sip.stack.SIPServerTransaction$ProvisionalResponseTask: void <init>(gov.nist.javax.sip.stack.SIPServerTransaction)>(r0);

        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$ProvisionalResponseTask provisionalResponseTask> = $r11;

        $r13 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r12 = virtualinvoke $r13.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Timer getTimer()>();

        $r15 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$ProvisionalResponseTask provisionalResponseTask>;

        virtualinvoke $r12.<java.util.Timer: void schedule(java.util.TimerTask,long,long)>($r15, 0L, 500L);

     label5:
        return;

        catch java.lang.Exception from label2 to label3 with label3;
        catch java.lang.Exception from label4 to label5 with label3;
    }

    public void sendResponse(javax.sip.message.Response) throws javax.sip.SipException
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        javax.sip.message.Response r1;
        gov.nist.javax.sip.message.SIPResponse r2, $r19, $r21, $r24, $r26, $r28, $r38, $r80, $r87, $r90;
        gov.nist.javax.sip.stack.SIPDialog r3;
        java.text.ParseException r4, r5, $r117, $r120;
        java.io.IOException r6, $r113;
        java.lang.String r7, r8, $r14, $r16, $r17, $r27, $r43, $r48, $r50, $r53, $r54, $r55, $r58, $r61, $r62, $r63, $r64, $r66, $r67, $r68, $r69, $r75, $r76, $r78, $r85, $r88, $r91, $r110, $r119, $r125;
        javax.sip.DialogState r9, $r37, $r42;
        javax.sip.DialogTerminatedEvent r10, $r41;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z13, $z14, $z15, $z16, $z17;
        java.lang.Exception r11, $r102;
        gov.nist.javax.sip.header.Expires r12, r13;
        javax.sip.header.CSeqHeader $r15, $r52, $r92;
        gov.nist.javax.sip.message.SIPMessage $r18;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        javax.sip.message.Request $r20;
        javax.sip.header.FromHeader $r22, $r44;
        gov.nist.javax.sip.message.SIPRequest $r23, $r105;
        gov.nist.javax.sip.stack.SIPTransactionStack $r25, $r30, $r35, $r46, $r101, $r111, $r114, $r121, $r124;
        gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask $r29, $r32, $r33;
        java.util.concurrent.ConcurrentHashMap $r31;
        java.util.Timer $r34;
        gov.nist.javax.sip.SipProviderImpl $r39, $r40;
        gov.nist.core.StackLogger $r45, $r112, $r116, $r123;
        javax.sip.header.CallIdHeader $r47, $r49;
        javax.sip.SipException $r51, $r56, $r60, $r93, $r94, $r97, $r98, $r100, $r103, $r109, $r118, $r126;
        java.lang.StringBuilder $r59, $r65, $r70, $r71, $r72;
        gov.nist.javax.sip.stack.SIPServerTransaction$ProvisionalResponseTask $r73;
        gov.nist.javax.sip.Utils $r74;
        javax.sip.header.ToHeader $r77, $r79;
        gov.nist.javax.sip.header.ContentType $r81, $r86, $r89;
        javax.sip.TransactionState $r82, $r83, $r115, $r122;
        javax.sip.Dialog $r84;
        java.util.concurrent.Semaphore $r95;
        java.util.concurrent.TimeUnit $r96;
        java.lang.NullPointerException $r99;
        javax.sip.header.Header $r104, $r106;
        javax.sip.header.ExpiresHeader $r107, $r108;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        r1 := @parameter0: javax.sip.message.Response;

        r2 = (gov.nist.javax.sip.message.SIPResponse) r1;

        r3 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPDialog dialog>;

        if r1 != null goto label01;

        $r99 = new java.lang.NullPointerException;

        specialinvoke $r99.<java.lang.NullPointerException: void <init>(java.lang.String)>("null response");

        throw $r99;

     label01:
        virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: void checkHeaders()>();

     label02:
        $r15 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        $r14 = interfaceinvoke $r15.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        $r16 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.lang.String getMethod()>();

        $z1 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z1 != 0 goto label04;

        $r100 = new javax.sip.SipException;

        specialinvoke $r100.<javax.sip.SipException: void <init>(java.lang.String)>("CSeq method does not match Request method of request that created the tx.");

        throw $r100;

     label03:
        $r117 := @caughtexception;

        r4 = $r117;

        $r118 = new javax.sip.SipException;

        $r119 = virtualinvoke r4.<java.text.ParseException: java.lang.String getMessage()>();

        specialinvoke $r118.<javax.sip.SipException: void <init>(java.lang.String)>($r119);

        throw $r118;

     label04:
        $r17 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.lang.String getMethod()>();

        $z2 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>("SUBSCRIBE");

        if $z2 == 0 goto label06;

        $i11 = interfaceinvoke r1.<javax.sip.message.Response: int getStatusCode()>();

        $i10 = $i11 / 100;

        if $i10 != 2 goto label06;

        $r106 = interfaceinvoke r1.<javax.sip.message.Response: javax.sip.header.Header getHeader(java.lang.String)>("Expires");

        if $r106 != null goto label05;

        $r97 = new javax.sip.SipException;

        specialinvoke $r97.<javax.sip.SipException: void <init>(java.lang.String)>("Expires header is mandatory in 2xx response of SUBSCRIBE");

        throw $r97;

     label05:
        $r105 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r108 = virtualinvoke $r105.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.ExpiresHeader getExpires()>();

        r13 = (gov.nist.javax.sip.header.Expires) $r108;

        $r107 = interfaceinvoke r1.<javax.sip.message.Response: javax.sip.header.ExpiresHeader getExpires()>();

        r12 = (gov.nist.javax.sip.header.Expires) $r107;

        if r13 == null goto label06;

        $i9 = virtualinvoke r12.<gov.nist.javax.sip.header.Expires: int getExpires()>();

        $i8 = virtualinvoke r13.<gov.nist.javax.sip.header.Expires: int getExpires()>();

        if $i9 <= $i8 goto label06;

        $r98 = new javax.sip.SipException;

        specialinvoke $r98.<javax.sip.SipException: void <init>(java.lang.String)>("Response Expires time exceeds request Expires time : See RFC 3265 3.1.1");

        throw $r98;

     label06:
        $i0 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

        if $i0 != 200 goto label07;

        $r92 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        $r91 = interfaceinvoke $r92.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        $z14 = virtualinvoke $r91.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z14 == 0 goto label07;

        $r104 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.Header getHeader(java.lang.String)>("Contact");

        if $r104 != null goto label07;

        $r103 = new javax.sip.SipException;

        specialinvoke $r103.<javax.sip.SipException: void <init>(java.lang.String)>("Contact Header is mandatory for the OK to the INVITE");

        throw $r103;

     label07:
        $r18 = (gov.nist.javax.sip.message.SIPMessage) r1;

        $z3 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isMessagePartOfTransaction(gov.nist.javax.sip.message.SIPMessage)>($r18);

        if $z3 != 0 goto label08;

        $r93 = new javax.sip.SipException;

        specialinvoke $r93.<javax.sip.SipException: void <init>(java.lang.String)>("Response does not belong to this transaction.");

        throw $r93;

     label08:
        $r19 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse pendingReliableResponse>;

        if $r19 == null goto label18;

        $r84 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.Dialog getDialog()>();

        if $r84 == null goto label18;

        $r82 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getState()>();

        $r83 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        if $r82 == $r83 goto label18;

        $r80 = (gov.nist.javax.sip.message.SIPResponse) r1;

        $r81 = virtualinvoke $r80.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.ContentType getContentTypeHeader()>();

        if $r81 == null goto label18;

        $i6 = interfaceinvoke r1.<javax.sip.message.Response: int getStatusCode()>();

        $i7 = $i6 / 100;

        if $i7 != 2 goto label18;

        $r90 = (gov.nist.javax.sip.message.SIPResponse) r1;

        $r89 = virtualinvoke $r90.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.ContentType getContentTypeHeader()>();

        $r88 = virtualinvoke $r89.<gov.nist.javax.sip.header.ContentType: java.lang.String getContentType()>();

        $z13 = virtualinvoke $r88.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("application");

        if $z13 == 0 goto label18;

        $r87 = (gov.nist.javax.sip.message.SIPResponse) r1;

        $r86 = virtualinvoke $r87.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.ContentType getContentTypeHeader()>();

        $r85 = virtualinvoke $r86.<gov.nist.javax.sip.header.ContentType: java.lang.String getContentSubType()>();

        z0 = virtualinvoke $r85.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("sdp");

     label09:
        if z0 == 0 goto label18;

     label10:
        $r95 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.util.concurrent.Semaphore provisionalResponseSem>;

        $r96 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $z15 = virtualinvoke $r95.<java.util.concurrent.Semaphore: boolean tryAcquire(long,java.util.concurrent.TimeUnit)>(1L, $r96);

        if $z15 != 0 goto label13;

        $r94 = new javax.sip.SipException;

        specialinvoke $r94.<javax.sip.SipException: void <init>(java.lang.String)>("cannot send response -- unacked povisional");

        throw $r94;

     label11:
        $r102 := @caughtexception;

        r11 = $r102;

     label12:
        $r101 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r116 = virtualinvoke $r101.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r116.<gov.nist.core.StackLogger: void logError(java.lang.String,java.lang.Exception)>("Could not acquire PRACK sem ", r11);

     label13:
        if r3 == null goto label25;

     label14:
        $i5 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

        $i4 = $i5 / 100;

        if $i4 != 2 goto label15;

        $r52 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        $r53 = interfaceinvoke $r52.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        $z8 = staticinvoke <gov.nist.javax.sip.stack.SIPTransactionStack: boolean isDialogCreated(java.lang.String)>($r53);

        if $z8 == 0 goto label15;

        $r54 = virtualinvoke r3.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        if $r54 != null goto label22;

        $r79 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.ToHeader getTo()>();

        $r76 = interfaceinvoke $r79.<javax.sip.header.ToHeader: java.lang.String getTag()>();

        if $r76 != null goto label22;

        $r77 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.ToHeader getTo()>();

        $r74 = staticinvoke <gov.nist.javax.sip.Utils: gov.nist.javax.sip.Utils getInstance()>();

        $r75 = virtualinvoke $r74.<gov.nist.javax.sip.Utils: java.lang.String generateTag()>();

        interfaceinvoke $r77.<javax.sip.header.ToHeader: void setTag(java.lang.String)>($r75);

     label15:
        $r47 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CallIdHeader getCallId()>();

        $r48 = interfaceinvoke $r47.<javax.sip.header.CallIdHeader: java.lang.String getCallId()>();

        $r49 = virtualinvoke r3.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.header.CallIdHeader getCallId()>();

        $r55 = interfaceinvoke $r49.<javax.sip.header.CallIdHeader: java.lang.String getCallId()>();

        $z9 = virtualinvoke $r48.<java.lang.String: boolean equals(java.lang.Object)>($r55);

        if $z9 != 0 goto label25;

        $r56 = new javax.sip.SipException;

        specialinvoke $r56.<javax.sip.SipException: void <init>(java.lang.String)>("Dialog mismatch!");

        throw $r56;

     label16:
        $r113 := @caughtexception;

        r6 = $r113;

        $r114 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z16 = virtualinvoke $r114.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z16 == 0 goto label17;

        $r124 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r123 = virtualinvoke $r124.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r123.<gov.nist.core.StackLogger: void logException(java.lang.Throwable)>(r6);

     label17:
        $r115 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)>($r115);

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void raiseErrorEvent(int)>(2);

        $r126 = new javax.sip.SipException;

        $r125 = virtualinvoke r6.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r126.<javax.sip.SipException: void <init>(java.lang.String)>($r125);

        throw $r126;

     label18:
        $r21 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse pendingReliableResponse>;

        if $r21 == null goto label13;

        $z11 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: boolean isFinalResponse()>();

        if $z11 == 0 goto label13;

        $r73 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$ProvisionalResponseTask provisionalResponseTask>;

        virtualinvoke $r73.<gov.nist.javax.sip.stack.SIPServerTransaction$ProvisionalResponseTask: boolean cancel()>();

        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$ProvisionalResponseTask provisionalResponseTask> = null;

     label19:
        goto label13;

     label20:
        $r120 := @caughtexception;

        r5 = $r120;

        $r121 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z17 = virtualinvoke $r121.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z17 == 0 goto label21;

        $r111 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r112 = virtualinvoke $r111.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r112.<gov.nist.core.StackLogger: void logException(java.lang.Throwable)>(r5);

     label21:
        $r122 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)>($r122);

        $r109 = new javax.sip.SipException;

        $r110 = virtualinvoke r5.<java.text.ParseException: java.lang.String getMessage()>();

        specialinvoke $r109.<javax.sip.SipException: void <init>(java.lang.String)>($r110);

        throw $r109;

     label22:
        $r62 = virtualinvoke r3.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        if $r62 == null goto label24;

        $r67 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getToTag()>();

        if $r67 != null goto label24;

        $r78 = virtualinvoke r3.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: void setToTag(java.lang.String)>($r78);

     label23:
        goto label15;

     label24:
        $r61 = virtualinvoke r3.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        if $r61 == null goto label15;

        $r64 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getToTag()>();

        if $r64 == null goto label15;

        $r63 = virtualinvoke r3.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        $r58 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getToTag()>();

        $z10 = virtualinvoke $r63.<java.lang.String: boolean equals(java.lang.Object)>($r58);

        if $z10 != 0 goto label15;

        $r60 = new javax.sip.SipException;

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r70 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Tag mismatch dialogTag is ");

        $r69 = virtualinvoke r3.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        $r72 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r69);

        $r71 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" responseTag is ");

        $r66 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getToTag()>();

        $r65 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r66);

        $r68 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r60.<javax.sip.SipException: void <init>(java.lang.String)>($r68);

        throw $r60;

     label25:
        $r20 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.message.Request getRequest()>();

        $r23 = (gov.nist.javax.sip.message.SIPRequest) $r20;

        $r22 = virtualinvoke $r23.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.FromHeader getFrom()>();

        r7 = interfaceinvoke $r22.<javax.sip.header.FromHeader: java.lang.String getTag()>();

     label26:
        if r7 == null goto label28;

     label27:
        $r43 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getFromTag()>();

        if $r43 == null goto label28;

        $r50 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getFromTag()>();

        $z7 = virtualinvoke $r50.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z7 != 0 goto label28;

        $r51 = new javax.sip.SipException;

        specialinvoke $r51.<javax.sip.SipException: void <init>(java.lang.String)>("From tag of request does not match response from tag");

        throw $r51;

     label28:
        if r7 == null goto label38;

     label29:
        $r44 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.FromHeader getFrom()>();

        interfaceinvoke $r44.<javax.sip.header.FromHeader: void setTag(java.lang.String)>(r7);

     label30:
        if r3 == null goto label40;

     label31:
        $i3 = interfaceinvoke r1.<javax.sip.message.Response: int getStatusCode()>();

        if $i3 == 100 goto label40;

        virtualinvoke r3.<gov.nist.javax.sip.stack.SIPDialog: void setResponseTags(gov.nist.javax.sip.message.SIPResponse)>(r2);

        r9 = virtualinvoke r3.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $r38 = (gov.nist.javax.sip.message.SIPResponse) r1;

        virtualinvoke r3.<gov.nist.javax.sip.stack.SIPDialog: void setLastResponse(gov.nist.javax.sip.stack.SIPTransaction,gov.nist.javax.sip.message.SIPResponse)>(r0, $r38);

     label32:
        if r9 != null goto label34;

     label33:
        $r37 = virtualinvoke r3.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $r42 = <javax.sip.DialogState: javax.sip.DialogState TERMINATED>;

        if $r37 != $r42 goto label34;

        $r41 = new javax.sip.DialogTerminatedEvent;

        $r40 = virtualinvoke r3.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.SipProviderImpl getSipProvider()>();

        specialinvoke $r41.<javax.sip.DialogTerminatedEvent: void <init>(java.lang.Object,javax.sip.Dialog)>($r40, r3);

        r10 = $r41;

        $r39 = virtualinvoke r3.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.SipProviderImpl getSipProvider()>();

        virtualinvoke $r39.<gov.nist.javax.sip.SipProviderImpl: void handleEvent(java.util.EventObject,gov.nist.javax.sip.stack.SIPTransaction)>(r10, r0);

     label34:
        $r24 = (gov.nist.javax.sip.message.SIPResponse) r1;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void sendMessage(gov.nist.javax.sip.message.SIPMessage)>($r24);

     label35:
        if r3 == null goto label43;

     label36:
        $r26 = (gov.nist.javax.sip.message.SIPResponse) r1;

        virtualinvoke r3.<gov.nist.javax.sip.stack.SIPDialog: void startRetransmitTimer(gov.nist.javax.sip.stack.SIPServerTransaction,javax.sip.message.Response)>(r0, $r26);

     label37:
        return;

     label38:
        $r25 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z4 = virtualinvoke $r25.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z4 == 0 goto label30;

        $r46 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r45 = virtualinvoke $r46.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r45.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("WARNING -- Null From tag in request!!");

     label39:
        goto label30;

     label40:
        if r3 != null goto label34;

     label41:
        $r27 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.lang.String getMethod()>();

        $z5 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z5 == 0 goto label34;

        $z6 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean retransmissionAlertEnabled>;

        if $z6 == 0 goto label34;

        $r29 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask retransmissionAlertTimerTask>;

        if $r29 != null goto label34;

        $i2 = interfaceinvoke r1.<javax.sip.message.Response: int getStatusCode()>();

        $i1 = $i2 / 100;

        if $i1 != 2 goto label34;

        $r28 = (gov.nist.javax.sip.message.SIPResponse) r1;

        r8 = virtualinvoke $r28.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getDialogId(boolean)>(1);

        $r32 = new gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask;

        specialinvoke $r32.<gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask: void <init>(gov.nist.javax.sip.stack.SIPServerTransaction,java.lang.String)>(r0, r8);

        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask retransmissionAlertTimerTask> = $r32;

        $r30 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r31 = $r30.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.concurrent.ConcurrentHashMap retransmissionAlertTransactions>;

        virtualinvoke $r31.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, r0);

        $r35 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r34 = virtualinvoke $r35.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Timer getTimer()>();

        $r33 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask retransmissionAlertTimerTask>;

        virtualinvoke $r34.<java.util.Timer: void schedule(java.util.TimerTask,long,long)>($r33, 0L, 500L);

     label42:
        goto label34;

     label43:
        return;

        catch java.text.ParseException from label01 to label02 with label03;
        catch java.io.IOException from label08 to label09 with label16;
        catch java.text.ParseException from label08 to label09 with label20;
        catch java.lang.Exception from label10 to label11 with label11;
        catch java.io.IOException from label10 to label11 with label16;
        catch java.text.ParseException from label10 to label11 with label20;
        catch java.io.IOException from label12 to label13 with label16;
        catch java.text.ParseException from label12 to label13 with label20;
        catch java.io.IOException from label14 to label15 with label16;
        catch java.text.ParseException from label14 to label15 with label20;
        catch java.io.IOException from label15 to label16 with label16;
        catch java.text.ParseException from label15 to label16 with label20;
        catch java.io.IOException from label18 to label19 with label16;
        catch java.text.ParseException from label18 to label19 with label20;
        catch java.io.IOException from label22 to label23 with label16;
        catch java.text.ParseException from label22 to label23 with label20;
        catch java.io.IOException from label24 to label25 with label16;
        catch java.text.ParseException from label24 to label25 with label20;
        catch java.io.IOException from label25 to label26 with label16;
        catch java.text.ParseException from label25 to label26 with label20;
        catch java.io.IOException from label27 to label28 with label16;
        catch java.text.ParseException from label27 to label28 with label20;
        catch java.io.IOException from label29 to label30 with label16;
        catch java.text.ParseException from label29 to label30 with label20;
        catch java.io.IOException from label31 to label32 with label16;
        catch java.text.ParseException from label31 to label32 with label20;
        catch java.io.IOException from label33 to label34 with label16;
        catch java.text.ParseException from label33 to label34 with label20;
        catch java.io.IOException from label34 to label35 with label16;
        catch java.text.ParseException from label34 to label35 with label20;
        catch java.io.IOException from label36 to label37 with label16;
        catch java.text.ParseException from label36 to label37 with label20;
        catch java.io.IOException from label38 to label39 with label16;
        catch java.text.ParseException from label38 to label39 with label20;
        catch java.io.IOException from label41 to label42 with label16;
        catch java.text.ParseException from label41 to label42 with label20;
    }

    public void setAckSeen()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isAckSeen> = 1;

        return;
    }

    public void setDialog(gov.nist.javax.sip.stack.SIPDialog, java.lang.String)
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        gov.nist.javax.sip.stack.SIPDialog r1, $r14;
        java.lang.String r2, $r7, $r10, $r21;
        gov.nist.javax.sip.stack.SIPTransactionStack $r3, $r8, $r13;
        boolean $z0, $z1;
        gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask $r4, $r5, $r6, $r9;
        java.util.concurrent.ConcurrentHashMap $r11;
        java.lang.StringBuilder $r15, $r17, $r18, $r19, $r20;
        gov.nist.core.StackLogger $r16;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        r1 := @parameter0: gov.nist.javax.sip.stack.SIPDialog;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r3.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label1;

        $r13 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r16 = virtualinvoke $r13.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setDialog ");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dialog = ");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r16.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r21);

     label1:
        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPDialog dialog> = r1;

        if r2 == null goto label2;

        $r14 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPDialog dialog>;

        virtualinvoke $r14.<gov.nist.javax.sip.stack.SIPDialog: void setAssigned()>();

     label2:
        $z1 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean retransmissionAlertEnabled>;

        if $z1 == 0 goto label4;

        $r4 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask retransmissionAlertTimerTask>;

        if $r4 == null goto label4;

        $r5 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask retransmissionAlertTimerTask>;

        virtualinvoke $r5.<gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask: boolean cancel()>();

        $r6 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask retransmissionAlertTimerTask>;

        $r7 = $r6.<gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask: java.lang.String dialogId>;

        if $r7 == null goto label3;

        $r8 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r11 = $r8.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.concurrent.ConcurrentHashMap retransmissionAlertTransactions>;

        $r9 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask retransmissionAlertTimerTask>;

        $r10 = $r9.<gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask: java.lang.String dialogId>;

        virtualinvoke $r11.<java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>($r10);

     label3:
        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask retransmissionAlertTimerTask> = null;

     label4:
        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean retransmissionAlertEnabled> = 0;

        return;
    }

    public void setInviteTransaction(gov.nist.javax.sip.stack.SIPServerTransaction)
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0, r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        r1 := @parameter0: gov.nist.javax.sip.stack.SIPServerTransaction;

        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction inviteTransaction> = r1;

        return;
    }

    public void setMapped(boolean)
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        boolean z0;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        z0 := @parameter0: boolean;

        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isMapped> = 1;

        return;
    }

    public void setOriginalRequest(gov.nist.javax.sip.message.SIPRequest)
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        gov.nist.javax.sip.message.SIPRequest r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        r1 := @parameter0: gov.nist.javax.sip.message.SIPRequest;

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPTransaction: void setOriginalRequest(gov.nist.javax.sip.message.SIPRequest)>(r1);

        return;
    }

    public void setPendingSubscribe(gov.nist.javax.sip.stack.SIPClientTransaction)
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        gov.nist.javax.sip.stack.SIPClientTransaction r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        r1 := @parameter0: gov.nist.javax.sip.stack.SIPClientTransaction;

        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPClientTransaction pendingSubscribeTransaction> = r1;

        return;
    }

    public void setRequestInterface(gov.nist.javax.sip.stack.ServerRequestInterface)
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        gov.nist.javax.sip.stack.ServerRequestInterface r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        r1 := @parameter0: gov.nist.javax.sip.stack.ServerRequestInterface;

        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.ServerRequestInterface requestOf> = r1;

        return;
    }

    public void setState(javax.sip.TransactionState)
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        javax.sip.TransactionState r1, $r2;
        boolean $z0, $z1;
        gov.nist.javax.sip.stack.SIPTransactionStack $r3;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        r1 := @parameter0: javax.sip.TransactionState;

        $r2 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        if r1 != $r2 goto label1;

        $z0 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isReliable()>();

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()>();

        $z1 = $r3.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean cacheServerConnections>;

        if $z1 != 0 goto label1;

        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: int collectionTime> = 64;

     label1:
        specialinvoke r0.<gov.nist.javax.sip.stack.SIPTransaction: void setState(javax.sip.TransactionState)>(r1);

        return;
    }

    protected void startTransactionTimer()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        gov.nist.javax.sip.stack.SIPServerTransaction$TransactionTimer r1, $r5;
        java.util.concurrent.atomic.AtomicBoolean $r2;
        boolean $z0;
        gov.nist.javax.sip.stack.SIPTransactionStack $r3, $r6;
        java.util.Timer $r4, $r7;
        int $i0, $i1;
        long $l2, $l3;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        $r2 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.util.concurrent.atomic.AtomicBoolean transactionTimerStarted>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);

        if $z0 == 0 goto label1;

        $r3 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r4 = virtualinvoke $r3.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Timer getTimer()>();

        if $r4 == null goto label1;

        $r5 = new gov.nist.javax.sip.stack.SIPServerTransaction$TransactionTimer;

        specialinvoke $r5.<gov.nist.javax.sip.stack.SIPServerTransaction$TransactionTimer: void <init>(gov.nist.javax.sip.stack.SIPServerTransaction)>(r0);

        r1 = $r5;

        $r6 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r7 = virtualinvoke $r6.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Timer getTimer()>();

        $i0 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: int BASE_TIMER_INTERVAL>;

        $l3 = (long) $i0;

        $i1 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: int BASE_TIMER_INTERVAL>;

        $l2 = (long) $i1;

        virtualinvoke $r7.<java.util.Timer: void schedule(java.util.TimerTask,long,long)>(r1, $l3, $l2);

     label1:
        return;
    }

    public void terminate() throws javax.sip.ObjectInUseException
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        javax.sip.TransactionState $r1;
        gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask $r2, $r3, $r4, $r7;
        java.lang.String $r5, $r8;
        gov.nist.javax.sip.stack.SIPTransactionStack $r6;
        java.util.concurrent.ConcurrentHashMap $r9;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        $r1 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)>($r1);

        $r2 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask retransmissionAlertTimerTask>;

        if $r2 == null goto label2;

        $r3 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask retransmissionAlertTimerTask>;

        virtualinvoke $r3.<gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask: boolean cancel()>();

        $r4 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask retransmissionAlertTimerTask>;

        $r5 = $r4.<gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask: java.lang.String dialogId>;

        if $r5 == null goto label1;

        $r6 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r9 = $r6.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.concurrent.ConcurrentHashMap retransmissionAlertTransactions>;

        $r7 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask retransmissionAlertTimerTask>;

        $r8 = $r7.<gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask: java.lang.String dialogId>;

        virtualinvoke $r9.<java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>($r8);

     label1:
        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask retransmissionAlertTimerTask> = null;

     label2:
        return;
    }
}
