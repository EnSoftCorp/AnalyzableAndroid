public class gov.nist.javax.sip.header.ims.PServedUser extends gov.nist.javax.sip.header.AddressParametersHeader implements gov.nist.javax.sip.header.ims.PServedUserHeader, gov.nist.javax.sip.header.ims.SIPHeaderNamesIms, javax.sip.header.ExtensionHeader
{

    public void <init>()
    {
        gov.nist.javax.sip.header.ims.PServedUser r0;

        r0 := @this: gov.nist.javax.sip.header.ims.PServedUser;

        specialinvoke r0.<gov.nist.javax.sip.header.AddressParametersHeader: void <init>(java.lang.String)>("P-Served-User");

        return;
    }

    public void <init>(gov.nist.javax.sip.address.AddressImpl)
    {
        gov.nist.javax.sip.header.ims.PServedUser r0;
        gov.nist.javax.sip.address.AddressImpl r1;

        r0 := @this: gov.nist.javax.sip.header.ims.PServedUser;

        r1 := @parameter0: gov.nist.javax.sip.address.AddressImpl;

        specialinvoke r0.<gov.nist.javax.sip.header.AddressParametersHeader: void <init>(java.lang.String)>("P-Served-User");

        r0.<gov.nist.javax.sip.header.ims.PServedUser: gov.nist.javax.sip.address.AddressImpl address> = r1;

        return;
    }

    public java.lang.Object clone()
    {
        gov.nist.javax.sip.header.ims.PServedUser r0, $r2;
        java.lang.Object $r1;

        r0 := @this: gov.nist.javax.sip.header.ims.PServedUser;

        $r1 = specialinvoke r0.<gov.nist.javax.sip.header.AddressParametersHeader: java.lang.Object clone()>();

        $r2 = (gov.nist.javax.sip.header.ims.PServedUser) $r1;

        return $r2;
    }

    protected java.lang.String encodeBody()
    {
        gov.nist.javax.sip.header.ims.PServedUser r0;
        java.lang.StringBuffer r1, $r2, $r9, $r10, $r11, $r14, $r15, $r17;
        gov.nist.javax.sip.address.AddressImpl $r3;
        java.lang.String $r4, $r8, $r12, $r16;
        gov.nist.core.NameValueList $r6, $r7;
        boolean $z0, $z1;

        r0 := @this: gov.nist.javax.sip.header.ims.PServedUser;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        r1 = $r2;

        $r3 = r0.<gov.nist.javax.sip.header.ims.PServedUser: gov.nist.javax.sip.address.AddressImpl address>;

        $r4 = virtualinvoke $r3.<gov.nist.javax.sip.address.AddressImpl: java.lang.String encode()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = r0.<gov.nist.javax.sip.header.ims.PServedUser: gov.nist.core.NameValueList parameters>;

        $z0 = virtualinvoke $r6.<gov.nist.core.NameValueList: boolean containsKey(java.lang.Object)>("regstate");

        if $z0 == 0 goto label1;

        $r15 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r14 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("regstate");

        $r17 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=");

        $r16 = virtualinvoke r0.<gov.nist.javax.sip.header.ims.PServedUser: java.lang.String getRegistrationState()>();

        virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

     label1:
        $r7 = r0.<gov.nist.javax.sip.header.ims.PServedUser: gov.nist.core.NameValueList parameters>;

        $z1 = virtualinvoke $r7.<gov.nist.core.NameValueList: boolean containsKey(java.lang.Object)>("sescase");

        if $z1 == 0 goto label2;

        $r9 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("sescase");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=");

        $r12 = virtualinvoke r0.<gov.nist.javax.sip.header.ims.PServedUser: java.lang.String getSessionCase()>();

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

     label2:
        $r8 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;
    }

    public boolean equals(java.lang.Object)
    {
        gov.nist.javax.sip.header.ims.PServedUser r0, $r4;
        java.lang.Object r1;
        boolean $z0, $z1;
        gov.nist.javax.sip.header.ims.PServedUserHeader $r2;
        javax.sip.address.Address $r3, $r5;

        r0 := @this: gov.nist.javax.sip.header.ims.PServedUser;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof gov.nist.javax.sip.header.ims.PServedUser;

        if $z0 == 0 goto label1;

        $r2 = (gov.nist.javax.sip.header.ims.PServedUserHeader) r1;

        $r3 = virtualinvoke r0.<gov.nist.javax.sip.header.ims.PServedUser: javax.sip.address.Address getAddress()>();

        $r4 = (gov.nist.javax.sip.header.ims.PServedUser) r1;

        $r5 = virtualinvoke $r4.<gov.nist.javax.sip.header.ims.PServedUser: javax.sip.address.Address getAddress()>();

        $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        return $z1;

     label1:
        return 0;
    }

    public java.lang.String getRegistrationState()
    {
        gov.nist.javax.sip.header.ims.PServedUser r0;
        java.lang.String $r1;

        r0 := @this: gov.nist.javax.sip.header.ims.PServedUser;

        $r1 = virtualinvoke r0.<gov.nist.javax.sip.header.ims.PServedUser: java.lang.String getParameter(java.lang.String)>("regstate");

        return $r1;
    }

    public java.lang.String getSessionCase()
    {
        gov.nist.javax.sip.header.ims.PServedUser r0;
        java.lang.String $r1;

        r0 := @this: gov.nist.javax.sip.header.ims.PServedUser;

        $r1 = virtualinvoke r0.<gov.nist.javax.sip.header.ims.PServedUser: java.lang.String getParameter(java.lang.String)>("sescase");

        return $r1;
    }

    public void setRegistrationState(java.lang.String)
    {
        gov.nist.javax.sip.header.ims.PServedUser r0;
        java.lang.String r1;
        java.text.ParseException r2, $r7;
        javax.sip.InvalidArgumentException r3, $r5, $r6;
        java.lang.NullPointerException $r4;
        boolean $z0, $z1;

        r0 := @this: gov.nist.javax.sip.header.ims.PServedUser;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label6;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("reg");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("unreg");

        if $z1 == 0 goto label4;

     label1:
        virtualinvoke r0.<gov.nist.javax.sip.header.ims.PServedUser: void setParameter(java.lang.String,java.lang.String)>("regstate", r1);

     label2:
        return;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        virtualinvoke r2.<java.text.ParseException: void printStackTrace()>();

        return;

     label4:
        $r5 = new javax.sip.InvalidArgumentException;

        specialinvoke $r5.<javax.sip.InvalidArgumentException: void <init>(java.lang.String)>("Value can be either reg or unreg");

        throw $r5;

     label5:
        $r6 := @caughtexception;

        r3 = $r6;

        virtualinvoke r3.<javax.sip.InvalidArgumentException: void printStackTrace()>();

        return;

     label6:
        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("regstate Parameter value is null");

        throw $r4;

        catch java.text.ParseException from label1 to label2 with label3;
        catch javax.sip.InvalidArgumentException from label4 to label5 with label5;
    }

    public void setSessionCase(java.lang.String)
    {
        gov.nist.javax.sip.header.ims.PServedUser r0;
        java.lang.String r1;
        java.text.ParseException r2, $r7;
        javax.sip.InvalidArgumentException r3, $r5, $r6;
        java.lang.NullPointerException $r4;
        boolean $z0, $z1;

        r0 := @this: gov.nist.javax.sip.header.ims.PServedUser;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label6;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("orig");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("term");

        if $z1 == 0 goto label4;

     label1:
        virtualinvoke r0.<gov.nist.javax.sip.header.ims.PServedUser: void setParameter(java.lang.String,java.lang.String)>("sescase", r1);

     label2:
        return;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        virtualinvoke r2.<java.text.ParseException: void printStackTrace()>();

        return;

     label4:
        $r5 = new javax.sip.InvalidArgumentException;

        specialinvoke $r5.<javax.sip.InvalidArgumentException: void <init>(java.lang.String)>("Value can be either orig or term");

        throw $r5;

     label5:
        $r6 := @caughtexception;

        r3 = $r6;

        virtualinvoke r3.<javax.sip.InvalidArgumentException: void printStackTrace()>();

        return;

     label6:
        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("sess-case Parameter value is null");

        throw $r4;

        catch java.text.ParseException from label1 to label2 with label3;
        catch javax.sip.InvalidArgumentException from label4 to label5 with label5;
    }

    public void setValue(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.header.ims.PServedUser r0;
        java.lang.String r1;
        java.text.ParseException $r2;

        r0 := @this: gov.nist.javax.sip.header.ims.PServedUser;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.text.ParseException;

        specialinvoke $r2.<java.text.ParseException: void <init>(java.lang.String,int)>(r1, 0);

        throw $r2;
    }
}
