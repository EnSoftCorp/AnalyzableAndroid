public class org.apache.commons.codec.binary.Hex extends java.lang.Object implements org.apache.commons.codec.BinaryEncoder, org.apache.commons.codec.BinaryDecoder
{
    private static final char[] DIGITS;

    static void <clinit>()
    {
        char[] $r0;

        $r0 = newarray (char)[16];

        $r0[0] = 48;

        $r0[1] = 49;

        $r0[2] = 50;

        $r0[3] = 51;

        $r0[4] = 52;

        $r0[5] = 53;

        $r0[6] = 54;

        $r0[7] = 55;

        $r0[8] = 56;

        $r0[9] = 57;

        $r0[10] = 97;

        $r0[11] = 98;

        $r0[12] = 99;

        $r0[13] = 100;

        $r0[14] = 101;

        $r0[15] = 102;

        <org.apache.commons.codec.binary.Hex: char[] DIGITS> = $r0;

        return;
    }

    public void <init>()
    {
        org.apache.commons.codec.binary.Hex r0;

        r0 := @this: org.apache.commons.codec.binary.Hex;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static byte[] decodeHex(char[]) throws org.apache.commons.codec.DecoderException
    {
        char[] r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i9, $i11, $i12;
        byte[] r1;
        char $c8, $c10;
        byte $b13;
        org.apache.commons.codec.DecoderException $r2;

        r0 := @parameter0: char[];

        i0 = lengthof r0;

        $i6 = i0 & 1;

        if $i6 == 0 goto label1;

        $r2 = new org.apache.commons.codec.DecoderException;

        specialinvoke $r2.<org.apache.commons.codec.DecoderException: void <init>(java.lang.String)>("Odd number of characters.");

        throw $r2;

     label1:
        $i7 = i0 >> 1;

        r1 = newarray (byte)[$i7];

        i1 = 0;

        i2 = 0;

     label2:
        if i2 >= i0 goto label3;

        $c8 = r0[i2];

        $i9 = staticinvoke <org.apache.commons.codec.binary.Hex: int toDigit(char,int)>($c8, i2);

        i3 = $i9 << 4;

        i4 = i2 + 1;

        $c10 = r0[i4];

        $i11 = staticinvoke <org.apache.commons.codec.binary.Hex: int toDigit(char,int)>($c10, i4);

        i5 = i3 | $i11;

        i2 = i4 + 1;

        $i12 = i5 & 255;

        $b13 = (byte) $i12;

        r1[i1] = $b13;

        i1 = i1 + 1;

        goto label2;

     label3:
        return r1;
    }

    public static char[] encodeHex(byte[])
    {
        byte[] r0;
        int i0, i1, i2, i3, $i4;
        char[] r1, $r2, $r3;
        byte $b5, $b9, $b10;
        short $s6, $s7;
        char $c8, $c11;

        r0 := @parameter0: byte[];

        i0 = lengthof r0;

        $i4 = i0 << 1;

        r1 = newarray (char)[$i4];

        i1 = 0;

        i2 = 0;

     label1:
        if i1 >= i0 goto label2;

        i3 = i2 + 1;

        $r2 = <org.apache.commons.codec.binary.Hex: char[] DIGITS>;

        $b5 = r0[i1];

        $s6 = 240 & $b5;

        $s7 = $s6 >>> 4;

        $c8 = $r2[$s7];

        r1[i2] = $c8;

        i2 = i3 + 1;

        $r3 = <org.apache.commons.codec.binary.Hex: char[] DIGITS>;

        $b9 = r0[i1];

        $b10 = 15 & $b9;

        $c11 = $r3[$b10];

        r1[i3] = $c11;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;
    }

    protected static int toDigit(char, int) throws org.apache.commons.codec.DecoderException
    {
        char c0;
        int i1, i2;
        org.apache.commons.codec.DecoderException $r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5;
        java.lang.String $r6;

        c0 := @parameter0: char;

        i1 := @parameter1: int;

        i2 = staticinvoke <java.lang.Character: int digit(char,int)>(c0, 16);

        if i2 != -1 goto label1;

        $r0 = new org.apache.commons.codec.DecoderException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal hexadecimal charcter ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at index ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<org.apache.commons.codec.DecoderException: void <init>(java.lang.String)>($r6);

        throw $r0;

     label1:
        return i2;
    }

    public java.lang.Object decode(java.lang.Object) throws org.apache.commons.codec.DecoderException
    {
        org.apache.commons.codec.binary.Hex r0;
        java.lang.Object r1;
        java.lang.ClassCastException r2, $r8;
        char[] r3, r4, $r5;
        boolean $z0;
        byte[] $r6;
        java.lang.String $r7, $r10;
        org.apache.commons.codec.DecoderException $r9;

        r0 := @this: org.apache.commons.codec.binary.Hex;

        r1 := @parameter0: java.lang.Object;

     label1:
        $z0 = r1 instanceof java.lang.String;

        if $z0 == 0 goto label3;

        $r7 = (java.lang.String) r1;

        r4 = virtualinvoke $r7.<java.lang.String: char[] toCharArray()>();

     label2:
        $r6 = staticinvoke <org.apache.commons.codec.binary.Hex: byte[] decodeHex(char[])>(r4);

        return $r6;

     label3:
        $r5 = (char[]) r1;

        r3 = (char[]) $r5;

     label4:
        r4 = r3;

        goto label2;

     label5:
        $r8 := @caughtexception;

        r2 = $r8;

        $r9 = new org.apache.commons.codec.DecoderException;

        $r10 = virtualinvoke r2.<java.lang.ClassCastException: java.lang.String getMessage()>();

        specialinvoke $r9.<org.apache.commons.codec.DecoderException: void <init>(java.lang.String)>($r10);

        throw $r9;

        catch java.lang.ClassCastException from label1 to label2 with label5;
        catch java.lang.ClassCastException from label2 to label3 with label5;
        catch java.lang.ClassCastException from label3 to label4 with label5;
    }

    public byte[] decode(byte[]) throws org.apache.commons.codec.DecoderException
    {
        org.apache.commons.codec.binary.Hex r0;
        byte[] r1, $r4;
        java.lang.String $r2;
        char[] $r3;

        r0 := @this: org.apache.commons.codec.binary.Hex;

        r1 := @parameter0: byte[];

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(byte[])>(r1);

        $r3 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        $r4 = staticinvoke <org.apache.commons.codec.binary.Hex: byte[] decodeHex(char[])>($r3);

        return $r4;
    }

    public java.lang.Object encode(java.lang.Object) throws org.apache.commons.codec.EncoderException
    {
        org.apache.commons.codec.binary.Hex r0;
        java.lang.Object r1;
        java.lang.ClassCastException r2, $r8;
        byte[] r3, r4, $r5;
        boolean $z0;
        char[] $r6;
        java.lang.String $r7, $r10;
        org.apache.commons.codec.EncoderException $r9;

        r0 := @this: org.apache.commons.codec.binary.Hex;

        r1 := @parameter0: java.lang.Object;

     label1:
        $z0 = r1 instanceof java.lang.String;

        if $z0 == 0 goto label3;

        $r7 = (java.lang.String) r1;

        r4 = virtualinvoke $r7.<java.lang.String: byte[] getBytes()>();

     label2:
        $r6 = staticinvoke <org.apache.commons.codec.binary.Hex: char[] encodeHex(byte[])>(r4);

        return $r6;

     label3:
        $r5 = (byte[]) r1;

        r3 = (byte[]) $r5;

     label4:
        r4 = r3;

        goto label2;

     label5:
        $r8 := @caughtexception;

        r2 = $r8;

        $r9 = new org.apache.commons.codec.EncoderException;

        $r10 = virtualinvoke r2.<java.lang.ClassCastException: java.lang.String getMessage()>();

        specialinvoke $r9.<org.apache.commons.codec.EncoderException: void <init>(java.lang.String)>($r10);

        throw $r9;

        catch java.lang.ClassCastException from label1 to label2 with label5;
        catch java.lang.ClassCastException from label2 to label3 with label5;
        catch java.lang.ClassCastException from label3 to label4 with label5;
    }

    public byte[] encode(byte[])
    {
        org.apache.commons.codec.binary.Hex r0;
        byte[] r1, $r4;
        java.lang.String $r2;
        char[] $r3;

        r0 := @this: org.apache.commons.codec.binary.Hex;

        r1 := @parameter0: byte[];

        $r2 = new java.lang.String;

        $r3 = staticinvoke <org.apache.commons.codec.binary.Hex: char[] encodeHex(byte[])>(r1);

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r3);

        $r4 = virtualinvoke $r2.<java.lang.String: byte[] getBytes()>();

        return $r4;
    }
}
