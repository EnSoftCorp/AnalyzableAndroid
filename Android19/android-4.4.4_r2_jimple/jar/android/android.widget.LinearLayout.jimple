public class android.widget.LinearLayout extends android.view.ViewGroup
{
    public static final int HORIZONTAL;
    private static final int INDEX_BOTTOM;
    private static final int INDEX_CENTER_VERTICAL;
    private static final int INDEX_FILL;
    private static final int INDEX_TOP;
    public static final int SHOW_DIVIDER_BEGINNING;
    public static final int SHOW_DIVIDER_END;
    public static final int SHOW_DIVIDER_MIDDLE;
    public static final int SHOW_DIVIDER_NONE;
    public static final int VERTICAL;
    private static final int VERTICAL_GRAVITY_COUNT;
    private boolean mBaselineAligned;
    private int mBaselineAlignedChildIndex;
    private int mBaselineChildTop;
    private android.graphics.drawable.Drawable mDivider;
    private int mDividerHeight;
    private int mDividerPadding;
    private int mDividerWidth;
    private int mGravity;
    private int[] mMaxAscent;
    private int[] mMaxDescent;
    private int mOrientation;
    private int mShowDividers;
    private int mTotalLength;
    private boolean mUseLargestChild;
    private float mWeightSum;

    public void <init>(android.content.Context)
    {
        android.widget.LinearLayout r0;
        android.content.Context r1;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context)>(r1);

        r0.<android.widget.LinearLayout: boolean mBaselineAligned> = 1;

        r0.<android.widget.LinearLayout: int mBaselineAlignedChildIndex> = -1;

        r0.<android.widget.LinearLayout: int mBaselineChildTop> = 0;

        r0.<android.widget.LinearLayout: int mGravity> = 8388659;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.LinearLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.LinearLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1, i2, $i3, $i4, $i5;
        android.content.res.TypedArray r3;
        boolean z0, $z1;
        int[] $r4;
        float $f0;
        android.graphics.drawable.Drawable $r5;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        r0.<android.widget.LinearLayout: boolean mBaselineAligned> = 1;

        r0.<android.widget.LinearLayout: int mBaselineAlignedChildIndex> = -1;

        r0.<android.widget.LinearLayout: int mBaselineChildTop> = 0;

        r0.<android.widget.LinearLayout: int mGravity> = 8388659;

        $r4 = <com.android.internal.R$styleable: int[] LinearLayout>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r4, i0, 0);

        i1 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(1, -1);

        if i1 < 0 goto label1;

        virtualinvoke r0.<android.widget.LinearLayout: void setOrientation(int)>(i1);

     label1:
        i2 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(0, -1);

        if i2 < 0 goto label2;

        virtualinvoke r0.<android.widget.LinearLayout: void setGravity(int)>(i2);

     label2:
        z0 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(2, 1);

        if z0 != 0 goto label3;

        virtualinvoke r0.<android.widget.LinearLayout: void setBaselineAligned(boolean)>(z0);

     label3:
        $f0 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(4, -1.0F);

        r0.<android.widget.LinearLayout: float mWeightSum> = $f0;

        $i3 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(3, -1);

        r0.<android.widget.LinearLayout: int mBaselineAlignedChildIndex> = $i3;

        $z1 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(6, 0);

        r0.<android.widget.LinearLayout: boolean mUseLargestChild> = $z1;

        $r5 = virtualinvoke r3.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(5);

        virtualinvoke r0.<android.widget.LinearLayout: void setDividerDrawable(android.graphics.drawable.Drawable)>($r5);

        $i4 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(7, 0);

        r0.<android.widget.LinearLayout: int mShowDividers> = $i4;

        $i5 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(8, 0);

        r0.<android.widget.LinearLayout: int mDividerPadding> = $i5;

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    private void forceUniformHeight(int, int)
    {
        android.widget.LinearLayout r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8;
        android.view.View r1;
        android.widget.LinearLayout$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i5 = virtualinvoke r0.<android.widget.LinearLayout: int getMeasuredHeight()>();

        i2 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i5, 1073741824);

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        r1 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i3);

        $i6 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i6 == 8 goto label2;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.widget.LinearLayout$LayoutParams) $r3;

        $i7 = r2.<android.widget.LinearLayout$LayoutParams: int height>;

        if $i7 != -1 goto label2;

        i4 = r2.<android.widget.LinearLayout$LayoutParams: int width>;

        $i8 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        r2.<android.widget.LinearLayout$LayoutParams: int width> = $i8;

        virtualinvoke r0.<android.widget.LinearLayout: void measureChildWithMargins(android.view.View,int,int,int,int)>(r1, i1, 0, i2, 0);

        r2.<android.widget.LinearLayout$LayoutParams: int width> = i4;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return;
    }

    private void forceUniformWidth(int, int)
    {
        android.widget.LinearLayout r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8;
        android.view.View r1;
        android.widget.LinearLayout$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i5 = virtualinvoke r0.<android.widget.LinearLayout: int getMeasuredWidth()>();

        i2 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i5, 1073741824);

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        r1 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i3);

        $i6 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i6 == 8 goto label2;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.widget.LinearLayout$LayoutParams) $r3;

        $i7 = r2.<android.widget.LinearLayout$LayoutParams: int width>;

        if $i7 != -1 goto label2;

        i4 = r2.<android.widget.LinearLayout$LayoutParams: int height>;

        $i8 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        r2.<android.widget.LinearLayout$LayoutParams: int height> = $i8;

        virtualinvoke r0.<android.widget.LinearLayout: void measureChildWithMargins(android.view.View,int,int,int,int)>(r1, i2, 0, i1, 0);

        r2.<android.widget.LinearLayout$LayoutParams: int height> = i4;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return;
    }

    private void setChildFrame(android.view.View, int, int, int, int)
    {
        android.widget.LinearLayout r0;
        android.view.View r1;
        int i0, i1, i2, i3, $i4, $i5;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $i5 = i0 + i2;

        $i4 = i1 + i3;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>(i0, i1, $i5, $i4);

        return;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.widget.LinearLayout r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof android.widget.LinearLayout$LayoutParams;

        return $z0;
    }

    void drawDividersHorizontal(android.graphics.Canvas)
    {
        android.widget.LinearLayout r0;
        android.graphics.Canvas r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        boolean z0, $z1, $z2;
        android.view.View r2, r4;
        android.widget.LinearLayout$LayoutParams r3, r5;
        android.view.ViewGroup$LayoutParams $r6, $r7;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.graphics.Canvas;

        i0 = virtualinvoke r0.<android.widget.LinearLayout: int getVirtualChildCount()>();

        z0 = virtualinvoke r0.<android.widget.LinearLayout: boolean isLayoutRtl()>();

        i1 = 0;

     label01:
        if i1 >= i0 goto label05;

        r4 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i1);

        if r4 == null goto label03;

        $i15 = virtualinvoke r4.<android.view.View: int getVisibility()>();

        if $i15 == 8 goto label03;

        $z2 = virtualinvoke r0.<android.widget.LinearLayout: boolean hasDividerBeforeChildAt(int)>(i1);

        if $z2 == 0 goto label03;

        $r7 = virtualinvoke r4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r5 = (android.widget.LinearLayout$LayoutParams) $r7;

        if z0 == 0 goto label04;

        $i20 = virtualinvoke r4.<android.view.View: int getRight()>();

        $i21 = r5.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        i3 = $i20 + $i21;

     label02:
        virtualinvoke r0.<android.widget.LinearLayout: void drawVerticalDivider(android.graphics.Canvas,int)>(r1, i3);

     label03:
        i1 = i1 + 1;

        goto label01;

     label04:
        $i18 = virtualinvoke r4.<android.view.View: int getLeft()>();

        $i19 = r5.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i17 = $i18 - $i19;

        $i16 = r0.<android.widget.LinearLayout: int mDividerWidth>;

        i3 = $i17 - $i16;

        goto label02;

     label05:
        $z1 = virtualinvoke r0.<android.widget.LinearLayout: boolean hasDividerBeforeChildAt(int)>(i0);

        if $z1 == 0 goto label07;

        $i4 = i0 - 1;

        r2 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>($i4);

        if r2 != null goto label09;

        if z0 == 0 goto label08;

        i2 = virtualinvoke r0.<android.widget.LinearLayout: int getPaddingLeft()>();

     label06:
        virtualinvoke r0.<android.widget.LinearLayout: void drawVerticalDivider(android.graphics.Canvas,int)>(r1, i2);

     label07:
        return;

     label08:
        $i10 = virtualinvoke r0.<android.widget.LinearLayout: int getWidth()>();

        $i13 = virtualinvoke r0.<android.widget.LinearLayout: int getPaddingRight()>();

        $i14 = $i10 - $i13;

        $i12 = r0.<android.widget.LinearLayout: int mDividerWidth>;

        i2 = $i14 - $i12;

        goto label06;

     label09:
        $r6 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.widget.LinearLayout$LayoutParams) $r6;

        if z0 == 0 goto label10;

        $i6 = virtualinvoke r2.<android.view.View: int getLeft()>();

        $i9 = r3.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i11 = $i6 - $i9;

        $i8 = r0.<android.widget.LinearLayout: int mDividerWidth>;

        i2 = $i11 - $i8;

        goto label06;

     label10:
        $i5 = virtualinvoke r2.<android.view.View: int getRight()>();

        $i7 = r3.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        i2 = $i5 + $i7;

        goto label06;
    }

    void drawDividersVertical(android.graphics.Canvas)
    {
        android.widget.LinearLayout r0;
        android.graphics.Canvas r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        android.view.View r2, r4;
        android.widget.LinearLayout$LayoutParams r3, r5;
        boolean $z0, $z1;
        android.view.ViewGroup$LayoutParams $r6, $r7;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.graphics.Canvas;

        i0 = virtualinvoke r0.<android.widget.LinearLayout: int getVirtualChildCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r4 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i1);

        if r4 == null goto label2;

        $i10 = virtualinvoke r4.<android.view.View: int getVisibility()>();

        if $i10 == 8 goto label2;

        $z1 = virtualinvoke r0.<android.widget.LinearLayout: boolean hasDividerBeforeChildAt(int)>(i1);

        if $z1 == 0 goto label2;

        $r7 = virtualinvoke r4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r5 = (android.widget.LinearLayout$LayoutParams) $r7;

        $i12 = virtualinvoke r4.<android.view.View: int getTop()>();

        $i11 = r5.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        $i13 = $i12 - $i11;

        $i14 = r0.<android.widget.LinearLayout: int mDividerHeight>;

        $i15 = $i13 - $i14;

        virtualinvoke r0.<android.widget.LinearLayout: void drawHorizontalDivider(android.graphics.Canvas,int)>(r1, $i15);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $z0 = virtualinvoke r0.<android.widget.LinearLayout: boolean hasDividerBeforeChildAt(int)>(i0);

        if $z0 == 0 goto label5;

        $i3 = i0 - 1;

        r2 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>($i3);

        if r2 != null goto label6;

        $i7 = virtualinvoke r0.<android.widget.LinearLayout: int getHeight()>();

        $i6 = virtualinvoke r0.<android.widget.LinearLayout: int getPaddingBottom()>();

        $i8 = $i7 - $i6;

        $i9 = r0.<android.widget.LinearLayout: int mDividerHeight>;

        i2 = $i8 - $i9;

     label4:
        virtualinvoke r0.<android.widget.LinearLayout: void drawHorizontalDivider(android.graphics.Canvas,int)>(r1, i2);

     label5:
        return;

     label6:
        $r6 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.widget.LinearLayout$LayoutParams) $r6;

        $i4 = virtualinvoke r2.<android.view.View: int getBottom()>();

        $i5 = r3.<android.widget.LinearLayout$LayoutParams: int bottomMargin>;

        i2 = $i4 + $i5;

        goto label4;
    }

    void drawHorizontalDivider(android.graphics.Canvas, int)
    {
        android.widget.LinearLayout r0;
        android.graphics.Canvas r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        android.graphics.drawable.Drawable $r2, $r3;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.graphics.Canvas;

        i0 := @parameter1: int;

        $r2 = r0.<android.widget.LinearLayout: android.graphics.drawable.Drawable mDivider>;

        $i1 = virtualinvoke r0.<android.widget.LinearLayout: int getPaddingLeft()>();

        $i2 = r0.<android.widget.LinearLayout: int mDividerPadding>;

        $i3 = $i1 + $i2;

        $i4 = virtualinvoke r0.<android.widget.LinearLayout: int getWidth()>();

        $i5 = virtualinvoke r0.<android.widget.LinearLayout: int getPaddingRight()>();

        $i7 = $i4 - $i5;

        $i6 = r0.<android.widget.LinearLayout: int mDividerPadding>;

        $i10 = $i7 - $i6;

        $i8 = r0.<android.widget.LinearLayout: int mDividerHeight>;

        $i9 = i0 + $i8;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i3, i0, $i10, $i9);

        $r3 = r0.<android.widget.LinearLayout: android.graphics.drawable.Drawable mDivider>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        return;
    }

    void drawVerticalDivider(android.graphics.Canvas, int)
    {
        android.widget.LinearLayout r0;
        android.graphics.Canvas r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        android.graphics.drawable.Drawable $r2, $r3;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.graphics.Canvas;

        i0 := @parameter1: int;

        $r2 = r0.<android.widget.LinearLayout: android.graphics.drawable.Drawable mDivider>;

        $i1 = virtualinvoke r0.<android.widget.LinearLayout: int getPaddingTop()>();

        $i2 = r0.<android.widget.LinearLayout: int mDividerPadding>;

        $i4 = $i1 + $i2;

        $i3 = r0.<android.widget.LinearLayout: int mDividerWidth>;

        $i5 = i0 + $i3;

        $i6 = virtualinvoke r0.<android.widget.LinearLayout: int getHeight()>();

        $i7 = virtualinvoke r0.<android.widget.LinearLayout: int getPaddingBottom()>();

        $i9 = $i6 - $i7;

        $i8 = r0.<android.widget.LinearLayout: int mDividerPadding>;

        $i10 = $i9 - $i8;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(i0, $i4, $i5, $i10);

        $r3 = r0.<android.widget.LinearLayout: android.graphics.drawable.Drawable mDivider>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        return;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        android.widget.LinearLayout r0;
        android.widget.LinearLayout$LayoutParams $r1;

        r0 := @this: android.widget.LinearLayout;

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams()>();

        return $r1;
    }

    protected android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams()
    {
        android.widget.LinearLayout r0;
        int $i0, $i1;
        android.widget.LinearLayout$LayoutParams $r1, $r2;

        r0 := @this: android.widget.LinearLayout;

        $i0 = r0.<android.widget.LinearLayout: int mOrientation>;

        if $i0 != 0 goto label1;

        $r2 = new android.widget.LinearLayout$LayoutParams;

        specialinvoke $r2.<android.widget.LinearLayout$LayoutParams: void <init>(int,int)>(-2, -2);

        return $r2;

     label1:
        $i1 = r0.<android.widget.LinearLayout: int mOrientation>;

        if $i1 != 1 goto label2;

        $r1 = new android.widget.LinearLayout$LayoutParams;

        specialinvoke $r1.<android.widget.LinearLayout$LayoutParams: void <init>(int,int)>(-1, -2);

        return $r1;

     label2:
        return null;
    }

    public volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.widget.LinearLayout r0;
        android.util.AttributeSet r1;
        android.widget.LinearLayout$LayoutParams $r2;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = virtualinvoke r0.<android.widget.LinearLayout: android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>(r1);

        return $r2;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.widget.LinearLayout r0;
        android.view.ViewGroup$LayoutParams r1;
        android.widget.LinearLayout$LayoutParams $r2;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r2 = virtualinvoke r0.<android.widget.LinearLayout: android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>(r1);

        return $r2;
    }

    public android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.widget.LinearLayout r0;
        android.util.AttributeSet r1;
        android.widget.LinearLayout$LayoutParams $r2;
        android.content.Context $r3;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = new android.widget.LinearLayout$LayoutParams;

        $r3 = virtualinvoke r0.<android.widget.LinearLayout: android.content.Context getContext()>();

        specialinvoke $r2.<android.widget.LinearLayout$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, r1);

        return $r2;
    }

    protected android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.widget.LinearLayout r0;
        android.view.ViewGroup$LayoutParams r1;
        android.widget.LinearLayout$LayoutParams $r2;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r2 = new android.widget.LinearLayout$LayoutParams;

        specialinvoke $r2.<android.widget.LinearLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r1);

        return $r2;
    }

    public int getBaseline()
    {
        android.widget.LinearLayout r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.widget.LinearLayout$LayoutParams $r3;
        java.lang.RuntimeException $r4, $r5;

        r0 := @this: android.widget.LinearLayout;

        i0 = -1;

        $i4 = r0.<android.widget.LinearLayout: int mBaselineAlignedChildIndex>;

        if $i4 >= 0 goto label2;

        i0 = specialinvoke r0.<android.view.ViewGroup: int getBaseline()>();

     label1:
        return i0;

     label2:
        $i5 = virtualinvoke r0.<android.widget.LinearLayout: int getChildCount()>();

        $i6 = r0.<android.widget.LinearLayout: int mBaselineAlignedChildIndex>;

        if $i5 > $i6 goto label3;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("mBaselineAlignedChildIndex of LinearLayout set to an index that is out of bounds.");

        throw $r5;

     label3:
        $i7 = r0.<android.widget.LinearLayout: int mBaselineAlignedChildIndex>;

        r1 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getChildAt(int)>($i7);

        i1 = virtualinvoke r1.<android.view.View: int getBaseline()>();

        if i1 != i0 goto label4;

        $i27 = r0.<android.widget.LinearLayout: int mBaselineAlignedChildIndex>;

        if $i27 == 0 goto label1;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("mBaselineAlignedChildIndex of LinearLayout points to a View that doesn\'t know how to get its baseline.");

        throw $r4;

     label4:
        i2 = r0.<android.widget.LinearLayout: int mBaselineChildTop>;

        $i8 = r0.<android.widget.LinearLayout: int mOrientation>;

        if $i8 != 1 goto label5;

        $i13 = r0.<android.widget.LinearLayout: int mGravity>;

        i3 = 112 & $i13;

        if i3 == 48 goto label5;

        lookupswitch(i3)
        {
            case 16: goto label7;
            case 80: goto label6;
            default: goto label5;
        };

     label5:
        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.widget.LinearLayout$LayoutParams) $r2;

        $i9 = $r3.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        $i11 = i2 + $i9;

        $i10 = i1 + $i11;

        return $i10;

     label6:
        $i15 = r0.<android.widget.LinearLayout: int mBottom>;

        $i12 = r0.<android.widget.LinearLayout: int mTop>;

        $i17 = $i15 - $i12;

        $i14 = r0.<android.widget.LinearLayout: int mPaddingBottom>;

        $i19 = $i17 - $i14;

        $i16 = r0.<android.widget.LinearLayout: int mTotalLength>;

        i2 = $i19 - $i16;

        goto label5;

     label7:
        $i21 = r0.<android.widget.LinearLayout: int mBottom>;

        $i18 = r0.<android.widget.LinearLayout: int mTop>;

        $i23 = $i21 - $i18;

        $i20 = r0.<android.widget.LinearLayout: int mPaddingTop>;

        $i25 = $i23 - $i20;

        $i22 = r0.<android.widget.LinearLayout: int mPaddingBottom>;

        $i28 = $i25 - $i22;

        $i24 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i29 = $i28 - $i24;

        $i26 = $i29 / 2;

        i2 = i2 + $i26;

        goto label5;
    }

    public int getBaselineAlignedChildIndex()
    {
        android.widget.LinearLayout r0;
        int $i0;

        r0 := @this: android.widget.LinearLayout;

        $i0 = r0.<android.widget.LinearLayout: int mBaselineAlignedChildIndex>;

        return $i0;
    }

    int getChildrenSkipCount(android.view.View, int)
    {
        android.widget.LinearLayout r0;
        android.view.View r1;
        int i0;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        return 0;
    }

    public android.graphics.drawable.Drawable getDividerDrawable()
    {
        android.widget.LinearLayout r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: android.widget.LinearLayout;

        $r1 = r0.<android.widget.LinearLayout: android.graphics.drawable.Drawable mDivider>;

        return $r1;
    }

    public int getDividerPadding()
    {
        android.widget.LinearLayout r0;
        int $i0;

        r0 := @this: android.widget.LinearLayout;

        $i0 = r0.<android.widget.LinearLayout: int mDividerPadding>;

        return $i0;
    }

    public int getDividerWidth()
    {
        android.widget.LinearLayout r0;
        int $i0;

        r0 := @this: android.widget.LinearLayout;

        $i0 = r0.<android.widget.LinearLayout: int mDividerWidth>;

        return $i0;
    }

    int getLocationOffset(android.view.View)
    {
        android.widget.LinearLayout r0;
        android.view.View r1;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.view.View;

        return 0;
    }

    int getNextLocationOffset(android.view.View)
    {
        android.widget.LinearLayout r0;
        android.view.View r1;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.view.View;

        return 0;
    }

    public int getOrientation()
    {
        android.widget.LinearLayout r0;
        int $i0;

        r0 := @this: android.widget.LinearLayout;

        $i0 = r0.<android.widget.LinearLayout: int mOrientation>;

        return $i0;
    }

    public int getShowDividers()
    {
        android.widget.LinearLayout r0;
        int $i0;

        r0 := @this: android.widget.LinearLayout;

        $i0 = r0.<android.widget.LinearLayout: int mShowDividers>;

        return $i0;
    }

    android.view.View getVirtualChildAt(int)
    {
        android.widget.LinearLayout r0;
        int i0;
        android.view.View $r1;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getChildAt(int)>(i0);

        return $r1;
    }

    int getVirtualChildCount()
    {
        android.widget.LinearLayout r0;
        int $i0;

        r0 := @this: android.widget.LinearLayout;

        $i0 = virtualinvoke r0.<android.widget.LinearLayout: int getChildCount()>();

        return $i0;
    }

    public float getWeightSum()
    {
        android.widget.LinearLayout r0;
        float $f0;

        r0 := @this: android.widget.LinearLayout;

        $f0 = r0.<android.widget.LinearLayout: float mWeightSum>;

        return $f0;
    }

    protected boolean hasDividerBeforeChildAt(int)
    {
        android.widget.LinearLayout r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean z0;
        android.view.View $r1;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        if i0 != 0 goto label3;

        $i8 = r0.<android.widget.LinearLayout: int mShowDividers>;

        $i9 = 1 & $i8;

        if $i9 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;

     label3:
        $i2 = virtualinvoke r0.<android.widget.LinearLayout: int getChildCount()>();

        if i0 != $i2 goto label4;

        $i6 = r0.<android.widget.LinearLayout: int mShowDividers>;

        $i7 = 4 & $i6;

        if $i7 != 0 goto label1;

        return 0;

     label4:
        $i3 = r0.<android.widget.LinearLayout: int mShowDividers>;

        $i4 = 2 & $i3;

        if $i4 == 0 goto label8;

        i1 = i0 - 1;

     label5:
        z0 = 0;

        if i1 < 0 goto label6;

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getChildAt(int)>(i1);

        $i5 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if $i5 == 8 goto label7;

        z0 = 1;

     label6:
        return z0;

     label7:
        i1 = i1 + -1;

        goto label5;

     label8:
        return 0;
    }

    public boolean isBaselineAligned()
    {
        android.widget.LinearLayout r0;
        boolean $z0;

        r0 := @this: android.widget.LinearLayout;

        $z0 = r0.<android.widget.LinearLayout: boolean mBaselineAligned>;

        return $z0;
    }

    public boolean isMeasureWithLargestChildEnabled()
    {
        android.widget.LinearLayout r0;
        boolean $z0;

        r0 := @this: android.widget.LinearLayout;

        $z0 = r0.<android.widget.LinearLayout: boolean mUseLargestChild>;

        return $z0;
    }

    void layoutHorizontal(int, int, int, int)
    {
        android.widget.LinearLayout r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66;
        boolean z0, z1, $z2;
        int[] r1, r2;
        byte b11;
        android.view.View r3;
        android.widget.LinearLayout$LayoutParams r4;
        android.view.ViewGroup$LayoutParams $r5;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        z0 = virtualinvoke r0.<android.widget.LinearLayout: boolean isLayoutRtl()>();

        i4 = r0.<android.widget.LinearLayout: int mPaddingTop>;

        i5 = i3 - i1;

        $i23 = r0.<android.widget.LinearLayout: int mPaddingBottom>;

        i6 = i5 - $i23;

        $i26 = i5 - i4;

        $i25 = r0.<android.widget.LinearLayout: int mPaddingBottom>;

        i7 = $i26 - $i25;

        i8 = virtualinvoke r0.<android.widget.LinearLayout: int getVirtualChildCount()>();

        $i24 = r0.<android.widget.LinearLayout: int mGravity>;

        i9 = 8388615 & $i24;

        $i29 = r0.<android.widget.LinearLayout: int mGravity>;

        i10 = 112 & $i29;

        z1 = r0.<android.widget.LinearLayout: boolean mBaselineAligned>;

        r1 = r0.<android.widget.LinearLayout: int[] mMaxAscent>;

        r2 = r0.<android.widget.LinearLayout: int[] mMaxDescent>;

        $i30 = virtualinvoke r0.<android.widget.LinearLayout: int getLayoutDirection()>();

        $i27 = staticinvoke <android.view.Gravity: int getAbsoluteGravity(int,int)>(i9, $i30);

        lookupswitch($i27)
        {
            case 1: goto label07;
            case 5: goto label06;
            default: goto label01;
        };

     label01:
        i12 = r0.<android.widget.LinearLayout: int mPaddingLeft>;

     label02:
        b11 = 1;

        i14 = 0;

        if z0 == 0 goto label03;

        i14 = i8 - 1;

        b11 = -1;

     label03:
        i13 = 0;

     label04:
        if i13 >= i8 goto label17;

        $i32 = b11 * i13;

        i15 = i14 + $i32;

        r3 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i15);

        if r3 != null goto label08;

        $i58 = virtualinvoke r0.<android.widget.LinearLayout: int measureNullChild(int)>(i15);

        i12 = i12 + $i58;

     label05:
        i13 = i13 + 1;

        goto label04;

     label06:
        $i28 = r0.<android.widget.LinearLayout: int mPaddingLeft>;

        $i33 = i2 + $i28;

        $i31 = $i33 - i0;

        $i34 = r0.<android.widget.LinearLayout: int mTotalLength>;

        i12 = $i31 - $i34;

        goto label02;

     label07:
        $i65 = r0.<android.widget.LinearLayout: int mPaddingLeft>;

        $i60 = i2 - i0;

        $i59 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i61 = $i60 - $i59;

        $i66 = $i61 / 2;

        i12 = $i65 + $i66;

        goto label02;

     label08:
        $i35 = virtualinvoke r3.<android.view.View: int getVisibility()>();

        if $i35 == 8 goto label05;

        i17 = virtualinvoke r3.<android.view.View: int getMeasuredWidth()>();

        i16 = virtualinvoke r3.<android.view.View: int getMeasuredHeight()>();

        i18 = -1;

        $r5 = virtualinvoke r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.widget.LinearLayout$LayoutParams) $r5;

        if z1 == 0 goto label09;

        $i64 = r4.<android.widget.LinearLayout$LayoutParams: int height>;

        if $i64 == -1 goto label09;

        i18 = virtualinvoke r3.<android.view.View: int getBaseline()>();

     label09:
        i20 = r4.<android.widget.LinearLayout$LayoutParams: int gravity>;

        if i20 >= 0 goto label10;

        i20 = i10;

     label10:
        $i38 = i20 & 112;

        lookupswitch($i38)
        {
            case 16: goto label15;
            case 48: goto label14;
            case 80: goto label16;
            default: goto label11;
        };

     label11:
        i19 = i4;

     label12:
        $z2 = virtualinvoke r0.<android.widget.LinearLayout: boolean hasDividerBeforeChildAt(int)>(i15);

        if $z2 == 0 goto label13;

        $i48 = r0.<android.widget.LinearLayout: int mDividerWidth>;

        i12 = i12 + $i48;

     label13:
        $i41 = r4.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        i21 = i12 + $i41;

        $i40 = virtualinvoke r0.<android.widget.LinearLayout: int getLocationOffset(android.view.View)>(r3);

        $i39 = i21 + $i40;

        specialinvoke r0.<android.widget.LinearLayout: void setChildFrame(android.view.View,int,int,int,int)>(r3, $i39, i19, i17, i16);

        $i45 = r4.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        $i44 = i17 + $i45;

        $i43 = virtualinvoke r0.<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)>(r3);

        $i42 = $i44 + $i43;

        i12 = i21 + $i42;

        $i49 = virtualinvoke r0.<android.widget.LinearLayout: int getChildrenSkipCount(android.view.View,int)>(r3, i15);

        i13 = i13 + $i49;

        goto label05;

     label14:
        $i55 = r4.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        i19 = i4 + $i55;

        if i18 == -1 goto label12;

        $i56 = r1[1];

        $i57 = $i56 - i18;

        i19 = i19 + $i57;

        goto label12;

     label15:
        $i50 = i7 - i16;

        $i51 = $i50 / 2;

        $i53 = i4 + $i51;

        $i52 = r4.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        $i63 = $i53 + $i52;

        $i62 = r4.<android.widget.LinearLayout$LayoutParams: int bottomMargin>;

        i19 = $i63 - $i62;

        goto label12;

     label16:
        $i36 = i6 - i16;

        $i37 = r4.<android.widget.LinearLayout$LayoutParams: int bottomMargin>;

        i19 = $i36 - $i37;

        if i18 == -1 goto label12;

        $i47 = virtualinvoke r3.<android.view.View: int getMeasuredHeight()>();

        i22 = $i47 - i18;

        $i46 = r2[2];

        $i54 = $i46 - i22;

        i19 = i19 - $i54;

        goto label12;

     label17:
        return;
    }

    void layoutVertical(int, int, int, int)
    {
        android.widget.LinearLayout r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, $i17, i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54;
        android.view.View r1;
        android.widget.LinearLayout$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;
        boolean $z0;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 = r0.<android.widget.LinearLayout: int mPaddingLeft>;

        i5 = i2 - i0;

        $i17 = r0.<android.widget.LinearLayout: int mPaddingRight>;

        i6 = i5 - $i17;

        $i19 = i5 - i4;

        $i20 = r0.<android.widget.LinearLayout: int mPaddingRight>;

        i7 = $i19 - $i20;

        i8 = virtualinvoke r0.<android.widget.LinearLayout: int getVirtualChildCount()>();

        $i21 = r0.<android.widget.LinearLayout: int mGravity>;

        i9 = 112 & $i21;

        $i23 = r0.<android.widget.LinearLayout: int mGravity>;

        i10 = 8388615 & $i23;

        lookupswitch(i9)
        {
            case 16: goto label06;
            case 80: goto label05;
            default: goto label01;
        };

     label01:
        i11 = r0.<android.widget.LinearLayout: int mPaddingTop>;

     label02:
        i12 = 0;

     label03:
        if i12 >= i8 goto label14;

        r1 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i12);

        if r1 != null goto label07;

        $i46 = virtualinvoke r0.<android.widget.LinearLayout: int measureNullChild(int)>(i12);

        i11 = i11 + $i46;

     label04:
        i12 = i12 + 1;

        goto label03;

     label05:
        $i22 = r0.<android.widget.LinearLayout: int mPaddingTop>;

        $i25 = i3 + $i22;

        $i26 = $i25 - i1;

        $i24 = r0.<android.widget.LinearLayout: int mTotalLength>;

        i11 = $i26 - $i24;

        goto label02;

     label06:
        $i54 = r0.<android.widget.LinearLayout: int mPaddingTop>;

        $i52 = i3 - i1;

        $i53 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i51 = $i52 - $i53;

        $i50 = $i51 / 2;

        i11 = $i54 + $i50;

        goto label02;

     label07:
        $i27 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i27 == 8 goto label04;

        i13 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        i14 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.widget.LinearLayout$LayoutParams) $r3;

        i16 = r2.<android.widget.LinearLayout$LayoutParams: int gravity>;

        if i16 >= 0 goto label08;

        i16 = i10;

     label08:
        $i30 = virtualinvoke r0.<android.widget.LinearLayout: int getLayoutDirection()>();

        $i28 = staticinvoke <android.view.Gravity: int getAbsoluteGravity(int,int)>(i16, $i30);

        $i29 = 7 & $i28;

        lookupswitch($i29)
        {
            case 1: goto label12;
            case 5: goto label13;
            default: goto label09;
        };

     label09:
        $i47 = r2.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        i15 = i4 + $i47;

     label10:
        $z0 = virtualinvoke r0.<android.widget.LinearLayout: boolean hasDividerBeforeChildAt(int)>(i12);

        if $z0 == 0 goto label11;

        $i38 = r0.<android.widget.LinearLayout: int mDividerHeight>;

        i11 = i11 + $i38;

     label11:
        $i31 = r2.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        i18 = i11 + $i31;

        $i36 = virtualinvoke r0.<android.widget.LinearLayout: int getLocationOffset(android.view.View)>(r1);

        $i37 = i18 + $i36;

        specialinvoke r0.<android.widget.LinearLayout: void setChildFrame(android.view.View,int,int,int,int)>(r1, i15, $i37, i13, i14);

        $i34 = r2.<android.widget.LinearLayout$LayoutParams: int bottomMargin>;

        $i35 = i14 + $i34;

        $i41 = virtualinvoke r0.<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)>(r1);

        $i40 = $i35 + $i41;

        i11 = i18 + $i40;

        $i39 = virtualinvoke r0.<android.widget.LinearLayout: int getChildrenSkipCount(android.view.View,int)>(r1, i12);

        i12 = i12 + $i39;

        goto label04;

     label12:
        $i45 = i7 - i13;

        $i44 = $i45 / 2;

        $i42 = i4 + $i44;

        $i43 = r2.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i48 = $i42 + $i43;

        $i49 = r2.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        i15 = $i48 - $i49;

        goto label10;

     label13:
        $i33 = i6 - i13;

        $i32 = r2.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        i15 = $i33 - $i32;

        goto label10;

     label14:
        return;
    }

    void measureChildBeforeLayout(android.view.View, int, int, int, int, int)
    {
        android.widget.LinearLayout r0;
        android.view.View r1;
        int i0, i1, i2, i3, i4;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        virtualinvoke r0.<android.widget.LinearLayout: void measureChildWithMargins(android.view.View,int,int,int,int)>(r1, i1, i2, i3, i4);

        return;
    }

    void measureHorizontal(int, int)
    {
        android.widget.LinearLayout r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, i29, i30, i31, i32, i33, i34, i35, i36, i37, i38, i39, i40, i41, i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i81, $i82, $i83, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i152, $i153, $i154, $i155, $i156, $i157, $i158, $i159, $i160, $i161, $i162, $i163, $i164, $i165, $i166, $i167, $i168, $i169, $i170, $i171, $i172, $i173, $i174, $i176, $i177, $i178, $i179, $i180, $i181, $i182, $i183, $i184, $i186, $i187, $i188, $i189, $i190, $i191, $i192, $i193, $i194, $i195, $i196, $i197, $i198, $i199, $i200, $i201, $i202, $i203, $i205, $i207, $i208, $i209, $i210, $i211, $i212, $i213, $i214, $i215, $i216, $i217, $i218, $i219, $i220, $i221, $i222, $i223, $i224, $i225, $i226, $i227, $i228, $i229, $i230, $i231, $i232, $i233, $i234, $i235;
        boolean z0, z1, z2, z3, z4, z5, z6, $z7, $z8;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        int[] r1, r2, $r10, $r11, $r12, $r18;
        android.view.View r3, r4, r6, r7;
        android.widget.LinearLayout$LayoutParams r5, r8, r9, $r14;
        android.view.ViewGroup$LayoutParams $r13, $r15, $r16, $r17;
        byte $b79, $b80, $b84, $b117, $b175, $b185, $b204, $b206;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<android.widget.LinearLayout: int mTotalLength> = 0;

        i2 = 0;

        i3 = 0;

        i4 = 0;

        i5 = 0;

        z0 = 1;

        f0 = 0.0F;

        i6 = virtualinvoke r0.<android.widget.LinearLayout: int getVirtualChildCount()>();

        i7 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        i8 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);

        z1 = 0;

        $r11 = r0.<android.widget.LinearLayout: int[] mMaxAscent>;

        if $r11 == null goto label01;

        $r18 = r0.<android.widget.LinearLayout: int[] mMaxDescent>;

        if $r18 != null goto label02;

     label01:
        $r12 = newarray (int)[4];

        r0.<android.widget.LinearLayout: int[] mMaxAscent> = $r12;

        $r10 = newarray (int)[4];

        r0.<android.widget.LinearLayout: int[] mMaxDescent> = $r10;

     label02:
        r1 = r0.<android.widget.LinearLayout: int[] mMaxAscent>;

        r2 = r0.<android.widget.LinearLayout: int[] mMaxDescent>;

        r1[3] = -1;

        r1[2] = -1;

        r1[1] = -1;

        r1[0] = -1;

        r2[3] = -1;

        r2[2] = -1;

        r2[1] = -1;

        r2[0] = -1;

        z2 = r0.<android.widget.LinearLayout: boolean mBaselineAligned>;

        z4 = r0.<android.widget.LinearLayout: boolean mUseLargestChild>;

        if i7 != 1073741824 goto label06;

        z3 = 1;

     label03:
        i10 = -2147483648;

        i9 = 0;

     label04:
        if i9 >= i6 goto label32;

        r6 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i9);

        if r6 != null goto label07;

        $i233 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i234 = virtualinvoke r0.<android.widget.LinearLayout: int measureNullChild(int)>(i9);

        $i235 = $i233 + $i234;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i235;

     label05:
        i9 = i9 + 1;

        goto label04;

     label06:
        z3 = 0;

        goto label03;

     label07:
        $i177 = virtualinvoke r6.<android.view.View: int getVisibility()>();

        if $i177 != 8 goto label08;

        $i232 = virtualinvoke r0.<android.widget.LinearLayout: int getChildrenSkipCount(android.view.View,int)>(r6, i9);

        i9 = i9 + $i232;

        goto label05;

     label08:
        $z7 = virtualinvoke r0.<android.widget.LinearLayout: boolean hasDividerBeforeChildAt(int)>(i9);

        if $z7 == 0 goto label09;

        $i230 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i229 = r0.<android.widget.LinearLayout: int mDividerWidth>;

        $i231 = $i230 + $i229;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i231;

     label09:
        $r17 = virtualinvoke r6.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r9 = (android.widget.LinearLayout$LayoutParams) $r17;

        $f8 = r9.<android.widget.LinearLayout$LayoutParams: float weight>;

        f0 = f0 + $f8;

        if i7 != 1073741824 goto label19;

        $i205 = r9.<android.widget.LinearLayout$LayoutParams: int width>;

        if $i205 != 0 goto label19;

        $f11 = r9.<android.widget.LinearLayout$LayoutParams: float weight>;

        $b204 = $f11 cmpl 0.0F;

        if $b204 <= 0 goto label19;

        if z3 == 0 goto label18;

        $i227 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i225 = r9.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i224 = r9.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        $i226 = $i225 + $i224;

        $i228 = $i227 + $i226;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i228;

     label10:
        if z2 == 0 goto label11;

        i40 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);

        virtualinvoke r6.<android.view.View: void measure(int,int)>(i40, i40);

     label11:
        z6 = 0;

        if i8 == 1073741824 goto label12;

        i42 = r9.<android.widget.LinearLayout$LayoutParams: int height>;

        z6 = 0;

        if i42 != -1 goto label12;

        z1 = 1;

        z6 = 1;

     label12:
        $i188 = r9.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        $i187 = r9.<android.widget.LinearLayout$LayoutParams: int bottomMargin>;

        i34 = $i188 + $i187;

        $i186 = virtualinvoke r6.<android.view.View: int getMeasuredHeight()>();

        i33 = i34 + $i186;

        i39 = virtualinvoke r6.<android.view.View: int getMeasuredState()>();

        i3 = staticinvoke <android.widget.LinearLayout: int combineMeasuredStates(int,int)>(i3, i39);

        if z2 == 0 goto label14;

        i38 = virtualinvoke r6.<android.view.View: int getBaseline()>();

        if i38 == -1 goto label14;

        $i215 = r9.<android.widget.LinearLayout$LayoutParams: int gravity>;

        if $i215 >= 0 goto label26;

        i37 = r0.<android.widget.LinearLayout: int mGravity>;

     label13:
        $i213 = i37 & 112;

        $i214 = $i213 >> 4;

        $i218 = -2 & $i214;

        i36 = $i218 >> 1;

        $i219 = r1[i36];

        $i216 = staticinvoke <java.lang.Math: int max(int,int)>($i219, i38);

        r1[i36] = $i216;

        $i221 = r2[i36];

        $i217 = i33 - i38;

        $i222 = staticinvoke <java.lang.Math: int max(int,int)>($i221, $i217);

        r2[i36] = $i222;

     label14:
        i2 = staticinvoke <java.lang.Math: int max(int,int)>(i2, i33);

        if z0 == 0 goto label27;

        $i211 = r9.<android.widget.LinearLayout$LayoutParams: int height>;

        if $i211 != -1 goto label27;

        z0 = 1;

     label15:
        $f9 = r9.<android.widget.LinearLayout$LayoutParams: float weight>;

        $b185 = $f9 cmpl 0.0F;

        if $b185 <= 0 goto label29;

        if z6 == 0 goto label28;

     label16:
        i5 = staticinvoke <java.lang.Math: int max(int,int)>(i5, i34);

     label17:
        $i212 = virtualinvoke r0.<android.widget.LinearLayout: int getChildrenSkipCount(android.view.View,int)>(r6, i9);

        i9 = i9 + $i212;

        goto label05;

     label18:
        i41 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i210 = r9.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i208 = i41 + $i210;

        $i209 = r9.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        $i207 = $i208 + $i209;

        $i223 = staticinvoke <java.lang.Math: int max(int,int)>(i41, $i207);

        r0.<android.widget.LinearLayout: int mTotalLength> = $i223;

        goto label10;

     label19:
        i32 = -2147483648;

        $i176 = r9.<android.widget.LinearLayout$LayoutParams: int width>;

        if $i176 != 0 goto label20;

        $f10 = r9.<android.widget.LinearLayout$LayoutParams: float weight>;

        $b206 = $f10 cmpl 0.0F;

        if $b206 <= 0 goto label20;

        i32 = 0;

        r9.<android.widget.LinearLayout$LayoutParams: int width> = -2;

     label20:
        $b175 = f0 cmpl 0.0F;

        if $b175 != 0 goto label24;

        i31 = r0.<android.widget.LinearLayout: int mTotalLength>;

     label21:
        virtualinvoke r0.<android.widget.LinearLayout: void measureChildBeforeLayout(android.view.View,int,int,int,int,int)>(r6, i9, i0, i31, i1, 0);

        if i32 == -2147483648 goto label22;

        r9.<android.widget.LinearLayout$LayoutParams: int width> = i32;

     label22:
        i30 = virtualinvoke r6.<android.view.View: int getMeasuredWidth()>();

        if z3 == 0 goto label25;

        $i198 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i220 = r9.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i199 = i30 + $i220;

        $i200 = r9.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        $i197 = $i199 + $i200;

        $i203 = virtualinvoke r0.<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)>(r6);

        $i202 = $i197 + $i203;

        $i201 = $i198 + $i202;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i201;

     label23:
        if z4 == 0 goto label11;

        i10 = staticinvoke <java.lang.Math: int max(int,int)>(i30, i10);

        goto label11;

     label24:
        i31 = 0;

        goto label21;

     label25:
        i35 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i196 = i35 + i30;

        $i195 = r9.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i194 = $i196 + $i195;

        $i193 = r9.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        $i191 = $i194 + $i193;

        $i192 = virtualinvoke r0.<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)>(r6);

        $i189 = $i191 + $i192;

        $i190 = staticinvoke <java.lang.Math: int max(int,int)>(i35, $i189);

        r0.<android.widget.LinearLayout: int mTotalLength> = $i190;

        goto label23;

     label26:
        i37 = r9.<android.widget.LinearLayout$LayoutParams: int gravity>;

        goto label13;

     label27:
        z0 = 0;

        goto label15;

     label28:
        i34 = i33;

        goto label16;

     label29:
        if z6 == 0 goto label31;

     label30:
        i4 = staticinvoke <java.lang.Math: int max(int,int)>(i4, i34);

        goto label17;

     label31:
        i34 = i33;

        goto label30;

     label32:
        $i43 = r0.<android.widget.LinearLayout: int mTotalLength>;

        if $i43 <= 0 goto label33;

        $z8 = virtualinvoke r0.<android.widget.LinearLayout: boolean hasDividerBeforeChildAt(int)>(i6);

        if $z8 == 0 goto label33;

        $i179 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i180 = r0.<android.widget.LinearLayout: int mDividerWidth>;

        $i178 = $i179 + $i180;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i178;

     label33:
        $i44 = r1[1];

        if $i44 != -1 goto label34;

        $i183 = r1[0];

        if $i183 != -1 goto label34;

        $i182 = r1[2];

        if $i182 != -1 goto label34;

        $i181 = r1[3];

        if $i181 == -1 goto label35;

     label34:
        $i51 = r1[3];

        $i52 = r1[0];

        $i50 = r1[1];

        $i45 = r1[2];

        $i53 = staticinvoke <java.lang.Math: int max(int,int)>($i50, $i45);

        $i46 = staticinvoke <java.lang.Math: int max(int,int)>($i52, $i53);

        $i47 = staticinvoke <java.lang.Math: int max(int,int)>($i51, $i46);

        $i58 = r2[3];

        $i57 = r2[0];

        $i49 = r2[1];

        $i48 = r2[2];

        $i60 = staticinvoke <java.lang.Math: int max(int,int)>($i49, $i48);

        $i59 = staticinvoke <java.lang.Math: int max(int,int)>($i57, $i60);

        $i54 = staticinvoke <java.lang.Math: int max(int,int)>($i58, $i59);

        i12 = $i47 + $i54;

        i2 = staticinvoke <java.lang.Math: int max(int,int)>(i2, i12);

     label35:
        if z4 == 0 goto label42;

        if i7 == -2147483648 goto label36;

        if i7 != 0 goto label42;

     label36:
        r0.<android.widget.LinearLayout: int mTotalLength> = 0;

        i26 = 0;

     label37:
        if i26 >= i6 goto label42;

        r7 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i26);

        if r7 != null goto label39;

        $i161 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i162 = virtualinvoke r0.<android.widget.LinearLayout: int measureNullChild(int)>(i26);

        $i184 = $i161 + $i162;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i184;

     label38:
        i26 = i26 + 1;

        goto label37;

     label39:
        $i152 = virtualinvoke r7.<android.view.View: int getVisibility()>();

        if $i152 != 8 goto label40;

        $i160 = virtualinvoke r0.<android.widget.LinearLayout: int getChildrenSkipCount(android.view.View,int)>(r7, i26);

        i26 = i26 + $i160;

        goto label38;

     label40:
        $r16 = virtualinvoke r7.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r8 = (android.widget.LinearLayout$LayoutParams) $r16;

        if z3 == 0 goto label41;

        $i163 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i168 = r8.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i170 = i10 + $i168;

        $i169 = r8.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        $i164 = $i170 + $i169;

        $i165 = virtualinvoke r0.<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)>(r7);

        $i166 = $i164 + $i165;

        $i159 = $i163 + $i166;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i159;

        goto label38;

     label41:
        i29 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i150 = i29 + i10;

        $i148 = r8.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i171 = $i150 + $i148;

        $i149 = r8.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        $i172 = $i171 + $i149;

        $i173 = virtualinvoke r0.<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)>(r7);

        $i174 = $i172 + $i173;

        $i167 = staticinvoke <java.lang.Math: int max(int,int)>(i29, $i174);

        r0.<android.widget.LinearLayout: int mTotalLength> = $i167;

        goto label38;

     label42:
        $i64 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i55 = r0.<android.widget.LinearLayout: int mPaddingLeft>;

        $i56 = r0.<android.widget.LinearLayout: int mPaddingRight>;

        $i65 = $i55 + $i56;

        $i67 = $i64 + $i65;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i67;

        $i66 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i62 = virtualinvoke r0.<android.widget.LinearLayout: int getSuggestedMinimumWidth()>();

        $i61 = staticinvoke <java.lang.Math: int max(int,int)>($i66, $i62);

        i11 = staticinvoke <android.widget.LinearLayout: int resolveSizeAndState(int,int,int)>($i61, i0, 0);

        $i73 = i11 & 16777215;

        $i63 = r0.<android.widget.LinearLayout: int mTotalLength>;

        i14 = $i73 - $i63;

        if i14 == 0 goto label70;

        $b80 = f0 cmpl 0.0F;

        if $b80 <= 0 goto label70;

        $f3 = r0.<android.widget.LinearLayout: float mWeightSum>;

        $b79 = $f3 cmpl 0.0F;

        if $b79 <= 0 goto label46;

        f1 = r0.<android.widget.LinearLayout: float mWeightSum>;

     label43:
        r1[3] = -1;

        r1[2] = -1;

        r1[1] = -1;

        r1[0] = -1;

        r2[3] = -1;

        r2[2] = -1;

        r2[1] = -1;

        r2[0] = -1;

        i2 = -1;

        r0.<android.widget.LinearLayout: int mTotalLength> = 0;

        i16 = 0;

     label44:
        if i16 >= i6 goto label65;

        r4 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i16);

        if r4 == null goto label45;

        $i116 = virtualinvoke r4.<android.view.View: int getVisibility()>();

        if $i116 != 8 goto label47;

     label45:
        i16 = i16 + 1;

        goto label44;

     label46:
        f1 = f0;

        goto label43;

     label47:
        $r15 = virtualinvoke r4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r5 = (android.widget.LinearLayout$LayoutParams) $r15;

        f2 = r5.<android.widget.LinearLayout$LayoutParams: float weight>;

        $b117 = f2 cmpl 0.0F;

        if $b117 <= 0 goto label51;

        $f7 = (float) i14;

        $f5 = f2 * $f7;

        $f6 = $f5 / f1;

        i22 = (int) $f6;

        f1 = f1 - f2;

        i14 = i14 - i22;

        $i136 = r0.<android.widget.LinearLayout: int mPaddingTop>;

        $i135 = r0.<android.widget.LinearLayout: int mPaddingBottom>;

        $i140 = $i136 + $i135;

        $i139 = r5.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        $i138 = $i140 + $i139;

        $i137 = r5.<android.widget.LinearLayout$LayoutParams: int bottomMargin>;

        $i156 = $i138 + $i137;

        $i157 = r5.<android.widget.LinearLayout$LayoutParams: int height>;

        i27 = staticinvoke <android.widget.LinearLayout: int getChildMeasureSpec(int,int,int)>(i1, $i156, $i157);

        $i158 = r5.<android.widget.LinearLayout$LayoutParams: int width>;

        if $i158 != 0 goto label48;

        if i7 == 1073741824 goto label57;

     label48:
        $i154 = virtualinvoke r4.<android.view.View: int getMeasuredWidth()>();

        i28 = i22 + $i154;

        if i28 >= 0 goto label49;

        i28 = 0;

     label49:
        $i153 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i28, 1073741824);

        virtualinvoke r4.<android.view.View: void measure(int,int)>($i153, i27);

     label50:
        $i155 = virtualinvoke r4.<android.view.View: int getMeasuredState()>();

        i25 = -16777216 & $i155;

        i3 = staticinvoke <android.widget.LinearLayout: int combineMeasuredStates(int,int)>(i3, i25);

     label51:
        if z3 == 0 goto label60;

        $i127 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i126 = virtualinvoke r4.<android.view.View: int getMeasuredWidth()>();

        $i143 = r5.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i141 = $i126 + $i143;

        $i144 = r5.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        $i142 = $i141 + $i144;

        $i146 = virtualinvoke r0.<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)>(r4);

        $i147 = $i142 + $i146;

        $i145 = $i127 + $i147;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i145;

     label52:
        if i8 == 1073741824 goto label61;

        $i128 = r5.<android.widget.LinearLayout$LayoutParams: int height>;

        if $i128 != -1 goto label61;

        z5 = 1;

     label53:
        $i114 = r5.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        $i113 = r5.<android.widget.LinearLayout$LayoutParams: int bottomMargin>;

        i18 = $i114 + $i113;

        $i115 = virtualinvoke r4.<android.view.View: int getMeasuredHeight()>();

        i19 = i18 + $i115;

        i2 = staticinvoke <java.lang.Math: int max(int,int)>(i2, i19);

        if z5 == 0 goto label62;

     label54:
        i4 = staticinvoke <java.lang.Math: int max(int,int)>(i4, i18);

        if z0 == 0 goto label63;

        $i129 = r5.<android.widget.LinearLayout$LayoutParams: int height>;

        if $i129 != -1 goto label63;

        z0 = 1;

     label55:
        if z2 == 0 goto label45;

        i23 = virtualinvoke r4.<android.view.View: int getBaseline()>();

        if i23 == -1 goto label45;

        $i130 = r5.<android.widget.LinearLayout$LayoutParams: int gravity>;

        if $i130 >= 0 goto label64;

        i24 = r0.<android.widget.LinearLayout: int mGravity>;

     label56:
        $i134 = i24 & 112;

        $i133 = $i134 >> 4;

        $i132 = -2 & $i133;

        i21 = $i132 >> 1;

        $i131 = r1[i21];

        $i125 = staticinvoke <java.lang.Math: int max(int,int)>($i131, i23);

        r1[i21] = $i125;

        $i123 = r2[i21];

        $i124 = i19 - i23;

        $i122 = staticinvoke <java.lang.Math: int max(int,int)>($i123, $i124);

        r2[i21] = $i122;

        goto label45;

     label57:
        if i22 <= 0 goto label59;

     label58:
        $i151 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i22, 1073741824);

        virtualinvoke r4.<android.view.View: void measure(int,int)>($i151, i27);

        goto label50;

     label59:
        i22 = 0;

        goto label58;

     label60:
        i20 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i118 = virtualinvoke r4.<android.view.View: int getMeasuredWidth()>();

        $i120 = i20 + $i118;

        $i119 = r5.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i108 = $i120 + $i119;

        $i121 = r5.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        $i109 = $i108 + $i121;

        $i110 = virtualinvoke r0.<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)>(r4);

        $i111 = $i109 + $i110;

        $i112 = staticinvoke <java.lang.Math: int max(int,int)>(i20, $i111);

        r0.<android.widget.LinearLayout: int mTotalLength> = $i112;

        goto label52;

     label61:
        z5 = 0;

        goto label53;

     label62:
        i18 = i19;

        goto label54;

     label63:
        z0 = 0;

        goto label55;

     label64:
        i24 = r5.<android.widget.LinearLayout$LayoutParams: int gravity>;

        goto label56;

     label65:
        $i89 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i91 = r0.<android.widget.LinearLayout: int mPaddingLeft>;

        $i92 = r0.<android.widget.LinearLayout: int mPaddingRight>;

        $i90 = $i91 + $i92;

        $i88 = $i89 + $i90;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i88;

        $i87 = r1[1];

        if $i87 != -1 goto label66;

        $i97 = r1[0];

        if $i97 != -1 goto label66;

        $i99 = r1[2];

        if $i99 != -1 goto label66;

        $i98 = r1[3];

        if $i98 == -1 goto label67;

     label66:
        $i101 = r1[3];

        $i100 = r1[0];

        $i85 = r1[1];

        $i86 = r1[2];

        $i103 = staticinvoke <java.lang.Math: int max(int,int)>($i85, $i86);

        $i102 = staticinvoke <java.lang.Math: int max(int,int)>($i100, $i103);

        $i105 = staticinvoke <java.lang.Math: int max(int,int)>($i101, $i102);

        $i106 = r2[3];

        $i94 = r2[0];

        $i107 = r2[1];

        $i104 = r2[2];

        $i93 = staticinvoke <java.lang.Math: int max(int,int)>($i107, $i104);

        $i96 = staticinvoke <java.lang.Math: int max(int,int)>($i94, $i93);

        $i95 = staticinvoke <java.lang.Math: int max(int,int)>($i106, $i96);

        i17 = $i105 + $i95;

        i2 = staticinvoke <java.lang.Math: int max(int,int)>(i2, i17);

     label67:
        if z0 != 0 goto label68;

        if i8 == 1073741824 goto label68;

        i2 = i4;

     label68:
        $i72 = r0.<android.widget.LinearLayout: int mPaddingTop>;

        $i71 = r0.<android.widget.LinearLayout: int mPaddingBottom>;

        $i69 = $i72 + $i71;

        $i70 = i2 + $i69;

        $i68 = virtualinvoke r0.<android.widget.LinearLayout: int getSuggestedMinimumHeight()>();

        i15 = staticinvoke <java.lang.Math: int max(int,int)>($i70, $i68);

        $i77 = -16777216 & i3;

        $i75 = i11 | $i77;

        $i78 = i3 << 16;

        $i76 = staticinvoke <android.widget.LinearLayout: int resolveSizeAndState(int,int,int)>(i15, i1, $i78);

        virtualinvoke r0.<android.widget.LinearLayout: void setMeasuredDimension(int,int)>($i75, $i76);

        if z1 == 0 goto label69;

        specialinvoke r0.<android.widget.LinearLayout: void forceUniformHeight(int,int)>(i6, i0);

     label69:
        return;

     label70:
        i4 = staticinvoke <java.lang.Math: int max(int,int)>(i4, i5);

        if z4 == 0 goto label67;

        if i7 == 1073741824 goto label67;

        i13 = 0;

     label71:
        if i13 >= i6 goto label67;

        r3 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i13);

        if r3 == null goto label72;

        $i74 = virtualinvoke r3.<android.view.View: int getVisibility()>();

        if $i74 != 8 goto label73;

     label72:
        i13 = i13 + 1;

        goto label71;

     label73:
        $r13 = virtualinvoke r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r14 = (android.widget.LinearLayout$LayoutParams) $r13;

        $f4 = $r14.<android.widget.LinearLayout$LayoutParams: float weight>;

        $b84 = $f4 cmpl 0.0F;

        if $b84 <= 0 goto label72;

        $i83 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i10, 1073741824);

        $i82 = virtualinvoke r3.<android.view.View: int getMeasuredHeight()>();

        $i81 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i82, 1073741824);

        virtualinvoke r3.<android.view.View: void measure(int,int)>($i83, $i81);

        goto label72;
    }

    int measureNullChild(int)
    {
        android.widget.LinearLayout r0;
        int i0;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        return 0;
    }

    void measureVertical(int, int)
    {
        android.widget.LinearLayout r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, i29, i30, i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i60, $i62, $i63, $i64, $i65, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i129, $i130, $i131, $i132, $i133, $i134, $i137, $i138, $i139, $i140, $i141, $i142, $i143;
        boolean z0, z1, z2, z3, z4, $z5, $z6;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;
        android.view.View r1, r2, r4, r7;
        android.widget.LinearLayout$LayoutParams r3, r5, r6, $r9;
        byte $b50, $b59, $b61, $b66, $b106, $b116, $b128, $b135, $b136;
        android.view.ViewGroup$LayoutParams $r8, $r10, $r11, $r12;
        java.lang.RuntimeException $r13;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<android.widget.LinearLayout: int mTotalLength> = 0;

        i2 = 0;

        i3 = 0;

        i4 = 0;

        i5 = 0;

        z0 = 1;

        f0 = 0.0F;

        i6 = virtualinvoke r0.<android.widget.LinearLayout: int getVirtualChildCount()>();

        i7 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        i8 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);

        z1 = 0;

        i9 = r0.<android.widget.LinearLayout: int mBaselineAlignedChildIndex>;

        z2 = r0.<android.widget.LinearLayout: boolean mUseLargestChild>;

        i10 = -2147483648;

        i12 = 0;

     label01:
        if i12 >= i6 goto label23;

        r7 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i12);

        if r7 != null goto label03;

        $i142 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i139 = virtualinvoke r0.<android.widget.LinearLayout: int measureNullChild(int)>(i12);

        $i138 = $i142 + $i139;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i138;

     label02:
        i12 = i12 + 1;

        goto label01;

     label03:
        $i115 = virtualinvoke r7.<android.view.View: int getVisibility()>();

        if $i115 != 8 goto label04;

        $i143 = virtualinvoke r0.<android.widget.LinearLayout: int getChildrenSkipCount(android.view.View,int)>(r7, i12);

        i12 = i12 + $i143;

        goto label02;

     label04:
        $z6 = virtualinvoke r0.<android.widget.LinearLayout: boolean hasDividerBeforeChildAt(int)>(i12);

        if $z6 == 0 goto label05;

        $i141 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i130 = r0.<android.widget.LinearLayout: int mDividerHeight>;

        $i140 = $i141 + $i130;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i140;

     label05:
        $r12 = virtualinvoke r7.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r6 = (android.widget.LinearLayout$LayoutParams) $r12;

        $f8 = r6.<android.widget.LinearLayout$LayoutParams: float weight>;

        f0 = f0 + $f8;

        if i8 != 1073741824 goto label08;

        $i137 = r6.<android.widget.LinearLayout$LayoutParams: int height>;

        if $i137 != 0 goto label08;

        $f11 = r6.<android.widget.LinearLayout$LayoutParams: float weight>;

        $b128 = $f11 cmpl 0.0F;

        if $b128 <= 0 goto label08;

        i29 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i126 = r6.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        $i131 = i29 + $i126;

        $i127 = r6.<android.widget.LinearLayout$LayoutParams: int bottomMargin>;

        $i132 = $i131 + $i127;

        $i129 = staticinvoke <java.lang.Math: int max(int,int)>(i29, $i132);

        r0.<android.widget.LinearLayout: int mTotalLength> = $i129;

     label06:
        if i9 < 0 goto label07;

        $i133 = i12 + 1;

        if i9 != $i133 goto label07;

        $i134 = r0.<android.widget.LinearLayout: int mTotalLength>;

        r0.<android.widget.LinearLayout: int mBaselineChildTop> = $i134;

     label07:
        if i12 >= i9 goto label13;

        $f10 = r6.<android.widget.LinearLayout$LayoutParams: float weight>;

        $b135 = $f10 cmpl 0.0F;

        if $b135 <= 0 goto label13;

        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>("A child of LinearLayout with index less than mBaselineAlignedChildIndex has weight > 0, which won\'t work.  Either remove the weight, or don\'t set mBaselineAlignedChildIndex.");

        throw $r13;

     label08:
        i23 = -2147483648;

        $i105 = r6.<android.widget.LinearLayout$LayoutParams: int height>;

        if $i105 != 0 goto label09;

        $f12 = r6.<android.widget.LinearLayout$LayoutParams: float weight>;

        $b136 = $f12 cmpl 0.0F;

        if $b136 <= 0 goto label09;

        i23 = 0;

        r6.<android.widget.LinearLayout$LayoutParams: int height> = -2;

     label09:
        $b106 = f0 cmpl 0.0F;

        if $b106 != 0 goto label12;

        i26 = r0.<android.widget.LinearLayout: int mTotalLength>;

     label10:
        virtualinvoke r0.<android.widget.LinearLayout: void measureChildBeforeLayout(android.view.View,int,int,int,int,int)>(r7, i12, i0, 0, i1, i26);

        if i23 == -2147483648 goto label11;

        r6.<android.widget.LinearLayout$LayoutParams: int height> = i23;

     label11:
        i27 = virtualinvoke r7.<android.view.View: int getMeasuredHeight()>();

        i25 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i108 = i25 + i27;

        $i107 = r6.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        $i110 = $i108 + $i107;

        $i109 = r6.<android.widget.LinearLayout$LayoutParams: int bottomMargin>;

        $i111 = $i110 + $i109;

        $i122 = virtualinvoke r0.<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)>(r7);

        $i121 = $i111 + $i122;

        $i120 = staticinvoke <java.lang.Math: int max(int,int)>(i25, $i121);

        r0.<android.widget.LinearLayout: int mTotalLength> = $i120;

        if z2 == 0 goto label06;

        i10 = staticinvoke <java.lang.Math: int max(int,int)>(i27, i10);

        goto label06;

     label12:
        i26 = 0;

        goto label10;

     label13:
        z4 = 0;

        if i7 == 1073741824 goto label14;

        i28 = r6.<android.widget.LinearLayout$LayoutParams: int width>;

        z4 = 0;

        if i28 != -1 goto label14;

        z1 = 1;

        z4 = 1;

     label14:
        $i125 = r6.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i119 = r6.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        i30 = $i125 + $i119;

        $i124 = virtualinvoke r7.<android.view.View: int getMeasuredWidth()>();

        i31 = i30 + $i124;

        i2 = staticinvoke <java.lang.Math: int max(int,int)>(i2, i31);

        $i123 = virtualinvoke r7.<android.view.View: int getMeasuredState()>();

        i3 = staticinvoke <android.widget.LinearLayout: int combineMeasuredStates(int,int)>(i3, $i123);

        if z0 == 0 goto label18;

        $i117 = r6.<android.widget.LinearLayout$LayoutParams: int width>;

        if $i117 != -1 goto label18;

        z0 = 1;

     label15:
        $f9 = r6.<android.widget.LinearLayout$LayoutParams: float weight>;

        $b116 = $f9 cmpl 0.0F;

        if $b116 <= 0 goto label20;

        if z4 == 0 goto label19;

     label16:
        i5 = staticinvoke <java.lang.Math: int max(int,int)>(i5, i30);

     label17:
        $i118 = virtualinvoke r0.<android.widget.LinearLayout: int getChildrenSkipCount(android.view.View,int)>(r7, i12);

        i12 = i12 + $i118;

        goto label02;

     label18:
        z0 = 0;

        goto label15;

     label19:
        i30 = i31;

        goto label16;

     label20:
        if z4 == 0 goto label22;

     label21:
        i4 = staticinvoke <java.lang.Math: int max(int,int)>(i4, i30);

        goto label17;

     label22:
        i30 = i31;

        goto label21;

     label23:
        $i32 = r0.<android.widget.LinearLayout: int mTotalLength>;

        if $i32 <= 0 goto label24;

        $z5 = virtualinvoke r0.<android.widget.LinearLayout: boolean hasDividerBeforeChildAt(int)>(i6);

        if $z5 == 0 goto label24;

        $i113 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i112 = r0.<android.widget.LinearLayout: int mDividerHeight>;

        $i114 = $i113 + $i112;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i114;

     label24:
        if z2 == 0 goto label30;

        if i8 == -2147483648 goto label25;

        if i8 != 0 goto label30;

     label25:
        r0.<android.widget.LinearLayout: int mTotalLength> = 0;

        i22 = 0;

     label26:
        if i22 >= i6 goto label30;

        r4 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i22);

        if r4 != null goto label28;

        $i97 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i96 = virtualinvoke r0.<android.widget.LinearLayout: int measureNullChild(int)>(i22);

        $i98 = $i97 + $i96;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i98;

     label27:
        i22 = i22 + 1;

        goto label26;

     label28:
        $i99 = virtualinvoke r4.<android.view.View: int getVisibility()>();

        if $i99 != 8 goto label29;

        $i94 = virtualinvoke r0.<android.widget.LinearLayout: int getChildrenSkipCount(android.view.View,int)>(r4, i22);

        i22 = i22 + $i94;

        goto label27;

     label29:
        $r11 = virtualinvoke r4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r5 = (android.widget.LinearLayout$LayoutParams) $r11;

        i24 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i102 = i24 + i10;

        $i100 = r5.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        $i104 = $i102 + $i100;

        $i101 = r5.<android.widget.LinearLayout$LayoutParams: int bottomMargin>;

        $i103 = $i104 + $i101;

        $i93 = virtualinvoke r0.<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)>(r4);

        $i92 = $i103 + $i93;

        $i95 = staticinvoke <java.lang.Math: int max(int,int)>(i24, $i92);

        r0.<android.widget.LinearLayout: int mTotalLength> = $i95;

        goto label27;

     label30:
        $i33 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i35 = r0.<android.widget.LinearLayout: int mPaddingTop>;

        $i36 = r0.<android.widget.LinearLayout: int mPaddingBottom>;

        $i34 = $i35 + $i36;

        $i40 = $i33 + $i34;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i40;

        $i39 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i38 = virtualinvoke r0.<android.widget.LinearLayout: int getSuggestedMinimumHeight()>();

        $i37 = staticinvoke <java.lang.Math: int max(int,int)>($i39, $i38);

        i11 = staticinvoke <android.widget.LinearLayout: int resolveSizeAndState(int,int,int)>($i37, i1, 0);

        $i41 = i11 & 16777215;

        $i42 = r0.<android.widget.LinearLayout: int mTotalLength>;

        i14 = $i41 - $i42;

        if i14 == 0 goto label53;

        $b59 = f0 cmpl 0.0F;

        if $b59 <= 0 goto label53;

        $f4 = r0.<android.widget.LinearLayout: float mWeightSum>;

        $b61 = $f4 cmpl 0.0F;

        if $b61 <= 0 goto label34;

        f1 = r0.<android.widget.LinearLayout: float mWeightSum>;

     label31:
        r0.<android.widget.LinearLayout: int mTotalLength> = 0;

        i15 = 0;

     label32:
        if i15 >= i6 goto label49;

        r2 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i15);

        $i65 = virtualinvoke r2.<android.view.View: int getVisibility()>();

        if $i65 != 8 goto label35;

     label33:
        i15 = i15 + 1;

        goto label32;

     label34:
        f1 = f0;

        goto label31;

     label35:
        $r10 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.widget.LinearLayout$LayoutParams) $r10;

        f2 = r3.<android.widget.LinearLayout$LayoutParams: float weight>;

        $b66 = f2 cmpl 0.0F;

        if $b66 <= 0 goto label39;

        $f6 = (float) i14;

        $f7 = f2 * $f6;

        $f5 = $f7 / f1;

        i20 = (int) $f5;

        f1 = f1 - f2;

        i14 = i14 - i20;

        $i85 = r0.<android.widget.LinearLayout: int mPaddingLeft>;

        $i74 = r0.<android.widget.LinearLayout: int mPaddingRight>;

        $i83 = $i85 + $i74;

        $i84 = r3.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i81 = $i83 + $i84;

        $i82 = r3.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        $i79 = $i81 + $i82;

        $i80 = r3.<android.widget.LinearLayout$LayoutParams: int width>;

        i19 = staticinvoke <android.widget.LinearLayout: int getChildMeasureSpec(int,int,int)>(i0, $i79, $i80);

        $i91 = r3.<android.widget.LinearLayout$LayoutParams: int height>;

        if $i91 != 0 goto label36;

        if i8 == 1073741824 goto label43;

     label36:
        $i90 = virtualinvoke r2.<android.view.View: int getMeasuredHeight()>();

        i21 = i20 + $i90;

        if i21 >= 0 goto label37;

        i21 = 0;

     label37:
        $i89 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i21, 1073741824);

        virtualinvoke r2.<android.view.View: void measure(int,int)>(i19, $i89);

     label38:
        $i88 = virtualinvoke r2.<android.view.View: int getMeasuredState()>();

        $i87 = -256 & $i88;

        i3 = staticinvoke <android.widget.LinearLayout: int combineMeasuredStates(int,int)>(i3, $i87);

     label39:
        $i62 = r3.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i63 = r3.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        i17 = $i62 + $i63;

        $i64 = virtualinvoke r2.<android.view.View: int getMeasuredWidth()>();

        i16 = i17 + $i64;

        i2 = staticinvoke <java.lang.Math: int max(int,int)>(i2, i16);

        if i7 == 1073741824 goto label46;

        $i76 = r3.<android.widget.LinearLayout$LayoutParams: int width>;

        if $i76 != -1 goto label46;

        z3 = 1;

     label40:
        if z3 == 0 goto label47;

     label41:
        i4 = staticinvoke <java.lang.Math: int max(int,int)>(i4, i17);

        if z0 == 0 goto label48;

        $i75 = r3.<android.widget.LinearLayout$LayoutParams: int width>;

        if $i75 != -1 goto label48;

        z0 = 1;

     label42:
        i18 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i73 = virtualinvoke r2.<android.view.View: int getMeasuredHeight()>();

        $i72 = i18 + $i73;

        $i71 = r3.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        $i70 = $i72 + $i71;

        $i69 = r3.<android.widget.LinearLayout$LayoutParams: int bottomMargin>;

        $i67 = $i70 + $i69;

        $i68 = virtualinvoke r0.<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)>(r2);

        $i77 = $i67 + $i68;

        $i78 = staticinvoke <java.lang.Math: int max(int,int)>(i18, $i77);

        r0.<android.widget.LinearLayout: int mTotalLength> = $i78;

        goto label33;

     label43:
        if i20 <= 0 goto label45;

     label44:
        $i86 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i20, 1073741824);

        virtualinvoke r2.<android.view.View: void measure(int,int)>(i19, $i86);

        goto label38;

     label45:
        i20 = 0;

        goto label44;

     label46:
        z3 = 0;

        goto label40;

     label47:
        i17 = i16;

        goto label41;

     label48:
        z0 = 0;

        goto label42;

     label49:
        $i58 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i56 = r0.<android.widget.LinearLayout: int mPaddingTop>;

        $i60 = r0.<android.widget.LinearLayout: int mPaddingBottom>;

        $i55 = $i56 + $i60;

        $i57 = $i58 + $i55;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i57;

     label50:
        if z0 != 0 goto label51;

        if i7 == 1073741824 goto label51;

        i2 = i4;

     label51:
        $i47 = r0.<android.widget.LinearLayout: int mPaddingLeft>;

        $i46 = r0.<android.widget.LinearLayout: int mPaddingRight>;

        $i48 = $i47 + $i46;

        $i49 = i2 + $i48;

        $i43 = virtualinvoke r0.<android.widget.LinearLayout: int getSuggestedMinimumWidth()>();

        $i44 = staticinvoke <java.lang.Math: int max(int,int)>($i49, $i43);

        $i45 = staticinvoke <android.widget.LinearLayout: int resolveSizeAndState(int,int,int)>($i44, i0, i3);

        virtualinvoke r0.<android.widget.LinearLayout: void setMeasuredDimension(int,int)>($i45, i11);

        if z1 == 0 goto label52;

        specialinvoke r0.<android.widget.LinearLayout: void forceUniformWidth(int,int)>(i6, i1);

     label52:
        return;

     label53:
        i4 = staticinvoke <java.lang.Math: int max(int,int)>(i4, i5);

        if z2 == 0 goto label50;

        if i8 == 1073741824 goto label50;

        i13 = 0;

     label54:
        if i13 >= i6 goto label50;

        r1 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i13);

        if r1 == null goto label55;

        $i54 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i54 != 8 goto label56;

     label55:
        i13 = i13 + 1;

        goto label54;

     label56:
        $r8 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r9 = (android.widget.LinearLayout$LayoutParams) $r8;

        $f3 = $r9.<android.widget.LinearLayout$LayoutParams: float weight>;

        $b50 = $f3 cmpl 0.0F;

        if $b50 <= 0 goto label55;

        $i51 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        $i52 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i51, 1073741824);

        $i53 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i10, 1073741824);

        virtualinvoke r1.<android.view.View: void measure(int,int)>($i52, $i53);

        goto label55;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        android.widget.LinearLayout r0;
        android.graphics.Canvas r1;
        android.graphics.drawable.Drawable $r2;
        int $i0;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<android.widget.LinearLayout: android.graphics.drawable.Drawable mDivider>;

        if $r2 != null goto label1;

        return;

     label1:
        $i0 = r0.<android.widget.LinearLayout: int mOrientation>;

        if $i0 != 1 goto label2;

        virtualinvoke r0.<android.widget.LinearLayout: void drawDividersVertical(android.graphics.Canvas)>(r1);

        return;

     label2:
        virtualinvoke r0.<android.widget.LinearLayout: void drawDividersHorizontal(android.graphics.Canvas)>(r1);

        return;
    }

    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.LinearLayout r0;
        android.view.accessibility.AccessibilityEvent r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.view.ViewGroup: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        $r2 = class "android/widget/LinearLayout";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r3);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.widget.LinearLayout r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.view.ViewGroup: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        $r2 = class "android/widget/LinearLayout";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>($r3);

        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.widget.LinearLayout r0;
        boolean z0;
        int i0, i1, i2, i3, $i4;

        r0 := @this: android.widget.LinearLayout;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $i4 = r0.<android.widget.LinearLayout: int mOrientation>;

        if $i4 != 1 goto label1;

        virtualinvoke r0.<android.widget.LinearLayout: void layoutVertical(int,int,int,int)>(i0, i1, i2, i3);

        return;

     label1:
        virtualinvoke r0.<android.widget.LinearLayout: void layoutHorizontal(int,int,int,int)>(i0, i1, i2, i3);

        return;
    }

    protected void onMeasure(int, int)
    {
        android.widget.LinearLayout r0;
        int i0, i1, $i2;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<android.widget.LinearLayout: int mOrientation>;

        if $i2 != 1 goto label1;

        virtualinvoke r0.<android.widget.LinearLayout: void measureVertical(int,int)>(i0, i1);

        return;

     label1:
        virtualinvoke r0.<android.widget.LinearLayout: void measureHorizontal(int,int)>(i0, i1);

        return;
    }

    public void setBaselineAligned(boolean)
    {
        android.widget.LinearLayout r0;
        boolean z0;

        r0 := @this: android.widget.LinearLayout;

        z0 := @parameter0: boolean;

        r0.<android.widget.LinearLayout: boolean mBaselineAligned> = z0;

        return;
    }

    public void setBaselineAlignedChildIndex(int)
    {
        android.widget.LinearLayout r0;
        int i0, $i1, $i2;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i2 = virtualinvoke r0.<android.widget.LinearLayout: int getChildCount()>();

        if i0 < $i2 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("base aligned child index out of range (0, ");

        $i1 = virtualinvoke r0.<android.widget.LinearLayout: int getChildCount()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r1;

     label2:
        r0.<android.widget.LinearLayout: int mBaselineAlignedChildIndex> = i0;

        return;
    }

    public void setDividerDrawable(android.graphics.drawable.Drawable)
    {
        android.widget.LinearLayout r0;
        android.graphics.drawable.Drawable r1, $r2;
        boolean z0;
        int $i0, $i1;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<android.widget.LinearLayout: android.graphics.drawable.Drawable mDivider>;

        if r1 != $r2 goto label1;

        return;

     label1:
        r0.<android.widget.LinearLayout: android.graphics.drawable.Drawable mDivider> = r1;

        if r1 == null goto label4;

        $i0 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        r0.<android.widget.LinearLayout: int mDividerWidth> = $i0;

        $i1 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        r0.<android.widget.LinearLayout: int mDividerHeight> = $i1;

     label2:
        z0 = 0;

        if r1 != null goto label3;

        z0 = 1;

     label3:
        virtualinvoke r0.<android.widget.LinearLayout: void setWillNotDraw(boolean)>(z0);

        virtualinvoke r0.<android.widget.LinearLayout: void requestLayout()>();

        return;

     label4:
        r0.<android.widget.LinearLayout: int mDividerWidth> = 0;

        r0.<android.widget.LinearLayout: int mDividerHeight> = 0;

        goto label2;
    }

    public void setDividerPadding(int)
    {
        android.widget.LinearLayout r0;
        int i0;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        r0.<android.widget.LinearLayout: int mDividerPadding> = i0;

        return;
    }

    public void setGravity(int)
    {
        android.widget.LinearLayout r0;
        int i0, $i1, $i2, $i3;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        $i1 = r0.<android.widget.LinearLayout: int mGravity>;

        if $i1 == i0 goto label3;

        $i2 = 8388615 & i0;

        if $i2 != 0 goto label1;

        i0 = i0 | 8388611;

     label1:
        $i3 = i0 & 112;

        if $i3 != 0 goto label2;

        i0 = i0 | 48;

     label2:
        r0.<android.widget.LinearLayout: int mGravity> = i0;

        virtualinvoke r0.<android.widget.LinearLayout: void requestLayout()>();

     label3:
        return;
    }

    public void setHorizontalGravity(int)
    {
        android.widget.LinearLayout r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        i1 = i0 & 8388615;

        $i2 = r0.<android.widget.LinearLayout: int mGravity>;

        $i3 = 8388615 & $i2;

        if $i3 == i1 goto label1;

        $i4 = r0.<android.widget.LinearLayout: int mGravity>;

        $i5 = -8388616 & $i4;

        $i6 = i1 | $i5;

        r0.<android.widget.LinearLayout: int mGravity> = $i6;

        virtualinvoke r0.<android.widget.LinearLayout: void requestLayout()>();

     label1:
        return;
    }

    public void setMeasureWithLargestChildEnabled(boolean)
    {
        android.widget.LinearLayout r0;
        boolean z0;

        r0 := @this: android.widget.LinearLayout;

        z0 := @parameter0: boolean;

        r0.<android.widget.LinearLayout: boolean mUseLargestChild> = z0;

        return;
    }

    public void setOrientation(int)
    {
        android.widget.LinearLayout r0;
        int i0, $i1;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        $i1 = r0.<android.widget.LinearLayout: int mOrientation>;

        if $i1 == i0 goto label1;

        r0.<android.widget.LinearLayout: int mOrientation> = i0;

        virtualinvoke r0.<android.widget.LinearLayout: void requestLayout()>();

     label1:
        return;
    }

    public void setShowDividers(int)
    {
        android.widget.LinearLayout r0;
        int i0, $i1;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        $i1 = r0.<android.widget.LinearLayout: int mShowDividers>;

        if i0 == $i1 goto label1;

        virtualinvoke r0.<android.widget.LinearLayout: void requestLayout()>();

     label1:
        r0.<android.widget.LinearLayout: int mShowDividers> = i0;

        return;
    }

    public void setVerticalGravity(int)
    {
        android.widget.LinearLayout r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        i1 = i0 & 112;

        $i2 = r0.<android.widget.LinearLayout: int mGravity>;

        $i3 = 112 & $i2;

        if $i3 == i1 goto label1;

        $i4 = r0.<android.widget.LinearLayout: int mGravity>;

        $i5 = -113 & $i4;

        $i6 = i1 | $i5;

        r0.<android.widget.LinearLayout: int mGravity> = $i6;

        virtualinvoke r0.<android.widget.LinearLayout: void requestLayout()>();

     label1:
        return;
    }

    public void setWeightSum(float)
    {
        android.widget.LinearLayout r0;
        float f0, $f1;

        r0 := @this: android.widget.LinearLayout;

        f0 := @parameter0: float;

        $f1 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, f0);

        r0.<android.widget.LinearLayout: float mWeightSum> = $f1;

        return;
    }

    public boolean shouldDelayChildPressedState()
    {
        android.widget.LinearLayout r0;

        r0 := @this: android.widget.LinearLayout;

        return 0;
    }

    public static void <clinit>()
    {
        <android.widget.LinearLayout: int VERTICAL_GRAVITY_COUNT> = 4;

        <android.widget.LinearLayout: int VERTICAL> = 1;

        <android.widget.LinearLayout: int SHOW_DIVIDER_NONE> = 0;

        <android.widget.LinearLayout: int SHOW_DIVIDER_MIDDLE> = 2;

        <android.widget.LinearLayout: int SHOW_DIVIDER_END> = 4;

        <android.widget.LinearLayout: int SHOW_DIVIDER_BEGINNING> = 1;

        <android.widget.LinearLayout: int INDEX_TOP> = 1;

        <android.widget.LinearLayout: int INDEX_FILL> = 3;

        <android.widget.LinearLayout: int INDEX_CENTER_VERTICAL> = 0;

        <android.widget.LinearLayout: int INDEX_BOTTOM> = 2;

        <android.widget.LinearLayout: int HORIZONTAL> = 0;

        return;
    }
}
