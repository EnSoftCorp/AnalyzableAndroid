public final class android.util.JsonWriter extends java.lang.Object implements java.io.Closeable
{
    private java.lang.String indent;
    private boolean lenient;
    private final java.io.Writer out;
    private java.lang.String separator;
    private final java.util.List stack;

    public void <init>(java.io.Writer)
    {
        android.util.JsonWriter r0;
        java.io.Writer r1;
        java.util.ArrayList $r2;
        android.util.JsonScope $r3;
        java.util.List $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: android.util.JsonWriter;

        r1 := @parameter0: java.io.Writer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<android.util.JsonWriter: java.util.List stack> = $r2;

        $r4 = r0.<android.util.JsonWriter: java.util.List stack>;

        $r3 = <android.util.JsonScope: android.util.JsonScope EMPTY_DOCUMENT>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r3);

        r0.<android.util.JsonWriter: java.lang.String separator> = ":";

        if r1 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("out == null");

        throw $r5;

     label1:
        r0.<android.util.JsonWriter: java.io.Writer out> = r1;

        return;
    }

    private void beforeName() throws java.io.IOException
    {
        android.util.JsonWriter r0;
        android.util.JsonScope r1, $r2, $r3, $r4;
        java.lang.IllegalStateException $r5;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.util.List $r8;
        java.lang.String $r10;
        java.io.Writer $r11;

        r0 := @this: android.util.JsonWriter;

        r1 = specialinvoke r0.<android.util.JsonWriter: android.util.JsonScope peek()>();

        $r2 = <android.util.JsonScope: android.util.JsonScope NONEMPTY_OBJECT>;

        if r1 != $r2 goto label2;

        $r11 = r0.<android.util.JsonWriter: java.io.Writer out>;

        virtualinvoke $r11.<java.io.Writer: void write(int)>(44);

     label1:
        specialinvoke r0.<android.util.JsonWriter: void newline()>();

        $r4 = <android.util.JsonScope: android.util.JsonScope DANGLING_NAME>;

        specialinvoke r0.<android.util.JsonWriter: void replaceTop(android.util.JsonScope)>($r4);

        return;

     label2:
        $r3 = <android.util.JsonScope: android.util.JsonScope EMPTY_OBJECT>;

        if r1 == $r3 goto label1;

        $r5 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Nesting problem: ");

        $r8 = r0.<android.util.JsonWriter: java.util.List stack>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        throw $r5;
    }

    private void beforeValue(boolean) throws java.io.IOException
    {
        android.util.JsonWriter r0;
        boolean z0, $z1;
        int[] $r1;
        android.util.JsonScope $r2, $r14, $r15, $r17;
        int $i0, $i1;
        java.lang.IllegalStateException $r3, $r9, $r18;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.util.List $r6;
        java.lang.String $r8, $r10;
        java.io.Writer $r11, $r13;

        r0 := @this: android.util.JsonWriter;

        z0 := @parameter0: boolean;

        $r1 = <android.util.JsonWriter$1: int[] $SwitchMap$android$util$JsonScope>;

        $r2 = specialinvoke r0.<android.util.JsonWriter: android.util.JsonScope peek()>();

        $i0 = virtualinvoke $r2.<android.util.JsonScope: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            case 5: goto label7;
            default: goto label1;
        };

     label1:
        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Nesting problem: ");

        $r6 = r0.<android.util.JsonWriter: java.util.List stack>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label2:
        $z1 = r0.<android.util.JsonWriter: boolean lenient>;

        if $z1 != 0 goto label3;

        if z0 != 0 goto label3;

        $r18 = new java.lang.IllegalStateException;

        specialinvoke $r18.<java.lang.IllegalStateException: void <init>(java.lang.String)>("JSON must start with an array or an object.");

        throw $r18;

     label3:
        $r17 = <android.util.JsonScope: android.util.JsonScope NONEMPTY_DOCUMENT>;

        specialinvoke r0.<android.util.JsonWriter: void replaceTop(android.util.JsonScope)>($r17);

        return;

     label4:
        $r15 = <android.util.JsonScope: android.util.JsonScope NONEMPTY_ARRAY>;

        specialinvoke r0.<android.util.JsonWriter: void replaceTop(android.util.JsonScope)>($r15);

        specialinvoke r0.<android.util.JsonWriter: void newline()>();

        return;

     label5:
        $r13 = r0.<android.util.JsonWriter: java.io.Writer out>;

        virtualinvoke $r13.<java.io.Writer: java.io.Writer append(char)>(44);

        specialinvoke r0.<android.util.JsonWriter: void newline()>();

        return;

     label6:
        $r11 = r0.<android.util.JsonWriter: java.io.Writer out>;

        $r10 = r0.<android.util.JsonWriter: java.lang.String separator>;

        virtualinvoke $r11.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>($r10);

        $r14 = <android.util.JsonScope: android.util.JsonScope NONEMPTY_OBJECT>;

        specialinvoke r0.<android.util.JsonWriter: void replaceTop(android.util.JsonScope)>($r14);

        return;

     label7:
        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("JSON must have only one top-level value.");

        throw $r9;
    }

    private android.util.JsonWriter close(android.util.JsonScope, android.util.JsonScope, java.lang.String) throws java.io.IOException
    {
        android.util.JsonWriter r0;
        android.util.JsonScope r1, r2, r4;
        java.lang.String r3, $r14;
        java.util.List $r5, $r6, $r13;
        int $i0, $i1;
        java.io.Writer $r8;
        java.lang.IllegalStateException $r9;
        java.lang.StringBuilder $r10, $r11, $r12;

        r0 := @this: android.util.JsonWriter;

        r1 := @parameter0: android.util.JsonScope;

        r2 := @parameter1: android.util.JsonScope;

        r3 := @parameter2: java.lang.String;

        r4 = specialinvoke r0.<android.util.JsonWriter: android.util.JsonScope peek()>();

        if r4 == r2 goto label1;

        if r4 == r1 goto label1;

        $r9 = new java.lang.IllegalStateException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Nesting problem: ");

        $r13 = r0.<android.util.JsonWriter: java.util.List stack>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r14);

        throw $r9;

     label1:
        $r6 = r0.<android.util.JsonWriter: java.util.List stack>;

        $r5 = r0.<android.util.JsonWriter: java.util.List stack>;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        $i1 = -1 + $i0;

        interfaceinvoke $r6.<java.util.List: java.lang.Object remove(int)>($i1);

        if r4 != r2 goto label2;

        specialinvoke r0.<android.util.JsonWriter: void newline()>();

     label2:
        $r8 = r0.<android.util.JsonWriter: java.io.Writer out>;

        virtualinvoke $r8.<java.io.Writer: void write(java.lang.String)>(r3);

        return r0;
    }

    private void newline() throws java.io.IOException
    {
        android.util.JsonWriter r0;
        int i0, $i1;
        java.lang.String $r1, $r4;
        java.io.Writer $r2, $r5;
        java.util.List $r3;

        r0 := @this: android.util.JsonWriter;

        $r1 = r0.<android.util.JsonWriter: java.lang.String indent>;

        if $r1 != null goto label2;

     label1:
        return;

     label2:
        $r2 = r0.<android.util.JsonWriter: java.io.Writer out>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>("\n");

        i0 = 1;

     label3:
        $r3 = r0.<android.util.JsonWriter: java.util.List stack>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        if i0 >= $i1 goto label1;

        $r5 = r0.<android.util.JsonWriter: java.io.Writer out>;

        $r4 = r0.<android.util.JsonWriter: java.lang.String indent>;

        virtualinvoke $r5.<java.io.Writer: void write(java.lang.String)>($r4);

        i0 = i0 + 1;

        goto label3;
    }

    private android.util.JsonWriter open(android.util.JsonScope, java.lang.String) throws java.io.IOException
    {
        android.util.JsonWriter r0;
        android.util.JsonScope r1;
        java.lang.String r2;
        java.util.List $r3;
        java.io.Writer $r4;

        r0 := @this: android.util.JsonWriter;

        r1 := @parameter0: android.util.JsonScope;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<android.util.JsonWriter: void beforeValue(boolean)>(1);

        $r3 = r0.<android.util.JsonWriter: java.util.List stack>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r4 = r0.<android.util.JsonWriter: java.io.Writer out>;

        virtualinvoke $r4.<java.io.Writer: void write(java.lang.String)>(r2);

        return r0;
    }

    private android.util.JsonScope peek()
    {
        android.util.JsonWriter r0;
        java.util.List $r1, $r2;
        int $i0, $i1;
        java.lang.Object $r3;
        android.util.JsonScope $r4;

        r0 := @this: android.util.JsonWriter;

        $r2 = r0.<android.util.JsonWriter: java.util.List stack>;

        $r1 = r0.<android.util.JsonWriter: java.util.List stack>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = -1 + $i0;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (android.util.JsonScope) $r3;

        return $r4;
    }

    private void replaceTop(android.util.JsonScope)
    {
        android.util.JsonWriter r0;
        android.util.JsonScope r1;
        java.util.List $r2, $r3;
        int $i0, $i1;

        r0 := @this: android.util.JsonWriter;

        r1 := @parameter0: android.util.JsonScope;

        $r3 = r0.<android.util.JsonWriter: java.util.List stack>;

        $r2 = r0.<android.util.JsonWriter: java.util.List stack>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i1 = -1 + $i0;

        interfaceinvoke $r3.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i1, r1);

        return;
    }

    private void string(java.lang.String) throws java.io.IOException
    {
        android.util.JsonWriter r0;
        java.lang.String r1, $r9, $r19;
        int i0, i1;
        char c2;
        java.io.Writer r2, r4, $r6, $r7, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        java.lang.Object[] r3, r5;
        java.lang.Integer $r8, $r18;

        r0 := @this: android.util.JsonWriter;

        r1 := @parameter0: java.lang.String;

        $r6 = r0.<android.util.JsonWriter: java.io.Writer out>;

        virtualinvoke $r6.<java.io.Writer: void write(java.lang.String)>("\"");

        i0 = 0;

        i1 = virtualinvoke r1.<java.lang.String: int length()>();

     label01:
        if i0 >= i1 goto label12;

        c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);

        lookupswitch(c2)
        {
            case 8: goto label06;
            case 9: goto label05;
            case 10: goto label07;
            case 12: goto label09;
            case 13: goto label08;
            case 34: goto label04;
            case 92: goto label04;
            case 8232: goto label10;
            case 8233: goto label10;
            default: goto label02;
        };

     label02:
        if c2 > 31 goto label11;

        r4 = r0.<android.util.JsonWriter: java.io.Writer out>;

        r5 = newarray (java.lang.Object)[1];

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(c2);

        r5[0] = $r18;

        $r19 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\\u%04x", r5);

        virtualinvoke r4.<java.io.Writer: void write(java.lang.String)>($r19);

     label03:
        i0 = i0 + 1;

        goto label01;

     label04:
        $r11 = r0.<android.util.JsonWriter: java.io.Writer out>;

        virtualinvoke $r11.<java.io.Writer: void write(int)>(92);

        $r10 = r0.<android.util.JsonWriter: java.io.Writer out>;

        virtualinvoke $r10.<java.io.Writer: void write(int)>(c2);

        goto label03;

     label05:
        $r14 = r0.<android.util.JsonWriter: java.io.Writer out>;

        virtualinvoke $r14.<java.io.Writer: void write(java.lang.String)>("\\t");

        goto label03;

     label06:
        $r17 = r0.<android.util.JsonWriter: java.io.Writer out>;

        virtualinvoke $r17.<java.io.Writer: void write(java.lang.String)>("\\b");

        goto label03;

     label07:
        $r15 = r0.<android.util.JsonWriter: java.io.Writer out>;

        virtualinvoke $r15.<java.io.Writer: void write(java.lang.String)>("\\n");

        goto label03;

     label08:
        $r13 = r0.<android.util.JsonWriter: java.io.Writer out>;

        virtualinvoke $r13.<java.io.Writer: void write(java.lang.String)>("\\r");

        goto label03;

     label09:
        $r12 = r0.<android.util.JsonWriter: java.io.Writer out>;

        virtualinvoke $r12.<java.io.Writer: void write(java.lang.String)>("\\f");

        goto label03;

     label10:
        r2 = r0.<android.util.JsonWriter: java.io.Writer out>;

        r3 = newarray (java.lang.Object)[1];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(c2);

        r3[0] = $r8;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\\u%04x", r3);

        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>($r9);

        goto label03;

     label11:
        $r16 = r0.<android.util.JsonWriter: java.io.Writer out>;

        virtualinvoke $r16.<java.io.Writer: void write(int)>(c2);

        goto label03;

     label12:
        $r7 = r0.<android.util.JsonWriter: java.io.Writer out>;

        virtualinvoke $r7.<java.io.Writer: void write(java.lang.String)>("\"");

        return;
    }

    public android.util.JsonWriter beginArray() throws java.io.IOException
    {
        android.util.JsonWriter r0, $r2;
        android.util.JsonScope $r1;

        r0 := @this: android.util.JsonWriter;

        $r1 = <android.util.JsonScope: android.util.JsonScope EMPTY_ARRAY>;

        $r2 = specialinvoke r0.<android.util.JsonWriter: android.util.JsonWriter open(android.util.JsonScope,java.lang.String)>($r1, "[");

        return $r2;
    }

    public android.util.JsonWriter beginObject() throws java.io.IOException
    {
        android.util.JsonWriter r0, $r2;
        android.util.JsonScope $r1;

        r0 := @this: android.util.JsonWriter;

        $r1 = <android.util.JsonScope: android.util.JsonScope EMPTY_OBJECT>;

        $r2 = specialinvoke r0.<android.util.JsonWriter: android.util.JsonWriter open(android.util.JsonScope,java.lang.String)>($r1, "{");

        return $r2;
    }

    public void close() throws java.io.IOException
    {
        android.util.JsonWriter r0;
        java.io.Writer $r1;
        android.util.JsonScope $r2, $r3;
        java.io.IOException $r4;

        r0 := @this: android.util.JsonWriter;

        $r1 = r0.<android.util.JsonWriter: java.io.Writer out>;

        virtualinvoke $r1.<java.io.Writer: void close()>();

        $r2 = specialinvoke r0.<android.util.JsonWriter: android.util.JsonScope peek()>();

        $r3 = <android.util.JsonScope: android.util.JsonScope NONEMPTY_DOCUMENT>;

        if $r2 == $r3 goto label1;

        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("Incomplete document");

        throw $r4;

     label1:
        return;
    }

    public android.util.JsonWriter endArray() throws java.io.IOException
    {
        android.util.JsonWriter r0, $r3;
        android.util.JsonScope $r1, $r2;

        r0 := @this: android.util.JsonWriter;

        $r2 = <android.util.JsonScope: android.util.JsonScope EMPTY_ARRAY>;

        $r1 = <android.util.JsonScope: android.util.JsonScope NONEMPTY_ARRAY>;

        $r3 = specialinvoke r0.<android.util.JsonWriter: android.util.JsonWriter close(android.util.JsonScope,android.util.JsonScope,java.lang.String)>($r2, $r1, "]");

        return $r3;
    }

    public android.util.JsonWriter endObject() throws java.io.IOException
    {
        android.util.JsonWriter r0, $r3;
        android.util.JsonScope $r1, $r2;

        r0 := @this: android.util.JsonWriter;

        $r2 = <android.util.JsonScope: android.util.JsonScope EMPTY_OBJECT>;

        $r1 = <android.util.JsonScope: android.util.JsonScope NONEMPTY_OBJECT>;

        $r3 = specialinvoke r0.<android.util.JsonWriter: android.util.JsonWriter close(android.util.JsonScope,android.util.JsonScope,java.lang.String)>($r2, $r1, "}");

        return $r3;
    }

    public void flush() throws java.io.IOException
    {
        android.util.JsonWriter r0;
        java.io.Writer $r1;

        r0 := @this: android.util.JsonWriter;

        $r1 = r0.<android.util.JsonWriter: java.io.Writer out>;

        virtualinvoke $r1.<java.io.Writer: void flush()>();

        return;
    }

    public boolean isLenient()
    {
        android.util.JsonWriter r0;
        boolean $z0;

        r0 := @this: android.util.JsonWriter;

        $z0 = r0.<android.util.JsonWriter: boolean lenient>;

        return $z0;
    }

    public android.util.JsonWriter name(java.lang.String) throws java.io.IOException
    {
        android.util.JsonWriter r0;
        java.lang.String r1;
        java.lang.NullPointerException $r2;

        r0 := @this: android.util.JsonWriter;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("name == null");

        throw $r2;

     label1:
        specialinvoke r0.<android.util.JsonWriter: void beforeName()>();

        specialinvoke r0.<android.util.JsonWriter: void string(java.lang.String)>(r1);

        return r0;
    }

    public android.util.JsonWriter nullValue() throws java.io.IOException
    {
        android.util.JsonWriter r0;
        java.io.Writer $r1;

        r0 := @this: android.util.JsonWriter;

        specialinvoke r0.<android.util.JsonWriter: void beforeValue(boolean)>(0);

        $r1 = r0.<android.util.JsonWriter: java.io.Writer out>;

        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>("null");

        return r0;
    }

    public void setIndent(java.lang.String)
    {
        android.util.JsonWriter r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: android.util.JsonWriter;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        r0.<android.util.JsonWriter: java.lang.String indent> = null;

        r0.<android.util.JsonWriter: java.lang.String separator> = ":";

        return;

     label1:
        r0.<android.util.JsonWriter: java.lang.String indent> = r1;

        r0.<android.util.JsonWriter: java.lang.String separator> = ": ";

        return;
    }

    public void setLenient(boolean)
    {
        android.util.JsonWriter r0;
        boolean z0;

        r0 := @this: android.util.JsonWriter;

        z0 := @parameter0: boolean;

        r0.<android.util.JsonWriter: boolean lenient> = z0;

        return;
    }

    public android.util.JsonWriter value(double) throws java.io.IOException
    {
        android.util.JsonWriter r0;
        double d0;
        boolean $z0, $z1, $z2;
        java.io.Writer $r1;
        java.lang.String $r2, $r8;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, $r6, $r7;

        r0 := @this: android.util.JsonWriter;

        d0 := @parameter0: double;

        $z0 = r0.<android.util.JsonWriter: boolean lenient>;

        if $z0 != 0 goto label2;

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0);

        if $z1 != 0 goto label1;

        $z2 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d0);

        if $z2 == 0 goto label2;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Numeric values must be finite, but was ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label2:
        specialinvoke r0.<android.util.JsonWriter: void beforeValue(boolean)>(0);

        $r1 = r0.<android.util.JsonWriter: java.io.Writer out>;

        $r2 = staticinvoke <java.lang.Double: java.lang.String toString(double)>(d0);

        virtualinvoke $r1.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>($r2);

        return r0;
    }

    public android.util.JsonWriter value(long) throws java.io.IOException
    {
        android.util.JsonWriter r0;
        long l0;
        java.io.Writer $r1;
        java.lang.String $r2;

        r0 := @this: android.util.JsonWriter;

        l0 := @parameter0: long;

        specialinvoke r0.<android.util.JsonWriter: void beforeValue(boolean)>(0);

        $r1 = r0.<android.util.JsonWriter: java.io.Writer out>;

        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>($r2);

        return r0;
    }

    public android.util.JsonWriter value(java.lang.Number) throws java.io.IOException
    {
        android.util.JsonWriter r0, $r10;
        java.lang.Number r1;
        java.lang.String r2, $r9;
        boolean $z0, $z1, $z2, $z3;
        java.io.Writer $r3;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6, $r7, $r8;

        r0 := @this: android.util.JsonWriter;

        r1 := @parameter0: java.lang.Number;

        if r1 != null goto label1;

        $r10 = virtualinvoke r0.<android.util.JsonWriter: android.util.JsonWriter nullValue()>();

        return $r10;

     label1:
        r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $z0 = r0.<android.util.JsonWriter: boolean lenient>;

        if $z0 != 0 goto label3;

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("-Infinity");

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("Infinity");

        if $z2 != 0 goto label2;

        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("NaN");

        if $z3 == 0 goto label3;

     label2:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Numeric values must be finite, but was ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label3:
        specialinvoke r0.<android.util.JsonWriter: void beforeValue(boolean)>(0);

        $r3 = r0.<android.util.JsonWriter: java.io.Writer out>;

        virtualinvoke $r3.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>(r2);

        return r0;
    }

    public android.util.JsonWriter value(java.lang.String) throws java.io.IOException
    {
        android.util.JsonWriter r0, $r2;
        java.lang.String r1;

        r0 := @this: android.util.JsonWriter;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r2 = virtualinvoke r0.<android.util.JsonWriter: android.util.JsonWriter nullValue()>();

        return $r2;

     label1:
        specialinvoke r0.<android.util.JsonWriter: void beforeValue(boolean)>(0);

        specialinvoke r0.<android.util.JsonWriter: void string(java.lang.String)>(r1);

        return r0;
    }

    public android.util.JsonWriter value(boolean) throws java.io.IOException
    {
        android.util.JsonWriter r0;
        boolean z0;
        java.io.Writer r1;
        java.lang.String r2;

        r0 := @this: android.util.JsonWriter;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.util.JsonWriter: void beforeValue(boolean)>(0);

        r1 = r0.<android.util.JsonWriter: java.io.Writer out>;

        if z0 == 0 goto label2;

        r2 = "true";

     label1:
        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>(r2);

        return r0;

     label2:
        r2 = "false";

        goto label1;
    }
}
