public class android.media.ExifInterface extends java.lang.Object
{
    public static final int ORIENTATION_FLIP_HORIZONTAL;
    public static final int ORIENTATION_FLIP_VERTICAL;
    public static final int ORIENTATION_NORMAL;
    public static final int ORIENTATION_ROTATE_180;
    public static final int ORIENTATION_ROTATE_270;
    public static final int ORIENTATION_ROTATE_90;
    public static final int ORIENTATION_TRANSPOSE;
    public static final int ORIENTATION_TRANSVERSE;
    public static final int ORIENTATION_UNDEFINED;
    public static final java.lang.String TAG_APERTURE;
    public static final java.lang.String TAG_DATETIME;
    public static final java.lang.String TAG_EXPOSURE_TIME;
    public static final java.lang.String TAG_FLASH;
    public static final java.lang.String TAG_FOCAL_LENGTH;
    public static final java.lang.String TAG_GPS_ALTITUDE;
    public static final java.lang.String TAG_GPS_ALTITUDE_REF;
    public static final java.lang.String TAG_GPS_DATESTAMP;
    public static final java.lang.String TAG_GPS_LATITUDE;
    public static final java.lang.String TAG_GPS_LATITUDE_REF;
    public static final java.lang.String TAG_GPS_LONGITUDE;
    public static final java.lang.String TAG_GPS_LONGITUDE_REF;
    public static final java.lang.String TAG_GPS_PROCESSING_METHOD;
    public static final java.lang.String TAG_GPS_TIMESTAMP;
    public static final java.lang.String TAG_IMAGE_LENGTH;
    public static final java.lang.String TAG_IMAGE_WIDTH;
    public static final java.lang.String TAG_ISO;
    public static final java.lang.String TAG_MAKE;
    public static final java.lang.String TAG_MODEL;
    public static final java.lang.String TAG_ORIENTATION;
    public static final java.lang.String TAG_WHITE_BALANCE;
    public static final int WHITEBALANCE_AUTO;
    public static final int WHITEBALANCE_MANUAL;
    private static java.text.SimpleDateFormat sFormatter;
    private static final java.lang.Object sLock;
    private java.util.HashMap mAttributes;
    private java.lang.String mFilename;
    private boolean mHasThumbnail;

    static void <clinit>()
    {
        java.text.SimpleDateFormat $r0, $r1;
        java.util.TimeZone $r2;
        java.lang.Object $r3;

        <android.media.ExifInterface: int WHITEBALANCE_MANUAL> = 1;

        <android.media.ExifInterface: int WHITEBALANCE_AUTO> = 0;

        <android.media.ExifInterface: java.lang.String TAG_WHITE_BALANCE> = "WhiteBalance";

        <android.media.ExifInterface: java.lang.String TAG_ORIENTATION> = "Orientation";

        <android.media.ExifInterface: java.lang.String TAG_MODEL> = "Model";

        <android.media.ExifInterface: java.lang.String TAG_MAKE> = "Make";

        <android.media.ExifInterface: java.lang.String TAG_ISO> = "ISOSpeedRatings";

        <android.media.ExifInterface: java.lang.String TAG_IMAGE_WIDTH> = "ImageWidth";

        <android.media.ExifInterface: java.lang.String TAG_IMAGE_LENGTH> = "ImageLength";

        <android.media.ExifInterface: java.lang.String TAG_GPS_TIMESTAMP> = "GPSTimeStamp";

        <android.media.ExifInterface: java.lang.String TAG_GPS_PROCESSING_METHOD> = "GPSProcessingMethod";

        <android.media.ExifInterface: java.lang.String TAG_GPS_LONGITUDE_REF> = "GPSLongitudeRef";

        <android.media.ExifInterface: java.lang.String TAG_GPS_LONGITUDE> = "GPSLongitude";

        <android.media.ExifInterface: java.lang.String TAG_GPS_LATITUDE_REF> = "GPSLatitudeRef";

        <android.media.ExifInterface: java.lang.String TAG_GPS_LATITUDE> = "GPSLatitude";

        <android.media.ExifInterface: java.lang.String TAG_GPS_DATESTAMP> = "GPSDateStamp";

        <android.media.ExifInterface: java.lang.String TAG_GPS_ALTITUDE_REF> = "GPSAltitudeRef";

        <android.media.ExifInterface: java.lang.String TAG_GPS_ALTITUDE> = "GPSAltitude";

        <android.media.ExifInterface: java.lang.String TAG_FOCAL_LENGTH> = "FocalLength";

        <android.media.ExifInterface: java.lang.String TAG_FLASH> = "Flash";

        <android.media.ExifInterface: java.lang.String TAG_EXPOSURE_TIME> = "ExposureTime";

        <android.media.ExifInterface: java.lang.String TAG_DATETIME> = "DateTime";

        <android.media.ExifInterface: java.lang.String TAG_APERTURE> = "FNumber";

        <android.media.ExifInterface: int ORIENTATION_UNDEFINED> = 0;

        <android.media.ExifInterface: int ORIENTATION_TRANSVERSE> = 7;

        <android.media.ExifInterface: int ORIENTATION_TRANSPOSE> = 5;

        <android.media.ExifInterface: int ORIENTATION_ROTATE_90> = 6;

        <android.media.ExifInterface: int ORIENTATION_ROTATE_270> = 8;

        <android.media.ExifInterface: int ORIENTATION_ROTATE_180> = 3;

        <android.media.ExifInterface: int ORIENTATION_NORMAL> = 1;

        <android.media.ExifInterface: int ORIENTATION_FLIP_VERTICAL> = 4;

        <android.media.ExifInterface: int ORIENTATION_FLIP_HORIZONTAL> = 2;

        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("jhead_jni");

        $r0 = new java.text.SimpleDateFormat;

        specialinvoke $r0.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy:MM:dd HH:mm:ss");

        <android.media.ExifInterface: java.text.SimpleDateFormat sFormatter> = $r0;

        $r1 = <android.media.ExifInterface: java.text.SimpleDateFormat sFormatter>;

        $r2 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");

        virtualinvoke $r1.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r2);

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        <android.media.ExifInterface: java.lang.Object sLock> = $r3;

        return;
    }

    public void <init>(java.lang.String) throws java.io.IOException
    {
        android.media.ExifInterface r0;
        java.lang.String r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.media.ExifInterface;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("filename cannot be null");

        throw $r2;

     label1:
        r0.<android.media.ExifInterface: java.lang.String mFilename> = r1;

        specialinvoke r0.<android.media.ExifInterface: void loadAttributes()>();

        return;
    }

    private native boolean appendThumbnailNative(java.lang.String, java.lang.String);

    private native void commitChangesNative(java.lang.String);

    private static float convertRationalLatLonToFloat(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22;
        java.lang.String[] r4, r5, r6, r7;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        boolean z0, $z1;
        float $f0, $f1;
        java.lang.IllegalArgumentException $r23, $r25;
        java.lang.ArrayIndexOutOfBoundsException $r24;
        java.lang.NumberFormatException $r26;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

     label1:
        r4 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $r8 = r4[0];

        r5 = virtualinvoke $r8.<java.lang.String: java.lang.String[] split(java.lang.String)>("/");

        $r10 = r5[0];

        $r9 = virtualinvoke $r10.<java.lang.String: java.lang.String trim()>();

        $d4 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r9);

        $r11 = r5[1];

        $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String trim()>();

        $d5 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r12);

        d0 = $d4 / $d5;

        $r13 = r4[1];

        r6 = virtualinvoke $r13.<java.lang.String: java.lang.String[] split(java.lang.String)>("/");

        $r15 = r6[0];

        $r14 = virtualinvoke $r15.<java.lang.String: java.lang.String trim()>();

        $d6 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r14);

        $r16 = r6[1];

        $r18 = virtualinvoke $r16.<java.lang.String: java.lang.String trim()>();

        $d7 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r18);

        d1 = $d6 / $d7;

        $r17 = r4[2];

        r7 = virtualinvoke $r17.<java.lang.String: java.lang.String[] split(java.lang.String)>("/");

        $r20 = r7[0];

        $r21 = virtualinvoke $r20.<java.lang.String: java.lang.String trim()>();

        $d8 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r21);

        $r19 = r7[1];

        $r22 = virtualinvoke $r19.<java.lang.String: java.lang.String trim()>();

        $d11 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r22);

        d2 = $d8 / $d11;

        $d9 = d1 / 60.0;

        $d13 = d0 + $d9;

        $d10 = d2 / 3600.0;

        d3 = $d13 + $d10;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("S");

        if $z1 != 0 goto label3;

        z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("W");

     label2:
        if z0 == 0 goto label4;

     label3:
        $d12 = neg d3;

        $f0 = (float) $d12;

        return $f0;

     label4:
        $f1 = (float) d3;

        return $f1;

     label5:
        $r26 := @caughtexception;

        $r25 = new java.lang.IllegalArgumentException;

        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r25;

     label6:
        $r24 := @caughtexception;

        $r23 = new java.lang.IllegalArgumentException;

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r23;

        catch java.lang.NumberFormatException from label1 to label2 with label5;
        catch java.lang.ArrayIndexOutOfBoundsException from label1 to label2 with label6;
    }

    private native java.lang.String getAttributesNative(java.lang.String);

    private native byte[] getThumbnailNative(java.lang.String);

    private native long[] getThumbnailRangeNative(java.lang.String);

    private void loadAttributes() throws java.io.IOException
    {
        android.media.ExifInterface r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r11;
        java.lang.String r3, r4, r5, $r7, $r8, $r9;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9;
        java.util.HashMap $r6, $r10;
        boolean $z0, $z1;

        r0 := @this: android.media.ExifInterface;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r0.<android.media.ExifInterface: java.util.HashMap mAttributes> = $r6;

        r1 = <android.media.ExifInterface: java.lang.Object sLock>;

        entermonitor r1;

     label1:
        $r7 = r0.<android.media.ExifInterface: java.lang.String mFilename>;

        r3 = specialinvoke r0.<android.media.ExifInterface: java.lang.String getAttributesNative(java.lang.String)>($r7);

        exitmonitor r1;

     label2:
        i0 = virtualinvoke r3.<java.lang.String: int indexOf(int)>(32);

        $r8 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);

        i2 = i0 + 1;

        i3 = 0;

     label3:
        if i3 >= i1 goto label9;

        i4 = virtualinvoke r3.<java.lang.String: int indexOf(int,int)>(61, i2);

        r4 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(i2, i4);

        i5 = i4 + 1;

        i6 = virtualinvoke r3.<java.lang.String: int indexOf(int,int)>(32, i5);

        $r9 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(i5, i6);

        i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

        i8 = i6 + 1;

        $i9 = i8 + i7;

        r5 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(i8, $i9);

        i2 = i8 + i7;

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("hasThumbnail");

        if $z0 == 0 goto label8;

        $z1 = virtualinvoke r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        r0.<android.media.ExifInterface: boolean mHasThumbnail> = $z1;

     label4:
        i3 = i3 + 1;

        goto label3;

     label5:
        $r11 := @caughtexception;

        r2 = $r11;

     label6:
        exitmonitor r1;

     label7:
        throw r2;

     label8:
        $r10 = r0.<android.media.ExifInterface: java.util.HashMap mAttributes>;

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r5);

        goto label4;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    private native void saveAttributesNative(java.lang.String, java.lang.String);

    public double getAltitude(double)
    {
        android.media.ExifInterface r0;
        double d0, d1, $d2;
        byte b0, $b2;
        int i1;

        r0 := @this: android.media.ExifInterface;

        d0 := @parameter0: double;

        b0 = -1;

        d1 = virtualinvoke r0.<android.media.ExifInterface: double getAttributeDouble(java.lang.String,double)>("GPSAltitude", -1.0);

        i1 = virtualinvoke r0.<android.media.ExifInterface: int getAttributeInt(java.lang.String,int)>("GPSAltitudeRef", b0);

        $b2 = d1 cmpl 0.0;

        if $b2 < 0 goto label2;

        if i1 < 0 goto label2;

        if i1 != 1 goto label3;

     label1:
        $d2 = (double) b0;

        d0 = d1 * $d2;

     label2:
        return d0;

     label3:
        b0 = 1;

        goto label1;
    }

    public java.lang.String getAttribute(java.lang.String)
    {
        android.media.ExifInterface r0;
        java.lang.String r1, $r4;
        java.util.HashMap $r2;
        java.lang.Object $r3;

        r0 := @this: android.media.ExifInterface;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.media.ExifInterface: java.util.HashMap mAttributes>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public double getAttributeDouble(java.lang.String, double)
    {
        android.media.ExifInterface r0;
        java.lang.String r1, r2, $r6, $r7;
        double d0, d1, d2, $d3;
        int i0, $i1;
        java.util.HashMap $r4;
        java.lang.Object $r5;
        byte $b2;
        java.lang.NumberFormatException $r8;

        r0 := @this: android.media.ExifInterface;

        r1 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        $r4 = r0.<android.media.ExifInterface: java.util.HashMap mAttributes>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.lang.String) $r5;

        if r2 != null goto label2;

     label1:
        return d0;

     label2:
        i0 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>("/");

     label3:
        if i0 == -1 goto label1;

     label4:
        $i1 = i0 + 1;

        $r6 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i1);

        d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r6);

     label5:
        $b2 = d1 cmpl 0.0;

        if $b2 == 0 goto label1;

     label6:
        $r7 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        d2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r7);

     label7:
        $d3 = d2 / d1;

        return $d3;

     label8:
        $r8 := @caughtexception;

        return d0;

        catch java.lang.NumberFormatException from label2 to label3 with label8;
        catch java.lang.NumberFormatException from label4 to label5 with label8;
        catch java.lang.NumberFormatException from label6 to label7 with label8;
    }

    public int getAttributeInt(java.lang.String, int)
    {
        android.media.ExifInterface r0;
        java.lang.String r1, r2;
        int i0, i1;
        java.util.HashMap $r4;
        java.lang.Object $r5;
        java.lang.Integer $r6;
        java.lang.NumberFormatException $r7;

        r0 := @this: android.media.ExifInterface;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r4 = r0.<android.media.ExifInterface: java.util.HashMap mAttributes>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.lang.String) $r5;

        if r2 != null goto label1;

        return i0;

     label1:
        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(r2);

        i1 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

     label2:
        return i1;

     label3:
        $r7 := @caughtexception;

        return i0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public long getDateTime()
    {
        android.media.ExifInterface r0;
        java.lang.String r1;
        java.text.ParsePosition r2, $r7;
        java.util.Date r4;
        long l0;
        java.util.HashMap $r5;
        java.lang.Object $r6;
        java.text.SimpleDateFormat $r8;
        java.lang.IllegalArgumentException $r9;

        r0 := @this: android.media.ExifInterface;

        $r5 = r0.<android.media.ExifInterface: java.util.HashMap mAttributes>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("DateTime");

        r1 = (java.lang.String) $r6;

        if r1 != null goto label2;

     label1:
        return -1L;

     label2:
        $r7 = new java.text.ParsePosition;

        specialinvoke $r7.<java.text.ParsePosition: void <init>(int)>(0);

        r2 = $r7;

     label3:
        $r8 = <android.media.ExifInterface: java.text.SimpleDateFormat sFormatter>;

        r4 = virtualinvoke $r8.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String,java.text.ParsePosition)>(r1, r2);

     label4:
        if r4 == null goto label1;

     label5:
        l0 = virtualinvoke r4.<java.util.Date: long getTime()>();

     label6:
        return l0;

     label7:
        $r9 := @caughtexception;

        return -1L;

        catch java.lang.IllegalArgumentException from label3 to label4 with label7;
        catch java.lang.IllegalArgumentException from label5 to label6 with label7;
    }

    public long getGpsDateTime()
    {
        android.media.ExifInterface r0;
        java.lang.String r1, r2, r3;
        java.text.ParsePosition r4, $r16;
        java.util.Date r6;
        long l0;
        java.util.HashMap $r7, $r9;
        java.lang.Object $r8, $r10;
        java.lang.StringBuilder $r11, $r12, $r13, $r14;
        java.text.SimpleDateFormat $r15;
        java.lang.IllegalArgumentException $r17;

        r0 := @this: android.media.ExifInterface;

        $r7 = r0.<android.media.ExifInterface: java.util.HashMap mAttributes>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("GPSDateStamp");

        r1 = (java.lang.String) $r8;

        $r9 = r0.<android.media.ExifInterface: java.util.HashMap mAttributes>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("GPSTimeStamp");

        r2 = (java.lang.String) $r10;

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        return -1L;

     label2:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r3 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        if r3 == null goto label1;

        $r16 = new java.text.ParsePosition;

        specialinvoke $r16.<java.text.ParsePosition: void <init>(int)>(0);

        r4 = $r16;

     label3:
        $r15 = <android.media.ExifInterface: java.text.SimpleDateFormat sFormatter>;

        r6 = virtualinvoke $r15.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String,java.text.ParsePosition)>(r3, r4);

     label4:
        if r6 == null goto label1;

     label5:
        l0 = virtualinvoke r6.<java.util.Date: long getTime()>();

     label6:
        return l0;

     label7:
        $r17 := @caughtexception;

        return -1L;

        catch java.lang.IllegalArgumentException from label3 to label4 with label7;
        catch java.lang.IllegalArgumentException from label5 to label6 with label7;
    }

    public boolean getLatLong(float[])
    {
        android.media.ExifInterface r0;
        float[] r1;
        java.lang.String r2, r3, r4, r5;
        java.util.HashMap $r7, $r9, $r11, $r13;
        java.lang.Object $r8, $r10, $r12, $r14;
        float $f0, $f1;
        java.lang.IllegalArgumentException $r15;

        r0 := @this: android.media.ExifInterface;

        r1 := @parameter0: float[];

        $r7 = r0.<android.media.ExifInterface: java.util.HashMap mAttributes>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("GPSLatitude");

        r2 = (java.lang.String) $r8;

        $r9 = r0.<android.media.ExifInterface: java.util.HashMap mAttributes>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("GPSLatitudeRef");

        r3 = (java.lang.String) $r10;

        $r11 = r0.<android.media.ExifInterface: java.util.HashMap mAttributes>;

        $r12 = virtualinvoke $r11.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("GPSLongitude");

        r4 = (java.lang.String) $r12;

        $r13 = r0.<android.media.ExifInterface: java.util.HashMap mAttributes>;

        $r14 = virtualinvoke $r13.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("GPSLongitudeRef");

        r5 = (java.lang.String) $r14;

        if r2 == null goto label4;

        if r3 == null goto label4;

        if r4 == null goto label4;

        if r5 == null goto label4;

     label1:
        $f0 = staticinvoke <android.media.ExifInterface: float convertRationalLatLonToFloat(java.lang.String,java.lang.String)>(r2, r3);

        r1[0] = $f0;

        $f1 = staticinvoke <android.media.ExifInterface: float convertRationalLatLonToFloat(java.lang.String,java.lang.String)>(r4, r5);

        r1[1] = $f1;

     label2:
        return 1;

     label3:
        $r15 := @caughtexception;

     label4:
        return 0;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public byte[] getThumbnail()
    {
        android.media.ExifInterface r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r5;
        byte[] r3;
        java.lang.String $r4;

        r0 := @this: android.media.ExifInterface;

        r1 = <android.media.ExifInterface: java.lang.Object sLock>;

        entermonitor r1;

     label1:
        $r4 = r0.<android.media.ExifInterface: java.lang.String mFilename>;

        r3 = specialinvoke r0.<android.media.ExifInterface: byte[] getThumbnailNative(java.lang.String)>($r4);

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public long[] getThumbnailRange()
    {
        android.media.ExifInterface r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r5;
        long[] r3;
        java.lang.String $r4;

        r0 := @this: android.media.ExifInterface;

        r1 = <android.media.ExifInterface: java.lang.Object sLock>;

        entermonitor r1;

     label1:
        $r4 = r0.<android.media.ExifInterface: java.lang.String mFilename>;

        r3 = specialinvoke r0.<android.media.ExifInterface: long[] getThumbnailRangeNative(java.lang.String)>($r4);

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean hasThumbnail()
    {
        android.media.ExifInterface r0;
        boolean $z0;

        r0 := @this: android.media.ExifInterface;

        $z0 = r0.<android.media.ExifInterface: boolean mHasThumbnail>;

        return $z0;
    }

    public void saveAttributes() throws java.io.IOException
    {
        android.media.ExifInterface r0;
        java.lang.StringBuilder r1, $r9, $r12, $r13, $r15, $r23, $r24, $r27, $r28, $r30, $r32;
        int i0, $i1;
        java.util.Iterator r2;
        java.lang.String r3, r7, r8, $r14, $r19, $r20, $r29, $r31;
        java.lang.Object r4, $r21, $r22, $r25;
        java.lang.Throwable r5, $r33;
        java.util.Map$Entry r6;
        java.util.HashMap $r10, $r11, $r16;
        boolean $z0, $z1, $z2;
        java.util.Set $r18;

        r0 := @this: android.media.ExifInterface;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        r1 = $r9;

        $r10 = r0.<android.media.ExifInterface: java.util.HashMap mAttributes>;

        i0 = virtualinvoke $r10.<java.util.HashMap: int size()>();

        $r11 = r0.<android.media.ExifInterface: java.util.HashMap mAttributes>;

        $z0 = virtualinvoke $r11.<java.util.HashMap: boolean containsKey(java.lang.Object)>("hasThumbnail");

        if $z0 == 0 goto label1;

        i0 = i0 + -1;

     label1:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = r0.<android.media.ExifInterface: java.util.HashMap mAttributes>;

        $r18 = virtualinvoke $r16.<java.util.HashMap: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r22 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r22;

        $r21 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        r7 = (java.lang.String) $r21;

        $z2 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("hasThumbnail");

        if $z2 != 0 goto label2;

        $r25 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        r8 = (java.lang.String) $r25;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $i1 = virtualinvoke r8.<java.lang.String: int length()>();

        $r32 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r30 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        goto label2;

     label3:
        r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        r4 = <android.media.ExifInterface: java.lang.Object sLock>;

        entermonitor r4;

     label4:
        $r19 = r0.<android.media.ExifInterface: java.lang.String mFilename>;

        specialinvoke r0.<android.media.ExifInterface: void saveAttributesNative(java.lang.String,java.lang.String)>($r19, r3);

        $r20 = r0.<android.media.ExifInterface: java.lang.String mFilename>;

        specialinvoke r0.<android.media.ExifInterface: void commitChangesNative(java.lang.String)>($r20);

        exitmonitor r4;

     label5:
        return;

     label6:
        $r33 := @caughtexception;

        r5 = $r33;

     label7:
        exitmonitor r4;

     label8:
        throw r5;

        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void setAttribute(java.lang.String, java.lang.String)
    {
        android.media.ExifInterface r0;
        java.lang.String r1, r2;
        java.util.HashMap $r3;

        r0 := @this: android.media.ExifInterface;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<android.media.ExifInterface: java.util.HashMap mAttributes>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }
}
