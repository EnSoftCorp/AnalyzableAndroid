public class com.android.org.conscrypt.SSLEngineAppData extends java.lang.Object implements com.android.org.conscrypt.Appendable
{
    byte[] buffer;

    protected void <init>()
    {
        com.android.org.conscrypt.SSLEngineAppData r0;

        r0 := @this: com.android.org.conscrypt.SSLEngineAppData;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void append(byte[])
    {
        com.android.org.conscrypt.SSLEngineAppData r0;
        byte[] r1, $r2;
        com.android.org.conscrypt.AlertException $r3;
        javax.net.ssl.SSLException $r4;

        r0 := @this: com.android.org.conscrypt.SSLEngineAppData;

        r1 := @parameter0: byte[];

        $r2 = r0.<com.android.org.conscrypt.SSLEngineAppData: byte[] buffer>;

        if $r2 == null goto label1;

        $r3 = new com.android.org.conscrypt.AlertException;

        $r4 = new javax.net.ssl.SSLException;

        specialinvoke $r4.<javax.net.ssl.SSLException: void <init>(java.lang.String)>("Attempt to override the data");

        specialinvoke $r3.<com.android.org.conscrypt.AlertException: void <init>(byte,javax.net.ssl.SSLException)>(80, $r4);

        throw $r3;

     label1:
        r0.<com.android.org.conscrypt.SSLEngineAppData: byte[] buffer> = r1;

        return;
    }

    protected int placeTo(java.nio.ByteBuffer[], int, int)
    {
        com.android.org.conscrypt.SSLEngineAppData r0;
        java.nio.ByteBuffer[] r1;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8;
        byte[] $r2, $r3, $r7, $r10;
        com.android.org.conscrypt.AlertException $r4;
        javax.net.ssl.SSLException $r5;
        java.nio.ByteBuffer $r6, $r9, $r12;

        r0 := @this: com.android.org.conscrypt.SSLEngineAppData;

        r1 := @parameter0: java.nio.ByteBuffer[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.org.conscrypt.SSLEngineAppData: byte[] buffer>;

        if $r2 != null goto label1;

        return 0;

     label1:
        i2 = 0;

        $r3 = r0.<com.android.org.conscrypt.SSLEngineAppData: byte[] buffer>;

        i3 = lengthof $r3;

        i4 = i0;

     label2:
        $i6 = i0 + i1;

        if i4 >= $i6 goto label3;

        $r6 = r1[i4];

        i5 = virtualinvoke $r6.<java.nio.ByteBuffer: int remaining()>();

        $i7 = i3 - i2;

        if $i7 >= i5 goto label4;

        $r12 = r1[i4];

        $r10 = r0.<com.android.org.conscrypt.SSLEngineAppData: byte[] buffer>;

        $i8 = i3 - i2;

        virtualinvoke $r12.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>($r10, i2, $i8);

        i2 = i3;

     label3:
        if i2 == i3 goto label5;

        $r4 = new com.android.org.conscrypt.AlertException;

        $r5 = new javax.net.ssl.SSLException;

        specialinvoke $r5.<javax.net.ssl.SSLException: void <init>(java.lang.String)>("The received application data could not be fully writteninto the destination buffers");

        specialinvoke $r4.<com.android.org.conscrypt.AlertException: void <init>(byte,javax.net.ssl.SSLException)>(80, $r5);

        throw $r4;

     label4:
        $r9 = r1[i4];

        $r7 = r0.<com.android.org.conscrypt.SSLEngineAppData: byte[] buffer>;

        virtualinvoke $r9.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>($r7, i2, i5);

        i2 = i2 + i5;

        i4 = i4 + 1;

        goto label2;

     label5:
        r0.<com.android.org.conscrypt.SSLEngineAppData: byte[] buffer> = null;

        return i3;
    }
}
