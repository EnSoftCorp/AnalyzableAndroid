public class android.content.res.ColorStateList extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private static final int[][] EMPTY;
    private static final android.util.SparseArray sCache;
    private int[] mColors;
    private int mDefaultColor;
    private int[][] mStateSpecs;

    static void <clinit>()
    {
        int[][] $r0;
        int[] $r1;
        android.util.SparseArray $r2;
        android.content.res.ColorStateList$1 $r3;

        $r0 = newarray (int[])[1];

        $r1 = newarray (int)[0];

        $r0[0] = $r1;

        <android.content.res.ColorStateList: int[][] EMPTY> = $r0;

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        <android.content.res.ColorStateList: android.util.SparseArray sCache> = $r2;

        $r3 = new android.content.res.ColorStateList$1;

        specialinvoke $r3.<android.content.res.ColorStateList$1: void <init>()>();

        <android.content.res.ColorStateList: android.os.Parcelable$Creator CREATOR> = $r3;

        return;
    }

    private void <init>()
    {
        android.content.res.ColorStateList r0;

        r0 := @this: android.content.res.ColorStateList;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.res.ColorStateList: int mDefaultColor> = -65536;

        return;
    }

    public void <init>(int[][], int[])
    {
        android.content.res.ColorStateList r0;
        int[][] r1;
        int[] r2, $r3;
        int i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.content.res.ColorStateList;

        r1 := @parameter0: int[][];

        r2 := @parameter1: int[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.res.ColorStateList: int mDefaultColor> = -65536;

        r0.<android.content.res.ColorStateList: int[][] mStateSpecs> = r1;

        r0.<android.content.res.ColorStateList: int[] mColors> = r2;

        $i1 = lengthof r1;

        if $i1 <= 0 goto label3;

        $i2 = r2[0];

        r0.<android.content.res.ColorStateList: int mDefaultColor> = $i2;

        i0 = 0;

     label1:
        $i3 = lengthof r1;

        if i0 >= $i3 goto label3;

        $r3 = r1[i0];

        $i4 = lengthof $r3;

        if $i4 != 0 goto label2;

        $i5 = r2[i0];

        r0.<android.content.res.ColorStateList: int mDefaultColor> = $i5;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return;
    }

    public static android.content.res.ColorStateList createFromXml(android.content.res.Resources, org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.Resources r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.util.AttributeSet r2;
        int i0;
        android.content.res.ColorStateList $r3;
        org.xmlpull.v1.XmlPullParserException $r4;

        r0 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r2 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r1);

     label1:
        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i0 == 2 goto label2;

        if i0 != 1 goto label1;

     label2:
        if i0 == 2 goto label3;

        $r4 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r4.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("No start tag found");

        throw $r4;

     label3:
        $r3 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>(r0, r1, r2);

        return $r3;
    }

    private static android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.Resources r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.util.AttributeSet r2;
        java.lang.String r3, $r7, $r11;
        android.content.res.ColorStateList r4, $r12;
        boolean $z0;
        org.xmlpull.v1.XmlPullParserException $r5;
        java.lang.StringBuilder $r6, $r8, $r9, $r10;

        r0 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter2: android.util.AttributeSet;

        r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("selector");

        if $z0 == 0 goto label1;

        $r12 = new android.content.res.ColorStateList;

        specialinvoke $r12.<android.content.res.ColorStateList: void <init>()>();

        r4 = $r12;

        specialinvoke r4.<android.content.res.ColorStateList: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>(r0, r1, r2);

        return r4;

     label1:
        $r5 = new org.xmlpull.v1.XmlPullParserException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": invalid drawable tag ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r11);

        throw $r5;
    }

    private void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.ColorStateList r0;
        android.content.res.Resources r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.util.AttributeSet r3;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, $i12, $i13, $i14, $i15;
        int[] r4, r7, r8, r10, $r11, $r12;
        int[][] r5, r6, r9, $r13;
        boolean z0, $z1, $z2;
        java.lang.String $r14, $r19, $r20;
        org.xmlpull.v1.XmlPullParserException $r15;
        java.lang.StringBuilder $r16, $r17, $r18;

        r0 := @this: android.content.res.ColorStateList;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter2: android.util.AttributeSet;

        $i12 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        i0 = 1 + $i12;

        i1 = 20;

        i2 = 0;

        r4 = newarray (int)[i1];

        r5 = newarray (int[])[i1];

     label01:
        i3 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i3 == 1 goto label15;

        i4 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if i4 >= i0 goto label02;

        if i3 == 3 goto label15;

     label02:
        if i3 != 2 goto label01;

        if i4 > i0 goto label01;

        $r14 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z1 == 0 goto label01;

        i5 = 0;

        i6 = -65536;

        z0 = 0;

        i7 = interfaceinvoke r3.<android.util.AttributeSet: int getAttributeCount()>();

        r7 = newarray (int)[i7];

        i8 = 0;

        i9 = 0;

     label03:
        if i8 >= i7 goto label04;

        i11 = interfaceinvoke r3.<android.util.AttributeSet: int getAttributeNameResource(int)>(i8);

        if i11 != 0 goto label09;

     label04:
        r8 = staticinvoke <android.util.StateSet: int[] trimStateSet(int[],int)>(r7, i9);

        if i5 == 0 goto label14;

        i6 = virtualinvoke r1.<android.content.res.Resources: int getColor(int)>(i5);

     label05:
        if i2 == 0 goto label06;

        $i14 = lengthof r8;

        if $i14 != 0 goto label07;

     label06:
        r0.<android.content.res.ColorStateList: int mDefaultColor> = i6;

     label07:
        $i13 = i2 + 1;

        if $i13 < i1 goto label08;

        $i15 = i2 + 1;

        i1 = staticinvoke <com.android.internal.util.ArrayUtils: int idealIntArraySize(int)>($i15);

        r10 = newarray (int)[i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, 0, r10, 0, i2);

        r9 = newarray (int[])[i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r5, 0, r9, 0, i2);

        r4 = r10;

        r5 = r9;

     label08:
        r4[i2] = i6;

        r5[i2] = r8;

        i2 = i2 + 1;

        goto label01;

     label09:
        if i11 != 16843173 goto label11;

        i5 = interfaceinvoke r3.<android.util.AttributeSet: int getAttributeResourceValue(int,int)>(i8, 0);

        if i5 != 0 goto label16;

        i6 = interfaceinvoke r3.<android.util.AttributeSet: int getAttributeIntValue(int,int)>(i8, i6);

        z0 = 1;

        i10 = i9;

     label10:
        i8 = i8 + 1;

        i9 = i10;

        goto label03;

     label11:
        i10 = i9 + 1;

        $z2 = interfaceinvoke r3.<android.util.AttributeSet: boolean getAttributeBooleanValue(int,boolean)>(i8, 0);

        if $z2 == 0 goto label13;

     label12:
        r7[i9] = i11;

        goto label10;

     label13:
        i11 = neg i11;

        goto label12;

     label14:
        if z0 != 0 goto label05;

        $r15 = new org.xmlpull.v1.XmlPullParserException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r16 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <item> tag requires a \'android:color\' attribute.");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r20);

        throw $r15;

     label15:
        $r11 = newarray (int)[i2];

        r0.<android.content.res.ColorStateList: int[] mColors> = $r11;

        $r13 = newarray (int[])[i2];

        r0.<android.content.res.ColorStateList: int[][] mStateSpecs> = $r13;

        $r12 = r0.<android.content.res.ColorStateList: int[] mColors>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, 0, $r12, 0, i2);

        r6 = r0.<android.content.res.ColorStateList: int[][] mStateSpecs>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r5, 0, r6, 0, i2);

        return;

     label16:
        i10 = i9;

        goto label10;
    }

    public static android.content.res.ColorStateList valueOf(int)
    {
        int i0;
        android.util.SparseArray r0, $r5, $r11;
        java.lang.Throwable r1, $r12;
        java.lang.ref.WeakReference r2, $r10;
        android.content.res.ColorStateList r3, r4, $r7;
        java.lang.Object $r6, $r13;
        int[] $r8;
        int[][] $r9;

        i0 := @parameter0: int;

        r0 = <android.content.res.ColorStateList: android.util.SparseArray sCache>;

        entermonitor r0;

     label01:
        $r5 = <android.content.res.ColorStateList: android.util.SparseArray sCache>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (java.lang.ref.WeakReference) $r6;

     label02:
        if r2 == null goto label12;

     label03:
        $r13 = virtualinvoke r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r3 = (android.content.res.ColorStateList) $r13;

     label04:
        if r3 == null goto label07;

     label05:
        exitmonitor r0;

     label06:
        return r3;

     label07:
        $r7 = new android.content.res.ColorStateList;

        $r9 = <android.content.res.ColorStateList: int[][] EMPTY>;

        $r8 = newarray (int)[1];

        $r8[0] = i0;

        specialinvoke $r7.<android.content.res.ColorStateList: void <init>(int[][],int[])>($r9, $r8);

        r4 = $r7;

        $r11 = <android.content.res.ColorStateList: android.util.SparseArray sCache>;

        $r10 = new java.lang.ref.WeakReference;

        specialinvoke $r10.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r4);

        virtualinvoke $r11.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r10);

        exitmonitor r0;

     label08:
        return r4;

     label09:
        $r12 := @caughtexception;

        r1 = $r12;

     label10:
        exitmonitor r0;

     label11:
        throw r1;

     label12:
        r3 = null;

        goto label04;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public int describeContents()
    {
        android.content.res.ColorStateList r0;

        r0 := @this: android.content.res.ColorStateList;

        return 0;
    }

    public int getColorForState(int[], int)
    {
        android.content.res.ColorStateList r0;
        int[] r1, $r4, $r5;
        int i0, i1, i2;
        int[][] $r2, $r3;
        boolean $z0;

        r0 := @this: android.content.res.ColorStateList;

        r1 := @parameter0: int[];

        i0 := @parameter1: int;

        $r2 = r0.<android.content.res.ColorStateList: int[][] mStateSpecs>;

        i1 = lengthof $r2;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r3 = r0.<android.content.res.ColorStateList: int[][] mStateSpecs>;

        $r4 = $r3[i2];

        $z0 = staticinvoke <android.util.StateSet: boolean stateSetMatches(int[],int[])>($r4, r1);

        if $z0 == 0 goto label3;

        $r5 = r0.<android.content.res.ColorStateList: int[] mColors>;

        i0 = $r5[i2];

     label2:
        return i0;

     label3:
        i2 = i2 + 1;

        goto label1;
    }

    public int getDefaultColor()
    {
        android.content.res.ColorStateList r0;
        int $i0;

        r0 := @this: android.content.res.ColorStateList;

        $i0 = r0.<android.content.res.ColorStateList: int mDefaultColor>;

        return $i0;
    }

    public boolean isStateful()
    {
        android.content.res.ColorStateList r0;
        int[][] $r1;
        int $i0;

        r0 := @this: android.content.res.ColorStateList;

        $r1 = r0.<android.content.res.ColorStateList: int[][] mStateSpecs>;

        $i0 = lengthof $r1;

        if $i0 <= 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.String toString()
    {
        android.content.res.ColorStateList r0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6, $r9, $r10, $r11, $r12;
        int[][] $r3;
        java.lang.String $r4, $r8, $r13;
        int[] $r7;
        int $i0;

        r0 := @this: android.content.res.ColorStateList;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ColorStateList{mStateSpecs=");

        $r3 = r0.<android.content.res.ColorStateList: int[][] mStateSpecs>;

        $r4 = staticinvoke <java.util.Arrays: java.lang.String deepToString(java.lang.Object[])>($r3);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mColors=");

        $r7 = r0.<android.content.res.ColorStateList: int[] mColors>;

        $r8 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>($r7);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mDefaultColor=");

        $i0 = r0.<android.content.res.ColorStateList: int mDefaultColor>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    public android.content.res.ColorStateList withAlpha(int)
    {
        android.content.res.ColorStateList r0, $r3;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        int[] r1, $r2, $r5;
        int[][] $r4;

        r0 := @this: android.content.res.ColorStateList;

        i0 := @parameter0: int;

        $r2 = r0.<android.content.res.ColorStateList: int[] mColors>;

        $i3 = lengthof $r2;

        r1 = newarray (int)[$i3];

        i1 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r5 = r0.<android.content.res.ColorStateList: int[] mColors>;

        $i4 = $r5[i2];

        $i6 = 16777215 & $i4;

        $i5 = i0 << 24;

        $i7 = $i6 | $i5;

        r1[i2] = $i7;

        i2 = i2 + 1;

        goto label1;

     label2:
        $r3 = new android.content.res.ColorStateList;

        $r4 = r0.<android.content.res.ColorStateList: int[][] mStateSpecs>;

        specialinvoke $r3.<android.content.res.ColorStateList: void <init>(int[][],int[])>($r4, r1);

        return $r3;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.content.res.ColorStateList r0;
        android.os.Parcel r1;
        int i0, i1, i2;
        int[][] $r2, $r4;
        int[] $r3, $r5;

        r0 := @this: android.content.res.ColorStateList;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.content.res.ColorStateList: int[][] mStateSpecs>;

        i1 = lengthof $r2;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r4 = r0.<android.content.res.ColorStateList: int[][] mStateSpecs>;

        $r5 = $r4[i2];

        virtualinvoke r1.<android.os.Parcel: void writeIntArray(int[])>($r5);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r3 = r0.<android.content.res.ColorStateList: int[] mColors>;

        virtualinvoke r1.<android.os.Parcel: void writeIntArray(int[])>($r3);

        return;
    }
}
