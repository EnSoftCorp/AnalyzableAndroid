public class com.android.org.chromium.content.browser.ResourceExtractor extends java.lang.Object
{
    static final boolean $assertionsDisabled;
    private static boolean sExtractImplicitLocalePak;
    private static com.android.org.chromium.content.browser.ResourceExtractor sInstance;
    private static java.lang.String[] sMandatoryPaks;
    private final android.content.Context mContext;
    private com.android.org.chromium.content.browser.ResourceExtractor$ExtractTask mExtractTask;
    private final java.io.File mOutputDir;

    static void <clinit>()
    {
        boolean z0, $z1;
        java.lang.Class $r0;

        $r0 = class "com/android/org/chromium/content/browser/ResourceExtractor";

        $z1 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z1 != 0 goto label2;

        z0 = 1;

     label1:
        <com.android.org.chromium.content.browser.ResourceExtractor: boolean $assertionsDisabled> = z0;

        <com.android.org.chromium.content.browser.ResourceExtractor: java.lang.String[] sMandatoryPaks> = null;

        <com.android.org.chromium.content.browser.ResourceExtractor: boolean sExtractImplicitLocalePak> = 1;

        return;

     label2:
        z0 = 0;

        goto label1;
    }

    private void <init>(android.content.Context)
    {
        com.android.org.chromium.content.browser.ResourceExtractor r0;
        android.content.Context r1, $r2;
        java.io.File $r3;

        r0 := @this: com.android.org.chromium.content.browser.ResourceExtractor;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.org.chromium.content.browser.ResourceExtractor: android.content.Context mContext> = r1;

        $r2 = r0.<com.android.org.chromium.content.browser.ResourceExtractor: android.content.Context mContext>;

        $r3 = staticinvoke <com.android.org.chromium.content.browser.ResourceExtractor: java.io.File getOutputDirFromContext(android.content.Context)>($r2);

        r0.<com.android.org.chromium.content.browser.ResourceExtractor: java.io.File mOutputDir> = $r3;

        return;
    }

    static java.io.File access$000(com.android.org.chromium.content.browser.ResourceExtractor)
    {
        com.android.org.chromium.content.browser.ResourceExtractor r0;
        java.io.File $r1;

        r0 := @parameter0: com.android.org.chromium.content.browser.ResourceExtractor;

        $r1 = r0.<com.android.org.chromium.content.browser.ResourceExtractor: java.io.File mOutputDir>;

        return $r1;
    }

    static android.content.Context access$100(com.android.org.chromium.content.browser.ResourceExtractor)
    {
        com.android.org.chromium.content.browser.ResourceExtractor r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.org.chromium.content.browser.ResourceExtractor;

        $r1 = r0.<com.android.org.chromium.content.browser.ResourceExtractor: android.content.Context mContext>;

        return $r1;
    }

    static java.lang.String[] access$200()
    {
        java.lang.String[] $r0;

        $r0 = <com.android.org.chromium.content.browser.ResourceExtractor: java.lang.String[] sMandatoryPaks>;

        return $r0;
    }

    static boolean access$300()
    {
        boolean $z0;

        $z0 = <com.android.org.chromium.content.browser.ResourceExtractor: boolean sExtractImplicitLocalePak>;

        return $z0;
    }

    public static void deleteFiles(android.content.Context)
    {
        android.content.Context r0;
        java.io.File r1, r3;
        java.io.File[] r2;
        int i0, i1;
        boolean $z0, $z1;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r6, $r8;

        r0 := @parameter0: android.content.Context;

        r1 = staticinvoke <com.android.org.chromium.content.browser.ResourceExtractor: java.io.File getOutputDirFromContext(android.content.Context)>(r0);

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label3;

        r2 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles()>();

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = r2[i1];

        $z1 = virtualinvoke r3.<java.io.File: boolean delete()>();

        if $z1 != 0 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to remove existing resource ");

        $r6 = virtualinvoke r3.<java.io.File: java.lang.String getName()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ResourceExtractor", $r8);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public static com.android.org.chromium.content.browser.ResourceExtractor get(android.content.Context)
    {
        android.content.Context r0;
        com.android.org.chromium.content.browser.ResourceExtractor $r1, $r2, $r3;

        r0 := @parameter0: android.content.Context;

        $r1 = <com.android.org.chromium.content.browser.ResourceExtractor: com.android.org.chromium.content.browser.ResourceExtractor sInstance>;

        if $r1 != null goto label1;

        $r3 = new com.android.org.chromium.content.browser.ResourceExtractor;

        specialinvoke $r3.<com.android.org.chromium.content.browser.ResourceExtractor: void <init>(android.content.Context)>(r0);

        <com.android.org.chromium.content.browser.ResourceExtractor: com.android.org.chromium.content.browser.ResourceExtractor sInstance> = $r3;

     label1:
        $r2 = <com.android.org.chromium.content.browser.ResourceExtractor: com.android.org.chromium.content.browser.ResourceExtractor sInstance>;

        return $r2;
    }

    public static java.io.File getOutputDirFromContext(android.content.Context)
    {
        android.content.Context r0, $r2;
        java.io.File $r1;
        java.lang.String $r3;

        r0 := @parameter0: android.content.Context;

        $r1 = new java.io.File;

        $r2 = virtualinvoke r0.<android.content.Context: android.content.Context getApplicationContext()>();

        $r3 = staticinvoke <com.android.org.chromium.base.PathUtils: java.lang.String getDataDirectory(android.content.Context)>($r2);

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r3, "paks");

        return $r1;
    }

    public static transient void setMandatoryPaksToExtract(java.lang.String[])
    {
        java.lang.String[] r0;
        boolean $z0;
        com.android.org.chromium.content.browser.ResourceExtractor $r1, $r2;
        com.android.org.chromium.content.browser.ResourceExtractor$ExtractTask $r3;
        java.lang.AssertionError $r4;

        r0 := @parameter0: java.lang.String[];

        $z0 = <com.android.org.chromium.content.browser.ResourceExtractor: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r1 = <com.android.org.chromium.content.browser.ResourceExtractor: com.android.org.chromium.content.browser.ResourceExtractor sInstance>;

        if $r1 == null goto label1;

        $r2 = <com.android.org.chromium.content.browser.ResourceExtractor: com.android.org.chromium.content.browser.ResourceExtractor sInstance>;

        $r3 = $r2.<com.android.org.chromium.content.browser.ResourceExtractor: com.android.org.chromium.content.browser.ResourceExtractor$ExtractTask mExtractTask>;

        if $r3 == null goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>("Must be called before startExtractingResources is called");

        throw $r4;

     label1:
        <com.android.org.chromium.content.browser.ResourceExtractor: java.lang.String[] sMandatoryPaks> = r0;

        return;
    }

    private static boolean shouldSkipPakExtraction()
    {
        boolean $z0, $z1;
        java.lang.String[] $r0, $r1, $r4;
        int $i0;
        java.lang.String $r2, $r3;
        java.lang.AssertionError $r5;

        $z0 = <com.android.org.chromium.content.browser.ResourceExtractor: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r4 = <com.android.org.chromium.content.browser.ResourceExtractor: java.lang.String[] sMandatoryPaks>;

        if $r4 != null goto label1;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label1:
        $r0 = <com.android.org.chromium.content.browser.ResourceExtractor: java.lang.String[] sMandatoryPaks>;

        $i0 = lengthof $r0;

        if $i0 != 1 goto label2;

        $r3 = "";

        $r1 = <com.android.org.chromium.content.browser.ResourceExtractor: java.lang.String[] sMandatoryPaks>;

        $r2 = $r1[0];

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public void startExtractingResources()
    {
        com.android.org.chromium.content.browser.ResourceExtractor r0;
        com.android.org.chromium.content.browser.ResourceExtractor$ExtractTask $r1, $r2, $r5;
        boolean $z0;
        java.lang.Void[] $r3;
        java.util.concurrent.Executor $r4;

        r0 := @this: com.android.org.chromium.content.browser.ResourceExtractor;

        $r1 = r0.<com.android.org.chromium.content.browser.ResourceExtractor: com.android.org.chromium.content.browser.ResourceExtractor$ExtractTask mExtractTask>;

        if $r1 == null goto label2;

     label1:
        return;

     label2:
        $z0 = staticinvoke <com.android.org.chromium.content.browser.ResourceExtractor: boolean shouldSkipPakExtraction()>();

        if $z0 != 0 goto label1;

        $r2 = new com.android.org.chromium.content.browser.ResourceExtractor$ExtractTask;

        specialinvoke $r2.<com.android.org.chromium.content.browser.ResourceExtractor$ExtractTask: void <init>(com.android.org.chromium.content.browser.ResourceExtractor)>(r0);

        r0.<com.android.org.chromium.content.browser.ResourceExtractor: com.android.org.chromium.content.browser.ResourceExtractor$ExtractTask mExtractTask> = $r2;

        $r5 = r0.<com.android.org.chromium.content.browser.ResourceExtractor: com.android.org.chromium.content.browser.ResourceExtractor$ExtractTask mExtractTask>;

        $r4 = <android.os.AsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        $r3 = newarray (java.lang.Void)[0];

        virtualinvoke $r5.<com.android.org.chromium.content.browser.ResourceExtractor$ExtractTask: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>($r4, $r3);

        return;
    }

    public void waitForCompletion()
    {
        com.android.org.chromium.content.browser.ResourceExtractor r0;
        boolean $z0, $z1;
        com.android.org.chromium.content.browser.ResourceExtractor$ExtractTask $r4, $r6;
        java.lang.AssertionError $r7;
        java.util.concurrent.ExecutionException $r8;
        android.content.Context $r9, $r11, $r13;
        java.util.concurrent.CancellationException $r10;
        java.lang.InterruptedException $r12;

        r0 := @this: com.android.org.chromium.content.browser.ResourceExtractor;

        $z0 = staticinvoke <com.android.org.chromium.content.browser.ResourceExtractor: boolean shouldSkipPakExtraction()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $z1 = <com.android.org.chromium.content.browser.ResourceExtractor: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $r6 = r0.<com.android.org.chromium.content.browser.ResourceExtractor: com.android.org.chromium.content.browser.ResourceExtractor$ExtractTask mExtractTask>;

        if $r6 != null goto label2;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label2:
        $r4 = r0.<com.android.org.chromium.content.browser.ResourceExtractor: com.android.org.chromium.content.browser.ResourceExtractor$ExtractTask mExtractTask>;

        virtualinvoke $r4.<com.android.org.chromium.content.browser.ResourceExtractor$ExtractTask: java.lang.Object get()>();

     label3:
        return;

     label4:
        $r10 := @caughtexception;

        $r11 = r0.<com.android.org.chromium.content.browser.ResourceExtractor: android.content.Context mContext>;

        staticinvoke <com.android.org.chromium.content.browser.ResourceExtractor: void deleteFiles(android.content.Context)>($r11);

        return;

     label5:
        $r8 := @caughtexception;

        $r9 = r0.<com.android.org.chromium.content.browser.ResourceExtractor: android.content.Context mContext>;

        staticinvoke <com.android.org.chromium.content.browser.ResourceExtractor: void deleteFiles(android.content.Context)>($r9);

        return;

     label6:
        $r12 := @caughtexception;

        $r13 = r0.<com.android.org.chromium.content.browser.ResourceExtractor: android.content.Context mContext>;

        staticinvoke <com.android.org.chromium.content.browser.ResourceExtractor: void deleteFiles(android.content.Context)>($r13);

        return;

        catch java.util.concurrent.CancellationException from label2 to label3 with label4;
        catch java.util.concurrent.ExecutionException from label2 to label3 with label5;
        catch java.lang.InterruptedException from label2 to label3 with label6;
    }
}
