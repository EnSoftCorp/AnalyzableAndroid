class android.service.wallpaper.IWallpaperService$Stub$Proxy extends java.lang.Object implements android.service.wallpaper.IWallpaperService
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.service.wallpaper.IWallpaperService$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.service.wallpaper.IWallpaperService$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.service.wallpaper.IWallpaperService$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.service.wallpaper.IWallpaperService$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.service.wallpaper.IWallpaperService$Stub$Proxy;

        $r1 = r0.<android.service.wallpaper.IWallpaperService$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void attach(android.service.wallpaper.IWallpaperConnection, android.os.IBinder, int, boolean, int, int) throws android.os.RemoteException
    {
        android.service.wallpaper.IWallpaperService$Stub$Proxy r0;
        android.service.wallpaper.IWallpaperConnection r1;
        android.os.IBinder r2, r5, $r6;
        int i0, i1, i2;
        boolean z0;
        byte b3;
        android.os.Parcel r3;
        java.lang.Throwable r4, $r7;

        r0 := @this: android.service.wallpaper.IWallpaperService$Stub$Proxy;

        r1 := @parameter0: android.service.wallpaper.IWallpaperConnection;

        r2 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        b3 = 1;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.service.wallpaper.IWallpaperService");

     label2:
        r5 = null;

        if r1 == null goto label4;

     label3:
        r5 = interfaceinvoke r1.<android.service.wallpaper.IWallpaperConnection: android.os.IBinder asBinder()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r5);

        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r2);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

     label5:
        if z0 == 0 goto label8;

     label6:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(b3);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i2);

        $r6 = r0.<android.service.wallpaper.IWallpaperService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r3, null, 1);

     label7:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label8:
        b3 = 0;

        goto label6;

     label9:
        $r7 := @caughtexception;

        r4 = $r7;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label4 to label5 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.service.wallpaper.IWallpaperService$Stub$Proxy r0;

        r0 := @this: android.service.wallpaper.IWallpaperService$Stub$Proxy;

        return "android.service.wallpaper.IWallpaperService";
    }
}
