public class com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner extends java.security.SignatureSpi implements com.android.org.bouncycastle.asn1.pkcs.PKCSObjectIdentifiers, com.android.org.bouncycastle.asn1.x509.X509ObjectIdentifiers
{
    private com.android.org.bouncycastle.crypto.Digest digest;
    private java.security.SecureRandom random;
    private com.android.org.bouncycastle.crypto.DSA signer;

    protected void <init>(com.android.org.bouncycastle.crypto.Digest, com.android.org.bouncycastle.crypto.DSA)
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner r0;
        com.android.org.bouncycastle.crypto.Digest r1;
        com.android.org.bouncycastle.crypto.DSA r2;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner;

        r1 := @parameter0: com.android.org.bouncycastle.crypto.Digest;

        r2 := @parameter1: com.android.org.bouncycastle.crypto.DSA;

        specialinvoke r0.<java.security.SignatureSpi: void <init>()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner: com.android.org.bouncycastle.crypto.Digest digest> = r1;

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner: com.android.org.bouncycastle.crypto.DSA signer> = r2;

        return;
    }

    private java.math.BigInteger[] derDecode(byte[]) throws java.io.IOException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner r0;
        byte[] r1;
        com.android.org.bouncycastle.asn1.ASN1Sequence r2;
        java.math.BigInteger[] r3;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r4;
        com.android.org.bouncycastle.asn1.ASN1Encodable $r5, $r8;
        com.android.org.bouncycastle.asn1.ASN1Integer $r6, $r9;
        java.math.BigInteger $r7, $r10;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner;

        r1 := @parameter0: byte[];

        $r4 = staticinvoke <com.android.org.bouncycastle.asn1.ASN1Primitive: com.android.org.bouncycastle.asn1.ASN1Primitive fromByteArray(byte[])>(r1);

        r2 = (com.android.org.bouncycastle.asn1.ASN1Sequence) $r4;

        r3 = newarray (java.math.BigInteger)[2];

        $r5 = virtualinvoke r2.<com.android.org.bouncycastle.asn1.ASN1Sequence: com.android.org.bouncycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r6 = (com.android.org.bouncycastle.asn1.ASN1Integer) $r5;

        $r7 = virtualinvoke $r6.<com.android.org.bouncycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        r3[0] = $r7;

        $r8 = virtualinvoke r2.<com.android.org.bouncycastle.asn1.ASN1Sequence: com.android.org.bouncycastle.asn1.ASN1Encodable getObjectAt(int)>(1);

        $r9 = (com.android.org.bouncycastle.asn1.ASN1Integer) $r8;

        $r10 = virtualinvoke $r9.<com.android.org.bouncycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        r3[1] = $r10;

        return r3;
    }

    private byte[] derEncode(java.math.BigInteger, java.math.BigInteger) throws java.io.IOException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner r0;
        java.math.BigInteger r1, r2;
        com.android.org.bouncycastle.asn1.ASN1Integer[] r3;
        com.android.org.bouncycastle.asn1.ASN1Integer $r4, $r5;
        com.android.org.bouncycastle.asn1.DERSequence $r6;
        byte[] $r7;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner;

        r1 := @parameter0: java.math.BigInteger;

        r2 := @parameter1: java.math.BigInteger;

        r3 = newarray (com.android.org.bouncycastle.asn1.ASN1Integer)[2];

        $r4 = new com.android.org.bouncycastle.asn1.ASN1Integer;

        specialinvoke $r4.<com.android.org.bouncycastle.asn1.ASN1Integer: void <init>(java.math.BigInteger)>(r1);

        r3[0] = $r4;

        $r5 = new com.android.org.bouncycastle.asn1.ASN1Integer;

        specialinvoke $r5.<com.android.org.bouncycastle.asn1.ASN1Integer: void <init>(java.math.BigInteger)>(r2);

        r3[1] = $r5;

        $r6 = new com.android.org.bouncycastle.asn1.DERSequence;

        specialinvoke $r6.<com.android.org.bouncycastle.asn1.DERSequence: void <init>(com.android.org.bouncycastle.asn1.ASN1Encodable[])>(r3);

        $r7 = virtualinvoke $r6.<com.android.org.bouncycastle.asn1.DERSequence: byte[] getEncoded(java.lang.String)>("DER");

        return $r7;
    }

    protected java.lang.Object engineGetParameter(java.lang.String)
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner r0;
        java.lang.String r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("engineSetParameter unsupported");

        throw $r2;
    }

    protected void engineInitSign(java.security.PrivateKey) throws java.security.InvalidKeyException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner r0;
        java.security.PrivateKey r1;
        com.android.org.bouncycastle.crypto.CipherParameters r2;
        java.security.SecureRandom $r3, $r7;
        com.android.org.bouncycastle.crypto.Digest $r4;
        com.android.org.bouncycastle.crypto.DSA $r5;
        com.android.org.bouncycastle.crypto.params.ParametersWithRandom $r6;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner;

        r1 := @parameter0: java.security.PrivateKey;

        r2 = staticinvoke <com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSAUtil: com.android.org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePrivateKeyParameter(java.security.PrivateKey)>(r1);

        $r3 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner: java.security.SecureRandom random>;

        if $r3 == null goto label1;

        $r6 = new com.android.org.bouncycastle.crypto.params.ParametersWithRandom;

        $r7 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner: java.security.SecureRandom random>;

        specialinvoke $r6.<com.android.org.bouncycastle.crypto.params.ParametersWithRandom: void <init>(com.android.org.bouncycastle.crypto.CipherParameters,java.security.SecureRandom)>(r2, $r7);

        r2 = $r6;

     label1:
        $r4 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner: com.android.org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r4.<com.android.org.bouncycastle.crypto.Digest: void reset()>();

        $r5 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner: com.android.org.bouncycastle.crypto.DSA signer>;

        interfaceinvoke $r5.<com.android.org.bouncycastle.crypto.DSA: void init(boolean,com.android.org.bouncycastle.crypto.CipherParameters)>(1, r2);

        return;
    }

    protected void engineInitSign(java.security.PrivateKey, java.security.SecureRandom) throws java.security.InvalidKeyException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner r0;
        java.security.PrivateKey r1;
        java.security.SecureRandom r2;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner;

        r1 := @parameter0: java.security.PrivateKey;

        r2 := @parameter1: java.security.SecureRandom;

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner: java.security.SecureRandom random> = r2;

        virtualinvoke r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner: void engineInitSign(java.security.PrivateKey)>(r1);

        return;
    }

    protected void engineInitVerify(java.security.PublicKey) throws java.security.InvalidKeyException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner r0;
        java.security.PublicKey r1;
        com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey r2, $r6;
        com.android.org.bouncycastle.crypto.params.AsymmetricKeyParameter r4;
        boolean $z0, $z1;
        byte[] $r7;
        com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo $r8;
        java.security.InvalidKeyException $r9, $r12;
        com.android.org.bouncycastle.crypto.Digest $r10;
        com.android.org.bouncycastle.crypto.DSA $r11;
        java.lang.Exception $r13, $r14;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner;

        r1 := @parameter0: java.security.PublicKey;

        $z0 = r1 instanceof java.security.interfaces.DSAKey;

        if $z0 == 0 goto label2;

        r4 = staticinvoke <com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSAUtil: com.android.org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey)>(r1);

     label1:
        $r10 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner: com.android.org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r10.<com.android.org.bouncycastle.crypto.Digest: void reset()>();

        $r11 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner: com.android.org.bouncycastle.crypto.DSA signer>;

        interfaceinvoke $r11.<com.android.org.bouncycastle.crypto.DSA: void init(boolean,com.android.org.bouncycastle.crypto.CipherParameters)>(0, r4);

        return;

     label2:
        $r6 = new com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey;

        $r7 = interfaceinvoke r1.<java.security.PublicKey: byte[] getEncoded()>();

        $r8 = staticinvoke <com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo getInstance(java.lang.Object)>($r7);

        specialinvoke $r6.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey: void <init>(com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>($r8);

        r2 = $r6;

     label3:
        $z1 = r2 instanceof java.security.interfaces.DSAKey;

        if $z1 == 0 goto label5;

        r4 = staticinvoke <com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSAUtil: com.android.org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey)>(r2);

     label4:
        goto label1;

     label5:
        $r9 = new java.security.InvalidKeyException;

        specialinvoke $r9.<java.security.InvalidKeyException: void <init>(java.lang.String)>("can\'t recognise key type in DSA based signer");

        throw $r9;

     label6:
        $r14 := @caughtexception;

     label7:
        $r12 = new java.security.InvalidKeyException;

        specialinvoke $r12.<java.security.InvalidKeyException: void <init>(java.lang.String)>("can\'t recognise key type in DSA based signer");

        throw $r12;

     label8:
        $r13 := @caughtexception;

        goto label7;

        catch java.lang.Exception from label2 to label3 with label8;
        catch java.lang.Exception from label3 to label4 with label6;
        catch java.lang.Exception from label5 to label6 with label6;
    }

    protected void engineSetParameter(java.lang.String, java.lang.Object)
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("engineSetParameter unsupported");

        throw $r3;
    }

    protected void engineSetParameter(java.security.spec.AlgorithmParameterSpec)
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner r0;
        java.security.spec.AlgorithmParameterSpec r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner;

        r1 := @parameter0: java.security.spec.AlgorithmParameterSpec;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("engineSetParameter unsupported");

        throw $r2;
    }

    protected byte[] engineSign() throws java.security.SignatureException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner r0;
        byte[] r1, r4;
        java.lang.Exception r2, $r10;
        java.math.BigInteger[] r3;
        com.android.org.bouncycastle.crypto.Digest $r5, $r6;
        int $i0;
        com.android.org.bouncycastle.crypto.DSA $r7;
        java.math.BigInteger $r8, $r9;
        java.lang.String $r11;
        java.security.SignatureException $r12;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner;

        $r5 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner: com.android.org.bouncycastle.crypto.Digest digest>;

        $i0 = interfaceinvoke $r5.<com.android.org.bouncycastle.crypto.Digest: int getDigestSize()>();

        r1 = newarray (byte)[$i0];

        $r6 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner: com.android.org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r6.<com.android.org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>(r1, 0);

     label1:
        $r7 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner: com.android.org.bouncycastle.crypto.DSA signer>;

        r3 = interfaceinvoke $r7.<com.android.org.bouncycastle.crypto.DSA: java.math.BigInteger[] generateSignature(byte[])>(r1);

        $r9 = r3[0];

        $r8 = r3[1];

        r4 = specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner: byte[] derEncode(java.math.BigInteger,java.math.BigInteger)>($r9, $r8);

     label2:
        return r4;

     label3:
        $r10 := @caughtexception;

        r2 = $r10;

        $r12 = new java.security.SignatureException;

        $r11 = virtualinvoke r2.<java.lang.Exception: java.lang.String toString()>();

        specialinvoke $r12.<java.security.SignatureException: void <init>(java.lang.String)>($r11);

        throw $r12;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected void engineUpdate(byte) throws java.security.SignatureException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner r0;
        byte b0;
        com.android.org.bouncycastle.crypto.Digest $r1;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner;

        b0 := @parameter0: byte;

        $r1 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner: com.android.org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r1.<com.android.org.bouncycastle.crypto.Digest: void update(byte)>(b0);

        return;
    }

    protected void engineUpdate(byte[], int, int) throws java.security.SignatureException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner r0;
        byte[] r1;
        int i0, i1;
        com.android.org.bouncycastle.crypto.Digest $r2;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner: com.android.org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r2.<com.android.org.bouncycastle.crypto.Digest: void update(byte[],int,int)>(r1, i0, i1);

        return;
    }

    protected boolean engineVerify(byte[]) throws java.security.SignatureException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner r0;
        byte[] r1, r2;
        java.math.BigInteger[] r4;
        com.android.org.bouncycastle.crypto.Digest $r5, $r6;
        int $i0;
        java.math.BigInteger $r7, $r8;
        com.android.org.bouncycastle.crypto.DSA $r9;
        boolean $z0;
        java.lang.Exception $r10;
        java.security.SignatureException $r11;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner;

        r1 := @parameter0: byte[];

        $r5 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner: com.android.org.bouncycastle.crypto.Digest digest>;

        $i0 = interfaceinvoke $r5.<com.android.org.bouncycastle.crypto.Digest: int getDigestSize()>();

        r2 = newarray (byte)[$i0];

        $r6 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner: com.android.org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r6.<com.android.org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>(r2, 0);

     label1:
        r4 = specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner: java.math.BigInteger[] derDecode(byte[])>(r1);

     label2:
        $r9 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner: com.android.org.bouncycastle.crypto.DSA signer>;

        $r8 = r4[0];

        $r7 = r4[1];

        $z0 = interfaceinvoke $r9.<com.android.org.bouncycastle.crypto.DSA: boolean verifySignature(byte[],java.math.BigInteger,java.math.BigInteger)>(r2, $r8, $r7);

        return $z0;

     label3:
        $r10 := @caughtexception;

        $r11 = new java.security.SignatureException;

        specialinvoke $r11.<java.security.SignatureException: void <init>(java.lang.String)>("error decoding signature bytes.");

        throw $r11;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
