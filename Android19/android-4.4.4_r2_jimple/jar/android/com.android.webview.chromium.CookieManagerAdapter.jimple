public class com.android.webview.chromium.CookieManagerAdapter extends android.webkit.CookieManager
{
    com.android.org.chromium.android_webview.AwCookieManager mChromeCookieManager;

    public void <init>(com.android.org.chromium.android_webview.AwCookieManager)
    {
        com.android.webview.chromium.CookieManagerAdapter r0;
        com.android.org.chromium.android_webview.AwCookieManager r1;

        r0 := @this: com.android.webview.chromium.CookieManagerAdapter;

        r1 := @parameter0: com.android.org.chromium.android_webview.AwCookieManager;

        specialinvoke r0.<android.webkit.CookieManager: void <init>()>();

        r0.<com.android.webview.chromium.CookieManagerAdapter: com.android.org.chromium.android_webview.AwCookieManager mChromeCookieManager> = r1;

        return;
    }

    private static java.lang.String fixupUrl(java.lang.String) throws android.net.ParseException
    {
        java.lang.String r0, $r2;
        android.net.WebAddress $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = new android.net.WebAddress;

        specialinvoke $r1.<android.net.WebAddress: void <init>(java.lang.String)>(r0);

        $r2 = virtualinvoke $r1.<android.net.WebAddress: java.lang.String toString()>();

        return $r2;
    }

    public boolean acceptCookie()
    {
        com.android.webview.chromium.CookieManagerAdapter r0;
        java.lang.Throwable r1, $r3;
        boolean z0;
        com.android.org.chromium.android_webview.AwCookieManager $r2;

        r0 := @this: com.android.webview.chromium.CookieManagerAdapter;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.webview.chromium.CookieManagerAdapter: com.android.org.chromium.android_webview.AwCookieManager mChromeCookieManager>;

        z0 = virtualinvoke $r2.<com.android.org.chromium.android_webview.AwCookieManager: boolean acceptCookie()>();

     label2:
        exitmonitor r0;

        return z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected boolean allowFileSchemeCookiesImpl()
    {
        com.android.webview.chromium.CookieManagerAdapter r0;
        com.android.org.chromium.android_webview.AwCookieManager $r1;
        boolean $z0;

        r0 := @this: com.android.webview.chromium.CookieManagerAdapter;

        $r1 = r0.<com.android.webview.chromium.CookieManagerAdapter: com.android.org.chromium.android_webview.AwCookieManager mChromeCookieManager>;

        $z0 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwCookieManager: boolean allowFileSchemeCookies()>();

        return $z0;
    }

    protected void flushCookieStore()
    {
        com.android.webview.chromium.CookieManagerAdapter r0;
        com.android.org.chromium.android_webview.AwCookieManager $r1;

        r0 := @this: com.android.webview.chromium.CookieManagerAdapter;

        $r1 = r0.<com.android.webview.chromium.CookieManagerAdapter: com.android.org.chromium.android_webview.AwCookieManager mChromeCookieManager>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwCookieManager: void flushCookieStore()>();

        return;
    }

    public java.lang.String getCookie(android.net.WebAddress)
    {
        com.android.webview.chromium.CookieManagerAdapter r0;
        android.net.WebAddress r1;
        java.lang.Throwable r2, $r6;
        java.lang.String r3, $r5;
        com.android.org.chromium.android_webview.AwCookieManager $r4;

        r0 := @this: com.android.webview.chromium.CookieManagerAdapter;

        r1 := @parameter0: android.net.WebAddress;

        entermonitor r0;

     label1:
        $r4 = r0.<com.android.webview.chromium.CookieManagerAdapter: com.android.org.chromium.android_webview.AwCookieManager mChromeCookieManager>;

        $r5 = virtualinvoke r1.<android.net.WebAddress: java.lang.String toString()>();

        r3 = virtualinvoke $r4.<com.android.org.chromium.android_webview.AwCookieManager: java.lang.String getCookie(java.lang.String)>($r5);

     label2:
        exitmonitor r0;

        return r3;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.String getCookie(java.lang.String)
    {
        com.android.webview.chromium.CookieManagerAdapter r0;
        java.lang.String r1, r3, $r5, $r10;
        android.net.ParseException r2, $r6;
        com.android.org.chromium.android_webview.AwCookieManager $r4;
        java.lang.StringBuilder $r7, $r8, $r9;

        r0 := @this: com.android.webview.chromium.CookieManagerAdapter;

        r1 := @parameter0: java.lang.String;

     label1:
        $r4 = r0.<com.android.webview.chromium.CookieManagerAdapter: com.android.org.chromium.android_webview.AwCookieManager mChromeCookieManager>;

        $r5 = staticinvoke <com.android.webview.chromium.CookieManagerAdapter: java.lang.String fixupUrl(java.lang.String)>(r1);

        r3 = virtualinvoke $r4.<com.android.org.chromium.android_webview.AwCookieManager: java.lang.String getCookie(java.lang.String)>($r5);

     label2:
        return r3;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to get cookies due to error parsing URL: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CookieManager", $r10, r2);

        return null;

        catch android.net.ParseException from label1 to label2 with label3;
    }

    public java.lang.String getCookie(java.lang.String, boolean)
    {
        com.android.webview.chromium.CookieManagerAdapter r0;
        java.lang.String r1, $r2;
        boolean z0;

        r0 := @this: com.android.webview.chromium.CookieManagerAdapter;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = virtualinvoke r0.<com.android.webview.chromium.CookieManagerAdapter: java.lang.String getCookie(java.lang.String)>(r1);

        return $r2;
    }

    public boolean hasCookies()
    {
        com.android.webview.chromium.CookieManagerAdapter r0;
        java.lang.Throwable r1, $r3;
        boolean z0;
        com.android.org.chromium.android_webview.AwCookieManager $r2;

        r0 := @this: com.android.webview.chromium.CookieManagerAdapter;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.webview.chromium.CookieManagerAdapter: com.android.org.chromium.android_webview.AwCookieManager mChromeCookieManager>;

        z0 = virtualinvoke $r2.<com.android.org.chromium.android_webview.AwCookieManager: boolean hasCookies()>();

     label2:
        exitmonitor r0;

        return z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean hasCookies(boolean)
    {
        com.android.webview.chromium.CookieManagerAdapter r0;
        boolean z0, z1;
        java.lang.Throwable r1, $r3;
        com.android.org.chromium.android_webview.AwCookieManager $r2;

        r0 := @this: com.android.webview.chromium.CookieManagerAdapter;

        z0 := @parameter0: boolean;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.webview.chromium.CookieManagerAdapter: com.android.org.chromium.android_webview.AwCookieManager mChromeCookieManager>;

        z1 = virtualinvoke $r2.<com.android.org.chromium.android_webview.AwCookieManager: boolean hasCookies()>();

     label2:
        exitmonitor r0;

        return z1;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void removeAllCookie()
    {
        com.android.webview.chromium.CookieManagerAdapter r0;
        com.android.org.chromium.android_webview.AwCookieManager $r1;

        r0 := @this: com.android.webview.chromium.CookieManagerAdapter;

        $r1 = r0.<com.android.webview.chromium.CookieManagerAdapter: com.android.org.chromium.android_webview.AwCookieManager mChromeCookieManager>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwCookieManager: void removeAllCookie()>();

        return;
    }

    public void removeExpiredCookie()
    {
        com.android.webview.chromium.CookieManagerAdapter r0;
        com.android.org.chromium.android_webview.AwCookieManager $r1;

        r0 := @this: com.android.webview.chromium.CookieManagerAdapter;

        $r1 = r0.<com.android.webview.chromium.CookieManagerAdapter: com.android.org.chromium.android_webview.AwCookieManager mChromeCookieManager>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwCookieManager: void removeExpiredCookie()>();

        return;
    }

    public void removeSessionCookie()
    {
        com.android.webview.chromium.CookieManagerAdapter r0;
        com.android.org.chromium.android_webview.AwCookieManager $r1;

        r0 := @this: com.android.webview.chromium.CookieManagerAdapter;

        $r1 = r0.<com.android.webview.chromium.CookieManagerAdapter: com.android.org.chromium.android_webview.AwCookieManager mChromeCookieManager>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwCookieManager: void removeSessionCookie()>();

        return;
    }

    public void setAcceptCookie(boolean)
    {
        com.android.webview.chromium.CookieManagerAdapter r0;
        boolean z0;
        java.lang.Throwable r1, $r3;
        com.android.org.chromium.android_webview.AwCookieManager $r2;

        r0 := @this: com.android.webview.chromium.CookieManagerAdapter;

        z0 := @parameter0: boolean;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.webview.chromium.CookieManagerAdapter: com.android.org.chromium.android_webview.AwCookieManager mChromeCookieManager>;

        virtualinvoke $r2.<com.android.org.chromium.android_webview.AwCookieManager: void setAcceptCookie(boolean)>(z0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected void setAcceptFileSchemeCookiesImpl(boolean)
    {
        com.android.webview.chromium.CookieManagerAdapter r0;
        boolean z0;
        com.android.org.chromium.android_webview.AwCookieManager $r1;

        r0 := @this: com.android.webview.chromium.CookieManagerAdapter;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.webview.chromium.CookieManagerAdapter: com.android.org.chromium.android_webview.AwCookieManager mChromeCookieManager>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwCookieManager: void setAcceptFileSchemeCookies(boolean)>(z0);

        return;
    }

    public void setCookie(java.lang.String, java.lang.String)
    {
        com.android.webview.chromium.CookieManagerAdapter r0;
        java.lang.String r1, r2, $r5, $r10;
        android.net.ParseException r3, $r6;
        com.android.org.chromium.android_webview.AwCookieManager $r4;
        java.lang.StringBuilder $r7, $r8, $r9;

        r0 := @this: com.android.webview.chromium.CookieManagerAdapter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

     label1:
        $r4 = r0.<com.android.webview.chromium.CookieManagerAdapter: com.android.org.chromium.android_webview.AwCookieManager mChromeCookieManager>;

        $r5 = staticinvoke <com.android.webview.chromium.CookieManagerAdapter: java.lang.String fixupUrl(java.lang.String)>(r1);

        virtualinvoke $r4.<com.android.org.chromium.android_webview.AwCookieManager: void setCookie(java.lang.String,java.lang.String)>($r5, r2);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not setting cookie due to error parsing URL: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CookieManager", $r10, r3);

        return;

        catch android.net.ParseException from label1 to label2 with label3;
    }
}
