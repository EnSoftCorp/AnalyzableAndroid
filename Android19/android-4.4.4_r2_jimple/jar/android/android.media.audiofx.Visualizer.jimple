public class android.media.audiofx.Visualizer extends java.lang.Object
{
    public static final int ALREADY_EXISTS;
    public static final int ERROR;
    public static final int ERROR_BAD_VALUE;
    public static final int ERROR_DEAD_OBJECT;
    public static final int ERROR_INVALID_OPERATION;
    public static final int ERROR_NO_INIT;
    public static final int ERROR_NO_MEMORY;
    public static final int MEASUREMENT_MODE_NONE;
    public static final int MEASUREMENT_MODE_PEAK_RMS;
    private static final int NATIVE_EVENT_FFT_CAPTURE;
    private static final int NATIVE_EVENT_PCM_CAPTURE;
    private static final int NATIVE_EVENT_SERVER_DIED;
    public static final int SCALING_MODE_AS_PLAYED;
    public static final int SCALING_MODE_NORMALIZED;
    public static final int STATE_ENABLED;
    public static final int STATE_INITIALIZED;
    public static final int STATE_UNINITIALIZED;
    public static final int SUCCESS;
    private static final java.lang.String TAG;
    private android.media.audiofx.Visualizer$OnDataCaptureListener mCaptureListener;
    private int mId;
    private int mJniData;
    private final java.lang.Object mListenerLock;
    private android.media.audiofx.Visualizer$NativeEventHandler mNativeEventHandler;
    private int mNativeVisualizer;
    private android.media.audiofx.Visualizer$OnServerDiedListener mServerDiedListener;
    private int mState;
    private final java.lang.Object mStateLock;

    static void <clinit>()
    {
        <android.media.audiofx.Visualizer: java.lang.String TAG> = "Visualizer-JAVA";

        <android.media.audiofx.Visualizer: int SUCCESS> = 0;

        <android.media.audiofx.Visualizer: int STATE_UNINITIALIZED> = 0;

        <android.media.audiofx.Visualizer: int STATE_INITIALIZED> = 1;

        <android.media.audiofx.Visualizer: int STATE_ENABLED> = 2;

        <android.media.audiofx.Visualizer: int SCALING_MODE_NORMALIZED> = 0;

        <android.media.audiofx.Visualizer: int SCALING_MODE_AS_PLAYED> = 1;

        <android.media.audiofx.Visualizer: int NATIVE_EVENT_SERVER_DIED> = 2;

        <android.media.audiofx.Visualizer: int NATIVE_EVENT_PCM_CAPTURE> = 0;

        <android.media.audiofx.Visualizer: int NATIVE_EVENT_FFT_CAPTURE> = 1;

        <android.media.audiofx.Visualizer: int MEASUREMENT_MODE_PEAK_RMS> = 1;

        <android.media.audiofx.Visualizer: int MEASUREMENT_MODE_NONE> = 0;

        <android.media.audiofx.Visualizer: int ERROR_NO_MEMORY> = -6;

        <android.media.audiofx.Visualizer: int ERROR_NO_INIT> = -3;

        <android.media.audiofx.Visualizer: int ERROR_INVALID_OPERATION> = -5;

        <android.media.audiofx.Visualizer: int ERROR_DEAD_OBJECT> = -7;

        <android.media.audiofx.Visualizer: int ERROR_BAD_VALUE> = -4;

        <android.media.audiofx.Visualizer: int ERROR> = -1;

        <android.media.audiofx.Visualizer: int ALREADY_EXISTS> = -2;

        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("audioeffect_jni");

        staticinvoke <android.media.audiofx.Visualizer: void native_init()>();

        return;
    }

    public void <init>(int) throws java.lang.UnsupportedOperationException, java.lang.RuntimeException
    {
        android.media.audiofx.Visualizer r0;
        int i0, i1, $i2;
        int[] r1;
        java.lang.Object r2, $r4, $r5;
        java.lang.Throwable r3, $r17;
        java.lang.ref.WeakReference $r6;
        boolean $z0;
        java.lang.StringBuilder $r7, $r8, $r9, $r11, $r13, $r14, $r16;
        java.lang.String $r10, $r15;
        java.lang.RuntimeException $r12;
        java.lang.UnsupportedOperationException $r18;

        r0 := @this: android.media.audiofx.Visualizer;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.audiofx.Visualizer: int mState> = 0;

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        r0.<android.media.audiofx.Visualizer: java.lang.Object mStateLock> = $r4;

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        r0.<android.media.audiofx.Visualizer: java.lang.Object mListenerLock> = $r5;

        r0.<android.media.audiofx.Visualizer: android.media.audiofx.Visualizer$NativeEventHandler mNativeEventHandler> = null;

        r0.<android.media.audiofx.Visualizer: android.media.audiofx.Visualizer$OnDataCaptureListener mCaptureListener> = null;

        r0.<android.media.audiofx.Visualizer: android.media.audiofx.Visualizer$OnServerDiedListener mServerDiedListener> = null;

        r1 = newarray (int)[1];

        r2 = r0.<android.media.audiofx.Visualizer: java.lang.Object mStateLock>;

        entermonitor r2;

     label01:
        r0.<android.media.audiofx.Visualizer: int mState> = 0;

        $r6 = new java.lang.ref.WeakReference;

        specialinvoke $r6.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r0);

        i1 = specialinvoke r0.<android.media.audiofx.Visualizer: int native_setup(java.lang.Object,int,int[])>($r6, i0, r1);

     label02:
        if i1 == 0 goto label10;

        if i1 == -2 goto label10;

     label03:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error code ");

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" when initializing Visualizer.");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Visualizer-JAVA", $r10);

     label04:
        tableswitch(i1)
        {
            case -5: goto label09;
            default: goto label05;
        };

     label05:
        $r12 = new java.lang.RuntimeException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot initialize Visualizer engine, error: ");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>($r15);

        throw $r12;

     label06:
        $r17 := @caughtexception;

        r3 = $r17;

     label07:
        exitmonitor r2;

     label08:
        throw r3;

     label09:
        $r18 = new java.lang.UnsupportedOperationException;

        specialinvoke $r18.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Effect library not loaded");

        throw $r18;

     label10:
        $i2 = r1[0];

        r0.<android.media.audiofx.Visualizer: int mId> = $i2;

        $z0 = specialinvoke r0.<android.media.audiofx.Visualizer: boolean native_getEnabled()>();

        if $z0 == 0 goto label13;

        r0.<android.media.audiofx.Visualizer: int mState> = 2;

     label11:
        exitmonitor r2;

     label12:
        return;

     label13:
        r0.<android.media.audiofx.Visualizer: int mState> = 1;

     label14:
        goto label11;

        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label05 to label06 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label09 to label10 with label06;
        catch java.lang.Throwable from label10 to label11 with label06;
        catch java.lang.Throwable from label11 to label12 with label06;
        catch java.lang.Throwable from label13 to label14 with label06;
    }

    static java.lang.Object access$000(android.media.audiofx.Visualizer)
    {
        android.media.audiofx.Visualizer r0;
        java.lang.Object $r1;

        r0 := @parameter0: android.media.audiofx.Visualizer;

        $r1 = r0.<android.media.audiofx.Visualizer: java.lang.Object mListenerLock>;

        return $r1;
    }

    static android.media.audiofx.Visualizer$OnDataCaptureListener access$100(android.media.audiofx.Visualizer)
    {
        android.media.audiofx.Visualizer r0;
        android.media.audiofx.Visualizer$OnDataCaptureListener $r1;

        r0 := @parameter0: android.media.audiofx.Visualizer;

        $r1 = r0.<android.media.audiofx.Visualizer: android.media.audiofx.Visualizer$OnDataCaptureListener mCaptureListener>;

        return $r1;
    }

    static android.media.audiofx.Visualizer$OnServerDiedListener access$200(android.media.audiofx.Visualizer)
    {
        android.media.audiofx.Visualizer r0;
        android.media.audiofx.Visualizer$OnServerDiedListener $r1;

        r0 := @parameter0: android.media.audiofx.Visualizer;

        $r1 = r0.<android.media.audiofx.Visualizer: android.media.audiofx.Visualizer$OnServerDiedListener mServerDiedListener>;

        return $r1;
    }

    public static native int[] getCaptureSizeRange();

    public static native int getMaxCaptureRate();

    private final native void native_finalize();

    private final native int native_getCaptureSize();

    private final native boolean native_getEnabled();

    private final native int native_getFft(byte[]);

    private final native int native_getMeasurementMode();

    private final native int native_getPeakRms(android.media.audiofx.Visualizer$MeasurementPeakRms);

    private final native int native_getSamplingRate();

    private final native int native_getScalingMode();

    private final native int native_getWaveForm(byte[]);

    private static final native void native_init();

    private final native void native_release();

    private final native int native_setCaptureSize(int);

    private final native int native_setEnabled(boolean);

    private final native int native_setMeasurementMode(int);

    private final native int native_setPeriodicCapture(int, boolean, boolean);

    private final native int native_setScalingMode(int);

    private final native int native_setup(java.lang.Object, int, int[]);

    private static void postEventFromNative(java.lang.Object, int, int, int, java.lang.Object)
    {
        java.lang.Object r0, r1, $r5;
        int i0, i1, i2;
        android.media.audiofx.Visualizer r2;
        android.os.Message r3;
        java.lang.ref.WeakReference $r4;
        android.media.audiofx.Visualizer$NativeEventHandler $r6, $r7, $r8;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r1 := @parameter4: java.lang.Object;

        $r4 = (java.lang.ref.WeakReference) r0;

        $r5 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (android.media.audiofx.Visualizer) $r5;

        if r2 != null goto label2;

     label1:
        return;

     label2:
        $r6 = r2.<android.media.audiofx.Visualizer: android.media.audiofx.Visualizer$NativeEventHandler mNativeEventHandler>;

        if $r6 == null goto label1;

        $r7 = r2.<android.media.audiofx.Visualizer: android.media.audiofx.Visualizer$NativeEventHandler mNativeEventHandler>;

        r3 = virtualinvoke $r7.<android.media.audiofx.Visualizer$NativeEventHandler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(i0, i1, i2, r1);

        $r8 = r2.<android.media.audiofx.Visualizer: android.media.audiofx.Visualizer$NativeEventHandler mNativeEventHandler>;

        virtualinvoke $r8.<android.media.audiofx.Visualizer$NativeEventHandler: boolean sendMessage(android.os.Message)>(r3);

        return;
    }

    protected void finalize()
    {
        android.media.audiofx.Visualizer r0;

        r0 := @this: android.media.audiofx.Visualizer;

        specialinvoke r0.<android.media.audiofx.Visualizer: void native_finalize()>();

        return;
    }

    public int getCaptureSize() throws java.lang.IllegalStateException
    {
        android.media.audiofx.Visualizer r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r8;
        int i0, $i1, $i2;
        java.lang.IllegalStateException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: android.media.audiofx.Visualizer;

        r1 = r0.<android.media.audiofx.Visualizer: java.lang.Object mStateLock>;

        entermonitor r1;

     label1:
        $i1 = r0.<android.media.audiofx.Visualizer: int mState>;

        if $i1 != 0 goto label5;

        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getCaptureSize() called in wrong state: ");

        $i2 = r0.<android.media.audiofx.Visualizer: int mState>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label2:
        $r8 := @caughtexception;

        r2 = $r8;

     label3:
        exitmonitor r1;

     label4:
        throw r2;

     label5:
        i0 = specialinvoke r0.<android.media.audiofx.Visualizer: int native_getCaptureSize()>();

        exitmonitor r1;

     label6:
        return i0;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.Throwable from label5 to label6 with label2;
    }

    public boolean getEnabled()
    {
        android.media.audiofx.Visualizer r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r8;
        boolean z0;
        int $i0, $i1;
        java.lang.IllegalStateException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: android.media.audiofx.Visualizer;

        r1 = r0.<android.media.audiofx.Visualizer: java.lang.Object mStateLock>;

        entermonitor r1;

     label1:
        $i0 = r0.<android.media.audiofx.Visualizer: int mState>;

        if $i0 != 0 goto label5;

        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getEnabled() called in wrong state: ");

        $i1 = r0.<android.media.audiofx.Visualizer: int mState>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label2:
        $r8 := @caughtexception;

        r2 = $r8;

     label3:
        exitmonitor r1;

     label4:
        throw r2;

     label5:
        z0 = specialinvoke r0.<android.media.audiofx.Visualizer: boolean native_getEnabled()>();

        exitmonitor r1;

     label6:
        return z0;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.Throwable from label5 to label6 with label2;
    }

    public int getFft(byte[]) throws java.lang.IllegalStateException
    {
        android.media.audiofx.Visualizer r0;
        byte[] r1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r9;
        int i0, $i1, $i2;
        java.lang.IllegalStateException $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: android.media.audiofx.Visualizer;

        r1 := @parameter0: byte[];

        r2 = r0.<android.media.audiofx.Visualizer: java.lang.Object mStateLock>;

        entermonitor r2;

     label1:
        $i1 = r0.<android.media.audiofx.Visualizer: int mState>;

        if $i1 == 2 goto label5;

        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getFft() called in wrong state: ");

        $i2 = r0.<android.media.audiofx.Visualizer: int mState>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label2:
        $r9 := @caughtexception;

        r3 = $r9;

     label3:
        exitmonitor r2;

     label4:
        throw r3;

     label5:
        i0 = specialinvoke r0.<android.media.audiofx.Visualizer: int native_getFft(byte[])>(r1);

        exitmonitor r2;

     label6:
        return i0;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.Throwable from label5 to label6 with label2;
    }

    public int getMeasurementMode() throws java.lang.IllegalStateException
    {
        android.media.audiofx.Visualizer r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r8;
        int i0, $i1, $i2;
        java.lang.IllegalStateException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: android.media.audiofx.Visualizer;

        r1 = r0.<android.media.audiofx.Visualizer: java.lang.Object mStateLock>;

        entermonitor r1;

     label1:
        $i1 = r0.<android.media.audiofx.Visualizer: int mState>;

        if $i1 != 0 goto label5;

        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getMeasurementMode() called in wrong state: ");

        $i2 = r0.<android.media.audiofx.Visualizer: int mState>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label2:
        $r8 := @caughtexception;

        r2 = $r8;

     label3:
        exitmonitor r1;

     label4:
        throw r2;

     label5:
        i0 = specialinvoke r0.<android.media.audiofx.Visualizer: int native_getMeasurementMode()>();

        exitmonitor r1;

     label6:
        return i0;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.Throwable from label5 to label6 with label2;
    }

    public int getMeasurementPeakRms(android.media.audiofx.Visualizer$MeasurementPeakRms)
    {
        android.media.audiofx.Visualizer r0;
        android.media.audiofx.Visualizer$MeasurementPeakRms r1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r9;
        int i0, $i1, $i2;
        java.lang.IllegalStateException $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: android.media.audiofx.Visualizer;

        r1 := @parameter0: android.media.audiofx.Visualizer$MeasurementPeakRms;

        if r1 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Visualizer-JAVA", "Cannot store measurements in a null object");

        return -4;

     label1:
        r2 = r0.<android.media.audiofx.Visualizer: java.lang.Object mStateLock>;

        entermonitor r2;

     label2:
        $i1 = r0.<android.media.audiofx.Visualizer: int mState>;

        if $i1 == 2 goto label6;

        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getMeasurementPeakRms() called in wrong state: ");

        $i2 = r0.<android.media.audiofx.Visualizer: int mState>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label3:
        $r9 := @caughtexception;

        r3 = $r9;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

     label6:
        i0 = specialinvoke r0.<android.media.audiofx.Visualizer: int native_getPeakRms(android.media.audiofx.Visualizer$MeasurementPeakRms)>(r1);

        exitmonitor r2;

     label7:
        return i0;

        catch java.lang.Throwable from label2 to label3 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
        catch java.lang.Throwable from label6 to label7 with label3;
    }

    public int getSamplingRate() throws java.lang.IllegalStateException
    {
        android.media.audiofx.Visualizer r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r8;
        int i0, $i1, $i2;
        java.lang.IllegalStateException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: android.media.audiofx.Visualizer;

        r1 = r0.<android.media.audiofx.Visualizer: java.lang.Object mStateLock>;

        entermonitor r1;

     label1:
        $i1 = r0.<android.media.audiofx.Visualizer: int mState>;

        if $i1 != 0 goto label5;

        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getSamplingRate() called in wrong state: ");

        $i2 = r0.<android.media.audiofx.Visualizer: int mState>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label2:
        $r8 := @caughtexception;

        r2 = $r8;

     label3:
        exitmonitor r1;

     label4:
        throw r2;

     label5:
        i0 = specialinvoke r0.<android.media.audiofx.Visualizer: int native_getSamplingRate()>();

        exitmonitor r1;

     label6:
        return i0;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.Throwable from label5 to label6 with label2;
    }

    public int getScalingMode() throws java.lang.IllegalStateException
    {
        android.media.audiofx.Visualizer r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r8;
        int i0, $i1, $i2;
        java.lang.IllegalStateException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: android.media.audiofx.Visualizer;

        r1 = r0.<android.media.audiofx.Visualizer: java.lang.Object mStateLock>;

        entermonitor r1;

     label1:
        $i1 = r0.<android.media.audiofx.Visualizer: int mState>;

        if $i1 != 0 goto label5;

        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getScalingMode() called in wrong state: ");

        $i2 = r0.<android.media.audiofx.Visualizer: int mState>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label2:
        $r8 := @caughtexception;

        r2 = $r8;

     label3:
        exitmonitor r1;

     label4:
        throw r2;

     label5:
        i0 = specialinvoke r0.<android.media.audiofx.Visualizer: int native_getScalingMode()>();

        exitmonitor r1;

     label6:
        return i0;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.Throwable from label5 to label6 with label2;
    }

    public int getWaveForm(byte[]) throws java.lang.IllegalStateException
    {
        android.media.audiofx.Visualizer r0;
        byte[] r1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r9;
        int i0, $i1, $i2;
        java.lang.IllegalStateException $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: android.media.audiofx.Visualizer;

        r1 := @parameter0: byte[];

        r2 = r0.<android.media.audiofx.Visualizer: java.lang.Object mStateLock>;

        entermonitor r2;

     label1:
        $i1 = r0.<android.media.audiofx.Visualizer: int mState>;

        if $i1 == 2 goto label5;

        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getWaveForm() called in wrong state: ");

        $i2 = r0.<android.media.audiofx.Visualizer: int mState>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label2:
        $r9 := @caughtexception;

        r3 = $r9;

     label3:
        exitmonitor r2;

     label4:
        throw r3;

     label5:
        i0 = specialinvoke r0.<android.media.audiofx.Visualizer: int native_getWaveForm(byte[])>(r1);

        exitmonitor r2;

     label6:
        return i0;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.Throwable from label5 to label6 with label2;
    }

    public void release()
    {
        android.media.audiofx.Visualizer r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.media.audiofx.Visualizer;

        r1 = r0.<android.media.audiofx.Visualizer: java.lang.Object mStateLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<android.media.audiofx.Visualizer: void native_release()>();

        r0.<android.media.audiofx.Visualizer: int mState> = 0;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int setCaptureSize(int) throws java.lang.IllegalStateException
    {
        android.media.audiofx.Visualizer r0;
        int i0, i1, $i2, $i3;
        java.lang.Object r1;
        java.lang.Throwable r2, $r8;
        java.lang.IllegalStateException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: android.media.audiofx.Visualizer;

        i0 := @parameter0: int;

        r1 = r0.<android.media.audiofx.Visualizer: java.lang.Object mStateLock>;

        entermonitor r1;

     label1:
        $i2 = r0.<android.media.audiofx.Visualizer: int mState>;

        if $i2 == 1 goto label5;

        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setCaptureSize() called in wrong state: ");

        $i3 = r0.<android.media.audiofx.Visualizer: int mState>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label2:
        $r8 := @caughtexception;

        r2 = $r8;

     label3:
        exitmonitor r1;

     label4:
        throw r2;

     label5:
        i1 = specialinvoke r0.<android.media.audiofx.Visualizer: int native_setCaptureSize(int)>(i0);

        exitmonitor r1;

     label6:
        return i1;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.Throwable from label5 to label6 with label2;
    }

    public int setDataCaptureListener(android.media.audiofx.Visualizer$OnDataCaptureListener, int, boolean, boolean)
    {
        android.media.audiofx.Visualizer r0;
        android.media.audiofx.Visualizer$OnDataCaptureListener r1;
        int i0, i1;
        boolean z0, z1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r9;
        android.os.Looper r4, r5;
        android.media.audiofx.Visualizer$NativeEventHandler $r6, $r7, $r8;

        r0 := @this: android.media.audiofx.Visualizer;

        r1 := @parameter0: android.media.audiofx.Visualizer$OnDataCaptureListener;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        r2 = r0.<android.media.audiofx.Visualizer: java.lang.Object mListenerLock>;

        entermonitor r2;

     label1:
        r0.<android.media.audiofx.Visualizer: android.media.audiofx.Visualizer$OnDataCaptureListener mCaptureListener> = r1;

        exitmonitor r2;

     label2:
        if r1 != null goto label3;

        z0 = 0;

        z1 = 0;

     label3:
        i1 = specialinvoke r0.<android.media.audiofx.Visualizer: int native_setPeriodicCapture(int,boolean,boolean)>(i0, z0, z1);

        if i1 != 0 goto label4;

        if r1 == null goto label4;

        $r6 = r0.<android.media.audiofx.Visualizer: android.media.audiofx.Visualizer$NativeEventHandler mNativeEventHandler>;

        if $r6 != null goto label4;

        r4 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if r4 == null goto label8;

        $r7 = new android.media.audiofx.Visualizer$NativeEventHandler;

        specialinvoke $r7.<android.media.audiofx.Visualizer$NativeEventHandler: void <init>(android.media.audiofx.Visualizer,android.media.audiofx.Visualizer,android.os.Looper)>(r0, r0, r4);

        r0.<android.media.audiofx.Visualizer: android.media.audiofx.Visualizer$NativeEventHandler mNativeEventHandler> = $r7;

     label4:
        return i1;

     label5:
        $r9 := @caughtexception;

        r3 = $r9;

     label6:
        exitmonitor r2;

     label7:
        throw r3;

     label8:
        r5 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        if r5 == null goto label9;

        $r8 = new android.media.audiofx.Visualizer$NativeEventHandler;

        specialinvoke $r8.<android.media.audiofx.Visualizer$NativeEventHandler: void <init>(android.media.audiofx.Visualizer,android.media.audiofx.Visualizer,android.os.Looper)>(r0, r0, r5);

        r0.<android.media.audiofx.Visualizer: android.media.audiofx.Visualizer$NativeEventHandler mNativeEventHandler> = $r8;

        return i1;

     label9:
        r0.<android.media.audiofx.Visualizer: android.media.audiofx.Visualizer$NativeEventHandler mNativeEventHandler> = null;

        return -3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public int setEnabled(boolean) throws java.lang.IllegalStateException
    {
        android.media.audiofx.Visualizer r0;
        boolean z0;
        byte b0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r8;
        int i1, i2, $i3, $i4, $i5;
        java.lang.IllegalStateException $r3;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r6;

        r0 := @this: android.media.audiofx.Visualizer;

        z0 := @parameter0: boolean;

        b0 = 2;

        r1 = r0.<android.media.audiofx.Visualizer: java.lang.Object mStateLock>;

        entermonitor r1;

     label01:
        $i3 = r0.<android.media.audiofx.Visualizer: int mState>;

        if $i3 != 0 goto label05;

        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setEnabled() called in wrong state: ");

        $i5 = r0.<android.media.audiofx.Visualizer: int mState>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r3;

     label02:
        $r8 := @caughtexception;

        r2 = $r8;

     label03:
        exitmonitor r1;

     label04:
        throw r2;

     label05:
        if z0 == 0 goto label07;

     label06:
        $i4 = r0.<android.media.audiofx.Visualizer: int mState>;

        if $i4 == 1 goto label10;

     label07:
        i1 = 0;

        if z0 != 0 goto label13;

     label08:
        i2 = r0.<android.media.audiofx.Visualizer: int mState>;

     label09:
        i1 = 0;

        if i2 != b0 goto label13;

     label10:
        i1 = specialinvoke r0.<android.media.audiofx.Visualizer: int native_setEnabled(boolean)>(z0);

     label11:
        if i1 != 0 goto label13;

        if z0 == 0 goto label15;

     label12:
        r0.<android.media.audiofx.Visualizer: int mState> = b0;

     label13:
        exitmonitor r1;

     label14:
        return i1;

     label15:
        b0 = 1;

        goto label12;

        catch java.lang.Throwable from label01 to label02 with label02;
        catch java.lang.Throwable from label03 to label04 with label02;
        catch java.lang.Throwable from label06 to label07 with label02;
        catch java.lang.Throwable from label08 to label09 with label02;
        catch java.lang.Throwable from label10 to label11 with label02;
        catch java.lang.Throwable from label12 to label13 with label02;
        catch java.lang.Throwable from label13 to label14 with label02;
    }

    public int setMeasurementMode(int) throws java.lang.IllegalStateException
    {
        android.media.audiofx.Visualizer r0;
        int i0, i1, $i2, $i3;
        java.lang.Object r1;
        java.lang.Throwable r2, $r8;
        java.lang.IllegalStateException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: android.media.audiofx.Visualizer;

        i0 := @parameter0: int;

        r1 = r0.<android.media.audiofx.Visualizer: java.lang.Object mStateLock>;

        entermonitor r1;

     label1:
        $i2 = r0.<android.media.audiofx.Visualizer: int mState>;

        if $i2 != 0 goto label5;

        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setMeasurementMode() called in wrong state: ");

        $i3 = r0.<android.media.audiofx.Visualizer: int mState>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label2:
        $r8 := @caughtexception;

        r2 = $r8;

     label3:
        exitmonitor r1;

     label4:
        throw r2;

     label5:
        i1 = specialinvoke r0.<android.media.audiofx.Visualizer: int native_setMeasurementMode(int)>(i0);

        exitmonitor r1;

     label6:
        return i1;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.Throwable from label5 to label6 with label2;
    }

    public int setScalingMode(int) throws java.lang.IllegalStateException
    {
        android.media.audiofx.Visualizer r0;
        int i0, i1, $i2, $i3;
        java.lang.Object r1;
        java.lang.Throwable r2, $r8;
        java.lang.IllegalStateException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: android.media.audiofx.Visualizer;

        i0 := @parameter0: int;

        r1 = r0.<android.media.audiofx.Visualizer: java.lang.Object mStateLock>;

        entermonitor r1;

     label1:
        $i2 = r0.<android.media.audiofx.Visualizer: int mState>;

        if $i2 != 0 goto label5;

        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setScalingMode() called in wrong state: ");

        $i3 = r0.<android.media.audiofx.Visualizer: int mState>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label2:
        $r8 := @caughtexception;

        r2 = $r8;

     label3:
        exitmonitor r1;

     label4:
        throw r2;

     label5:
        i1 = specialinvoke r0.<android.media.audiofx.Visualizer: int native_setScalingMode(int)>(i0);

        exitmonitor r1;

     label6:
        return i1;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.Throwable from label5 to label6 with label2;
    }

    public int setServerDiedListener(android.media.audiofx.Visualizer$OnServerDiedListener)
    {
        android.media.audiofx.Visualizer r0;
        android.media.audiofx.Visualizer$OnServerDiedListener r1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r4;

        r0 := @this: android.media.audiofx.Visualizer;

        r1 := @parameter0: android.media.audiofx.Visualizer$OnServerDiedListener;

        r2 = r0.<android.media.audiofx.Visualizer: java.lang.Object mListenerLock>;

        entermonitor r2;

     label1:
        r0.<android.media.audiofx.Visualizer: android.media.audiofx.Visualizer$OnServerDiedListener mServerDiedListener> = r1;

        exitmonitor r2;

     label2:
        return 0;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
