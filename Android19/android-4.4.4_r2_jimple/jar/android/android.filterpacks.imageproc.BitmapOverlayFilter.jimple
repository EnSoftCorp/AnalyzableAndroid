public class android.filterpacks.imageproc.BitmapOverlayFilter extends android.filterfw.core.Filter
{
    private android.graphics.Bitmap mBitmap;
    private android.filterfw.core.Frame mFrame;
    private final java.lang.String mOverlayShader;
    private android.filterfw.core.Program mProgram;
    private int mTarget;
    private int mTileSize;

    public void <init>(java.lang.String)
    {
        android.filterpacks.imageproc.BitmapOverlayFilter r0;
        java.lang.String r1;

        r0 := @this: android.filterpacks.imageproc.BitmapOverlayFilter;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.filterfw.core.Filter: void <init>(java.lang.String)>(r1);

        r0.<android.filterpacks.imageproc.BitmapOverlayFilter: int mTileSize> = 640;

        r0.<android.filterpacks.imageproc.BitmapOverlayFilter: int mTarget> = 0;

        r0.<android.filterpacks.imageproc.BitmapOverlayFilter: java.lang.String mOverlayShader> = "precision mediump float;\nuniform sampler2D tex_sampler_0;\nuniform sampler2D tex_sampler_1;\nvarying vec2 v_texcoord;\nvoid main() {\n  vec4 original = texture2D(tex_sampler_0, v_texcoord);\n  vec4 mask = texture2D(tex_sampler_1, v_texcoord);\n  gl_FragColor = vec4(original.rgb * (1.0 - mask.a) + mask.rgb, 1.0);\n}\n";

        return;
    }

    private android.filterfw.core.Frame createBitmapFrame(android.filterfw.core.FilterContext)
    {
        android.filterpacks.imageproc.BitmapOverlayFilter r0;
        android.filterfw.core.FilterContext r1;
        android.filterfw.core.MutableFrameFormat r2;
        android.filterfw.core.Frame r3;
        android.graphics.Bitmap $r4, $r5, $r7, $r8;
        int $i0, $i1;
        android.filterfw.core.FrameManager $r6;

        r0 := @this: android.filterpacks.imageproc.BitmapOverlayFilter;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        $r4 = r0.<android.filterpacks.imageproc.BitmapOverlayFilter: android.graphics.Bitmap mBitmap>;

        $i0 = virtualinvoke $r4.<android.graphics.Bitmap: int getWidth()>();

        $r5 = r0.<android.filterpacks.imageproc.BitmapOverlayFilter: android.graphics.Bitmap mBitmap>;

        $i1 = virtualinvoke $r5.<android.graphics.Bitmap: int getHeight()>();

        r2 = staticinvoke <android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int,int,int,int)>($i0, $i1, 3, 3);

        $r6 = virtualinvoke r1.<android.filterfw.core.FilterContext: android.filterfw.core.FrameManager getFrameManager()>();

        r3 = virtualinvoke $r6.<android.filterfw.core.FrameManager: android.filterfw.core.Frame newFrame(android.filterfw.core.FrameFormat)>(r2);

        $r7 = r0.<android.filterpacks.imageproc.BitmapOverlayFilter: android.graphics.Bitmap mBitmap>;

        virtualinvoke r3.<android.filterfw.core.Frame: void setBitmap(android.graphics.Bitmap)>($r7);

        $r8 = r0.<android.filterpacks.imageproc.BitmapOverlayFilter: android.graphics.Bitmap mBitmap>;

        virtualinvoke $r8.<android.graphics.Bitmap: void recycle()>();

        r0.<android.filterpacks.imageproc.BitmapOverlayFilter: android.graphics.Bitmap mBitmap> = null;

        return r3;
    }

    public android.filterfw.core.FrameFormat getOutputFormat(java.lang.String, android.filterfw.core.FrameFormat)
    {
        android.filterpacks.imageproc.BitmapOverlayFilter r0;
        java.lang.String r1;
        android.filterfw.core.FrameFormat r2;

        r0 := @this: android.filterpacks.imageproc.BitmapOverlayFilter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.filterfw.core.FrameFormat;

        return r2;
    }

    public void initProgram(android.filterfw.core.FilterContext, int)
    {
        android.filterpacks.imageproc.BitmapOverlayFilter r0;
        android.filterfw.core.FilterContext r1;
        int i0, $i1;
        android.filterfw.core.ShaderProgram r2, $r9;
        java.lang.RuntimeException $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: android.filterpacks.imageproc.BitmapOverlayFilter;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        i0 := @parameter1: int;

        tableswitch(i0)
        {
            case 3: goto label2;
            default: goto label1;
        };

     label1:
        $r3 = new java.lang.RuntimeException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Filter FisheyeFilter does not support frames of target ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label2:
        $r9 = new android.filterfw.core.ShaderProgram;

        specialinvoke $r9.<android.filterfw.core.ShaderProgram: void <init>(android.filterfw.core.FilterContext,java.lang.String)>(r1, "precision mediump float;\nuniform sampler2D tex_sampler_0;\nuniform sampler2D tex_sampler_1;\nvarying vec2 v_texcoord;\nvoid main() {\n  vec4 original = texture2D(tex_sampler_0, v_texcoord);\n  vec4 mask = texture2D(tex_sampler_1, v_texcoord);\n  gl_FragColor = vec4(original.rgb * (1.0 - mask.a) + mask.rgb, 1.0);\n}\n");

        r2 = $r9;

        $i1 = r0.<android.filterpacks.imageproc.BitmapOverlayFilter: int mTileSize>;

        virtualinvoke r2.<android.filterfw.core.ShaderProgram: void setMaximumTileSize(int)>($i1);

        r0.<android.filterpacks.imageproc.BitmapOverlayFilter: android.filterfw.core.Program mProgram> = r2;

        r0.<android.filterpacks.imageproc.BitmapOverlayFilter: int mTarget> = i0;

        return;
    }

    public void process(android.filterfw.core.FilterContext)
    {
        android.filterpacks.imageproc.BitmapOverlayFilter r0;
        android.filterfw.core.FilterContext r1;
        android.filterfw.core.Frame r2, r4, r5;
        android.filterfw.core.FrameFormat r3;
        android.filterfw.core.Frame[] r6, $r11;
        android.filterfw.core.FrameManager $r7;
        android.filterfw.core.Program $r8, $r13;
        int $i0, $i1, $i2;
        android.graphics.Bitmap $r9;

        r0 := @this: android.filterpacks.imageproc.BitmapOverlayFilter;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        r2 = virtualinvoke r0.<android.filterpacks.imageproc.BitmapOverlayFilter: android.filterfw.core.Frame pullInput(java.lang.String)>("image");

        r3 = virtualinvoke r2.<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()>();

        $r7 = virtualinvoke r1.<android.filterfw.core.FilterContext: android.filterfw.core.FrameManager getFrameManager()>();

        r4 = virtualinvoke $r7.<android.filterfw.core.FrameManager: android.filterfw.core.Frame newFrame(android.filterfw.core.FrameFormat)>(r3);

        $r8 = r0.<android.filterpacks.imageproc.BitmapOverlayFilter: android.filterfw.core.Program mProgram>;

        if $r8 == null goto label1;

        $i2 = virtualinvoke r3.<android.filterfw.core.FrameFormat: int getTarget()>();

        $i1 = r0.<android.filterpacks.imageproc.BitmapOverlayFilter: int mTarget>;

        if $i2 == $i1 goto label2;

     label1:
        $i0 = virtualinvoke r3.<android.filterfw.core.FrameFormat: int getTarget()>();

        virtualinvoke r0.<android.filterpacks.imageproc.BitmapOverlayFilter: void initProgram(android.filterfw.core.FilterContext,int)>(r1, $i0);

     label2:
        $r9 = r0.<android.filterpacks.imageproc.BitmapOverlayFilter: android.graphics.Bitmap mBitmap>;

        if $r9 == null goto label4;

        r5 = specialinvoke r0.<android.filterpacks.imageproc.BitmapOverlayFilter: android.filterfw.core.Frame createBitmapFrame(android.filterfw.core.FilterContext)>(r1);

        $r11 = newarray (android.filterfw.core.Frame)[2];

        $r11[0] = r2;

        $r11[1] = r5;

        r6 = $r11;

        $r13 = r0.<android.filterpacks.imageproc.BitmapOverlayFilter: android.filterfw.core.Program mProgram>;

        virtualinvoke $r13.<android.filterfw.core.Program: void process(android.filterfw.core.Frame[],android.filterfw.core.Frame)>(r6, r4);

        virtualinvoke r5.<android.filterfw.core.Frame: android.filterfw.core.Frame release()>();

     label3:
        virtualinvoke r0.<android.filterpacks.imageproc.BitmapOverlayFilter: void pushOutput(java.lang.String,android.filterfw.core.Frame)>("image", r4);

        virtualinvoke r4.<android.filterfw.core.Frame: android.filterfw.core.Frame release()>();

        return;

     label4:
        virtualinvoke r4.<android.filterfw.core.Frame: void setDataFromFrame(android.filterfw.core.Frame)>(r2);

        goto label3;
    }

    public void setupPorts()
    {
        android.filterpacks.imageproc.BitmapOverlayFilter r0;
        android.filterfw.core.MutableFrameFormat $r1;

        r0 := @this: android.filterpacks.imageproc.BitmapOverlayFilter;

        $r1 = staticinvoke <android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int)>(3);

        virtualinvoke r0.<android.filterpacks.imageproc.BitmapOverlayFilter: void addMaskedInputPort(java.lang.String,android.filterfw.core.FrameFormat)>("image", $r1);

        virtualinvoke r0.<android.filterpacks.imageproc.BitmapOverlayFilter: void addOutputBasedOnInput(java.lang.String,java.lang.String)>("image", "image");

        return;
    }

    public void tearDown(android.filterfw.core.FilterContext)
    {
        android.filterpacks.imageproc.BitmapOverlayFilter r0;
        android.filterfw.core.FilterContext r1;
        android.filterfw.core.Frame $r2, $r3;

        r0 := @this: android.filterpacks.imageproc.BitmapOverlayFilter;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        $r2 = r0.<android.filterpacks.imageproc.BitmapOverlayFilter: android.filterfw.core.Frame mFrame>;

        if $r2 == null goto label1;

        $r3 = r0.<android.filterpacks.imageproc.BitmapOverlayFilter: android.filterfw.core.Frame mFrame>;

        virtualinvoke $r3.<android.filterfw.core.Frame: android.filterfw.core.Frame release()>();

        r0.<android.filterpacks.imageproc.BitmapOverlayFilter: android.filterfw.core.Frame mFrame> = null;

     label1:
        return;
    }
}
