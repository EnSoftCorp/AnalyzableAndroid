class com.android.server.DevicePolicyManagerService$2 extends android.content.BroadcastReceiver
{
    final com.android.server.DevicePolicyManagerService this$0;
    final com.android.server.DevicePolicyManagerService$ActiveAdmin val$admin;
    final android.content.ComponentName val$adminReceiver;

    void <init>(com.android.server.DevicePolicyManagerService, com.android.server.DevicePolicyManagerService$ActiveAdmin, android.content.ComponentName)
    {
        com.android.server.DevicePolicyManagerService$2 r0;
        com.android.server.DevicePolicyManagerService r1;
        com.android.server.DevicePolicyManagerService$ActiveAdmin r2;
        android.content.ComponentName r3;

        r0 := @this: com.android.server.DevicePolicyManagerService$2;

        r1 := @parameter0: com.android.server.DevicePolicyManagerService;

        r2 := @parameter1: com.android.server.DevicePolicyManagerService$ActiveAdmin;

        r3 := @parameter2: android.content.ComponentName;

        r0.<com.android.server.DevicePolicyManagerService$2: com.android.server.DevicePolicyManagerService this$0> = r1;

        r0.<com.android.server.DevicePolicyManagerService$2: com.android.server.DevicePolicyManagerService$ActiveAdmin val$admin> = r2;

        r0.<com.android.server.DevicePolicyManagerService$2: android.content.ComponentName val$adminReceiver> = r3;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        com.android.server.DevicePolicyManagerService$2 r0;
        android.content.Context r1;
        android.content.Intent r2;
        com.android.server.DevicePolicyManagerService r3, $r8, $r15, $r17, $r18, $r19, $r20, $r21;
        java.lang.Throwable r4, $r22;
        int i0;
        com.android.server.DevicePolicyManagerService$DevicePolicyData r5, $r23;
        boolean z0;
        com.android.server.DevicePolicyManagerService$ActiveAdmin $r6, $r9, $r11;
        android.os.UserHandle $r7;
        android.app.admin.DeviceAdminInfo $r10;
        java.util.ArrayList $r12;
        java.util.HashMap $r13;
        android.content.ComponentName $r14;

        r0 := @this: com.android.server.DevicePolicyManagerService$2;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        r3 = r0.<com.android.server.DevicePolicyManagerService$2: com.android.server.DevicePolicyManagerService this$0>;

        entermonitor r3;

     label1:
        $r6 = r0.<com.android.server.DevicePolicyManagerService$2: com.android.server.DevicePolicyManagerService$ActiveAdmin val$admin>;

        $r7 = virtualinvoke $r6.<com.android.server.DevicePolicyManagerService$ActiveAdmin: android.os.UserHandle getUserHandle()>();

        i0 = virtualinvoke $r7.<android.os.UserHandle: int getIdentifier()>();

        $r8 = r0.<com.android.server.DevicePolicyManagerService$2: com.android.server.DevicePolicyManagerService this$0>;

        r5 = virtualinvoke $r8.<com.android.server.DevicePolicyManagerService: com.android.server.DevicePolicyManagerService$DevicePolicyData getUserData(int)>(i0);

        $r9 = r0.<com.android.server.DevicePolicyManagerService$2: com.android.server.DevicePolicyManagerService$ActiveAdmin val$admin>;

        $r10 = $r9.<com.android.server.DevicePolicyManagerService$ActiveAdmin: android.app.admin.DeviceAdminInfo info>;

        z0 = virtualinvoke $r10.<android.app.admin.DeviceAdminInfo: boolean usesPolicy(int)>(5);

        $r12 = r5.<com.android.server.DevicePolicyManagerService$DevicePolicyData: java.util.ArrayList mAdminList>;

        $r11 = r0.<com.android.server.DevicePolicyManagerService$2: com.android.server.DevicePolicyManagerService$ActiveAdmin val$admin>;

        virtualinvoke $r12.<java.util.ArrayList: boolean remove(java.lang.Object)>($r11);

        $r13 = r5.<com.android.server.DevicePolicyManagerService$DevicePolicyData: java.util.HashMap mAdminMap>;

        $r14 = r0.<com.android.server.DevicePolicyManagerService$2: android.content.ComponentName val$adminReceiver>;

        virtualinvoke $r13.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r14);

        $r15 = r0.<com.android.server.DevicePolicyManagerService$2: com.android.server.DevicePolicyManagerService this$0>;

        virtualinvoke $r15.<com.android.server.DevicePolicyManagerService: void validatePasswordOwnerLocked(com.android.server.DevicePolicyManagerService$DevicePolicyData)>(r5);

        $r18 = r0.<com.android.server.DevicePolicyManagerService$2: com.android.server.DevicePolicyManagerService this$0>;

        virtualinvoke $r18.<com.android.server.DevicePolicyManagerService: void syncDeviceCapabilitiesLocked(com.android.server.DevicePolicyManagerService$DevicePolicyData)>(r5);

     label2:
        if z0 == 0 goto label4;

     label3:
        $r20 = r0.<com.android.server.DevicePolicyManagerService$2: com.android.server.DevicePolicyManagerService this$0>;

        $r21 = r0.<com.android.server.DevicePolicyManagerService$2: com.android.server.DevicePolicyManagerService this$0>;

        $r23 = virtualinvoke $r21.<com.android.server.DevicePolicyManagerService: com.android.server.DevicePolicyManagerService$DevicePolicyData getUserData(int)>(i0);

        staticinvoke <com.android.server.DevicePolicyManagerService: void access$300(com.android.server.DevicePolicyManagerService,com.android.server.DevicePolicyManagerService$DevicePolicyData)>($r20, $r23);

     label4:
        $r17 = r0.<com.android.server.DevicePolicyManagerService$2: com.android.server.DevicePolicyManagerService this$0>;

        staticinvoke <com.android.server.DevicePolicyManagerService: void access$400(com.android.server.DevicePolicyManagerService,int)>($r17, i0);

        $r19 = r0.<com.android.server.DevicePolicyManagerService$2: com.android.server.DevicePolicyManagerService this$0>;

        virtualinvoke $r19.<com.android.server.DevicePolicyManagerService: void updateMaximumTimeToLockLocked(com.android.server.DevicePolicyManagerService$DevicePolicyData)>(r5);

        exitmonitor r3;

     label5:
        return;

     label6:
        $r22 := @caughtexception;

        r4 = $r22;

     label7:
        exitmonitor r3;

     label8:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }
}
