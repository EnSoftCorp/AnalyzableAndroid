public final class com.android.server.am.CompatModePackages extends java.lang.Object
{
    public static final int COMPAT_FLAG_DONT_ASK;
    public static final int COMPAT_FLAG_ENABLED;
    private static final int MSG_WRITE;
    private final boolean DEBUG_CONFIGURATION;
    private final java.lang.String TAG;
    private final android.util.AtomicFile mFile;
    private final android.os.Handler mHandler;
    private final java.util.HashMap mPackages;
    private final com.android.server.am.ActivityManagerService mService;

    public void <init>(com.android.server.am.ActivityManagerService, java.io.File)
    {
        com.android.server.am.CompatModePackages r0;
        com.android.server.am.ActivityManagerService r1;
        java.io.File r2, $r18;
        java.io.FileInputStream r3;
        java.lang.Throwable r4, $r34;
        java.io.IOException r6, $r27, $r28, $r30, $r31, $r32;
        org.xmlpull.v1.XmlPullParserException r8, $r29;
        org.xmlpull.v1.XmlPullParser r10;
        int i0, i1, i2, i3, i4, $i5;
        java.lang.String r12, r13, r14, $r21, $r22, $r23;
        com.android.server.am.CompatModePackages$1 $r16;
        java.util.HashMap $r17, $r24;
        android.util.AtomicFile $r19, $r20;
        boolean $z0, $z1;
        java.lang.Integer $r25;
        java.lang.NumberFormatException $r33;

        r0 := @this: com.android.server.am.CompatModePackages;

        r1 := @parameter0: com.android.server.am.ActivityManagerService;

        r2 := @parameter1: java.io.File;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.am.CompatModePackages: java.lang.String TAG> = "ActivityManager";

        r0.<com.android.server.am.CompatModePackages: boolean DEBUG_CONFIGURATION> = 0;

        $r17 = new java.util.HashMap;

        specialinvoke $r17.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.am.CompatModePackages: java.util.HashMap mPackages> = $r17;

        $r16 = new com.android.server.am.CompatModePackages$1;

        specialinvoke $r16.<com.android.server.am.CompatModePackages$1: void <init>(com.android.server.am.CompatModePackages)>(r0);

        r0.<com.android.server.am.CompatModePackages: android.os.Handler mHandler> = $r16;

        r0.<com.android.server.am.CompatModePackages: com.android.server.am.ActivityManagerService mService> = r1;

        $r19 = new android.util.AtomicFile;

        $r18 = new java.io.File;

        specialinvoke $r18.<java.io.File: void <init>(java.io.File,java.lang.String)>(r2, "packages-compat.xml");

        specialinvoke $r19.<android.util.AtomicFile: void <init>(java.io.File)>($r18);

        r0.<com.android.server.am.CompatModePackages: android.util.AtomicFile mFile> = $r19;

        r3 = null;

     label01:
        $r20 = r0.<com.android.server.am.CompatModePackages: android.util.AtomicFile mFile>;

        r3 = virtualinvoke $r20.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

        r10 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r10.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r3, null);

        i0 = interfaceinvoke r10.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label02:
        if i0 == 2 goto label05;

     label03:
        i0 = interfaceinvoke r10.<org.xmlpull.v1.XmlPullParser: int next()>();

     label04:
        goto label02;

     label05:
        $r21 = "compat-packages";

        $r22 = interfaceinvoke r10.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>($r22);

        if $z0 == 0 goto label16;

        i1 = interfaceinvoke r10.<org.xmlpull.v1.XmlPullParser: int next()>();

     label06:
        if i1 != 2 goto label14;

     label07:
        r12 = interfaceinvoke r10.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $i5 = interfaceinvoke r10.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i5 != 2 goto label14;

        $r23 = "pkg";

        $z1 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>(r12);

        if $z1 == 0 goto label14;

        r14 = interfaceinvoke r10.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

     label08:
        if r14 == null goto label14;

     label09:
        r13 = interfaceinvoke r10.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "mode");

     label10:
        i3 = 0;

        if r13 == null goto label13;

     label11:
        i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r13);

     label12:
        i3 = i4;

     label13:
        $r24 = r0.<com.android.server.am.CompatModePackages: java.util.HashMap mPackages>;

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        virtualinvoke $r24.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r14, $r25);

     label14:
        i2 = interfaceinvoke r10.<org.xmlpull.v1.XmlPullParser: int next()>();

     label15:
        i1 = i2;

        if i1 != 1 goto label06;

     label16:
        if r3 == null goto label18;

     label17:
        virtualinvoke r3.<java.io.FileInputStream: void close()>();

     label18:
        return;

     label19:
        $r29 := @caughtexception;

        r8 = $r29;

     label20:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Error reading compat-packages", r8);

     label21:
        if r3 == null goto label18;

     label22:
        virtualinvoke r3.<java.io.FileInputStream: void close()>();

     label23:
        return;

     label24:
        $r32 := @caughtexception;

        return;

     label25:
        $r30 := @caughtexception;

        r6 = $r30;

        if r3 == null goto label27;

     label26:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Error reading compat-packages", r6);

     label27:
        if r3 == null goto label18;

     label28:
        virtualinvoke r3.<java.io.FileInputStream: void close()>();

     label29:
        return;

     label30:
        $r28 := @caughtexception;

        return;

     label31:
        $r34 := @caughtexception;

        r4 = $r34;

        if r3 == null goto label33;

     label32:
        virtualinvoke r3.<java.io.FileInputStream: void close()>();

     label33:
        throw r4;

     label34:
        $r33 := @caughtexception;

        i3 = 0;

        goto label13;

     label35:
        $r31 := @caughtexception;

        return;

     label36:
        $r27 := @caughtexception;

        goto label33;

        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label19;
        catch java.io.IOException from label01 to label02 with label25;
        catch java.lang.Throwable from label01 to label02 with label31;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label19;
        catch java.io.IOException from label03 to label04 with label25;
        catch java.lang.Throwable from label03 to label04 with label31;
        catch org.xmlpull.v1.XmlPullParserException from label05 to label06 with label19;
        catch java.io.IOException from label05 to label06 with label25;
        catch java.lang.Throwable from label05 to label06 with label31;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label08 with label19;
        catch java.io.IOException from label07 to label08 with label25;
        catch java.lang.Throwable from label07 to label08 with label31;
        catch org.xmlpull.v1.XmlPullParserException from label09 to label10 with label19;
        catch java.io.IOException from label09 to label10 with label25;
        catch java.lang.Throwable from label09 to label10 with label31;
        catch java.lang.NumberFormatException from label11 to label12 with label34;
        catch org.xmlpull.v1.XmlPullParserException from label11 to label12 with label19;
        catch java.io.IOException from label11 to label12 with label25;
        catch java.lang.Throwable from label11 to label12 with label31;
        catch org.xmlpull.v1.XmlPullParserException from label13 to label14 with label19;
        catch java.io.IOException from label13 to label14 with label25;
        catch java.lang.Throwable from label13 to label14 with label31;
        catch org.xmlpull.v1.XmlPullParserException from label14 to label15 with label19;
        catch java.io.IOException from label14 to label15 with label25;
        catch java.lang.Throwable from label14 to label15 with label31;
        catch java.io.IOException from label17 to label18 with label35;
        catch java.lang.Throwable from label20 to label21 with label31;
        catch java.io.IOException from label22 to label23 with label24;
        catch java.lang.Throwable from label26 to label27 with label31;
        catch java.io.IOException from label28 to label29 with label30;
        catch java.io.IOException from label32 to label33 with label36;
    }

    private int getPackageFlags(java.lang.String)
    {
        com.android.server.am.CompatModePackages r0;
        java.lang.String r1;
        java.lang.Integer r2;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        int $i0;

        r0 := @this: com.android.server.am.CompatModePackages;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.server.am.CompatModePackages: java.util.HashMap mPackages>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.lang.Integer) $r4;

        if r2 == null goto label1;

        $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        return $i0;

     label1:
        return 0;
    }

    private void setPackageScreenCompatModeLocked(android.content.pm.ApplicationInfo, int)
    {
        com.android.server.am.CompatModePackages r0;
        android.content.pm.ApplicationInfo r1;
        int i0, i1, i2, i3, $i4, $i6;
        java.lang.String r2, $r13, $r33, $r39;
        boolean z0, $z1, $z2, $z6;
        android.content.res.CompatibilityInfo r3, r4;
        android.os.Message r5;
        com.android.server.am.ActivityStack r6;
        com.android.server.am.ActivityRecord r7;
        com.android.server.am.ProcessRecord r8;
        java.lang.StringBuilder $r10, $r11, $r12, $r14, $r30, $r34, $r35, $r36, $r37, $r38, $r40, $r41;
        java.util.HashMap $r15, $r27;
        android.os.Handler $r16, $r17, $r20;
        com.android.server.am.ActivityManagerService $r19, $r21, $r26;
        java.util.ArrayList $r22, $r25;
        android.util.ArrayMap $r23;
        java.lang.Object $r24;
        android.app.IApplicationThread $r28, $r29;
        java.lang.Integer $r32;
        java.lang.Exception $r42;

        r0 := @this: com.android.server.am.CompatModePackages;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        i0 := @parameter1: int;

        r2 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        i1 = specialinvoke r0.<com.android.server.am.CompatModePackages: int getPackageFlags(java.lang.String)>(r2);

        tableswitch(i0)
        {
            case 0: goto label03;
            case 1: goto label11;
            case 2: goto label12;
            default: goto label01;
        };

     label01:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown screen compat mode req #");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ignoring");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r13);

     label02:
        return;

     label03:
        z0 = 0;

     label04:
        if z0 == 0 goto label15;

        i2 = i1 | 2;

     label05:
        r3 = virtualinvoke r0.<com.android.server.am.CompatModePackages: android.content.res.CompatibilityInfo compatibilityInfoForPackageLocked(android.content.pm.ApplicationInfo)>(r1);

        $z1 = virtualinvoke r3.<android.content.res.CompatibilityInfo: boolean alwaysSupportsScreen()>();

        if $z1 == 0 goto label06;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring compat mode change of ");

        $r37 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; compatibility never needed");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r39);

        i2 = 0;

     label06:
        $z2 = virtualinvoke r3.<android.content.res.CompatibilityInfo: boolean neverSupportsScreen()>();

        if $z2 == 0 goto label07;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring compat mode change of ");

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; compatibility always needed");

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r33);

        i2 = 0;

     label07:
        if i2 == i1 goto label02;

        if i2 == 0 goto label16;

        $r27 = r0.<com.android.server.am.CompatModePackages: java.util.HashMap mPackages>;

        $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        virtualinvoke $r27.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r32);

     label08:
        r4 = virtualinvoke r0.<com.android.server.am.CompatModePackages: android.content.res.CompatibilityInfo compatibilityInfoForPackageLocked(android.content.pm.ApplicationInfo)>(r1);

        $r16 = r0.<com.android.server.am.CompatModePackages: android.os.Handler mHandler>;

        virtualinvoke $r16.<android.os.Handler: void removeMessages(int)>(300);

        $r17 = r0.<com.android.server.am.CompatModePackages: android.os.Handler mHandler>;

        r5 = virtualinvoke $r17.<android.os.Handler: android.os.Message obtainMessage(int)>(300);

        $r20 = r0.<com.android.server.am.CompatModePackages: android.os.Handler mHandler>;

        virtualinvoke $r20.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>(r5, 10000L);

        $r19 = r0.<com.android.server.am.CompatModePackages: com.android.server.am.ActivityManagerService mService>;

        r6 = virtualinvoke $r19.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStack getFocusedStack()>();

        r7 = virtualinvoke r6.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord restartPackage(java.lang.String)>(r2);

        $r21 = r0.<com.android.server.am.CompatModePackages: com.android.server.am.ActivityManagerService mService>;

        $r22 = $r21.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i6 = virtualinvoke $r22.<java.util.ArrayList: int size()>();

        i3 = -1 + $i6;

     label09:
        if i3 < 0 goto label20;

        $r26 = r0.<com.android.server.am.CompatModePackages: com.android.server.am.ActivityManagerService mService>;

        $r25 = $r26.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $r24 = virtualinvoke $r25.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r8 = (com.android.server.am.ProcessRecord) $r24;

        $r23 = r8.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        $z6 = virtualinvoke $r23.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r2);

        if $z6 != 0 goto label17;

     label10:
        i3 = i3 + -1;

        goto label09;

     label11:
        z0 = 1;

        goto label04;

     label12:
        $i4 = i1 & 2;

        if $i4 != 0 goto label14;

        z0 = 1;

     label13:
        goto label04;

     label14:
        z0 = 0;

        goto label13;

     label15:
        i2 = i1 & -3;

        goto label05;

     label16:
        $r15 = r0.<com.android.server.am.CompatModePackages: java.util.HashMap mPackages>;

        virtualinvoke $r15.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r2);

        goto label08;

     label17:
        $r29 = r8.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r29 == null goto label10;

        $r28 = r8.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r28.<android.app.IApplicationThread: void updatePackageCompatibilityInfo(java.lang.String,android.content.res.CompatibilityInfo)>(r2, r4);

     label18:
        goto label10;

     label19:
        $r42 := @caughtexception;

        goto label10;

     label20:
        if r7 == null goto label02;

        virtualinvoke r6.<com.android.server.am.ActivityStack: boolean ensureActivityConfigurationLocked(com.android.server.am.ActivityRecord,int)>(r7, 0);

        virtualinvoke r6.<com.android.server.am.ActivityStack: boolean ensureActivitiesVisibleLocked(com.android.server.am.ActivityRecord,int)>(r7, 0);

        return;

        catch java.lang.Exception from label17 to label18 with label19;
    }

    public android.content.res.CompatibilityInfo compatibilityInfoForPackageLocked(android.content.pm.ApplicationInfo)
    {
        com.android.server.am.CompatModePackages r0;
        android.content.pm.ApplicationInfo r1;
        int i0, i1, $i2, $i3;
        boolean z0;
        com.android.server.am.ActivityManagerService $r2, $r4;
        android.content.res.Configuration $r3, $r5;
        java.lang.String $r6;
        android.content.res.CompatibilityInfo $r7;

        r0 := @this: com.android.server.am.CompatModePackages;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        $r2 = r0.<com.android.server.am.CompatModePackages: com.android.server.am.ActivityManagerService mService>;

        $r3 = $r2.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        i0 = $r3.<android.content.res.Configuration: int screenLayout>;

        $r4 = r0.<com.android.server.am.CompatModePackages: com.android.server.am.ActivityManagerService mService>;

        $r5 = $r4.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        i1 = $r5.<android.content.res.Configuration: int smallestScreenWidthDp>;

        $r6 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $i2 = specialinvoke r0.<com.android.server.am.CompatModePackages: int getPackageFlags(java.lang.String)>($r6);

        $i3 = 2 & $i2;

        if $i3 == 0 goto label2;

        z0 = 1;

     label1:
        $r7 = new android.content.res.CompatibilityInfo;

        specialinvoke $r7.<android.content.res.CompatibilityInfo: void <init>(android.content.pm.ApplicationInfo,int,int,boolean)>(r1, i0, i1, z0);

        return $r7;

     label2:
        z0 = 0;

        goto label1;
    }

    public int computeCompatModeLocked(android.content.pm.ApplicationInfo)
    {
        com.android.server.am.CompatModePackages r0;
        android.content.pm.ApplicationInfo r1;
        byte b0, b1;
        android.content.res.CompatibilityInfo r2, $r4;
        java.lang.String $r3;
        int $i2, $i3, $i4, $i5;
        com.android.server.am.ActivityManagerService $r5, $r7;
        android.content.res.Configuration $r6, $r8;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.server.am.CompatModePackages;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        b0 = 1;

        $r3 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $i2 = specialinvoke r0.<com.android.server.am.CompatModePackages: int getPackageFlags(java.lang.String)>($r3);

        $i3 = 2 & $i2;

        if $i3 == 0 goto label3;

        b1 = b0;

     label1:
        $r4 = new android.content.res.CompatibilityInfo;

        $r5 = r0.<com.android.server.am.CompatModePackages: com.android.server.am.ActivityManagerService mService>;

        $r6 = $r5.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $i5 = $r6.<android.content.res.Configuration: int screenLayout>;

        $r7 = r0.<com.android.server.am.CompatModePackages: com.android.server.am.ActivityManagerService mService>;

        $r8 = $r7.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $i4 = $r8.<android.content.res.Configuration: int smallestScreenWidthDp>;

        z2 = (boolean) b1;

        specialinvoke $r4.<android.content.res.CompatibilityInfo: void <init>(android.content.pm.ApplicationInfo,int,int,boolean)>(r1, $i5, $i4, z2);

        r2 = $r4;

        $z1 = virtualinvoke r2.<android.content.res.CompatibilityInfo: boolean alwaysSupportsScreen()>();

        if $z1 == 0 goto label4;

        b0 = -2;

     label2:
        return b0;

     label3:
        b1 = 0;

        goto label1;

     label4:
        $z0 = virtualinvoke r2.<android.content.res.CompatibilityInfo: boolean neverSupportsScreen()>();

        if $z0 == 0 goto label5;

        return -1;

     label5:
        if b1 != 0 goto label2;

        return 0;
    }

    public boolean getFrontActivityAskCompatModeLocked()
    {
        com.android.server.am.CompatModePackages r0;
        com.android.server.am.ActivityRecord r1;
        com.android.server.am.ActivityManagerService $r2;
        com.android.server.am.ActivityStack $r3;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: com.android.server.am.CompatModePackages;

        $r2 = r0.<com.android.server.am.CompatModePackages: com.android.server.am.ActivityManagerService mService>;

        $r3 = virtualinvoke $r2.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStack getFocusedStack()>();

        r1 = virtualinvoke $r3.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(com.android.server.am.ActivityRecord)>(null);

        if r1 != null goto label1;

        return 0;

     label1:
        $r4 = r1.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        $z0 = virtualinvoke r0.<com.android.server.am.CompatModePackages: boolean getPackageAskCompatModeLocked(java.lang.String)>($r4);

        return $z0;
    }

    public int getFrontActivityScreenCompatModeLocked()
    {
        com.android.server.am.CompatModePackages r0;
        com.android.server.am.ActivityRecord r1;
        com.android.server.am.ActivityManagerService $r2;
        com.android.server.am.ActivityStack $r3;
        android.content.pm.ActivityInfo $r4;
        android.content.pm.ApplicationInfo $r5;
        int $i0;

        r0 := @this: com.android.server.am.CompatModePackages;

        $r2 = r0.<com.android.server.am.CompatModePackages: com.android.server.am.ActivityManagerService mService>;

        $r3 = virtualinvoke $r2.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStack getFocusedStack()>();

        r1 = virtualinvoke $r3.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(com.android.server.am.ActivityRecord)>(null);

        if r1 != null goto label1;

        return -3;

     label1:
        $r4 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r5 = $r4.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = virtualinvoke r0.<com.android.server.am.CompatModePackages: int computeCompatModeLocked(android.content.pm.ApplicationInfo)>($r5);

        return $i0;
    }

    public boolean getPackageAskCompatModeLocked(java.lang.String)
    {
        com.android.server.am.CompatModePackages r0;
        java.lang.String r1;
        int $i0, $i1;

        r0 := @this: com.android.server.am.CompatModePackages;

        r1 := @parameter0: java.lang.String;

        $i0 = specialinvoke r0.<com.android.server.am.CompatModePackages: int getPackageFlags(java.lang.String)>(r1);

        $i1 = 1 & $i0;

        if $i1 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public int getPackageScreenCompatModeLocked(java.lang.String)
    {
        com.android.server.am.CompatModePackages r0;
        java.lang.String r1;
        android.content.pm.ApplicationInfo r3, r4;
        android.content.pm.IPackageManager $r5;
        int $i0;
        android.os.RemoteException $r6;

        r0 := @this: com.android.server.am.CompatModePackages;

        r1 := @parameter0: java.lang.String;

     label1:
        $r5 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r4 = interfaceinvoke $r5.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>(r1, 0, 0);

     label2:
        r3 = r4;

     label3:
        if r3 != null goto label4;

        return -3;

     label4:
        $i0 = virtualinvoke r0.<com.android.server.am.CompatModePackages: int computeCompatModeLocked(android.content.pm.ApplicationInfo)>(r3);

        return $i0;

     label5:
        $r6 := @caughtexception;

        r3 = null;

        goto label3;

        catch android.os.RemoteException from label1 to label2 with label5;
    }

    public java.util.HashMap getPackages()
    {
        com.android.server.am.CompatModePackages r0;
        java.util.HashMap $r1;

        r0 := @this: com.android.server.am.CompatModePackages;

        $r1 = r0.<com.android.server.am.CompatModePackages: java.util.HashMap mPackages>;

        return $r1;
    }

    public void handlePackageAddedLocked(java.lang.String, boolean)
    {
        com.android.server.am.CompatModePackages r0;
        java.lang.String r1;
        boolean z0, z1, z2, z3, $z4;
        android.content.pm.ApplicationInfo r3, r6;
        android.content.res.CompatibilityInfo r4;
        android.os.Message r5;
        android.content.pm.IPackageManager $r7;
        java.util.HashMap $r8, $r9;
        android.os.Handler $r10, $r12, $r13;
        android.os.RemoteException $r14;

        r0 := @this: com.android.server.am.CompatModePackages;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

     label1:
        $r7 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r6 = interfaceinvoke $r7.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>(r1, 0, 0);

     label2:
        r3 = r6;

     label3:
        if r3 != null goto label5;

     label4:
        return;

     label5:
        r4 = virtualinvoke r0.<com.android.server.am.CompatModePackages: android.content.res.CompatibilityInfo compatibilityInfoForPackageLocked(android.content.pm.ApplicationInfo)>(r3);

        z1 = virtualinvoke r4.<android.content.res.CompatibilityInfo: boolean alwaysSupportsScreen()>();

        z2 = 0;

        if z1 != 0 goto label6;

        z3 = virtualinvoke r4.<android.content.res.CompatibilityInfo: boolean neverSupportsScreen()>();

        z2 = 0;

        if z3 != 0 goto label6;

        z2 = 1;

     label6:
        if z0 == 0 goto label4;

        if z2 != 0 goto label4;

        $r8 = r0.<com.android.server.am.CompatModePackages: java.util.HashMap mPackages>;

        $z4 = virtualinvoke $r8.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z4 == 0 goto label4;

        $r9 = r0.<com.android.server.am.CompatModePackages: java.util.HashMap mPackages>;

        virtualinvoke $r9.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        $r10 = r0.<com.android.server.am.CompatModePackages: android.os.Handler mHandler>;

        virtualinvoke $r10.<android.os.Handler: void removeMessages(int)>(300);

        $r12 = r0.<com.android.server.am.CompatModePackages: android.os.Handler mHandler>;

        r5 = virtualinvoke $r12.<android.os.Handler: android.os.Message obtainMessage(int)>(300);

        $r13 = r0.<com.android.server.am.CompatModePackages: android.os.Handler mHandler>;

        virtualinvoke $r13.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>(r5, 10000L);

        return;

     label7:
        $r14 := @caughtexception;

        r3 = null;

        goto label3;

        catch android.os.RemoteException from label1 to label2 with label7;
    }

    void saveCompatModes()
    {
        com.android.server.am.CompatModePackages r0;
        com.android.server.am.ActivityManagerService r1, $r21, $r23;
        java.util.HashMap r2, $r15, $r16;
        java.lang.Throwable r3, $r40;
        java.io.FileOutputStream r4;
        java.io.IOException r5, $r38;
        com.android.internal.util.FastXmlSerializer r6, $r18;
        android.content.pm.IPackageManager r7;
        int i0, i1, i2;
        java.util.Iterator r8;
        java.util.Map$Entry r9;
        java.lang.String r10, $r36;
        android.content.res.CompatibilityInfo r12, $r31;
        android.content.pm.ApplicationInfo r13, r14;
        android.util.AtomicFile $r17, $r29, $r37;
        java.lang.Boolean $r20;
        android.content.res.Configuration $r22, $r24;
        boolean $z0, $z1, $z2;
        java.util.Set $r26;
        java.lang.Object $r27, $r28, $r30;
        java.lang.Integer $r32;
        android.os.RemoteException $r41;

        r0 := @this: com.android.server.am.CompatModePackages;

        r1 = r0.<com.android.server.am.CompatModePackages: com.android.server.am.ActivityManagerService mService>;

        entermonitor r1;

     label01:
        $r16 = new java.util.HashMap;

        $r15 = r0.<com.android.server.am.CompatModePackages: java.util.HashMap mPackages>;

        specialinvoke $r16.<java.util.HashMap: void <init>(java.util.Map)>($r15);

        r2 = $r16;

        exitmonitor r1;

     label02:
        r4 = null;

     label03:
        $r17 = r0.<com.android.server.am.CompatModePackages: android.util.AtomicFile mFile>;

        r4 = virtualinvoke $r17.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

        $r18 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke $r18.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        r6 = $r18;

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r4, "utf-8");

        $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r20);

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "compat-packages");

        r7 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r23 = r0.<com.android.server.am.CompatModePackages: com.android.server.am.ActivityManagerService mService>;

        $r24 = $r23.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        i0 = $r24.<android.content.res.Configuration: int screenLayout>;

        $r21 = r0.<com.android.server.am.CompatModePackages: com.android.server.am.ActivityManagerService mService>;

        $r22 = $r21.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        i1 = $r22.<android.content.res.Configuration: int smallestScreenWidthDp>;

        $r26 = virtualinvoke r2.<java.util.HashMap: java.util.Set entrySet()>();

        r8 = interfaceinvoke $r26.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label16;

        $r30 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.util.Map$Entry) $r30;

        $r27 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>();

        r10 = (java.lang.String) $r27;

        $r28 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r32 = (java.lang.Integer) $r28;

        i2 = virtualinvoke $r32.<java.lang.Integer: int intValue()>();

     label05:
        if i2 == 0 goto label04;

     label06:
        r14 = interfaceinvoke r7.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>(r10, 0, 0);

     label07:
        r13 = r14;

     label08:
        if r13 == null goto label04;

     label09:
        $r31 = new android.content.res.CompatibilityInfo;

        specialinvoke $r31.<android.content.res.CompatibilityInfo: void <init>(android.content.pm.ApplicationInfo,int,int,boolean)>(r13, i0, i1, 0);

        r12 = $r31;

        $z2 = virtualinvoke r12.<android.content.res.CompatibilityInfo: boolean alwaysSupportsScreen()>();

        if $z2 != 0 goto label04;

        $z1 = virtualinvoke r12.<android.content.res.CompatibilityInfo: boolean neverSupportsScreen()>();

        if $z1 != 0 goto label04;

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "pkg");

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r10);

        $r36 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i2);

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "mode", $r36);

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "pkg");

     label10:
        goto label04;

     label11:
        $r38 := @caughtexception;

        r5 = $r38;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Error writing compat packages", r5);

        if r4 == null goto label12;

        $r37 = r0.<com.android.server.am.CompatModePackages: android.util.AtomicFile mFile>;

        virtualinvoke $r37.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r4);

     label12:
        return;

     label13:
        $r40 := @caughtexception;

        r3 = $r40;

     label14:
        exitmonitor r1;

     label15:
        throw r3;

     label16:
        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "compat-packages");

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        $r29 = r0.<com.android.server.am.CompatModePackages: android.util.AtomicFile mFile>;

        virtualinvoke $r29.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r4);

     label17:
        return;

     label18:
        $r41 := @caughtexception;

        r13 = null;

        goto label08;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.io.IOException from label03 to label04 with label11;
        catch java.io.IOException from label04 to label05 with label11;
        catch android.os.RemoteException from label06 to label07 with label18;
        catch java.io.IOException from label06 to label07 with label11;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.io.IOException from label16 to label17 with label11;
    }

    public void setFrontActivityAskCompatModeLocked(boolean)
    {
        com.android.server.am.CompatModePackages r0;
        boolean z0;
        com.android.server.am.ActivityRecord r1;
        com.android.server.am.ActivityManagerService $r2;
        com.android.server.am.ActivityStack $r3;
        java.lang.String $r4;

        r0 := @this: com.android.server.am.CompatModePackages;

        z0 := @parameter0: boolean;

        $r2 = r0.<com.android.server.am.CompatModePackages: com.android.server.am.ActivityManagerService mService>;

        $r3 = virtualinvoke $r2.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStack getFocusedStack()>();

        r1 = virtualinvoke $r3.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(com.android.server.am.ActivityRecord)>(null);

        if r1 == null goto label1;

        $r4 = r1.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        virtualinvoke r0.<com.android.server.am.CompatModePackages: void setPackageAskCompatModeLocked(java.lang.String,boolean)>($r4, z0);

     label1:
        return;
    }

    public void setFrontActivityScreenCompatModeLocked(int)
    {
        com.android.server.am.CompatModePackages r0;
        int i0;
        com.android.server.am.ActivityRecord r1;
        com.android.server.am.ActivityManagerService $r2;
        com.android.server.am.ActivityStack $r3;
        android.content.pm.ActivityInfo $r4;
        android.content.pm.ApplicationInfo $r5;

        r0 := @this: com.android.server.am.CompatModePackages;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.am.CompatModePackages: com.android.server.am.ActivityManagerService mService>;

        $r3 = virtualinvoke $r2.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStack getFocusedStack()>();

        r1 = virtualinvoke $r3.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(com.android.server.am.ActivityRecord)>(null);

        if r1 != null goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "setFrontActivityScreenCompatMode failed: no top activity");

        return;

     label1:
        $r4 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r5 = $r4.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        specialinvoke r0.<com.android.server.am.CompatModePackages: void setPackageScreenCompatModeLocked(android.content.pm.ApplicationInfo,int)>($r5, i0);

        return;
    }

    public void setPackageAskCompatModeLocked(java.lang.String, boolean)
    {
        com.android.server.am.CompatModePackages r0;
        java.lang.String r1;
        boolean z0;
        int i0, i1;
        android.os.Message r2;
        java.util.HashMap $r3, $r8;
        android.os.Handler $r5, $r6, $r7;
        java.lang.Integer $r10;

        r0 := @this: com.android.server.am.CompatModePackages;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        i0 = specialinvoke r0.<com.android.server.am.CompatModePackages: int getPackageFlags(java.lang.String)>(r1);

        if z0 == 0 goto label4;

        i1 = i0 & -2;

     label1:
        if i0 == i1 goto label3;

        if i1 == 0 goto label5;

        $r8 = r0.<com.android.server.am.CompatModePackages: java.util.HashMap mPackages>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r10);

     label2:
        $r5 = r0.<com.android.server.am.CompatModePackages: android.os.Handler mHandler>;

        virtualinvoke $r5.<android.os.Handler: void removeMessages(int)>(300);

        $r6 = r0.<com.android.server.am.CompatModePackages: android.os.Handler mHandler>;

        r2 = virtualinvoke $r6.<android.os.Handler: android.os.Message obtainMessage(int)>(300);

        $r7 = r0.<com.android.server.am.CompatModePackages: android.os.Handler mHandler>;

        virtualinvoke $r7.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>(r2, 10000L);

     label3:
        return;

     label4:
        i1 = i0 | 1;

        goto label1;

     label5:
        $r3 = r0.<com.android.server.am.CompatModePackages: java.util.HashMap mPackages>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        goto label2;
    }

    public void setPackageScreenCompatModeLocked(java.lang.String, int)
    {
        com.android.server.am.CompatModePackages r0;
        java.lang.String r1, $r9;
        int i0;
        android.content.pm.ApplicationInfo r3, r4;
        android.content.pm.IPackageManager $r5;
        java.lang.StringBuilder $r6, $r7, $r8;
        android.os.RemoteException $r10;

        r0 := @this: com.android.server.am.CompatModePackages;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $r5 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r4 = interfaceinvoke $r5.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>(r1, 0, 0);

     label2:
        r3 = r4;

     label3:
        if r3 != null goto label4;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setPackageScreenCompatMode failed: unknown package ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r9);

        return;

     label4:
        specialinvoke r0.<com.android.server.am.CompatModePackages: void setPackageScreenCompatModeLocked(android.content.pm.ApplicationInfo,int)>(r3, i0);

        return;

     label5:
        $r10 := @caughtexception;

        r3 = null;

        goto label3;

        catch android.os.RemoteException from label1 to label2 with label5;
    }

    public static void <clinit>()
    {
        <com.android.server.am.CompatModePackages: int MSG_WRITE> = 300;

        <com.android.server.am.CompatModePackages: int COMPAT_FLAG_ENABLED> = 2;

        <com.android.server.am.CompatModePackages: int COMPAT_FLAG_DONT_ASK> = 1;

        return;
    }
}
