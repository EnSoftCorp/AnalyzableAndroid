public final class java.awt.font.TextAttribute extends java.text.AttributedCharacterIterator$Attribute
{
    public static final java.awt.font.TextAttribute BACKGROUND;
    public static final java.awt.font.TextAttribute BIDI_EMBEDDING;
    public static final java.awt.font.TextAttribute CHAR_REPLACEMENT;
    public static final java.awt.font.TextAttribute FAMILY;
    public static final java.awt.font.TextAttribute FONT;
    public static final java.awt.font.TextAttribute FOREGROUND;
    public static final java.awt.font.TextAttribute INPUT_METHOD_HIGHLIGHT;
    public static final java.awt.font.TextAttribute INPUT_METHOD_UNDERLINE;
    public static final java.awt.font.TextAttribute JUSTIFICATION;
    public static final java.lang.Float JUSTIFICATION_FULL;
    public static final java.lang.Float JUSTIFICATION_NONE;
    public static final java.awt.font.TextAttribute KERNING;
    public static final java.lang.Integer KERNING_ON;
    public static final java.awt.font.TextAttribute LIGATURES;
    public static final java.lang.Integer LIGATURES_ON;
    public static final java.awt.font.TextAttribute NUMERIC_SHAPING;
    public static final java.awt.font.TextAttribute POSTURE;
    public static final java.lang.Float POSTURE_OBLIQUE;
    public static final java.lang.Float POSTURE_REGULAR;
    public static final java.awt.font.TextAttribute RUN_DIRECTION;
    public static final java.lang.Boolean RUN_DIRECTION_LTR;
    public static final java.lang.Boolean RUN_DIRECTION_RTL;
    public static final java.awt.font.TextAttribute SIZE;
    public static final java.awt.font.TextAttribute STRIKETHROUGH;
    public static final java.lang.Boolean STRIKETHROUGH_ON;
    public static final java.awt.font.TextAttribute SUPERSCRIPT;
    public static final java.lang.Integer SUPERSCRIPT_SUB;
    public static final java.lang.Integer SUPERSCRIPT_SUPER;
    public static final java.awt.font.TextAttribute SWAP_COLORS;
    public static final java.lang.Boolean SWAP_COLORS_ON;
    public static final java.awt.font.TextAttribute TRACKING;
    public static final java.lang.Float TRACKING_LOOSE;
    public static final java.lang.Float TRACKING_TIGHT;
    public static final java.awt.font.TextAttribute TRANSFORM;
    public static final java.awt.font.TextAttribute UNDERLINE;
    public static final java.lang.Integer UNDERLINE_LOW_DASHED;
    public static final java.lang.Integer UNDERLINE_LOW_DOTTED;
    public static final java.lang.Integer UNDERLINE_LOW_GRAY;
    public static final java.lang.Integer UNDERLINE_LOW_ONE_PIXEL;
    public static final java.lang.Integer UNDERLINE_LOW_TWO_PIXEL;
    public static final java.lang.Integer UNDERLINE_ON;
    public static final java.awt.font.TextAttribute WEIGHT;
    public static final java.lang.Float WEIGHT_BOLD;
    public static final java.lang.Float WEIGHT_DEMIBOLD;
    public static final java.lang.Float WEIGHT_DEMILIGHT;
    public static final java.lang.Float WEIGHT_EXTRABOLD;
    public static final java.lang.Float WEIGHT_EXTRA_LIGHT;
    public static final java.lang.Float WEIGHT_HEAVY;
    public static final java.lang.Float WEIGHT_LIGHT;
    public static final java.lang.Float WEIGHT_MEDIUM;
    public static final java.lang.Float WEIGHT_REGULAR;
    public static final java.lang.Float WEIGHT_SEMIBOLD;
    public static final java.lang.Float WEIGHT_ULTRABOLD;
    public static final java.awt.font.TextAttribute WIDTH;
    public static final java.lang.Float WIDTH_CONDENSED;
    public static final java.lang.Float WIDTH_EXTENDED;
    public static final java.lang.Float WIDTH_REGULAR;
    public static final java.lang.Float WIDTH_SEMI_CONDENSED;
    public static final java.lang.Float WIDTH_SEMI_EXTENDED;
    private static final long serialVersionUID;

    static void <clinit>()
    {
        java.awt.font.TextAttribute $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r11, $r13, $r15, $r17, $r18, $r22, $r23, $r24, $r29, $r31, $r32, $r35, $r43, $r54;
        java.lang.Float $r9, $r10, $r16, $r19, $r30, $r34, $r40, $r41, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r55, $r56, $r57, $r58;
        java.lang.Integer $r12, $r14, $r26, $r27, $r33, $r36, $r37, $r38, $r39, $r42;
        java.lang.Boolean $r20, $r21, $r25, $r28;

        <java.awt.font.TextAttribute: long serialVersionUID> = 7744112784117861702L;

        $r0 = new java.awt.font.TextAttribute;

        specialinvoke $r0.<java.awt.font.TextAttribute: void <init>(java.lang.String)>("background");

        <java.awt.font.TextAttribute: java.awt.font.TextAttribute BACKGROUND> = $r0;

        $r1 = new java.awt.font.TextAttribute;

        specialinvoke $r1.<java.awt.font.TextAttribute: void <init>(java.lang.String)>("bidi_embedding");

        <java.awt.font.TextAttribute: java.awt.font.TextAttribute BIDI_EMBEDDING> = $r1;

        $r2 = new java.awt.font.TextAttribute;

        specialinvoke $r2.<java.awt.font.TextAttribute: void <init>(java.lang.String)>("char_replacement");

        <java.awt.font.TextAttribute: java.awt.font.TextAttribute CHAR_REPLACEMENT> = $r2;

        $r3 = new java.awt.font.TextAttribute;

        specialinvoke $r3.<java.awt.font.TextAttribute: void <init>(java.lang.String)>("family");

        <java.awt.font.TextAttribute: java.awt.font.TextAttribute FAMILY> = $r3;

        $r4 = new java.awt.font.TextAttribute;

        specialinvoke $r4.<java.awt.font.TextAttribute: void <init>(java.lang.String)>("font");

        <java.awt.font.TextAttribute: java.awt.font.TextAttribute FONT> = $r4;

        $r5 = new java.awt.font.TextAttribute;

        specialinvoke $r5.<java.awt.font.TextAttribute: void <init>(java.lang.String)>("foreground");

        <java.awt.font.TextAttribute: java.awt.font.TextAttribute FOREGROUND> = $r5;

        $r6 = new java.awt.font.TextAttribute;

        specialinvoke $r6.<java.awt.font.TextAttribute: void <init>(java.lang.String)>("input method highlight");

        <java.awt.font.TextAttribute: java.awt.font.TextAttribute INPUT_METHOD_HIGHLIGHT> = $r6;

        $r7 = new java.awt.font.TextAttribute;

        specialinvoke $r7.<java.awt.font.TextAttribute: void <init>(java.lang.String)>("input method underline");

        <java.awt.font.TextAttribute: java.awt.font.TextAttribute INPUT_METHOD_UNDERLINE> = $r7;

        $r8 = new java.awt.font.TextAttribute;

        specialinvoke $r8.<java.awt.font.TextAttribute: void <init>(java.lang.String)>("justification");

        <java.awt.font.TextAttribute: java.awt.font.TextAttribute JUSTIFICATION> = $r8;

        $r9 = new java.lang.Float;

        specialinvoke $r9.<java.lang.Float: void <init>(float)>(1.0F);

        <java.awt.font.TextAttribute: java.lang.Float JUSTIFICATION_FULL> = $r9;

        $r10 = new java.lang.Float;

        specialinvoke $r10.<java.lang.Float: void <init>(float)>(0.0F);

        <java.awt.font.TextAttribute: java.lang.Float JUSTIFICATION_NONE> = $r10;

        $r11 = new java.awt.font.TextAttribute;

        specialinvoke $r11.<java.awt.font.TextAttribute: void <init>(java.lang.String)>("kerning");

        <java.awt.font.TextAttribute: java.awt.font.TextAttribute KERNING> = $r11;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        <java.awt.font.TextAttribute: java.lang.Integer KERNING_ON> = $r12;

        $r13 = new java.awt.font.TextAttribute;

        specialinvoke $r13.<java.awt.font.TextAttribute: void <init>(java.lang.String)>("ligatures");

        <java.awt.font.TextAttribute: java.awt.font.TextAttribute LIGATURES> = $r13;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        <java.awt.font.TextAttribute: java.lang.Integer LIGATURES_ON> = $r14;

        $r15 = new java.awt.font.TextAttribute;

        specialinvoke $r15.<java.awt.font.TextAttribute: void <init>(java.lang.String)>("numeric_shaping");

        <java.awt.font.TextAttribute: java.awt.font.TextAttribute NUMERIC_SHAPING> = $r15;

        $r17 = new java.awt.font.TextAttribute;

        specialinvoke $r17.<java.awt.font.TextAttribute: void <init>(java.lang.String)>("posture");

        <java.awt.font.TextAttribute: java.awt.font.TextAttribute POSTURE> = $r17;

        $r16 = new java.lang.Float;

        specialinvoke $r16.<java.lang.Float: void <init>(float)>(0.0F);

        <java.awt.font.TextAttribute: java.lang.Float POSTURE_REGULAR> = $r16;

        $r19 = new java.lang.Float;

        specialinvoke $r19.<java.lang.Float: void <init>(float)>(0.2F);

        <java.awt.font.TextAttribute: java.lang.Float POSTURE_OBLIQUE> = $r19;

        $r18 = new java.awt.font.TextAttribute;

        specialinvoke $r18.<java.awt.font.TextAttribute: void <init>(java.lang.String)>("run_direction");

        <java.awt.font.TextAttribute: java.awt.font.TextAttribute RUN_DIRECTION> = $r18;

        $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        <java.awt.font.TextAttribute: java.lang.Boolean RUN_DIRECTION_LTR> = $r21;

        $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        <java.awt.font.TextAttribute: java.lang.Boolean RUN_DIRECTION_RTL> = $r20;

        $r23 = new java.awt.font.TextAttribute;

        specialinvoke $r23.<java.awt.font.TextAttribute: void <init>(java.lang.String)>("size");

        <java.awt.font.TextAttribute: java.awt.font.TextAttribute SIZE> = $r23;

        $r22 = new java.awt.font.TextAttribute;

        specialinvoke $r22.<java.awt.font.TextAttribute: void <init>(java.lang.String)>("strikethrough");

        <java.awt.font.TextAttribute: java.awt.font.TextAttribute STRIKETHROUGH> = $r22;

        $r25 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        <java.awt.font.TextAttribute: java.lang.Boolean STRIKETHROUGH_ON> = $r25;

        $r24 = new java.awt.font.TextAttribute;

        specialinvoke $r24.<java.awt.font.TextAttribute: void <init>(java.lang.String)>("superscript");

        <java.awt.font.TextAttribute: java.awt.font.TextAttribute SUPERSCRIPT> = $r24;

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        <java.awt.font.TextAttribute: java.lang.Integer SUPERSCRIPT_SUB> = $r27;

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        <java.awt.font.TextAttribute: java.lang.Integer SUPERSCRIPT_SUPER> = $r26;

        $r29 = new java.awt.font.TextAttribute;

        specialinvoke $r29.<java.awt.font.TextAttribute: void <init>(java.lang.String)>("swap_colors");

        <java.awt.font.TextAttribute: java.awt.font.TextAttribute SWAP_COLORS> = $r29;

        $r28 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        <java.awt.font.TextAttribute: java.lang.Boolean SWAP_COLORS_ON> = $r28;

        $r31 = new java.awt.font.TextAttribute;

        specialinvoke $r31.<java.awt.font.TextAttribute: void <init>(java.lang.String)>("tracking");

        <java.awt.font.TextAttribute: java.awt.font.TextAttribute TRACKING> = $r31;

        $r30 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.04F);

        <java.awt.font.TextAttribute: java.lang.Float TRACKING_LOOSE> = $r30;

        $r34 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(-0.04F);

        <java.awt.font.TextAttribute: java.lang.Float TRACKING_TIGHT> = $r34;

        $r35 = new java.awt.font.TextAttribute;

        specialinvoke $r35.<java.awt.font.TextAttribute: void <init>(java.lang.String)>("transform");

        <java.awt.font.TextAttribute: java.awt.font.TextAttribute TRANSFORM> = $r35;

        $r32 = new java.awt.font.TextAttribute;

        specialinvoke $r32.<java.awt.font.TextAttribute: void <init>(java.lang.String)>("underline");

        <java.awt.font.TextAttribute: java.awt.font.TextAttribute UNDERLINE> = $r32;

        $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        <java.awt.font.TextAttribute: java.lang.Integer UNDERLINE_ON> = $r33;

        $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        <java.awt.font.TextAttribute: java.lang.Integer UNDERLINE_LOW_ONE_PIXEL> = $r38;

        $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        <java.awt.font.TextAttribute: java.lang.Integer UNDERLINE_LOW_TWO_PIXEL> = $r39;

        $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        <java.awt.font.TextAttribute: java.lang.Integer UNDERLINE_LOW_DOTTED> = $r36;

        $r37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        <java.awt.font.TextAttribute: java.lang.Integer UNDERLINE_LOW_GRAY> = $r37;

        $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        <java.awt.font.TextAttribute: java.lang.Integer UNDERLINE_LOW_DASHED> = $r42;

        $r43 = new java.awt.font.TextAttribute;

        specialinvoke $r43.<java.awt.font.TextAttribute: void <init>(java.lang.String)>("weight");

        <java.awt.font.TextAttribute: java.awt.font.TextAttribute WEIGHT> = $r43;

        $r40 = new java.lang.Float;

        specialinvoke $r40.<java.lang.Float: void <init>(float)>(0.5F);

        <java.awt.font.TextAttribute: java.lang.Float WEIGHT_EXTRA_LIGHT> = $r40;

        $r41 = new java.lang.Float;

        specialinvoke $r41.<java.lang.Float: void <init>(float)>(0.75F);

        <java.awt.font.TextAttribute: java.lang.Float WEIGHT_LIGHT> = $r41;

        $r46 = new java.lang.Float;

        specialinvoke $r46.<java.lang.Float: void <init>(float)>(0.875F);

        <java.awt.font.TextAttribute: java.lang.Float WEIGHT_DEMILIGHT> = $r46;

        $r47 = new java.lang.Float;

        specialinvoke $r47.<java.lang.Float: void <init>(float)>(1.0F);

        <java.awt.font.TextAttribute: java.lang.Float WEIGHT_REGULAR> = $r47;

        $r44 = new java.lang.Float;

        specialinvoke $r44.<java.lang.Float: void <init>(float)>(1.25F);

        <java.awt.font.TextAttribute: java.lang.Float WEIGHT_SEMIBOLD> = $r44;

        $r45 = new java.lang.Float;

        specialinvoke $r45.<java.lang.Float: void <init>(float)>(1.5F);

        <java.awt.font.TextAttribute: java.lang.Float WEIGHT_MEDIUM> = $r45;

        $r51 = new java.lang.Float;

        specialinvoke $r51.<java.lang.Float: void <init>(float)>(1.75F);

        <java.awt.font.TextAttribute: java.lang.Float WEIGHT_DEMIBOLD> = $r51;

        $r50 = new java.lang.Float;

        specialinvoke $r50.<java.lang.Float: void <init>(float)>(2.0F);

        <java.awt.font.TextAttribute: java.lang.Float WEIGHT_BOLD> = $r50;

        $r49 = new java.lang.Float;

        specialinvoke $r49.<java.lang.Float: void <init>(float)>(2.25F);

        <java.awt.font.TextAttribute: java.lang.Float WEIGHT_HEAVY> = $r49;

        $r48 = new java.lang.Float;

        specialinvoke $r48.<java.lang.Float: void <init>(float)>(2.5F);

        <java.awt.font.TextAttribute: java.lang.Float WEIGHT_EXTRABOLD> = $r48;

        $r55 = new java.lang.Float;

        specialinvoke $r55.<java.lang.Float: void <init>(float)>(2.75F);

        <java.awt.font.TextAttribute: java.lang.Float WEIGHT_ULTRABOLD> = $r55;

        $r54 = new java.awt.font.TextAttribute;

        specialinvoke $r54.<java.awt.font.TextAttribute: void <init>(java.lang.String)>("width");

        <java.awt.font.TextAttribute: java.awt.font.TextAttribute WIDTH> = $r54;

        $r53 = new java.lang.Float;

        specialinvoke $r53.<java.lang.Float: void <init>(float)>(0.75F);

        <java.awt.font.TextAttribute: java.lang.Float WIDTH_CONDENSED> = $r53;

        $r52 = new java.lang.Float;

        specialinvoke $r52.<java.lang.Float: void <init>(float)>(0.875F);

        <java.awt.font.TextAttribute: java.lang.Float WIDTH_SEMI_CONDENSED> = $r52;

        $r58 = new java.lang.Float;

        specialinvoke $r58.<java.lang.Float: void <init>(float)>(1.0F);

        <java.awt.font.TextAttribute: java.lang.Float WIDTH_REGULAR> = $r58;

        $r57 = new java.lang.Float;

        specialinvoke $r57.<java.lang.Float: void <init>(float)>(1.25F);

        <java.awt.font.TextAttribute: java.lang.Float WIDTH_SEMI_EXTENDED> = $r57;

        $r56 = new java.lang.Float;

        specialinvoke $r56.<java.lang.Float: void <init>(float)>(1.5F);

        <java.awt.font.TextAttribute: java.lang.Float WIDTH_EXTENDED> = $r56;

        return;
    }

    protected void <init>(java.lang.String)
    {
        java.awt.font.TextAttribute r0;
        java.lang.String r1;

        r0 := @this: java.awt.font.TextAttribute;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.text.AttributedCharacterIterator$Attribute: void <init>(java.lang.String)>(r1);

        return;
    }
}
