public class org.apache.xalan.templates.ElemCopy extends org.apache.xalan.templates.ElemUse
{
    static final long serialVersionUID;

    public void <init>()
    {
        org.apache.xalan.templates.ElemCopy r0;

        r0 := @this: org.apache.xalan.templates.ElemCopy;

        specialinvoke r0.<org.apache.xalan.templates.ElemUse: void <init>()>();

        return;
    }

    public void execute(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemCopy r0;
        org.apache.xalan.transformer.TransformerImpl r1;
        org.apache.xpath.XPathContext r2;
        java.lang.Throwable r3, $r12;
        org.xml.sax.SAXException r4, $r11;
        int i0;
        org.apache.xml.dtm.DTM r5;
        short s1;
        org.apache.xml.serializer.SerializationHandler r6, $r10;
        java.lang.String r7, r8, $r9;
        javax.xml.transform.TransformerException $r13;

        r0 := @this: org.apache.xalan.templates.ElemCopy;

        r1 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        r2 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

     label01:
        i0 = virtualinvoke r2.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        virtualinvoke r2.<org.apache.xpath.XPathContext: void pushCurrentNode(int)>(i0);

        r5 = virtualinvoke r2.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>(i0);

        s1 = interfaceinvoke r5.<org.apache.xml.dtm.DTM: short getNodeType(int)>(i0);

     label02:
        if 9 == s1 goto label07;

        if 11 == s1 goto label07;

     label03:
        r6 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler getSerializationHandler()>();

        staticinvoke <org.apache.xalan.transformer.ClonerToResultTree: void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)>(i0, s1, r5, r6, 0);

     label04:
        if 1 != s1 goto label06;

     label05:
        specialinvoke r0.<org.apache.xalan.templates.ElemUse: void execute(org.apache.xalan.transformer.TransformerImpl)>(r1);

        staticinvoke <org.apache.xalan.serialize.SerializerUtils: void processNSDecls(org.apache.xml.serializer.SerializationHandler,int,int,org.apache.xml.dtm.DTM)>(r6, i0, s1, r5);

        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)>(r0, 1);

        r7 = interfaceinvoke r5.<org.apache.xml.dtm.DTM: java.lang.String getNamespaceURI(int)>(i0);

        r8 = interfaceinvoke r5.<org.apache.xml.dtm.DTM: java.lang.String getLocalName(int)>(i0);

        $r10 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler getResultTreeHandler()>();

        $r9 = interfaceinvoke r5.<org.apache.xml.dtm.DTM: java.lang.String getNodeName(int)>(i0);

        interfaceinvoke $r10.<org.apache.xml.serializer.SerializationHandler: void endElement(java.lang.String,java.lang.String,java.lang.String)>(r7, r8, $r9);

     label06:
        virtualinvoke r2.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        return;

     label07:
        specialinvoke r0.<org.apache.xalan.templates.ElemUse: void execute(org.apache.xalan.transformer.TransformerImpl)>(r1);

        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)>(r0, 1);

     label08:
        goto label06;

     label09:
        $r11 := @caughtexception;

        r4 = $r11;

     label10:
        $r13 = new javax.xml.transform.TransformerException;

        specialinvoke $r13.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r4);

        throw $r13;

     label11:
        $r12 := @caughtexception;

        r3 = $r12;

        virtualinvoke r2.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        throw r3;

        catch org.xml.sax.SAXException from label01 to label02 with label09;
        catch java.lang.Throwable from label01 to label02 with label11;
        catch org.xml.sax.SAXException from label03 to label04 with label09;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch org.xml.sax.SAXException from label05 to label06 with label09;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch org.xml.sax.SAXException from label07 to label08 with label09;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label10 to label11 with label11;
    }

    public java.lang.String getNodeName()
    {
        org.apache.xalan.templates.ElemCopy r0;

        r0 := @this: org.apache.xalan.templates.ElemCopy;

        return "copy";
    }

    public int getXSLToken()
    {
        org.apache.xalan.templates.ElemCopy r0;

        r0 := @this: org.apache.xalan.templates.ElemCopy;

        return 9;
    }

    public static void <clinit>()
    {
        <org.apache.xalan.templates.ElemCopy: long serialVersionUID> = 5478580783896941384L;

        return;
    }
}
