class com.android.internal.policy.IFaceLockInterface$Stub$Proxy extends java.lang.Object implements com.android.internal.policy.IFaceLockInterface
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        com.android.internal.policy.IFaceLockInterface$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: com.android.internal.policy.IFaceLockInterface$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.policy.IFaceLockInterface$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        com.android.internal.policy.IFaceLockInterface$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: com.android.internal.policy.IFaceLockInterface$Stub$Proxy;

        $r1 = r0.<com.android.internal.policy.IFaceLockInterface$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        com.android.internal.policy.IFaceLockInterface$Stub$Proxy r0;

        r0 := @this: com.android.internal.policy.IFaceLockInterface$Stub$Proxy;

        return "com.android.internal.policy.IFaceLockInterface";
    }

    public void registerCallback(com.android.internal.policy.IFaceLockCallback) throws android.os.RemoteException
    {
        com.android.internal.policy.IFaceLockInterface$Stub$Proxy r0;
        com.android.internal.policy.IFaceLockCallback r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r7;
        android.os.IBinder r5, $r6;

        r0 := @this: com.android.internal.policy.IFaceLockInterface$Stub$Proxy;

        r1 := @parameter0: com.android.internal.policy.IFaceLockCallback;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.policy.IFaceLockInterface");

     label2:
        if r1 == null goto label6;

     label3:
        r5 = interfaceinvoke r1.<com.android.internal.policy.IFaceLockCallback: android.os.IBinder asBinder()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r5);

        $r6 = r0.<com.android.internal.policy.IFaceLockInterface$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label5:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label6:
        r5 = null;

        goto label4;

     label7:
        $r7 := @caughtexception;

        r4 = $r7;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public void startUi(android.os.IBinder, int, int, int, int, boolean) throws android.os.RemoteException
    {
        com.android.internal.policy.IFaceLockInterface$Stub$Proxy r0;
        android.os.IBinder r1, $r5;
        int i0, i1, i2, i3;
        boolean z0;
        byte b4;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;

        r0 := @this: com.android.internal.policy.IFaceLockInterface$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        z0 := @parameter5: boolean;

        b4 = 1;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.policy.IFaceLockInterface");

        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i2);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i3);

     label2:
        if z0 == 0 goto label5;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b4);

        $r5 = r0.<com.android.internal.policy.IFaceLockInterface$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        b4 = 0;

        goto label3;

     label6:
        $r6 := @caughtexception;

        r4 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
    }

    public void stopUi() throws android.os.RemoteException
    {
        com.android.internal.policy.IFaceLockInterface$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.policy.IFaceLockInterface$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.policy.IFaceLockInterface");

        $r4 = r0.<com.android.internal.policy.IFaceLockInterface$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void unregisterCallback(com.android.internal.policy.IFaceLockCallback) throws android.os.RemoteException
    {
        com.android.internal.policy.IFaceLockInterface$Stub$Proxy r0;
        com.android.internal.policy.IFaceLockCallback r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r7;
        android.os.IBinder r5, $r6;

        r0 := @this: com.android.internal.policy.IFaceLockInterface$Stub$Proxy;

        r1 := @parameter0: com.android.internal.policy.IFaceLockCallback;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.policy.IFaceLockInterface");

     label2:
        if r1 == null goto label6;

     label3:
        r5 = interfaceinvoke r1.<com.android.internal.policy.IFaceLockCallback: android.os.IBinder asBinder()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r5);

        $r6 = r0.<com.android.internal.policy.IFaceLockInterface$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label5:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label6:
        r5 = null;

        goto label4;

     label7:
        $r7 := @caughtexception;

        r4 = $r7;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }
}
