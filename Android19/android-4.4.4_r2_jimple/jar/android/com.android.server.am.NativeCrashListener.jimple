final class com.android.server.am.NativeCrashListener extends java.lang.Thread
{
    static final boolean DEBUG;
    static final java.lang.String DEBUGGERD_SOCKET_PATH;
    static final boolean MORE_DEBUG;
    static final long SOCKET_TIMEOUT_MILLIS;
    static final java.lang.String TAG;
    final com.android.server.am.ActivityManagerService mAm;

    void <init>()
    {
        com.android.server.am.NativeCrashListener r0;
        com.android.server.am.ActivityManagerService $r1;

        r0 := @this: com.android.server.am.NativeCrashListener;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        $r1 = staticinvoke <com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService self()>();

        r0.<com.android.server.am.NativeCrashListener: com.android.server.am.ActivityManagerService mAm> = $r1;

        return;
    }

    static int readExactly(java.io.FileDescriptor, byte[], int, int) throws libcore.io.ErrnoException
    {
        java.io.FileDescriptor r0;
        byte[] r1;
        int i0, i1, i2, i3, $i4;
        libcore.io.Os $r2;

        r0 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 = 0;

     label1:
        if i1 <= 0 goto label2;

        $r2 = <libcore.io.Libcore: libcore.io.Os os>;

        $i4 = i0 + i2;

        i3 = interfaceinvoke $r2.<libcore.io.Os: int read(java.io.FileDescriptor,byte[],int,int)>(r0, r1, $i4, i1);

        if i3 > 0 goto label3;

        i2 = -1;

     label2:
        return i2;

     label3:
        i1 = i1 - i3;

        i2 = i2 + i3;

        goto label1;
    }

    static int unpackInt(byte[], int)
    {
        byte[] r0;
        int i0, $i5, $i7, $i9, $i11, $i12, $i13, $i14, $i16, $i17;
        short s1, s2, s3, $s15;
        byte $b4, $b6, $b8, $b10;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $b4 = r0[i0];

        s1 = 255 & $b4;

        $i5 = i0 + 1;

        $b6 = r0[$i5];

        s2 = 255 & $b6;

        $i7 = i0 + 2;

        $b8 = r0[$i7];

        s3 = 255 & $b8;

        $i9 = i0 + 3;

        $b10 = r0[$i9];

        $s15 = 255 & $b10;

        $i12 = s1 << 24;

        $i11 = s2 << 16;

        $i14 = $i12 | $i11;

        $i13 = s3 << 8;

        $i16 = $i14 | $i13;

        $i17 = $s15 | $i16;

        return $i17;
    }

    void consumeNativeCrashData(java.io.FileDescriptor)
    {
        com.android.server.am.NativeCrashListener r0;
        java.io.FileDescriptor r1;
        byte[] r2, $r25;
        java.io.ByteArrayOutputStream r3, $r11;
        java.lang.Exception r4, $r28;
        libcore.io.StructTimeval r5;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i10, $i11, $i13;
        android.util.SparseArray r6, $r15;
        java.lang.Throwable r7, r10, $r26, $r27;
        com.android.server.am.ProcessRecord r8;
        com.android.server.am.ActivityManagerService r9, $r14, $r16;
        libcore.io.Os $r12, $r13, $r22;
        java.lang.StringBuilder $r17, $r20, $r21;
        java.lang.Object $r18;
        java.lang.String $r19, $r24;
        boolean $z0;
        com.android.server.am.NativeCrashListener$NativeCrashReporter $r23;
        byte $b12;

        r0 := @this: com.android.server.am.NativeCrashListener;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 = newarray (byte)[4096];

        $r11 = new java.io.ByteArrayOutputStream;

        specialinvoke $r11.<java.io.ByteArrayOutputStream: void <init>(int)>(4096);

        r3 = $r11;

     label01:
        r5 = staticinvoke <libcore.io.StructTimeval: libcore.io.StructTimeval fromMillis(long)>(2000L);

        $r12 = <libcore.io.Libcore: libcore.io.Os os>;

        $i3 = <libcore.io.OsConstants: int SOL_SOCKET>;

        $i4 = <libcore.io.OsConstants: int SO_RCVTIMEO>;

        interfaceinvoke $r12.<libcore.io.Os: void setsockoptTimeval(java.io.FileDescriptor,int,int,libcore.io.StructTimeval)>(r1, $i3, $i4, r5);

        $r13 = <libcore.io.Libcore: libcore.io.Os os>;

        $i6 = <libcore.io.OsConstants: int SOL_SOCKET>;

        $i5 = <libcore.io.OsConstants: int SO_SNDTIMEO>;

        interfaceinvoke $r13.<libcore.io.Os: void setsockoptTimeval(java.io.FileDescriptor,int,int,libcore.io.StructTimeval)>(r1, $i6, $i5, r5);

        $i7 = staticinvoke <com.android.server.am.NativeCrashListener: int readExactly(java.io.FileDescriptor,byte[],int,int)>(r1, r2, 0, 8);

        if $i7 == 8 goto label03;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("NativeCrashListener", "Unable to read from debuggerd");

     label02:
        return;

     label03:
        i0 = staticinvoke <com.android.server.am.NativeCrashListener: int unpackInt(byte[],int)>(r2, 0);

        i1 = staticinvoke <com.android.server.am.NativeCrashListener: int unpackInt(byte[],int)>(r2, 4);

     label04:
        if i0 <= 0 goto label27;

     label05:
        $r14 = r0.<com.android.server.am.NativeCrashListener: com.android.server.am.ActivityManagerService mAm>;

        r6 = $r14.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        entermonitor r6;

     label06:
        $r16 = r0.<com.android.server.am.NativeCrashListener: com.android.server.am.ActivityManagerService mAm>;

        $r15 = $r16.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $r18 = virtualinvoke $r15.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r8 = (com.android.server.am.ProcessRecord) $r18;

        exitmonitor r6;

     label07:
        if r8 == null goto label25;

     label08:
        $z0 = r8.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z0 != 0 goto label28;

     label09:
        $r22 = <libcore.io.Libcore: libcore.io.Os os>;

        $i10 = lengthof r2;

        i2 = interfaceinvoke $r22.<libcore.io.Os: int read(java.io.FileDescriptor,byte[],int,int)>(r1, r2, 0, $i10);

     label10:
        if i2 <= 0 goto label21;

     label11:
        $i13 = i2 - 1;

        $b12 = r2[$i13];

        if $b12 != 0 goto label20;

        $i11 = i2 - 1;

        virtualinvoke r3.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r2, 0, $i11);

     label12:
        r9 = r0.<com.android.server.am.NativeCrashListener: com.android.server.am.ActivityManagerService mAm>;

        entermonitor r9;

     label13:
        r8.<com.android.server.am.ProcessRecord: boolean crashing> = 1;

        r8.<com.android.server.am.ProcessRecord: boolean forceCrashReport> = 1;

        exitmonitor r9;

     label14:
        $r23 = new com.android.server.am.NativeCrashListener$NativeCrashReporter;

        $r24 = new java.lang.String;

        $r25 = virtualinvoke r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r24.<java.lang.String: void <init>(byte[],java.lang.String)>($r25, "UTF-8");

        specialinvoke $r23.<com.android.server.am.NativeCrashListener$NativeCrashReporter: void <init>(com.android.server.am.NativeCrashListener,com.android.server.am.ProcessRecord,int,java.lang.String)>(r0, r8, i1, $r24);

        virtualinvoke $r23.<com.android.server.am.NativeCrashListener$NativeCrashReporter: void start()>();

     label15:
        return;

     label16:
        $r28 := @caughtexception;

        r4 = $r28;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NativeCrashListener", "Exception dealing with report", r4);

        return;

     label17:
        $r26 := @caughtexception;

        r7 = $r26;

     label18:
        exitmonitor r6;

     label19:
        throw r7;

     label20:
        virtualinvoke r3.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r2, 0, i2);

     label21:
        if i2 > 0 goto label09;

        goto label12;

     label22:
        $r27 := @caughtexception;

        r10 = $r27;

     label23:
        exitmonitor r9;

     label24:
        throw r10;

     label25:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t find ProcessRecord for pid ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r19 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("NativeCrashListener", $r19);

     label26:
        return;

     label27:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("NativeCrashListener", "Bogus pid!");

     label28:
        return;

        catch java.lang.Exception from label01 to label02 with label16;
        catch java.lang.Exception from label03 to label04 with label16;
        catch java.lang.Exception from label05 to label06 with label16;
        catch java.lang.Throwable from label06 to label07 with label17;
        catch java.lang.Exception from label08 to label09 with label16;
        catch java.lang.Exception from label09 to label10 with label16;
        catch java.lang.Exception from label11 to label12 with label16;
        catch java.lang.Exception from label12 to label13 with label16;
        catch java.lang.Throwable from label13 to label14 with label22;
        catch java.lang.Exception from label14 to label15 with label16;
        catch java.lang.Throwable from label18 to label19 with label17;
        catch java.lang.Exception from label19 to label20 with label16;
        catch java.lang.Exception from label20 to label21 with label16;
        catch java.lang.Throwable from label23 to label24 with label22;
        catch java.lang.Exception from label24 to label25 with label16;
        catch java.lang.Exception from label25 to label26 with label16;
        catch java.lang.Exception from label27 to label28 with label16;
    }

    public void run()
    {
        com.android.server.am.NativeCrashListener r0;
        byte[] r1;
        java.io.File r2, $r16;
        java.lang.Exception r3, r11, $r28, $r29, $r30, $r31, $r36;
        java.io.FileDescriptor r4, r7;
        java.net.InetUnixAddress r5, $r19;
        java.net.InetSocketAddress r6, $r20;
        java.lang.Throwable r8, $r32;
        boolean $z0;
        int $i0, $i1, $i2, $i4, $i5;
        libcore.io.Os $r17, $r18, $r21, $r22, $r23, $r24, $r26, $r27, $r33, $r34, $r37;
        libcore.io.StructUcred $r25;
        libcore.io.ErrnoException $r35, $r38, $r39;

        r0 := @this: com.android.server.am.NativeCrashListener;

        r1 = newarray (byte)[1];

        $r16 = new java.io.File;

        specialinvoke $r16.<java.io.File: void <init>(java.lang.String)>("/data/system/ndebugsocket");

        r2 = $r16;

        $z0 = virtualinvoke r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label01;

        virtualinvoke r2.<java.io.File: boolean delete()>();

     label01:
        $r17 = <libcore.io.Libcore: libcore.io.Os os>;

        $i0 = <libcore.io.OsConstants: int AF_UNIX>;

        $i1 = <libcore.io.OsConstants: int SOCK_STREAM>;

        r4 = interfaceinvoke $r17.<libcore.io.Os: java.io.FileDescriptor socket(int,int,int)>($i0, $i1, 0);

        $r19 = new java.net.InetUnixAddress;

        specialinvoke $r19.<java.net.InetUnixAddress: void <init>(java.lang.String)>("/data/system/ndebugsocket");

        r5 = $r19;

        $r18 = <libcore.io.Libcore: libcore.io.Os os>;

        interfaceinvoke $r18.<libcore.io.Os: void bind(java.io.FileDescriptor,java.net.InetAddress,int)>(r4, r5, 0);

        $r21 = <libcore.io.Libcore: libcore.io.Os os>;

        interfaceinvoke $r21.<libcore.io.Os: void listen(java.io.FileDescriptor,int)>(r4, 1);

     label02:
        $r20 = new java.net.InetSocketAddress;

        specialinvoke $r20.<java.net.InetSocketAddress: void <init>()>();

        r6 = $r20;

     label03:
        r7 = null;

     label04:
        $r22 = <libcore.io.Libcore: libcore.io.Os os>;

        r7 = interfaceinvoke $r22.<libcore.io.Os: java.io.FileDescriptor accept(java.io.FileDescriptor,java.net.InetSocketAddress)>(r4, r6);

     label05:
        if r7 == null goto label07;

     label06:
        $r26 = <libcore.io.Libcore: libcore.io.Os os>;

        $i5 = <libcore.io.OsConstants: int SOL_SOCKET>;

        $i2 = <libcore.io.OsConstants: int SO_PEERCRED>;

        $r25 = interfaceinvoke $r26.<libcore.io.Os: libcore.io.StructUcred getsockoptUcred(java.io.FileDescriptor,int,int)>(r7, $i5, $i2);

        $i4 = $r25.<libcore.io.StructUcred: int uid>;

        if $i4 != 0 goto label07;

        virtualinvoke r0.<com.android.server.am.NativeCrashListener: void consumeNativeCrashData(java.io.FileDescriptor)>(r7);

     label07:
        if r7 == null goto label02;

     label08:
        $r24 = <libcore.io.Libcore: libcore.io.Os os>;

        interfaceinvoke $r24.<libcore.io.Os: int write(java.io.FileDescriptor,byte[],int,int)>(r7, r1, 0, 1);

     label09:
        $r23 = <libcore.io.Libcore: libcore.io.Os os>;

        interfaceinvoke $r23.<libcore.io.Os: void close(java.io.FileDescriptor)>(r7);

     label10:
        goto label02;

     label11:
        $r39 := @caughtexception;

        goto label02;

     label12:
        $r30 := @caughtexception;

        r11 = $r30;

     label13:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("NativeCrashListener", "Error handling connection", r11);

     label14:
        if r7 == null goto label02;

     label15:
        $r34 = <libcore.io.Libcore: libcore.io.Os os>;

        interfaceinvoke $r34.<libcore.io.Os: int write(java.io.FileDescriptor,byte[],int,int)>(r7, r1, 0, 1);

     label16:
        $r33 = <libcore.io.Libcore: libcore.io.Os os>;

        interfaceinvoke $r33.<libcore.io.Os: void close(java.io.FileDescriptor)>(r7);

     label17:
        goto label02;

     label18:
        $r38 := @caughtexception;

        goto label02;

     label19:
        $r32 := @caughtexception;

        r8 = $r32;

        if r7 == null goto label22;

     label20:
        $r37 = <libcore.io.Libcore: libcore.io.Os os>;

        interfaceinvoke $r37.<libcore.io.Os: int write(java.io.FileDescriptor,byte[],int,int)>(r7, r1, 0, 1);

     label21:
        $r27 = <libcore.io.Libcore: libcore.io.Os os>;

        interfaceinvoke $r27.<libcore.io.Os: void close(java.io.FileDescriptor)>(r7);

     label22:
        throw r8;

     label23:
        $r31 := @caughtexception;

        r3 = $r31;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NativeCrashListener", "Unable to init native debug socket!", r3);

        return;

     label24:
        $r35 := @caughtexception;

        goto label22;

     label25:
        $r29 := @caughtexception;

        goto label21;

     label26:
        $r36 := @caughtexception;

        goto label16;

     label27:
        $r28 := @caughtexception;

        goto label09;

        catch java.lang.Exception from label01 to label02 with label23;
        catch java.lang.Exception from label02 to label03 with label23;
        catch java.lang.Exception from label04 to label05 with label12;
        catch java.lang.Throwable from label04 to label05 with label19;
        catch java.lang.Exception from label06 to label07 with label12;
        catch java.lang.Throwable from label06 to label07 with label19;
        catch java.lang.Exception from label08 to label09 with label27;
        catch libcore.io.ErrnoException from label09 to label10 with label11;
        catch java.lang.Exception from label09 to label10 with label23;
        catch java.lang.Throwable from label13 to label14 with label19;
        catch java.lang.Exception from label15 to label16 with label26;
        catch libcore.io.ErrnoException from label16 to label17 with label18;
        catch java.lang.Exception from label16 to label17 with label23;
        catch java.lang.Exception from label20 to label21 with label25;
        catch libcore.io.ErrnoException from label21 to label22 with label24;
        catch java.lang.Exception from label21 to label22 with label23;
        catch java.lang.Exception from label22 to label23 with label23;
    }

    public static void <clinit>()
    {
        <com.android.server.am.NativeCrashListener: java.lang.String TAG> = "NativeCrashListener";

        <com.android.server.am.NativeCrashListener: long SOCKET_TIMEOUT_MILLIS> = 2000L;

        <com.android.server.am.NativeCrashListener: boolean MORE_DEBUG> = 0;

        <com.android.server.am.NativeCrashListener: java.lang.String DEBUGGERD_SOCKET_PATH> = "/data/system/ndebugsocket";

        <com.android.server.am.NativeCrashListener: boolean DEBUG> = 0;

        return;
    }
}
