public class java.util.Random extends java.lang.Object implements java.io.Serializable
{
    private static final long multiplier;
    private static final long serialVersionUID;
    private boolean haveNextNextGaussian;
    private double nextNextGaussian;
    private long seed;

    public void <init>()
    {
        java.util.Random r0;
        long $l0, $l2, $l3;
        int $i1;

        r0 := @this: java.util.Random;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $i1 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $l2 = (long) $i1;

        $l3 = $l0 + $l2;

        virtualinvoke r0.<java.util.Random: void setSeed(long)>($l3);

        return;
    }

    public void <init>(long)
    {
        java.util.Random r0;
        long l0;

        r0 := @this: java.util.Random;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<java.util.Random: void setSeed(long)>(l0);

        return;
    }

    protected int next(int)
    {
        java.util.Random r0;
        int i0, i2, $i7;
        java.lang.Throwable r1, $r2;
        long l1, $l3, $l4, $l5, $l6, $l8;

        r0 := @this: java.util.Random;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        $l3 = r0.<java.util.Random: long seed>;

        $l4 = 25214903917L * $l3;

        $l5 = 11L + $l4;

        $l6 = 281474976710655L & $l5;

        r0.<java.util.Random: long seed> = $l6;

        l1 = r0.<java.util.Random: long seed>;

     label2:
        $i7 = 48 - i0;

        $l8 = l1 >>> $i7;

        i2 = (int) $l8;

        exitmonitor r0;

        return i2;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean nextBoolean()
    {
        java.util.Random r0;
        int $i0;

        r0 := @this: java.util.Random;

        $i0 = virtualinvoke r0.<java.util.Random: int next(int)>(1);

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void nextBytes(byte[])
    {
        java.util.Random r0;
        byte[] r1;
        int i0, i1, i2, i3, $i4;
        byte $b5;

        r0 := @this: java.util.Random;

        r1 := @parameter0: byte[];

        i0 = 0;

        i1 = 0;

        i2 = 0;

     label1:
        $i4 = lengthof r1;

        if i1 >= $i4 goto label4;

        if i2 != 0 goto label3;

        i0 = virtualinvoke r0.<java.util.Random: int nextInt()>();

        i2 = 3;

     label2:
        i3 = i1 + 1;

        $b5 = (byte) i0;

        r1[i1] = $b5;

        i0 = i0 >> 8;

        i1 = i3;

        goto label1;

     label3:
        i2 = i2 + -1;

        goto label2;

     label4:
        return;
    }

    public double nextDouble()
    {
        java.util.Random r0;
        int $i0, $i3;
        long $l1, $l2, $l4, $l5;
        double $d0, $d1;

        r0 := @this: java.util.Random;

        $i0 = virtualinvoke r0.<java.util.Random: int next(int)>(26);

        $l1 = (long) $i0;

        $l2 = $l1 << 27;

        $i3 = virtualinvoke r0.<java.util.Random: int next(int)>(27);

        $l4 = (long) $i3;

        $l5 = $l2 + $l4;

        $d0 = (double) $l5;

        $d1 = $d0 / 9.007199254740992E15;

        return $d1;
    }

    public float nextFloat()
    {
        java.util.Random r0;
        int $i0;
        float $f0, $f1;

        r0 := @this: java.util.Random;

        $i0 = virtualinvoke r0.<java.util.Random: int next(int)>(24);

        $f0 = (float) $i0;

        $f1 = $f0 / 1.6777216E7F;

        return $f1;
    }

    public double nextGaussian()
    {
        java.util.Random r0;
        java.lang.Throwable r1, $r2;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14;
        boolean $z0;
        byte $b0, $b1;

        r0 := @this: java.util.Random;

        entermonitor r0;

     label1:
        $z0 = r0.<java.util.Random: boolean haveNextNextGaussian>;

        if $z0 == 0 goto label3;

        r0.<java.util.Random: boolean haveNextNextGaussian> = 0;

        d4 = r0.<java.util.Random: double nextNextGaussian>;

     label2:
        exitmonitor r0;

        return d4;

     label3:
        $d5 = virtualinvoke r0.<java.util.Random: double nextDouble()>();

        $d6 = 2.0 * $d5;

        d0 = $d6 - 1.0;

        $d8 = virtualinvoke r0.<java.util.Random: double nextDouble()>();

        $d7 = 2.0 * $d8;

        d1 = $d7 - 1.0;

     label4:
        $d9 = d0 * d0;

        $d10 = d1 * d1;

        d2 = $d9 + $d10;

        $b1 = d2 cmpl 1.0;

        if $b1 >= 0 goto label3;

        $b0 = d2 cmpl 0.0;

        if $b0 == 0 goto label3;

     label5:
        $d11 = staticinvoke <java.lang.StrictMath: double log(double)>(d2);

        $d13 = -2.0 * $d11;

        $d12 = $d13 / d2;

        d3 = staticinvoke <java.lang.StrictMath: double sqrt(double)>($d12);

        $d14 = d1 * d3;

        r0.<java.util.Random: double nextNextGaussian> = $d14;

        r0.<java.util.Random: boolean haveNextNextGaussian> = 1;

     label6:
        d4 = d0 * d3;

        goto label2;

     label7:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public int nextInt()
    {
        java.util.Random r0;
        int $i0;

        r0 := @this: java.util.Random;

        $i0 = virtualinvoke r0.<java.util.Random: int next(int)>(32);

        return $i0;
    }

    public int nextInt(int)
    {
        java.util.Random r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i9, $i13;
        long $l8, $l10, $l11, $l12;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.IllegalArgumentException $r2;
        java.lang.String $r5;

        r0 := @this: java.util.Random;

        i0 := @parameter0: int;

        if i0 > 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("n <= 0: ");

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r2;

     label1:
        $i3 = neg i0;

        $i4 = i0 & $i3;

        if $i4 != i0 goto label2;

        $l8 = (long) i0;

        $i9 = virtualinvoke r0.<java.util.Random: int next(int)>(31);

        $l10 = (long) $i9;

        $l11 = $l8 * $l10;

        $l12 = $l11 >> 31;

        $i13 = (int) $l12;

        return $i13;

     label2:
        i1 = virtualinvoke r0.<java.util.Random: int next(int)>(31);

        i2 = i1 % i0;

        $i6 = i1 - i2;

        $i5 = i0 - 1;

        $i7 = $i6 + $i5;

        if $i7 < 0 goto label2;

        return i2;
    }

    public long nextLong()
    {
        java.util.Random r0;
        int $i0, $i3;
        long $l1, $l2, $l4, $l5;

        r0 := @this: java.util.Random;

        $i0 = virtualinvoke r0.<java.util.Random: int next(int)>(32);

        $l1 = (long) $i0;

        $l2 = $l1 << 32;

        $i3 = virtualinvoke r0.<java.util.Random: int next(int)>(32);

        $l4 = (long) $i3;

        $l5 = $l2 + $l4;

        return $l5;
    }

    public void setSeed(long)
    {
        java.util.Random r0;
        long l0, l1, $l2;
        java.lang.Throwable r1, $r2;

        r0 := @this: java.util.Random;

        l0 := @parameter0: long;

        entermonitor r0;

        $l2 = 25214903917L ^ l0;

        l1 = 281474976710655L & $l2;

     label1:
        r0.<java.util.Random: long seed> = l1;

        r0.<java.util.Random: boolean haveNextNextGaussian> = 0;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <java.util.Random: long serialVersionUID> = 3905348978240129619L;

        <java.util.Random: long multiplier> = 25214903917L;

        return;
    }
}
