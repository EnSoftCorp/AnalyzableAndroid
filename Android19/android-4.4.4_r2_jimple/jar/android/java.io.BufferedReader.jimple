public class java.io.BufferedReader extends java.io.Reader
{
    private char[] buf;
    private int end;
    private java.io.Reader in;
    private boolean lastWasCR;
    private int mark;
    private int markLimit;
    private boolean markedLastWasCR;
    private int pos;

    public void <init>(java.io.Reader)
    {
        java.io.BufferedReader r0;
        java.io.Reader r1;

        r0 := @this: java.io.BufferedReader;

        r1 := @parameter0: java.io.Reader;

        specialinvoke r0.<java.io.BufferedReader: void <init>(java.io.Reader,int)>(r1, 8192);

        return;
    }

    public void <init>(java.io.Reader, int)
    {
        java.io.BufferedReader r0;
        java.io.Reader r1;
        int i0;
        char[] $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: java.io.BufferedReader;

        r1 := @parameter0: java.io.Reader;

        i0 := @parameter1: int;

        specialinvoke r0.<java.io.Reader: void <init>(java.lang.Object)>(r1);

        r0.<java.io.BufferedReader: int mark> = -1;

        r0.<java.io.BufferedReader: int markLimit> = -1;

        if i0 > 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("size <= 0");

        throw $r3;

     label1:
        r0.<java.io.BufferedReader: java.io.Reader in> = r1;

        $r2 = newarray (char)[i0];

        r0.<java.io.BufferedReader: char[] buf> = $r2;

        return;
    }

    private void checkNotClosed() throws java.io.IOException
    {
        java.io.BufferedReader r0;
        boolean $z0;
        java.io.IOException $r1;

        r0 := @this: java.io.BufferedReader;

        $z0 = specialinvoke r0.<java.io.BufferedReader: boolean isClosed()>();

        if $z0 == 0 goto label1;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("BufferedReader is closed");

        throw $r1;

     label1:
        return;
    }

    private int fillBuf() throws java.io.IOException
    {
        java.io.BufferedReader r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31;
        char[] r1, $r2, $r3, $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        java.io.Reader $r4, $r6;

        r0 := @this: java.io.BufferedReader;

        $i3 = r0.<java.io.BufferedReader: int mark>;

        if $i3 == -1 goto label1;

        $i6 = r0.<java.io.BufferedReader: int pos>;

        $i5 = r0.<java.io.BufferedReader: int mark>;

        $i8 = $i6 - $i5;

        $i7 = r0.<java.io.BufferedReader: int markLimit>;

        if $i8 < $i7 goto label4;

     label1:
        $r4 = r0.<java.io.BufferedReader: java.io.Reader in>;

        $r3 = r0.<java.io.BufferedReader: char[] buf>;

        $r2 = r0.<java.io.BufferedReader: char[] buf>;

        $i4 = lengthof $r2;

        i0 = virtualinvoke $r4.<java.io.Reader: int read(char[],int,int)>($r3, 0, $i4);

        if i0 <= 0 goto label2;

        r0.<java.io.BufferedReader: int mark> = -1;

        r0.<java.io.BufferedReader: int pos> = 0;

        r0.<java.io.BufferedReader: int end> = i0;

     label2:
        i1 = i0;

     label3:
        return i1;

     label4:
        $i9 = r0.<java.io.BufferedReader: int mark>;

        if $i9 != 0 goto label7;

        $i27 = r0.<java.io.BufferedReader: int markLimit>;

        $r12 = r0.<java.io.BufferedReader: char[] buf>;

        $i28 = lengthof $r12;

        if $i27 <= $i28 goto label7;

        $r11 = r0.<java.io.BufferedReader: char[] buf>;

        $i30 = lengthof $r11;

        i2 = 2 * $i30;

        $i31 = r0.<java.io.BufferedReader: int markLimit>;

        if i2 <= $i31 goto label5;

        i2 = r0.<java.io.BufferedReader: int markLimit>;

     label5:
        r1 = newarray (char)[i2];

        $r14 = r0.<java.io.BufferedReader: char[] buf>;

        $r13 = r0.<java.io.BufferedReader: char[] buf>;

        $i29 = lengthof $r13;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r14, 0, r1, 0, $i29);

        r0.<java.io.BufferedReader: char[] buf> = r1;

     label6:
        $r6 = r0.<java.io.BufferedReader: java.io.Reader in>;

        $r7 = r0.<java.io.BufferedReader: char[] buf>;

        $i13 = r0.<java.io.BufferedReader: int pos>;

        $r5 = r0.<java.io.BufferedReader: char[] buf>;

        $i11 = lengthof $r5;

        $i12 = r0.<java.io.BufferedReader: int pos>;

        $i14 = $i11 - $i12;

        i1 = virtualinvoke $r6.<java.io.Reader: int read(char[],int,int)>($r7, $i13, $i14);

        if i1 == -1 goto label3;

        $i15 = r0.<java.io.BufferedReader: int end>;

        $i16 = i1 + $i15;

        r0.<java.io.BufferedReader: int end> = $i16;

        return i1;

     label7:
        $i10 = r0.<java.io.BufferedReader: int mark>;

        if $i10 <= 0 goto label6;

        $r10 = r0.<java.io.BufferedReader: char[] buf>;

        $i22 = r0.<java.io.BufferedReader: int mark>;

        $r9 = r0.<java.io.BufferedReader: char[] buf>;

        $r8 = r0.<java.io.BufferedReader: char[] buf>;

        $i17 = lengthof $r8;

        $i18 = r0.<java.io.BufferedReader: int mark>;

        $i19 = $i17 - $i18;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, $i22, $r9, 0, $i19);

        $i21 = r0.<java.io.BufferedReader: int pos>;

        $i20 = r0.<java.io.BufferedReader: int mark>;

        $i25 = $i21 - $i20;

        r0.<java.io.BufferedReader: int pos> = $i25;

        $i23 = r0.<java.io.BufferedReader: int end>;

        $i26 = r0.<java.io.BufferedReader: int mark>;

        $i24 = $i23 - $i26;

        r0.<java.io.BufferedReader: int end> = $i24;

        r0.<java.io.BufferedReader: int mark> = 0;

        goto label6;
    }

    private boolean isClosed()
    {
        java.io.BufferedReader r0;
        char[] $r1;

        r0 := @this: java.io.BufferedReader;

        $r1 = r0.<java.io.BufferedReader: char[] buf>;

        if $r1 != null goto label1;

        return 1;

     label1:
        return 0;
    }

    private void maybeSwallowLF() throws java.io.IOException
    {
        java.io.BufferedReader r0;
        boolean $z0;

        r0 := @this: java.io.BufferedReader;

        $z0 = r0.<java.io.BufferedReader: boolean lastWasCR>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<java.io.BufferedReader: void chompNewline()>();

        r0.<java.io.BufferedReader: boolean lastWasCR> = 0;

     label1:
        return;
    }

    private int readChar() throws java.io.IOException
    {
        java.io.BufferedReader r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        char[] r1;

        r0 := @this: java.io.BufferedReader;

        i0 = -1;

        $i3 = r0.<java.io.BufferedReader: int pos>;

        $i2 = r0.<java.io.BufferedReader: int end>;

        if $i3 < $i2 goto label1;

        $i5 = specialinvoke r0.<java.io.BufferedReader: int fillBuf()>();

        if $i5 == i0 goto label2;

     label1:
        r1 = r0.<java.io.BufferedReader: char[] buf>;

        i1 = r0.<java.io.BufferedReader: int pos>;

        $i4 = i1 + 1;

        r0.<java.io.BufferedReader: int pos> = $i4;

        i0 = r1[i1];

     label2:
        return i0;
    }

    final void chompNewline() throws java.io.IOException
    {
        java.io.BufferedReader r0;
        int $i0, $i1, $i2, $i4, $i5, $i6;
        char[] $r1;
        char $c3;

        r0 := @this: java.io.BufferedReader;

        $i1 = r0.<java.io.BufferedReader: int pos>;

        $i0 = r0.<java.io.BufferedReader: int end>;

        if $i1 != $i0 goto label1;

        $i6 = specialinvoke r0.<java.io.BufferedReader: int fillBuf()>();

        if $i6 == -1 goto label2;

     label1:
        $r1 = r0.<java.io.BufferedReader: char[] buf>;

        $i2 = r0.<java.io.BufferedReader: int pos>;

        $c3 = $r1[$i2];

        if $c3 != 10 goto label2;

        $i4 = r0.<java.io.BufferedReader: int pos>;

        $i5 = 1 + $i4;

        r0.<java.io.BufferedReader: int pos> = $i5;

     label2:
        return;
    }

    public void close() throws java.io.IOException
    {
        java.io.BufferedReader r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r4;
        boolean $z0;
        java.io.Reader $r3;

        r0 := @this: java.io.BufferedReader;

        r1 = r0.<java.io.BufferedReader: java.lang.Object lock>;

        entermonitor r1;

     label1:
        $z0 = specialinvoke r0.<java.io.BufferedReader: boolean isClosed()>();

        if $z0 != 0 goto label2;

        $r3 = r0.<java.io.BufferedReader: java.io.Reader in>;

        virtualinvoke $r3.<java.io.Reader: void close()>();

        r0.<java.io.BufferedReader: char[] buf> = null;

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r4 := @caughtexception;

        r2 = $r4;

     label5:
        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void mark(int) throws java.io.IOException
    {
        java.io.BufferedReader r0;
        int i0, $i1;
        java.lang.Object r1;
        java.lang.Throwable r2, $r8;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: java.io.BufferedReader;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("markLimit < 0:");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label1:
        r1 = r0.<java.io.BufferedReader: java.lang.Object lock>;

        entermonitor r1;

     label2:
        specialinvoke r0.<java.io.BufferedReader: void checkNotClosed()>();

        r0.<java.io.BufferedReader: int markLimit> = i0;

        $i1 = r0.<java.io.BufferedReader: int pos>;

        r0.<java.io.BufferedReader: int mark> = $i1;

        $z0 = r0.<java.io.BufferedReader: boolean lastWasCR>;

        r0.<java.io.BufferedReader: boolean markedLastWasCR> = $z0;

        exitmonitor r1;

     label3:
        return;

     label4:
        $r8 := @caughtexception;

        r2 = $r8;

     label5:
        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public boolean markSupported()
    {
        java.io.BufferedReader r0;

        r0 := @this: java.io.BufferedReader;

        return 1;
    }

    public int read() throws java.io.IOException
    {
        java.io.BufferedReader r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r3;
        int i0;
        boolean $z0;

        r0 := @this: java.io.BufferedReader;

        r1 = r0.<java.io.BufferedReader: java.lang.Object lock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<java.io.BufferedReader: void checkNotClosed()>();

        i0 = specialinvoke r0.<java.io.BufferedReader: int readChar()>();

        $z0 = r0.<java.io.BufferedReader: boolean lastWasCR>;

        if $z0 == 0 goto label4;

     label2:
        if i0 != 10 goto label4;

     label3:
        i0 = specialinvoke r0.<java.io.BufferedReader: int readChar()>();

     label4:
        r0.<java.io.BufferedReader: boolean lastWasCR> = 0;

        exitmonitor r1;

     label5:
        return i0;

     label6:
        $r3 := @caughtexception;

        r2 = $r3;

     label7:
        exitmonitor r1;

     label8:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public int read(char[], int, int) throws java.io.IOException
    {
        java.io.BufferedReader r0;
        char[] r1, $r4, $r7;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        java.lang.Object r2;
        java.lang.Throwable r3, $r8;
        java.io.Reader $r5, $r6;
        boolean $z0;

        r0 := @this: java.io.BufferedReader;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = r0.<java.io.BufferedReader: java.lang.Object lock>;

        entermonitor r2;

     label01:
        specialinvoke r0.<java.io.BufferedReader: void checkNotClosed()>();

        $i7 = lengthof r1;

        staticinvoke <java.util.Arrays: void checkOffsetAndCount(int,int,int)>($i7, i0, i1);

     label02:
        if i1 != 0 goto label05;

     label03:
        exitmonitor r2;

     label04:
        return 0;

     label05:
        specialinvoke r0.<java.io.BufferedReader: void maybeSwallowLF()>();

     label06:
        i2 = i1;

     label07:
        if i2 <= 0 goto label14;

     label08:
        $i10 = r0.<java.io.BufferedReader: int end>;

        $i8 = r0.<java.io.BufferedReader: int pos>;

        i3 = $i10 - $i8;

     label09:
        if i3 <= 0 goto label12;

        if i3 < i2 goto label20;

        i6 = i2;

     label10:
        $r7 = r0.<java.io.BufferedReader: char[] buf>;

        $i17 = r0.<java.io.BufferedReader: int pos>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, $i17, r1, i0, i6);

        $i18 = r0.<java.io.BufferedReader: int pos>;

        $i19 = i6 + $i18;

        r0.<java.io.BufferedReader: int pos> = $i19;

     label11:
        i0 = i0 + i6;

        i2 = i2 - i6;

     label12:
        if i2 == 0 goto label14;

        if i2 >= i1 goto label21;

     label13:
        $r6 = r0.<java.io.BufferedReader: java.io.Reader in>;

        $z0 = virtualinvoke $r6.<java.io.Reader: boolean ready()>();

        if $z0 != 0 goto label21;

     label14:
        i4 = i1 - i2;

        if i4 <= 0 goto label28;

     label15:
        exitmonitor r2;

     label16:
        return i4;

     label17:
        $r8 := @caughtexception;

        r3 = $r8;

     label18:
        exitmonitor r2;

     label19:
        throw r3;

     label20:
        i6 = i3;

        goto label10;

     label21:
        $i9 = r0.<java.io.BufferedReader: int mark>;

        if $i9 == -1 goto label22;

        $i15 = r0.<java.io.BufferedReader: int pos>;

        $i13 = r0.<java.io.BufferedReader: int mark>;

        $i16 = $i15 - $i13;

        $i14 = r0.<java.io.BufferedReader: int markLimit>;

        if $i16 < $i14 goto label26;

     label22:
        $r4 = r0.<java.io.BufferedReader: char[] buf>;

        $i11 = lengthof $r4;

        if i2 < $i11 goto label26;

        $r5 = r0.<java.io.BufferedReader: java.io.Reader in>;

        i5 = virtualinvoke $r5.<java.io.Reader: int read(char[],int,int)>(r1, i0, i2);

     label23:
        if i5 <= 0 goto label14;

        i2 = i2 - i5;

     label24:
        r0.<java.io.BufferedReader: int mark> = -1;

     label25:
        goto label14;

     label26:
        $i12 = specialinvoke r0.<java.io.BufferedReader: int fillBuf()>();

        if $i12 != -1 goto label07;

     label27:
        goto label14;

     label28:
        exitmonitor r2;

     label29:
        return -1;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
        catch java.lang.Throwable from label21 to label22 with label17;
        catch java.lang.Throwable from label22 to label23 with label17;
        catch java.lang.Throwable from label24 to label25 with label17;
        catch java.lang.Throwable from label26 to label27 with label17;
        catch java.lang.Throwable from label28 to label29 with label17;
    }

    public java.lang.String readLine() throws java.io.IOException
    {
        java.io.BufferedReader r0;
        boolean z0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r18;
        int i0, i1, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28;
        java.lang.StringBuilder r3, $r7;
        char c2, c3;
        java.lang.String r4, r5, r6, $r15;
        char[] $r9, $r10, $r12, $r14, $r16, $r17;

        r0 := @this: java.io.BufferedReader;

        z0 = 1;

        r1 = r0.<java.io.BufferedReader: java.lang.Object lock>;

        entermonitor r1;

     label01:
        specialinvoke r0.<java.io.BufferedReader: void checkNotClosed()>();

        specialinvoke r0.<java.io.BufferedReader: void maybeSwallowLF()>();

        i0 = r0.<java.io.BufferedReader: int pos>;

     label02:
        $i4 = r0.<java.io.BufferedReader: int end>;

        if i0 >= $i4 goto label08;

        $r16 = r0.<java.io.BufferedReader: char[] buf>;

        c3 = $r16[i0];

     label03:
        if c3 == 10 goto label04;

        if c3 != 13 goto label26;

     label04:
        $r15 = new java.lang.String;

        $r17 = r0.<java.io.BufferedReader: char[] buf>;

        $i27 = r0.<java.io.BufferedReader: int pos>;

        $i25 = r0.<java.io.BufferedReader: int pos>;

        $i28 = i0 - $i25;

        specialinvoke $r15.<java.lang.String: void <init>(char[],int,int)>($r17, $i27, $i28);

        r6 = $r15;

        $i26 = i0 + 1;

        r0.<java.io.BufferedReader: int pos> = $i26;

     label05:
        if c3 != 13 goto label25;

     label06:
        r0.<java.io.BufferedReader: boolean lastWasCR> = z0;

        exitmonitor r1;

     label07:
        return r6;

     label08:
        $r7 = new java.lang.StringBuilder;

        $i5 = r0.<java.io.BufferedReader: int end>;

        $i6 = r0.<java.io.BufferedReader: int pos>;

        $i8 = $i5 - $i6;

        $i7 = 80 + $i8;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(int)>($i7);

        r3 = $r7;

        $r9 = r0.<java.io.BufferedReader: char[] buf>;

        $i11 = r0.<java.io.BufferedReader: int pos>;

        $i9 = r0.<java.io.BufferedReader: int end>;

        $i10 = r0.<java.io.BufferedReader: int pos>;

        $i12 = $i9 - $i10;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r9, $i11, $i12);

     label09:
        $i14 = r0.<java.io.BufferedReader: int end>;

        r0.<java.io.BufferedReader: int pos> = $i14;

        $i13 = specialinvoke r0.<java.io.BufferedReader: int fillBuf()>();

        if $i13 != -1 goto label16;

        $i24 = virtualinvoke r3.<java.lang.StringBuilder: int length()>();

        if $i24 <= 0 goto label15;

        r5 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label10:
        exitmonitor r1;

     label11:
        return r5;

     label12:
        $r18 := @caughtexception;

        r2 = $r18;

     label13:
        exitmonitor r1;

     label14:
        throw r2;

     label15:
        r5 = null;

        goto label10;

     label16:
        i1 = r0.<java.io.BufferedReader: int pos>;

     label17:
        $i16 = r0.<java.io.BufferedReader: int end>;

        if i1 >= $i16 goto label23;

        $r12 = r0.<java.io.BufferedReader: char[] buf>;

        c2 = $r12[i1];

     label18:
        if c2 == 10 goto label19;

        if c2 != 13 goto label28;

     label19:
        $r14 = r0.<java.io.BufferedReader: char[] buf>;

        $i23 = r0.<java.io.BufferedReader: int pos>;

        $i20 = r0.<java.io.BufferedReader: int pos>;

        $i21 = i1 - $i20;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r14, $i23, $i21);

        $i22 = i1 + 1;

        r0.<java.io.BufferedReader: int pos> = $i22;

     label20:
        if c2 != 13 goto label27;

     label21:
        r0.<java.io.BufferedReader: boolean lastWasCR> = z0;

        r4 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        exitmonitor r1;

     label22:
        return r4;

     label23:
        $r10 = r0.<java.io.BufferedReader: char[] buf>;

        $i17 = r0.<java.io.BufferedReader: int pos>;

        $i18 = r0.<java.io.BufferedReader: int end>;

        $i15 = r0.<java.io.BufferedReader: int pos>;

        $i19 = $i18 - $i15;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r10, $i17, $i19);

     label24:
        goto label09;

     label25:
        z0 = 0;

        goto label06;

     label26:
        i0 = i0 + 1;

        goto label02;

     label27:
        z0 = 0;

        goto label21;

     label28:
        i1 = i1 + 1;

        goto label17;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
        catch java.lang.Throwable from label16 to label17 with label12;
        catch java.lang.Throwable from label17 to label18 with label12;
        catch java.lang.Throwable from label19 to label20 with label12;
        catch java.lang.Throwable from label21 to label22 with label12;
        catch java.lang.Throwable from label23 to label24 with label12;
    }

    public boolean ready() throws java.io.IOException
    {
        java.io.BufferedReader r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r4;
        boolean z0, $z1;
        int $i0, $i1, $i2;
        java.io.Reader $r3;

        r0 := @this: java.io.BufferedReader;

        r1 = r0.<java.io.BufferedReader: java.lang.Object lock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<java.io.BufferedReader: void checkNotClosed()>();

        $i1 = r0.<java.io.BufferedReader: int end>;

        $i0 = r0.<java.io.BufferedReader: int pos>;

        $i2 = $i1 - $i0;

        if $i2 > 0 goto label8;

        $r3 = r0.<java.io.BufferedReader: java.io.Reader in>;

        $z1 = virtualinvoke $r3.<java.io.Reader: boolean ready()>();

        if $z1 == 0 goto label9;

     label2:
        goto label8;

     label3:
        exitmonitor r1;

     label4:
        return z0;

     label5:
        $r4 := @caughtexception;

        r2 = $r4;

     label6:
        exitmonitor r1;

     label7:
        throw r2;

     label8:
        z0 = 1;

        goto label3;

     label9:
        z0 = 0;

        goto label3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void reset() throws java.io.IOException
    {
        java.io.BufferedReader r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r4;
        int $i0, $i1;
        boolean $z0;
        java.io.IOException $r3;

        r0 := @this: java.io.BufferedReader;

        r1 = r0.<java.io.BufferedReader: java.lang.Object lock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<java.io.BufferedReader: void checkNotClosed()>();

        $i0 = r0.<java.io.BufferedReader: int mark>;

        if $i0 != -1 goto label5;

        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("Invalid mark");

        throw $r3;

     label2:
        $r4 := @caughtexception;

        r2 = $r4;

     label3:
        exitmonitor r1;

     label4:
        throw r2;

     label5:
        $i1 = r0.<java.io.BufferedReader: int mark>;

        r0.<java.io.BufferedReader: int pos> = $i1;

        $z0 = r0.<java.io.BufferedReader: boolean markedLastWasCR>;

        r0.<java.io.BufferedReader: boolean lastWasCR> = $z0;

        exitmonitor r1;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.Throwable from label5 to label6 with label2;
    }

    public long skip(long) throws java.io.IOException
    {
        java.io.BufferedReader r0;
        long l0, l1, $l6, $l17, $l18, $l24, $l25, $l26, $l28, $l32, $l33;
        java.lang.Object r1;
        java.lang.Throwable r2, $r7;
        byte $b2, $b7, $b12, $b20;
        int $i3, $i4, $i5, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i16, $i19, $i21, $i22, $i23, $i27, $i29, $i30, $i31;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r8;

        r0 := @this: java.io.BufferedReader;

        l0 := @parameter0: long;

        $b2 = l0 cmp 0L;

        if $b2 >= 0 goto label01;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("charCount < 0: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r5;

     label01:
        r1 = r0.<java.io.BufferedReader: java.lang.Object lock>;

        entermonitor r1;

     label02:
        specialinvoke r0.<java.io.BufferedReader: void checkNotClosed()>();

        $i4 = r0.<java.io.BufferedReader: int end>;

        $i3 = r0.<java.io.BufferedReader: int pos>;

        $i5 = $i4 - $i3;

        $l6 = (long) $i5;

        $b7 = $l6 cmp l0;

        if $b7 < 0 goto label04;

        $i29 = r0.<java.io.BufferedReader: int pos>;

        $l32 = (long) $i29;

        $l33 = l0 + $l32;

        $i31 = (int) $l33;

        r0.<java.io.BufferedReader: int pos> = $i31;

        exitmonitor r1;

     label03:
        return l0;

     label04:
        $i9 = r0.<java.io.BufferedReader: int end>;

        $i8 = r0.<java.io.BufferedReader: int pos>;

        $i11 = $i9 - $i8;

        l1 = (long) $i11;

        $i10 = r0.<java.io.BufferedReader: int end>;

        r0.<java.io.BufferedReader: int pos> = $i10;

     label05:
        $b12 = l1 cmp l0;

        if $b12 >= 0 goto label15;

     label06:
        $i14 = specialinvoke r0.<java.io.BufferedReader: int fillBuf()>();

        if $i14 != -1 goto label08;

        exitmonitor r1;

     label07:
        return l1;

     label08:
        $i16 = r0.<java.io.BufferedReader: int end>;

        $i13 = r0.<java.io.BufferedReader: int pos>;

        $i15 = $i16 - $i13;

        $l17 = (long) $i15;

        $l18 = l0 - l1;

        $b20 = $l17 cmp $l18;

        if $b20 < 0 goto label13;

        $i27 = r0.<java.io.BufferedReader: int pos>;

        $l25 = (long) $i27;

        $l28 = l0 - l1;

        $l26 = $l25 + $l28;

        $i30 = (int) $l26;

        r0.<java.io.BufferedReader: int pos> = $i30;

        exitmonitor r1;

     label09:
        return l0;

     label10:
        $r7 := @caughtexception;

        r2 = $r7;

     label11:
        exitmonitor r1;

     label12:
        throw r2;

     label13:
        $i22 = r0.<java.io.BufferedReader: int end>;

        $i19 = r0.<java.io.BufferedReader: int pos>;

        $i21 = $i22 - $i19;

        $l24 = (long) $i21;

        l1 = l1 + $l24;

        $i23 = r0.<java.io.BufferedReader: int end>;

        r0.<java.io.BufferedReader: int pos> = $i23;

     label14:
        goto label05;

     label15:
        exitmonitor r1;

     label16:
        return l0;

        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label13 to label14 with label10;
        catch java.lang.Throwable from label15 to label16 with label10;
    }
}
