public class android.content.ClipData$Item extends java.lang.Object
{
    final java.lang.String mHtmlText;
    final android.content.Intent mIntent;
    final java.lang.CharSequence mText;
    final android.net.Uri mUri;

    public void <init>(android.content.Intent)
    {
        android.content.ClipData$Item r0;
        android.content.Intent r1;

        r0 := @this: android.content.ClipData$Item;

        r1 := @parameter0: android.content.Intent;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.ClipData$Item: java.lang.CharSequence mText> = null;

        r0.<android.content.ClipData$Item: java.lang.String mHtmlText> = null;

        r0.<android.content.ClipData$Item: android.content.Intent mIntent> = r1;

        r0.<android.content.ClipData$Item: android.net.Uri mUri> = null;

        return;
    }

    public void <init>(android.net.Uri)
    {
        android.content.ClipData$Item r0;
        android.net.Uri r1;

        r0 := @this: android.content.ClipData$Item;

        r1 := @parameter0: android.net.Uri;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.ClipData$Item: java.lang.CharSequence mText> = null;

        r0.<android.content.ClipData$Item: java.lang.String mHtmlText> = null;

        r0.<android.content.ClipData$Item: android.content.Intent mIntent> = null;

        r0.<android.content.ClipData$Item: android.net.Uri mUri> = r1;

        return;
    }

    public void <init>(java.lang.CharSequence)
    {
        android.content.ClipData$Item r0;
        java.lang.CharSequence r1;

        r0 := @this: android.content.ClipData$Item;

        r1 := @parameter0: java.lang.CharSequence;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.ClipData$Item: java.lang.CharSequence mText> = r1;

        r0.<android.content.ClipData$Item: java.lang.String mHtmlText> = null;

        r0.<android.content.ClipData$Item: android.content.Intent mIntent> = null;

        r0.<android.content.ClipData$Item: android.net.Uri mUri> = null;

        return;
    }

    public void <init>(java.lang.CharSequence, android.content.Intent, android.net.Uri)
    {
        android.content.ClipData$Item r0;
        java.lang.CharSequence r1;
        android.content.Intent r2;
        android.net.Uri r3;

        r0 := @this: android.content.ClipData$Item;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: android.content.Intent;

        r3 := @parameter2: android.net.Uri;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.ClipData$Item: java.lang.CharSequence mText> = r1;

        r0.<android.content.ClipData$Item: java.lang.String mHtmlText> = null;

        r0.<android.content.ClipData$Item: android.content.Intent mIntent> = r2;

        r0.<android.content.ClipData$Item: android.net.Uri mUri> = r3;

        return;
    }

    public void <init>(java.lang.CharSequence, java.lang.String)
    {
        android.content.ClipData$Item r0;
        java.lang.CharSequence r1;
        java.lang.String r2;

        r0 := @this: android.content.ClipData$Item;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.ClipData$Item: java.lang.CharSequence mText> = r1;

        r0.<android.content.ClipData$Item: java.lang.String mHtmlText> = r2;

        r0.<android.content.ClipData$Item: android.content.Intent mIntent> = null;

        r0.<android.content.ClipData$Item: android.net.Uri mUri> = null;

        return;
    }

    public void <init>(java.lang.CharSequence, java.lang.String, android.content.Intent, android.net.Uri)
    {
        android.content.ClipData$Item r0;
        java.lang.CharSequence r1;
        java.lang.String r2;
        android.content.Intent r3;
        android.net.Uri r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: android.content.ClipData$Item;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.Intent;

        r4 := @parameter3: android.net.Uri;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r2 == null goto label1;

        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Plain text must be supplied if HTML text is supplied");

        throw $r5;

     label1:
        r0.<android.content.ClipData$Item: java.lang.CharSequence mText> = r1;

        r0.<android.content.ClipData$Item: java.lang.String mHtmlText> = r2;

        r0.<android.content.ClipData$Item: android.content.Intent mIntent> = r3;

        r0.<android.content.ClipData$Item: android.net.Uri mUri> = r4;

        return;
    }

    private java.lang.CharSequence coerceToHtmlOrStyledText(android.content.Context, boolean)
    {
        android.content.ClipData$Item r0;
        android.content.Context r1;
        boolean z0, z1, z2, $z3, $z4;
        java.lang.String[] r2;
        java.io.FileInputStream r3;
        java.lang.Throwable r4, $r59;
        java.io.IOException r6, $r48, $r49, $r53, $r54, $r56, $r57, $r58, $r60, $r62;
        java.lang.String r7, r15, r18, r19, r23, r31, $r32, $r35, $r38, $r45, $r46, $r51, $r52, $r55, r65, r66;
        java.lang.CharSequence r8, r28, $r39;
        android.net.Uri r12, $r29, $r37, $r44, $r47;
        android.content.ContentResolver r13, $r36;
        java.io.InputStreamReader r14, r63;
        char[] r16;
        java.lang.StringBuilder r17, r64;
        int i0, i1, i2;
        android.text.Spanned r27;
        android.content.Intent $r30, $r33, $r34;
        android.content.res.AssetFileDescriptor $r40;
        java.lang.RuntimeException $r50;
        java.io.FileNotFoundException $r61;

        r0 := @this: android.content.ClipData$Item;

        r1 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        $r29 = r0.<android.content.ClipData$Item: android.net.Uri mUri>;

        if $r29 == null goto label54;

        $r36 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r37 = r0.<android.content.ClipData$Item: android.net.Uri mUri>;

        r2 = virtualinvoke $r36.<android.content.ContentResolver: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>($r37, "text/*");

        z1 = 0;

        z2 = 0;

        if r2 == null goto label04;

        i1 = lengthof r2;

        i2 = 0;

     label01:
        if i2 >= i1 goto label04;

        r31 = r2[i2];

        $r52 = "text/html";

        $z4 = virtualinvoke $r52.<java.lang.String: boolean equals(java.lang.Object)>(r31);

        if $z4 == 0 goto label03;

        z1 = 1;

     label02:
        i2 = i2 + 1;

        goto label01;

     label03:
        $z3 = virtualinvoke r31.<java.lang.String: boolean startsWith(java.lang.String)>("text/");

        if $z3 == 0 goto label02;

        z2 = 1;

        goto label02;

     label04:
        if z1 != 0 goto label05;

        if z2 == 0 goto label15;

     label05:
        r3 = null;

     label06:
        r13 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r12 = r0.<android.content.ClipData$Item: android.net.Uri mUri>;

     label07:
        if z1 == 0 goto label17;

        r15 = "text/html";

     label08:
        $r40 = virtualinvoke r13.<android.content.ContentResolver: android.content.res.AssetFileDescriptor openTypedAssetFileDescriptor(android.net.Uri,java.lang.String,android.os.Bundle)>(r12, r15, null);

        r3 = virtualinvoke $r40.<android.content.res.AssetFileDescriptor: java.io.FileInputStream createInputStream()>();

        r63 = new java.io.InputStreamReader;

        specialinvoke r63.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r3, "UTF-8");

        r14 = r63;

        r64 = new java.lang.StringBuilder;

        specialinvoke r64.<java.lang.StringBuilder: void <init>(int)>(128);

        r17 = r64;

        r16 = newarray (char)[8192];

     label09:
        i0 = virtualinvoke r14.<java.io.InputStreamReader: int read(char[])>(r16);

     label10:
        if i0 <= 0 goto label18;

     label11:
        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>(r16, 0, i0);

     label12:
        goto label09;

     label13:
        $r61 := @caughtexception;

        if r3 == null goto label15;

     label14:
        virtualinvoke r3.<java.io.FileInputStream: void close()>();

     label15:
        if z0 == 0 goto label53;

        $r44 = r0.<android.content.ClipData$Item: android.net.Uri mUri>;

        $r51 = virtualinvoke $r44.<android.net.Uri: java.lang.String toString()>();

        r8 = specialinvoke r0.<android.content.ClipData$Item: java.lang.CharSequence uriToStyledText(java.lang.String)>($r51);

     label16:
        return r8;

     label17:
        r15 = "text/plain";

        goto label08;

     label18:
        r19 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

     label19:
        r8 = r19;

        if z1 == 0 goto label35;

        if z0 == 0 goto label30;

     label20:
        r65 = (java.lang.String) r8;

        r27 = staticinvoke <android.text.Html: android.text.Spanned fromHtml(java.lang.String)>(r65);

     label21:
        r28 = r27;

        if r28 == null goto label25;

     label22:
        if r3 == null goto label24;

     label23:
        virtualinvoke r3.<java.io.FileInputStream: void close()>();

     label24:
        return r28;

     label25:
        r28 = r8;

        goto label22;

     label26:
        $r50 := @caughtexception;

        if r3 == null goto label16;

     label27:
        virtualinvoke r3.<java.io.FileInputStream: void close()>();

     label28:
        return r8;

     label29:
        $r62 := @caughtexception;

        return r8;

     label30:
        r66 = (java.lang.String) r8;

        r23 = virtualinvoke r66.<java.lang.String: java.lang.String toString()>();

     label31:
        r8 = r23;

        if r3 == null goto label16;

     label32:
        virtualinvoke r3.<java.io.FileInputStream: void close()>();

     label33:
        return r8;

     label34:
        $r60 := @caughtexception;

        return r8;

     label35:
        if z0 == 0 goto label39;

        if r3 == null goto label16;

     label36:
        virtualinvoke r3.<java.io.FileInputStream: void close()>();

     label37:
        return r8;

     label38:
        $r49 := @caughtexception;

        return r8;

     label39:
        r18 = staticinvoke <android.text.Html: java.lang.String escapeHtml(java.lang.CharSequence)>(r8);

     label40:
        r8 = r18;

        if r3 == null goto label16;

     label41:
        virtualinvoke r3.<java.io.FileInputStream: void close()>();

     label42:
        return r8;

     label43:
        $r48 := @caughtexception;

        return r8;

     label44:
        $r54 := @caughtexception;

        r6 = $r54;

     label45:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ClippedData", "Failure loading text", r6);

        $r55 = virtualinvoke r6.<java.io.IOException: java.lang.String toString()>();

        r7 = staticinvoke <android.text.Html: java.lang.String escapeHtml(java.lang.CharSequence)>($r55);

     label46:
        r8 = r7;

        if r3 == null goto label16;

     label47:
        virtualinvoke r3.<java.io.FileInputStream: void close()>();

     label48:
        return r8;

     label49:
        $r53 := @caughtexception;

        return r8;

     label50:
        $r59 := @caughtexception;

        r4 = $r59;

        if r3 == null goto label52;

     label51:
        virtualinvoke r3.<java.io.FileInputStream: void close()>();

     label52:
        throw r4;

     label53:
        $r47 = r0.<android.content.ClipData$Item: android.net.Uri mUri>;

        $r46 = virtualinvoke $r47.<android.net.Uri: java.lang.String toString()>();

        $r45 = specialinvoke r0.<android.content.ClipData$Item: java.lang.String uriToHtml(java.lang.String)>($r46);

        return $r45;

     label54:
        $r30 = r0.<android.content.ClipData$Item: android.content.Intent mIntent>;

        if $r30 == null goto label56;

        if z0 == 0 goto label55;

        $r33 = r0.<android.content.ClipData$Item: android.content.Intent mIntent>;

        $r38 = virtualinvoke $r33.<android.content.Intent: java.lang.String toUri(int)>(1);

        $r39 = specialinvoke r0.<android.content.ClipData$Item: java.lang.CharSequence uriToStyledText(java.lang.String)>($r38);

        return $r39;

     label55:
        $r34 = r0.<android.content.ClipData$Item: android.content.Intent mIntent>;

        $r35 = virtualinvoke $r34.<android.content.Intent: java.lang.String toUri(int)>(1);

        $r32 = specialinvoke r0.<android.content.ClipData$Item: java.lang.String uriToHtml(java.lang.String)>($r35);

        return $r32;

     label56:
        return "";

     label57:
        $r58 := @caughtexception;

        goto label24;

     label58:
        $r56 := @caughtexception;

        goto label15;

     label59:
        $r57 := @caughtexception;

        goto label52;

        catch java.io.FileNotFoundException from label06 to label07 with label13;
        catch java.io.IOException from label06 to label07 with label44;
        catch java.lang.Throwable from label06 to label07 with label50;
        catch java.io.FileNotFoundException from label08 to label09 with label13;
        catch java.io.IOException from label08 to label09 with label44;
        catch java.lang.Throwable from label08 to label09 with label50;
        catch java.io.FileNotFoundException from label09 to label10 with label13;
        catch java.io.IOException from label09 to label10 with label44;
        catch java.lang.Throwable from label09 to label10 with label50;
        catch java.io.FileNotFoundException from label11 to label12 with label13;
        catch java.io.IOException from label11 to label12 with label44;
        catch java.lang.Throwable from label11 to label12 with label50;
        catch java.io.IOException from label14 to label15 with label58;
        catch java.io.FileNotFoundException from label18 to label19 with label13;
        catch java.io.IOException from label18 to label19 with label44;
        catch java.lang.Throwable from label18 to label19 with label50;
        catch java.lang.RuntimeException from label20 to label21 with label26;
        catch java.io.FileNotFoundException from label20 to label21 with label13;
        catch java.io.IOException from label20 to label21 with label44;
        catch java.lang.Throwable from label20 to label21 with label50;
        catch java.io.IOException from label23 to label24 with label57;
        catch java.io.IOException from label27 to label28 with label29;
        catch java.io.FileNotFoundException from label30 to label31 with label13;
        catch java.io.IOException from label30 to label31 with label44;
        catch java.lang.Throwable from label30 to label31 with label50;
        catch java.io.IOException from label32 to label33 with label34;
        catch java.io.IOException from label36 to label37 with label38;
        catch java.io.FileNotFoundException from label39 to label40 with label13;
        catch java.io.IOException from label39 to label40 with label44;
        catch java.lang.Throwable from label39 to label40 with label50;
        catch java.io.IOException from label41 to label42 with label43;
        catch java.lang.Throwable from label45 to label46 with label50;
        catch java.io.IOException from label47 to label48 with label49;
        catch java.io.IOException from label51 to label52 with label59;
    }

    private java.lang.String uriToHtml(java.lang.String)
    {
        android.content.ClipData$Item r0;
        java.lang.String r1, $r5, $r8, $r11;
        java.lang.StringBuilder r2, $r3;

        r0 := @this: android.content.ClipData$Item;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>(256);

        r2 = $r3;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<a href=\"");

        $r5 = staticinvoke <android.text.Html: java.lang.String escapeHtml(java.lang.CharSequence)>(r1);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\">");

        $r8 = staticinvoke <android.text.Html: java.lang.String escapeHtml(java.lang.CharSequence)>(r1);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</a>");

        $r11 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    private java.lang.CharSequence uriToStyledText(java.lang.String)
    {
        android.content.ClipData$Item r0;
        java.lang.String r1;
        android.text.SpannableStringBuilder r2, $r3;
        android.text.style.URLSpan $r5;
        int $i0;

        r0 := @this: android.content.ClipData$Item;

        r1 := @parameter0: java.lang.String;

        $r3 = new android.text.SpannableStringBuilder;

        specialinvoke $r3.<android.text.SpannableStringBuilder: void <init>()>();

        r2 = $r3;

        virtualinvoke r2.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>(r1);

        $r5 = new android.text.style.URLSpan;

        specialinvoke $r5.<android.text.style.URLSpan: void <init>(java.lang.String)>(r1);

        $i0 = virtualinvoke r2.<android.text.SpannableStringBuilder: int length()>();

        virtualinvoke r2.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r5, 0, $i0, 33);

        return r2;
    }

    public java.lang.String coerceToHtmlText(android.content.Context)
    {
        android.content.ClipData$Item r0;
        android.content.Context r1;
        java.lang.String r2, r5, $r6, $r8;
        java.lang.CharSequence r3, r4;
        boolean $z0;
        android.text.Spanned $r7;

        r0 := @this: android.content.ClipData$Item;

        r1 := @parameter0: android.content.Context;

        r2 = virtualinvoke r0.<android.content.ClipData$Item: java.lang.String getHtmlText()>();

        if r2 == null goto label1;

        return r2;

     label1:
        r3 = virtualinvoke r0.<android.content.ClipData$Item: java.lang.CharSequence getText()>();

        if r3 == null goto label3;

        $z0 = r3 instanceof android.text.Spanned;

        if $z0 == 0 goto label2;

        $r7 = (android.text.Spanned) r3;

        $r8 = staticinvoke <android.text.Html: java.lang.String toHtml(android.text.Spanned)>($r7);

        return $r8;

     label2:
        $r6 = staticinvoke <android.text.Html: java.lang.String escapeHtml(java.lang.CharSequence)>(r3);

        return $r6;

     label3:
        r4 = specialinvoke r0.<android.content.ClipData$Item: java.lang.CharSequence coerceToHtmlOrStyledText(android.content.Context,boolean)>(r1, 0);

        if r4 == null goto label5;

        r5 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();

     label4:
        return r5;

     label5:
        r5 = null;

        goto label4;
    }

    public java.lang.CharSequence coerceToStyledText(android.content.Context)
    {
        android.content.ClipData$Item r0;
        android.content.Context r1;
        java.lang.CharSequence r2, $r6;
        java.lang.String r3;
        android.text.Spanned r5;
        boolean $z0;
        java.lang.RuntimeException $r7;

        r0 := @this: android.content.ClipData$Item;

        r1 := @parameter0: android.content.Context;

        r2 = virtualinvoke r0.<android.content.ClipData$Item: java.lang.CharSequence getText()>();

        $z0 = r2 instanceof android.text.Spanned;

        if $z0 == 0 goto label2;

     label1:
        return r2;

     label2:
        r3 = virtualinvoke r0.<android.content.ClipData$Item: java.lang.String getHtmlText()>();

        if r3 == null goto label6;

     label3:
        r5 = staticinvoke <android.text.Html: android.text.Spanned fromHtml(java.lang.String)>(r3);

     label4:
        if r5 == null goto label6;

        return r5;

     label5:
        $r7 := @caughtexception;

     label6:
        if r2 != null goto label1;

        $r6 = specialinvoke r0.<android.content.ClipData$Item: java.lang.CharSequence coerceToHtmlOrStyledText(android.content.Context,boolean)>(r1, 1);

        return $r6;

        catch java.lang.RuntimeException from label3 to label4 with label5;
    }

    public java.lang.CharSequence coerceToText(android.content.Context)
    {
        android.content.ClipData$Item r0;
        android.content.Context r1;
        java.lang.CharSequence r2;
        android.net.Uri r3;
        android.content.Intent r4;
        java.io.FileInputStream r5;
        java.lang.Throwable r6, $r28;
        java.io.IOException r8, $r24, $r27, $r29, $r30, $r31;
        java.lang.String r9, r16, $r19, $r23;
        java.io.InputStreamReader r13, $r22;
        java.lang.StringBuilder r14, $r21;
        int i0;
        char[] r15;
        android.content.ContentResolver $r18;
        android.content.res.AssetFileDescriptor $r20;
        java.io.FileNotFoundException $r26;

        r0 := @this: android.content.ClipData$Item;

        r1 := @parameter0: android.content.Context;

        r2 = virtualinvoke r0.<android.content.ClipData$Item: java.lang.CharSequence getText()>();

        if r2 == null goto label02;

     label01:
        return r2;

     label02:
        r3 = virtualinvoke r0.<android.content.ClipData$Item: android.net.Uri getUri()>();

        if r3 == null goto label25;

        r5 = null;

     label03:
        $r18 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r20 = virtualinvoke $r18.<android.content.ContentResolver: android.content.res.AssetFileDescriptor openTypedAssetFileDescriptor(android.net.Uri,java.lang.String,android.os.Bundle)>(r3, "text/*", null);

        r5 = virtualinvoke $r20.<android.content.res.AssetFileDescriptor: java.io.FileInputStream createInputStream()>();

        $r22 = new java.io.InputStreamReader;

        specialinvoke $r22.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r5, "UTF-8");

        r13 = $r22;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>(int)>(128);

        r14 = $r21;

        r15 = newarray (char)[8192];

     label04:
        i0 = virtualinvoke r13.<java.io.InputStreamReader: int read(char[])>(r15);

     label05:
        if i0 <= 0 goto label11;

     label06:
        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>(r15, 0, i0);

     label07:
        goto label04;

     label08:
        $r26 := @caughtexception;

        if r5 == null goto label10;

     label09:
        virtualinvoke r5.<java.io.FileInputStream: void close()>();

     label10:
        $r23 = virtualinvoke r3.<android.net.Uri: java.lang.String toString()>();

        return $r23;

     label11:
        r16 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.String toString()>();

     label12:
        r2 = r16;

        if r5 == null goto label01;

     label13:
        virtualinvoke r5.<java.io.FileInputStream: void close()>();

     label14:
        return r2;

     label15:
        $r31 := @caughtexception;

        return r2;

     label16:
        $r27 := @caughtexception;

        r8 = $r27;

     label17:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ClippedData", "Failure loading text", r8);

        r9 = virtualinvoke r8.<java.io.IOException: java.lang.String toString()>();

     label18:
        r2 = r9;

        if r5 == null goto label01;

     label19:
        virtualinvoke r5.<java.io.FileInputStream: void close()>();

     label20:
        return r2;

     label21:
        $r24 := @caughtexception;

        return r2;

     label22:
        $r28 := @caughtexception;

        r6 = $r28;

        if r5 == null goto label24;

     label23:
        virtualinvoke r5.<java.io.FileInputStream: void close()>();

     label24:
        throw r6;

     label25:
        r4 = virtualinvoke r0.<android.content.ClipData$Item: android.content.Intent getIntent()>();

        if r4 == null goto label26;

        $r19 = virtualinvoke r4.<android.content.Intent: java.lang.String toUri(int)>(1);

        return $r19;

     label26:
        return "";

     label27:
        $r29 := @caughtexception;

        goto label10;

     label28:
        $r30 := @caughtexception;

        goto label24;

        catch java.io.FileNotFoundException from label03 to label04 with label08;
        catch java.io.IOException from label03 to label04 with label16;
        catch java.lang.Throwable from label03 to label04 with label22;
        catch java.io.FileNotFoundException from label04 to label05 with label08;
        catch java.io.IOException from label04 to label05 with label16;
        catch java.lang.Throwable from label04 to label05 with label22;
        catch java.io.FileNotFoundException from label06 to label07 with label08;
        catch java.io.IOException from label06 to label07 with label16;
        catch java.lang.Throwable from label06 to label07 with label22;
        catch java.io.IOException from label09 to label10 with label27;
        catch java.io.FileNotFoundException from label11 to label12 with label08;
        catch java.io.IOException from label11 to label12 with label16;
        catch java.lang.Throwable from label11 to label12 with label22;
        catch java.io.IOException from label13 to label14 with label15;
        catch java.lang.Throwable from label17 to label18 with label22;
        catch java.io.IOException from label19 to label20 with label21;
        catch java.io.IOException from label23 to label24 with label28;
    }

    public java.lang.String getHtmlText()
    {
        android.content.ClipData$Item r0;
        java.lang.String $r1;

        r0 := @this: android.content.ClipData$Item;

        $r1 = r0.<android.content.ClipData$Item: java.lang.String mHtmlText>;

        return $r1;
    }

    public android.content.Intent getIntent()
    {
        android.content.ClipData$Item r0;
        android.content.Intent $r1;

        r0 := @this: android.content.ClipData$Item;

        $r1 = r0.<android.content.ClipData$Item: android.content.Intent mIntent>;

        return $r1;
    }

    public java.lang.CharSequence getText()
    {
        android.content.ClipData$Item r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.content.ClipData$Item;

        $r1 = r0.<android.content.ClipData$Item: java.lang.CharSequence mText>;

        return $r1;
    }

    public android.net.Uri getUri()
    {
        android.content.ClipData$Item r0;
        android.net.Uri $r1;

        r0 := @this: android.content.ClipData$Item;

        $r1 = r0.<android.content.ClipData$Item: android.net.Uri mUri>;

        return $r1;
    }

    public void toShortString(java.lang.StringBuilder)
    {
        android.content.ClipData$Item r0;
        java.lang.StringBuilder r1;
        java.lang.String $r2, $r17;
        java.lang.CharSequence $r3, $r13;
        android.net.Uri $r4, $r10;
        android.content.Intent $r5, $r8;

        r0 := @this: android.content.ClipData$Item;

        r1 := @parameter0: java.lang.StringBuilder;

        $r2 = r0.<android.content.ClipData$Item: java.lang.String mHtmlText>;

        if $r2 == null goto label1;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("H:");

        $r17 = r0.<android.content.ClipData$Item: java.lang.String mHtmlText>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        return;

     label1:
        $r3 = r0.<android.content.ClipData$Item: java.lang.CharSequence mText>;

        if $r3 == null goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("T:");

        $r13 = r0.<android.content.ClipData$Item: java.lang.CharSequence mText>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r13);

        return;

     label2:
        $r4 = r0.<android.content.ClipData$Item: android.net.Uri mUri>;

        if $r4 == null goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("U:");

        $r10 = r0.<android.content.ClipData$Item: android.net.Uri mUri>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        return;

     label3:
        $r5 = r0.<android.content.ClipData$Item: android.content.Intent mIntent>;

        if $r5 == null goto label4;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("I:");

        $r8 = r0.<android.content.ClipData$Item: android.content.Intent mIntent>;

        virtualinvoke $r8.<android.content.Intent: void toShortString(java.lang.StringBuilder,boolean,boolean,boolean,boolean)>(r1, 1, 1, 1, 1);

        return;

     label4:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NULL");

        return;
    }

    public java.lang.String toString()
    {
        android.content.ClipData$Item r0;
        java.lang.StringBuilder r1, $r2;
        java.lang.String $r5;

        r0 := @this: android.content.ClipData$Item;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(128);

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ClipData.Item { ");

        virtualinvoke r0.<android.content.ClipData$Item: void toShortString(java.lang.StringBuilder)>(r1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" }");

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }
}
