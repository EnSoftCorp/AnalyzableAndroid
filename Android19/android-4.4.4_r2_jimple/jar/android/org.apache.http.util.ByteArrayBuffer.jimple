public final class org.apache.http.util.ByteArrayBuffer extends java.lang.Object
{
    private byte[] buffer;
    private int len;

    public void <init>(int)
    {
        org.apache.http.util.ByteArrayBuffer r0;
        int i0;
        byte[] $r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.http.util.ByteArrayBuffer;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 >= 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Buffer capacity may not be negative");

        throw $r2;

     label1:
        $r1 = newarray (byte)[i0];

        r0.<org.apache.http.util.ByteArrayBuffer: byte[] buffer> = $r1;

        return;
    }

    private void expand(int)
    {
        org.apache.http.util.ByteArrayBuffer r0;
        int i0, $i1, $i2, $i3, $i4;
        byte[] r1, $r2, $r3;

        r0 := @this: org.apache.http.util.ByteArrayBuffer;

        i0 := @parameter0: int;

        $r2 = r0.<org.apache.http.util.ByteArrayBuffer: byte[] buffer>;

        $i1 = lengthof $r2;

        $i2 = $i1 << 1;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i2, i0);

        r1 = newarray (byte)[$i3];

        $r3 = r0.<org.apache.http.util.ByteArrayBuffer: byte[] buffer>;

        $i4 = r0.<org.apache.http.util.ByteArrayBuffer: int len>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r1, 0, $i4);

        r0.<org.apache.http.util.ByteArrayBuffer: byte[] buffer> = r1;

        return;
    }

    public void append(int)
    {
        org.apache.http.util.ByteArrayBuffer r0;
        int i0, i1, $i2, $i3, $i5;
        byte[] $r1, $r2;
        byte $b4;

        r0 := @this: org.apache.http.util.ByteArrayBuffer;

        i0 := @parameter0: int;

        $i2 = r0.<org.apache.http.util.ByteArrayBuffer: int len>;

        i1 = 1 + $i2;

        $r1 = r0.<org.apache.http.util.ByteArrayBuffer: byte[] buffer>;

        $i3 = lengthof $r1;

        if i1 <= $i3 goto label1;

        specialinvoke r0.<org.apache.http.util.ByteArrayBuffer: void expand(int)>(i1);

     label1:
        $r2 = r0.<org.apache.http.util.ByteArrayBuffer: byte[] buffer>;

        $i5 = r0.<org.apache.http.util.ByteArrayBuffer: int len>;

        $b4 = (byte) i0;

        $r2[$i5] = $b4;

        r0.<org.apache.http.util.ByteArrayBuffer: int len> = i1;

        return;
    }

    public void append(org.apache.http.util.CharArrayBuffer, int, int)
    {
        org.apache.http.util.ByteArrayBuffer r0;
        org.apache.http.util.CharArrayBuffer r1;
        int i0, i1;
        char[] $r2;

        r0 := @this: org.apache.http.util.ByteArrayBuffer;

        r1 := @parameter0: org.apache.http.util.CharArrayBuffer;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: char[] buffer()>();

        virtualinvoke r0.<org.apache.http.util.ByteArrayBuffer: void append(char[],int,int)>($r2, i0, i1);

        return;
    }

    public void append(byte[], int, int)
    {
        org.apache.http.util.ByteArrayBuffer r0;
        byte[] r1, $r3, $r4;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.IndexOutOfBoundsException $r2;

        r0 := @this: org.apache.http.util.ByteArrayBuffer;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 != null goto label2;

     label1:
        return;

     label2:
        if i0 < 0 goto label3;

        $i3 = lengthof r1;

        if i0 > $i3 goto label3;

        if i1 < 0 goto label3;

        $i4 = i0 + i1;

        if $i4 < 0 goto label3;

        $i6 = i0 + i1;

        $i5 = lengthof r1;

        if $i6 <= $i5 goto label4;

     label3:
        $r2 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r2;

     label4:
        if i1 == 0 goto label1;

        $i7 = r0.<org.apache.http.util.ByteArrayBuffer: int len>;

        i2 = i1 + $i7;

        $r3 = r0.<org.apache.http.util.ByteArrayBuffer: byte[] buffer>;

        $i8 = lengthof $r3;

        if i2 <= $i8 goto label5;

        specialinvoke r0.<org.apache.http.util.ByteArrayBuffer: void expand(int)>(i2);

     label5:
        $r4 = r0.<org.apache.http.util.ByteArrayBuffer: byte[] buffer>;

        $i9 = r0.<org.apache.http.util.ByteArrayBuffer: int len>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, $r4, $i9, i1);

        r0.<org.apache.http.util.ByteArrayBuffer: int len> = i2;

        return;
    }

    public void append(char[], int, int)
    {
        org.apache.http.util.ByteArrayBuffer r0;
        char[] r1;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.IndexOutOfBoundsException $r2;
        byte[] $r3, $r4;
        char $c11;
        byte $b12;

        r0 := @this: org.apache.http.util.ByteArrayBuffer;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 != null goto label2;

     label1:
        return;

     label2:
        if i0 < 0 goto label3;

        $i6 = lengthof r1;

        if i0 > $i6 goto label3;

        if i1 < 0 goto label3;

        $i7 = i0 + i1;

        if $i7 < 0 goto label3;

        $i9 = i0 + i1;

        $i8 = lengthof r1;

        if $i9 <= $i8 goto label4;

     label3:
        $r2 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r2;

     label4:
        if i1 == 0 goto label1;

        i2 = r0.<org.apache.http.util.ByteArrayBuffer: int len>;

        i3 = i2 + i1;

        $r3 = r0.<org.apache.http.util.ByteArrayBuffer: byte[] buffer>;

        $i10 = lengthof $r3;

        if i3 <= $i10 goto label5;

        specialinvoke r0.<org.apache.http.util.ByteArrayBuffer: void expand(int)>(i3);

     label5:
        i4 = i0;

        i5 = i2;

     label6:
        if i5 >= i3 goto label7;

        $r4 = r0.<org.apache.http.util.ByteArrayBuffer: byte[] buffer>;

        $c11 = r1[i4];

        $b12 = (byte) $c11;

        $r4[i5] = $b12;

        i4 = i4 + 1;

        i5 = i5 + 1;

        goto label6;

     label7:
        r0.<org.apache.http.util.ByteArrayBuffer: int len> = i3;

        return;
    }

    public byte[] buffer()
    {
        org.apache.http.util.ByteArrayBuffer r0;
        byte[] $r1;

        r0 := @this: org.apache.http.util.ByteArrayBuffer;

        $r1 = r0.<org.apache.http.util.ByteArrayBuffer: byte[] buffer>;

        return $r1;
    }

    public int byteAt(int)
    {
        org.apache.http.util.ByteArrayBuffer r0;
        int i0;
        byte[] $r1;
        byte $b1;

        r0 := @this: org.apache.http.util.ByteArrayBuffer;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.http.util.ByteArrayBuffer: byte[] buffer>;

        $b1 = $r1[i0];

        return $b1;
    }

    public int capacity()
    {
        org.apache.http.util.ByteArrayBuffer r0;
        byte[] $r1;
        int $i0;

        r0 := @this: org.apache.http.util.ByteArrayBuffer;

        $r1 = r0.<org.apache.http.util.ByteArrayBuffer: byte[] buffer>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public void clear()
    {
        org.apache.http.util.ByteArrayBuffer r0;

        r0 := @this: org.apache.http.util.ByteArrayBuffer;

        r0.<org.apache.http.util.ByteArrayBuffer: int len> = 0;

        return;
    }

    public boolean isEmpty()
    {
        org.apache.http.util.ByteArrayBuffer r0;
        int $i0;

        r0 := @this: org.apache.http.util.ByteArrayBuffer;

        $i0 = r0.<org.apache.http.util.ByteArrayBuffer: int len>;

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isFull()
    {
        org.apache.http.util.ByteArrayBuffer r0;
        byte[] $r1;
        int $i0, $i1;

        r0 := @this: org.apache.http.util.ByteArrayBuffer;

        $i1 = r0.<org.apache.http.util.ByteArrayBuffer: int len>;

        $r1 = r0.<org.apache.http.util.ByteArrayBuffer: byte[] buffer>;

        $i0 = lengthof $r1;

        if $i1 != $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public int length()
    {
        org.apache.http.util.ByteArrayBuffer r0;
        int $i0;

        r0 := @this: org.apache.http.util.ByteArrayBuffer;

        $i0 = r0.<org.apache.http.util.ByteArrayBuffer: int len>;

        return $i0;
    }

    public void setLength(int)
    {
        org.apache.http.util.ByteArrayBuffer r0;
        int i0, $i1;
        java.lang.IndexOutOfBoundsException $r1;
        byte[] $r2;

        r0 := @this: org.apache.http.util.ByteArrayBuffer;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r2 = r0.<org.apache.http.util.ByteArrayBuffer: byte[] buffer>;

        $i1 = lengthof $r2;

        if i0 <= $i1 goto label2;

     label1:
        $r1 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r1;

     label2:
        r0.<org.apache.http.util.ByteArrayBuffer: int len> = i0;

        return;
    }

    public byte[] toByteArray()
    {
        org.apache.http.util.ByteArrayBuffer r0;
        byte[] r1, $r2;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.http.util.ByteArrayBuffer;

        $i0 = r0.<org.apache.http.util.ByteArrayBuffer: int len>;

        r1 = newarray (byte)[$i0];

        $i1 = r0.<org.apache.http.util.ByteArrayBuffer: int len>;

        if $i1 <= 0 goto label1;

        $r2 = r0.<org.apache.http.util.ByteArrayBuffer: byte[] buffer>;

        $i2 = r0.<org.apache.http.util.ByteArrayBuffer: int len>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, $i2);

     label1:
        return r1;
    }
}
