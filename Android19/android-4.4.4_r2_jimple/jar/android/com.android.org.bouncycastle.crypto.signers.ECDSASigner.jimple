public class com.android.org.bouncycastle.crypto.signers.ECDSASigner extends java.lang.Object implements com.android.org.bouncycastle.math.ec.ECConstants, com.android.org.bouncycastle.crypto.DSA
{
    com.android.org.bouncycastle.crypto.params.ECKeyParameters key;
    java.security.SecureRandom random;

    public void <init>()
    {
        com.android.org.bouncycastle.crypto.signers.ECDSASigner r0;

        r0 := @this: com.android.org.bouncycastle.crypto.signers.ECDSASigner;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private java.math.BigInteger calculateE(java.math.BigInteger, byte[])
    {
        com.android.org.bouncycastle.crypto.signers.ECDSASigner r0;
        java.math.BigInteger r1, $r3, $r4, $r5;
        byte[] r2;
        int i0, i1, $i2, $i3;

        r0 := @this: com.android.org.bouncycastle.crypto.signers.ECDSASigner;

        r1 := @parameter0: java.math.BigInteger;

        r2 := @parameter1: byte[];

        i0 = virtualinvoke r1.<java.math.BigInteger: int bitLength()>();

        $i2 = lengthof r2;

        i1 = 8 * $i2;

        if i0 < i1 goto label1;

        $r5 = new java.math.BigInteger;

        specialinvoke $r5.<java.math.BigInteger: void <init>(int,byte[])>(1, r2);

        return $r5;

     label1:
        $r3 = new java.math.BigInteger;

        specialinvoke $r3.<java.math.BigInteger: void <init>(int,byte[])>(1, r2);

        $i3 = i1 - i0;

        $r4 = virtualinvoke $r3.<java.math.BigInteger: java.math.BigInteger shiftRight(int)>($i3);

        return $r4;
    }

    public java.math.BigInteger[] generateSignature(byte[])
    {
        com.android.org.bouncycastle.crypto.signers.ECDSASigner r0;
        byte[] r1;
        java.math.BigInteger r2, r3, r4, r5, r6, r7, $r10, $r12, $r18, $r19, $r22, $r23, $r24, $r25, $r27;
        int i0, $i1;
        com.android.org.bouncycastle.crypto.params.ECKeyParameters $r8, $r13, $r21;
        com.android.org.bouncycastle.crypto.params.ECDomainParameters $r9, $r15;
        java.security.SecureRandom $r11;
        boolean $z0, $z1, $z2;
        com.android.org.bouncycastle.math.ec.ECPoint $r14, $r17;
        com.android.org.bouncycastle.math.ec.ECFieldElement $r16;
        com.android.org.bouncycastle.crypto.params.ECPrivateKeyParameters $r20;
        java.math.BigInteger[] $r26;

        r0 := @this: com.android.org.bouncycastle.crypto.signers.ECDSASigner;

        r1 := @parameter0: byte[];

        $r8 = r0.<com.android.org.bouncycastle.crypto.signers.ECDSASigner: com.android.org.bouncycastle.crypto.params.ECKeyParameters key>;

        $r9 = virtualinvoke $r8.<com.android.org.bouncycastle.crypto.params.ECKeyParameters: com.android.org.bouncycastle.crypto.params.ECDomainParameters getParameters()>();

        r2 = virtualinvoke $r9.<com.android.org.bouncycastle.crypto.params.ECDomainParameters: java.math.BigInteger getN()>();

        r3 = specialinvoke r0.<com.android.org.bouncycastle.crypto.signers.ECDSASigner: java.math.BigInteger calculateE(java.math.BigInteger,byte[])>(r2, r1);

     label1:
        i0 = virtualinvoke r2.<java.math.BigInteger: int bitLength()>();

     label2:
        $r10 = new java.math.BigInteger;

        $r11 = r0.<com.android.org.bouncycastle.crypto.signers.ECDSASigner: java.security.SecureRandom random>;

        specialinvoke $r10.<java.math.BigInteger: void <init>(int,java.util.Random)>(i0, $r11);

        r4 = $r10;

        $r12 = <com.android.org.bouncycastle.crypto.signers.ECDSASigner: java.math.BigInteger ZERO>;

        $z0 = virtualinvoke r4.<java.math.BigInteger: boolean equals(java.lang.Object)>($r12);

        if $z0 != 0 goto label2;

        $i1 = virtualinvoke r4.<java.math.BigInteger: int compareTo(java.math.BigInteger)>(r2);

        if $i1 >= 0 goto label2;

        $r13 = r0.<com.android.org.bouncycastle.crypto.signers.ECDSASigner: com.android.org.bouncycastle.crypto.params.ECKeyParameters key>;

        $r15 = virtualinvoke $r13.<com.android.org.bouncycastle.crypto.params.ECKeyParameters: com.android.org.bouncycastle.crypto.params.ECDomainParameters getParameters()>();

        $r14 = virtualinvoke $r15.<com.android.org.bouncycastle.crypto.params.ECDomainParameters: com.android.org.bouncycastle.math.ec.ECPoint getG()>();

        $r17 = virtualinvoke $r14.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECPoint multiply(java.math.BigInteger)>(r4);

        $r16 = virtualinvoke $r17.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECFieldElement getX()>();

        $r18 = virtualinvoke $r16.<com.android.org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        r5 = virtualinvoke $r18.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r2);

        $r19 = <com.android.org.bouncycastle.crypto.signers.ECDSASigner: java.math.BigInteger ZERO>;

        $z1 = virtualinvoke r5.<java.math.BigInteger: boolean equals(java.lang.Object)>($r19);

        if $z1 != 0 goto label2;

        $r21 = r0.<com.android.org.bouncycastle.crypto.signers.ECDSASigner: com.android.org.bouncycastle.crypto.params.ECKeyParameters key>;

        $r20 = (com.android.org.bouncycastle.crypto.params.ECPrivateKeyParameters) $r21;

        r6 = virtualinvoke $r20.<com.android.org.bouncycastle.crypto.params.ECPrivateKeyParameters: java.math.BigInteger getD()>();

        $r22 = virtualinvoke r4.<java.math.BigInteger: java.math.BigInteger modInverse(java.math.BigInteger)>(r2);

        $r24 = virtualinvoke r6.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r5);

        $r25 = virtualinvoke r3.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r24);

        $r23 = virtualinvoke $r22.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r25);

        r7 = virtualinvoke $r23.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r2);

        $r27 = <com.android.org.bouncycastle.crypto.signers.ECDSASigner: java.math.BigInteger ZERO>;

        $z2 = virtualinvoke r7.<java.math.BigInteger: boolean equals(java.lang.Object)>($r27);

        if $z2 != 0 goto label1;

        $r26 = newarray (java.math.BigInteger)[2];

        $r26[0] = r5;

        $r26[1] = r7;

        return $r26;
    }

    public void init(boolean, com.android.org.bouncycastle.crypto.CipherParameters)
    {
        com.android.org.bouncycastle.crypto.signers.ECDSASigner r0;
        boolean z0, $z1;
        com.android.org.bouncycastle.crypto.CipherParameters r1, $r7;
        com.android.org.bouncycastle.crypto.params.ParametersWithRandom r2;
        com.android.org.bouncycastle.crypto.params.ECPublicKeyParameters $r3;
        java.security.SecureRandom $r4, $r6;
        com.android.org.bouncycastle.crypto.params.ECPrivateKeyParameters $r5, $r8;

        r0 := @this: com.android.org.bouncycastle.crypto.signers.ECDSASigner;

        z0 := @parameter0: boolean;

        r1 := @parameter1: com.android.org.bouncycastle.crypto.CipherParameters;

        if z0 == 0 goto label2;

        $z1 = r1 instanceof com.android.org.bouncycastle.crypto.params.ParametersWithRandom;

        if $z1 == 0 goto label1;

        r2 = (com.android.org.bouncycastle.crypto.params.ParametersWithRandom) r1;

        $r6 = virtualinvoke r2.<com.android.org.bouncycastle.crypto.params.ParametersWithRandom: java.security.SecureRandom getRandom()>();

        r0.<com.android.org.bouncycastle.crypto.signers.ECDSASigner: java.security.SecureRandom random> = $r6;

        $r7 = virtualinvoke r2.<com.android.org.bouncycastle.crypto.params.ParametersWithRandom: com.android.org.bouncycastle.crypto.CipherParameters getParameters()>();

        $r8 = (com.android.org.bouncycastle.crypto.params.ECPrivateKeyParameters) $r7;

        r0.<com.android.org.bouncycastle.crypto.signers.ECDSASigner: com.android.org.bouncycastle.crypto.params.ECKeyParameters key> = $r8;

        return;

     label1:
        $r4 = new java.security.SecureRandom;

        specialinvoke $r4.<java.security.SecureRandom: void <init>()>();

        r0.<com.android.org.bouncycastle.crypto.signers.ECDSASigner: java.security.SecureRandom random> = $r4;

        $r5 = (com.android.org.bouncycastle.crypto.params.ECPrivateKeyParameters) r1;

        r0.<com.android.org.bouncycastle.crypto.signers.ECDSASigner: com.android.org.bouncycastle.crypto.params.ECKeyParameters key> = $r5;

        return;

     label2:
        $r3 = (com.android.org.bouncycastle.crypto.params.ECPublicKeyParameters) r1;

        r0.<com.android.org.bouncycastle.crypto.signers.ECDSASigner: com.android.org.bouncycastle.crypto.params.ECKeyParameters key> = $r3;

        return;
    }

    public boolean verifySignature(byte[], java.math.BigInteger, java.math.BigInteger)
    {
        com.android.org.bouncycastle.crypto.signers.ECDSASigner r0;
        byte[] r1;
        java.math.BigInteger r2, r3, r4, r5, r6, r7, r8, $r12, $r13, $r14, $r15, $r22, $r23;
        com.android.org.bouncycastle.math.ec.ECPoint r9, $r17, $r21;
        com.android.org.bouncycastle.crypto.params.ECKeyParameters $r10, $r16, $r20;
        com.android.org.bouncycastle.crypto.params.ECDomainParameters $r11, $r18;
        int $i0, $i1, $i2, $i3;
        com.android.org.bouncycastle.crypto.params.ECPublicKeyParameters $r19;
        boolean $z0, $z1;
        com.android.org.bouncycastle.math.ec.ECFieldElement $r24;

        r0 := @this: com.android.org.bouncycastle.crypto.signers.ECDSASigner;

        r1 := @parameter0: byte[];

        r2 := @parameter1: java.math.BigInteger;

        r3 := @parameter2: java.math.BigInteger;

        $r10 = r0.<com.android.org.bouncycastle.crypto.signers.ECDSASigner: com.android.org.bouncycastle.crypto.params.ECKeyParameters key>;

        $r11 = virtualinvoke $r10.<com.android.org.bouncycastle.crypto.params.ECKeyParameters: com.android.org.bouncycastle.crypto.params.ECDomainParameters getParameters()>();

        r4 = virtualinvoke $r11.<com.android.org.bouncycastle.crypto.params.ECDomainParameters: java.math.BigInteger getN()>();

        r5 = specialinvoke r0.<com.android.org.bouncycastle.crypto.signers.ECDSASigner: java.math.BigInteger calculateE(java.math.BigInteger,byte[])>(r4, r1);

        $r12 = <com.android.org.bouncycastle.crypto.signers.ECDSASigner: java.math.BigInteger ONE>;

        $i0 = virtualinvoke r2.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r12);

        if $i0 < 0 goto label1;

        $i1 = virtualinvoke r2.<java.math.BigInteger: int compareTo(java.math.BigInteger)>(r4);

        if $i1 < 0 goto label2;

     label1:
        return 0;

     label2:
        $r13 = <com.android.org.bouncycastle.crypto.signers.ECDSASigner: java.math.BigInteger ONE>;

        $i3 = virtualinvoke r3.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r13);

        if $i3 < 0 goto label3;

        $i2 = virtualinvoke r3.<java.math.BigInteger: int compareTo(java.math.BigInteger)>(r4);

        if $i2 < 0 goto label4;

     label3:
        return 0;

     label4:
        r6 = virtualinvoke r3.<java.math.BigInteger: java.math.BigInteger modInverse(java.math.BigInteger)>(r4);

        $r14 = virtualinvoke r5.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r6);

        r7 = virtualinvoke $r14.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r4);

        $r15 = virtualinvoke r2.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r6);

        r8 = virtualinvoke $r15.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r4);

        $r16 = r0.<com.android.org.bouncycastle.crypto.signers.ECDSASigner: com.android.org.bouncycastle.crypto.params.ECKeyParameters key>;

        $r18 = virtualinvoke $r16.<com.android.org.bouncycastle.crypto.params.ECKeyParameters: com.android.org.bouncycastle.crypto.params.ECDomainParameters getParameters()>();

        $r17 = virtualinvoke $r18.<com.android.org.bouncycastle.crypto.params.ECDomainParameters: com.android.org.bouncycastle.math.ec.ECPoint getG()>();

        $r20 = r0.<com.android.org.bouncycastle.crypto.signers.ECDSASigner: com.android.org.bouncycastle.crypto.params.ECKeyParameters key>;

        $r19 = (com.android.org.bouncycastle.crypto.params.ECPublicKeyParameters) $r20;

        $r21 = virtualinvoke $r19.<com.android.org.bouncycastle.crypto.params.ECPublicKeyParameters: com.android.org.bouncycastle.math.ec.ECPoint getQ()>();

        r9 = staticinvoke <com.android.org.bouncycastle.math.ec.ECAlgorithms: com.android.org.bouncycastle.math.ec.ECPoint sumOfTwoMultiplies(com.android.org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,com.android.org.bouncycastle.math.ec.ECPoint,java.math.BigInteger)>($r17, r7, $r21, r8);

        $z0 = virtualinvoke r9.<com.android.org.bouncycastle.math.ec.ECPoint: boolean isInfinity()>();

        if $z0 == 0 goto label5;

        return 0;

     label5:
        $r24 = virtualinvoke r9.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECFieldElement getX()>();

        $r22 = virtualinvoke $r24.<com.android.org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r23 = virtualinvoke $r22.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r4);

        $z1 = virtualinvoke $r23.<java.math.BigInteger: boolean equals(java.lang.Object)>(r2);

        return $z1;
    }
}
