public class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat extends java.lang.Object implements java.io.Externalizable
{
    private static final long serialVersionUID;
    private java.lang.String domesticCarrierCodeFormattingRule_;
    private java.lang.String format_;
    private boolean hasDomesticCarrierCodeFormattingRule;
    private boolean hasFormat;
    private boolean hasNationalPrefixFormattingRule;
    private boolean hasNationalPrefixOptionalWhenFormatting;
    private boolean hasPattern;
    private java.util.List leadingDigitsPattern_;
    private java.lang.String nationalPrefixFormattingRule_;
    private boolean nationalPrefixOptionalWhenFormatting_;
    private java.lang.String pattern_;

    public void <init>()
    {
        com.android.i18n.phonenumbers.Phonemetadata$NumberFormat r0;
        java.util.ArrayList $r1;

        r0 := @this: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.lang.String pattern_> = "";

        r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.lang.String format_> = "";

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.util.List leadingDigitsPattern_> = $r1;

        r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.lang.String nationalPrefixFormattingRule_> = "";

        r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: boolean nationalPrefixOptionalWhenFormatting_> = 0;

        r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.lang.String domesticCarrierCodeFormattingRule_> = "";

        return;
    }

    public static com.android.i18n.phonenumbers.Phonemetadata$NumberFormat$Builder newBuilder()
    {
        com.android.i18n.phonenumbers.Phonemetadata$NumberFormat$Builder $r0;

        $r0 = new com.android.i18n.phonenumbers.Phonemetadata$NumberFormat$Builder;

        specialinvoke $r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat$Builder: void <init>()>();

        return $r0;
    }

    public com.android.i18n.phonenumbers.Phonemetadata$NumberFormat addLeadingDigitsPattern(java.lang.String)
    {
        com.android.i18n.phonenumbers.Phonemetadata$NumberFormat r0;
        java.lang.String r1;
        java.util.List $r2;
        java.lang.NullPointerException $r3;

        r0 := @this: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>()>();

        throw $r3;

     label1:
        $r2 = r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.util.List leadingDigitsPattern_>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return r0;
    }

    public com.android.i18n.phonenumbers.Phonemetadata$NumberFormat clearNationalPrefixFormattingRule()
    {
        com.android.i18n.phonenumbers.Phonemetadata$NumberFormat r0;

        r0 := @this: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat;

        r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: boolean hasNationalPrefixFormattingRule> = 0;

        r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.lang.String nationalPrefixFormattingRule_> = "";

        return r0;
    }

    public java.lang.String getDomesticCarrierCodeFormattingRule()
    {
        com.android.i18n.phonenumbers.Phonemetadata$NumberFormat r0;
        java.lang.String $r1;

        r0 := @this: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat;

        $r1 = r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.lang.String domesticCarrierCodeFormattingRule_>;

        return $r1;
    }

    public java.lang.String getFormat()
    {
        com.android.i18n.phonenumbers.Phonemetadata$NumberFormat r0;
        java.lang.String $r1;

        r0 := @this: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat;

        $r1 = r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.lang.String format_>;

        return $r1;
    }

    public java.lang.String getLeadingDigitsPattern(int)
    {
        com.android.i18n.phonenumbers.Phonemetadata$NumberFormat r0;
        int i0;
        java.util.List $r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @this: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.util.List leadingDigitsPattern_>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    public java.lang.String getNationalPrefixFormattingRule()
    {
        com.android.i18n.phonenumbers.Phonemetadata$NumberFormat r0;
        java.lang.String $r1;

        r0 := @this: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat;

        $r1 = r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.lang.String nationalPrefixFormattingRule_>;

        return $r1;
    }

    public java.lang.String getPattern()
    {
        com.android.i18n.phonenumbers.Phonemetadata$NumberFormat r0;
        java.lang.String $r1;

        r0 := @this: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat;

        $r1 = r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.lang.String pattern_>;

        return $r1;
    }

    public boolean hasDomesticCarrierCodeFormattingRule()
    {
        com.android.i18n.phonenumbers.Phonemetadata$NumberFormat r0;
        boolean $z0;

        r0 := @this: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat;

        $z0 = r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: boolean hasDomesticCarrierCodeFormattingRule>;

        return $z0;
    }

    public boolean hasFormat()
    {
        com.android.i18n.phonenumbers.Phonemetadata$NumberFormat r0;
        boolean $z0;

        r0 := @this: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat;

        $z0 = r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: boolean hasFormat>;

        return $z0;
    }

    public boolean hasNationalPrefixFormattingRule()
    {
        com.android.i18n.phonenumbers.Phonemetadata$NumberFormat r0;
        boolean $z0;

        r0 := @this: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat;

        $z0 = r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: boolean hasNationalPrefixFormattingRule>;

        return $z0;
    }

    public boolean hasNationalPrefixOptionalWhenFormatting()
    {
        com.android.i18n.phonenumbers.Phonemetadata$NumberFormat r0;
        boolean $z0;

        r0 := @this: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat;

        $z0 = r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: boolean hasNationalPrefixOptionalWhenFormatting>;

        return $z0;
    }

    public boolean hasPattern()
    {
        com.android.i18n.phonenumbers.Phonemetadata$NumberFormat r0;
        boolean $z0;

        r0 := @this: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat;

        $z0 = r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: boolean hasPattern>;

        return $z0;
    }

    public boolean isNationalPrefixOptionalWhenFormatting()
    {
        com.android.i18n.phonenumbers.Phonemetadata$NumberFormat r0;
        boolean $z0;

        r0 := @this: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat;

        $z0 = r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: boolean nationalPrefixOptionalWhenFormatting_>;

        return $z0;
    }

    public java.util.List leadingDigitPatterns()
    {
        com.android.i18n.phonenumbers.Phonemetadata$NumberFormat r0;
        java.util.List $r1;

        r0 := @this: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat;

        $r1 = r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.util.List leadingDigitsPattern_>;

        return $r1;
    }

    public int leadingDigitsPatternSize()
    {
        com.android.i18n.phonenumbers.Phonemetadata$NumberFormat r0;
        java.util.List $r1;
        int $i0;

        r0 := @this: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat;

        $r1 = r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.util.List leadingDigitsPattern_>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public com.android.i18n.phonenumbers.Phonemetadata$NumberFormat mergeFrom(com.android.i18n.phonenumbers.Phonemetadata$NumberFormat)
    {
        com.android.i18n.phonenumbers.Phonemetadata$NumberFormat r0, r1;
        int i0, i1;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String $r3, $r5, $r7, $r8, $r10;

        r0 := @this: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat;

        r1 := @parameter0: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat;

        $z0 = virtualinvoke r1.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: boolean hasPattern()>();

        if $z0 == 0 goto label1;

        $r10 = virtualinvoke r1.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.lang.String getPattern()>();

        virtualinvoke r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setPattern(java.lang.String)>($r10);

     label1:
        $z1 = virtualinvoke r1.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: boolean hasFormat()>();

        if $z1 == 0 goto label2;

        $r8 = virtualinvoke r1.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.lang.String getFormat()>();

        virtualinvoke r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setFormat(java.lang.String)>($r8);

     label2:
        i0 = virtualinvoke r1.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: int leadingDigitsPatternSize()>();

        i1 = 0;

     label3:
        if i1 >= i0 goto label4;

        $r7 = virtualinvoke r1.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.lang.String getLeadingDigitsPattern(int)>(i1);

        virtualinvoke r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat addLeadingDigitsPattern(java.lang.String)>($r7);

        i1 = i1 + 1;

        goto label3;

     label4:
        $z2 = virtualinvoke r1.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: boolean hasNationalPrefixFormattingRule()>();

        if $z2 == 0 goto label5;

        $r5 = virtualinvoke r1.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.lang.String getNationalPrefixFormattingRule()>();

        virtualinvoke r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setNationalPrefixFormattingRule(java.lang.String)>($r5);

     label5:
        $z3 = virtualinvoke r1.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: boolean hasDomesticCarrierCodeFormattingRule()>();

        if $z3 == 0 goto label6;

        $r3 = virtualinvoke r1.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.lang.String getDomesticCarrierCodeFormattingRule()>();

        virtualinvoke r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setDomesticCarrierCodeFormattingRule(java.lang.String)>($r3);

     label6:
        $z4 = virtualinvoke r1.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: boolean isNationalPrefixOptionalWhenFormatting()>();

        virtualinvoke r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setNationalPrefixOptionalWhenFormatting(boolean)>($z4);

        return r0;
    }

    public void readExternal(java.io.ObjectInput) throws java.io.IOException
    {
        com.android.i18n.phonenumbers.Phonemetadata$NumberFormat r0;
        java.io.ObjectInput r1;
        int i0, i1;
        java.lang.String $r2, $r4, $r7, $r8, $r12;
        boolean $z0, $z1, $z2;
        java.util.List $r10;

        r0 := @this: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat;

        r1 := @parameter0: java.io.ObjectInput;

        $r2 = interfaceinvoke r1.<java.io.ObjectInput: java.lang.String readUTF()>();

        virtualinvoke r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setPattern(java.lang.String)>($r2);

        $r4 = interfaceinvoke r1.<java.io.ObjectInput: java.lang.String readUTF()>();

        virtualinvoke r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setFormat(java.lang.String)>($r4);

        i0 = interfaceinvoke r1.<java.io.ObjectInput: int readInt()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r10 = r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.util.List leadingDigitsPattern_>;

        $r12 = interfaceinvoke r1.<java.io.ObjectInput: java.lang.String readUTF()>();

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r12);

        i1 = i1 + 1;

        goto label1;

     label2:
        $z0 = interfaceinvoke r1.<java.io.ObjectInput: boolean readBoolean()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke r1.<java.io.ObjectInput: java.lang.String readUTF()>();

        virtualinvoke r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setNationalPrefixFormattingRule(java.lang.String)>($r8);

     label3:
        $z1 = interfaceinvoke r1.<java.io.ObjectInput: boolean readBoolean()>();

        if $z1 == 0 goto label4;

        $r7 = interfaceinvoke r1.<java.io.ObjectInput: java.lang.String readUTF()>();

        virtualinvoke r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setDomesticCarrierCodeFormattingRule(java.lang.String)>($r7);

     label4:
        $z2 = interfaceinvoke r1.<java.io.ObjectInput: boolean readBoolean()>();

        virtualinvoke r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setNationalPrefixOptionalWhenFormatting(boolean)>($z2);

        return;
    }

    public com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setDomesticCarrierCodeFormattingRule(java.lang.String)
    {
        com.android.i18n.phonenumbers.Phonemetadata$NumberFormat r0;
        java.lang.String r1;

        r0 := @this: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat;

        r1 := @parameter0: java.lang.String;

        r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: boolean hasDomesticCarrierCodeFormattingRule> = 1;

        r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.lang.String domesticCarrierCodeFormattingRule_> = r1;

        return r0;
    }

    public com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setFormat(java.lang.String)
    {
        com.android.i18n.phonenumbers.Phonemetadata$NumberFormat r0;
        java.lang.String r1;

        r0 := @this: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat;

        r1 := @parameter0: java.lang.String;

        r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: boolean hasFormat> = 1;

        r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.lang.String format_> = r1;

        return r0;
    }

    public com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setNationalPrefixFormattingRule(java.lang.String)
    {
        com.android.i18n.phonenumbers.Phonemetadata$NumberFormat r0;
        java.lang.String r1;

        r0 := @this: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat;

        r1 := @parameter0: java.lang.String;

        r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: boolean hasNationalPrefixFormattingRule> = 1;

        r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.lang.String nationalPrefixFormattingRule_> = r1;

        return r0;
    }

    public com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setNationalPrefixOptionalWhenFormatting(boolean)
    {
        com.android.i18n.phonenumbers.Phonemetadata$NumberFormat r0;
        boolean z0;

        r0 := @this: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat;

        z0 := @parameter0: boolean;

        r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: boolean hasNationalPrefixOptionalWhenFormatting> = 1;

        r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: boolean nationalPrefixOptionalWhenFormatting_> = z0;

        return r0;
    }

    public com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setPattern(java.lang.String)
    {
        com.android.i18n.phonenumbers.Phonemetadata$NumberFormat r0;
        java.lang.String r1;

        r0 := @this: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat;

        r1 := @parameter0: java.lang.String;

        r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: boolean hasPattern> = 1;

        r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.lang.String pattern_> = r1;

        return r0;
    }

    public void writeExternal(java.io.ObjectOutput) throws java.io.IOException
    {
        com.android.i18n.phonenumbers.Phonemetadata$NumberFormat r0;
        java.io.ObjectOutput r1;
        int i0, i1;
        java.lang.String $r2, $r3, $r4, $r5, $r8;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.List $r6;
        java.lang.Object $r7;

        r0 := @this: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat;

        r1 := @parameter0: java.io.ObjectOutput;

        $r2 = r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.lang.String pattern_>;

        interfaceinvoke r1.<java.io.ObjectOutput: void writeUTF(java.lang.String)>($r2);

        $r3 = r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.lang.String format_>;

        interfaceinvoke r1.<java.io.ObjectOutput: void writeUTF(java.lang.String)>($r3);

        i0 = virtualinvoke r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: int leadingDigitsPatternSize()>();

        interfaceinvoke r1.<java.io.ObjectOutput: void writeInt(int)>(i0);

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r6 = r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.util.List leadingDigitsPattern_>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i1);

        $r8 = (java.lang.String) $r7;

        interfaceinvoke r1.<java.io.ObjectOutput: void writeUTF(java.lang.String)>($r8);

        i1 = i1 + 1;

        goto label1;

     label2:
        $z0 = r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: boolean hasNationalPrefixFormattingRule>;

        interfaceinvoke r1.<java.io.ObjectOutput: void writeBoolean(boolean)>($z0);

        $z1 = r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: boolean hasNationalPrefixFormattingRule>;

        if $z1 == 0 goto label3;

        $r5 = r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.lang.String nationalPrefixFormattingRule_>;

        interfaceinvoke r1.<java.io.ObjectOutput: void writeUTF(java.lang.String)>($r5);

     label3:
        $z2 = r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: boolean hasDomesticCarrierCodeFormattingRule>;

        interfaceinvoke r1.<java.io.ObjectOutput: void writeBoolean(boolean)>($z2);

        $z3 = r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: boolean hasDomesticCarrierCodeFormattingRule>;

        if $z3 == 0 goto label4;

        $r4 = r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.lang.String domesticCarrierCodeFormattingRule_>;

        interfaceinvoke r1.<java.io.ObjectOutput: void writeUTF(java.lang.String)>($r4);

     label4:
        $z4 = r0.<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: boolean nationalPrefixOptionalWhenFormatting_>;

        interfaceinvoke r1.<java.io.ObjectOutput: void writeBoolean(boolean)>($z4);

        return;
    }

    public static void <clinit>()
    {
        <com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: long serialVersionUID> = 1L;

        return;
    }
}
