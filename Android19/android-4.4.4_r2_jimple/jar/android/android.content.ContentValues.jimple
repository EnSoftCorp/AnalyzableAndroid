public final class android.content.ContentValues extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    public static final java.lang.String TAG;
    private java.util.HashMap mValues;

    static void <clinit>()
    {
        android.content.ContentValues$1 $r0;

        <android.content.ContentValues: java.lang.String TAG> = "ContentValues";

        $r0 = new android.content.ContentValues$1;

        specialinvoke $r0.<android.content.ContentValues$1: void <init>()>();

        <android.content.ContentValues: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>()
    {
        android.content.ContentValues r0;
        java.util.HashMap $r1;

        r0 := @this: android.content.ContentValues;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>(int)>(8);

        r0.<android.content.ContentValues: java.util.HashMap mValues> = $r1;

        return;
    }

    public void <init>(int)
    {
        android.content.ContentValues r0;
        int i0;
        java.util.HashMap $r1;

        r0 := @this: android.content.ContentValues;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>(int,float)>(i0, 1.0F);

        r0.<android.content.ContentValues: java.util.HashMap mValues> = $r1;

        return;
    }

    public void <init>(android.content.ContentValues)
    {
        android.content.ContentValues r0, r1;
        java.util.HashMap $r2, $r3;

        r0 := @this: android.content.ContentValues;

        r1 := @parameter0: android.content.ContentValues;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        $r3 = r1.<android.content.ContentValues: java.util.HashMap mValues>;

        specialinvoke $r2.<java.util.HashMap: void <init>(java.util.Map)>($r3);

        r0.<android.content.ContentValues: java.util.HashMap mValues> = $r2;

        return;
    }

    private void <init>(java.util.HashMap)
    {
        android.content.ContentValues r0;
        java.util.HashMap r1;

        r0 := @this: android.content.ContentValues;

        r1 := @parameter0: java.util.HashMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.ContentValues: java.util.HashMap mValues> = r1;

        return;
    }

    void <init>(java.util.HashMap, android.content.ContentValues$1)
    {
        android.content.ContentValues r0;
        java.util.HashMap r1;
        android.content.ContentValues$1 r2;

        r0 := @this: android.content.ContentValues;

        r1 := @parameter0: java.util.HashMap;

        r2 := @parameter1: android.content.ContentValues$1;

        specialinvoke r0.<android.content.ContentValues: void <init>(java.util.HashMap)>(r1);

        return;
    }

    public void clear()
    {
        android.content.ContentValues r0;
        java.util.HashMap $r1;

        r0 := @this: android.content.ContentValues;

        $r1 = r0.<android.content.ContentValues: java.util.HashMap mValues>;

        virtualinvoke $r1.<java.util.HashMap: void clear()>();

        return;
    }

    public boolean containsKey(java.lang.String)
    {
        android.content.ContentValues r0;
        java.lang.String r1;
        java.util.HashMap $r2;
        boolean $z0;

        r0 := @this: android.content.ContentValues;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.content.ContentValues: java.util.HashMap mValues>;

        $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public int describeContents()
    {
        android.content.ContentValues r0;

        r0 := @this: android.content.ContentValues;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        android.content.ContentValues r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.util.HashMap $r3, $r4;

        r0 := @this: android.content.ContentValues;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof android.content.ContentValues;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r4 = r0.<android.content.ContentValues: java.util.HashMap mValues>;

        $r2 = (android.content.ContentValues) r1;

        $r3 = $r2.<android.content.ContentValues: java.util.HashMap mValues>;

        $z1 = virtualinvoke $r4.<java.util.HashMap: boolean equals(java.lang.Object)>($r3);

        return $z1;
    }

    public java.lang.Object get(java.lang.String)
    {
        android.content.ContentValues r0;
        java.lang.String r1;
        java.util.HashMap $r2;
        java.lang.Object $r3;

        r0 := @this: android.content.ContentValues;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.content.ContentValues: java.util.HashMap mValues>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        return $r3;
    }

    public java.lang.Boolean getAsBoolean(java.lang.String)
    {
        android.content.ContentValues r0;
        java.lang.String r1, $r12, $r14;
        java.lang.Object r2;
        java.lang.ClassCastException r3, $r6;
        boolean z0, $z1, $z2;
        java.lang.Boolean r4, $r15, $r16;
        java.util.HashMap $r5;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11;
        int $i1;
        java.lang.Number $r13;

        r0 := @this: android.content.ContentValues;

        r1 := @parameter0: java.lang.String;

        $r5 = r0.<android.content.ContentValues: java.util.HashMap mValues>;

        r2 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

     label1:
        r4 = (java.lang.Boolean) r2;

     label2:
        return r4;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        $z1 = r2 instanceof java.lang.CharSequence;

        if $z1 == 0 goto label4;

        $r14 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r14);

        return $r16;

     label4:
        $z2 = r2 instanceof java.lang.Number;

        if $z2 == 0 goto label7;

        $r13 = (java.lang.Number) r2;

        $i1 = virtualinvoke $r13.<java.lang.Number: int intValue()>();

        if $i1 == 0 goto label6;

        z0 = 1;

     label5:
        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        return $r15;

     label6:
        z0 = 0;

        goto label5;

     label7:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot cast value for ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to a Boolean: ");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ContentValues", $r12, r3);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public java.lang.Byte getAsByte(java.lang.String)
    {
        android.content.ContentValues r0;
        java.lang.String r1, $r15, $r17, $r22;
        java.lang.Object r2;
        java.lang.Byte r3, r6, r7;
        java.lang.ClassCastException r4, $r10;
        java.util.HashMap $r8;
        java.lang.Number $r9;
        byte $b0;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r16, $r19, $r20, $r21, $r23, $r24;
        boolean $z0;
        java.lang.NumberFormatException $r18;

        r0 := @this: android.content.ContentValues;

        r1 := @parameter0: java.lang.String;

        $r8 = r0.<android.content.ContentValues: java.util.HashMap mValues>;

        r2 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 == null goto label4;

     label1:
        $r9 = (java.lang.Number) r2;

        $b0 = virtualinvoke $r9.<java.lang.Number: byte byteValue()>();

        r7 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

     label2:
        r3 = r7;

     label3:
        return r3;

     label4:
        r3 = null;

        goto label3;

     label5:
        $r10 := @caughtexception;

        r4 = $r10;

        $z0 = r2 instanceof java.lang.CharSequence;

        if $z0 == 0 goto label9;

     label6:
        $r17 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        r6 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(java.lang.String)>($r17);

     label7:
        return r6;

     label8:
        $r18 := @caughtexception;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot parse Byte value for ");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at key ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ContentValues", $r22);

        return null;

     label9:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot cast value for ");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to a Byte: ");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ContentValues", $r15, r4);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label5;
        catch java.lang.NumberFormatException from label6 to label7 with label8;
    }

    public byte[] getAsByteArray(java.lang.String)
    {
        android.content.ContentValues r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.util.HashMap $r3;
        boolean $z0;
        byte[] $r4, $r5;

        r0 := @this: android.content.ContentValues;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<android.content.ContentValues: java.util.HashMap mValues>;

        r2 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $z0 = r2 instanceof byte[];

        if $z0 == 0 goto label1;

        $r4 = (byte[]) r2;

        $r5 = (byte[]) $r4;

        return $r5;

     label1:
        return null;
    }

    public java.lang.Double getAsDouble(java.lang.String)
    {
        android.content.ContentValues r0;
        java.lang.String r1, $r15, $r17, $r22;
        java.lang.Object r2;
        java.lang.Double r3, r6, r7;
        java.lang.ClassCastException r4, $r10;
        java.util.HashMap $r8;
        java.lang.Number $r9;
        double $d0;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r16, $r19, $r20, $r21, $r23, $r24;
        boolean $z0;
        java.lang.NumberFormatException $r18;

        r0 := @this: android.content.ContentValues;

        r1 := @parameter0: java.lang.String;

        $r8 = r0.<android.content.ContentValues: java.util.HashMap mValues>;

        r2 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 == null goto label4;

     label1:
        $r9 = (java.lang.Number) r2;

        $d0 = virtualinvoke $r9.<java.lang.Number: double doubleValue()>();

        r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

     label2:
        r3 = r7;

     label3:
        return r3;

     label4:
        r3 = null;

        goto label3;

     label5:
        $r10 := @caughtexception;

        r4 = $r10;

        $z0 = r2 instanceof java.lang.CharSequence;

        if $z0 == 0 goto label9;

     label6:
        $r17 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>($r17);

     label7:
        return r6;

     label8:
        $r18 := @caughtexception;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot parse Double value for ");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at key ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ContentValues", $r22);

        return null;

     label9:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot cast value for ");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to a Double: ");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ContentValues", $r15, r4);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label5;
        catch java.lang.NumberFormatException from label6 to label7 with label8;
    }

    public java.lang.Float getAsFloat(java.lang.String)
    {
        android.content.ContentValues r0;
        java.lang.String r1, $r16, $r23, $r24;
        java.lang.Object r2;
        java.lang.Float r3, r6, r7;
        java.lang.ClassCastException r4, $r17;
        java.util.HashMap $r8;
        java.lang.Number $r9;
        float $f0;
        java.lang.NumberFormatException $r10;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r15, $r18, $r19, $r20, $r21, $r22;
        boolean $z0;

        r0 := @this: android.content.ContentValues;

        r1 := @parameter0: java.lang.String;

        $r8 = r0.<android.content.ContentValues: java.util.HashMap mValues>;

        r2 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 == null goto label4;

     label1:
        $r9 = (java.lang.Number) r2;

        $f0 = virtualinvoke $r9.<java.lang.Number: float floatValue()>();

        r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

     label2:
        r3 = r7;

     label3:
        return r3;

     label4:
        r3 = null;

        goto label3;

     label5:
        $r17 := @caughtexception;

        r4 = $r17;

        $z0 = r2 instanceof java.lang.CharSequence;

        if $z0 == 0 goto label9;

     label6:
        $r23 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>($r23);

     label7:
        return r6;

     label8:
        $r10 := @caughtexception;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot parse Float value for ");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at key ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ContentValues", $r16);

        return null;

     label9:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot cast value for ");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to a Float: ");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ContentValues", $r24, r4);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label5;
        catch java.lang.NumberFormatException from label6 to label7 with label8;
    }

    public java.lang.Integer getAsInteger(java.lang.String)
    {
        android.content.ContentValues r0;
        java.lang.String r1, $r16, $r23, $r24;
        java.lang.Object r2;
        java.lang.Integer r3, r6, r7;
        java.lang.ClassCastException r4, $r17;
        java.util.HashMap $r8;
        java.lang.Number $r9;
        int $i0;
        java.lang.NumberFormatException $r10;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r15, $r18, $r19, $r20, $r21, $r22;
        boolean $z0;

        r0 := @this: android.content.ContentValues;

        r1 := @parameter0: java.lang.String;

        $r8 = r0.<android.content.ContentValues: java.util.HashMap mValues>;

        r2 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 == null goto label4;

     label1:
        $r9 = (java.lang.Number) r2;

        $i0 = virtualinvoke $r9.<java.lang.Number: int intValue()>();

        r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label2:
        r3 = r7;

     label3:
        return r3;

     label4:
        r3 = null;

        goto label3;

     label5:
        $r17 := @caughtexception;

        r4 = $r17;

        $z0 = r2 instanceof java.lang.CharSequence;

        if $z0 == 0 goto label9;

     label6:
        $r23 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r23);

     label7:
        return r6;

     label8:
        $r10 := @caughtexception;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot parse Integer value for ");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at key ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ContentValues", $r16);

        return null;

     label9:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot cast value for ");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to a Integer: ");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ContentValues", $r24, r4);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label5;
        catch java.lang.NumberFormatException from label6 to label7 with label8;
    }

    public java.lang.Long getAsLong(java.lang.String)
    {
        android.content.ContentValues r0;
        java.lang.String r1, $r16, $r23, $r24;
        java.lang.Object r2;
        java.lang.Long r3, r6, r7;
        java.lang.ClassCastException r4, $r17;
        java.util.HashMap $r8;
        java.lang.Number $r9;
        long $l0;
        java.lang.NumberFormatException $r10;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r15, $r18, $r19, $r20, $r21, $r22;
        boolean $z0;

        r0 := @this: android.content.ContentValues;

        r1 := @parameter0: java.lang.String;

        $r8 = r0.<android.content.ContentValues: java.util.HashMap mValues>;

        r2 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 == null goto label4;

     label1:
        $r9 = (java.lang.Number) r2;

        $l0 = virtualinvoke $r9.<java.lang.Number: long longValue()>();

        r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

     label2:
        r3 = r7;

     label3:
        return r3;

     label4:
        r3 = null;

        goto label3;

     label5:
        $r17 := @caughtexception;

        r4 = $r17;

        $z0 = r2 instanceof java.lang.CharSequence;

        if $z0 == 0 goto label9;

     label6:
        $r23 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>($r23);

     label7:
        return r6;

     label8:
        $r10 := @caughtexception;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot parse Long value for ");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at key ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ContentValues", $r16);

        return null;

     label9:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot cast value for ");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to a Long: ");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ContentValues", $r24, r4);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label5;
        catch java.lang.NumberFormatException from label6 to label7 with label8;
    }

    public java.lang.Short getAsShort(java.lang.String)
    {
        android.content.ContentValues r0;
        java.lang.String r1, $r16, $r23, $r24;
        java.lang.Object r2;
        java.lang.Short r3, r6, r7;
        java.lang.ClassCastException r4, $r17;
        java.util.HashMap $r8;
        java.lang.Number $r9;
        short $s0;
        java.lang.NumberFormatException $r10;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r15, $r18, $r19, $r20, $r21, $r22;
        boolean $z0;

        r0 := @this: android.content.ContentValues;

        r1 := @parameter0: java.lang.String;

        $r8 = r0.<android.content.ContentValues: java.util.HashMap mValues>;

        r2 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 == null goto label4;

     label1:
        $r9 = (java.lang.Number) r2;

        $s0 = virtualinvoke $r9.<java.lang.Number: short shortValue()>();

        r7 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s0);

     label2:
        r3 = r7;

     label3:
        return r3;

     label4:
        r3 = null;

        goto label3;

     label5:
        $r17 := @caughtexception;

        r4 = $r17;

        $z0 = r2 instanceof java.lang.CharSequence;

        if $z0 == 0 goto label9;

     label6:
        $r23 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        r6 = staticinvoke <java.lang.Short: java.lang.Short valueOf(java.lang.String)>($r23);

     label7:
        return r6;

     label8:
        $r10 := @caughtexception;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot parse Short value for ");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at key ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ContentValues", $r16);

        return null;

     label9:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot cast value for ");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to a Short: ");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ContentValues", $r24, r4);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label5;
        catch java.lang.NumberFormatException from label6 to label7 with label8;
    }

    public java.lang.String getAsString(java.lang.String)
    {
        android.content.ContentValues r0;
        java.lang.String r1, $r4;
        java.lang.Object r2;
        java.util.HashMap $r3;

        r0 := @this: android.content.ContentValues;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<android.content.ContentValues: java.util.HashMap mValues>;

        r2 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 == null goto label1;

        $r4 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        return $r4;

     label1:
        return null;
    }

    public java.util.ArrayList getStringArrayList(java.lang.String)
    {
        android.content.ContentValues r0;
        java.lang.String r1;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        java.util.ArrayList $r4;

        r0 := @this: android.content.ContentValues;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.content.ContentValues: java.util.HashMap mValues>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.util.ArrayList) $r3;

        return $r4;
    }

    public int hashCode()
    {
        android.content.ContentValues r0;
        java.util.HashMap $r1;
        int $i0;

        r0 := @this: android.content.ContentValues;

        $r1 = r0.<android.content.ContentValues: java.util.HashMap mValues>;

        $i0 = virtualinvoke $r1.<java.util.HashMap: int hashCode()>();

        return $i0;
    }

    public java.util.Set keySet()
    {
        android.content.ContentValues r0;
        java.util.HashMap $r1;
        java.util.Set $r2;

        r0 := @this: android.content.ContentValues;

        $r1 = r0.<android.content.ContentValues: java.util.HashMap mValues>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.util.Set keySet()>();

        return $r2;
    }

    public void put(java.lang.String, java.lang.Boolean)
    {
        android.content.ContentValues r0;
        java.lang.String r1;
        java.lang.Boolean r2;
        java.util.HashMap $r3;

        r0 := @this: android.content.ContentValues;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Boolean;

        $r3 = r0.<android.content.ContentValues: java.util.HashMap mValues>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void put(java.lang.String, java.lang.Byte)
    {
        android.content.ContentValues r0;
        java.lang.String r1;
        java.lang.Byte r2;
        java.util.HashMap $r3;

        r0 := @this: android.content.ContentValues;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Byte;

        $r3 = r0.<android.content.ContentValues: java.util.HashMap mValues>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void put(java.lang.String, java.lang.Double)
    {
        android.content.ContentValues r0;
        java.lang.String r1;
        java.lang.Double r2;
        java.util.HashMap $r3;

        r0 := @this: android.content.ContentValues;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Double;

        $r3 = r0.<android.content.ContentValues: java.util.HashMap mValues>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void put(java.lang.String, java.lang.Float)
    {
        android.content.ContentValues r0;
        java.lang.String r1;
        java.lang.Float r2;
        java.util.HashMap $r3;

        r0 := @this: android.content.ContentValues;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Float;

        $r3 = r0.<android.content.ContentValues: java.util.HashMap mValues>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void put(java.lang.String, java.lang.Integer)
    {
        android.content.ContentValues r0;
        java.lang.String r1;
        java.lang.Integer r2;
        java.util.HashMap $r3;

        r0 := @this: android.content.ContentValues;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Integer;

        $r3 = r0.<android.content.ContentValues: java.util.HashMap mValues>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void put(java.lang.String, java.lang.Long)
    {
        android.content.ContentValues r0;
        java.lang.String r1;
        java.lang.Long r2;
        java.util.HashMap $r3;

        r0 := @this: android.content.ContentValues;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Long;

        $r3 = r0.<android.content.ContentValues: java.util.HashMap mValues>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void put(java.lang.String, java.lang.Short)
    {
        android.content.ContentValues r0;
        java.lang.String r1;
        java.lang.Short r2;
        java.util.HashMap $r3;

        r0 := @this: android.content.ContentValues;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Short;

        $r3 = r0.<android.content.ContentValues: java.util.HashMap mValues>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void put(java.lang.String, java.lang.String)
    {
        android.content.ContentValues r0;
        java.lang.String r1, r2;
        java.util.HashMap $r3;

        r0 := @this: android.content.ContentValues;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<android.content.ContentValues: java.util.HashMap mValues>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void put(java.lang.String, byte[])
    {
        android.content.ContentValues r0;
        java.lang.String r1;
        byte[] r2;
        java.util.HashMap $r3;

        r0 := @this: android.content.ContentValues;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        $r3 = r0.<android.content.ContentValues: java.util.HashMap mValues>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void putAll(android.content.ContentValues)
    {
        android.content.ContentValues r0, r1;
        java.util.HashMap $r2, $r3;

        r0 := @this: android.content.ContentValues;

        r1 := @parameter0: android.content.ContentValues;

        $r3 = r0.<android.content.ContentValues: java.util.HashMap mValues>;

        $r2 = r1.<android.content.ContentValues: java.util.HashMap mValues>;

        virtualinvoke $r3.<java.util.HashMap: void putAll(java.util.Map)>($r2);

        return;
    }

    public void putNull(java.lang.String)
    {
        android.content.ContentValues r0;
        java.lang.String r1;
        java.util.HashMap $r2;

        r0 := @this: android.content.ContentValues;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.content.ContentValues: java.util.HashMap mValues>;

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, null);

        return;
    }

    public void putStringArrayList(java.lang.String, java.util.ArrayList)
    {
        android.content.ContentValues r0;
        java.lang.String r1;
        java.util.ArrayList r2;
        java.util.HashMap $r3;

        r0 := @this: android.content.ContentValues;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.ArrayList;

        $r3 = r0.<android.content.ContentValues: java.util.HashMap mValues>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void remove(java.lang.String)
    {
        android.content.ContentValues r0;
        java.lang.String r1;
        java.util.HashMap $r2;

        r0 := @this: android.content.ContentValues;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.content.ContentValues: java.util.HashMap mValues>;

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    public int size()
    {
        android.content.ContentValues r0;
        java.util.HashMap $r1;
        int $i0;

        r0 := @this: android.content.ContentValues;

        $r1 = r0.<android.content.ContentValues: java.util.HashMap mValues>;

        $i0 = virtualinvoke $r1.<java.util.HashMap: int size()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        android.content.ContentValues r0;
        java.lang.StringBuilder r1, $r5, $r10, $r11, $r12, $r13;
        java.util.Iterator r2;
        java.lang.String r3, r4, $r8, $r15;
        java.util.HashMap $r6;
        java.util.Set $r7;
        boolean $z0;
        java.lang.Object $r9;
        int $i0;

        r0 := @this: android.content.ContentValues;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        r1 = $r5;

        $r6 = r0.<android.content.ContentValues: java.util.HashMap mValues>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.util.Set keySet()>();

        r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r9;

        r4 = virtualinvoke r0.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>(r3);

        $i0 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();

        if $i0 <= 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label2:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        goto label1;

     label3:
        $r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public java.util.Set valueSet()
    {
        android.content.ContentValues r0;
        java.util.HashMap $r1;
        java.util.Set $r2;

        r0 := @this: android.content.ContentValues;

        $r1 = r0.<android.content.ContentValues: java.util.HashMap mValues>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.util.Set entrySet()>();

        return $r2;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.content.ContentValues r0;
        android.os.Parcel r1;
        int i0;
        java.util.HashMap $r2;

        r0 := @this: android.content.ContentValues;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.content.ContentValues: java.util.HashMap mValues>;

        virtualinvoke r1.<android.os.Parcel: void writeMap(java.util.Map)>($r2);

        return;
    }
}
