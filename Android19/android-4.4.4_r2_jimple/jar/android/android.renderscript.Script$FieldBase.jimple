public class android.renderscript.Script$FieldBase extends java.lang.Object
{
    protected android.renderscript.Allocation mAllocation;
    protected android.renderscript.Element mElement;

    protected void <init>()
    {
        android.renderscript.Script$FieldBase r0;

        r0 := @this: android.renderscript.Script$FieldBase;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.renderscript.Allocation getAllocation()
    {
        android.renderscript.Script$FieldBase r0;
        android.renderscript.Allocation $r1;

        r0 := @this: android.renderscript.Script$FieldBase;

        $r1 = r0.<android.renderscript.Script$FieldBase: android.renderscript.Allocation mAllocation>;

        return $r1;
    }

    public android.renderscript.Element getElement()
    {
        android.renderscript.Script$FieldBase r0;
        android.renderscript.Element $r1;

        r0 := @this: android.renderscript.Script$FieldBase;

        $r1 = r0.<android.renderscript.Script$FieldBase: android.renderscript.Element mElement>;

        return $r1;
    }

    public android.renderscript.Type getType()
    {
        android.renderscript.Script$FieldBase r0;
        android.renderscript.Allocation $r1;
        android.renderscript.Type $r2;

        r0 := @this: android.renderscript.Script$FieldBase;

        $r1 = r0.<android.renderscript.Script$FieldBase: android.renderscript.Allocation mAllocation>;

        $r2 = virtualinvoke $r1.<android.renderscript.Allocation: android.renderscript.Type getType()>();

        return $r2;
    }

    protected void init(android.renderscript.RenderScript, int)
    {
        android.renderscript.Script$FieldBase r0;
        android.renderscript.RenderScript r1;
        int i0;
        android.renderscript.Element $r2;
        android.renderscript.Allocation $r3;

        r0 := @this: android.renderscript.Script$FieldBase;

        r1 := @parameter0: android.renderscript.RenderScript;

        i0 := @parameter1: int;

        $r2 = r0.<android.renderscript.Script$FieldBase: android.renderscript.Element mElement>;

        $r3 = staticinvoke <android.renderscript.Allocation: android.renderscript.Allocation createSized(android.renderscript.RenderScript,android.renderscript.Element,int,int)>(r1, $r2, i0, 1);

        r0.<android.renderscript.Script$FieldBase: android.renderscript.Allocation mAllocation> = $r3;

        return;
    }

    protected void init(android.renderscript.RenderScript, int, int)
    {
        android.renderscript.Script$FieldBase r0;
        android.renderscript.RenderScript r1;
        int i0, i1, $i2;
        android.renderscript.Element $r2;
        android.renderscript.Allocation $r3;

        r0 := @this: android.renderscript.Script$FieldBase;

        r1 := @parameter0: android.renderscript.RenderScript;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<android.renderscript.Script$FieldBase: android.renderscript.Element mElement>;

        $i2 = i1 | 1;

        $r3 = staticinvoke <android.renderscript.Allocation: android.renderscript.Allocation createSized(android.renderscript.RenderScript,android.renderscript.Element,int,int)>(r1, $r2, i0, $i2);

        r0.<android.renderscript.Script$FieldBase: android.renderscript.Allocation mAllocation> = $r3;

        return;
    }

    public void updateAllocation()
    {
        android.renderscript.Script$FieldBase r0;

        r0 := @this: android.renderscript.Script$FieldBase;

        return;
    }
}
