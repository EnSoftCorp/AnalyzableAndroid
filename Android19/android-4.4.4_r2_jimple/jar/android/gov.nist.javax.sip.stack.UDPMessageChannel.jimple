public class gov.nist.javax.sip.stack.UDPMessageChannel extends gov.nist.javax.sip.stack.MessageChannel implements gov.nist.javax.sip.parser.ParseExceptionListener, java.lang.Runnable, gov.nist.javax.sip.stack.RawMessageChannel
{
    private java.net.DatagramPacket incomingPacket;
    private java.lang.String myAddress;
    protected gov.nist.javax.sip.parser.StringMsgParser myParser;
    protected int myPort;
    private java.net.InetAddress peerAddress;
    private java.net.InetAddress peerPacketSourceAddress;
    private int peerPacketSourcePort;
    private int peerPort;
    private java.lang.String peerProtocol;
    private java.util.Hashtable pingBackRecord;
    private long receptionTime;
    protected gov.nist.javax.sip.stack.SIPTransactionStack sipStack;

    protected void <init>(gov.nist.javax.sip.stack.SIPTransactionStack, gov.nist.javax.sip.stack.UDPMessageProcessor)
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        gov.nist.javax.sip.stack.SIPTransactionStack r1;
        gov.nist.javax.sip.stack.UDPMessageProcessor r2;
        java.lang.Thread r3, $r5;
        java.util.Hashtable $r4;
        java.net.InetAddress $r6;
        java.lang.String $r7;
        int $i0;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        r1 := @parameter0: gov.nist.javax.sip.stack.SIPTransactionStack;

        r2 := @parameter1: gov.nist.javax.sip.stack.UDPMessageProcessor;

        specialinvoke r0.<gov.nist.javax.sip.stack.MessageChannel: void <init>()>();

        $r4 = new java.util.Hashtable;

        specialinvoke $r4.<java.util.Hashtable: void <init>()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.util.Hashtable pingBackRecord> = $r4;

        r0.<gov.nist.javax.sip.stack.MessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor> = r2;

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack> = r1;

        $r5 = new java.lang.Thread;

        specialinvoke $r5.<java.lang.Thread: void <init>(java.lang.Runnable)>(r0);

        r3 = $r5;

        $r6 = virtualinvoke r2.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.net.InetAddress getIpAddress()>();

        $r7 = virtualinvoke $r6.<java.net.InetAddress: java.lang.String getHostAddress()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String myAddress> = $r7;

        $i0 = virtualinvoke r2.<gov.nist.javax.sip.stack.UDPMessageProcessor: int getPort()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int myPort> = $i0;

        virtualinvoke r3.<java.lang.Thread: void setName(java.lang.String)>("UDPMessageChannelThread");

        virtualinvoke r3.<java.lang.Thread: void setDaemon(boolean)>(1);

        virtualinvoke r3.<java.lang.Thread: void start()>();

        return;
    }

    protected void <init>(gov.nist.javax.sip.stack.SIPTransactionStack, gov.nist.javax.sip.stack.UDPMessageProcessor, java.net.DatagramPacket)
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        gov.nist.javax.sip.stack.SIPTransactionStack r1;
        gov.nist.javax.sip.stack.UDPMessageProcessor r2;
        java.net.DatagramPacket r3;
        java.lang.Thread r4, $r8;
        java.util.Hashtable $r5;
        java.net.InetAddress $r6;
        java.lang.String $r7;
        int $i0;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        r1 := @parameter0: gov.nist.javax.sip.stack.SIPTransactionStack;

        r2 := @parameter1: gov.nist.javax.sip.stack.UDPMessageProcessor;

        r3 := @parameter2: java.net.DatagramPacket;

        specialinvoke r0.<gov.nist.javax.sip.stack.MessageChannel: void <init>()>();

        $r5 = new java.util.Hashtable;

        specialinvoke $r5.<java.util.Hashtable: void <init>()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.util.Hashtable pingBackRecord> = $r5;

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.DatagramPacket incomingPacket> = r3;

        r0.<gov.nist.javax.sip.stack.MessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor> = r2;

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack> = r1;

        $r6 = virtualinvoke r2.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.net.InetAddress getIpAddress()>();

        $r7 = virtualinvoke $r6.<java.net.InetAddress: java.lang.String getHostAddress()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String myAddress> = $r7;

        $i0 = virtualinvoke r2.<gov.nist.javax.sip.stack.UDPMessageProcessor: int getPort()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int myPort> = $i0;

        $r8 = new java.lang.Thread;

        specialinvoke $r8.<java.lang.Thread: void <init>(java.lang.Runnable)>(r0);

        r4 = $r8;

        virtualinvoke r4.<java.lang.Thread: void setDaemon(boolean)>(1);

        virtualinvoke r4.<java.lang.Thread: void setName(java.lang.String)>("UDPMessageChannelThread");

        virtualinvoke r4.<java.lang.Thread: void start()>();

        return;
    }

    protected void <init>(java.net.InetAddress, int, gov.nist.javax.sip.stack.SIPTransactionStack, gov.nist.javax.sip.stack.UDPMessageProcessor)
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        java.net.InetAddress r1, $r5;
        int i0, $i1;
        gov.nist.javax.sip.stack.SIPTransactionStack r2, $r7;
        gov.nist.javax.sip.stack.UDPMessageProcessor r3;
        java.util.Hashtable $r4;
        java.lang.String $r6, $r11, $r15;
        boolean $z0;
        gov.nist.core.StackLogger $r8;
        java.lang.StringBuilder $r9, $r10, $r12, $r13, $r14;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        r1 := @parameter0: java.net.InetAddress;

        i0 := @parameter1: int;

        r2 := @parameter2: gov.nist.javax.sip.stack.SIPTransactionStack;

        r3 := @parameter3: gov.nist.javax.sip.stack.UDPMessageProcessor;

        specialinvoke r0.<gov.nist.javax.sip.stack.MessageChannel: void <init>()>();

        $r4 = new java.util.Hashtable;

        specialinvoke $r4.<java.util.Hashtable: void <init>()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.util.Hashtable pingBackRecord> = $r4;

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress> = r1;

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPort> = i0;

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String peerProtocol> = "UDP";

        r0.<gov.nist.javax.sip.stack.MessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor> = r3;

        $r5 = virtualinvoke r3.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.net.InetAddress getIpAddress()>();

        $r6 = virtualinvoke $r5.<java.net.InetAddress: java.lang.String getHostAddress()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String myAddress> = $r6;

        $i1 = virtualinvoke r3.<gov.nist.javax.sip.stack.UDPMessageProcessor: int getPort()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int myPort> = $i1;

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack> = r2;

        $z0 = virtualinvoke r2.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label1;

        $r7 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r8 = virtualinvoke $r7.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating message channel ");

        $r11 = virtualinvoke r1.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r15);

     label1:
        return;
    }

    static java.util.Hashtable access$000(gov.nist.javax.sip.stack.UDPMessageChannel)
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        java.util.Hashtable $r1;

        r0 := @parameter0: gov.nist.javax.sip.stack.UDPMessageChannel;

        $r1 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.util.Hashtable pingBackRecord>;

        return $r1;
    }

    private void processIncomingDataPacket(java.net.DatagramPacket) throws java.lang.Exception
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        java.net.DatagramPacket r1, r14, $r75;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        byte[] r2, r3, r15, $r119;
        java.text.ParseException r4, r13, $r109, $r128;
        java.lang.String r5, r6, r10, $r21, $r29, $r43, $r59, $r62, $r64, $r65, $r66, $r68, $r72, $r77, $r79, $r89, $r95, $r106, $r110, $r115, $r117, $r129, $r135;
        java.io.IOException r7, $r127;
        gov.nist.javax.sip.message.SIPMessage r8;
        gov.nist.javax.sip.header.ViaList r9, $r45, $r47;
        gov.nist.javax.sip.header.Via r11, $r58;
        javax.sip.address.Hop r12, $r56;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.net.InetAddress $r16, $r51, $r52, $r60, $r61, $r63, $r67, $r69, $r85, $r90, $r96, $r120;
        gov.nist.javax.sip.stack.SIPTransactionStack $r17, $r20, $r22, $r30, $r54, $r73, $r82, $r86, $r88, $r100, $r101, $r102, $r108, $r111, $r118, $r121, $r123, $r126, $r134;
        long $l1;
        gov.nist.javax.sip.parser.StringMsgParser $r18;
        javax.sip.header.FromHeader $r19, $r34;
        java.lang.StringBuilder $r23, $r24, $r26, $r28, $r31, $r32, $r33, $r35, $r38, $r39, $r41, $r42, $r44, $r46, $r71, $r74, $r78, $r80, $r93, $r94, $r97, $r98, $r104, $r105, $r107, $r113, $r114, $r116, $r130, $r131, $r136;
        gov.nist.core.StackLogger $r25, $r27, $r87, $r99, $r103, $r112, $r122, $r124, $r125, $r132, $r133;
        javax.sip.header.CallIdHeader $r36, $r49;
        javax.sip.header.ToHeader $r37, $r50;
        javax.sip.header.CSeqHeader $r40, $r48;
        javax.sip.header.Header $r53, $r57;
        gov.nist.core.net.AddressResolver $r55;
        java.util.Hashtable $r70;
        java.lang.Object $r76;
        java.net.DatagramSocket $r81;
        gov.nist.javax.sip.stack.MessageProcessor $r83;
        gov.nist.javax.sip.stack.UDPMessageProcessor $r84;
        gov.nist.javax.sip.stack.UDPMessageChannel$PingBackTimerTask $r91;
        java.util.Timer $r92;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        r1 := @parameter0: java.net.DatagramPacket;

        $r16 = virtualinvoke r1.<java.net.DatagramPacket: java.net.InetAddress getAddress()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress> = $r16;

        i0 = virtualinvoke r1.<java.net.DatagramPacket: int getLength()>();

        r2 = virtualinvoke r1.<java.net.DatagramPacket: byte[] getData()>();

        r3 = newarray (byte)[i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r3, 0, i0);

        $r17 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = virtualinvoke $r17.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label01;

        $r86 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r99 = virtualinvoke $r86.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r98 = new java.lang.StringBuilder;

        specialinvoke $r98.<java.lang.StringBuilder: void <init>()>();

        $r97 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UDPMessageChannel: processIncomingDataPacket : peerAddress = ");

        $r96 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress>;

        $r95 = virtualinvoke $r96.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $r94 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r95);

        $r93 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i11 = virtualinvoke r1.<java.net.DatagramPacket: int getPort()>();

        $r105 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r104 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Length = ");

        $r107 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r106 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r99.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r106);

     label01:
        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: long receptionTime> = $l1;

        $r18 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.parser.StringMsgParser myParser>;

        r8 = virtualinvoke $r18.<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.message.SIPMessage parseSIPMessage(byte[])>(r3);

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.parser.StringMsgParser myParser> = null;

     label02:
        if r8 != null goto label11;

        $r73 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z5 = virtualinvoke $r73.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z5 == 0 goto label03;

        $r88 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r87 = virtualinvoke $r88.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r87.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Rejecting message !  + Null message parsed.");

     label03:
        $r70 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.util.Hashtable pingBackRecord>;

        $r74 = new java.lang.StringBuilder;

        specialinvoke $r74.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke r1.<java.net.DatagramPacket: java.net.InetAddress getAddress()>();

        $r72 = virtualinvoke $r69.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $r71 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r72);

        $r80 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $i7 = virtualinvoke r1.<java.net.DatagramPacket: int getPort()>();

        $r78 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.String toString()>();

        $r76 = virtualinvoke $r70.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r79);

        if $r76 != null goto label04;

        $r77 = "\r\n\r\n";

        r15 = virtualinvoke $r77.<java.lang.String: byte[] getBytes()>();

        $r75 = new java.net.DatagramPacket;

        $i9 = lengthof r15;

        $r85 = virtualinvoke r1.<java.net.DatagramPacket: java.net.InetAddress getAddress()>();

        $i8 = virtualinvoke r1.<java.net.DatagramPacket: int getPort()>();

        specialinvoke $r75.<java.net.DatagramPacket: void <init>(byte[],int,int,java.net.InetAddress,int)>(r15, 0, $i9, $r85, $i8);

        r14 = $r75;

        $r83 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor>;

        $r84 = (gov.nist.javax.sip.stack.UDPMessageProcessor) $r83;

        $r81 = $r84.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.net.DatagramSocket sock>;

        virtualinvoke $r81.<java.net.DatagramSocket: void send(java.net.DatagramPacket)>(r14);

        $r82 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r92 = virtualinvoke $r82.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Timer getTimer()>();

        $r91 = new gov.nist.javax.sip.stack.UDPMessageChannel$PingBackTimerTask;

        $r90 = virtualinvoke r1.<java.net.DatagramPacket: java.net.InetAddress getAddress()>();

        $r89 = virtualinvoke $r90.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $i10 = virtualinvoke r1.<java.net.DatagramPacket: int getPort()>();

        specialinvoke $r91.<gov.nist.javax.sip.stack.UDPMessageChannel$PingBackTimerTask: void <init>(gov.nist.javax.sip.stack.UDPMessageChannel,java.lang.String,int)>(r0, $r89, $i10);

        virtualinvoke $r92.<java.util.Timer: void schedule(java.util.TimerTask,long)>($r91, 1000L);

     label04:
        return;

     label05:
        $r109 := @caughtexception;

        r4 = $r109;

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.parser.StringMsgParser myParser> = null;

        $r108 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z9 = virtualinvoke $r108.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z9 == 0 goto label06;

        $r111 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r112 = virtualinvoke $r111.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r113 = new java.lang.StringBuilder;

        specialinvoke $r113.<java.lang.StringBuilder: void <init>()>();

        $r114 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Rejecting message !  ");

        $r115 = new java.lang.String;

        specialinvoke $r115.<java.lang.String: void <init>(byte[])>(r3);

        $r116 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r115);

        $r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r112.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r117);

        $r118 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r132 = virtualinvoke $r118.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r131 = new java.lang.StringBuilder;

        specialinvoke $r131.<java.lang.StringBuilder: void <init>()>();

        $r130 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error message ");

        $r129 = virtualinvoke r4.<java.text.ParseException: java.lang.String getMessage()>();

        $r136 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r129);

        $r135 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r132.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r135);

        $r134 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r133 = virtualinvoke $r134.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r133.<gov.nist.core.StackLogger: void logException(java.lang.Throwable)>(r4);

     label06:
        $r110 = new java.lang.String;

        specialinvoke $r110.<java.lang.String: void <init>(byte[],int,int)>(r3, 0, i0);

        r5 = $r110;

        $z7 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>("SIP/");

        if $z7 != 0 goto label04;

        $z6 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>("ACK ");

        if $z6 != 0 goto label04;

        r6 = virtualinvoke r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String createBadReqRes(java.lang.String,java.text.ParseException)>(r5, r4);

        if r6 == null goto label10;

        $r102 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z10 = virtualinvoke $r102.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z10 == 0 goto label07;

        $r121 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r122 = virtualinvoke $r121.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r122.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Sending automatic 400 Bad Request:");

        $r123 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r124 = virtualinvoke $r123.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r124.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>(r6);

     label07:
        $r119 = virtualinvoke r6.<java.lang.String: byte[] getBytes()>();

        $r120 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress>;

        $i12 = virtualinvoke r1.<java.net.DatagramPacket: int getPort()>();

        virtualinvoke r0.<gov.nist.javax.sip.stack.UDPMessageChannel: void sendMessage(byte[],java.net.InetAddress,int,java.lang.String,boolean)>($r119, $r120, $i12, "UDP", 0);

     label08:
        return;

     label09:
        $r127 := @caughtexception;

        r7 = $r127;

        $r126 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r125 = virtualinvoke $r126.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r125.<gov.nist.core.StackLogger: void logException(java.lang.Throwable)>(r7);

        return;

     label10:
        $r100 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z8 = virtualinvoke $r100.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z8 == 0 goto label04;

        $r101 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r103 = virtualinvoke $r101.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r103.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Could not formulate automatic 400 Bad Request");

        return;

     label11:
        r9 = virtualinvoke r8.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ViaList getViaHeaders()>();

        $r19 = virtualinvoke r8.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.FromHeader getFrom()>();

        if $r19 == null goto label12;

        $r50 = virtualinvoke r8.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ToHeader getTo()>();

        if $r50 == null goto label12;

        $r49 = virtualinvoke r8.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CallIdHeader getCallId()>();

        if $r49 == null goto label12;

        $r48 = virtualinvoke r8.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CSeqHeader getCSeq()>();

        if $r48 == null goto label12;

        $r47 = virtualinvoke r8.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ViaList getViaHeaders()>();

        if $r47 != null goto label13;

     label12:
        $r21 = new java.lang.String;

        specialinvoke $r21.<java.lang.String: void <init>(byte[])>(r3);

        r10 = $r21;

        $r20 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z2 = virtualinvoke $r20.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z2 == 0 goto label04;

        $r22 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r25 = virtualinvoke $r22.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad message ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r25.<gov.nist.core.StackLogger: void logError(java.lang.String)>($r29);

        $r30 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r27 = virtualinvoke $r30.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">>> Dropped Bad Msg From = ");

        $r34 = virtualinvoke r8.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.FromHeader getFrom()>();

        $r31 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r34);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("To = ");

        $r37 = virtualinvoke r8.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ToHeader getTo()>();

        $r38 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r37);

        $r35 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CallId = ");

        $r36 = virtualinvoke r8.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CallIdHeader getCallId()>();

        $r42 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r36);

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CSeq = ");

        $r40 = virtualinvoke r8.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CSeqHeader getCSeq()>();

        $r39 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r40);

        $r46 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Via = ");

        $r45 = virtualinvoke r8.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ViaList getViaHeaders()>();

        $r44 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r45);

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r27.<gov.nist.core.StackLogger: void logError(java.lang.String)>($r43);

        return;

     label13:
        $z3 = r8 instanceof gov.nist.javax.sip.message.SIPRequest;

        if $z3 == 0 goto label22;

        $r53 = virtualinvoke r9.<gov.nist.javax.sip.header.ViaList: javax.sip.header.Header getFirst()>();

        r11 = (gov.nist.javax.sip.header.Via) $r53;

        $r54 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r55 = $r54.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.net.AddressResolver addressResolver>;

        $r56 = virtualinvoke r11.<gov.nist.javax.sip.header.Via: javax.sip.address.Hop getHop()>();

        r12 = interfaceinvoke $r55.<gov.nist.core.net.AddressResolver: javax.sip.address.Hop resolveAddress(javax.sip.address.Hop)>($r56);

        $i5 = interfaceinvoke r12.<javax.sip.address.Hop: int getPort()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPort> = $i5;

        $r62 = virtualinvoke r11.<gov.nist.javax.sip.header.Via: java.lang.String getTransport()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String peerProtocol> = $r62;

        $r63 = virtualinvoke r1.<java.net.DatagramPacket: java.net.InetAddress getAddress()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerPacketSourceAddress> = $r63;

        $i4 = virtualinvoke r1.<java.net.DatagramPacket: int getPort()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPacketSourcePort> = $i4;

     label14:
        $r60 = virtualinvoke r1.<java.net.DatagramPacket: java.net.InetAddress getAddress()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress> = $r60;

        z0 = virtualinvoke r11.<gov.nist.javax.sip.header.Via: boolean hasParameter(java.lang.String)>("rport");

     label15:
        if z0 != 0 goto label17;

     label16:
        $r64 = interfaceinvoke r12.<javax.sip.address.Hop: java.lang.String getHost()>();

        $r67 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress>;

        $r66 = virtualinvoke $r67.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $z4 = virtualinvoke $r64.<java.lang.String: boolean equals(java.lang.Object)>($r66);

        if $z4 != 0 goto label18;

     label17:
        $r61 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress>;

        $r68 = virtualinvoke $r61.<java.net.InetAddress: java.lang.String getHostAddress()>();

        virtualinvoke r11.<gov.nist.javax.sip.header.Via: void setParameter(java.lang.String,java.lang.String)>("received", $r68);

     label18:
        if z0 == 0 goto label20;

     label19:
        $i6 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPacketSourcePort>;

        $r65 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i6);

        virtualinvoke r11.<gov.nist.javax.sip.header.Via: void setParameter(java.lang.String,java.lang.String)>("rport", $r65);

     label20:
        virtualinvoke r0.<gov.nist.javax.sip.stack.UDPMessageChannel: void processMessage(gov.nist.javax.sip.message.SIPMessage)>(r8);

        return;

     label21:
        $r128 := @caughtexception;

        r13 = $r128;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r13);

        goto label20;

     label22:
        $r52 = virtualinvoke r1.<java.net.DatagramPacket: java.net.InetAddress getAddress()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerPacketSourceAddress> = $r52;

        $i2 = virtualinvoke r1.<java.net.DatagramPacket: int getPort()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPacketSourcePort> = $i2;

        $r51 = virtualinvoke r1.<java.net.DatagramPacket: java.net.InetAddress getAddress()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress> = $r51;

        $i3 = virtualinvoke r1.<java.net.DatagramPacket: int getPort()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPort> = $i3;

        $r57 = virtualinvoke r9.<gov.nist.javax.sip.header.ViaList: javax.sip.header.Header getFirst()>();

        $r58 = (gov.nist.javax.sip.header.Via) $r57;

        $r59 = virtualinvoke $r58.<gov.nist.javax.sip.header.Via: java.lang.String getTransport()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String peerProtocol> = $r59;

        goto label20;

        catch java.text.ParseException from label01 to label02 with label05;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.text.ParseException from label14 to label15 with label21;
        catch java.text.ParseException from label16 to label17 with label21;
        catch java.text.ParseException from label17 to label18 with label21;
        catch java.text.ParseException from label19 to label20 with label21;
    }

    public void close()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        boolean $z0, $z1;
        java.lang.String $r5, $r6;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return 0;

     label1:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (gov.nist.javax.sip.stack.UDPMessageChannel) r1;

        $r5 = virtualinvoke r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String getKey()>();

        $r6 = virtualinvoke r2.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String getKey()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        return $z1;
    }

    public java.lang.String getHost()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        gov.nist.javax.sip.stack.MessageProcessor $r1;
        java.net.InetAddress $r2;
        java.lang.String $r3;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        $r1 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor>;

        $r2 = virtualinvoke $r1.<gov.nist.javax.sip.stack.MessageProcessor: java.net.InetAddress getIpAddress()>();

        $r3 = virtualinvoke $r2.<java.net.InetAddress: java.lang.String getHostAddress()>();

        return $r3;
    }

    public java.lang.String getKey()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        int $i0;
        java.net.InetAddress $r1;
        java.lang.String $r2;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        $r1 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress>;

        $i0 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPort>;

        $r2 = staticinvoke <gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String getKey(java.net.InetAddress,int,java.lang.String)>($r1, $i0, "UDP");

        return $r2;
    }

    public java.lang.String getPeerAddress()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        java.net.InetAddress $r1;
        java.lang.String $r2;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        $r1 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress>;

        $r2 = virtualinvoke $r1.<java.net.InetAddress: java.lang.String getHostAddress()>();

        return $r2;
    }

    protected java.net.InetAddress getPeerInetAddress()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        java.net.InetAddress $r1;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        $r1 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress>;

        return $r1;
    }

    public java.lang.String getPeerName()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        java.net.InetAddress $r1;
        java.lang.String $r2;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        $r1 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress>;

        $r2 = virtualinvoke $r1.<java.net.InetAddress: java.lang.String getHostName()>();

        return $r2;
    }

    public java.net.InetAddress getPeerPacketSourceAddress()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        java.net.InetAddress $r1;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        $r1 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerPacketSourceAddress>;

        return $r1;
    }

    public int getPeerPacketSourcePort()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        int $i0;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        $i0 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPacketSourcePort>;

        return $i0;
    }

    public int getPeerPort()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        int $i0;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        $i0 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPort>;

        return $i0;
    }

    public java.lang.String getPeerProtocol()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        java.lang.String $r1;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        $r1 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String peerProtocol>;

        return $r1;
    }

    public int getPort()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        gov.nist.javax.sip.stack.MessageProcessor $r1;
        gov.nist.javax.sip.stack.UDPMessageProcessor $r2;
        int $i0;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        $r1 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor>;

        $r2 = (gov.nist.javax.sip.stack.UDPMessageProcessor) $r1;

        $i0 = virtualinvoke $r2.<gov.nist.javax.sip.stack.UDPMessageProcessor: int getPort()>();

        return $i0;
    }

    public gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        gov.nist.javax.sip.stack.SIPTransactionStack $r1;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        $r1 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        return $r1;
    }

    public java.lang.String getTransport()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        return "udp";
    }

    public java.lang.String getViaHost()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        java.lang.String $r1;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        $r1 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String myAddress>;

        return $r1;
    }

    public int getViaPort()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        int $i0;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        $i0 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int myPort>;

        return $i0;
    }

    public void handleException(java.text.ParseException, gov.nist.javax.sip.message.SIPMessage, java.lang.Class, java.lang.String, java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        java.text.ParseException r1;
        gov.nist.javax.sip.message.SIPMessage r2;
        java.lang.Class r3;
        java.lang.String r4, r5;
        gov.nist.javax.sip.stack.SIPTransactionStack $r6, $r7, $r8, $r10, $r12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        gov.nist.core.StackLogger $r9, $r11, $r13;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        r1 := @parameter0: java.text.ParseException;

        r2 := @parameter1: gov.nist.javax.sip.message.SIPMessage;

        r3 := @parameter2: java.lang.Class;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        $r6 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r6.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label1;

        $r12 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r13 = virtualinvoke $r12.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r13.<gov.nist.core.StackLogger: void logException(java.lang.Throwable)>(r1);

     label1:
        if r3 == null goto label4;

        $z1 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(class "gov/nist/javax/sip/header/From");

        if $z1 != 0 goto label2;

        $z3 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(class "gov/nist/javax/sip/header/To");

        if $z3 != 0 goto label2;

        $z5 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(class "gov/nist/javax/sip/header/CSeq");

        if $z5 != 0 goto label2;

        $z4 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(class "gov/nist/javax/sip/header/Via");

        if $z4 != 0 goto label2;

        $z7 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(class "gov/nist/javax/sip/header/CallID");

        if $z7 != 0 goto label2;

        $z6 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(class "gov/nist/javax/sip/header/RequestLine");

        if $z6 != 0 goto label2;

        $z8 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(class "gov/nist/javax/sip/header/StatusLine");

        if $z8 == 0 goto label4;

     label2:
        $r7 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z2 = virtualinvoke $r7.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z2 == 0 goto label3;

        $r8 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r9 = virtualinvoke $r8.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r9.<gov.nist.core.StackLogger: void logError(java.lang.String)>("BAD MESSAGE!");

        $r10 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r11 = virtualinvoke $r10.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r11.<gov.nist.core.StackLogger: void logError(java.lang.String)>(r5);

     label3:
        throw r1;

     label4:
        virtualinvoke r2.<gov.nist.javax.sip.message.SIPMessage: void addUnparsed(java.lang.String)>(r4);

        return;
    }

    public boolean isReliable()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        return 0;
    }

    public boolean isSecure()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        return 0;
    }

    public void processMessage(gov.nist.javax.sip.message.SIPMessage)
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        gov.nist.javax.sip.message.SIPMessage r1;
        gov.nist.javax.sip.message.SIPResponse r2;
        gov.nist.javax.sip.stack.ServerResponseInterface r4;
        java.lang.Throwable r5, r9, $r65, $r69;
        gov.nist.javax.sip.stack.SIPTransaction r6, $r14, $r17, $r37, $r62, $r74, $r75;
        gov.nist.javax.sip.message.SIPRequest r7;
        gov.nist.javax.sip.stack.ServerRequestInterface r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19;
        gov.nist.javax.sip.stack.SIPTransactionStack $r10, $r11, $r12, $r16, $r19, $r22, $r26, $r27, $r28, $r31, $r43, $r49, $r53, $r54, $r63, $r71;
        gov.nist.core.StackLogger $r13, $r18, $r23, $r32, $r42, $r48, $r73;
        gov.nist.javax.sip.stack.SIPClientTransaction $r15;
        java.lang.StringBuilder $r20, $r21, $r24, $r29, $r30, $r33, $r34, $r35, $r40, $r41, $r44, $r45, $r46, $r55, $r56, $r59, $r61, $r67, $r68, $r72;
        java.lang.String $r25, $r36, $r39, $r47, $r52, $r57, $r58, $r60, $r70;
        gov.nist.javax.sip.stack.SIPServerTransaction $r38, $r66;
        gov.nist.core.ServerLogger $r50;
        gov.nist.core.HostPort $r51;
        int $i0;
        java.text.ParseException $r64;
        long $l1;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        r1 := @parameter0: gov.nist.javax.sip.message.SIPMessage;

        $z0 = r1 instanceof gov.nist.javax.sip.message.SIPRequest;

        if $z0 == 0 goto label09;

        r7 = (gov.nist.javax.sip.message.SIPRequest) r1;

        $r22 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r23 = virtualinvoke $r22.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $z9 = interfaceinvoke $r23.<gov.nist.core.StackLogger: boolean isLoggingEnabled(int)>(16);

        if $z9 == 0 goto label01;

        $r49 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r50 = $r49.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.ServerLogger serverLogger>;

        $r51 = virtualinvoke r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.core.HostPort getPeerHostPort()>();

        $r58 = virtualinvoke $r51.<gov.nist.core.HostPort: java.lang.String toString()>();

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String getHost()>();

        $r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

        $r55 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $i0 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int myPort>;

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        $l1 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: long receptionTime>;

        interfaceinvoke $r50.<gov.nist.core.ServerLogger: void logMessage(gov.nist.javax.sip.message.SIPMessage,java.lang.String,java.lang.String,boolean,long)>(r1, $r58, $r57, 0, $l1);

     label01:
        $r27 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r8 = virtualinvoke $r27.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.ServerRequestInterface newSIPServerRequest(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.MessageChannel)>(r7, r0);

        if r8 != null goto label03;

        $r53 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z14 = virtualinvoke $r53.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z14 == 0 goto label02;

        $r54 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r48 = virtualinvoke $r54.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r48.<gov.nist.core.StackLogger: void logWarning(java.lang.String)>("Null request interface returned -- dropping request");

     label02:
        return;

     label03:
        $r26 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z11 = virtualinvoke $r26.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z11 == 0 goto label04;

        $r43 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r42 = virtualinvoke $r43.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("About to process ");

        $r47 = virtualinvoke r7.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getFirstLine()>();

        $r46 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r52 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r42.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r52);

     label04:
        interfaceinvoke r8.<gov.nist.javax.sip.stack.ServerRequestInterface: void processRequest(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.MessageChannel)>(r7, r0);

     label05:
        $z12 = r8 instanceof gov.nist.javax.sip.stack.SIPTransaction;

        if $z12 == 0 goto label06;

        $r38 = (gov.nist.javax.sip.stack.SIPServerTransaction) r8;

        $z13 = virtualinvoke $r38.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean passToListener()>();

        if $z13 != 0 goto label06;

        $r37 = (gov.nist.javax.sip.stack.SIPTransaction) r8;

        virtualinvoke $r37.<gov.nist.javax.sip.stack.SIPTransaction: void releaseSem()>();

     label06:
        $r28 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z10 = virtualinvoke $r28.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z10 == 0 goto label02;

        $r31 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r32 = virtualinvoke $r31.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Done processing ");

        $r36 = virtualinvoke r7.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getFirstLine()>();

        $r35 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r39 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r32.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r39);

        return;

     label07:
        $r65 := @caughtexception;

        r9 = $r65;

        $z16 = r8 instanceof gov.nist.javax.sip.stack.SIPTransaction;

        if $z16 == 0 goto label08;

        $r66 = (gov.nist.javax.sip.stack.SIPServerTransaction) r8;

        $z15 = virtualinvoke $r66.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean passToListener()>();

        if $z15 != 0 goto label08;

        $r62 = (gov.nist.javax.sip.stack.SIPTransaction) r8;

        virtualinvoke $r62.<gov.nist.javax.sip.stack.SIPTransaction: void releaseSem()>();

     label08:
        throw r9;

     label09:
        r2 = (gov.nist.javax.sip.message.SIPResponse) r1;

     label10:
        virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: void checkHeaders()>();

     label11:
        $r10 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r4 = virtualinvoke $r10.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.ServerResponseInterface newSIPServerResponse(gov.nist.javax.sip.message.SIPResponse,gov.nist.javax.sip.stack.MessageChannel)>(r2, r0);

        if r4 == null goto label20;

     label12:
        $z2 = r4 instanceof gov.nist.javax.sip.stack.SIPClientTransaction;

        if $z2 == 0 goto label16;

        $r15 = (gov.nist.javax.sip.stack.SIPClientTransaction) r4;

        $z5 = virtualinvoke $r15.<gov.nist.javax.sip.stack.SIPClientTransaction: boolean checkFromTag(gov.nist.javax.sip.message.SIPResponse)>(r2);

        if $z5 != 0 goto label16;

        $r16 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z7 = virtualinvoke $r16.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z7 == 0 goto label13;

        $r19 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r18 = virtualinvoke $r19.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dropping response message with invalid tag >>> ");

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r18.<gov.nist.core.StackLogger: void logError(java.lang.String)>($r25);

     label13:
        $z6 = r4 instanceof gov.nist.javax.sip.stack.SIPTransaction;

        if $z6 == 0 goto label02;

        $r17 = (gov.nist.javax.sip.stack.SIPTransaction) r4;

        $z8 = virtualinvoke $r17.<gov.nist.javax.sip.stack.SIPTransaction: boolean passToListener()>();

        if $z8 != 0 goto label02;

        r6 = (gov.nist.javax.sip.stack.SIPTransaction) r4;

     label14:
        virtualinvoke r6.<gov.nist.javax.sip.stack.SIPTransaction: void releaseSem()>();

        return;

     label15:
        $r64 := @caughtexception;

        $r63 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z17 = virtualinvoke $r63.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z17 == 0 goto label02;

        $r71 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r73 = virtualinvoke $r71.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        $r68 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dropping Badly formatted response message >>> ");

        $r67 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r70 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r73.<gov.nist.core.StackLogger: void logError(java.lang.String)>($r70);

        return;

     label16:
        interfaceinvoke r4.<gov.nist.javax.sip.stack.ServerResponseInterface: void processResponse(gov.nist.javax.sip.message.SIPResponse,gov.nist.javax.sip.stack.MessageChannel)>(r2, r0);

     label17:
        $z3 = r4 instanceof gov.nist.javax.sip.stack.SIPTransaction;

        if $z3 == 0 goto label02;

        $r14 = (gov.nist.javax.sip.stack.SIPTransaction) r4;

        $z4 = virtualinvoke $r14.<gov.nist.javax.sip.stack.SIPTransaction: boolean passToListener()>();

        if $z4 != 0 goto label02;

        r6 = (gov.nist.javax.sip.stack.SIPTransaction) r4;

        goto label14;

     label18:
        $r69 := @caughtexception;

        r5 = $r69;

        $z19 = r4 instanceof gov.nist.javax.sip.stack.SIPTransaction;

        if $z19 == 0 goto label19;

        $r75 = (gov.nist.javax.sip.stack.SIPTransaction) r4;

        $z18 = virtualinvoke $r75.<gov.nist.javax.sip.stack.SIPTransaction: boolean passToListener()>();

        if $z18 != 0 goto label19;

        $r74 = (gov.nist.javax.sip.stack.SIPTransaction) r4;

        virtualinvoke $r74.<gov.nist.javax.sip.stack.SIPTransaction: void releaseSem()>();

     label19:
        throw r5;

     label20:
        $r11 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = virtualinvoke $r11.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label02;

        $r12 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r13 = virtualinvoke $r12.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r13.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("null sipServerResponse!");

        return;

        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.text.ParseException from label10 to label11 with label15;
        catch java.lang.Throwable from label12 to label13 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
    }

    public void run()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        gov.nist.core.ThreadAuditor$ThreadHandle r1;
        java.net.DatagramPacket r2;
        java.lang.Exception r3, $r30;
        java.util.LinkedList r4, $r13, $r16, $r22;
        java.lang.Throwable r5, $r34;
        gov.nist.javax.sip.parser.StringMsgParser $r7, $r25, $r29;
        gov.nist.javax.sip.stack.SIPTransactionStack $r8, $r9, $r24, $r27;
        int $i0, $i1;
        gov.nist.javax.sip.stack.MessageProcessor $r10, $r12, $r15, $r20, $r21, $r33;
        gov.nist.javax.sip.stack.UDPMessageProcessor $r11, $r14, $r17, $r19, $r23, $r31;
        boolean $z0, $z1, $z2;
        java.lang.Object $r18;
        long $l2;
        gov.nist.core.ThreadAuditor $r26;
        gov.nist.core.StackLogger $r28;
        java.lang.InterruptedException $r32;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        r1 = null;

     label01:
        $r7 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.parser.StringMsgParser myParser>;

        if $r7 != null goto label02;

        $r25 = new gov.nist.javax.sip.parser.StringMsgParser;

        specialinvoke $r25.<gov.nist.javax.sip.parser.StringMsgParser: void <init>()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.parser.StringMsgParser myParser> = $r25;

        $r29 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.parser.StringMsgParser myParser>;

        virtualinvoke $r29.<gov.nist.javax.sip.parser.StringMsgParser: void setParseExceptionListener(gov.nist.javax.sip.parser.ParseExceptionListener)>(r0);

     label02:
        $r8 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $i0 = $r8.<gov.nist.javax.sip.stack.SIPTransactionStack: int threadPoolSize>;

        if $i0 == -1 goto label19;

        $r10 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor>;

        $r11 = (gov.nist.javax.sip.stack.UDPMessageProcessor) $r10;

        r4 = $r11.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageQueue>;

        entermonitor r4;

     label03:
        $r12 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor>;

        $r14 = (gov.nist.javax.sip.stack.UDPMessageProcessor) $r12;

        $r13 = $r14.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageQueue>;

        $z0 = virtualinvoke $r13.<java.util.LinkedList: boolean isEmpty()>();

        if $z0 == 0 goto label15;

        $r20 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor>;

        $r19 = (gov.nist.javax.sip.stack.UDPMessageProcessor) $r20;

        $z1 = $r19.<gov.nist.javax.sip.stack.UDPMessageProcessor: boolean isRunning>;

        if $z1 != 0 goto label05;

        exitmonitor r4;

     label04:
        return;

     label05:
        if r1 != null goto label07;

     label06:
        $r24 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r26 = virtualinvoke $r24.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.ThreadAuditor getThreadAuditor()>();

        r1 = virtualinvoke $r26.<gov.nist.core.ThreadAuditor: gov.nist.core.ThreadAuditor$ThreadHandle addCurrentThread()>();

     label07:
        virtualinvoke r1.<gov.nist.core.ThreadAuditor$ThreadHandle: void ping()>();

        $r21 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor>;

        $r23 = (gov.nist.javax.sip.stack.UDPMessageProcessor) $r21;

        $r22 = $r23.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageQueue>;

        $l2 = virtualinvoke r1.<gov.nist.core.ThreadAuditor$ThreadHandle: long getPingIntervalInMillisecs()>();

        virtualinvoke $r22.<java.lang.Object: void wait(long)>($l2);

     label08:
        goto label03;

     label09:
        $r32 := @caughtexception;

     label10:
        $r33 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor>;

        $r31 = (gov.nist.javax.sip.stack.UDPMessageProcessor) $r33;

        $z2 = $r31.<gov.nist.javax.sip.stack.UDPMessageProcessor: boolean isRunning>;

        if $z2 != 0 goto label03;

        exitmonitor r4;

     label11:
        return;

     label12:
        $r34 := @caughtexception;

        r5 = $r34;

     label13:
        exitmonitor r4;

     label14:
        throw r5;

     label15:
        $r15 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor>;

        $r17 = (gov.nist.javax.sip.stack.UDPMessageProcessor) $r15;

        $r16 = $r17.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageQueue>;

        $r18 = virtualinvoke $r16.<java.util.LinkedList: java.lang.Object removeFirst()>();

        r2 = (java.net.DatagramPacket) $r18;

        exitmonitor r4;

     label16:
        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.DatagramPacket incomingPacket> = r2;

     label17:
        specialinvoke r0.<gov.nist.javax.sip.stack.UDPMessageChannel: void processIncomingDataPacket(java.net.DatagramPacket)>(r2);

     label18:
        $r9 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $i1 = $r9.<gov.nist.javax.sip.stack.SIPTransactionStack: int threadPoolSize>;

        if $i1 != -1 goto label01;

        return;

     label19:
        r2 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.DatagramPacket incomingPacket>;

        goto label17;

     label20:
        $r30 := @caughtexception;

        r3 = $r30;

        $r27 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r28 = virtualinvoke $r27.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r28.<gov.nist.core.StackLogger: void logError(java.lang.String,java.lang.Exception)>("Error while processing incoming UDP packet", r3);

        goto label18;

        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.InterruptedException from label06 to label07 with label09;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.InterruptedException from label07 to label08 with label09;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
        catch java.lang.Throwable from label15 to label16 with label12;
        catch java.lang.Exception from label17 to label18 with label20;
    }

    public void sendMessage(gov.nist.javax.sip.message.SIPMessage) throws java.io.IOException
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        gov.nist.javax.sip.message.SIPMessage r1;
        long l0;
        java.lang.Exception r2, $r51;
        java.lang.Throwable r3, $r47;
        java.io.IOException r4, $r40, $r52;
        gov.nist.javax.sip.stack.MessageProcessor[] r5;
        int i1, i2, i3, $i4, $i5, $i6, $i7, $i8;
        gov.nist.javax.sip.stack.MessageProcessor r6;
        gov.nist.javax.sip.stack.MessageChannel r7;
        gov.nist.core.StackLogger r8, $r18, $r19, $r30, $r32, $r35, $r39, $r42, $r45, $r49, $r53, $r54;
        java.lang.String r9, $r13, $r15, $r24, $r25;
        java.net.InetAddress r10, $r17, $r22, $r23, $r26, $r55;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16;
        gov.nist.javax.sip.stack.SIPTransactionStack $r11, $r12, $r16, $r20, $r21, $r27, $r28, $r31, $r33, $r34, $r36, $r38, $r41, $r44, $r46, $r48, $r50;
        byte[] $r14;
        gov.nist.javax.sip.stack.RawMessageChannel $r29;
        gov.nist.javax.sip.header.RequestLine $r37;
        gov.nist.javax.sip.message.SIPRequest $r43;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        r1 := @parameter0: gov.nist.javax.sip.message.SIPMessage;

        $r11 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r11.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label01;

        $r34 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z12 = virtualinvoke $r34.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLogStackTraceOnMessageSend()>();

        if $z12 == 0 goto label01;

        $z13 = r1 instanceof gov.nist.javax.sip.message.SIPRequest;

        if $z13 == 0 goto label09;

        $r43 = (gov.nist.javax.sip.message.SIPRequest) r1;

        $r37 = virtualinvoke $r43.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine getRequestLine()>();

        if $r37 == null goto label09;

        $r38 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r39 = virtualinvoke $r38.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r39.<gov.nist.core.StackLogger: void logStackTrace(int)>(16);

     label01:
        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label02:
        $r12 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r5 = virtualinvoke $r12.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.MessageProcessor[] getMessageProcessors()>();

        i1 = lengthof r5;

     label03:
        i2 = 0;

     label04:
        if i2 >= i1 goto label11;

     label05:
        r6 = r5[i2];

        $r22 = virtualinvoke r6.<gov.nist.javax.sip.stack.MessageProcessor: java.net.InetAddress getIpAddress()>();

        $r23 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress>;

        $z5 = virtualinvoke $r22.<java.net.InetAddress: boolean equals(java.lang.Object)>($r23);

        if $z5 == 0 goto label10;

        $i5 = virtualinvoke r6.<gov.nist.javax.sip.stack.MessageProcessor: int getPort()>();

        $i6 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPort>;

        if $i5 != $i6 goto label10;

        $r25 = virtualinvoke r6.<gov.nist.javax.sip.stack.MessageProcessor: java.lang.String getTransport()>();

        $r24 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String peerProtocol>;

        $z6 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>($r24);

        if $z6 == 0 goto label10;

        $r26 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress>;

        $i7 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPort>;

        r7 = virtualinvoke r6.<gov.nist.javax.sip.stack.MessageProcessor: gov.nist.javax.sip.stack.MessageChannel createMessageChannel(java.net.InetAddress,int)>($r26, $i7);

        $z7 = r7 instanceof gov.nist.javax.sip.stack.RawMessageChannel;

        if $z7 == 0 goto label10;

        $r29 = (gov.nist.javax.sip.stack.RawMessageChannel) r7;

        interfaceinvoke $r29.<gov.nist.javax.sip.stack.RawMessageChannel: void processMessage(gov.nist.javax.sip.message.SIPMessage)>(r1);

        $r28 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z8 = virtualinvoke $r28.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z8 == 0 goto label06;

        $r36 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r35 = virtualinvoke $r36.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r35.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Self routing message");

     label06:
        $r27 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r32 = virtualinvoke $r27.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $z9 = interfaceinvoke $r32.<gov.nist.core.StackLogger: boolean isLoggingEnabled(int)>(16);

        if $z9 == 0 goto label20;

        $z10 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPMessage: boolean isNullRequest()>();

        if $z10 != 0 goto label20;

        r10 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress>;

        i3 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPort>;

     label07:
        virtualinvoke r0.<gov.nist.javax.sip.stack.UDPMessageChannel: void logMessage(gov.nist.javax.sip.message.SIPMessage,java.net.InetAddress,int,long)>(r1, r10, i3, l0);

     label08:
        return;

     label09:
        $r41 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r42 = virtualinvoke $r41.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r42.<gov.nist.core.StackLogger: void logStackTrace(int)>(16);

        goto label01;

     label10:
        i2 = i2 + 1;

        goto label04;

     label11:
        $r13 = virtualinvoke r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String getTransport()>();

        $r14 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPMessage: byte[] encodeAsBytes(java.lang.String)>($r13);

        $r17 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress>;

        $i4 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPort>;

        $r15 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String peerProtocol>;

        $z1 = r1 instanceof gov.nist.javax.sip.message.SIPRequest;

        virtualinvoke r0.<gov.nist.javax.sip.stack.UDPMessageChannel: void sendMessage(byte[],java.net.InetAddress,int,java.lang.String,boolean)>($r14, $r17, $i4, $r15, $z1);

     label12:
        $r16 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r18 = virtualinvoke $r16.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $z2 = interfaceinvoke $r18.<gov.nist.core.StackLogger: boolean isLoggingEnabled(int)>(16);

        if $z2 == 0 goto label22;

        $z3 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPMessage: boolean isNullRequest()>();

        if $z3 != 0 goto label22;

        r10 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress>;

        i3 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPort>;

        goto label07;

     label13:
        $r40 := @caughtexception;

        r4 = $r40;

     label14:
        throw r4;

     label15:
        $r47 := @caughtexception;

        r3 = $r47;

        $r48 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r49 = virtualinvoke $r48.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $z15 = interfaceinvoke $r49.<gov.nist.core.StackLogger: boolean isLoggingEnabled(int)>(16);

        if $z15 == 0 goto label19;

        $z16 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPMessage: boolean isNullRequest()>();

        if $z16 != 0 goto label19;

        $r55 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress>;

        $i8 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPort>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.UDPMessageChannel: void logMessage(gov.nist.javax.sip.message.SIPMessage,java.net.InetAddress,int,long)>(r1, $r55, $i8, l0);

     label16:
        throw r3;

     label17:
        $r51 := @caughtexception;

        r2 = $r51;

     label18:
        $r50 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r53 = virtualinvoke $r50.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r53.<gov.nist.core.StackLogger: void logError(java.lang.String,java.lang.Exception)>("An exception occured while sending message", r2);

        $r52 = new java.io.IOException;

        specialinvoke $r52.<java.io.IOException: void <init>(java.lang.String)>("An exception occured while sending message");

        throw $r52;

     label19:
        $r44 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r45 = virtualinvoke $r44.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $z14 = interfaceinvoke $r45.<gov.nist.core.StackLogger: boolean isLoggingEnabled(int)>(32);

        if $z14 == 0 goto label16;

        $r46 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r54 = virtualinvoke $r46.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r54.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Sent EMPTY Message");

        goto label16;

     label20:
        $r31 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r30 = virtualinvoke $r31.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $z11 = interfaceinvoke $r30.<gov.nist.core.StackLogger: boolean isLoggingEnabled(int)>(32);

        if $z11 == 0 goto label08;

        $r33 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r8 = virtualinvoke $r33.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r9 = "Sent EMPTY Message";

     label21:
        interfaceinvoke r8.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>(r9);

        return;

     label22:
        $r20 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r19 = virtualinvoke $r20.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $z4 = interfaceinvoke $r19.<gov.nist.core.StackLogger: boolean isLoggingEnabled(int)>(32);

        if $z4 == 0 goto label08;

        $r21 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r8 = virtualinvoke $r21.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r9 = "Sent EMPTY Message";

        goto label21;

        catch java.io.IOException from label02 to label03 with label13;
        catch java.lang.Exception from label02 to label03 with label17;
        catch java.lang.Throwable from label02 to label03 with label15;
        catch java.io.IOException from label05 to label06 with label13;
        catch java.lang.Exception from label05 to label06 with label17;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.io.IOException from label11 to label12 with label13;
        catch java.lang.Exception from label11 to label12 with label17;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label14 to label15 with label15;
        catch java.lang.Throwable from label18 to label19 with label15;
    }

    protected void sendMessage(byte[], java.net.InetAddress, int, java.lang.String, boolean) throws java.io.IOException
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        byte[] r1;
        java.net.InetAddress r2, $r15;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.String r3, $r28, $r29, $r35, $r37, $r45, $r53, $r58;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        java.net.DatagramPacket r4, $r16;
        java.lang.Exception r5, $r59;
        java.io.IOException r6, $r49, $r54;
        java.net.DatagramSocket r7, r8;
        java.io.OutputStream r9;
        gov.nist.javax.sip.stack.SIPTransactionStack $r10, $r11, $r17, $r19, $r20, $r21, $r24, $r34, $r48, $r50;
        gov.nist.javax.sip.stack.IOHandler $r12;
        gov.nist.javax.sip.stack.MessageProcessor $r13, $r36;
        java.net.Socket $r14;
        gov.nist.core.net.NetworkLayer $r18;
        gov.nist.core.StackLogger $r22, $r40, $r55;
        java.lang.StringBuilder $r23, $r25, $r26, $r27, $r30, $r31, $r32, $r38, $r39, $r41, $r42, $r43, $r44, $r46, $r47, $r51, $r52, $r56;
        gov.nist.javax.sip.stack.UDPMessageProcessor $r33;
        java.lang.Class $r57;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        r1 := @parameter0: byte[];

        r2 := @parameter1: java.net.InetAddress;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        if i0 != -1 goto label02;

        $r50 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z5 = virtualinvoke $r50.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z5 == 0 goto label01;

        $r48 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r55 = virtualinvoke $r48.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r58 = virtualinvoke $r57.<java.lang.Class: java.lang.String getName()>();

        $r51 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":sendMessage: Dropping reply!");

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r55.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r53);

     label01:
        $r49 = new java.io.IOException;

        specialinvoke $r49.<java.io.IOException: void <init>(java.lang.String)>("Receiver port not set ");

        throw $r49;

     label02:
        $r10 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = virtualinvoke $r10.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label03;

        $r34 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r40 = virtualinvoke $r34.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":sendMessage ");

        $r37 = virtualinvoke r2.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $r44 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r47 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" messageSize = ");

        $i4 = lengthof r1;

        $r46 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r40.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r45);

     label03:
        $i1 = virtualinvoke r3.<java.lang.String: int compareToIgnoreCase(java.lang.String)>("UDP");

        if $i1 != 0 goto label12;

        $r16 = new java.net.DatagramPacket;

        $i3 = lengthof r1;

        specialinvoke $r16.<java.net.DatagramPacket: void <init>(byte[],int,java.net.InetAddress,int)>(r1, $i3, r2, i0);

        r4 = $r16;

     label04:
        $r17 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z2 = $r17.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean udpFlag>;

        if $z2 == 0 goto label08;

        $r36 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor>;

        $r33 = (gov.nist.javax.sip.stack.UDPMessageProcessor) $r36;

        r8 = $r33.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.net.DatagramSocket sock>;

     label05:
        $r20 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z3 = virtualinvoke $r20.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z3 == 0 goto label06;

        $r24 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r22 = virtualinvoke $r24.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendMessage ");

        $r28 = virtualinvoke r2.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $r25 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r29 = new java.lang.String;

        specialinvoke $r29.<java.lang.String: void <init>(byte[])>(r1);

        $r30 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r35 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r22.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r35);

     label06:
        virtualinvoke r8.<java.net.DatagramSocket: void send(java.net.DatagramPacket)>(r4);

        $r21 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z4 = $r21.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean udpFlag>;

        if $z4 != 0 goto label13;

        virtualinvoke r8.<java.net.DatagramSocket: void close()>();

     label07:
        return;

     label08:
        $r19 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r18 = virtualinvoke $r19.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.net.NetworkLayer getNetworkLayer()>();

        r7 = interfaceinvoke $r18.<gov.nist.core.net.NetworkLayer: java.net.DatagramSocket createDatagramSocket()>();

     label09:
        r8 = r7;

        goto label05;

     label10:
        $r54 := @caughtexception;

        r6 = $r54;

        throw r6;

     label11:
        $r59 := @caughtexception;

        r5 = $r59;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r5);

        return;

     label12:
        $r11 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r12 = $r11.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.IOHandler ioHandler>;

        $r13 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor>;

        $r15 = virtualinvoke $r13.<gov.nist.javax.sip.stack.MessageProcessor: java.net.InetAddress getIpAddress()>();

        $r14 = virtualinvoke $r12.<gov.nist.javax.sip.stack.IOHandler: java.net.Socket sendBytes(java.net.InetAddress,java.net.InetAddress,int,java.lang.String,byte[],boolean,gov.nist.javax.sip.stack.MessageChannel)>($r15, r2, i0, "tcp", r1, z0, r0);

        r9 = virtualinvoke $r14.<java.net.Socket: java.io.OutputStream getOutputStream()>();

        $i2 = lengthof r1;

        virtualinvoke r9.<java.io.OutputStream: void write(byte[],int,int)>(r1, 0, $i2);

        virtualinvoke r9.<java.io.OutputStream: void flush()>();

     label13:
        return;

        catch java.io.IOException from label04 to label05 with label10;
        catch java.lang.Exception from label04 to label05 with label11;
        catch java.io.IOException from label05 to label06 with label10;
        catch java.lang.Exception from label05 to label06 with label11;
        catch java.io.IOException from label06 to label07 with label10;
        catch java.lang.Exception from label06 to label07 with label11;
        catch java.io.IOException from label08 to label09 with label10;
        catch java.lang.Exception from label08 to label09 with label11;
    }

    protected void sendMessage(byte[], java.net.InetAddress, int, boolean) throws java.io.IOException
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        byte[] r1;
        java.net.InetAddress r2;
        int i0, $i1, $i2;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6;
        java.net.DatagramPacket r3, $r9;
        java.lang.Exception r4, $r43;
        java.io.IOException r5, $r34, $r42;
        java.net.DatagramSocket r6, $r12;
        gov.nist.javax.sip.stack.SIPTransactionStack $r7, $r8, $r10, $r13, $r29, $r31, $r32, $r39, $r45;
        gov.nist.javax.sip.stack.MessageProcessor $r11;
        gov.nist.javax.sip.stack.UDPMessageProcessor $r14;
        java.lang.StringBuilder $r15, $r18, $r19, $r20, $r21, $r22, $r23, $r25, $r26, $r27, $r36, $r37, $r41;
        gov.nist.core.StackLogger $r16, $r28, $r33, $r44;
        java.lang.String $r17, $r24, $r30, $r35, $r40;
        java.lang.Class $r38;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        r1 := @parameter0: byte[];

        r2 := @parameter1: java.net.InetAddress;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        $r7 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z2 = virtualinvoke $r7.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z2 == 0 goto label01;

        $r39 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z6 = virtualinvoke $r39.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLogStackTraceOnMessageSend()>();

        if $z6 == 0 goto label01;

        $r45 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r44 = virtualinvoke $r45.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r44.<gov.nist.core.StackLogger: void logStackTrace(int)>(16);

     label01:
        if i0 != -1 goto label03;

        $r29 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z5 = virtualinvoke $r29.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z5 == 0 goto label02;

        $r32 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r33 = virtualinvoke $r32.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r35 = virtualinvoke $r38.<java.lang.Class: java.lang.String getName()>();

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r41 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":sendMessage: Dropping reply!");

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r33.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r40);

     label02:
        $r34 = new java.io.IOException;

        specialinvoke $r34.<java.io.IOException: void <init>(java.lang.String)>("Receiver port not set ");

        throw $r34;

     label03:
        $r8 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z3 = virtualinvoke $r8.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z3 == 0 goto label04;

        $r13 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r16 = virtualinvoke $r13.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendMessage ");

        $r17 = virtualinvoke r2.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("messageSize =  ");

        $i2 = lengthof r1;

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" message = ");

        $r24 = new java.lang.String;

        specialinvoke $r24.<java.lang.String: void <init>(byte[])>(r1);

        $r25 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r16.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r30);

        $r31 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r28 = virtualinvoke $r31.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r28.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("*******************\n");

     label04:
        $r9 = new java.net.DatagramPacket;

        $i1 = lengthof r1;

        specialinvoke $r9.<java.net.DatagramPacket: void <init>(byte[],int,java.net.InetAddress,int)>(r1, $i1, r2, i0);

        r3 = $r9;

        z1 = 0;

     label05:
        $r10 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z4 = $r10.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean udpFlag>;

        if $z4 == 0 goto label10;

        $r11 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor>;

        $r14 = (gov.nist.javax.sip.stack.UDPMessageProcessor) $r11;

        r6 = $r14.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.net.DatagramSocket sock>;

     label06:
        virtualinvoke r6.<java.net.DatagramSocket: void send(java.net.DatagramPacket)>(r3);

     label07:
        if z1 == 0 goto label14;

     label08:
        virtualinvoke r6.<java.net.DatagramSocket: void close()>();

     label09:
        return;

     label10:
        $r12 = new java.net.DatagramSocket;

        specialinvoke $r12.<java.net.DatagramSocket: void <init>()>();

        r6 = $r12;

     label11:
        z1 = 1;

        goto label06;

     label12:
        $r42 := @caughtexception;

        r5 = $r42;

        throw r5;

     label13:
        $r43 := @caughtexception;

        r4 = $r43;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r4);

     label14:
        return;

        catch java.io.IOException from label05 to label06 with label12;
        catch java.lang.Exception from label05 to label06 with label13;
        catch java.io.IOException from label06 to label07 with label12;
        catch java.lang.Exception from label06 to label07 with label13;
        catch java.io.IOException from label08 to label09 with label12;
        catch java.lang.Exception from label08 to label09 with label13;
        catch java.io.IOException from label10 to label11 with label12;
        catch java.lang.Exception from label10 to label11 with label13;
    }
}
