public class org.apache.xpath.patterns.StepPattern extends org.apache.xpath.patterns.NodeTest implements org.apache.xpath.axes.SubContextList, org.apache.xpath.ExpressionOwner
{
    private static final boolean DEBUG_MATCHES;
    static final long serialVersionUID;
    protected int m_axis;
    org.apache.xpath.Expression[] m_predicates;
    org.apache.xpath.patterns.StepPattern m_relativePathPattern;
    java.lang.String m_targetString;

    public void <init>(int, int, int)
    {
        org.apache.xpath.patterns.StepPattern r0;
        int i0, i1, i2;

        r0 := @this: org.apache.xpath.patterns.StepPattern;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<org.apache.xpath.patterns.NodeTest: void <init>(int)>(i0);

        r0.<org.apache.xpath.patterns.StepPattern: int m_axis> = i1;

        return;
    }

    public void <init>(int, java.lang.String, java.lang.String, int, int)
    {
        org.apache.xpath.patterns.StepPattern r0;
        int i0, i1, i2;
        java.lang.String r1, r2;

        r0 := @this: org.apache.xpath.patterns.StepPattern;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        specialinvoke r0.<org.apache.xpath.patterns.NodeTest: void <init>(int,java.lang.String,java.lang.String)>(i0, r1, r2);

        r0.<org.apache.xpath.patterns.StepPattern: int m_axis> = i1;

        return;
    }

    private final boolean checkProximityPosition(org.apache.xpath.XPathContext, int, org.apache.xml.dtm.DTM, int, int)
    {
        org.apache.xpath.patterns.StepPattern r0;
        org.apache.xpath.XPathContext r1;
        int i0, i1, i2, i3, i4, i5, i6, $i7, i8, i9;
        org.apache.xml.dtm.DTM r2;
        boolean z0, z1, z2, z3, z4;
        javax.xml.transform.TransformerException r3, $r14;
        org.apache.xml.dtm.DTMAxisTraverser r4;
        java.lang.Throwable r5, r8, r10, r11, $r17, $r18, $r19, $r21;
        org.apache.xpath.objects.XNumber r6;
        org.apache.xpath.objects.XObject r7, r9;
        org.apache.xpath.Expression $r12;
        org.apache.xpath.Expression[] $r13;
        java.lang.RuntimeException $r15;
        java.lang.Error $r16;
        java.lang.String $r20;

        r0 := @this: org.apache.xpath.patterns.StepPattern;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.xml.dtm.DTM;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        z0 = 1;

     label01:
        r4 = interfaceinvoke r2.<org.apache.xml.dtm.DTM: org.apache.xml.dtm.DTMAxisTraverser getAxisTraverser(int)>(12);

        i3 = virtualinvoke r4.<org.apache.xml.dtm.DTMAxisTraverser: int first(int)>(i1);

     label02:
        i4 = i3;

     label03:
        if -1 == i4 goto label35;

     label04:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void pushCurrentNode(int)>(i4);

        r6 = <org.apache.xpath.patterns.NodeTest: org.apache.xpath.objects.XNumber SCORE_NONE>;

        r7 = specialinvoke r0.<org.apache.xpath.patterns.NodeTest: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)>(r1, i4);

     label05:
        if r6 == r7 goto label33;

        z1 = 1;

     label06:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void pushSubContextList(org.apache.xpath.axes.SubContextList)>(r0);

     label07:
        i6 = 0;

     label08:
        if i6 >= i0 goto label25;

     label09:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void pushPredicatePos(int)>(i6);

     label10:
        $r13 = r0.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.Expression[] m_predicates>;

        $r12 = $r13[i6];

        r9 = virtualinvoke $r12.<org.apache.xpath.Expression: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>(r1);

     label11:
        $i7 = virtualinvoke r9.<org.apache.xpath.objects.XObject: int getType()>();

        if 2 != $i7 goto label21;

        $r16 = new java.lang.Error;

        specialinvoke $r16.<java.lang.Error: void <init>(java.lang.String)>("Why: Should never have been called");

        throw $r16;

     label12:
        $r21 := @caughtexception;

        r11 = $r21;

     label13:
        virtualinvoke r9.<org.apache.xpath.objects.XObject: void detach()>();

        throw r11;

     label14:
        $r19 := @caughtexception;

        r10 = $r19;

     label15:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popPredicatePos()>();

        throw r10;

     label16:
        $r18 := @caughtexception;

        r8 = $r18;

     label17:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popSubContextList()>();

        throw r8;

     label18:
        $r17 := @caughtexception;

        r5 = $r17;

     label19:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        throw r5;

     label20:
        $r14 := @caughtexception;

        r3 = $r14;

        $r15 = new java.lang.RuntimeException;

        $r20 = virtualinvoke r3.<javax.xml.transform.TransformerException: java.lang.String getMessage()>();

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String)>($r20);

        throw $r15;

     label21:
        z2 = virtualinvoke r9.<org.apache.xpath.objects.XObject: boolean boolWithSideEffects()>();

     label22:
        if z2 != 0 goto label30;

        z1 = 0;

     label23:
        virtualinvoke r9.<org.apache.xpath.objects.XObject: void detach()>();

     label24:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popPredicatePos()>();

     label25:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popSubContextList()>();

     label26:
        if z1 == 0 goto label27;

        i2 = i2 + -1;

     label27:
        z3 = z0;

        i8 = (int) z3;

        if i2 >= i8 goto label33;

     label28:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popCurrentNode()>();

     label29:
        return 0;

     label30:
        virtualinvoke r9.<org.apache.xpath.objects.XObject: void detach()>();

     label31:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popPredicatePos()>();

     label32:
        i6 = i6 + 1;

        goto label08;

     label33:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        i5 = virtualinvoke r4.<org.apache.xml.dtm.DTMAxisTraverser: int next(int,int)>(i1, i4);

     label34:
        i4 = i5;

        goto label03;

     label35:
        z4 = z0;

        i9 = (int) z4;

        if i2 != i9 goto label37;

     label36:
        return z0;

     label37:
        z0 = 0;

        goto label36;

        catch javax.xml.transform.TransformerException from label01 to label02 with label20;
        catch java.lang.Throwable from label04 to label05 with label18;
        catch java.lang.Throwable from label06 to label07 with label16;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label11 to label12 with label12;
        catch java.lang.Throwable from label13 to label14 with label14;
        catch java.lang.Throwable from label15 to label16 with label16;
        catch java.lang.Throwable from label17 to label18 with label18;
        catch javax.xml.transform.TransformerException from label19 to label20 with label20;
        catch java.lang.Throwable from label21 to label22 with label12;
        catch java.lang.Throwable from label23 to label24 with label14;
        catch java.lang.Throwable from label24 to label25 with label16;
        catch java.lang.Throwable from label25 to label26 with label18;
        catch javax.xml.transform.TransformerException from label28 to label29 with label20;
        catch java.lang.Throwable from label30 to label31 with label14;
        catch java.lang.Throwable from label31 to label32 with label16;
        catch javax.xml.transform.TransformerException from label33 to label34 with label20;
    }

    private final int getProximityPosition(org.apache.xpath.XPathContext, int, boolean)
    {
        org.apache.xpath.patterns.StepPattern r0;
        org.apache.xpath.XPathContext r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10;
        boolean z0, z1, z2;
        org.apache.xml.dtm.DTM r2;
        javax.xml.transform.TransformerException r3, $r15;
        org.apache.xml.dtm.DTMAxisTraverser r4;
        java.lang.Throwable r5, r8, r9, r10, $r14, $r16, $r17, $r18;
        org.apache.xpath.objects.XNumber r6;
        org.apache.xpath.objects.XObject r7, r11;
        double d0;
        org.apache.xpath.Expression $r12;
        org.apache.xpath.Expression[] $r13;
        java.lang.RuntimeException $r19;
        java.lang.String $r20;

        r0 := @this: org.apache.xpath.patterns.StepPattern;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        i1 = 0;

        i2 = virtualinvoke r1.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        r2 = virtualinvoke r1.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>(i2);

        i3 = interfaceinvoke r2.<org.apache.xml.dtm.DTM: int getParent(int)>(i2);

     label01:
        r4 = interfaceinvoke r2.<org.apache.xml.dtm.DTM: org.apache.xml.dtm.DTMAxisTraverser getAxisTraverser(int)>(3);

        i4 = virtualinvoke r4.<org.apache.xml.dtm.DTMAxisTraverser: int first(int)>(i3);

     label02:
        i5 = i4;

     label03:
        if -1 == i5 goto label41;

     label04:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void pushCurrentNode(int)>(i5);

        r6 = <org.apache.xpath.patterns.NodeTest: org.apache.xpath.objects.XNumber SCORE_NONE>;

        r7 = specialinvoke r0.<org.apache.xpath.patterns.NodeTest: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)>(r1, i5);

     label05:
        if r6 == r7 goto label39;

        z1 = 1;

     label06:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void pushSubContextList(org.apache.xpath.axes.SubContextList)>(r0);

     label07:
        i7 = 0;

     label08:
        if i7 >= i0 goto label17;

     label09:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void pushPredicatePos(int)>(i7);

     label10:
        $r13 = r0.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.Expression[] m_predicates>;

        $r12 = $r13[i7];

        r11 = virtualinvoke $r12.<org.apache.xpath.Expression: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>(r1);

     label11:
        $i9 = virtualinvoke r11.<org.apache.xpath.objects.XObject: int getType()>();

        if 2 != $i9 goto label22;

     label12:
        i8 = i1 + 1;

     label13:
        d0 = virtualinvoke r11.<org.apache.xpath.objects.XObject: double numWithSideEffects()>();

     label14:
        $i10 = (int) d0;

        if i8 == $i10 goto label32;

        z1 = 0;

     label15:
        virtualinvoke r11.<org.apache.xpath.objects.XObject: void detach()>();

     label16:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popPredicatePos()>();

     label17:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popSubContextList()>();

     label18:
        if z1 == 0 goto label19;

        i1 = i1 + 1;

     label19:
        if z0 != 0 goto label39;

        if i5 != i2 goto label39;

     label20:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popCurrentNode()>();

     label21:
        return i1;

     label22:
        z2 = virtualinvoke r11.<org.apache.xpath.objects.XObject: boolean boolWithSideEffects()>();

     label23:
        if z2 != 0 goto label32;

     label24:
        virtualinvoke r11.<org.apache.xpath.objects.XObject: void detach()>();

     label25:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popPredicatePos()>();

     label26:
        z1 = 0;

        goto label17;

     label27:
        $r14 := @caughtexception;

        r8 = $r14;

     label28:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popSubContextList()>();

        throw r8;

     label29:
        $r16 := @caughtexception;

        r5 = $r16;

     label30:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        throw r5;

     label31:
        $r15 := @caughtexception;

        r3 = $r15;

        $r19 = new java.lang.RuntimeException;

        $r20 = virtualinvoke r3.<javax.xml.transform.TransformerException: java.lang.String getMessage()>();

        specialinvoke $r19.<java.lang.RuntimeException: void <init>(java.lang.String)>($r20);

        throw $r19;

     label32:
        virtualinvoke r11.<org.apache.xpath.objects.XObject: void detach()>();

     label33:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popPredicatePos()>();

     label34:
        i7 = i7 + 1;

        goto label08;

     label35:
        $r17 := @caughtexception;

        r10 = $r17;

     label36:
        virtualinvoke r11.<org.apache.xpath.objects.XObject: void detach()>();

        throw r10;

     label37:
        $r18 := @caughtexception;

        r9 = $r18;

     label38:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popPredicatePos()>();

        throw r9;

     label39:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        i6 = virtualinvoke r4.<org.apache.xml.dtm.DTMAxisTraverser: int next(int,int)>(i3, i5);

     label40:
        i5 = i6;

        goto label03;

     label41:
        return i1;

        catch javax.xml.transform.TransformerException from label01 to label02 with label31;
        catch java.lang.Throwable from label04 to label05 with label29;
        catch java.lang.Throwable from label06 to label07 with label27;
        catch java.lang.Throwable from label09 to label10 with label27;
        catch java.lang.Throwable from label10 to label11 with label37;
        catch java.lang.Throwable from label11 to label12 with label35;
        catch java.lang.Throwable from label13 to label14 with label35;
        catch java.lang.Throwable from label15 to label16 with label37;
        catch java.lang.Throwable from label16 to label17 with label27;
        catch java.lang.Throwable from label17 to label18 with label29;
        catch javax.xml.transform.TransformerException from label20 to label21 with label31;
        catch java.lang.Throwable from label22 to label23 with label35;
        catch java.lang.Throwable from label24 to label25 with label37;
        catch java.lang.Throwable from label25 to label26 with label27;
        catch java.lang.Throwable from label28 to label29 with label29;
        catch javax.xml.transform.TransformerException from label30 to label31 with label31;
        catch java.lang.Throwable from label32 to label33 with label37;
        catch java.lang.Throwable from label33 to label34 with label27;
        catch java.lang.Throwable from label36 to label37 with label37;
        catch java.lang.Throwable from label38 to label39 with label27;
        catch javax.xml.transform.TransformerException from label39 to label40 with label31;
    }

    public void calcScore()
    {
        org.apache.xpath.patterns.StepPattern r0, $r3;
        int $i0;
        org.apache.xpath.objects.XNumber $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xpath.patterns.StepPattern;

        $i0 = virtualinvoke r0.<org.apache.xpath.patterns.StepPattern: int getPredicateCount()>();

        if $i0 > 0 goto label1;

        $r3 = r0.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.patterns.StepPattern m_relativePathPattern>;

        if $r3 == null goto label4;

     label1:
        $r1 = <org.apache.xpath.patterns.StepPattern: org.apache.xpath.objects.XNumber SCORE_OTHER>;

        r0.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.objects.XNumber m_score> = $r1;

     label2:
        $r2 = r0.<org.apache.xpath.patterns.StepPattern: java.lang.String m_targetString>;

        if $r2 != null goto label3;

        virtualinvoke r0.<org.apache.xpath.patterns.StepPattern: void calcTargetString()>();

     label3:
        return;

     label4:
        specialinvoke r0.<org.apache.xpath.patterns.NodeTest: void calcScore()>();

        goto label2;
    }

    public void calcTargetString()
    {
        org.apache.xpath.patterns.StepPattern r0;
        int $i0;
        java.lang.String $r1, $r2;

        r0 := @this: org.apache.xpath.patterns.StepPattern;

        $i0 = virtualinvoke r0.<org.apache.xpath.patterns.StepPattern: int getWhatToShow()>();

        lookupswitch($i0)
        {
            case -1: goto label4;
            case 1: goto label6;
            case 4: goto label3;
            case 8: goto label3;
            case 12: goto label3;
            case 128: goto label2;
            case 256: goto label5;
            case 1280: goto label5;
            default: goto label1;
        };

     label1:
        r0.<org.apache.xpath.patterns.StepPattern: java.lang.String m_targetString> = "*";

        return;

     label2:
        r0.<org.apache.xpath.patterns.StepPattern: java.lang.String m_targetString> = "#comment";

        return;

     label3:
        r0.<org.apache.xpath.patterns.StepPattern: java.lang.String m_targetString> = "#text";

        return;

     label4:
        r0.<org.apache.xpath.patterns.StepPattern: java.lang.String m_targetString> = "*";

        return;

     label5:
        r0.<org.apache.xpath.patterns.StepPattern: java.lang.String m_targetString> = "/";

        return;

     label6:
        $r1 = r0.<org.apache.xpath.patterns.StepPattern: java.lang.String m_name>;

        if "*" != $r1 goto label7;

        r0.<org.apache.xpath.patterns.StepPattern: java.lang.String m_targetString> = "*";

        return;

     label7:
        $r2 = r0.<org.apache.xpath.patterns.StepPattern: java.lang.String m_name>;

        r0.<org.apache.xpath.patterns.StepPattern: java.lang.String m_targetString> = $r2;

        return;
    }

    protected void callSubtreeVisitors(org.apache.xpath.XPathVisitor)
    {
        org.apache.xpath.patterns.StepPattern r0, $r4, $r5;
        org.apache.xpath.XPathVisitor r1;
        int i0, i1;
        org.apache.xpath.patterns.StepPattern$PredOwner r2, $r7;
        org.apache.xpath.Expression[] $r3, $r6, $r8, $r10;
        org.apache.xpath.Expression $r9, $r11;
        boolean $z0;

        r0 := @this: org.apache.xpath.patterns.StepPattern;

        r1 := @parameter0: org.apache.xpath.XPathVisitor;

        $r3 = r0.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.Expression[] m_predicates>;

        if $r3 == null goto label3;

        $r6 = r0.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.Expression[] m_predicates>;

        i0 = lengthof $r6;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r7 = new org.apache.xpath.patterns.StepPattern$PredOwner;

        specialinvoke $r7.<org.apache.xpath.patterns.StepPattern$PredOwner: void <init>(org.apache.xpath.patterns.StepPattern,int)>(r0, i1);

        r2 = $r7;

        $r8 = r0.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.Expression[] m_predicates>;

        $r9 = $r8[i1];

        $z0 = virtualinvoke r1.<org.apache.xpath.XPathVisitor: boolean visitPredicate(org.apache.xpath.ExpressionOwner,org.apache.xpath.Expression)>(r2, $r9);

        if $z0 == 0 goto label2;

        $r10 = r0.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.Expression[] m_predicates>;

        $r11 = $r10[i1];

        virtualinvoke $r11.<org.apache.xpath.Expression: void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)>(r2, r1);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r4 = r0.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.patterns.StepPattern m_relativePathPattern>;

        if $r4 == null goto label4;

        $r5 = r0.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.patterns.StepPattern m_relativePathPattern>;

        virtualinvoke $r5.<org.apache.xpath.patterns.StepPattern: void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)>(r0, r1);

     label4:
        return;
    }

    public void callVisitors(org.apache.xpath.ExpressionOwner, org.apache.xpath.XPathVisitor)
    {
        org.apache.xpath.patterns.StepPattern r0;
        org.apache.xpath.ExpressionOwner r1;
        org.apache.xpath.XPathVisitor r2;
        boolean $z0;

        r0 := @this: org.apache.xpath.patterns.StepPattern;

        r1 := @parameter0: org.apache.xpath.ExpressionOwner;

        r2 := @parameter1: org.apache.xpath.XPathVisitor;

        $z0 = virtualinvoke r2.<org.apache.xpath.XPathVisitor: boolean visitMatchPattern(org.apache.xpath.ExpressionOwner,org.apache.xpath.patterns.StepPattern)>(r1, r0);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.xpath.patterns.StepPattern: void callSubtreeVisitors(org.apache.xpath.XPathVisitor)>(r2);

     label1:
        return;
    }

    public boolean canTraverseOutsideSubtree()
    {
        org.apache.xpath.patterns.StepPattern r0;
        int i0, i1;
        org.apache.xpath.Expression $r1;
        boolean $z0;

        r0 := @this: org.apache.xpath.patterns.StepPattern;

        i0 = virtualinvoke r0.<org.apache.xpath.patterns.StepPattern: int getPredicateCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r1 = virtualinvoke r0.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.Expression getPredicate(int)>(i1);

        $z0 = virtualinvoke $r1.<org.apache.xpath.Expression: boolean canTraverseOutsideSubtree()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public boolean deepEquals(org.apache.xpath.Expression)
    {
        org.apache.xpath.patterns.StepPattern r0, r2, $r5, $r6, $r7, $r8;
        org.apache.xpath.Expression r1, $r13, $r15;
        int i0, i1, $i2;
        boolean $z0, $z1, $z2;
        org.apache.xpath.Expression[] $r3, $r4, $r9, $r10, $r11, $r12, $r14;

        r0 := @this: org.apache.xpath.patterns.StepPattern;

        r1 := @parameter0: org.apache.xpath.Expression;

        $z0 = specialinvoke r0.<org.apache.xpath.patterns.NodeTest: boolean deepEquals(org.apache.xpath.Expression)>(r1);

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        r2 = (org.apache.xpath.patterns.StepPattern) r1;

        $r3 = r0.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.Expression[] m_predicates>;

        if $r3 == null goto label4;

        $r9 = r0.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.Expression[] m_predicates>;

        i0 = lengthof $r9;

        $r10 = r2.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.Expression[] m_predicates>;

        if $r10 == null goto label1;

        $r11 = r2.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.Expression[] m_predicates>;

        $i2 = lengthof $r11;

        if $i2 != i0 goto label1;

        i1 = 0;

     label3:
        if i1 >= i0 goto label5;

        $r12 = r0.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.Expression[] m_predicates>;

        $r15 = $r12[i1];

        $r14 = r2.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.Expression[] m_predicates>;

        $r13 = $r14[i1];

        $z2 = virtualinvoke $r15.<org.apache.xpath.Expression: boolean deepEquals(org.apache.xpath.Expression)>($r13);

        if $z2 == 0 goto label1;

        i1 = i1 + 1;

        goto label3;

     label4:
        $r4 = r2.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.Expression[] m_predicates>;

        if $r4 != null goto label1;

     label5:
        $r5 = r0.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.patterns.StepPattern m_relativePathPattern>;

        if $r5 == null goto label7;

        $r8 = r0.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.patterns.StepPattern m_relativePathPattern>;

        $r7 = r2.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.patterns.StepPattern m_relativePathPattern>;

        $z1 = virtualinvoke $r8.<org.apache.xpath.patterns.StepPattern: boolean deepEquals(org.apache.xpath.Expression)>($r7);

        if $z1 == 0 goto label1;

     label6:
        return 1;

     label7:
        $r6 = r2.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.patterns.StepPattern m_relativePathPattern>;

        if $r6 == null goto label6;

        return 0;
    }

    public org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.patterns.StepPattern r0;
        org.apache.xpath.XPathContext r1;
        int $i0;
        org.apache.xpath.objects.XObject $r2;

        r0 := @this: org.apache.xpath.patterns.StepPattern;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        $i0 = virtualinvoke r1.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        $r2 = virtualinvoke r0.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)>(r1, $i0);

        return $r2;
    }

    public org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext, int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.patterns.StepPattern r0;
        org.apache.xpath.XPathContext r1;
        int i0, $i1;
        org.apache.xml.dtm.DTM r2;
        org.apache.xpath.objects.XNumber $r3;
        org.apache.xpath.objects.XObject $r4;

        r0 := @this: org.apache.xpath.patterns.StepPattern;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        i0 := @parameter1: int;

        r2 = virtualinvoke r1.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>(i0);

        if r2 == null goto label1;

        $i1 = interfaceinvoke r2.<org.apache.xml.dtm.DTM: int getExpandedTypeID(int)>(i0);

        $r4 = virtualinvoke r0.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)>(r1, i0, r2, $i1);

        return $r4;

     label1:
        $r3 = <org.apache.xpath.patterns.NodeTest: org.apache.xpath.objects.XNumber SCORE_NONE>;

        return $r3;
    }

    public org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext, int, org.apache.xml.dtm.DTM, int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.patterns.StepPattern r0, $r5, $r6, $r11, $r12;
        org.apache.xpath.XPathContext r1;
        int i0, i1, $i2, $i3;
        org.apache.xml.dtm.DTM r2;
        org.apache.xpath.objects.XObject r3, $r7;
        org.apache.xpath.objects.XNumber $r4, $r8, $r9, $r10;
        boolean $z0;

        r0 := @this: org.apache.xpath.patterns.StepPattern;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.xml.dtm.DTM;

        i1 := @parameter3: int;

        $i2 = r0.<org.apache.xpath.patterns.StepPattern: int m_whatToShow>;

        if $i2 != 65536 goto label3;

        $r11 = r0.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.patterns.StepPattern m_relativePathPattern>;

        if $r11 == null goto label2;

        $r12 = r0.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.patterns.StepPattern m_relativePathPattern>;

        r3 = virtualinvoke $r12.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>(r1);

     label1:
        return r3;

     label2:
        $r10 = <org.apache.xpath.patterns.NodeTest: org.apache.xpath.objects.XNumber SCORE_NONE>;

        return $r10;

     label3:
        r3 = specialinvoke r0.<org.apache.xpath.patterns.NodeTest: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)>(r1, i0, r2, i1);

        $r4 = <org.apache.xpath.patterns.NodeTest: org.apache.xpath.objects.XNumber SCORE_NONE>;

        if r3 != $r4 goto label4;

        $r9 = <org.apache.xpath.patterns.NodeTest: org.apache.xpath.objects.XNumber SCORE_NONE>;

        return $r9;

     label4:
        $i3 = virtualinvoke r0.<org.apache.xpath.patterns.StepPattern: int getPredicateCount()>();

        if $i3 == 0 goto label5;

        $z0 = virtualinvoke r0.<org.apache.xpath.patterns.StepPattern: boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)>(r1, r2, i0);

        if $z0 != 0 goto label5;

        $r8 = <org.apache.xpath.patterns.NodeTest: org.apache.xpath.objects.XNumber SCORE_NONE>;

        return $r8;

     label5:
        $r5 = r0.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.patterns.StepPattern m_relativePathPattern>;

        if $r5 == null goto label1;

        $r6 = r0.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.patterns.StepPattern m_relativePathPattern>;

        $r7 = virtualinvoke $r6.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)>(r1, r2, i0);

        return $r7;
    }

    protected final boolean executePredicates(org.apache.xpath.XPathContext, org.apache.xml.dtm.DTM, int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.patterns.StepPattern r0;
        org.apache.xpath.XPathContext r1;
        org.apache.xml.dtm.DTM r2;
        int i0, i1, i2, i3, $i4;
        boolean z0, z1, z2, z3;
        java.lang.Throwable r3, r4, r6, $r9, $r10, $r11;
        org.apache.xpath.objects.XObject r5;
        double d0;
        org.apache.xpath.Expression $r7;
        org.apache.xpath.Expression[] $r8;

        r0 := @this: org.apache.xpath.patterns.StepPattern;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        r2 := @parameter1: org.apache.xml.dtm.DTM;

        i0 := @parameter2: int;

        z0 = 1;

        z1 = 0;

        i1 = virtualinvoke r0.<org.apache.xpath.patterns.StepPattern: int getPredicateCount()>();

     label01:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void pushSubContextList(org.apache.xpath.axes.SubContextList)>(r0);

     label02:
        i2 = 0;

     label03:
        if i2 >= i1 goto label10;

     label04:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void pushPredicatePos(int)>(i2);

     label05:
        $r8 = r0.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.Expression[] m_predicates>;

        $r7 = $r8[i2];

        r5 = virtualinvoke $r7.<org.apache.xpath.Expression: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>(r1);

     label06:
        $i4 = virtualinvoke r5.<org.apache.xpath.objects.XObject: int getType()>();

        if 2 != $i4 goto label19;

        d0 = virtualinvoke r5.<org.apache.xpath.objects.XObject: double num()>();

     label07:
        i3 = (int) d0;

        if z1 == 0 goto label12;

        if i3 != 1 goto label11;

        z0 = 1;

     label08:
        virtualinvoke r5.<org.apache.xpath.objects.XObject: void detach()>();

     label09:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popPredicatePos()>();

     label10:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popSubContextList()>();

        return z0;

     label11:
        z0 = 0;

        goto label08;

     label12:
        z1 = 1;

     label13:
        z3 = specialinvoke r0.<org.apache.xpath.patterns.StepPattern: boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)>(r1, i2, r2, i0, i3);

     label14:
        if z3 != 0 goto label24;

     label15:
        virtualinvoke r5.<org.apache.xpath.objects.XObject: void detach()>();

     label16:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popPredicatePos()>();

     label17:
        z0 = 0;

        goto label10;

     label18:
        $r10 := @caughtexception;

        r3 = $r10;

        virtualinvoke r1.<org.apache.xpath.XPathContext: void popSubContextList()>();

        throw r3;

     label19:
        z2 = virtualinvoke r5.<org.apache.xpath.objects.XObject: boolean boolWithSideEffects()>();

     label20:
        if z2 != 0 goto label24;

     label21:
        virtualinvoke r5.<org.apache.xpath.objects.XObject: void detach()>();

     label22:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popPredicatePos()>();

     label23:
        z0 = 0;

        goto label10;

     label24:
        virtualinvoke r5.<org.apache.xpath.objects.XObject: void detach()>();

     label25:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popPredicatePos()>();

     label26:
        i2 = i2 + 1;

        goto label03;

     label27:
        $r9 := @caughtexception;

        r6 = $r9;

     label28:
        virtualinvoke r5.<org.apache.xpath.objects.XObject: void detach()>();

        throw r6;

     label29:
        $r11 := @caughtexception;

        r4 = $r11;

     label30:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popPredicatePos()>();

        throw r4;

     label31:
        nop;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label04 to label05 with label18;
        catch java.lang.Throwable from label05 to label06 with label29;
        catch java.lang.Throwable from label06 to label07 with label27;
        catch java.lang.Throwable from label08 to label09 with label29;
        catch java.lang.Throwable from label09 to label10 with label18;
        catch java.lang.Throwable from label13 to label14 with label27;
        catch java.lang.Throwable from label15 to label16 with label29;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label27;
        catch java.lang.Throwable from label21 to label22 with label29;
        catch java.lang.Throwable from label22 to label23 with label18;
        catch java.lang.Throwable from label24 to label25 with label29;
        catch java.lang.Throwable from label25 to label26 with label18;
        catch java.lang.Throwable from label28 to label29 with label29;
        catch java.lang.Throwable from label30 to label31 with label18;
    }

    protected final org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext, org.apache.xml.dtm.DTM, int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.patterns.StepPattern r0;
        org.apache.xpath.XPathContext r1;
        org.apache.xml.dtm.DTM r2;
        int i0, i1, $i2;
        org.apache.xpath.objects.XObject r3;
        org.apache.xml.dtm.DTMAxisTraverser r4;
        java.lang.Throwable r5, $r7;
        org.apache.xpath.objects.XNumber r6;

        r0 := @this: org.apache.xpath.patterns.StepPattern;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        r2 := @parameter1: org.apache.xml.dtm.DTM;

        i0 := @parameter2: int;

        r3 = <org.apache.xpath.patterns.NodeTest: org.apache.xpath.objects.XNumber SCORE_NONE>;

        $i2 = r0.<org.apache.xpath.patterns.StepPattern: int m_axis>;

        r4 = interfaceinvoke r2.<org.apache.xml.dtm.DTM: org.apache.xml.dtm.DTMAxisTraverser getAxisTraverser(int)>($i2);

        i1 = virtualinvoke r4.<org.apache.xml.dtm.DTMAxisTraverser: int first(int)>(i0);

     label1:
        if -1 == i1 goto label4;

     label2:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void pushCurrentNode(int)>(i1);

        r3 = virtualinvoke r0.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>(r1);

        r6 = <org.apache.xpath.patterns.NodeTest: org.apache.xpath.objects.XNumber SCORE_NONE>;

     label3:
        if r3 == r6 goto label5;

        virtualinvoke r1.<org.apache.xpath.XPathContext: void popCurrentNode()>();

     label4:
        return r3;

     label5:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        i1 = virtualinvoke r4.<org.apache.xml.dtm.DTMAxisTraverser: int next(int,int)>(i0, i1);

        goto label1;

     label6:
        $r7 := @caughtexception;

        r5 = $r7;

        virtualinvoke r1.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        throw r5;

        catch java.lang.Throwable from label2 to label3 with label6;
    }

    public void fixupVariables(java.util.Vector, int)
    {
        org.apache.xpath.patterns.StepPattern r0, $r3, $r4;
        java.util.Vector r1;
        int i0, i1, $i2;
        org.apache.xpath.Expression[] $r2, $r5, $r6;
        org.apache.xpath.Expression $r7;

        r0 := @this: org.apache.xpath.patterns.StepPattern;

        r1 := @parameter0: java.util.Vector;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.xpath.patterns.NodeTest: void fixupVariables(java.util.Vector,int)>(r1, i0);

        $r2 = r0.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.Expression[] m_predicates>;

        if $r2 == null goto label2;

        i1 = 0;

     label1:
        $r5 = r0.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.Expression[] m_predicates>;

        $i2 = lengthof $r5;

        if i1 >= $i2 goto label2;

        $r6 = r0.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.Expression[] m_predicates>;

        $r7 = $r6[i1];

        virtualinvoke $r7.<org.apache.xpath.Expression: void fixupVariables(java.util.Vector,int)>(r1, i0);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r3 = r0.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.patterns.StepPattern m_relativePathPattern>;

        if $r3 == null goto label3;

        $r4 = r0.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.patterns.StepPattern m_relativePathPattern>;

        virtualinvoke $r4.<org.apache.xpath.patterns.StepPattern: void fixupVariables(java.util.Vector,int)>(r1, i0);

     label3:
        return;
    }

    public int getAxis()
    {
        org.apache.xpath.patterns.StepPattern r0;
        int $i0;

        r0 := @this: org.apache.xpath.patterns.StepPattern;

        $i0 = r0.<org.apache.xpath.patterns.StepPattern: int m_axis>;

        return $i0;
    }

    public org.apache.xpath.Expression getExpression()
    {
        org.apache.xpath.patterns.StepPattern r0, $r1;

        r0 := @this: org.apache.xpath.patterns.StepPattern;

        $r1 = r0.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.patterns.StepPattern m_relativePathPattern>;

        return $r1;
    }

    public int getLastPos(org.apache.xpath.XPathContext)
    {
        org.apache.xpath.patterns.StepPattern r0;
        org.apache.xpath.XPathContext r1;
        int $i0, $i1;

        r0 := @this: org.apache.xpath.patterns.StepPattern;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        $i0 = virtualinvoke r1.<org.apache.xpath.XPathContext: int getPredicatePos()>();

        $i1 = specialinvoke r0.<org.apache.xpath.patterns.StepPattern: int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)>(r1, $i0, 1);

        return $i1;
    }

    public double getMatchScore(org.apache.xpath.XPathContext, int) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.patterns.StepPattern r0;
        org.apache.xpath.XPathContext r1;
        int i0;
        java.lang.Throwable r2, $r4;
        double d0;
        org.apache.xpath.objects.XObject $r3;

        r0 := @this: org.apache.xpath.patterns.StepPattern;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        i0 := @parameter1: int;

        virtualinvoke r1.<org.apache.xpath.XPathContext: void pushCurrentNode(int)>(i0);

        virtualinvoke r1.<org.apache.xpath.XPathContext: void pushCurrentExpressionNode(int)>(i0);

     label1:
        $r3 = virtualinvoke r0.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>(r1);

        d0 = virtualinvoke $r3.<org.apache.xpath.objects.XObject: double num()>();

     label2:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        virtualinvoke r1.<org.apache.xpath.XPathContext: void popCurrentExpressionNode()>();

        return d0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        virtualinvoke r1.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        virtualinvoke r1.<org.apache.xpath.XPathContext: void popCurrentExpressionNode()>();

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public org.apache.xpath.Expression getPredicate(int)
    {
        org.apache.xpath.patterns.StepPattern r0;
        int i0;
        org.apache.xpath.Expression[] $r1;
        org.apache.xpath.Expression $r2;

        r0 := @this: org.apache.xpath.patterns.StepPattern;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.Expression[] m_predicates>;

        $r2 = $r1[i0];

        return $r2;
    }

    public final int getPredicateCount()
    {
        org.apache.xpath.patterns.StepPattern r0;
        org.apache.xpath.Expression[] $r1, $r2;
        int $i0;

        r0 := @this: org.apache.xpath.patterns.StepPattern;

        $r1 = r0.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.Expression[] m_predicates>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.Expression[] m_predicates>;

        $i0 = lengthof $r2;

        return $i0;
    }

    public org.apache.xpath.Expression[] getPredicates()
    {
        org.apache.xpath.patterns.StepPattern r0;
        org.apache.xpath.Expression[] $r1;

        r0 := @this: org.apache.xpath.patterns.StepPattern;

        $r1 = r0.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.Expression[] m_predicates>;

        return $r1;
    }

    public int getProximityPosition(org.apache.xpath.XPathContext)
    {
        org.apache.xpath.patterns.StepPattern r0;
        org.apache.xpath.XPathContext r1;
        int $i0, $i1;

        r0 := @this: org.apache.xpath.patterns.StepPattern;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        $i0 = virtualinvoke r1.<org.apache.xpath.XPathContext: int getPredicatePos()>();

        $i1 = specialinvoke r0.<org.apache.xpath.patterns.StepPattern: int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)>(r1, $i0, 0);

        return $i1;
    }

    public org.apache.xpath.patterns.StepPattern getRelativePathPattern()
    {
        org.apache.xpath.patterns.StepPattern r0, $r1;

        r0 := @this: org.apache.xpath.patterns.StepPattern;

        $r1 = r0.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.patterns.StepPattern m_relativePathPattern>;

        return $r1;
    }

    public java.lang.String getTargetString()
    {
        org.apache.xpath.patterns.StepPattern r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xpath.patterns.StepPattern;

        $r1 = r0.<org.apache.xpath.patterns.StepPattern: java.lang.String m_targetString>;

        return $r1;
    }

    public void setAxis(int)
    {
        org.apache.xpath.patterns.StepPattern r0;
        int i0;

        r0 := @this: org.apache.xpath.patterns.StepPattern;

        i0 := @parameter0: int;

        r0.<org.apache.xpath.patterns.StepPattern: int m_axis> = i0;

        return;
    }

    public void setExpression(org.apache.xpath.Expression)
    {
        org.apache.xpath.patterns.StepPattern r0, $r2;
        org.apache.xpath.Expression r1;

        r0 := @this: org.apache.xpath.patterns.StepPattern;

        r1 := @parameter0: org.apache.xpath.Expression;

        virtualinvoke r1.<org.apache.xpath.Expression: void exprSetParent(org.apache.xpath.ExpressionNode)>(r0);

        $r2 = (org.apache.xpath.patterns.StepPattern) r1;

        r0.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.patterns.StepPattern m_relativePathPattern> = $r2;

        return;
    }

    public void setPredicates(org.apache.xpath.Expression[])
    {
        org.apache.xpath.patterns.StepPattern r0;
        org.apache.xpath.Expression[] r1;
        int i0, $i1;
        org.apache.xpath.Expression $r2;

        r0 := @this: org.apache.xpath.patterns.StepPattern;

        r1 := @parameter0: org.apache.xpath.Expression[];

        r0.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.Expression[] m_predicates> = r1;

        if r1 == null goto label2;

        i0 = 0;

     label1:
        $i1 = lengthof r1;

        if i0 >= $i1 goto label2;

        $r2 = r1[i0];

        virtualinvoke $r2.<org.apache.xpath.Expression: void exprSetParent(org.apache.xpath.ExpressionNode)>(r0);

        i0 = i0 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<org.apache.xpath.patterns.StepPattern: void calcScore()>();

        return;
    }

    public void setRelativePathPattern(org.apache.xpath.patterns.StepPattern)
    {
        org.apache.xpath.patterns.StepPattern r0, r1;

        r0 := @this: org.apache.xpath.patterns.StepPattern;

        r1 := @parameter0: org.apache.xpath.patterns.StepPattern;

        r0.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.patterns.StepPattern m_relativePathPattern> = r1;

        virtualinvoke r1.<org.apache.xpath.patterns.StepPattern: void exprSetParent(org.apache.xpath.ExpressionNode)>(r0);

        virtualinvoke r0.<org.apache.xpath.patterns.StepPattern: void calcScore()>();

        return;
    }

    public java.lang.String toString()
    {
        org.apache.xpath.patterns.StepPattern r0, r2;
        java.lang.StringBuffer r1, $r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        java.lang.String $r4, $r5, $r8, $r11, $r12, $r26, $r27, $r30, $r33, $r39;
        java.lang.StringBuilder $r9, $r10, $r13;
        org.apache.xpath.Expression[] $r14, $r16, $r20;
        org.apache.xpath.Expression $r17;

        r0 := @this: org.apache.xpath.patterns.StepPattern;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        r1 = $r3;

        r2 = r0;

     label01:
        if r2 == null goto label18;

        if r2 == r0 goto label02;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

     label02:
        $i1 = r2.<org.apache.xpath.patterns.StepPattern: int m_axis>;

        $r5 = staticinvoke <org.apache.xml.dtm.Axis: java.lang.String getNames(int)>($i1);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("::");

        $i2 = r2.<org.apache.xpath.patterns.StepPattern: int m_whatToShow>;

        if 20480 != $i2 goto label05;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("doc()");

     label03:
        $r14 = r2.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.Expression[] m_predicates>;

        if $r14 == null goto label17;

        i0 = 0;

     label04:
        $r16 = r2.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.Expression[] m_predicates>;

        $i11 = lengthof $r16;

        if i0 >= $i11 goto label17;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");

        $r20 = r2.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.Expression[] m_predicates>;

        $r17 = $r20[i0];

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r17);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        i0 = i0 + 1;

        goto label04;

     label05:
        $i3 = r2.<org.apache.xpath.patterns.StepPattern: int m_whatToShow>;

        if 65536 != $i3 goto label06;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("function()");

        goto label03;

     label06:
        $i4 = r2.<org.apache.xpath.patterns.StepPattern: int m_whatToShow>;

        if -1 != $i4 goto label07;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("node()");

        goto label03;

     label07:
        $i6 = r2.<org.apache.xpath.patterns.StepPattern: int m_whatToShow>;

        if 4 != $i6 goto label08;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("text()");

        goto label03;

     label08:
        $i5 = r2.<org.apache.xpath.patterns.StepPattern: int m_whatToShow>;

        if 64 != $i5 goto label10;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("processing-instruction(");

        $r33 = r2.<org.apache.xpath.patterns.StepPattern: java.lang.String m_name>;

        if $r33 == null goto label09;

        $r39 = r2.<org.apache.xpath.patterns.StepPattern: java.lang.String m_name>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r39);

     label09:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        goto label03;

     label10:
        $i7 = r2.<org.apache.xpath.patterns.StepPattern: int m_whatToShow>;

        if 128 != $i7 goto label11;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("comment()");

        goto label03;

     label11:
        $r8 = r2.<org.apache.xpath.patterns.StepPattern: java.lang.String m_name>;

        if $r8 == null goto label14;

        $i12 = r2.<org.apache.xpath.patterns.StepPattern: int m_whatToShow>;

        if 2 != $i12 goto label12;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("@");

     label12:
        $r26 = r2.<org.apache.xpath.patterns.StepPattern: java.lang.String m_namespace>;

        if $r26 == null goto label13;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("{");

        $r30 = r2.<org.apache.xpath.patterns.StepPattern: java.lang.String m_namespace>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r30);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}");

     label13:
        $r27 = r2.<org.apache.xpath.patterns.StepPattern: java.lang.String m_name>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r27);

        goto label03;

     label14:
        $i9 = r2.<org.apache.xpath.patterns.StepPattern: int m_whatToShow>;

        if 2 != $i9 goto label15;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("@");

        goto label03;

     label15:
        $i8 = r2.<org.apache.xpath.patterns.StepPattern: int m_whatToShow>;

        if 1280 != $i8 goto label16;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("doc-root()");

        goto label03;

     label16:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        $i10 = r2.<org.apache.xpath.patterns.StepPattern: int m_whatToShow>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i10);

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        goto label03;

     label17:
        r2 = r2.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.patterns.StepPattern m_relativePathPattern>;

        goto label01;

     label18:
        $r4 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    public static void <clinit>()
    {
        <org.apache.xpath.patterns.StepPattern: long serialVersionUID> = 9071668960168152644L;

        <org.apache.xpath.patterns.StepPattern: boolean DEBUG_MATCHES> = 0;

        return;
    }
}
