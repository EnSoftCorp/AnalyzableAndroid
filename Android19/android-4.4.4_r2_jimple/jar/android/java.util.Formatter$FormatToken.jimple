class java.util.Formatter$FormatToken extends java.lang.Object
{
    static final int DEFAULT_PRECISION;
    static final int FLAGS_UNSET;
    static final int FLAG_ZERO;
    static final int LAST_ARGUMENT_INDEX;
    static final int UNSET;
    private int argIndex;
    private char conversionType;
    private char dateSuffix;
    boolean flagComma;
    boolean flagMinus;
    boolean flagParenthesis;
    boolean flagPlus;
    boolean flagSharp;
    boolean flagSpace;
    boolean flagZero;
    private int precision;
    private java.lang.StringBuilder strFlags;
    private int width;

    private void <init>()
    {
        java.util.Formatter$FormatToken r0;

        r0 := @this: java.util.Formatter$FormatToken;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.util.Formatter$FormatToken: int argIndex> = -1;

        r0.<java.util.Formatter$FormatToken: char conversionType> = 65535;

        r0.<java.util.Formatter$FormatToken: int precision> = -1;

        r0.<java.util.Formatter$FormatToken: int width> = -1;

        return;
    }

    void <init>(java.util.Formatter$1)
    {
        java.util.Formatter$FormatToken r0;
        java.util.Formatter$1 r1;

        r0 := @this: java.util.Formatter$FormatToken;

        r1 := @parameter0: java.util.Formatter$1;

        specialinvoke r0.<java.util.Formatter$FormatToken: void <init>()>();

        return;
    }

    void checkFlags(java.lang.Object)
    {
        java.util.Formatter$FormatToken r0;
        java.lang.Object r1;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, $z12, z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24;
        char c0, $c7, $c8, $c9, $c10;
        java.lang.String r2, $r10, $r18;
        int $i1, $i2, $i3, $i4, $i5, $i6;
        java.util.IllegalFormatFlagsException $r3, $r4, $r8, $r19;
        java.util.IllegalFormatWidthException $r5;
        java.util.IllegalFormatPrecisionException $r6;
        java.lang.StringBuilder $r7, $r9, $r12, $r13, $r14, $r15, $r16;
        java.util.MissingFormatWidthException $r11;
        java.util.FormatFlagsConversionMismatchException $r17;
        java.util.UnknownFormatConversionException $r20;

        r0 := @this: java.util.Formatter$FormatToken;

        r1 := @parameter0: java.lang.Object;

        z0 = 1;

        z1 = 1;

        z2 = 1;

        z3 = 1;

        c0 = r0.<java.util.Formatter$FormatToken: char conversionType>;

        z4 = 0;

        z5 = 0;

        z6 = 0;

        z7 = 0;

        z8 = 0;

        z9 = 0;

        lookupswitch(c0)
        {
            case 37: goto label15;
            case 65: goto label09;
            case 66: goto label03;
            case 67: goto label02;
            case 69: goto label08;
            case 71: goto label06;
            case 72: goto label03;
            case 83: goto label05;
            case 84: goto label02;
            case 88: goto label11;
            case 97: goto label09;
            case 98: goto label03;
            case 99: goto label02;
            case 100: goto label10;
            case 101: goto label08;
            case 102: goto label07;
            case 103: goto label06;
            case 104: goto label03;
            case 110: goto label14;
            case 111: goto label11;
            case 115: goto label05;
            case 116: goto label02;
            case 120: goto label11;
            default: goto label01;
        };

     label01:
        $r20 = virtualinvoke r0.<java.util.Formatter$FormatToken: java.util.UnknownFormatConversionException unknownFormatConversionException()>();

        throw $r20;

     label02:
        z1 = 0;

     label03:
        if z4 != 0 goto label16;

        $z21 = r0.<java.util.Formatter$FormatToken: boolean flagComma>;

        if $z21 == 0 goto label16;

        r2 = ",";

     label04:
        if r2 == null goto label23;

        $c9 = r0.<java.util.Formatter$FormatToken: char conversionType>;

        if $c9 != 110 goto label22;

        $r19 = new java.util.IllegalFormatFlagsException;

        specialinvoke $r19.<java.util.IllegalFormatFlagsException: void <init>(java.lang.String)>(r2);

        throw $r19;

     label05:
        z13 = r1 instanceof java.util.Formattable;

        z4 = 0;

        z5 = 0;

        z6 = 0;

        z7 = 0;

        z8 = 0;

        z9 = 0;

        if z13 == 0 goto label03;

        z7 = 1;

        z4 = 0;

        z5 = 0;

        z6 = 0;

        z8 = 0;

        z9 = 0;

        goto label03;

     label06:
        z9 = 1;

        z8 = z9;

        z6 = z9;

        z5 = z9;

        z4 = z9;

        z7 = 0;

        goto label03;

     label07:
        z9 = 1;

        z8 = z9;

        z7 = z9;

        z6 = z9;

        z5 = z9;

        z4 = z9;

        goto label03;

     label08:
        z9 = 1;

        z8 = z9;

        z7 = z9;

        z6 = z9;

        z5 = z9;

        z4 = 0;

        goto label03;

     label09:
        z9 = 1;

        z8 = z9;

        z7 = z9;

        z6 = z9;

        z4 = 0;

        z5 = 0;

        goto label03;

     label10:
        z9 = 1;

        z8 = z9;

        z6 = z9;

        z5 = z9;

        z4 = z9;

        z1 = 0;

        z7 = 0;

        goto label03;

     label11:
        z9 = 1;

        z7 = z9;

        if r1 == null goto label12;

        z11 = r1 instanceof java.math.BigInteger;

        z5 = 0;

        z6 = 0;

        z8 = 0;

        if z11 == 0 goto label13;

     label12:
        z8 = 1;

        z6 = z8;

        z5 = z8;

     label13:
        z4 = 0;

        z1 = 0;

        goto label03;

     label14:
        z3 = 0;

        z4 = 0;

        z0 = 0;

        z5 = 0;

        z6 = 0;

        z1 = 0;

        z7 = 0;

        z8 = 0;

        z2 = 0;

        z9 = 0;

        goto label03;

     label15:
        z3 = 0;

        z4 = 0;

        z5 = 0;

        z6 = 0;

        z1 = 0;

        z7 = 0;

        z8 = 0;

        z9 = 0;

        goto label03;

     label16:
        if z0 != 0 goto label17;

        $z22 = r0.<java.util.Formatter$FormatToken: boolean flagMinus>;

        if $z22 == 0 goto label17;

        r2 = "-";

        goto label04;

     label17:
        if z5 != 0 goto label18;

        $z23 = r0.<java.util.Formatter$FormatToken: boolean flagParenthesis>;

        if $z23 == 0 goto label18;

        r2 = "(";

        goto label04;

     label18:
        if z6 != 0 goto label19;

        $z24 = r0.<java.util.Formatter$FormatToken: boolean flagPlus>;

        if $z24 == 0 goto label19;

        r2 = "+";

        goto label04;

     label19:
        if z7 != 0 goto label20;

        $z19 = r0.<java.util.Formatter$FormatToken: boolean flagSharp>;

        if $z19 == 0 goto label20;

        r2 = "#";

        goto label04;

     label20:
        if z8 != 0 goto label21;

        $z20 = r0.<java.util.Formatter$FormatToken: boolean flagSpace>;

        if $z20 == 0 goto label21;

        r2 = " ";

        goto label04;

     label21:
        r2 = null;

        if z9 != 0 goto label04;

        z10 = r0.<java.util.Formatter$FormatToken: boolean flagZero>;

        r2 = null;

        if z10 == 0 goto label04;

        r2 = "0";

        goto label04;

     label22:
        $r17 = new java.util.FormatFlagsConversionMismatchException;

        $c10 = r0.<java.util.Formatter$FormatToken: char conversionType>;

        specialinvoke $r17.<java.util.FormatFlagsConversionMismatchException: void <init>(java.lang.String,char)>(r2, $c10);

        throw $r17;

     label23:
        $z12 = r0.<java.util.Formatter$FormatToken: boolean flagMinus>;

        if $z12 != 0 goto label24;

        $z18 = r0.<java.util.Formatter$FormatToken: boolean flagZero>;

        if $z18 == 0 goto label25;

     label24:
        $i1 = r0.<java.util.Formatter$FormatToken: int width>;

        if $i1 != -1 goto label25;

        $r11 = new java.util.MissingFormatWidthException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $c8 = r0.<java.util.Formatter$FormatToken: char conversionType>;

        $r14 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c8);

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.util.MissingFormatWidthException: void <init>(java.lang.String)>($r18);

        throw $r11;

     label25:
        if z3 != 0 goto label26;

        $i5 = r0.<java.util.Formatter$FormatToken: int argIndex>;

        if $i5 == -1 goto label26;

        $r8 = new java.util.IllegalFormatFlagsException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%");

        $c7 = r0.<java.util.Formatter$FormatToken: char conversionType>;

        $r12 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c7);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doesn\'t take an argument");

        $r10 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.util.IllegalFormatFlagsException: void <init>(java.lang.String)>($r10);

        throw $r8;

     label26:
        if z1 != 0 goto label27;

        $i4 = r0.<java.util.Formatter$FormatToken: int precision>;

        if $i4 == -1 goto label27;

        $r6 = new java.util.IllegalFormatPrecisionException;

        $i6 = r0.<java.util.Formatter$FormatToken: int precision>;

        specialinvoke $r6.<java.util.IllegalFormatPrecisionException: void <init>(int)>($i6);

        throw $r6;

     label27:
        if z2 != 0 goto label28;

        $i2 = r0.<java.util.Formatter$FormatToken: int width>;

        if $i2 == -1 goto label28;

        $r5 = new java.util.IllegalFormatWidthException;

        $i3 = r0.<java.util.Formatter$FormatToken: int width>;

        specialinvoke $r5.<java.util.IllegalFormatWidthException: void <init>(int)>($i3);

        throw $r5;

     label28:
        $z14 = r0.<java.util.Formatter$FormatToken: boolean flagPlus>;

        if $z14 == 0 goto label29;

        $z17 = r0.<java.util.Formatter$FormatToken: boolean flagSpace>;

        if $z17 == 0 goto label29;

        $r4 = new java.util.IllegalFormatFlagsException;

        specialinvoke $r4.<java.util.IllegalFormatFlagsException: void <init>(java.lang.String)>("the \'+\' and \' \' flags are incompatible");

        throw $r4;

     label29:
        $z16 = r0.<java.util.Formatter$FormatToken: boolean flagMinus>;

        if $z16 == 0 goto label30;

        $z15 = r0.<java.util.Formatter$FormatToken: boolean flagZero>;

        if $z15 == 0 goto label30;

        $r3 = new java.util.IllegalFormatFlagsException;

        specialinvoke $r3.<java.util.IllegalFormatFlagsException: void <init>(java.lang.String)>("the \'-\' and \'0\' flags are incompatible");

        throw $r3;

     label30:
        return;
    }

    int getArgIndex()
    {
        java.util.Formatter$FormatToken r0;
        int $i0;

        r0 := @this: java.util.Formatter$FormatToken;

        $i0 = r0.<java.util.Formatter$FormatToken: int argIndex>;

        return $i0;
    }

    char getConversionType()
    {
        java.util.Formatter$FormatToken r0;
        char $c0;

        r0 := @this: java.util.Formatter$FormatToken;

        $c0 = r0.<java.util.Formatter$FormatToken: char conversionType>;

        return $c0;
    }

    char getDateSuffix()
    {
        java.util.Formatter$FormatToken r0;
        char $c0;

        r0 := @this: java.util.Formatter$FormatToken;

        $c0 = r0.<java.util.Formatter$FormatToken: char dateSuffix>;

        return $c0;
    }

    int getPrecision()
    {
        java.util.Formatter$FormatToken r0;
        int $i0;

        r0 := @this: java.util.Formatter$FormatToken;

        $i0 = r0.<java.util.Formatter$FormatToken: int precision>;

        return $i0;
    }

    java.lang.String getStrFlags()
    {
        java.util.Formatter$FormatToken r0;
        java.lang.StringBuilder $r1, $r2;
        java.lang.String $r3;

        r0 := @this: java.util.Formatter$FormatToken;

        $r1 = r0.<java.util.Formatter$FormatToken: java.lang.StringBuilder strFlags>;

        if $r1 == null goto label1;

        $r2 = r0.<java.util.Formatter$FormatToken: java.lang.StringBuilder strFlags>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label1:
        return "";
    }

    int getWidth()
    {
        java.util.Formatter$FormatToken r0;
        int $i0;

        r0 := @this: java.util.Formatter$FormatToken;

        $i0 = r0.<java.util.Formatter$FormatToken: int width>;

        return $i0;
    }

    boolean isDefault()
    {
        java.util.Formatter$FormatToken r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        int $i0, $i1;

        r0 := @this: java.util.Formatter$FormatToken;

        $z0 = r0.<java.util.Formatter$FormatToken: boolean flagComma>;

        if $z0 != 0 goto label1;

        $z1 = r0.<java.util.Formatter$FormatToken: boolean flagMinus>;

        if $z1 != 0 goto label1;

        $z2 = r0.<java.util.Formatter$FormatToken: boolean flagParenthesis>;

        if $z2 != 0 goto label1;

        $z3 = r0.<java.util.Formatter$FormatToken: boolean flagPlus>;

        if $z3 != 0 goto label1;

        $z4 = r0.<java.util.Formatter$FormatToken: boolean flagSharp>;

        if $z4 != 0 goto label1;

        $z5 = r0.<java.util.Formatter$FormatToken: boolean flagSpace>;

        if $z5 != 0 goto label1;

        $z6 = r0.<java.util.Formatter$FormatToken: boolean flagZero>;

        if $z6 != 0 goto label1;

        $i0 = r0.<java.util.Formatter$FormatToken: int width>;

        if $i0 != -1 goto label1;

        $i1 = r0.<java.util.Formatter$FormatToken: int precision>;

        if $i1 != -1 goto label1;

        return 1;

     label1:
        return 0;
    }

    boolean isPrecisionSet()
    {
        java.util.Formatter$FormatToken r0;
        int $i0;

        r0 := @this: java.util.Formatter$FormatToken;

        $i0 = r0.<java.util.Formatter$FormatToken: int precision>;

        if $i0 == -1 goto label1;

        return 1;

     label1:
        return 0;
    }

    boolean requireArgument()
    {
        java.util.Formatter$FormatToken r0;
        char $c0, $c1;

        r0 := @this: java.util.Formatter$FormatToken;

        $c0 = r0.<java.util.Formatter$FormatToken: char conversionType>;

        if $c0 == 37 goto label1;

        $c1 = r0.<java.util.Formatter$FormatToken: char conversionType>;

        if $c1 == 110 goto label1;

        return 1;

     label1:
        return 0;
    }

    void setArgIndex(int)
    {
        java.util.Formatter$FormatToken r0;
        int i0;

        r0 := @this: java.util.Formatter$FormatToken;

        i0 := @parameter0: int;

        r0.<java.util.Formatter$FormatToken: int argIndex> = i0;

        return;
    }

    void setConversionType(char)
    {
        java.util.Formatter$FormatToken r0;
        char c0;

        r0 := @this: java.util.Formatter$FormatToken;

        c0 := @parameter0: char;

        r0.<java.util.Formatter$FormatToken: char conversionType> = c0;

        return;
    }

    void setDateSuffix(char)
    {
        java.util.Formatter$FormatToken r0;
        char c0;

        r0 := @this: java.util.Formatter$FormatToken;

        c0 := @parameter0: char;

        r0.<java.util.Formatter$FormatToken: char dateSuffix> = c0;

        return;
    }

    boolean setFlag(int)
    {
        java.util.Formatter$FormatToken r0;
        int i0;
        boolean z0;
        java.lang.StringBuilder $r1, $r2, $r4;
        char $c1;
        java.util.DuplicateFormatFlagsException $r5;
        java.lang.String $r6;

        r0 := @this: java.util.Formatter$FormatToken;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 32: goto label08;
            case 35: goto label07;
            case 40: goto label05;
            case 43: goto label06;
            case 44: goto label02;
            case 45: goto label04;
            case 48: goto label09;
            default: goto label01;
        };

     label01:
        return 0;

     label02:
        z0 = r0.<java.util.Formatter$FormatToken: boolean flagComma>;

        r0.<java.util.Formatter$FormatToken: boolean flagComma> = 1;

     label03:
        if z0 == 0 goto label10;

        $r5 = new java.util.DuplicateFormatFlagsException;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        specialinvoke $r5.<java.util.DuplicateFormatFlagsException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label04:
        z0 = r0.<java.util.Formatter$FormatToken: boolean flagMinus>;

        r0.<java.util.Formatter$FormatToken: boolean flagMinus> = 1;

        goto label03;

     label05:
        z0 = r0.<java.util.Formatter$FormatToken: boolean flagParenthesis>;

        r0.<java.util.Formatter$FormatToken: boolean flagParenthesis> = 1;

        goto label03;

     label06:
        z0 = r0.<java.util.Formatter$FormatToken: boolean flagPlus>;

        r0.<java.util.Formatter$FormatToken: boolean flagPlus> = 1;

        goto label03;

     label07:
        z0 = r0.<java.util.Formatter$FormatToken: boolean flagSharp>;

        r0.<java.util.Formatter$FormatToken: boolean flagSharp> = 1;

        goto label03;

     label08:
        z0 = r0.<java.util.Formatter$FormatToken: boolean flagSpace>;

        r0.<java.util.Formatter$FormatToken: boolean flagSpace> = 1;

        goto label03;

     label09:
        z0 = r0.<java.util.Formatter$FormatToken: boolean flagZero>;

        r0.<java.util.Formatter$FormatToken: boolean flagZero> = 1;

        goto label03;

     label10:
        $r1 = r0.<java.util.Formatter$FormatToken: java.lang.StringBuilder strFlags>;

        if $r1 != null goto label11;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>(7);

        r0.<java.util.Formatter$FormatToken: java.lang.StringBuilder strFlags> = $r4;

     label11:
        $r2 = r0.<java.util.Formatter$FormatToken: java.lang.StringBuilder strFlags>;

        $c1 = (char) i0;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        return 1;
    }

    void setPrecision(int)
    {
        java.util.Formatter$FormatToken r0;
        int i0;

        r0 := @this: java.util.Formatter$FormatToken;

        i0 := @parameter0: int;

        r0.<java.util.Formatter$FormatToken: int precision> = i0;

        return;
    }

    void setWidth(int)
    {
        java.util.Formatter$FormatToken r0;
        int i0;

        r0 := @this: java.util.Formatter$FormatToken;

        i0 := @parameter0: int;

        r0.<java.util.Formatter$FormatToken: int width> = i0;

        return;
    }

    public java.util.UnknownFormatConversionException unknownFormatConversionException()
    {
        java.util.Formatter$FormatToken r0;
        java.lang.Object[] r1;
        char $c0, $c1, $c2, $c3, $c4;
        java.lang.Character $r2, $r3;
        java.util.UnknownFormatConversionException $r4, $r6;
        java.lang.String $r5, $r7;

        r0 := @this: java.util.Formatter$FormatToken;

        $c0 = r0.<java.util.Formatter$FormatToken: char conversionType>;

        if $c0 == 116 goto label1;

        $c3 = r0.<java.util.Formatter$FormatToken: char conversionType>;

        if $c3 != 84 goto label2;

     label1:
        r1 = newarray (java.lang.Object)[2];

        $c1 = r0.<java.util.Formatter$FormatToken: char conversionType>;

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        r1[0] = $r2;

        $c2 = r0.<java.util.Formatter$FormatToken: char dateSuffix>;

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        r1[1] = $r3;

        $r4 = new java.util.UnknownFormatConversionException;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%c%c", r1);

        specialinvoke $r4.<java.util.UnknownFormatConversionException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label2:
        $r6 = new java.util.UnknownFormatConversionException;

        $c4 = r0.<java.util.Formatter$FormatToken: char conversionType>;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c4);

        specialinvoke $r6.<java.util.UnknownFormatConversionException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    public static void <clinit>()
    {
        <java.util.Formatter$FormatToken: int UNSET> = -1;

        <java.util.Formatter$FormatToken: int LAST_ARGUMENT_INDEX> = -2;

        <java.util.Formatter$FormatToken: int FLAG_ZERO> = 16;

        <java.util.Formatter$FormatToken: int FLAGS_UNSET> = 0;

        <java.util.Formatter$FormatToken: int DEFAULT_PRECISION> = 6;

        return;
    }
}
