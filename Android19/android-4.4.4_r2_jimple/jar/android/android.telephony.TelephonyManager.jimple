public class android.telephony.TelephonyManager extends java.lang.Object
{
    public static final java.lang.String ACTION_PHONE_STATE_CHANGED;
    public static final java.lang.String ACTION_RESPOND_VIA_MESSAGE;
    public static final int CALL_STATE_IDLE;
    public static final int CALL_STATE_OFFHOOK;
    public static final int CALL_STATE_RINGING;
    public static final int DATA_ACTIVITY_DORMANT;
    public static final int DATA_ACTIVITY_IN;
    public static final int DATA_ACTIVITY_INOUT;
    public static final int DATA_ACTIVITY_NONE;
    public static final int DATA_ACTIVITY_OUT;
    public static final int DATA_CONNECTED;
    public static final int DATA_CONNECTING;
    public static final int DATA_DISCONNECTED;
    public static final int DATA_SUSPENDED;
    public static final int DATA_UNKNOWN;
    public static final java.lang.String EXTRA_INCOMING_NUMBER;
    public static final java.lang.String EXTRA_STATE;
    public static final java.lang.String EXTRA_STATE_IDLE;
    public static final java.lang.String EXTRA_STATE_OFFHOOK;
    public static final java.lang.String EXTRA_STATE_RINGING;
    public static final int NETWORK_CLASS_2_G;
    public static final int NETWORK_CLASS_3_G;
    public static final int NETWORK_CLASS_4_G;
    public static final int NETWORK_CLASS_UNKNOWN;
    public static final int NETWORK_TYPE_1xRTT;
    public static final int NETWORK_TYPE_CDMA;
    public static final int NETWORK_TYPE_EDGE;
    public static final int NETWORK_TYPE_EHRPD;
    public static final int NETWORK_TYPE_EVDO_0;
    public static final int NETWORK_TYPE_EVDO_A;
    public static final int NETWORK_TYPE_EVDO_B;
    public static final int NETWORK_TYPE_GPRS;
    public static final int NETWORK_TYPE_HSDPA;
    public static final int NETWORK_TYPE_HSPA;
    public static final int NETWORK_TYPE_HSPAP;
    public static final int NETWORK_TYPE_HSUPA;
    public static final int NETWORK_TYPE_IDEN;
    public static final int NETWORK_TYPE_LTE;
    public static final int NETWORK_TYPE_UMTS;
    public static final int NETWORK_TYPE_UNKNOWN;
    public static final int PHONE_TYPE_CDMA;
    public static final int PHONE_TYPE_GSM;
    public static final int PHONE_TYPE_NONE;
    public static final int PHONE_TYPE_SIP;
    public static final int SIM_STATE_ABSENT;
    public static final int SIM_STATE_NETWORK_LOCKED;
    public static final int SIM_STATE_PIN_REQUIRED;
    public static final int SIM_STATE_PUK_REQUIRED;
    public static final int SIM_STATE_READY;
    public static final int SIM_STATE_UNKNOWN;
    private static final java.lang.String TAG;
    private static android.telephony.TelephonyManager sInstance;
    private static final java.lang.String sKernelCmdLine;
    private static final java.lang.String sLteOnCdmaProductType;
    private static final java.util.regex.Pattern sProductTypePattern;
    private static com.android.internal.telephony.ITelephonyRegistry sRegistry;
    private final android.content.Context mContext;
    private final java.util.HashMap mListeners;

    static void <clinit>()
    {
        android.telephony.TelephonyManager $r0;
        com.android.internal.telephony.PhoneConstants$State $r1, $r3, $r5;
        java.lang.String $r2, $r4, $r6, $r7, $r9;
        java.util.regex.Pattern $r8;

        <android.telephony.TelephonyManager: java.lang.String TAG> = "TelephonyManager";

        <android.telephony.TelephonyManager: int SIM_STATE_UNKNOWN> = 0;

        <android.telephony.TelephonyManager: int SIM_STATE_READY> = 5;

        <android.telephony.TelephonyManager: int SIM_STATE_PUK_REQUIRED> = 3;

        <android.telephony.TelephonyManager: int SIM_STATE_PIN_REQUIRED> = 2;

        <android.telephony.TelephonyManager: int SIM_STATE_NETWORK_LOCKED> = 4;

        <android.telephony.TelephonyManager: int SIM_STATE_ABSENT> = 1;

        <android.telephony.TelephonyManager: int PHONE_TYPE_SIP> = 3;

        <android.telephony.TelephonyManager: int PHONE_TYPE_NONE> = 0;

        <android.telephony.TelephonyManager: int PHONE_TYPE_GSM> = 1;

        <android.telephony.TelephonyManager: int PHONE_TYPE_CDMA> = 2;

        <android.telephony.TelephonyManager: int NETWORK_TYPE_UNKNOWN> = 0;

        <android.telephony.TelephonyManager: int NETWORK_TYPE_UMTS> = 3;

        <android.telephony.TelephonyManager: int NETWORK_TYPE_LTE> = 13;

        <android.telephony.TelephonyManager: int NETWORK_TYPE_IDEN> = 11;

        <android.telephony.TelephonyManager: int NETWORK_TYPE_HSUPA> = 9;

        <android.telephony.TelephonyManager: int NETWORK_TYPE_HSPAP> = 15;

        <android.telephony.TelephonyManager: int NETWORK_TYPE_HSPA> = 10;

        <android.telephony.TelephonyManager: int NETWORK_TYPE_HSDPA> = 8;

        <android.telephony.TelephonyManager: int NETWORK_TYPE_GPRS> = 1;

        <android.telephony.TelephonyManager: int NETWORK_TYPE_EVDO_B> = 12;

        <android.telephony.TelephonyManager: int NETWORK_TYPE_EVDO_A> = 6;

        <android.telephony.TelephonyManager: int NETWORK_TYPE_EVDO_0> = 5;

        <android.telephony.TelephonyManager: int NETWORK_TYPE_EHRPD> = 14;

        <android.telephony.TelephonyManager: int NETWORK_TYPE_EDGE> = 2;

        <android.telephony.TelephonyManager: int NETWORK_TYPE_CDMA> = 4;

        <android.telephony.TelephonyManager: int NETWORK_TYPE_1xRTT> = 7;

        <android.telephony.TelephonyManager: int NETWORK_CLASS_UNKNOWN> = 0;

        <android.telephony.TelephonyManager: int NETWORK_CLASS_4_G> = 3;

        <android.telephony.TelephonyManager: int NETWORK_CLASS_3_G> = 2;

        <android.telephony.TelephonyManager: int NETWORK_CLASS_2_G> = 1;

        <android.telephony.TelephonyManager: java.lang.String EXTRA_STATE> = "state";

        <android.telephony.TelephonyManager: java.lang.String EXTRA_INCOMING_NUMBER> = "incoming_number";

        <android.telephony.TelephonyManager: int DATA_UNKNOWN> = -1;

        <android.telephony.TelephonyManager: int DATA_SUSPENDED> = 3;

        <android.telephony.TelephonyManager: int DATA_DISCONNECTED> = 0;

        <android.telephony.TelephonyManager: int DATA_CONNECTING> = 1;

        <android.telephony.TelephonyManager: int DATA_CONNECTED> = 2;

        <android.telephony.TelephonyManager: int DATA_ACTIVITY_OUT> = 2;

        <android.telephony.TelephonyManager: int DATA_ACTIVITY_NONE> = 0;

        <android.telephony.TelephonyManager: int DATA_ACTIVITY_INOUT> = 3;

        <android.telephony.TelephonyManager: int DATA_ACTIVITY_IN> = 1;

        <android.telephony.TelephonyManager: int DATA_ACTIVITY_DORMANT> = 4;

        <android.telephony.TelephonyManager: int CALL_STATE_RINGING> = 1;

        <android.telephony.TelephonyManager: int CALL_STATE_OFFHOOK> = 2;

        <android.telephony.TelephonyManager: int CALL_STATE_IDLE> = 0;

        <android.telephony.TelephonyManager: java.lang.String ACTION_RESPOND_VIA_MESSAGE> = "android.intent.action.RESPOND_VIA_MESSAGE";

        <android.telephony.TelephonyManager: java.lang.String ACTION_PHONE_STATE_CHANGED> = "android.intent.action.PHONE_STATE";

        $r0 = new android.telephony.TelephonyManager;

        specialinvoke $r0.<android.telephony.TelephonyManager: void <init>()>();

        <android.telephony.TelephonyManager: android.telephony.TelephonyManager sInstance> = $r0;

        $r1 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State IDLE>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.PhoneConstants$State: java.lang.String toString()>();

        <android.telephony.TelephonyManager: java.lang.String EXTRA_STATE_IDLE> = $r2;

        $r3 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State RINGING>;

        $r4 = virtualinvoke $r3.<com.android.internal.telephony.PhoneConstants$State: java.lang.String toString()>();

        <android.telephony.TelephonyManager: java.lang.String EXTRA_STATE_RINGING> = $r4;

        $r5 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State OFFHOOK>;

        $r6 = virtualinvoke $r5.<com.android.internal.telephony.PhoneConstants$State: java.lang.String toString()>();

        <android.telephony.TelephonyManager: java.lang.String EXTRA_STATE_OFFHOOK> = $r6;

        $r7 = staticinvoke <android.telephony.TelephonyManager: java.lang.String getProcCmdLine()>();

        <android.telephony.TelephonyManager: java.lang.String sKernelCmdLine> = $r7;

        $r8 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\sproduct_type\\s*=\\s*(\\w+)");

        <android.telephony.TelephonyManager: java.util.regex.Pattern sProductTypePattern> = $r8;

        $r9 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("telephony.lteOnCdmaProductType", "");

        <android.telephony.TelephonyManager: java.lang.String sLteOnCdmaProductType> = $r9;

        return;
    }

    private void <init>()
    {
        android.telephony.TelephonyManager r0;
        java.util.HashMap $r1;

        r0 := @this: android.telephony.TelephonyManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<android.telephony.TelephonyManager: java.util.HashMap mListeners> = $r1;

        r0.<android.telephony.TelephonyManager: android.content.Context mContext> = null;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.telephony.TelephonyManager r0;
        android.content.Context r1, r2;
        java.util.HashMap $r3;
        com.android.internal.telephony.ITelephonyRegistry $r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: android.telephony.TelephonyManager;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<android.telephony.TelephonyManager: java.util.HashMap mListeners> = $r3;

        r2 = virtualinvoke r1.<android.content.Context: android.content.Context getApplicationContext()>();

        if r2 == null goto label3;

        r0.<android.telephony.TelephonyManager: android.content.Context mContext> = r2;

     label1:
        $r4 = <android.telephony.TelephonyManager: com.android.internal.telephony.ITelephonyRegistry sRegistry>;

        if $r4 != null goto label2;

        $r5 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("telephony.registry");

        $r6 = staticinvoke <com.android.internal.telephony.ITelephonyRegistry$Stub: com.android.internal.telephony.ITelephonyRegistry asInterface(android.os.IBinder)>($r5);

        <android.telephony.TelephonyManager: com.android.internal.telephony.ITelephonyRegistry sRegistry> = $r6;

     label2:
        return;

     label3:
        r0.<android.telephony.TelephonyManager: android.content.Context mContext> = r1;

        goto label1;
    }

    public static android.telephony.TelephonyManager 'from'(android.content.Context)
    {
        android.content.Context r0;
        java.lang.Object $r1;
        android.telephony.TelephonyManager $r2;

        r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r2 = (android.telephony.TelephonyManager) $r1;

        return $r2;
    }

    public static android.telephony.TelephonyManager getDefault()
    {
        android.telephony.TelephonyManager $r0;

        $r0 = <android.telephony.TelephonyManager: android.telephony.TelephonyManager sInstance>;

        return $r0;
    }

    private com.android.internal.telephony.ITelephony getITelephony()
    {
        android.telephony.TelephonyManager r0;
        android.os.IBinder $r1;
        com.android.internal.telephony.ITelephony $r2;

        r0 := @this: android.telephony.TelephonyManager;

        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("phone");

        $r2 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony asInterface(android.os.IBinder)>($r1);

        return $r2;
    }

    public static int getLteOnCdmaModeStatic()
    {
        java.lang.String r0, $r10, $r13, $r15, $r16;
        int i0, i1;
        java.util.regex.Matcher r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12;
        java.util.regex.Pattern $r14;
        boolean $z0, $z1;

        r0 = "";

        i0 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("telephony.lteOnCdmaDevice", -1);

        i1 = i0;

        if i1 != -1 goto label1;

        $r14 = <android.telephony.TelephonyManager: java.util.regex.Pattern sProductTypePattern>;

        $r15 = <android.telephony.TelephonyManager: java.lang.String sKernelCmdLine>;

        r1 = virtualinvoke $r14.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r15);

        $z0 = virtualinvoke r1.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label3;

        r0 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r16 = <android.telephony.TelephonyManager: java.lang.String sLteOnCdmaProductType>;

        $z1 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label2;

        i1 = 1;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getLteOnCdmaMode=");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" curVal=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" product_type=\'");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' lteOnCdmaProductType=\'");

        $r10 = <android.telephony.TelephonyManager: java.lang.String sLteOnCdmaProductType>;

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("TelephonyManager", $r13);

        return i1;

     label2:
        i1 = 0;

        goto label1;

     label3:
        i1 = 0;

        goto label1;
    }

    public static int getNetworkClass(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label2;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label2;
            case 5: goto label3;
            case 6: goto label3;
            case 7: goto label2;
            case 8: goto label3;
            case 9: goto label3;
            case 10: goto label3;
            case 11: goto label2;
            case 12: goto label3;
            case 13: goto label4;
            case 14: goto label3;
            case 15: goto label3;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        return 1;

     label3:
        return 2;

     label4:
        return 3;
    }

    public static java.lang.String getNetworkTypeName(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label08;
            case 5: goto label09;
            case 6: goto label10;
            case 7: goto label12;
            case 8: goto label05;
            case 9: goto label06;
            case 10: goto label07;
            case 11: goto label15;
            case 12: goto label11;
            case 13: goto label13;
            case 14: goto label14;
            case 15: goto label16;
            default: goto label01;
        };

     label01:
        return "UNKNOWN";

     label02:
        return "GPRS";

     label03:
        return "EDGE";

     label04:
        return "UMTS";

     label05:
        return "HSDPA";

     label06:
        return "HSUPA";

     label07:
        return "HSPA";

     label08:
        return "CDMA";

     label09:
        return "CDMA - EvDo rev. 0";

     label10:
        return "CDMA - EvDo rev. A";

     label11:
        return "CDMA - EvDo rev. B";

     label12:
        return "CDMA - 1xRTT";

     label13:
        return "LTE";

     label14:
        return "CDMA - eHRPD";

     label15:
        return "iDEN";

     label16:
        return "HSPA+";
    }

    public static int getPhoneType(int)
    {
        int i0, $i2;
        byte b1;

        i0 := @parameter0: int;

        b1 = 2;

        tableswitch(i0)
        {
            case 0: goto label3;
            case 1: goto label3;
            case 2: goto label3;
            case 3: goto label3;
            case 4: goto label2;
            case 5: goto label2;
            case 6: goto label2;
            case 7: goto label2;
            case 8: goto label2;
            case 9: goto label3;
            case 10: goto label3;
            case 11: goto label4;
            case 12: goto label3;
            default: goto label1;
        };

     label1:
        b1 = 1;

     label2:
        return b1;

     label3:
        return 1;

     label4:
        $i2 = staticinvoke <android.telephony.TelephonyManager: int getLteOnCdmaModeStatic()>();

        if $i2 == 1 goto label2;

        return 1;
    }

    private int getPhoneTypeFromNetworkType()
    {
        android.telephony.TelephonyManager r0;
        int i0, $i1;

        r0 := @this: android.telephony.TelephonyManager;

        i0 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("ro.telephony.default_network", -1);

        if i0 != -1 goto label1;

        return 0;

     label1:
        $i1 = staticinvoke <android.telephony.TelephonyManager: int getPhoneType(int)>(i0);

        return $i1;
    }

    private int getPhoneTypeFromProperty()
    {
        android.telephony.TelephonyManager r0;
        int $i0, $i1;

        r0 := @this: android.telephony.TelephonyManager;

        $i0 = specialinvoke r0.<android.telephony.TelephonyManager: int getPhoneTypeFromNetworkType()>();

        $i1 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("gsm.current.phone-type", $i0);

        return $i1;
    }

    private static java.lang.String getProcCmdLine()
    {
        java.lang.String r0, r8, $r13, $r15, $r23;
        java.io.FileInputStream r1, r2, $r10;
        java.io.IOException r3, $r16, $r18, $r19, $r24, $r26;
        java.lang.Throwable r4, $r17, $r25;
        byte[] r7;
        int i0;
        java.lang.StringBuilder $r11, $r12, $r14, $r20, $r21, $r22;

        r0 = "";

        r1 = null;

     label01:
        $r10 = new java.io.FileInputStream;

        specialinvoke $r10.<java.io.FileInputStream: void <init>(java.lang.String)>("/proc/cmdline");

        r2 = $r10;

     label02:
        r7 = newarray (byte)[2048];

        i0 = virtualinvoke r2.<java.io.FileInputStream: int read(byte[])>(r7);

     label03:
        if i0 <= 0 goto label06;

     label04:
        $r15 = new java.lang.String;

        specialinvoke $r15.<java.lang.String: void <init>(byte[],int,int)>(r7, 0, i0);

        r8 = $r15;

     label05:
        r0 = r8;

     label06:
        if r2 == null goto label23;

     label07:
        virtualinvoke r2.<java.io.FileInputStream: void close()>();

     label08:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/proc/cmdline=");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("TelephonyManager", $r13);

        return r0;

     label09:
        $r26 := @caughtexception;

        goto label08;

     label10:
        $r18 := @caughtexception;

        r3 = $r18;

     label11:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No /proc/cmdline exception=");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("TelephonyManager", $r23);

     label12:
        if r1 == null goto label08;

     label13:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label14:
        goto label08;

     label15:
        $r19 := @caughtexception;

        goto label08;

     label16:
        $r25 := @caughtexception;

        r4 = $r25;

     label17:
        if r1 == null goto label19;

     label18:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label19:
        throw r4;

     label20:
        $r16 := @caughtexception;

        goto label19;

     label21:
        $r17 := @caughtexception;

        r4 = $r17;

        r1 = r2;

        goto label17;

     label22:
        $r24 := @caughtexception;

        r3 = $r24;

        r1 = r2;

        goto label11;

     label23:
        goto label08;

        catch java.io.IOException from label01 to label02 with label10;
        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.io.IOException from label02 to label03 with label22;
        catch java.lang.Throwable from label02 to label03 with label21;
        catch java.io.IOException from label04 to label05 with label22;
        catch java.lang.Throwable from label04 to label05 with label21;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.io.IOException from label13 to label14 with label15;
        catch java.io.IOException from label18 to label19 with label20;
    }

    private com.android.internal.telephony.IPhoneSubInfo getSubscriberInfo()
    {
        android.telephony.TelephonyManager r0;
        android.os.IBinder $r1;
        com.android.internal.telephony.IPhoneSubInfo $r2;

        r0 := @this: android.telephony.TelephonyManager;

        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("iphonesubinfo");

        $r2 = staticinvoke <com.android.internal.telephony.IPhoneSubInfo$Stub: com.android.internal.telephony.IPhoneSubInfo asInterface(android.os.IBinder)>($r1);

        return $r2;
    }

    public void addCallStateListener(android.telephony.CallStateListener)
    {
        android.telephony.TelephonyManager r0;
        android.telephony.CallStateListener r1;
        android.telephony.TelephonyManager$Listener r2, $r5;
        android.os.RemoteException r3, $r10;
        java.util.HashMap $r4, $r6;
        boolean $z0;
        com.android.internal.telephony.ITelephony $r8;
        java.lang.RuntimeException $r9;

        r0 := @this: android.telephony.TelephonyManager;

        r1 := @parameter0: android.telephony.CallStateListener;

        if r1 != null goto label4;

     label1:
        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>("Listener can\'t be null");

        throw $r9;

     label2:
        $r10 := @caughtexception;

        r3 = $r10;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#addListener", r3);

     label3:
        return;

     label4:
        $r4 = r0.<android.telephony.TelephonyManager: java.util.HashMap mListeners>;

        $z0 = virtualinvoke $r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z0 != 0 goto label3;

        $r5 = new android.telephony.TelephonyManager$Listener;

        specialinvoke $r5.<android.telephony.TelephonyManager$Listener: void <init>(android.telephony.CallStateListener)>(r1);

        r2 = $r5;

        $r6 = r0.<android.telephony.TelephonyManager: java.util.HashMap mListeners>;

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r8 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        interfaceinvoke $r8.<com.android.internal.telephony.ITelephony: void addListener(com.android.internal.telephony.ITelephonyListener)>(r2);

     label5:
        return;

        catch android.os.RemoteException from label1 to label2 with label2;
        catch android.os.RemoteException from label4 to label5 with label2;
    }

    public void answerRingingCall()
    {
        android.telephony.TelephonyManager r0;
        android.os.RemoteException r1, $r3;
        com.android.internal.telephony.ITelephony $r2;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: void answerRingingCall()>();

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#answerRingingCall", r1);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void call(java.lang.String, java.lang.String)
    {
        android.telephony.TelephonyManager r0;
        java.lang.String r1, r2;
        android.os.RemoteException r3, $r5;
        com.android.internal.telephony.ITelephony $r4;

        r0 := @this: android.telephony.TelephonyManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

     label1:
        $r4 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: void call(java.lang.String,java.lang.String)>(r1, r2);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#call", r3);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void cancelMissedCallsNotification()
    {
        android.telephony.TelephonyManager r0;
        android.os.RemoteException r1, $r3;
        com.android.internal.telephony.ITelephony $r2;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: void cancelMissedCallsNotification()>();

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#cancelMissedCallsNotification", r1);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void dial(java.lang.String)
    {
        android.telephony.TelephonyManager r0;
        java.lang.String r1;
        android.os.RemoteException r2, $r4;
        com.android.internal.telephony.ITelephony $r3;

        r0 := @this: android.telephony.TelephonyManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        interfaceinvoke $r3.<com.android.internal.telephony.ITelephony: void dial(java.lang.String)>(r1);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#dial", r2);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int disableApnType(java.lang.String)
    {
        android.telephony.TelephonyManager r0;
        java.lang.String r1;
        android.os.RemoteException r2, $r4;
        int i0;
        com.android.internal.telephony.ITelephony $r3;

        r0 := @this: android.telephony.TelephonyManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        i0 = interfaceinvoke $r3.<com.android.internal.telephony.ITelephony: int disableApnType(java.lang.String)>(r1);

     label2:
        return i0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#disableApnType", r2);

        return 3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean disableDataConnectivity()
    {
        android.telephony.TelephonyManager r0;
        android.os.RemoteException r1, $r3;
        boolean z0;
        com.android.internal.telephony.ITelephony $r2;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        z0 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: boolean disableDataConnectivity()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#disableDataConnectivity", r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void disableLocationUpdates()
    {
        android.telephony.TelephonyManager r0;
        com.android.internal.telephony.ITelephony $r3;
        java.lang.NullPointerException $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r3 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        interfaceinvoke $r3.<com.android.internal.telephony.ITelephony: void disableLocationUpdates()>();

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        return;

     label4:
        $r5 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.NullPointerException from label1 to label2 with label3;
    }

    public int enableApnType(java.lang.String)
    {
        android.telephony.TelephonyManager r0;
        java.lang.String r1;
        android.os.RemoteException r2, $r4;
        int i0;
        com.android.internal.telephony.ITelephony $r3;

        r0 := @this: android.telephony.TelephonyManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        i0 = interfaceinvoke $r3.<com.android.internal.telephony.ITelephony: int enableApnType(java.lang.String)>(r1);

     label2:
        return i0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#enableApnType", r2);

        return 3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean enableDataConnectivity()
    {
        android.telephony.TelephonyManager r0;
        android.os.RemoteException r1, $r3;
        boolean z0;
        com.android.internal.telephony.ITelephony $r2;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        z0 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: boolean enableDataConnectivity()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#enableDataConnectivity", r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void enableLocationUpdates()
    {
        android.telephony.TelephonyManager r0;
        com.android.internal.telephony.ITelephony $r3;
        android.os.RemoteException $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r3 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        interfaceinvoke $r3.<com.android.internal.telephony.ITelephony: void enableLocationUpdates()>();

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        return;

     label4:
        $r4 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.NullPointerException from label1 to label2 with label3;
    }

    public boolean endCall()
    {
        android.telephony.TelephonyManager r0;
        android.os.RemoteException r1, $r3;
        boolean z0;
        com.android.internal.telephony.ITelephony $r2;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        z0 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: boolean endCall()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#endCall", r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getAllCellInfo()
    {
        android.telephony.TelephonyManager r0;
        java.util.List r3;
        com.android.internal.telephony.ITelephony $r4;
        java.lang.NullPointerException $r5;
        android.os.RemoteException $r6;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r4 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        r3 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: java.util.List getAllCellInfo()>();

     label2:
        return r3;

     label3:
        $r6 := @caughtexception;

        return null;

     label4:
        $r5 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public int getCallState()
    {
        android.telephony.TelephonyManager r0;
        int i0;
        com.android.internal.telephony.ITelephony $r3;
        java.lang.NullPointerException $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r3 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        i0 = interfaceinvoke $r3.<com.android.internal.telephony.ITelephony: int getCallState()>();

     label2:
        return i0;

     label3:
        $r5 := @caughtexception;

        return 0;

     label4:
        $r4 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public int getCdmaEriIconIndex()
    {
        android.telephony.TelephonyManager r0;
        int i0;
        com.android.internal.telephony.ITelephony $r3;
        java.lang.NullPointerException $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r3 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        i0 = interfaceinvoke $r3.<com.android.internal.telephony.ITelephony: int getCdmaEriIconIndex()>();

     label2:
        return i0;

     label3:
        $r5 := @caughtexception;

        return -1;

     label4:
        $r4 := @caughtexception;

        return -1;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public int getCdmaEriIconMode()
    {
        android.telephony.TelephonyManager r0;
        int i0;
        com.android.internal.telephony.ITelephony $r3;
        android.os.RemoteException $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r3 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        i0 = interfaceinvoke $r3.<com.android.internal.telephony.ITelephony: int getCdmaEriIconMode()>();

     label2:
        return i0;

     label3:
        $r4 := @caughtexception;

        return -1;

     label4:
        $r5 := @caughtexception;

        return -1;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public java.lang.String getCdmaEriText()
    {
        android.telephony.TelephonyManager r0;
        java.lang.String r3;
        com.android.internal.telephony.ITelephony $r4;
        java.lang.NullPointerException $r5;
        android.os.RemoteException $r6;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r4 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        r3 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: java.lang.String getCdmaEriText()>();

     label2:
        return r3;

     label3:
        $r6 := @caughtexception;

        return null;

     label4:
        $r5 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public android.telephony.CellLocation getCellLocation()
    {
        android.telephony.TelephonyManager r0;
        android.telephony.CellLocation r2;
        android.os.Bundle r4;
        boolean z0, $z1;
        com.android.internal.telephony.ITelephony $r5;
        android.os.RemoteException $r6;
        java.lang.NullPointerException $r7;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r5 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        r4 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: android.os.Bundle getCellLocation()>();

        $z1 = virtualinvoke r4.<android.os.Bundle: boolean isEmpty()>();

        if $z1 == 0 goto label3;

     label2:
        return null;

     label3:
        r2 = staticinvoke <android.telephony.CellLocation: android.telephony.CellLocation newFromBundle(android.os.Bundle)>(r4);

        z0 = virtualinvoke r2.<android.telephony.CellLocation: boolean isEmpty()>();

     label4:
        if z0 == 0 goto label7;

        return null;

     label5:
        $r6 := @caughtexception;

        return null;

     label6:
        $r7 := @caughtexception;

        r2 = null;

     label7:
        return r2;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch java.lang.NullPointerException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label5;
        catch java.lang.NullPointerException from label3 to label4 with label6;
    }

    public java.lang.String getCompleteVoiceMailNumber()
    {
        android.telephony.TelephonyManager r0;
        java.lang.String r3;
        com.android.internal.telephony.IPhoneSubInfo $r4;
        android.os.RemoteException $r5;
        java.lang.NullPointerException $r6;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r4 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.IPhoneSubInfo getSubscriberInfo()>();

        r3 = interfaceinvoke $r4.<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getCompleteVoiceMailNumber()>();

     label2:
        return r3;

     label3:
        $r5 := @caughtexception;

        return null;

     label4:
        $r6 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public int getCurrentPhoneType()
    {
        android.telephony.TelephonyManager r0;
        com.android.internal.telephony.ITelephony r3;
        int i0, $i1, $i2, $i3;
        android.os.RemoteException $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        r3 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

     label2:
        if r3 == null goto label4;

     label3:
        $i1 = interfaceinvoke r3.<com.android.internal.telephony.ITelephony: int getActivePhoneType()>();

        return $i1;

     label4:
        i0 = specialinvoke r0.<android.telephony.TelephonyManager: int getPhoneTypeFromProperty()>();

     label5:
        return i0;

     label6:
        $r4 := @caughtexception;

        $i2 = specialinvoke r0.<android.telephony.TelephonyManager: int getPhoneTypeFromProperty()>();

        return $i2;

     label7:
        $r5 := @caughtexception;

        $i3 = specialinvoke r0.<android.telephony.TelephonyManager: int getPhoneTypeFromProperty()>();

        return $i3;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch java.lang.NullPointerException from label1 to label2 with label7;
        catch android.os.RemoteException from label3 to label4 with label6;
        catch java.lang.NullPointerException from label3 to label4 with label7;
        catch android.os.RemoteException from label4 to label5 with label6;
        catch java.lang.NullPointerException from label4 to label5 with label7;
    }

    public int getDataActivity()
    {
        android.telephony.TelephonyManager r0;
        int i0;
        com.android.internal.telephony.ITelephony $r3;
        android.os.RemoteException $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r3 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        i0 = interfaceinvoke $r3.<com.android.internal.telephony.ITelephony: int getDataActivity()>();

     label2:
        return i0;

     label3:
        $r4 := @caughtexception;

        return 0;

     label4:
        $r5 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public int getDataNetworkType()
    {
        android.telephony.TelephonyManager r0;
        com.android.internal.telephony.ITelephony r3;
        int i0, i1;
        java.lang.NullPointerException $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        r3 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

     label2:
        i0 = 0;

        if r3 == null goto label5;

     label3:
        i1 = interfaceinvoke r3.<com.android.internal.telephony.ITelephony: int getDataNetworkType()>();

     label4:
        i0 = i1;

     label5:
        return i0;

     label6:
        $r5 := @caughtexception;

        return 0;

     label7:
        $r4 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch java.lang.NullPointerException from label1 to label2 with label7;
        catch android.os.RemoteException from label3 to label4 with label6;
        catch java.lang.NullPointerException from label3 to label4 with label7;
    }

    public int getDataState()
    {
        android.telephony.TelephonyManager r0;
        int i0;
        com.android.internal.telephony.ITelephony $r3;
        android.os.RemoteException $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r3 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        i0 = interfaceinvoke $r3.<com.android.internal.telephony.ITelephony: int getDataState()>();

     label2:
        return i0;

     label3:
        $r4 := @caughtexception;

        return 0;

     label4:
        $r5 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public java.lang.String getDeviceId()
    {
        android.telephony.TelephonyManager r0;
        java.lang.String r3;
        com.android.internal.telephony.IPhoneSubInfo $r4;
        android.os.RemoteException $r5;
        java.lang.NullPointerException $r6;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r4 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.IPhoneSubInfo getSubscriberInfo()>();

        r3 = interfaceinvoke $r4.<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getDeviceId()>();

     label2:
        return r3;

     label3:
        $r5 := @caughtexception;

        return null;

     label4:
        $r6 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public java.lang.String getDeviceSoftwareVersion()
    {
        android.telephony.TelephonyManager r0;
        java.lang.String r3;
        com.android.internal.telephony.IPhoneSubInfo $r4;
        java.lang.NullPointerException $r5;
        android.os.RemoteException $r6;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r4 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.IPhoneSubInfo getSubscriberInfo()>();

        r3 = interfaceinvoke $r4.<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getDeviceSvn()>();

     label2:
        return r3;

     label3:
        $r6 := @caughtexception;

        return null;

     label4:
        $r5 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public java.lang.String getGroupIdLevel1()
    {
        android.telephony.TelephonyManager r0;
        java.lang.String r3;
        com.android.internal.telephony.IPhoneSubInfo $r4;
        java.lang.NullPointerException $r5;
        android.os.RemoteException $r6;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r4 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.IPhoneSubInfo getSubscriberInfo()>();

        r3 = interfaceinvoke $r4.<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getGroupIdLevel1()>();

     label2:
        return r3;

     label3:
        $r6 := @caughtexception;

        return null;

     label4:
        $r5 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public java.lang.String getIsimDomain()
    {
        android.telephony.TelephonyManager r0;
        java.lang.String r3;
        com.android.internal.telephony.IPhoneSubInfo $r4;
        android.os.RemoteException $r5;
        java.lang.NullPointerException $r6;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r4 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.IPhoneSubInfo getSubscriberInfo()>();

        r3 = interfaceinvoke $r4.<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getIsimDomain()>();

     label2:
        return r3;

     label3:
        $r5 := @caughtexception;

        return null;

     label4:
        $r6 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public java.lang.String getIsimImpi()
    {
        android.telephony.TelephonyManager r0;
        java.lang.String r3;
        com.android.internal.telephony.IPhoneSubInfo $r4;
        android.os.RemoteException $r5;
        java.lang.NullPointerException $r6;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r4 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.IPhoneSubInfo getSubscriberInfo()>();

        r3 = interfaceinvoke $r4.<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getIsimImpi()>();

     label2:
        return r3;

     label3:
        $r5 := @caughtexception;

        return null;

     label4:
        $r6 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public java.lang.String[] getIsimImpu()
    {
        android.telephony.TelephonyManager r0;
        java.lang.String[] r3;
        com.android.internal.telephony.IPhoneSubInfo $r4;
        java.lang.NullPointerException $r5;
        android.os.RemoteException $r6;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r4 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.IPhoneSubInfo getSubscriberInfo()>();

        r3 = interfaceinvoke $r4.<com.android.internal.telephony.IPhoneSubInfo: java.lang.String[] getIsimImpu()>();

     label2:
        return r3;

     label3:
        $r6 := @caughtexception;

        return null;

     label4:
        $r5 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public java.lang.String getLine1AlphaTag()
    {
        android.telephony.TelephonyManager r0;
        java.lang.String r3;
        com.android.internal.telephony.IPhoneSubInfo $r4;
        android.os.RemoteException $r5;
        java.lang.NullPointerException $r6;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r4 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.IPhoneSubInfo getSubscriberInfo()>();

        r3 = interfaceinvoke $r4.<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getLine1AlphaTag()>();

     label2:
        return r3;

     label3:
        $r5 := @caughtexception;

        return null;

     label4:
        $r6 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public java.lang.String getLine1Number()
    {
        android.telephony.TelephonyManager r0;
        java.lang.String r3;
        com.android.internal.telephony.IPhoneSubInfo $r4;
        java.lang.NullPointerException $r5;
        android.os.RemoteException $r6;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r4 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.IPhoneSubInfo getSubscriberInfo()>();

        r3 = interfaceinvoke $r4.<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getLine1Number()>();

     label2:
        return r3;

     label3:
        $r6 := @caughtexception;

        return null;

     label4:
        $r5 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public int getLteOnCdmaMode()
    {
        android.telephony.TelephonyManager r0;
        int i0;
        com.android.internal.telephony.ITelephony $r3;
        java.lang.NullPointerException $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r3 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        i0 = interfaceinvoke $r3.<com.android.internal.telephony.ITelephony: int getLteOnCdmaMode()>();

     label2:
        return i0;

     label3:
        $r5 := @caughtexception;

        return -1;

     label4:
        $r4 := @caughtexception;

        return -1;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public java.lang.String getMmsUAProfUrl()
    {
        android.telephony.TelephonyManager r0;
        android.content.Context $r1, $r2;
        android.content.res.Resources $r3;
        java.lang.String $r4;

        r0 := @this: android.telephony.TelephonyManager;

        $r1 = r0.<android.telephony.TelephonyManager: android.content.Context mContext>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<android.telephony.TelephonyManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: java.lang.String getString(int)>(17039406);

        return $r4;
    }

    public java.lang.String getMmsUserAgent()
    {
        android.telephony.TelephonyManager r0;
        android.content.Context $r1, $r2;
        android.content.res.Resources $r3;
        java.lang.String $r4;

        r0 := @this: android.telephony.TelephonyManager;

        $r1 = r0.<android.telephony.TelephonyManager: android.content.Context mContext>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<android.telephony.TelephonyManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: java.lang.String getString(int)>(17039405);

        return $r4;
    }

    public java.lang.String getMsisdn()
    {
        android.telephony.TelephonyManager r0;
        java.lang.String r3;
        com.android.internal.telephony.IPhoneSubInfo $r4;
        android.os.RemoteException $r5;
        java.lang.NullPointerException $r6;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r4 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.IPhoneSubInfo getSubscriberInfo()>();

        r3 = interfaceinvoke $r4.<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getMsisdn()>();

     label2:
        return r3;

     label3:
        $r5 := @caughtexception;

        return null;

     label4:
        $r6 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public java.util.List getNeighboringCellInfo()
    {
        android.telephony.TelephonyManager r0;
        java.util.List r3;
        com.android.internal.telephony.ITelephony $r4;
        android.content.Context $r5;
        java.lang.String $r6;
        java.lang.NullPointerException $r7;
        android.os.RemoteException $r8;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r4 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        $r5 = r0.<android.telephony.TelephonyManager: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.String getOpPackageName()>();

        r3 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: java.util.List getNeighboringCellInfo(java.lang.String)>($r6);

     label2:
        return r3;

     label3:
        $r8 := @caughtexception;

        return null;

     label4:
        $r7 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public java.lang.String getNetworkCountryIso()
    {
        android.telephony.TelephonyManager r0;
        java.lang.String $r1;

        r0 := @this: android.telephony.TelephonyManager;

        $r1 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("gsm.operator.iso-country");

        return $r1;
    }

    public java.lang.String getNetworkOperator()
    {
        android.telephony.TelephonyManager r0;
        java.lang.String $r1;

        r0 := @this: android.telephony.TelephonyManager;

        $r1 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("gsm.operator.numeric");

        return $r1;
    }

    public java.lang.String getNetworkOperatorName()
    {
        android.telephony.TelephonyManager r0;
        java.lang.String $r1;

        r0 := @this: android.telephony.TelephonyManager;

        $r1 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("gsm.operator.alpha");

        return $r1;
    }

    public int getNetworkType()
    {
        android.telephony.TelephonyManager r0;
        int $i0;

        r0 := @this: android.telephony.TelephonyManager;

        $i0 = virtualinvoke r0.<android.telephony.TelephonyManager: int getDataNetworkType()>();

        return $i0;
    }

    public java.lang.String getNetworkTypeName()
    {
        android.telephony.TelephonyManager r0;
        int $i0;
        java.lang.String $r1;

        r0 := @this: android.telephony.TelephonyManager;

        $i0 = virtualinvoke r0.<android.telephony.TelephonyManager: int getNetworkType()>();

        $r1 = staticinvoke <android.telephony.TelephonyManager: java.lang.String getNetworkTypeName(int)>($i0);

        return $r1;
    }

    public int getPhoneType()
    {
        android.telephony.TelephonyManager r0;
        boolean $z0;
        int $i0;

        r0 := @this: android.telephony.TelephonyManager;

        $z0 = virtualinvoke r0.<android.telephony.TelephonyManager: boolean isVoiceCapable()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r0.<android.telephony.TelephonyManager: int getCurrentPhoneType()>();

        return $i0;
    }

    public java.lang.String getSimCountryIso()
    {
        android.telephony.TelephonyManager r0;
        java.lang.String $r1;

        r0 := @this: android.telephony.TelephonyManager;

        $r1 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("gsm.sim.operator.iso-country");

        return $r1;
    }

    public java.lang.String getSimOperator()
    {
        android.telephony.TelephonyManager r0;
        java.lang.String $r1;

        r0 := @this: android.telephony.TelephonyManager;

        $r1 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("gsm.sim.operator.numeric");

        return $r1;
    }

    public java.lang.String getSimOperatorName()
    {
        android.telephony.TelephonyManager r0;
        java.lang.String $r1;

        r0 := @this: android.telephony.TelephonyManager;

        $r1 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("gsm.sim.operator.alpha");

        return $r1;
    }

    public java.lang.String getSimSerialNumber()
    {
        android.telephony.TelephonyManager r0;
        java.lang.String r3;
        com.android.internal.telephony.IPhoneSubInfo $r4;
        android.os.RemoteException $r5;
        java.lang.NullPointerException $r6;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r4 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.IPhoneSubInfo getSubscriberInfo()>();

        r3 = interfaceinvoke $r4.<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getIccSerialNumber()>();

     label2:
        return r3;

     label3:
        $r5 := @caughtexception;

        return null;

     label4:
        $r6 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public int getSimState()
    {
        android.telephony.TelephonyManager r0;
        java.lang.String r1, $r2, $r3, $r4, $r5, $r6;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: android.telephony.TelephonyManager;

        r1 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("gsm.sim.state");

        $r2 = "ABSENT";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r3 = "PIN_REQUIRED";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        return 2;

     label2:
        $r4 = "PUK_REQUIRED";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label3;

        return 3;

     label3:
        $r5 = "NETWORK_LOCKED";

        $z3 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z3 == 0 goto label4;

        return 4;

     label4:
        $r6 = "READY";

        $z4 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z4 == 0 goto label5;

        return 5;

     label5:
        return 0;
    }

    public java.lang.String getSubscriberId()
    {
        android.telephony.TelephonyManager r0;
        java.lang.String r3;
        com.android.internal.telephony.IPhoneSubInfo $r4;
        android.os.RemoteException $r5;
        java.lang.NullPointerException $r6;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r4 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.IPhoneSubInfo getSubscriberInfo()>();

        r3 = interfaceinvoke $r4.<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getSubscriberId()>();

     label2:
        return r3;

     label3:
        $r5 := @caughtexception;

        return null;

     label4:
        $r6 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public java.lang.String getVoiceMailAlphaTag()
    {
        android.telephony.TelephonyManager r0;
        java.lang.String r3;
        com.android.internal.telephony.IPhoneSubInfo $r4;
        android.os.RemoteException $r5;
        java.lang.NullPointerException $r6;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r4 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.IPhoneSubInfo getSubscriberInfo()>();

        r3 = interfaceinvoke $r4.<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getVoiceMailAlphaTag()>();

     label2:
        return r3;

     label3:
        $r5 := @caughtexception;

        return null;

     label4:
        $r6 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public java.lang.String getVoiceMailNumber()
    {
        android.telephony.TelephonyManager r0;
        java.lang.String r3;
        com.android.internal.telephony.IPhoneSubInfo $r4;
        android.os.RemoteException $r5;
        java.lang.NullPointerException $r6;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r4 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.IPhoneSubInfo getSubscriberInfo()>();

        r3 = interfaceinvoke $r4.<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getVoiceMailNumber()>();

     label2:
        return r3;

     label3:
        $r5 := @caughtexception;

        return null;

     label4:
        $r6 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public int getVoiceMessageCount()
    {
        android.telephony.TelephonyManager r0;
        int i0;
        com.android.internal.telephony.ITelephony $r3;
        java.lang.NullPointerException $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r3 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        i0 = interfaceinvoke $r3.<com.android.internal.telephony.ITelephony: int getVoiceMessageCount()>();

     label2:
        return i0;

     label3:
        $r5 := @caughtexception;

        return 0;

     label4:
        $r4 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public int getVoiceNetworkType()
    {
        android.telephony.TelephonyManager r0;
        com.android.internal.telephony.ITelephony r3;
        int i0, i1;
        java.lang.NullPointerException $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        r3 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

     label2:
        i0 = 0;

        if r3 == null goto label5;

     label3:
        i1 = interfaceinvoke r3.<com.android.internal.telephony.ITelephony: int getVoiceNetworkType()>();

     label4:
        i0 = i1;

     label5:
        return i0;

     label6:
        $r5 := @caughtexception;

        return 0;

     label7:
        $r4 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch java.lang.NullPointerException from label1 to label2 with label7;
        catch android.os.RemoteException from label3 to label4 with label6;
        catch java.lang.NullPointerException from label3 to label4 with label7;
    }

    public boolean handlePinMmi(java.lang.String)
    {
        android.telephony.TelephonyManager r0;
        java.lang.String r1;
        android.os.RemoteException r2, $r4;
        boolean z0;
        com.android.internal.telephony.ITelephony $r3;

        r0 := @this: android.telephony.TelephonyManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        z0 = interfaceinvoke $r3.<com.android.internal.telephony.ITelephony: boolean handlePinMmi(java.lang.String)>(r1);

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#handlePinMmi", r2);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean hasIccCard()
    {
        android.telephony.TelephonyManager r0;
        boolean z0;
        com.android.internal.telephony.ITelephony $r3;
        android.os.RemoteException $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r3 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        z0 = interfaceinvoke $r3.<com.android.internal.telephony.ITelephony: boolean hasIccCard()>();

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

        return 0;

     label4:
        $r5 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public boolean isDataConnectivityPossible()
    {
        android.telephony.TelephonyManager r0;
        android.os.RemoteException r1, $r3;
        boolean z0;
        com.android.internal.telephony.ITelephony $r2;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        z0 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: boolean isDataConnectivityPossible()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#isDataConnectivityPossible", r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isIdle()
    {
        android.telephony.TelephonyManager r0;
        android.os.RemoteException r1, $r3;
        boolean z0;
        com.android.internal.telephony.ITelephony $r2;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        z0 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: boolean isIdle()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#isIdle", r1);

        return 1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isNetworkRoaming()
    {
        android.telephony.TelephonyManager r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: android.telephony.TelephonyManager;

        $r1 = "true";

        $r2 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("gsm.operator.isroaming");

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        return $z0;
    }

    public boolean isOffhook()
    {
        android.telephony.TelephonyManager r0;
        android.os.RemoteException r1, $r3;
        boolean z0;
        com.android.internal.telephony.ITelephony $r2;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        z0 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: boolean isOffhook()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#isOffhook", r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isRadioOn()
    {
        android.telephony.TelephonyManager r0;
        android.os.RemoteException r1, $r3;
        boolean z0;
        com.android.internal.telephony.ITelephony $r2;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        z0 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: boolean isRadioOn()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#isRadioOn", r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isRinging()
    {
        android.telephony.TelephonyManager r0;
        android.os.RemoteException r1, $r3;
        boolean z0;
        com.android.internal.telephony.ITelephony $r2;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        z0 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: boolean isRinging()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#isRinging", r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isSimPinEnabled()
    {
        android.telephony.TelephonyManager r0;
        android.os.RemoteException r1, $r3;
        boolean z0;
        com.android.internal.telephony.ITelephony $r2;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        z0 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: boolean isSimPinEnabled()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#isSimPinEnabled", r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isSmsCapable()
    {
        android.telephony.TelephonyManager r0;
        android.content.Context $r1, $r2;
        android.content.res.Resources $r3;
        boolean $z0;

        r0 := @this: android.telephony.TelephonyManager;

        $r1 = r0.<android.telephony.TelephonyManager: android.content.Context mContext>;

        if $r1 != null goto label1;

        return 1;

     label1:
        $r2 = r0.<android.telephony.TelephonyManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $z0 = virtualinvoke $r3.<android.content.res.Resources: boolean getBoolean(int)>(17891385);

        return $z0;
    }

    public boolean isVoiceCapable()
    {
        android.telephony.TelephonyManager r0;
        android.content.Context $r1, $r2;
        android.content.res.Resources $r3;
        boolean $z0;

        r0 := @this: android.telephony.TelephonyManager;

        $r1 = r0.<android.telephony.TelephonyManager: android.content.Context mContext>;

        if $r1 != null goto label1;

        return 1;

     label1:
        $r2 = r0.<android.telephony.TelephonyManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $z0 = virtualinvoke $r3.<android.content.res.Resources: boolean getBoolean(int)>(17891384);

        return $z0;
    }

    public void listen(android.telephony.PhoneStateListener, int)
    {
        android.telephony.TelephonyManager r0;
        android.telephony.PhoneStateListener r1;
        int i0;
        java.lang.String r2;
        java.lang.Boolean r5;
        android.content.Context $r6, $r9;
        com.android.internal.telephony.ITelephonyRegistry $r7;
        com.android.internal.telephony.IPhoneStateListener $r8;
        boolean $z0;
        android.os.RemoteException $r10;
        java.lang.NullPointerException $r11;

        r0 := @this: android.telephony.TelephonyManager;

        r1 := @parameter0: android.telephony.PhoneStateListener;

        i0 := @parameter1: int;

        $r6 = r0.<android.telephony.TelephonyManager: android.content.Context mContext>;

        if $r6 == null goto label3;

        $r9 = r0.<android.telephony.TelephonyManager: android.content.Context mContext>;

        r2 = virtualinvoke $r9.<android.content.Context: java.lang.String getPackageName()>();

     label1:
        r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $r7 = <android.telephony.TelephonyManager: com.android.internal.telephony.ITelephonyRegistry sRegistry>;

        $r8 = r1.<android.telephony.PhoneStateListener: com.android.internal.telephony.IPhoneStateListener callback>;

        $z0 = virtualinvoke r5.<java.lang.Boolean: boolean booleanValue()>();

        interfaceinvoke $r7.<com.android.internal.telephony.ITelephonyRegistry: void listen(java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)>(r2, $r8, i0, $z0);

     label2:
        return;

     label3:
        r2 = "<unknown>";

        goto label1;

     label4:
        $r11 := @caughtexception;

        return;

     label5:
        $r10 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public void merge()
    {
        android.telephony.TelephonyManager r0;
        android.os.RemoteException r1, $r3;
        com.android.internal.telephony.ITelephony $r2;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: void merge()>();

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#merge", r1);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void mute(boolean)
    {
        android.telephony.TelephonyManager r0;
        boolean z0;
        android.os.RemoteException r1, $r3;
        com.android.internal.telephony.ITelephony $r2;

        r0 := @this: android.telephony.TelephonyManager;

        z0 := @parameter0: boolean;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: void mute(boolean)>(z0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#mute", r1);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean needsOtaServiceProvisioning()
    {
        android.telephony.TelephonyManager r0;
        android.os.RemoteException r1, $r3;
        boolean z0;
        com.android.internal.telephony.ITelephony $r2;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        z0 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: boolean needsOtaServiceProvisioning()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#needsOtaServiceProvisioning", r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void playDtmfTone(char, boolean)
    {
        android.telephony.TelephonyManager r0;
        char c0;
        boolean z0;
        android.os.RemoteException r1, $r3;
        com.android.internal.telephony.ITelephony $r2;

        r0 := @this: android.telephony.TelephonyManager;

        c0 := @parameter0: char;

        z0 := @parameter1: boolean;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: void playDtmfTone(char,boolean)>(c0, z0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#playDtmfTone", r1);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void removeCallStateListener(android.telephony.CallStateListener)
    {
        android.telephony.TelephonyManager r0;
        android.telephony.CallStateListener r1;
        android.os.RemoteException r2, $r7;
        android.telephony.TelephonyManager$Listener r3;
        java.util.HashMap $r4;
        java.lang.Object $r5;
        com.android.internal.telephony.ITelephony $r6;

        r0 := @this: android.telephony.TelephonyManager;

        r1 := @parameter0: android.telephony.CallStateListener;

     label1:
        $r4 = r0.<android.telephony.TelephonyManager: java.util.HashMap mListeners>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        r3 = (android.telephony.TelephonyManager$Listener) $r5;

     label2:
        if r3 == null goto label4;

     label3:
        virtualinvoke r3.<android.telephony.TelephonyManager$Listener: void clearQueue()>();

        $r6 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        interfaceinvoke $r6.<com.android.internal.telephony.ITelephony: void removeListener(com.android.internal.telephony.ITelephonyListener)>(r3);

     label4:
        return;

     label5:
        $r7 := @caughtexception;

        r2 = $r7;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#removeListener", r2);

        return;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public void setCellInfoListRate(int)
    {
        android.telephony.TelephonyManager r0;
        int i0;
        com.android.internal.telephony.ITelephony $r3;
        android.os.RemoteException $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: android.telephony.TelephonyManager;

        i0 := @parameter0: int;

     label1:
        $r3 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        interfaceinvoke $r3.<com.android.internal.telephony.ITelephony: void setCellInfoListRate(int)>(i0);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        return;

     label4:
        $r4 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.NullPointerException from label1 to label2 with label3;
    }

    public boolean setRadio(boolean)
    {
        android.telephony.TelephonyManager r0;
        boolean z0, z1;
        android.os.RemoteException r1, $r3;
        com.android.internal.telephony.ITelephony $r2;

        r0 := @this: android.telephony.TelephonyManager;

        z0 := @parameter0: boolean;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        z1 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: boolean setRadio(boolean)>(z0);

     label2:
        return z1;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#setRadio", r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean setRadioPower(boolean)
    {
        android.telephony.TelephonyManager r0;
        boolean z0, z1;
        android.os.RemoteException r1, $r3;
        com.android.internal.telephony.ITelephony $r2;

        r0 := @this: android.telephony.TelephonyManager;

        z0 := @parameter0: boolean;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        z1 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: boolean setRadioPower(boolean)>(z0);

     label2:
        return z1;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#setRadioPower", r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean showCallScreen()
    {
        android.telephony.TelephonyManager r0;
        android.os.RemoteException r1, $r3;
        boolean z0;
        com.android.internal.telephony.ITelephony $r2;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        z0 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: boolean showCallScreen()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#showCallScreen", r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean showCallScreenWithDialpad(boolean)
    {
        android.telephony.TelephonyManager r0;
        boolean z0, z1;
        android.os.RemoteException r1, $r3;
        com.android.internal.telephony.ITelephony $r2;

        r0 := @this: android.telephony.TelephonyManager;

        z0 := @parameter0: boolean;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        z1 = interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: boolean showCallScreenWithDialpad(boolean)>(z0);

     label2:
        return z1;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#showCallScreenWithDialpad", r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void silenceRinger()
    {
        android.telephony.TelephonyManager r0;
        android.os.RemoteException r1, $r3;
        com.android.internal.telephony.ITelephony $r2;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: void silenceRinger()>();

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#silenceRinger", r1);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void stopDtmfTone()
    {
        android.telephony.TelephonyManager r0;
        android.os.RemoteException r1, $r3;
        com.android.internal.telephony.ITelephony $r2;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: void stopDtmfTone()>();

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#stopDtmfTone", r1);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean supplyPin(java.lang.String)
    {
        android.telephony.TelephonyManager r0;
        java.lang.String r1;
        android.os.RemoteException r2, $r4;
        boolean z0;
        com.android.internal.telephony.ITelephony $r3;

        r0 := @this: android.telephony.TelephonyManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        z0 = interfaceinvoke $r3.<com.android.internal.telephony.ITelephony: boolean supplyPin(java.lang.String)>(r1);

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#supplyPin", r2);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int[] supplyPinReportResult(java.lang.String)
    {
        android.telephony.TelephonyManager r0;
        java.lang.String r1;
        android.os.RemoteException r2, $r5;
        int[] r3, $r6;
        com.android.internal.telephony.ITelephony $r4;

        r0 := @this: android.telephony.TelephonyManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r4 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        r3 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: int[] supplyPinReportResult(java.lang.String)>(r1);

     label2:
        return r3;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#supplyPinReportResult", r2);

        $r6 = newarray (int)[0];

        return $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean supplyPuk(java.lang.String, java.lang.String)
    {
        android.telephony.TelephonyManager r0;
        java.lang.String r1, r2;
        android.os.RemoteException r3, $r5;
        boolean z0;
        com.android.internal.telephony.ITelephony $r4;

        r0 := @this: android.telephony.TelephonyManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

     label1:
        $r4 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        z0 = interfaceinvoke $r4.<com.android.internal.telephony.ITelephony: boolean supplyPuk(java.lang.String,java.lang.String)>(r1, r2);

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#supplyPuk", r3);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int[] supplyPukReportResult(java.lang.String, java.lang.String)
    {
        android.telephony.TelephonyManager r0;
        java.lang.String r1, r2;
        android.os.RemoteException r3, $r6;
        int[] r4, $r7;
        com.android.internal.telephony.ITelephony $r5;

        r0 := @this: android.telephony.TelephonyManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

     label1:
        $r5 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        r4 = interfaceinvoke $r5.<com.android.internal.telephony.ITelephony: int[] supplyPukReportResult(java.lang.String,java.lang.String)>(r1, r2);

     label2:
        return r4;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#]", r3);

        $r7 = newarray (int)[0];

        return $r7;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void swap()
    {
        android.telephony.TelephonyManager r0;
        android.os.RemoteException r1, $r3;
        com.android.internal.telephony.ITelephony $r2;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: void swap()>();

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#swap", r1);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void toggleHold()
    {
        android.telephony.TelephonyManager r0;
        android.os.RemoteException r1, $r3;
        com.android.internal.telephony.ITelephony $r2;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: void toggleHold()>();

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#toggleHold", r1);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void toggleRadioOnOff()
    {
        android.telephony.TelephonyManager r0;
        android.os.RemoteException r1, $r3;
        com.android.internal.telephony.ITelephony $r2;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: void toggleRadioOnOff()>();

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#toggleRadioOnOff", r1);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void updateServiceLocation()
    {
        android.telephony.TelephonyManager r0;
        android.os.RemoteException r1, $r3;
        com.android.internal.telephony.ITelephony $r2;

        r0 := @this: android.telephony.TelephonyManager;

     label1:
        $r2 = specialinvoke r0.<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()>();

        interfaceinvoke $r2.<com.android.internal.telephony.ITelephony: void updateServiceLocation()>();

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelephonyManager", "Error calling ITelephony#updateServiceLocation", r1);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
