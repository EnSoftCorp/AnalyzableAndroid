public final class com.android.internal.http.HttpDateTime extends java.lang.Object
{
    private static final java.util.regex.Pattern HTTP_DATE_ANSIC_PATTERN;
    private static final java.lang.String HTTP_DATE_ANSIC_REGEXP;
    private static final java.util.regex.Pattern HTTP_DATE_RFC_PATTERN;
    private static final java.lang.String HTTP_DATE_RFC_REGEXP;

    static void <clinit>()
    {
        java.util.regex.Pattern $r0, $r1;

        <com.android.internal.http.HttpDateTime: java.lang.String HTTP_DATE_RFC_REGEXP> = "([0-9]{1,2})[- ]([A-Za-z]{3,9})[- ]([0-9]{2,4})[ ]([0-9]{1,2}:[0-9][0-9]:[0-9][0-9])";

        <com.android.internal.http.HttpDateTime: java.lang.String HTTP_DATE_ANSIC_REGEXP> = "[ ]([A-Za-z]{3,9})[ ]+([0-9]{1,2})[ ]([0-9]{1,2}:[0-9][0-9]:[0-9][0-9])[ ]([0-9]{2,4})";

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("([0-9]{1,2})[- ]([A-Za-z]{3,9})[- ]([0-9]{2,4})[ ]([0-9]{1,2}:[0-9][0-9]:[0-9][0-9])");

        <com.android.internal.http.HttpDateTime: java.util.regex.Pattern HTTP_DATE_RFC_PATTERN> = $r0;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[ ]([A-Za-z]{3,9})[ ]+([0-9]{1,2})[ ]([0-9]{1,2}:[0-9][0-9]:[0-9][0-9])[ ]([0-9]{2,4})");

        <com.android.internal.http.HttpDateTime: java.util.regex.Pattern HTTP_DATE_ANSIC_PATTERN> = $r1;

        return;
    }

    public void <init>()
    {
        com.android.internal.http.HttpDateTime r0;

        r0 := @this: com.android.internal.http.HttpDateTime;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static int getDate(java.lang.String)
    {
        java.lang.String r0;
        int $i0, $i2, $i4, $i5, $i7, $i8;
        char $c1, $c3, $c6;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 2 goto label1;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i4 = -48 + $c3;

        $i5 = 10 * $i4;

        $c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i7 = -48 + $c6;

        $i8 = $i5 + $i7;

        return $i8;

     label1:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i2 = -48 + $c1;

        return $i2;
    }

    private static int getMonth(java.lang.String)
    {
        java.lang.String r0;
        int i0, $i6, $i9;
        byte b1;
        char $c2, $c3, $c4, $c5, $c7, $c8;
        java.lang.IllegalArgumentException $r1;

        r0 := @parameter0: java.lang.String;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $c3 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c2);

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $c5 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c4);

        $i6 = $c3 + $c5;

        $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $c8 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c7);

        $i9 = $i6 + $c8;

        i0 = -291 + $i9;

        b1 = 0;

        lookupswitch(i0)
        {
            case 9: goto label13;
            case 10: goto label02;
            case 22: goto label03;
            case 26: goto label09;
            case 29: goto label04;
            case 32: goto label05;
            case 35: goto label11;
            case 36: goto label06;
            case 37: goto label10;
            case 40: goto label08;
            case 42: goto label07;
            case 48: goto label12;
            default: goto label01;
        };

     label01:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r1;

     label02:
        b1 = 1;

     label03:
        return b1;

     label04:
        return 2;

     label05:
        return 3;

     label06:
        return 4;

     label07:
        return 5;

     label08:
        return 6;

     label09:
        return 7;

     label10:
        return 8;

     label11:
        return 9;

     label12:
        return 10;

     label13:
        return 11;
    }

    private static com.android.internal.http.HttpDateTime$TimeOfDay getTime(java.lang.String)
    {
        java.lang.String r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, $i15, $i16, $i18, $i23, $i24, $i25;
        char $c12, $c13, $c14, $c17, $c19, $c21, $c22;
        com.android.internal.http.HttpDateTime$TimeOfDay $r1;

        r0 := @parameter0: java.lang.String;

        i0 = 0 + 1;

        $c12 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        i1 = -48 + $c12;

        $c13 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        if $c13 == 58 goto label2;

        i11 = i1 * 10;

        i2 = i0 + 1;

        $c22 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        $i25 = -48 + $c22;

        i1 = i11 + $i25;

     label1:
        i3 = i2 + 1;

        i4 = i3 + 1;

        $c14 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $i15 = -48 + $c14;

        i5 = 10 * $i15;

        i6 = i4 + 1;

        $c17 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        $i16 = -48 + $c17;

        i7 = i5 + $i16;

        i8 = i6 + 1;

        i9 = i8 + 1;

        $c19 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i8);

        $i18 = -48 + $c19;

        i10 = 10 * $i18;

        $r1 = new com.android.internal.http.HttpDateTime$TimeOfDay;

        $c21 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i9);

        $i23 = -48 + $c21;

        $i24 = i10 + $i23;

        specialinvoke $r1.<com.android.internal.http.HttpDateTime$TimeOfDay: void <init>(int,int,int)>(i1, i7, $i24);

        return $r1;

     label2:
        i2 = i0;

        goto label1;
    }

    private static int getYear(java.lang.String)
    {
        java.lang.String r0;
        int i0, $i1, $i2, $i3, $i5, $i6, $i8, $i9, $i10, $i11, $i13, $i14, $i16, $i17, $i19, $i20, $i22, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i32, $i33, $i35;
        char $c4, $c7, $c12, $c15, $c18, $c21, $c23, $c31, $c34;

        r0 := @parameter0: java.lang.String;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 != 2 goto label2;

        $c31 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i29 = -48 + $c31;

        $i30 = 10 * $i29;

        $c34 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i33 = -48 + $c34;

        i0 = $i30 + $i33;

        if i0 < 70 goto label1;

        $i35 = i0 + 1900;

        return $i35;

     label1:
        $i32 = i0 + 2000;

        return $i32;

     label2:
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i2 != 3 goto label3;

        $c18 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i20 = -48 + $c18;

        $i19 = 100 * $i20;

        $c21 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i22 = -48 + $c21;

        $i24 = 10 * $i22;

        $i25 = $i19 + $i24;

        $c23 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $i27 = -48 + $c23;

        $i28 = $i25 + $i27;

        $i26 = 1900 + $i28;

        return $i26;

     label3:
        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i3 != 4 goto label4;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i5 = -48 + $c4;

        $i6 = 1000 * $i5;

        $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i8 = -48 + $c7;

        $i9 = 100 * $i8;

        $i10 = $i6 + $i9;

        $c12 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $i11 = -48 + $c12;

        $i14 = 10 * $i11;

        $i13 = $i10 + $i14;

        $c15 = virtualinvoke r0.<java.lang.String: char charAt(int)>(3);

        $i17 = -48 + $c15;

        $i16 = $i13 + $i17;

        return $i16;

     label4:
        return 1970;
    }

    public static long parse(java.lang.String) throws java.lang.IllegalArgumentException
    {
        java.lang.String r0, $r8, $r9, $r10, $r11, $r13, $r14, $r15, $r16;
        java.util.regex.Matcher r1, r2;
        int i0, i1, i2, $i3, $i4, $i6;
        com.android.internal.http.HttpDateTime$TimeOfDay r3;
        android.text.format.Time r4, $r12;
        java.util.regex.Pattern $r5, $r6;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r7;
        long $l5;

        r0 := @parameter0: java.lang.String;

        $r5 = <com.android.internal.http.HttpDateTime: java.util.regex.Pattern HTTP_DATE_RFC_PATTERN>;

        r1 = virtualinvoke $r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $z0 = virtualinvoke r1.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label3;

        $r13 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        i1 = staticinvoke <com.android.internal.http.HttpDateTime: int getDate(java.lang.String)>($r13);

        $r14 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        i0 = staticinvoke <com.android.internal.http.HttpDateTime: int getMonth(java.lang.String)>($r14);

        $r16 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        i2 = staticinvoke <com.android.internal.http.HttpDateTime: int getYear(java.lang.String)>($r16);

        $r15 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(4);

        r3 = staticinvoke <com.android.internal.http.HttpDateTime: com.android.internal.http.HttpDateTime$TimeOfDay getTime(java.lang.String)>($r15);

     label1:
        if i2 < 2038 goto label2;

        i2 = 2038;

        i0 = 0;

        i1 = 1;

     label2:
        $r12 = new android.text.format.Time;

        specialinvoke $r12.<android.text.format.Time: void <init>(java.lang.String)>("UTC");

        r4 = $r12;

        $i6 = r3.<com.android.internal.http.HttpDateTime$TimeOfDay: int second>;

        $i3 = r3.<com.android.internal.http.HttpDateTime$TimeOfDay: int minute>;

        $i4 = r3.<com.android.internal.http.HttpDateTime$TimeOfDay: int hour>;

        virtualinvoke r4.<android.text.format.Time: void set(int,int,int,int,int,int)>($i6, $i3, $i4, i1, i0, i2);

        $l5 = virtualinvoke r4.<android.text.format.Time: long toMillis(boolean)>(0);

        return $l5;

     label3:
        $r6 = <com.android.internal.http.HttpDateTime: java.util.regex.Pattern HTTP_DATE_ANSIC_PATTERN>;

        r2 = virtualinvoke $r6.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $z1 = virtualinvoke r2.<java.util.regex.Matcher: boolean find()>();

        if $z1 == 0 goto label4;

        $r8 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        i0 = staticinvoke <com.android.internal.http.HttpDateTime: int getMonth(java.lang.String)>($r8);

        $r9 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        i1 = staticinvoke <com.android.internal.http.HttpDateTime: int getDate(java.lang.String)>($r9);

        $r10 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        r3 = staticinvoke <com.android.internal.http.HttpDateTime: com.android.internal.http.HttpDateTime$TimeOfDay getTime(java.lang.String)>($r10);

        $r11 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(4);

        i2 = staticinvoke <com.android.internal.http.HttpDateTime: int getYear(java.lang.String)>($r11);

        goto label1;

     label4:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r7;
    }
}
