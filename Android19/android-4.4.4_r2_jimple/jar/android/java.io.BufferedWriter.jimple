public class java.io.BufferedWriter extends java.io.Writer
{
    private char[] buf;
    private java.io.Writer out;
    private int pos;

    public void <init>(java.io.Writer)
    {
        java.io.BufferedWriter r0;
        java.io.Writer r1;

        r0 := @this: java.io.BufferedWriter;

        r1 := @parameter0: java.io.Writer;

        specialinvoke r0.<java.io.BufferedWriter: void <init>(java.io.Writer,int)>(r1, 8192);

        return;
    }

    public void <init>(java.io.Writer, int)
    {
        java.io.BufferedWriter r0;
        java.io.Writer r1;
        int i0;
        char[] $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: java.io.BufferedWriter;

        r1 := @parameter0: java.io.Writer;

        i0 := @parameter1: int;

        specialinvoke r0.<java.io.Writer: void <init>(java.lang.Object)>(r1);

        if i0 > 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("size <= 0");

        throw $r3;

     label1:
        r0.<java.io.BufferedWriter: java.io.Writer out> = r1;

        $r2 = newarray (char)[i0];

        r0.<java.io.BufferedWriter: char[] buf> = $r2;

        return;
    }

    private void checkNotClosed() throws java.io.IOException
    {
        java.io.BufferedWriter r0;
        boolean $z0;
        java.io.IOException $r1;

        r0 := @this: java.io.BufferedWriter;

        $z0 = specialinvoke r0.<java.io.BufferedWriter: boolean isClosed()>();

        if $z0 == 0 goto label1;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("BufferedWriter is closed");

        throw $r1;

     label1:
        return;
    }

    private void flushInternal() throws java.io.IOException
    {
        java.io.BufferedWriter r0;
        int $i0, $i1;
        char[] $r1;
        java.io.Writer $r2;

        r0 := @this: java.io.BufferedWriter;

        $i0 = r0.<java.io.BufferedWriter: int pos>;

        if $i0 <= 0 goto label1;

        $r2 = r0.<java.io.BufferedWriter: java.io.Writer out>;

        $r1 = r0.<java.io.BufferedWriter: char[] buf>;

        $i1 = r0.<java.io.BufferedWriter: int pos>;

        virtualinvoke $r2.<java.io.Writer: void write(char[],int,int)>($r1, 0, $i1);

     label1:
        r0.<java.io.BufferedWriter: int pos> = 0;

        return;
    }

    private boolean isClosed()
    {
        java.io.BufferedWriter r0;
        java.io.Writer $r1;

        r0 := @this: java.io.BufferedWriter;

        $r1 = r0.<java.io.BufferedWriter: java.io.Writer out>;

        if $r1 != null goto label1;

        return 1;

     label1:
        return 0;
    }

    public void close() throws java.io.IOException
    {
        java.io.BufferedWriter r0;
        java.lang.Object r1;
        java.lang.Throwable r2, r3, r4, r5, $r7, $r8, $r9;
        boolean $z0;
        java.io.Writer $r6;

        r0 := @this: java.io.BufferedWriter;

        r1 = r0.<java.io.BufferedWriter: java.lang.Object lock>;

        entermonitor r1;

     label01:
        $z0 = specialinvoke r0.<java.io.BufferedWriter: boolean isClosed()>();

        if $z0 == 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        r3 = null;

     label04:
        specialinvoke r0.<java.io.BufferedWriter: void flushInternal()>();

     label05:
        r0.<java.io.BufferedWriter: char[] buf> = null;

     label06:
        $r6 = r0.<java.io.BufferedWriter: java.io.Writer out>;

        virtualinvoke $r6.<java.io.Writer: void close()>();

     label07:
        r0.<java.io.BufferedWriter: java.io.Writer out> = null;

     label08:
        if r3 == null goto label10;

     label09:
        staticinvoke <libcore.util.SneakyThrow: void sneakyThrow(java.lang.Throwable)>(r3);

     label10:
        exitmonitor r1;

     label11:
        return;

     label12:
        $r7 := @caughtexception;

        r2 = $r7;

     label13:
        exitmonitor r1;

     label14:
        throw r2;

     label15:
        $r9 := @caughtexception;

        r4 = $r9;

        r3 = r4;

        goto label05;

     label16:
        $r8 := @caughtexception;

        r5 = $r8;

        if r3 != null goto label07;

        r3 = r5;

        goto label07;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label07 with label16;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void flush() throws java.io.IOException
    {
        java.io.BufferedWriter r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r4;
        java.io.Writer $r3;

        r0 := @this: java.io.BufferedWriter;

        r1 = r0.<java.io.BufferedWriter: java.lang.Object lock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<java.io.BufferedWriter: void checkNotClosed()>();

        specialinvoke r0.<java.io.BufferedWriter: void flushInternal()>();

        $r3 = r0.<java.io.BufferedWriter: java.io.Writer out>;

        virtualinvoke $r3.<java.io.Writer: void flush()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void newLine() throws java.io.IOException
    {
        java.io.BufferedWriter r0;
        java.lang.String $r1;

        r0 := @this: java.io.BufferedWriter;

        $r1 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

        virtualinvoke r0.<java.io.BufferedWriter: void write(java.lang.String)>($r1);

        return;
    }

    public void write(int) throws java.io.IOException
    {
        java.io.BufferedWriter r0;
        int i0, i1, $i2, $i3, $i4, $i6;
        java.lang.Object r1;
        java.lang.Throwable r2, $r7;
        char[] r3, $r4, $r5, $r6;
        char $c5;
        java.io.Writer $r8;

        r0 := @this: java.io.BufferedWriter;

        i0 := @parameter0: int;

        r1 = r0.<java.io.BufferedWriter: java.lang.Object lock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<java.io.BufferedWriter: void checkNotClosed()>();

        $i3 = r0.<java.io.BufferedWriter: int pos>;

        $r4 = r0.<java.io.BufferedWriter: char[] buf>;

        $i2 = lengthof $r4;

        if $i3 < $i2 goto label2;

        $r8 = r0.<java.io.BufferedWriter: java.io.Writer out>;

        $r6 = r0.<java.io.BufferedWriter: char[] buf>;

        $r5 = r0.<java.io.BufferedWriter: char[] buf>;

        $i6 = lengthof $r5;

        virtualinvoke $r8.<java.io.Writer: void write(char[],int,int)>($r6, 0, $i6);

        r0.<java.io.BufferedWriter: int pos> = 0;

     label2:
        r3 = r0.<java.io.BufferedWriter: char[] buf>;

        i1 = r0.<java.io.BufferedWriter: int pos>;

        $i4 = i1 + 1;

        r0.<java.io.BufferedWriter: int pos> = $i4;

        $c5 = (char) i0;

        r3[i1] = $c5;

        exitmonitor r1;

     label3:
        return;

     label4:
        $r7 := @caughtexception;

        r2 = $r7;

     label5:
        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void write(java.lang.String, int, int) throws java.io.IOException
    {
        java.io.BufferedWriter r0;
        java.lang.String r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24;
        java.lang.Object r2;
        java.lang.Throwable r3, $r18;
        char[] r4, r5, $r7, $r8, $r9, $r10, $r11, $r13, $r15, $r16;
        java.lang.StringIndexOutOfBoundsException $r6;
        java.io.Writer $r12, $r14, $r17;

        r0 := @this: java.io.BufferedWriter;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = r0.<java.io.BufferedWriter: java.lang.Object lock>;

        entermonitor r2;

     label01:
        specialinvoke r0.<java.io.BufferedWriter: void checkNotClosed()>();

     label02:
        if i1 > 0 goto label05;

     label03:
        exitmonitor r2;

     label04:
        return;

     label05:
        if i0 < 0 goto label07;

     label06:
        $i5 = virtualinvoke r1.<java.lang.String: int length()>();

        $i6 = $i5 - i1;

        if i0 <= $i6 goto label11;

     label07:
        $r6 = new java.lang.StringIndexOutOfBoundsException;

        specialinvoke $r6.<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String,int,int)>(r1, i0, i1);

        throw $r6;

     label08:
        $r18 := @caughtexception;

        r3 = $r18;

     label09:
        exitmonitor r2;

     label10:
        throw r3;

     label11:
        $i7 = r0.<java.io.BufferedWriter: int pos>;

        if $i7 != 0 goto label13;

        $r16 = r0.<java.io.BufferedWriter: char[] buf>;

        $i21 = lengthof $r16;

        if i1 < $i21 goto label13;

        r5 = newarray (char)[i1];

        $i24 = i0 + i1;

        virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(i0, $i24, r5, 0);

        $r17 = r0.<java.io.BufferedWriter: java.io.Writer out>;

        virtualinvoke $r17.<java.io.Writer: void write(char[],int,int)>(r5, 0, i1);

        exitmonitor r2;

     label12:
        return;

     label13:
        $r7 = r0.<java.io.BufferedWriter: char[] buf>;

        $i9 = lengthof $r7;

        $i8 = r0.<java.io.BufferedWriter: int pos>;

        i2 = $i9 - $i8;

     label14:
        if i1 >= i2 goto label15;

        i2 = i1;

     label15:
        if i2 <= 0 goto label17;

     label16:
        $i19 = i0 + i2;

        $r15 = r0.<java.io.BufferedWriter: char[] buf>;

        $i20 = r0.<java.io.BufferedWriter: int pos>;

        virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(i0, $i19, $r15, $i20);

        $i22 = r0.<java.io.BufferedWriter: int pos>;

        $i23 = i2 + $i22;

        r0.<java.io.BufferedWriter: int pos> = $i23;

     label17:
        $i10 = r0.<java.io.BufferedWriter: int pos>;

        $r8 = r0.<java.io.BufferedWriter: char[] buf>;

        $i11 = lengthof $r8;

        if $i10 != $i11 goto label22;

        $r12 = r0.<java.io.BufferedWriter: java.io.Writer out>;

        $r10 = r0.<java.io.BufferedWriter: char[] buf>;

        $r9 = r0.<java.io.BufferedWriter: char[] buf>;

        $i12 = lengthof $r9;

        virtualinvoke $r12.<java.io.Writer: void write(char[],int,int)>($r10, 0, $i12);

        r0.<java.io.BufferedWriter: int pos> = 0;

     label18:
        if i1 <= i2 goto label22;

        i3 = i0 + i2;

        i4 = i1 - i2;

     label19:
        $r11 = r0.<java.io.BufferedWriter: char[] buf>;

        $i14 = lengthof $r11;

        if i4 < $i14 goto label21;

        r4 = newarray (char)[i1];

        $i16 = i3 + i4;

        virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(i3, $i16, r4, 0);

        $r14 = r0.<java.io.BufferedWriter: java.io.Writer out>;

        virtualinvoke $r14.<java.io.Writer: void write(char[],int,int)>(r4, 0, i4);

        exitmonitor r2;

     label20:
        return;

     label21:
        $i15 = i3 + i4;

        $r13 = r0.<java.io.BufferedWriter: char[] buf>;

        $i13 = r0.<java.io.BufferedWriter: int pos>;

        virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(i3, $i15, $r13, $i13);

        $i17 = r0.<java.io.BufferedWriter: int pos>;

        $i18 = i4 + $i17;

        r0.<java.io.BufferedWriter: int pos> = $i18;

     label22:
        exitmonitor r2;

     label23:
        return;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label11 to label12 with label08;
        catch java.lang.Throwable from label13 to label14 with label08;
        catch java.lang.Throwable from label16 to label17 with label08;
        catch java.lang.Throwable from label17 to label18 with label08;
        catch java.lang.Throwable from label19 to label20 with label08;
        catch java.lang.Throwable from label21 to label22 with label08;
        catch java.lang.Throwable from label22 to label23 with label08;
    }

    public void write(char[], int, int) throws java.io.IOException
    {
        java.io.BufferedWriter r0;
        char[] r1, $r4, $r5, $r6, $r7, $r8, $r10, $r12, $r13;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        java.lang.Object r2;
        java.lang.Throwable r3, $r16;
        java.io.Writer $r9, $r11, $r15;
        java.lang.NullPointerException $r14;

        r0 := @this: java.io.BufferedWriter;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = r0.<java.io.BufferedWriter: java.lang.Object lock>;

        entermonitor r2;

     label01:
        specialinvoke r0.<java.io.BufferedWriter: void checkNotClosed()>();

     label02:
        if r1 != null goto label07;

     label03:
        $r14 = new java.lang.NullPointerException;

        specialinvoke $r14.<java.lang.NullPointerException: void <init>(java.lang.String)>("buffer == null");

        throw $r14;

     label04:
        $r16 := @caughtexception;

        r3 = $r16;

     label05:
        exitmonitor r2;

     label06:
        throw r3;

     label07:
        $i5 = lengthof r1;

        staticinvoke <java.util.Arrays: void checkOffsetAndCount(int,int,int)>($i5, i0, i1);

        $i6 = r0.<java.io.BufferedWriter: int pos>;

        if $i6 != 0 goto label09;

        $r12 = r0.<java.io.BufferedWriter: char[] buf>;

        $i19 = lengthof $r12;

        if i1 < $i19 goto label09;

        $r15 = r0.<java.io.BufferedWriter: java.io.Writer out>;

        virtualinvoke $r15.<java.io.Writer: void write(char[],int,int)>(r1, i0, i1);

        exitmonitor r2;

     label08:
        return;

     label09:
        $r4 = r0.<java.io.BufferedWriter: char[] buf>;

        $i8 = lengthof $r4;

        $i7 = r0.<java.io.BufferedWriter: int pos>;

        i2 = $i8 - $i7;

     label10:
        if i1 >= i2 goto label11;

        i2 = i1;

     label11:
        if i2 <= 0 goto label13;

     label12:
        $r13 = r0.<java.io.BufferedWriter: char[] buf>;

        $i16 = r0.<java.io.BufferedWriter: int pos>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, $r13, $i16, i2);

        $i18 = r0.<java.io.BufferedWriter: int pos>;

        $i17 = i2 + $i18;

        r0.<java.io.BufferedWriter: int pos> = $i17;

     label13:
        $i9 = r0.<java.io.BufferedWriter: int pos>;

        $r5 = r0.<java.io.BufferedWriter: char[] buf>;

        $i10 = lengthof $r5;

        if $i9 != $i10 goto label18;

        $r9 = r0.<java.io.BufferedWriter: java.io.Writer out>;

        $r7 = r0.<java.io.BufferedWriter: char[] buf>;

        $r6 = r0.<java.io.BufferedWriter: char[] buf>;

        $i11 = lengthof $r6;

        virtualinvoke $r9.<java.io.Writer: void write(char[],int,int)>($r7, 0, $i11);

        r0.<java.io.BufferedWriter: int pos> = 0;

     label14:
        if i1 <= i2 goto label18;

        i3 = i0 + i2;

        i4 = i1 - i2;

     label15:
        $r8 = r0.<java.io.BufferedWriter: char[] buf>;

        $i13 = lengthof $r8;

        if i4 < $i13 goto label17;

        $r11 = r0.<java.io.BufferedWriter: java.io.Writer out>;

        virtualinvoke $r11.<java.io.Writer: void write(char[],int,int)>(r1, i3, i4);

        exitmonitor r2;

     label16:
        return;

     label17:
        $r10 = r0.<java.io.BufferedWriter: char[] buf>;

        $i12 = r0.<java.io.BufferedWriter: int pos>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i3, $r10, $i12, i4);

        $i14 = r0.<java.io.BufferedWriter: int pos>;

        $i15 = i4 + $i14;

        r0.<java.io.BufferedWriter: int pos> = $i15;

     label18:
        exitmonitor r2;

     label19:
        return;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label03 to label04 with label04;
        catch java.lang.Throwable from label05 to label06 with label04;
        catch java.lang.Throwable from label07 to label08 with label04;
        catch java.lang.Throwable from label09 to label10 with label04;
        catch java.lang.Throwable from label12 to label13 with label04;
        catch java.lang.Throwable from label13 to label14 with label04;
        catch java.lang.Throwable from label15 to label16 with label04;
        catch java.lang.Throwable from label17 to label18 with label04;
        catch java.lang.Throwable from label18 to label19 with label04;
    }
}
