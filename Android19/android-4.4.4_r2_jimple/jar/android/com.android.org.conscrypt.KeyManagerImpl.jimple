public class com.android.org.conscrypt.KeyManagerImpl extends javax.net.ssl.X509ExtendedKeyManager
{
    private final java.util.Hashtable hash;

    public void <init>(java.security.KeyStore, char[])
    {
        com.android.org.conscrypt.KeyManagerImpl r0;
        java.security.KeyStore r1;
        char[] r2;
        java.util.Enumeration r4;
        java.lang.String r5;
        java.security.KeyStore$PrivateKeyEntry r9;
        java.util.Hashtable $r10, $r13;
        boolean $z0, $z1;
        java.lang.Object $r11;
        java.security.KeyStore$PasswordProtection $r12;
        java.security.KeyStore$Entry $r14;
        java.security.KeyStoreException $r15, $r18;
        java.security.NoSuchAlgorithmException $r17;
        java.security.UnrecoverableEntryException $r19;

        r0 := @this: com.android.org.conscrypt.KeyManagerImpl;

        r1 := @parameter0: java.security.KeyStore;

        r2 := @parameter1: char[];

        specialinvoke r0.<javax.net.ssl.X509ExtendedKeyManager: void <init>()>();

        $r10 = new java.util.Hashtable;

        specialinvoke $r10.<java.util.Hashtable: void <init>()>();

        r0.<com.android.org.conscrypt.KeyManagerImpl: java.util.Hashtable hash> = $r10;

     label1:
        r4 = virtualinvoke r1.<java.security.KeyStore: java.util.Enumeration aliases()>();

     label2:
        $z0 = interfaceinvoke r4.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label7;

        $r11 = interfaceinvoke r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        r5 = (java.lang.String) $r11;

     label3:
        $z1 = virtualinvoke r1.<java.security.KeyStore: boolean entryInstanceOf(java.lang.String,java.lang.Class)>(r5, class "java/security/KeyStore$PrivateKeyEntry");

        if $z1 == 0 goto label2;

        $r12 = new java.security.KeyStore$PasswordProtection;

        specialinvoke $r12.<java.security.KeyStore$PasswordProtection: void <init>(char[])>(r2);

        $r14 = virtualinvoke r1.<java.security.KeyStore: java.security.KeyStore$Entry getEntry(java.lang.String,java.security.KeyStore$ProtectionParameter)>(r5, $r12);

        r9 = (java.security.KeyStore$PrivateKeyEntry) $r14;

        $r13 = r0.<com.android.org.conscrypt.KeyManagerImpl: java.util.Hashtable hash>;

        virtualinvoke $r13.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r9);

     label4:
        goto label2;

     label5:
        $r18 := @caughtexception;

        goto label2;

     label6:
        $r15 := @caughtexception;

     label7:
        return;

     label8:
        $r19 := @caughtexception;

        goto label2;

     label9:
        $r17 := @caughtexception;

        goto label2;

        catch java.security.KeyStoreException from label1 to label2 with label6;
        catch java.security.KeyStoreException from label3 to label4 with label5;
        catch java.security.UnrecoverableEntryException from label3 to label4 with label8;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label9;
    }

    private java.lang.String[] chooseAlias(java.lang.String[], java.security.Principal[])
    {
        com.android.org.conscrypt.KeyManagerImpl r0;
        java.lang.String[] r1, $r18, $r21;
        java.security.Principal[] r2;
        java.util.List r3;
        java.util.ArrayList r4, $r16;
        java.util.Enumeration r5;
        java.lang.String r6, r9, r10, r11, r12, $r27;
        java.security.cert.Certificate[] r7;
        java.security.cert.Certificate r8, r14;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8;
        javax.security.auth.x500.X500Principal r13;
        java.util.Hashtable $r15, $r19;
        boolean $z0, $z1, $z2, $z3, $z4, $z7, $z8;
        java.lang.Object[] $r17;
        java.lang.Object $r20, $r22;
        java.security.PublicKey $r23;
        java.security.KeyStore$PrivateKeyEntry $r24;
        java.security.cert.X509Certificate $r25, $r28;
        java.util.Locale $r26;

        r0 := @this: com.android.org.conscrypt.KeyManagerImpl;

        r1 := @parameter0: java.lang.String[];

        r2 := @parameter1: java.security.Principal[];

        if r1 == null goto label01;

        $i6 = lengthof r1;

        if $i6 != 0 goto label02;

     label01:
        return null;

     label02:
        if r2 != null goto label08;

        r3 = null;

     label03:
        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        r4 = $r16;

        $r15 = r0.<com.android.org.conscrypt.KeyManagerImpl: java.util.Hashtable hash>;

        r5 = virtualinvoke $r15.<java.util.Hashtable: java.util.Enumeration keys()>();

     label04:
        $z0 = interfaceinvoke r5.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label19;

        $r22 = interfaceinvoke r5.<java.util.Enumeration: java.lang.Object nextElement()>();

        r6 = (java.lang.String) $r22;

        $r19 = r0.<com.android.org.conscrypt.KeyManagerImpl: java.util.Hashtable hash>;

        $r20 = virtualinvoke $r19.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r6);

        $r24 = (java.security.KeyStore$PrivateKeyEntry) $r20;

        r7 = virtualinvoke $r24.<java.security.KeyStore$PrivateKeyEntry: java.security.cert.Certificate[] getCertificateChain()>();

        r8 = r7[0];

        $r23 = virtualinvoke r8.<java.security.cert.Certificate: java.security.PublicKey getPublicKey()>();

        r9 = interfaceinvoke $r23.<java.security.PublicKey: java.lang.String getAlgorithm()>();

        $z2 = r8 instanceof java.security.cert.X509Certificate;

        if $z2 == 0 goto label09;

        $r28 = (java.security.cert.X509Certificate) r8;

        $r27 = virtualinvoke $r28.<java.security.cert.X509Certificate: java.lang.String getSigAlgName()>();

        $r26 = <java.util.Locale: java.util.Locale US>;

        r10 = virtualinvoke $r27.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r26);

     label05:
        i0 = lengthof r1;

        i1 = 0;

     label06:
        if i1 >= i0 goto label04;

        r11 = r1[i1];

        if r11 != null goto label10;

     label07:
        i1 = i1 + 1;

        goto label06;

     label08:
        r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r2);

        goto label03;

     label09:
        r10 = null;

        goto label05;

     label10:
        i2 = virtualinvoke r11.<java.lang.String: int indexOf(int)>(95);

        if i2 != -1 goto label14;

        r12 = null;

     label11:
        $z4 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>(r11);

        if $z4 == 0 goto label07;

        if r12 == null goto label12;

        if r10 == null goto label12;

        $z8 = virtualinvoke r10.<java.lang.String: boolean contains(java.lang.CharSequence)>(r12);

        if $z8 == 0 goto label07;

     label12:
        if r2 == null goto label13;

        $i8 = lengthof r2;

        if $i8 != 0 goto label15;

     label13:
        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

        goto label07;

     label14:
        i3 = i2 + 1;

        r12 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int)>(i3);

        r11 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int,int)>(0, i2);

        goto label11;

     label15:
        i5 = lengthof r7;

        i4 = 0;

     label16:
        if i4 >= i5 goto label07;

        r14 = r7[i4];

        $z3 = r14 instanceof java.security.cert.X509Certificate;

        if $z3 != 0 goto label18;

     label17:
        i4 = i4 + 1;

        goto label16;

     label18:
        $r25 = (java.security.cert.X509Certificate) r14;

        r13 = virtualinvoke $r25.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $z7 = interfaceinvoke r3.<java.util.List: boolean contains(java.lang.Object)>(r13);

        if $z7 == 0 goto label17;

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

        goto label17;

     label19:
        $z1 = virtualinvoke r4.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 != 0 goto label20;

        $i7 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        $r18 = newarray (java.lang.String)[$i7];

        $r17 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r18);

        $r21 = (java.lang.String[]) $r17;

        return $r21;

     label20:
        return null;
    }

    public java.lang.String chooseClientAlias(java.lang.String[], java.security.Principal[], java.net.Socket)
    {
        com.android.org.conscrypt.KeyManagerImpl r0;
        java.lang.String[] r1, r4;
        java.security.Principal[] r2;
        java.net.Socket r3;
        java.lang.String $r5;

        r0 := @this: com.android.org.conscrypt.KeyManagerImpl;

        r1 := @parameter0: java.lang.String[];

        r2 := @parameter1: java.security.Principal[];

        r3 := @parameter2: java.net.Socket;

        r4 = specialinvoke r0.<com.android.org.conscrypt.KeyManagerImpl: java.lang.String[] chooseAlias(java.lang.String[],java.security.Principal[])>(r1, r2);

        if r4 != null goto label1;

        return null;

     label1:
        $r5 = r4[0];

        return $r5;
    }

    public java.lang.String chooseEngineClientAlias(java.lang.String[], java.security.Principal[], javax.net.ssl.SSLEngine)
    {
        com.android.org.conscrypt.KeyManagerImpl r0;
        java.lang.String[] r1, r4;
        java.security.Principal[] r2;
        javax.net.ssl.SSLEngine r3;
        java.lang.String $r5;

        r0 := @this: com.android.org.conscrypt.KeyManagerImpl;

        r1 := @parameter0: java.lang.String[];

        r2 := @parameter1: java.security.Principal[];

        r3 := @parameter2: javax.net.ssl.SSLEngine;

        r4 = specialinvoke r0.<com.android.org.conscrypt.KeyManagerImpl: java.lang.String[] chooseAlias(java.lang.String[],java.security.Principal[])>(r1, r2);

        if r4 != null goto label1;

        return null;

     label1:
        $r5 = r4[0];

        return $r5;
    }

    public java.lang.String chooseEngineServerAlias(java.lang.String, java.security.Principal[], javax.net.ssl.SSLEngine)
    {
        com.android.org.conscrypt.KeyManagerImpl r0;
        java.lang.String r1, $r6;
        java.security.Principal[] r2;
        javax.net.ssl.SSLEngine r3;
        java.lang.String[] r4, $r5;

        r0 := @this: com.android.org.conscrypt.KeyManagerImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.security.Principal[];

        r3 := @parameter2: javax.net.ssl.SSLEngine;

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = r1;

        r4 = specialinvoke r0.<com.android.org.conscrypt.KeyManagerImpl: java.lang.String[] chooseAlias(java.lang.String[],java.security.Principal[])>($r5, r2);

        if r4 != null goto label1;

        return null;

     label1:
        $r6 = r4[0];

        return $r6;
    }

    public java.lang.String chooseServerAlias(java.lang.String, java.security.Principal[], java.net.Socket)
    {
        com.android.org.conscrypt.KeyManagerImpl r0;
        java.lang.String r1, $r6;
        java.security.Principal[] r2;
        java.net.Socket r3;
        java.lang.String[] r4, $r5;

        r0 := @this: com.android.org.conscrypt.KeyManagerImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.security.Principal[];

        r3 := @parameter2: java.net.Socket;

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = r1;

        r4 = specialinvoke r0.<com.android.org.conscrypt.KeyManagerImpl: java.lang.String[] chooseAlias(java.lang.String[],java.security.Principal[])>($r5, r2);

        if r4 != null goto label1;

        return null;

     label1:
        $r6 = r4[0];

        return $r6;
    }

    public java.security.cert.X509Certificate[] getCertificateChain(java.lang.String)
    {
        com.android.org.conscrypt.KeyManagerImpl r0;
        java.lang.String r1;
        java.security.cert.X509Certificate[] r2;
        boolean z0, z1;
        java.security.cert.Certificate[] r3;
        int i0, $i1, $i2;
        java.util.Hashtable $r4, $r5;
        java.lang.Object $r6;
        java.security.KeyStore$PrivateKeyEntry $r7;
        java.security.cert.Certificate $r8, $r10;
        java.security.cert.X509Certificate $r9;

        r0 := @this: com.android.org.conscrypt.KeyManagerImpl;

        r1 := @parameter0: java.lang.String;

        r2 = null;

        if r1 != null goto label2;

     label1:
        return r2;

     label2:
        $r4 = r0.<com.android.org.conscrypt.KeyManagerImpl: java.util.Hashtable hash>;

        z0 = virtualinvoke $r4.<java.util.Hashtable: boolean containsKey(java.lang.Object)>(r1);

        r2 = null;

        if z0 == 0 goto label1;

        $r5 = r0.<com.android.org.conscrypt.KeyManagerImpl: java.util.Hashtable hash>;

        $r6 = virtualinvoke $r5.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        $r7 = (java.security.KeyStore$PrivateKeyEntry) $r6;

        r3 = virtualinvoke $r7.<java.security.KeyStore$PrivateKeyEntry: java.security.cert.Certificate[] getCertificateChain()>();

        $r8 = r3[0];

        z1 = $r8 instanceof java.security.cert.X509Certificate;

        r2 = null;

        if z1 == 0 goto label1;

        $i1 = lengthof r3;

        r2 = newarray (java.security.cert.X509Certificate)[$i1];

        i0 = 0;

     label3:
        $i2 = lengthof r3;

        if i0 >= $i2 goto label1;

        $r10 = r3[i0];

        $r9 = (java.security.cert.X509Certificate) $r10;

        r2[i0] = $r9;

        i0 = i0 + 1;

        goto label3;
    }

    public java.lang.String[] getClientAliases(java.lang.String, java.security.Principal[])
    {
        com.android.org.conscrypt.KeyManagerImpl r0;
        java.lang.String r1;
        java.security.Principal[] r2;
        java.lang.String[] $r3, $r4;

        r0 := @this: com.android.org.conscrypt.KeyManagerImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.security.Principal[];

        $r3 = newarray (java.lang.String)[1];

        $r3[0] = r1;

        $r4 = specialinvoke r0.<com.android.org.conscrypt.KeyManagerImpl: java.lang.String[] chooseAlias(java.lang.String[],java.security.Principal[])>($r3, r2);

        return $r4;
    }

    public java.security.PrivateKey getPrivateKey(java.lang.String)
    {
        com.android.org.conscrypt.KeyManagerImpl r0;
        java.lang.String r1;
        java.util.Hashtable $r2, $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.security.KeyStore$PrivateKeyEntry $r5;
        java.security.PrivateKey $r6;

        r0 := @this: com.android.org.conscrypt.KeyManagerImpl;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label2;

     label1:
        return null;

     label2:
        $r2 = r0.<com.android.org.conscrypt.KeyManagerImpl: java.util.Hashtable hash>;

        $z0 = virtualinvoke $r2.<java.util.Hashtable: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.org.conscrypt.KeyManagerImpl: java.util.Hashtable hash>;

        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        $r5 = (java.security.KeyStore$PrivateKeyEntry) $r4;

        $r6 = virtualinvoke $r5.<java.security.KeyStore$PrivateKeyEntry: java.security.PrivateKey getPrivateKey()>();

        return $r6;
    }

    public java.lang.String[] getServerAliases(java.lang.String, java.security.Principal[])
    {
        com.android.org.conscrypt.KeyManagerImpl r0;
        java.lang.String r1;
        java.security.Principal[] r2;
        java.lang.String[] $r3, $r4;

        r0 := @this: com.android.org.conscrypt.KeyManagerImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.security.Principal[];

        $r3 = newarray (java.lang.String)[1];

        $r3[0] = r1;

        $r4 = specialinvoke r0.<com.android.org.conscrypt.KeyManagerImpl: java.lang.String[] chooseAlias(java.lang.String[],java.security.Principal[])>($r3, r2);

        return $r4;
    }
}
