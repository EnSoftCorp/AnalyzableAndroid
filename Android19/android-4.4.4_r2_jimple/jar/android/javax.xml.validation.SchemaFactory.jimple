public abstract class javax.xml.validation.SchemaFactory extends java.lang.Object
{

    protected void <init>()
    {
        javax.xml.validation.SchemaFactory r0;

        r0 := @this: javax.xml.validation.SchemaFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static javax.xml.validation.SchemaFactory newInstance(java.lang.String)
    {
        java.lang.String r0;
        java.lang.ClassLoader r1;
        javax.xml.validation.SchemaFactory r2;
        java.lang.Thread $r3;
        javax.xml.validation.SchemaFactoryFinder $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.Class $r6;

        r0 := @parameter0: java.lang.String;

        $r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r1 = virtualinvoke $r3.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        if r1 != null goto label1;

        $r6 = class "javax/xml/validation/SchemaFactory";

        r1 = virtualinvoke $r6.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label1:
        $r4 = new javax.xml.validation.SchemaFactoryFinder;

        specialinvoke $r4.<javax.xml.validation.SchemaFactoryFinder: void <init>(java.lang.ClassLoader)>(r1);

        r2 = virtualinvoke $r4.<javax.xml.validation.SchemaFactoryFinder: javax.xml.validation.SchemaFactory newFactory(java.lang.String)>(r0);

        if r2 != null goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r0);

        throw $r5;

     label2:
        return r2;
    }

    public static javax.xml.validation.SchemaFactory newInstance(java.lang.String, java.lang.String, java.lang.ClassLoader)
    {
        java.lang.String r0, r1;
        java.lang.ClassLoader r2;
        java.lang.IllegalAccessException r3, $r17;
        java.lang.InstantiationException r4, $r15;
        java.lang.Class r5, r6;
        java.lang.ClassNotFoundException r7, $r19;
        javax.xml.validation.SchemaFactory r8;
        java.lang.Object $r9;
        java.lang.IllegalArgumentException $r10, $r14, $r16, $r18;
        boolean $z0;
        java.lang.Thread $r11;
        java.lang.NullPointerException $r12, $r13;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.ClassLoader;

        if r0 != null goto label01;

        $r12 = new java.lang.NullPointerException;

        specialinvoke $r12.<java.lang.NullPointerException: void <init>(java.lang.String)>("schemaLanguage == null");

        throw $r12;

     label01:
        if r1 != null goto label02;

        $r13 = new java.lang.NullPointerException;

        specialinvoke $r13.<java.lang.NullPointerException: void <init>(java.lang.String)>("factoryClassName == null");

        throw $r13;

     label02:
        if r2 != null goto label03;

        $r11 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r2 = virtualinvoke $r11.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

     label03:
        if r2 == null goto label10;

     label04:
        r6 = virtualinvoke r2.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r1);

     label05:
        $r9 = virtualinvoke r6.<java.lang.Class: java.lang.Object newInstance()>();

        r8 = (javax.xml.validation.SchemaFactory) $r9;

     label06:
        if r8 == null goto label08;

     label07:
        $z0 = virtualinvoke r8.<javax.xml.validation.SchemaFactory: boolean isSchemaLanguageSupported(java.lang.String)>(r0);

        if $z0 != 0 goto label14;

     label08:
        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r0);

        throw $r10;

     label09:
        $r19 := @caughtexception;

        r7 = $r19;

        $r18 = new java.lang.IllegalArgumentException;

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>(r7);

        throw $r18;

     label10:
        r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r1);

     label11:
        r6 = r5;

        goto label05;

     label12:
        $r15 := @caughtexception;

        r4 = $r15;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>(r4);

        throw $r14;

     label13:
        $r17 := @caughtexception;

        r3 = $r17;

        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>(r3);

        throw $r16;

     label14:
        return r8;

        catch java.lang.ClassNotFoundException from label04 to label05 with label09;
        catch java.lang.InstantiationException from label04 to label05 with label12;
        catch java.lang.IllegalAccessException from label04 to label05 with label13;
        catch java.lang.ClassNotFoundException from label05 to label06 with label09;
        catch java.lang.InstantiationException from label05 to label06 with label12;
        catch java.lang.IllegalAccessException from label05 to label06 with label13;
        catch java.lang.ClassNotFoundException from label07 to label08 with label09;
        catch java.lang.InstantiationException from label07 to label08 with label12;
        catch java.lang.IllegalAccessException from label07 to label08 with label13;
        catch java.lang.ClassNotFoundException from label08 to label09 with label09;
        catch java.lang.InstantiationException from label08 to label09 with label12;
        catch java.lang.IllegalAccessException from label08 to label09 with label13;
        catch java.lang.ClassNotFoundException from label10 to label11 with label09;
        catch java.lang.InstantiationException from label10 to label11 with label12;
        catch java.lang.IllegalAccessException from label10 to label11 with label13;
    }

    public abstract org.xml.sax.ErrorHandler getErrorHandler();

    public boolean getFeature(java.lang.String) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        javax.xml.validation.SchemaFactory r0;
        java.lang.String r1;
        org.xml.sax.SAXNotRecognizedException $r2;
        java.lang.NullPointerException $r3;

        r0 := @this: javax.xml.validation.SchemaFactory;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("name == null");

        throw $r3;

     label1:
        $r2 = new org.xml.sax.SAXNotRecognizedException;

        specialinvoke $r2.<org.xml.sax.SAXNotRecognizedException: void <init>(java.lang.String)>(r1);

        throw $r2;
    }

    public java.lang.Object getProperty(java.lang.String) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        javax.xml.validation.SchemaFactory r0;
        java.lang.String r1;
        org.xml.sax.SAXNotRecognizedException $r2;
        java.lang.NullPointerException $r3;

        r0 := @this: javax.xml.validation.SchemaFactory;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("name == null");

        throw $r3;

     label1:
        $r2 = new org.xml.sax.SAXNotRecognizedException;

        specialinvoke $r2.<org.xml.sax.SAXNotRecognizedException: void <init>(java.lang.String)>(r1);

        throw $r2;
    }

    public abstract org.w3c.dom.ls.LSResourceResolver getResourceResolver();

    public abstract boolean isSchemaLanguageSupported(java.lang.String);

    public abstract javax.xml.validation.Schema newSchema() throws org.xml.sax.SAXException;

    public javax.xml.validation.Schema newSchema(java.io.File) throws org.xml.sax.SAXException
    {
        javax.xml.validation.SchemaFactory r0;
        java.io.File r1;
        javax.xml.transform.stream.StreamSource $r2;
        javax.xml.validation.Schema $r3;

        r0 := @this: javax.xml.validation.SchemaFactory;

        r1 := @parameter0: java.io.File;

        $r2 = new javax.xml.transform.stream.StreamSource;

        specialinvoke $r2.<javax.xml.transform.stream.StreamSource: void <init>(java.io.File)>(r1);

        $r3 = virtualinvoke r0.<javax.xml.validation.SchemaFactory: javax.xml.validation.Schema newSchema(javax.xml.transform.Source)>($r2);

        return $r3;
    }

    public javax.xml.validation.Schema newSchema(java.net.URL) throws org.xml.sax.SAXException
    {
        javax.xml.validation.SchemaFactory r0;
        java.net.URL r1;
        javax.xml.transform.stream.StreamSource $r2;
        java.lang.String $r3;
        javax.xml.validation.Schema $r4;

        r0 := @this: javax.xml.validation.SchemaFactory;

        r1 := @parameter0: java.net.URL;

        $r2 = new javax.xml.transform.stream.StreamSource;

        $r3 = virtualinvoke r1.<java.net.URL: java.lang.String toExternalForm()>();

        specialinvoke $r2.<javax.xml.transform.stream.StreamSource: void <init>(java.lang.String)>($r3);

        $r4 = virtualinvoke r0.<javax.xml.validation.SchemaFactory: javax.xml.validation.Schema newSchema(javax.xml.transform.Source)>($r2);

        return $r4;
    }

    public javax.xml.validation.Schema newSchema(javax.xml.transform.Source) throws org.xml.sax.SAXException
    {
        javax.xml.validation.SchemaFactory r0;
        javax.xml.transform.Source r1;
        javax.xml.transform.Source[] $r2;
        javax.xml.validation.Schema $r3;

        r0 := @this: javax.xml.validation.SchemaFactory;

        r1 := @parameter0: javax.xml.transform.Source;

        $r2 = newarray (javax.xml.transform.Source)[1];

        $r2[0] = r1;

        $r3 = virtualinvoke r0.<javax.xml.validation.SchemaFactory: javax.xml.validation.Schema newSchema(javax.xml.transform.Source[])>($r2);

        return $r3;
    }

    public abstract javax.xml.validation.Schema newSchema(javax.xml.transform.Source[]) throws org.xml.sax.SAXException;

    public abstract void setErrorHandler(org.xml.sax.ErrorHandler);

    public void setFeature(java.lang.String, boolean) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        javax.xml.validation.SchemaFactory r0;
        java.lang.String r1;
        boolean z0;
        org.xml.sax.SAXNotRecognizedException $r2;
        java.lang.NullPointerException $r3;

        r0 := @this: javax.xml.validation.SchemaFactory;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("name == null");

        throw $r3;

     label1:
        $r2 = new org.xml.sax.SAXNotRecognizedException;

        specialinvoke $r2.<org.xml.sax.SAXNotRecognizedException: void <init>(java.lang.String)>(r1);

        throw $r2;
    }

    public void setProperty(java.lang.String, java.lang.Object) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        javax.xml.validation.SchemaFactory r0;
        java.lang.String r1;
        java.lang.Object r2;
        org.xml.sax.SAXNotRecognizedException $r3;
        java.lang.NullPointerException $r4;

        r0 := @this: javax.xml.validation.SchemaFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        if r1 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("name == null");

        throw $r4;

     label1:
        $r3 = new org.xml.sax.SAXNotRecognizedException;

        specialinvoke $r3.<org.xml.sax.SAXNotRecognizedException: void <init>(java.lang.String)>(r1);

        throw $r3;
    }

    public abstract void setResourceResolver(org.w3c.dom.ls.LSResourceResolver);
}
