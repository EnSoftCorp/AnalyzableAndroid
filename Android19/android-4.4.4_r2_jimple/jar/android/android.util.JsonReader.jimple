public final class android.util.JsonReader extends java.lang.Object implements java.io.Closeable
{
    private static final java.lang.String FALSE;
    private static final java.lang.String TRUE;
    private final char[] buffer;
    private int bufferStartColumn;
    private int bufferStartLine;
    private final java.io.Reader in;
    private boolean lenient;
    private int limit;
    private java.lang.String name;
    private int pos;
    private boolean skipping;
    private final java.util.List stack;
    private final libcore.internal.StringPool stringPool;
    private android.util.JsonToken token;
    private java.lang.String value;
    private int valueLength;
    private int valuePos;

    public void <init>(java.io.Reader)
    {
        android.util.JsonReader r0;
        java.io.Reader r1;
        libcore.internal.StringPool $r2;
        char[] $r3;
        java.util.ArrayList $r4;
        android.util.JsonScope $r5;
        java.lang.NullPointerException $r6;

        r0 := @this: android.util.JsonReader;

        r1 := @parameter0: java.io.Reader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new libcore.internal.StringPool;

        specialinvoke $r2.<libcore.internal.StringPool: void <init>()>();

        r0.<android.util.JsonReader: libcore.internal.StringPool stringPool> = $r2;

        r0.<android.util.JsonReader: boolean lenient> = 0;

        $r3 = newarray (char)[1024];

        r0.<android.util.JsonReader: char[] buffer> = $r3;

        r0.<android.util.JsonReader: int pos> = 0;

        r0.<android.util.JsonReader: int limit> = 0;

        r0.<android.util.JsonReader: int bufferStartLine> = 1;

        r0.<android.util.JsonReader: int bufferStartColumn> = 1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.util.JsonReader: java.util.List stack> = $r4;

        $r5 = <android.util.JsonScope: android.util.JsonScope EMPTY_DOCUMENT>;

        specialinvoke r0.<android.util.JsonReader: void push(android.util.JsonScope)>($r5);

        r0.<android.util.JsonReader: boolean skipping> = 0;

        if r1 != null goto label1;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("in == null");

        throw $r6;

     label1:
        r0.<android.util.JsonReader: java.io.Reader in> = r1;

        return;
    }

    private android.util.JsonToken advance() throws java.io.IOException
    {
        android.util.JsonReader r0;
        android.util.JsonToken r1;

        r0 := @this: android.util.JsonReader;

        virtualinvoke r0.<android.util.JsonReader: android.util.JsonToken peek()>();

        r1 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        r0.<android.util.JsonReader: android.util.JsonToken token> = null;

        r0.<android.util.JsonReader: java.lang.String value> = null;

        r0.<android.util.JsonReader: java.lang.String name> = null;

        return r1;
    }

    private void checkLenient() throws java.io.IOException
    {
        android.util.JsonReader r0;
        boolean $z0;
        java.io.IOException $r1;

        r0 := @this: android.util.JsonReader;

        $z0 = r0.<android.util.JsonReader: boolean lenient>;

        if $z0 != 0 goto label1;

        $r1 = specialinvoke r0.<android.util.JsonReader: java.io.IOException syntaxError(java.lang.String)>("Use JsonReader.setLenient(true) to accept malformed JSON");

        throw $r1;

     label1:
        return;
    }

    private android.util.JsonToken decodeLiteral() throws java.io.IOException
    {
        android.util.JsonReader r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i14, $i15, $i17, $i18, $i20, $i21, $i22, $i24, $i25, $i27, $i28, $i30, $i31, $i33, $i36, $i39, $i40, $i42, $i43, $i44, $i45, $i46, $i47, $i50, $i51, $i53, $i54, $i55, $i56, $i58, $i61, $i62, $i64, $i65, $i68, $i69, $i71, $i73, $i74, $i76, $i77, $i79;
        char[] $r1, $r4, $r6, $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r31, $r32, $r33, $r35;
        libcore.internal.StringPool $r2;
        java.lang.String $r3;
        android.util.JsonToken $r5, $r11, $r20, $r30, $r34;
        char $c10, $c13, $c16, $c19, $c23, $c26, $c29, $c32, $c34, $c35, $c37, $c38, $c41, $c48, $c49, $c52, $c57, $c59, $c60, $c63, $c66, $c67, $c70, $c72, $c75, $c78;

        r0 := @this: android.util.JsonReader;

        $i0 = r0.<android.util.JsonReader: int valuePos>;

        if $i0 != -1 goto label01;

        $r34 = <android.util.JsonToken: android.util.JsonToken STRING>;

        return $r34;

     label01:
        $i1 = r0.<android.util.JsonReader: int valueLength>;

        if $i1 != 4 goto label06;

        $r25 = r0.<android.util.JsonReader: char[] buffer>;

        $i55 = r0.<android.util.JsonReader: int valuePos>;

        $c57 = $r25[$i55];

        if 110 == $c57 goto label02;

        $r35 = r0.<android.util.JsonReader: char[] buffer>;

        $i79 = r0.<android.util.JsonReader: int valuePos>;

        $c78 = $r35[$i79];

        if 78 != $c78 goto label06;

     label02:
        $r28 = r0.<android.util.JsonReader: char[] buffer>;

        $i56 = r0.<android.util.JsonReader: int valuePos>;

        $i64 = 1 + $i56;

        $c66 = $r28[$i64];

        if 117 == $c66 goto label03;

        $r32 = r0.<android.util.JsonReader: char[] buffer>;

        $i73 = r0.<android.util.JsonReader: int valuePos>;

        $i74 = 1 + $i73;

        $c72 = $r32[$i74];

        if 85 != $c72 goto label06;

     label03:
        $r27 = r0.<android.util.JsonReader: char[] buffer>;

        $i65 = r0.<android.util.JsonReader: int valuePos>;

        $i61 = 2 + $i65;

        $c63 = $r27[$i61];

        if 108 == $c63 goto label04;

        $r33 = r0.<android.util.JsonReader: char[] buffer>;

        $i76 = r0.<android.util.JsonReader: int valuePos>;

        $i77 = 2 + $i76;

        $c75 = $r33[$i77];

        if 76 != $c75 goto label06;

     label04:
        $r31 = r0.<android.util.JsonReader: char[] buffer>;

        $i62 = r0.<android.util.JsonReader: int valuePos>;

        $i71 = 3 + $i62;

        $c70 = $r31[$i71];

        if 108 == $c70 goto label05;

        $r29 = r0.<android.util.JsonReader: char[] buffer>;

        $i68 = r0.<android.util.JsonReader: int valuePos>;

        $i69 = 3 + $i68;

        $c67 = $r29[$i69];

        if 76 != $c67 goto label06;

     label05:
        r0.<android.util.JsonReader: java.lang.String value> = "null";

        $r30 = <android.util.JsonToken: android.util.JsonToken NULL>;

        return $r30;

     label06:
        $i2 = r0.<android.util.JsonReader: int valueLength>;

        if $i2 != 4 goto label11;

        $r17 = r0.<android.util.JsonReader: char[] buffer>;

        $i36 = r0.<android.util.JsonReader: int valuePos>;

        $c35 = $r17[$i36];

        if 116 == $c35 goto label07;

        $r26 = r0.<android.util.JsonReader: char[] buffer>;

        $i58 = r0.<android.util.JsonReader: int valuePos>;

        $c60 = $r26[$i58];

        if 84 != $c60 goto label11;

     label07:
        $r18 = r0.<android.util.JsonReader: char[] buffer>;

        $i40 = r0.<android.util.JsonReader: int valuePos>;

        $i39 = 1 + $i40;

        $c38 = $r18[$i39];

        if 114 == $c38 goto label08;

        $r23 = r0.<android.util.JsonReader: char[] buffer>;

        $i50 = r0.<android.util.JsonReader: int valuePos>;

        $i51 = 1 + $i50;

        $c59 = $r23[$i51];

        if 82 != $c59 goto label11;

     label08:
        $r19 = r0.<android.util.JsonReader: char[] buffer>;

        $i43 = r0.<android.util.JsonReader: int valuePos>;

        $i42 = 2 + $i43;

        $c41 = $r19[$i42];

        if 117 == $c41 goto label09;

        $r24 = r0.<android.util.JsonReader: char[] buffer>;

        $i53 = r0.<android.util.JsonReader: int valuePos>;

        $i54 = 2 + $i53;

        $c49 = $r24[$i54];

        if 85 != $c49 goto label11;

     label09:
        $r22 = r0.<android.util.JsonReader: char[] buffer>;

        $i46 = r0.<android.util.JsonReader: int valuePos>;

        $i47 = 3 + $i46;

        $c48 = $r22[$i47];

        if 101 == $c48 goto label10;

        $r21 = r0.<android.util.JsonReader: char[] buffer>;

        $i44 = r0.<android.util.JsonReader: int valuePos>;

        $i45 = 3 + $i44;

        $c52 = $r21[$i45];

        if 69 != $c52 goto label11;

     label10:
        r0.<android.util.JsonReader: java.lang.String value> = "true";

        $r20 = <android.util.JsonToken: android.util.JsonToken BOOLEAN>;

        return $r20;

     label11:
        $i3 = r0.<android.util.JsonReader: int valueLength>;

        if $i3 != 5 goto label17;

        $r6 = r0.<android.util.JsonReader: char[] buffer>;

        $i8 = r0.<android.util.JsonReader: int valuePos>;

        $c10 = $r6[$i8];

        if 102 == $c10 goto label12;

        $r15 = r0.<android.util.JsonReader: char[] buffer>;

        $i33 = r0.<android.util.JsonReader: int valuePos>;

        $c37 = $r15[$i33];

        if 70 != $c37 goto label17;

     label12:
        $r7 = r0.<android.util.JsonReader: char[] buffer>;

        $i9 = r0.<android.util.JsonReader: int valuePos>;

        $i11 = 1 + $i9;

        $c13 = $r7[$i11];

        if 97 == $c13 goto label13;

        $r16 = r0.<android.util.JsonReader: char[] buffer>;

        $i30 = r0.<android.util.JsonReader: int valuePos>;

        $i31 = 1 + $i30;

        $c34 = $r16[$i31];

        if 65 != $c34 goto label17;

     label13:
        $r8 = r0.<android.util.JsonReader: char[] buffer>;

        $i12 = r0.<android.util.JsonReader: int valuePos>;

        $i14 = 2 + $i12;

        $c16 = $r8[$i14];

        if 108 == $c16 goto label14;

        $r14 = r0.<android.util.JsonReader: char[] buffer>;

        $i27 = r0.<android.util.JsonReader: int valuePos>;

        $i28 = 2 + $i27;

        $c32 = $r14[$i28];

        if 76 != $c32 goto label17;

     label14:
        $r9 = r0.<android.util.JsonReader: char[] buffer>;

        $i15 = r0.<android.util.JsonReader: int valuePos>;

        $i17 = 3 + $i15;

        $c19 = $r9[$i17];

        if 115 == $c19 goto label15;

        $r13 = r0.<android.util.JsonReader: char[] buffer>;

        $i24 = r0.<android.util.JsonReader: int valuePos>;

        $i25 = 3 + $i24;

        $c29 = $r13[$i25];

        if 83 != $c29 goto label17;

     label15:
        $r10 = r0.<android.util.JsonReader: char[] buffer>;

        $i18 = r0.<android.util.JsonReader: int valuePos>;

        $i20 = 4 + $i18;

        $c23 = $r10[$i20];

        if 101 == $c23 goto label16;

        $r12 = r0.<android.util.JsonReader: char[] buffer>;

        $i21 = r0.<android.util.JsonReader: int valuePos>;

        $i22 = 4 + $i21;

        $c26 = $r12[$i22];

        if 69 != $c26 goto label17;

     label16:
        r0.<android.util.JsonReader: java.lang.String value> = "false";

        $r11 = <android.util.JsonToken: android.util.JsonToken BOOLEAN>;

        return $r11;

     label17:
        $r2 = r0.<android.util.JsonReader: libcore.internal.StringPool stringPool>;

        $r1 = r0.<android.util.JsonReader: char[] buffer>;

        $i5 = r0.<android.util.JsonReader: int valuePos>;

        $i4 = r0.<android.util.JsonReader: int valueLength>;

        $r3 = virtualinvoke $r2.<libcore.internal.StringPool: java.lang.String get(char[],int,int)>($r1, $i5, $i4);

        r0.<android.util.JsonReader: java.lang.String value> = $r3;

        $r4 = r0.<android.util.JsonReader: char[] buffer>;

        $i7 = r0.<android.util.JsonReader: int valuePos>;

        $i6 = r0.<android.util.JsonReader: int valueLength>;

        $r5 = specialinvoke r0.<android.util.JsonReader: android.util.JsonToken decodeNumber(char[],int,int)>($r4, $i7, $i6);

        return $r5;
    }

    private android.util.JsonToken decodeNumber(char[], int, int)
    {
        android.util.JsonReader r0;
        char[] r1;
        int i0, i1, i2, i4, i6, $i9;
        char c3, c5, c7, c8;
        android.util.JsonToken $r2, $r3, $r4, $r5;

        r0 := @this: android.util.JsonReader;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = i0;

        c3 = r1[i2];

        if c3 != 45 goto label01;

        i2 = i2 + 1;

        c3 = r1[i2];

     label01:
        if c3 != 48 goto label04;

        i4 = i2 + 1;

        c5 = r1[i4];

     label02:
        if c5 != 46 goto label07;

        i4 = i4 + 1;

        c5 = r1[i4];

     label03:
        if c5 < 48 goto label07;

        if c5 > 57 goto label07;

        i4 = i4 + 1;

        c5 = r1[i4];

        goto label03;

     label04:
        if c3 < 49 goto label06;

        if c3 > 57 goto label06;

        i4 = i2 + 1;

        c5 = r1[i4];

     label05:
        if c5 < 48 goto label02;

        if c5 > 57 goto label02;

        i4 = i4 + 1;

        c5 = r1[i4];

        goto label05;

     label06:
        $r2 = <android.util.JsonToken: android.util.JsonToken STRING>;

        return $r2;

     label07:
        if c5 == 101 goto label08;

        if c5 != 69 goto label13;

     label08:
        i6 = i4 + 1;

        c7 = r1[i6];

        if c7 == 43 goto label09;

        if c7 != 45 goto label10;

     label09:
        i6 = i6 + 1;

        c7 = r1[i6];

     label10:
        if c7 < 48 goto label12;

        if c7 > 57 goto label12;

        i4 = i6 + 1;

        c8 = r1[i4];

     label11:
        if c8 < 48 goto label13;

        if c8 > 57 goto label13;

        i4 = i4 + 1;

        c8 = r1[i4];

        goto label11;

     label12:
        $r3 = <android.util.JsonToken: android.util.JsonToken STRING>;

        return $r3;

     label13:
        $i9 = i0 + i1;

        if i4 != $i9 goto label14;

        $r5 = <android.util.JsonToken: android.util.JsonToken NUMBER>;

        return $r5;

     label14:
        $r4 = <android.util.JsonToken: android.util.JsonToken STRING>;

        return $r4;
    }

    private void expect(android.util.JsonToken) throws java.io.IOException
    {
        android.util.JsonReader r0;
        android.util.JsonToken r1, $r3, $r10;
        java.lang.IllegalStateException $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r11;
        java.lang.String $r12;

        r0 := @this: android.util.JsonReader;

        r1 := @parameter0: android.util.JsonToken;

        virtualinvoke r0.<android.util.JsonReader: android.util.JsonToken peek()>();

        $r3 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        if $r3 == r1 goto label1;

        $r5 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but was ");

        $r10 = virtualinvoke r0.<android.util.JsonReader: android.util.JsonToken peek()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        throw $r5;

     label1:
        specialinvoke r0.<android.util.JsonReader: android.util.JsonToken advance()>();

        return;
    }

    private boolean fillBuffer(int) throws java.io.IOException
    {
        android.util.JsonReader r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i26, $i27, $i28, $i29, $i30;
        char[] $r1, $r2, $r4, $r5, $r6, $r7;
        java.io.Reader $r3;
        char $c17, $c25;

        r0 := @this: android.util.JsonReader;

        i0 := @parameter0: int;

        i1 = 0;

     label1:
        $i3 = r0.<android.util.JsonReader: int pos>;

        if i1 >= $i3 goto label4;

        $r6 = r0.<android.util.JsonReader: char[] buffer>;

        $c25 = $r6[i1];

        if $c25 != 10 goto label3;

        $i27 = r0.<android.util.JsonReader: int bufferStartLine>;

        $i28 = 1 + $i27;

        r0.<android.util.JsonReader: int bufferStartLine> = $i28;

        r0.<android.util.JsonReader: int bufferStartColumn> = 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $i29 = r0.<android.util.JsonReader: int bufferStartColumn>;

        $i30 = 1 + $i29;

        r0.<android.util.JsonReader: int bufferStartColumn> = $i30;

        goto label2;

     label4:
        $i5 = r0.<android.util.JsonReader: int limit>;

        $i4 = r0.<android.util.JsonReader: int pos>;

        if $i5 == $i4 goto label8;

        $i23 = r0.<android.util.JsonReader: int limit>;

        $i20 = r0.<android.util.JsonReader: int pos>;

        $i22 = $i23 - $i20;

        r0.<android.util.JsonReader: int limit> = $i22;

        $r7 = r0.<android.util.JsonReader: char[] buffer>;

        $i26 = r0.<android.util.JsonReader: int pos>;

        $r5 = r0.<android.util.JsonReader: char[] buffer>;

        $i24 = r0.<android.util.JsonReader: int limit>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, $i26, $r5, 0, $i24);

     label5:
        r0.<android.util.JsonReader: int pos> = 0;

     label6:
        $r3 = r0.<android.util.JsonReader: java.io.Reader in>;

        $r2 = r0.<android.util.JsonReader: char[] buffer>;

        $i9 = r0.<android.util.JsonReader: int limit>;

        $r1 = r0.<android.util.JsonReader: char[] buffer>;

        $i7 = lengthof $r1;

        $i6 = r0.<android.util.JsonReader: int limit>;

        $i8 = $i7 - $i6;

        i2 = virtualinvoke $r3.<java.io.Reader: int read(char[],int,int)>($r2, $i9, $i8);

        if i2 == -1 goto label9;

        $i10 = r0.<android.util.JsonReader: int limit>;

        $i12 = i2 + $i10;

        r0.<android.util.JsonReader: int limit> = $i12;

        $i11 = r0.<android.util.JsonReader: int bufferStartLine>;

        if $i11 != 1 goto label7;

        $i13 = r0.<android.util.JsonReader: int bufferStartColumn>;

        if $i13 != 1 goto label7;

        $i15 = r0.<android.util.JsonReader: int limit>;

        if $i15 <= 0 goto label7;

        $r4 = r0.<android.util.JsonReader: char[] buffer>;

        $c17 = $r4[0];

        if $c17 != 65279 goto label7;

        $i16 = r0.<android.util.JsonReader: int pos>;

        $i19 = 1 + $i16;

        r0.<android.util.JsonReader: int pos> = $i19;

        $i18 = r0.<android.util.JsonReader: int bufferStartColumn>;

        $i21 = -1 + $i18;

        r0.<android.util.JsonReader: int bufferStartColumn> = $i21;

     label7:
        $i14 = r0.<android.util.JsonReader: int limit>;

        if $i14 < i0 goto label6;

        return 1;

     label8:
        r0.<android.util.JsonReader: int limit> = 0;

        goto label5;

     label9:
        return 0;
    }

    private int getColumnNumber()
    {
        android.util.JsonReader r0;
        int i0, i1, $i2;
        char[] $r1;
        char $c3;

        r0 := @this: android.util.JsonReader;

        i0 = r0.<android.util.JsonReader: int bufferStartColumn>;

        i1 = 0;

     label1:
        $i2 = r0.<android.util.JsonReader: int pos>;

        if i1 >= $i2 goto label4;

        $r1 = r0.<android.util.JsonReader: char[] buffer>;

        $c3 = $r1[i1];

        if $c3 != 10 goto label3;

        i0 = 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        return i0;
    }

    private int getLineNumber()
    {
        android.util.JsonReader r0;
        int i0, i1, $i2;
        char[] $r1;
        char $c3;

        r0 := @this: android.util.JsonReader;

        i0 = r0.<android.util.JsonReader: int bufferStartLine>;

        i1 = 0;

     label1:
        $i2 = r0.<android.util.JsonReader: int pos>;

        if i1 >= $i2 goto label3;

        $r1 = r0.<android.util.JsonReader: char[] buffer>;

        $c3 = $r1[i1];

        if $c3 != 10 goto label2;

        i0 = i0 + 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return i0;
    }

    private java.lang.CharSequence getSnippet()
    {
        android.util.JsonReader r0;
        java.lang.StringBuilder r1, $r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        char[] $r3, $r5;

        r0 := @this: android.util.JsonReader;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        $i2 = r0.<android.util.JsonReader: int pos>;

        i0 = staticinvoke <java.lang.Math: int min(int,int)>($i2, 20);

        $r3 = r0.<android.util.JsonReader: char[] buffer>;

        $i3 = r0.<android.util.JsonReader: int pos>;

        $i4 = $i3 - i0;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r3, $i4, i0);

        $i6 = r0.<android.util.JsonReader: int limit>;

        $i5 = r0.<android.util.JsonReader: int pos>;

        $i7 = $i6 - $i5;

        i1 = staticinvoke <java.lang.Math: int min(int,int)>($i7, 20);

        $r5 = r0.<android.util.JsonReader: char[] buffer>;

        $i8 = r0.<android.util.JsonReader: int pos>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r5, $i8, i1);

        return r1;
    }

    private android.util.JsonToken nextInArray(boolean) throws java.io.IOException
    {
        android.util.JsonReader r0;
        boolean z0;
        android.util.JsonToken r1, r2, r3, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.util.JsonScope $r7;
        java.io.IOException $r8;

        r0 := @this: android.util.JsonReader;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label3;

        $r7 = <android.util.JsonScope: android.util.JsonScope NONEMPTY_ARRAY>;

        specialinvoke r0.<android.util.JsonReader: void replaceTop(android.util.JsonScope)>($r7);

     label1:
        $i1 = specialinvoke r0.<android.util.JsonReader: int nextNonWhitespace()>();

        lookupswitch($i1)
        {
            case 44: goto label8;
            case 59: goto label8;
            case 93: goto label7;
            default: goto label2;
        };

     label2:
        $i4 = r0.<android.util.JsonReader: int pos>;

        $i5 = -1 + $i4;

        r0.<android.util.JsonReader: int pos> = $i5;

        $r6 = specialinvoke r0.<android.util.JsonReader: android.util.JsonToken nextValue()>();

        return $r6;

     label3:
        $i0 = specialinvoke r0.<android.util.JsonReader: int nextNonWhitespace()>();

        lookupswitch($i0)
        {
            case 44: goto label1;
            case 59: goto label6;
            case 93: goto label5;
            default: goto label4;
        };

     label4:
        $r8 = specialinvoke r0.<android.util.JsonReader: java.io.IOException syntaxError(java.lang.String)>("Unterminated array");

        throw $r8;

     label5:
        specialinvoke r0.<android.util.JsonReader: android.util.JsonScope pop()>();

        r3 = <android.util.JsonToken: android.util.JsonToken END_ARRAY>;

        r0.<android.util.JsonReader: android.util.JsonToken token> = r3;

        return r3;

     label6:
        specialinvoke r0.<android.util.JsonReader: void checkLenient()>();

        goto label1;

     label7:
        if z0 == 0 goto label8;

        specialinvoke r0.<android.util.JsonReader: android.util.JsonScope pop()>();

        r2 = <android.util.JsonToken: android.util.JsonToken END_ARRAY>;

        r0.<android.util.JsonReader: android.util.JsonToken token> = r2;

        return r2;

     label8:
        specialinvoke r0.<android.util.JsonReader: void checkLenient()>();

        $i2 = r0.<android.util.JsonReader: int pos>;

        $i3 = -1 + $i2;

        r0.<android.util.JsonReader: int pos> = $i3;

        r0.<android.util.JsonReader: java.lang.String value> = "null";

        r1 = <android.util.JsonToken: android.util.JsonToken NULL>;

        r0.<android.util.JsonReader: android.util.JsonToken token> = r1;

        return r1;
    }

    private android.util.JsonToken nextInObject(boolean) throws java.io.IOException
    {
        android.util.JsonReader r0;
        boolean z0, $z1;
        android.util.JsonToken r1, r2, r3;
        int i0, $i1, $i3, $i4, $i5, $i6, $i7;
        char $c2;
        java.lang.String $r5, $r7, $r8;
        android.util.JsonScope $r6;
        java.io.IOException $r9, $r10;

        r0 := @this: android.util.JsonReader;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label05;

        $i5 = specialinvoke r0.<android.util.JsonReader: int nextNonWhitespace()>();

        tableswitch($i5)
        {
            case 125: goto label04;
            default: goto label01;
        };

     label01:
        $i7 = r0.<android.util.JsonReader: int pos>;

        $i6 = -1 + $i7;

        r0.<android.util.JsonReader: int pos> = $i6;

     label02:
        i0 = specialinvoke r0.<android.util.JsonReader: int nextNonWhitespace()>();

        lookupswitch(i0)
        {
            case 34: goto label09;
            case 39: goto label08;
            default: goto label03;
        };

     label03:
        specialinvoke r0.<android.util.JsonReader: void checkLenient()>();

        $i3 = r0.<android.util.JsonReader: int pos>;

        $i4 = -1 + $i3;

        r0.<android.util.JsonReader: int pos> = $i4;

        $r8 = specialinvoke r0.<android.util.JsonReader: java.lang.String nextLiteral(boolean)>(0);

        r0.<android.util.JsonReader: java.lang.String name> = $r8;

        $r7 = r0.<android.util.JsonReader: java.lang.String name>;

        $z1 = virtualinvoke $r7.<java.lang.String: boolean isEmpty()>();

        if $z1 == 0 goto label10;

        $r9 = specialinvoke r0.<android.util.JsonReader: java.io.IOException syntaxError(java.lang.String)>("Expected name");

        throw $r9;

     label04:
        specialinvoke r0.<android.util.JsonReader: android.util.JsonScope pop()>();

        r3 = <android.util.JsonToken: android.util.JsonToken END_OBJECT>;

        r0.<android.util.JsonReader: android.util.JsonToken token> = r3;

        return r3;

     label05:
        $i1 = specialinvoke r0.<android.util.JsonReader: int nextNonWhitespace()>();

        lookupswitch($i1)
        {
            case 44: goto label02;
            case 59: goto label02;
            case 125: goto label07;
            default: goto label06;
        };

     label06:
        $r10 = specialinvoke r0.<android.util.JsonReader: java.io.IOException syntaxError(java.lang.String)>("Unterminated object");

        throw $r10;

     label07:
        specialinvoke r0.<android.util.JsonReader: android.util.JsonScope pop()>();

        r1 = <android.util.JsonToken: android.util.JsonToken END_OBJECT>;

        r0.<android.util.JsonReader: android.util.JsonToken token> = r1;

        return r1;

     label08:
        specialinvoke r0.<android.util.JsonReader: void checkLenient()>();

     label09:
        $c2 = (char) i0;

        $r5 = specialinvoke r0.<android.util.JsonReader: java.lang.String nextString(char)>($c2);

        r0.<android.util.JsonReader: java.lang.String name> = $r5;

     label10:
        $r6 = <android.util.JsonScope: android.util.JsonScope DANGLING_NAME>;

        specialinvoke r0.<android.util.JsonReader: void replaceTop(android.util.JsonScope)>($r6);

        r2 = <android.util.JsonToken: android.util.JsonToken NAME>;

        r0.<android.util.JsonReader: android.util.JsonToken token> = r2;

        return r2;
    }

    private java.lang.String nextLiteral(boolean) throws java.io.IOException
    {
        android.util.JsonReader r0;
        boolean z0, z1, $z2, $z3;
        java.lang.StringBuilder r1, $r9;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i20, $i21;
        java.lang.String r2;
        char[] $r3, $r4, $r6, $r8, $r11, $r12;
        libcore.internal.StringPool $r10;
        char $c19;

        r0 := @this: android.util.JsonReader;

        z0 := @parameter0: boolean;

        r1 = null;

        r0.<android.util.JsonReader: int valuePos> = -1;

        r0.<android.util.JsonReader: int valueLength> = 0;

        i0 = 0;

     label01:
        $i1 = r0.<android.util.JsonReader: int pos>;

        $i3 = i0 + $i1;

        $i2 = r0.<android.util.JsonReader: int limit>;

        if $i3 >= $i2 goto label06;

        $r12 = r0.<android.util.JsonReader: char[] buffer>;

        $i20 = r0.<android.util.JsonReader: int pos>;

        $i21 = i0 + $i20;

        $c19 = $r12[$i21];

        lookupswitch($c19)
        {
            case 9: goto label04;
            case 10: goto label04;
            case 12: goto label04;
            case 13: goto label04;
            case 32: goto label04;
            case 35: goto label03;
            case 44: goto label04;
            case 47: goto label03;
            case 58: goto label04;
            case 59: goto label03;
            case 61: goto label03;
            case 91: goto label04;
            case 92: goto label03;
            case 93: goto label04;
            case 123: goto label04;
            case 125: goto label04;
            default: goto label02;
        };

     label02:
        i0 = i0 + 1;

        goto label01;

     label03:
        specialinvoke r0.<android.util.JsonReader: void checkLenient()>();

     label04:
        if z0 == 0 goto label09;

        if r1 != null goto label09;

        $i16 = r0.<android.util.JsonReader: int pos>;

        r0.<android.util.JsonReader: int valuePos> = $i16;

        r2 = null;

     label05:
        $i12 = r0.<android.util.JsonReader: int valueLength>;

        $i11 = i0 + $i12;

        r0.<android.util.JsonReader: int valueLength> = $i11;

        $i14 = r0.<android.util.JsonReader: int pos>;

        $i13 = i0 + $i14;

        r0.<android.util.JsonReader: int pos> = $i13;

        return r2;

     label06:
        $r3 = r0.<android.util.JsonReader: char[] buffer>;

        $i4 = lengthof $r3;

        if i0 >= $i4 goto label07;

        $i18 = i0 + 1;

        $z3 = specialinvoke r0.<android.util.JsonReader: boolean fillBuffer(int)>($i18);

        if $z3 != 0 goto label01;

        $r11 = r0.<android.util.JsonReader: char[] buffer>;

        $i17 = r0.<android.util.JsonReader: int limit>;

        $r11[$i17] = 0;

        goto label04;

     label07:
        if r1 != null goto label08;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        r1 = $r9;

     label08:
        $r4 = r0.<android.util.JsonReader: char[] buffer>;

        $i5 = r0.<android.util.JsonReader: int pos>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r4, $i5, i0);

        $i7 = r0.<android.util.JsonReader: int valueLength>;

        $i6 = i0 + $i7;

        r0.<android.util.JsonReader: int valueLength> = $i6;

        $i9 = r0.<android.util.JsonReader: int pos>;

        $i8 = i0 + $i9;

        r0.<android.util.JsonReader: int pos> = $i8;

        z1 = specialinvoke r0.<android.util.JsonReader: boolean fillBuffer(int)>(1);

        i0 = 0;

        if z1 != 0 goto label01;

        i0 = 0;

        goto label04;

     label09:
        $z2 = r0.<android.util.JsonReader: boolean skipping>;

        if $z2 == 0 goto label10;

        r2 = "skipped!";

        goto label05;

     label10:
        if r1 != null goto label11;

        $r10 = r0.<android.util.JsonReader: libcore.internal.StringPool stringPool>;

        $r8 = r0.<android.util.JsonReader: char[] buffer>;

        $i15 = r0.<android.util.JsonReader: int pos>;

        r2 = virtualinvoke $r10.<libcore.internal.StringPool: java.lang.String get(char[],int,int)>($r8, $i15, i0);

        goto label05;

     label11:
        $r6 = r0.<android.util.JsonReader: char[] buffer>;

        $i10 = r0.<android.util.JsonReader: int pos>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r6, $i10, i0);

        r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label05;
    }

    private int nextNonWhitespace() throws java.io.IOException
    {
        android.util.JsonReader r0;
        char[] r1, $r2;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13, $i14;
        char c1, $c8;
        boolean $z0, $z1, $z2;
        java.io.IOException $r3;
        java.io.EOFException $r4;

        r0 := @this: android.util.JsonReader;

     label01:
        $i3 = r0.<android.util.JsonReader: int pos>;

        $i2 = r0.<android.util.JsonReader: int limit>;

        if $i3 < $i2 goto label02;

        $z1 = specialinvoke r0.<android.util.JsonReader: boolean fillBuffer(int)>(1);

        if $z1 == 0 goto label11;

     label02:
        r1 = r0.<android.util.JsonReader: char[] buffer>;

        i0 = r0.<android.util.JsonReader: int pos>;

        $i4 = i0 + 1;

        r0.<android.util.JsonReader: int pos> = $i4;

        c1 = r1[i0];

        lookupswitch(c1)
        {
            case 9: goto label01;
            case 10: goto label01;
            case 13: goto label01;
            case 32: goto label01;
            case 35: goto label10;
            case 47: goto label04;
            default: goto label03;
        };

     label03:
        return c1;

     label04:
        $i6 = r0.<android.util.JsonReader: int pos>;

        $i5 = r0.<android.util.JsonReader: int limit>;

        if $i6 != $i5 goto label05;

        $z2 = specialinvoke r0.<android.util.JsonReader: boolean fillBuffer(int)>(1);

        if $z2 == 0 goto label03;

     label05:
        specialinvoke r0.<android.util.JsonReader: void checkLenient()>();

        $r2 = r0.<android.util.JsonReader: char[] buffer>;

        $i7 = r0.<android.util.JsonReader: int pos>;

        $c8 = $r2[$i7];

        lookupswitch($c8)
        {
            case 42: goto label07;
            case 47: goto label09;
            default: goto label06;
        };

     label06:
        return c1;

     label07:
        $i11 = r0.<android.util.JsonReader: int pos>;

        $i12 = 1 + $i11;

        r0.<android.util.JsonReader: int pos> = $i12;

        $z0 = specialinvoke r0.<android.util.JsonReader: boolean skipTo(java.lang.String)>("*/");

        if $z0 != 0 goto label08;

        $r3 = specialinvoke r0.<android.util.JsonReader: java.io.IOException syntaxError(java.lang.String)>("Unterminated comment");

        throw $r3;

     label08:
        $i13 = r0.<android.util.JsonReader: int pos>;

        $i14 = 2 + $i13;

        r0.<android.util.JsonReader: int pos> = $i14;

        goto label01;

     label09:
        $i9 = r0.<android.util.JsonReader: int pos>;

        $i10 = 1 + $i9;

        r0.<android.util.JsonReader: int pos> = $i10;

        specialinvoke r0.<android.util.JsonReader: void skipToEndOfLine()>();

        goto label01;

     label10:
        specialinvoke r0.<android.util.JsonReader: void checkLenient()>();

        specialinvoke r0.<android.util.JsonReader: void skipToEndOfLine()>();

        goto label01;

     label11:
        $r4 = new java.io.EOFException;

        specialinvoke $r4.<java.io.EOFException: void <init>(java.lang.String)>("End of input");

        throw $r4;
    }

    private java.lang.String nextString(char) throws java.io.IOException
    {
        android.util.JsonReader r0;
        char c0, c3, $c12;
        java.lang.StringBuilder r1, $r6, $r9;
        int i1, i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i16, $i17, $i18;
        char[] r2, $r3, $r7, $r12, $r15;
        boolean $z0, $z1;
        java.io.IOException $r5;
        java.lang.String $r13, $r14;
        libcore.internal.StringPool $r16;

        r0 := @this: android.util.JsonReader;

        c0 := @parameter0: char;

        r1 = null;

     label1:
        i1 = r0.<android.util.JsonReader: int pos>;

     label2:
        $i5 = r0.<android.util.JsonReader: int pos>;

        $i4 = r0.<android.util.JsonReader: int limit>;

        if $i5 >= $i4 goto label7;

        r2 = r0.<android.util.JsonReader: char[] buffer>;

        i2 = r0.<android.util.JsonReader: int pos>;

        $i8 = i2 + 1;

        r0.<android.util.JsonReader: int pos> = $i8;

        c3 = r2[i2];

        if c3 != c0 goto label5;

        $z1 = r0.<android.util.JsonReader: boolean skipping>;

        if $z1 == 0 goto label3;

        return "skipped!";

     label3:
        if r1 != null goto label4;

        $r16 = r0.<android.util.JsonReader: libcore.internal.StringPool stringPool>;

        $r15 = r0.<android.util.JsonReader: char[] buffer>;

        $i18 = r0.<android.util.JsonReader: int pos>;

        $i16 = $i18 - i1;

        $i17 = -1 + $i16;

        $r14 = virtualinvoke $r16.<libcore.internal.StringPool: java.lang.String get(char[],int,int)>($r15, i1, $i17);

        return $r14;

     label4:
        $r12 = r0.<android.util.JsonReader: char[] buffer>;

        $i13 = r0.<android.util.JsonReader: int pos>;

        $i15 = $i13 - i1;

        $i14 = -1 + $i15;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r12, i1, $i14);

        $r13 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;

     label5:
        if c3 != 92 goto label2;

        if r1 != null goto label6;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        r1 = $r9;

     label6:
        $r7 = r0.<android.util.JsonReader: char[] buffer>;

        $i10 = r0.<android.util.JsonReader: int pos>;

        $i9 = $i10 - i1;

        $i11 = -1 + $i9;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r7, i1, $i11);

        $c12 = specialinvoke r0.<android.util.JsonReader: char readEscapeCharacter()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c12);

        i1 = r0.<android.util.JsonReader: int pos>;

        goto label2;

     label7:
        if r1 != null goto label8;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        r1 = $r6;

     label8:
        $r3 = r0.<android.util.JsonReader: char[] buffer>;

        $i6 = r0.<android.util.JsonReader: int pos>;

        $i7 = $i6 - i1;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r3, i1, $i7);

        $z0 = specialinvoke r0.<android.util.JsonReader: boolean fillBuffer(int)>(1);

        if $z0 != 0 goto label1;

        $r5 = specialinvoke r0.<android.util.JsonReader: java.io.IOException syntaxError(java.lang.String)>("Unterminated string");

        throw $r5;
    }

    private android.util.JsonToken nextValue() throws java.io.IOException
    {
        android.util.JsonReader r0;
        int i0, $i2, $i3;
        android.util.JsonToken r1, r2, r3, $r7;
        android.util.JsonScope $r4, $r5;
        char $c1;
        java.lang.String $r6;

        r0 := @this: android.util.JsonReader;

        i0 = specialinvoke r0.<android.util.JsonReader: int nextNonWhitespace()>();

        lookupswitch(i0)
        {
            case 34: goto label5;
            case 39: goto label4;
            case 91: goto label3;
            case 123: goto label2;
            default: goto label1;
        };

     label1:
        $i2 = r0.<android.util.JsonReader: int pos>;

        $i3 = -1 + $i2;

        r0.<android.util.JsonReader: int pos> = $i3;

        $r7 = specialinvoke r0.<android.util.JsonReader: android.util.JsonToken readLiteral()>();

        return $r7;

     label2:
        $r4 = <android.util.JsonScope: android.util.JsonScope EMPTY_OBJECT>;

        specialinvoke r0.<android.util.JsonReader: void push(android.util.JsonScope)>($r4);

        r3 = <android.util.JsonToken: android.util.JsonToken BEGIN_OBJECT>;

        r0.<android.util.JsonReader: android.util.JsonToken token> = r3;

        return r3;

     label3:
        $r5 = <android.util.JsonScope: android.util.JsonScope EMPTY_ARRAY>;

        specialinvoke r0.<android.util.JsonReader: void push(android.util.JsonScope)>($r5);

        r2 = <android.util.JsonToken: android.util.JsonToken BEGIN_ARRAY>;

        r0.<android.util.JsonReader: android.util.JsonToken token> = r2;

        return r2;

     label4:
        specialinvoke r0.<android.util.JsonReader: void checkLenient()>();

     label5:
        $c1 = (char) i0;

        $r6 = specialinvoke r0.<android.util.JsonReader: java.lang.String nextString(char)>($c1);

        r0.<android.util.JsonReader: java.lang.String value> = $r6;

        r1 = <android.util.JsonToken: android.util.JsonToken STRING>;

        r0.<android.util.JsonReader: android.util.JsonToken token> = r1;

        return r1;
    }

    private android.util.JsonToken objectValue() throws java.io.IOException
    {
        android.util.JsonReader r0;
        int $i0, $i1, $i2, $i3, $i5, $i6;
        java.io.IOException $r1;
        char[] $r2;
        char $c4;
        android.util.JsonScope $r3;
        android.util.JsonToken $r4;
        boolean $z0;

        r0 := @this: android.util.JsonReader;

        $i0 = specialinvoke r0.<android.util.JsonReader: int nextNonWhitespace()>();

        tableswitch($i0)
        {
            case 58: goto label4;
            case 59: goto label1;
            case 60: goto label1;
            case 61: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = specialinvoke r0.<android.util.JsonReader: java.io.IOException syntaxError(java.lang.String)>("Expected \':\'");

        throw $r1;

     label2:
        specialinvoke r0.<android.util.JsonReader: void checkLenient()>();

        $i2 = r0.<android.util.JsonReader: int pos>;

        $i1 = r0.<android.util.JsonReader: int limit>;

        if $i2 < $i1 goto label3;

        $z0 = specialinvoke r0.<android.util.JsonReader: boolean fillBuffer(int)>(1);

        if $z0 == 0 goto label4;

     label3:
        $r2 = r0.<android.util.JsonReader: char[] buffer>;

        $i3 = r0.<android.util.JsonReader: int pos>;

        $c4 = $r2[$i3];

        if $c4 != 62 goto label4;

        $i5 = r0.<android.util.JsonReader: int pos>;

        $i6 = 1 + $i5;

        r0.<android.util.JsonReader: int pos> = $i6;

     label4:
        $r3 = <android.util.JsonScope: android.util.JsonScope NONEMPTY_OBJECT>;

        specialinvoke r0.<android.util.JsonReader: void replaceTop(android.util.JsonScope)>($r3);

        $r4 = specialinvoke r0.<android.util.JsonReader: android.util.JsonToken nextValue()>();

        return $r4;
    }

    private android.util.JsonScope peekStack()
    {
        android.util.JsonReader r0;
        java.util.List $r1, $r2;
        int $i0, $i1;
        java.lang.Object $r3;
        android.util.JsonScope $r4;

        r0 := @this: android.util.JsonReader;

        $r2 = r0.<android.util.JsonReader: java.util.List stack>;

        $r1 = r0.<android.util.JsonReader: java.util.List stack>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = -1 + $i0;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (android.util.JsonScope) $r3;

        return $r4;
    }

    private android.util.JsonScope pop()
    {
        android.util.JsonReader r0;
        java.util.List $r1, $r2;
        int $i0, $i1;
        java.lang.Object $r3;
        android.util.JsonScope $r4;

        r0 := @this: android.util.JsonReader;

        $r2 = r0.<android.util.JsonReader: java.util.List stack>;

        $r1 = r0.<android.util.JsonReader: java.util.List stack>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = -1 + $i0;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object remove(int)>($i1);

        $r4 = (android.util.JsonScope) $r3;

        return $r4;
    }

    private void push(android.util.JsonScope)
    {
        android.util.JsonReader r0;
        android.util.JsonScope r1;
        java.util.List $r2;

        r0 := @this: android.util.JsonReader;

        r1 := @parameter0: android.util.JsonScope;

        $r2 = r0.<android.util.JsonReader: java.util.List stack>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    private char readEscapeCharacter() throws java.io.IOException
    {
        android.util.JsonReader r0;
        char[] r1, $r3;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        char c1, $c12;
        java.lang.String r2;
        libcore.internal.StringPool $r4;
        boolean $z0, $z1;
        java.io.IOException $r5, $r6;

        r0 := @this: android.util.JsonReader;

        $i3 = r0.<android.util.JsonReader: int pos>;

        $i2 = r0.<android.util.JsonReader: int limit>;

        if $i3 != $i2 goto label1;

        $z1 = specialinvoke r0.<android.util.JsonReader: boolean fillBuffer(int)>(1);

        if $z1 != 0 goto label1;

        $r6 = specialinvoke r0.<android.util.JsonReader: java.io.IOException syntaxError(java.lang.String)>("Unterminated escape sequence");

        throw $r6;

     label1:
        r1 = r0.<android.util.JsonReader: char[] buffer>;

        i0 = r0.<android.util.JsonReader: int pos>;

        $i4 = i0 + 1;

        r0.<android.util.JsonReader: int pos> = $i4;

        c1 = r1[i0];

        lookupswitch(c1)
        {
            case 98: goto label6;
            case 102: goto label9;
            case 110: goto label7;
            case 114: goto label8;
            case 116: goto label5;
            case 117: goto label3;
            default: goto label2;
        };

     label2:
        return c1;

     label3:
        $i5 = r0.<android.util.JsonReader: int pos>;

        $i7 = 4 + $i5;

        $i6 = r0.<android.util.JsonReader: int limit>;

        if $i7 <= $i6 goto label4;

        $z0 = specialinvoke r0.<android.util.JsonReader: boolean fillBuffer(int)>(4);

        if $z0 != 0 goto label4;

        $r5 = specialinvoke r0.<android.util.JsonReader: java.io.IOException syntaxError(java.lang.String)>("Unterminated escape sequence");

        throw $r5;

     label4:
        $r4 = r0.<android.util.JsonReader: libcore.internal.StringPool stringPool>;

        $r3 = r0.<android.util.JsonReader: char[] buffer>;

        $i8 = r0.<android.util.JsonReader: int pos>;

        r2 = virtualinvoke $r4.<libcore.internal.StringPool: java.lang.String get(char[],int,int)>($r3, $i8, 4);

        $i9 = r0.<android.util.JsonReader: int pos>;

        $i11 = 4 + $i9;

        r0.<android.util.JsonReader: int pos> = $i11;

        $i10 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(r2, 16);

        $c12 = (char) $i10;

        return $c12;

     label5:
        return 9;

     label6:
        return 8;

     label7:
        return 10;

     label8:
        return 13;

     label9:
        return 12;
    }

    private android.util.JsonToken readLiteral() throws java.io.IOException
    {
        android.util.JsonReader r0;
        java.lang.String $r1;
        int $i0;
        android.util.JsonToken $r2, $r3, $r4, $r5;
        java.io.IOException $r6;

        r0 := @this: android.util.JsonReader;

        $r1 = specialinvoke r0.<android.util.JsonReader: java.lang.String nextLiteral(boolean)>(1);

        r0.<android.util.JsonReader: java.lang.String value> = $r1;

        $i0 = r0.<android.util.JsonReader: int valueLength>;

        if $i0 != 0 goto label1;

        $r6 = specialinvoke r0.<android.util.JsonReader: java.io.IOException syntaxError(java.lang.String)>("Expected literal value");

        throw $r6;

     label1:
        $r2 = specialinvoke r0.<android.util.JsonReader: android.util.JsonToken decodeLiteral()>();

        r0.<android.util.JsonReader: android.util.JsonToken token> = $r2;

        $r4 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        $r3 = <android.util.JsonToken: android.util.JsonToken STRING>;

        if $r4 != $r3 goto label2;

        specialinvoke r0.<android.util.JsonReader: void checkLenient()>();

     label2:
        $r5 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        return $r5;
    }

    private void replaceTop(android.util.JsonScope)
    {
        android.util.JsonReader r0;
        android.util.JsonScope r1;
        java.util.List $r2, $r3;
        int $i0, $i1;

        r0 := @this: android.util.JsonReader;

        r1 := @parameter0: android.util.JsonScope;

        $r3 = r0.<android.util.JsonReader: java.util.List stack>;

        $r2 = r0.<android.util.JsonReader: java.util.List stack>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i1 = -1 + $i0;

        interfaceinvoke $r3.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i1, r1);

        return;
    }

    private boolean skipTo(java.lang.String) throws java.io.IOException
    {
        android.util.JsonReader r0;
        java.lang.String r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i10, $i11, $i12;
        char[] $r2;
        char $c8, $c9;
        boolean $z0;

        r0 := @this: android.util.JsonReader;

        r1 := @parameter0: java.lang.String;

     label1:
        $i1 = r0.<android.util.JsonReader: int pos>;

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        $i4 = $i1 + $i2;

        $i3 = r0.<android.util.JsonReader: int limit>;

        if $i4 <= $i3 goto label2;

        $i12 = virtualinvoke r1.<java.lang.String: int length()>();

        $z0 = specialinvoke r0.<android.util.JsonReader: boolean fillBuffer(int)>($i12);

        if $z0 == 0 goto label6;

     label2:
        i0 = 0;

     label3:
        $i5 = virtualinvoke r1.<java.lang.String: int length()>();

        if i0 >= $i5 goto label5;

        $r2 = r0.<android.util.JsonReader: char[] buffer>;

        $i6 = r0.<android.util.JsonReader: int pos>;

        $i7 = i0 + $i6;

        $c8 = $r2[$i7];

        $c9 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);

        if $c8 == $c9 goto label4;

        $i10 = r0.<android.util.JsonReader: int pos>;

        $i11 = 1 + $i10;

        r0.<android.util.JsonReader: int pos> = $i11;

        goto label1;

     label4:
        i0 = i0 + 1;

        goto label3;

     label5:
        return 1;

     label6:
        return 0;
    }

    private void skipToEndOfLine() throws java.io.IOException
    {
        android.util.JsonReader r0;
        char[] r1;
        int i0, $i2, $i3, $i4;
        char c1;
        boolean $z0;

        r0 := @this: android.util.JsonReader;

     label1:
        $i3 = r0.<android.util.JsonReader: int pos>;

        $i2 = r0.<android.util.JsonReader: int limit>;

        if $i3 < $i2 goto label2;

        $z0 = specialinvoke r0.<android.util.JsonReader: boolean fillBuffer(int)>(1);

        if $z0 == 0 goto label3;

     label2:
        r1 = r0.<android.util.JsonReader: char[] buffer>;

        i0 = r0.<android.util.JsonReader: int pos>;

        $i4 = i0 + 1;

        r0.<android.util.JsonReader: int pos> = $i4;

        c1 = r1[i0];

        if c1 == 13 goto label3;

        if c1 != 10 goto label1;

     label3:
        return;
    }

    private java.io.IOException syntaxError(java.lang.String) throws java.io.IOException
    {
        android.util.JsonReader r0;
        java.lang.String r1, $r9;
        android.util.MalformedJsonException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8;
        int $i0, $i1;

        r0 := @this: android.util.JsonReader;

        r1 := @parameter0: java.lang.String;

        $r2 = new android.util.MalformedJsonException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at line ");

        $i0 = specialinvoke r0.<android.util.JsonReader: int getLineNumber()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" column ");

        $i1 = specialinvoke r0.<android.util.JsonReader: int getColumnNumber()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<android.util.MalformedJsonException: void <init>(java.lang.String)>($r9);

        throw $r2;
    }

    public void beginArray() throws java.io.IOException
    {
        android.util.JsonReader r0;
        android.util.JsonToken $r1;

        r0 := @this: android.util.JsonReader;

        $r1 = <android.util.JsonToken: android.util.JsonToken BEGIN_ARRAY>;

        specialinvoke r0.<android.util.JsonReader: void expect(android.util.JsonToken)>($r1);

        return;
    }

    public void beginObject() throws java.io.IOException
    {
        android.util.JsonReader r0;
        android.util.JsonToken $r1;

        r0 := @this: android.util.JsonReader;

        $r1 = <android.util.JsonToken: android.util.JsonToken BEGIN_OBJECT>;

        specialinvoke r0.<android.util.JsonReader: void expect(android.util.JsonToken)>($r1);

        return;
    }

    public void close() throws java.io.IOException
    {
        android.util.JsonReader r0;
        java.util.List $r1, $r3;
        android.util.JsonScope $r2;
        java.io.Reader $r4;

        r0 := @this: android.util.JsonReader;

        r0.<android.util.JsonReader: java.lang.String value> = null;

        r0.<android.util.JsonReader: android.util.JsonToken token> = null;

        $r1 = r0.<android.util.JsonReader: java.util.List stack>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $r3 = r0.<android.util.JsonReader: java.util.List stack>;

        $r2 = <android.util.JsonScope: android.util.JsonScope CLOSED>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2);

        $r4 = r0.<android.util.JsonReader: java.io.Reader in>;

        virtualinvoke $r4.<java.io.Reader: void close()>();

        return;
    }

    public void endArray() throws java.io.IOException
    {
        android.util.JsonReader r0;
        android.util.JsonToken $r1;

        r0 := @this: android.util.JsonReader;

        $r1 = <android.util.JsonToken: android.util.JsonToken END_ARRAY>;

        specialinvoke r0.<android.util.JsonReader: void expect(android.util.JsonToken)>($r1);

        return;
    }

    public void endObject() throws java.io.IOException
    {
        android.util.JsonReader r0;
        android.util.JsonToken $r1;

        r0 := @this: android.util.JsonReader;

        $r1 = <android.util.JsonToken: android.util.JsonToken END_OBJECT>;

        specialinvoke r0.<android.util.JsonReader: void expect(android.util.JsonToken)>($r1);

        return;
    }

    public boolean hasNext() throws java.io.IOException
    {
        android.util.JsonReader r0;
        android.util.JsonToken $r2, $r3, $r4, $r5;

        r0 := @this: android.util.JsonReader;

        virtualinvoke r0.<android.util.JsonReader: android.util.JsonToken peek()>();

        $r3 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        $r2 = <android.util.JsonToken: android.util.JsonToken END_OBJECT>;

        if $r3 == $r2 goto label1;

        $r5 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        $r4 = <android.util.JsonToken: android.util.JsonToken END_ARRAY>;

        if $r5 == $r4 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isLenient()
    {
        android.util.JsonReader r0;
        boolean $z0;

        r0 := @this: android.util.JsonReader;

        $z0 = r0.<android.util.JsonReader: boolean lenient>;

        return $z0;
    }

    public boolean nextBoolean() throws java.io.IOException
    {
        android.util.JsonReader r0;
        boolean z0;
        android.util.JsonToken $r2, $r3, $r9;
        java.lang.String $r4, $r11;
        java.lang.IllegalStateException $r6;
        java.lang.StringBuilder $r7, $r8, $r10;

        r0 := @this: android.util.JsonReader;

        virtualinvoke r0.<android.util.JsonReader: android.util.JsonToken peek()>();

        $r3 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        $r2 = <android.util.JsonToken: android.util.JsonToken BOOLEAN>;

        if $r3 == $r2 goto label1;

        $r6 = new java.lang.IllegalStateException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected a boolean but was ");

        $r9 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label1:
        $r4 = r0.<android.util.JsonReader: java.lang.String value>;

        if $r4 != "true" goto label3;

        z0 = 1;

     label2:
        specialinvoke r0.<android.util.JsonReader: android.util.JsonToken advance()>();

        return z0;

     label3:
        z0 = 0;

        goto label2;
    }

    public double nextDouble() throws java.io.IOException
    {
        android.util.JsonReader r0;
        double d0;
        android.util.JsonToken $r2, $r3, $r6, $r7, $r11;
        java.lang.String $r4, $r12;
        java.lang.IllegalStateException $r8;
        java.lang.StringBuilder $r9, $r10, $r13;

        r0 := @this: android.util.JsonReader;

        virtualinvoke r0.<android.util.JsonReader: android.util.JsonToken peek()>();

        $r3 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        $r2 = <android.util.JsonToken: android.util.JsonToken STRING>;

        if $r3 == $r2 goto label1;

        $r7 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        $r6 = <android.util.JsonToken: android.util.JsonToken NUMBER>;

        if $r7 == $r6 goto label1;

        $r8 = new java.lang.IllegalStateException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected a double but was ");

        $r11 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        throw $r8;

     label1:
        $r4 = r0.<android.util.JsonReader: java.lang.String value>;

        d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r4);

        specialinvoke r0.<android.util.JsonReader: android.util.JsonToken advance()>();

        return d0;
    }

    public int nextInt() throws java.io.IOException
    {
        android.util.JsonReader r0;
        double d0, $d1;
        int i0, i1;
        android.util.JsonToken $r3, $r4, $r7, $r8, $r11;
        java.lang.String $r5, $r13, $r15, $r18;
        java.lang.StringBuilder $r9, $r12, $r14;
        java.lang.IllegalStateException $r10;
        java.lang.NumberFormatException $r16, $r17;
        byte $b2;

        r0 := @this: android.util.JsonReader;

        virtualinvoke r0.<android.util.JsonReader: android.util.JsonToken peek()>();

        $r4 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        $r3 = <android.util.JsonToken: android.util.JsonToken STRING>;

        if $r4 == $r3 goto label1;

        $r8 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        $r7 = <android.util.JsonToken: android.util.JsonToken NUMBER>;

        if $r8 == $r7 goto label1;

        $r10 = new java.lang.IllegalStateException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected an int but was ");

        $r11 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r10;

     label1:
        $r5 = r0.<android.util.JsonReader: java.lang.String value>;

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

     label2:
        i0 = i1;

     label3:
        specialinvoke r0.<android.util.JsonReader: android.util.JsonToken advance()>();

        return i0;

     label4:
        $r16 := @caughtexception;

        $r15 = r0.<android.util.JsonReader: java.lang.String value>;

        d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r15);

        i0 = (int) d0;

        $d1 = (double) i0;

        $b2 = $d1 cmpl d0;

        if $b2 == 0 goto label3;

        $r17 = new java.lang.NumberFormatException;

        $r18 = r0.<android.util.JsonReader: java.lang.String value>;

        specialinvoke $r17.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r18);

        throw $r17;

        catch java.lang.NumberFormatException from label1 to label2 with label4;
    }

    public long nextLong() throws java.io.IOException
    {
        android.util.JsonReader r0;
        double d0, $d1;
        long l0, l1;
        android.util.JsonToken $r3, $r4, $r7, $r8, $r11;
        java.lang.String $r5, $r13, $r15, $r18;
        java.lang.StringBuilder $r9, $r12, $r14;
        java.lang.IllegalStateException $r10;
        java.lang.NumberFormatException $r16, $r17;
        byte $b2;

        r0 := @this: android.util.JsonReader;

        virtualinvoke r0.<android.util.JsonReader: android.util.JsonToken peek()>();

        $r4 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        $r3 = <android.util.JsonToken: android.util.JsonToken STRING>;

        if $r4 == $r3 goto label1;

        $r7 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        $r8 = <android.util.JsonToken: android.util.JsonToken NUMBER>;

        if $r7 == $r8 goto label1;

        $r10 = new java.lang.IllegalStateException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected a long but was ");

        $r11 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r10;

     label1:
        $r5 = r0.<android.util.JsonReader: java.lang.String value>;

        l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r5);

     label2:
        l0 = l1;

     label3:
        specialinvoke r0.<android.util.JsonReader: android.util.JsonToken advance()>();

        return l0;

     label4:
        $r16 := @caughtexception;

        $r15 = r0.<android.util.JsonReader: java.lang.String value>;

        d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r15);

        l0 = (long) d0;

        $d1 = (double) l0;

        $b2 = $d1 cmpl d0;

        if $b2 == 0 goto label3;

        $r17 = new java.lang.NumberFormatException;

        $r18 = r0.<android.util.JsonReader: java.lang.String value>;

        specialinvoke $r17.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r18);

        throw $r17;

        catch java.lang.NumberFormatException from label1 to label2 with label4;
    }

    public java.lang.String nextName() throws java.io.IOException
    {
        android.util.JsonReader r0;
        java.lang.String r1, $r11;
        android.util.JsonToken $r3, $r4, $r9;
        java.lang.IllegalStateException $r6;
        java.lang.StringBuilder $r7, $r8, $r10;

        r0 := @this: android.util.JsonReader;

        virtualinvoke r0.<android.util.JsonReader: android.util.JsonToken peek()>();

        $r4 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        $r3 = <android.util.JsonToken: android.util.JsonToken NAME>;

        if $r4 == $r3 goto label1;

        $r6 = new java.lang.IllegalStateException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected a name but was ");

        $r9 = virtualinvoke r0.<android.util.JsonReader: android.util.JsonToken peek()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label1:
        r1 = r0.<android.util.JsonReader: java.lang.String name>;

        specialinvoke r0.<android.util.JsonReader: android.util.JsonToken advance()>();

        return r1;
    }

    public void nextNull() throws java.io.IOException
    {
        android.util.JsonReader r0;
        android.util.JsonToken $r2, $r3, $r8;
        java.lang.IllegalStateException $r5;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.String $r10;

        r0 := @this: android.util.JsonReader;

        virtualinvoke r0.<android.util.JsonReader: android.util.JsonToken peek()>();

        $r3 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        $r2 = <android.util.JsonToken: android.util.JsonToken NULL>;

        if $r3 == $r2 goto label1;

        $r5 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected null but was ");

        $r8 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label1:
        specialinvoke r0.<android.util.JsonReader: android.util.JsonToken advance()>();

        return;
    }

    public java.lang.String nextString() throws java.io.IOException
    {
        android.util.JsonReader r0;
        java.lang.String r1, $r13;
        android.util.JsonToken $r3, $r4, $r6, $r7, $r11;
        java.lang.IllegalStateException $r8;
        java.lang.StringBuilder $r9, $r10, $r12;

        r0 := @this: android.util.JsonReader;

        virtualinvoke r0.<android.util.JsonReader: android.util.JsonToken peek()>();

        $r4 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        $r3 = <android.util.JsonToken: android.util.JsonToken STRING>;

        if $r4 == $r3 goto label1;

        $r7 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        $r6 = <android.util.JsonToken: android.util.JsonToken NUMBER>;

        if $r7 == $r6 goto label1;

        $r8 = new java.lang.IllegalStateException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected a string but was ");

        $r11 = virtualinvoke r0.<android.util.JsonReader: android.util.JsonToken peek()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r8;

     label1:
        r1 = r0.<android.util.JsonReader: java.lang.String value>;

        specialinvoke r0.<android.util.JsonReader: android.util.JsonToken advance()>();

        return r1;
    }

    public android.util.JsonToken peek() throws java.io.IOException
    {
        android.util.JsonReader r0;
        android.util.JsonToken r2, r3, r4, $r5, $r11, $r12, $r13, $r14, $r15, $r17, $r18, $r19, $r21, $r25;
        int[] $r6;
        android.util.JsonScope $r7, $r16;
        int $i0, $i1;
        java.lang.AssertionError $r8;
        java.lang.IllegalStateException $r9;
        boolean $z0, $z1;
        java.io.IOException $r10, $r20;
        java.lang.StringBuilder $r22, $r23, $r24;
        java.lang.String $r26;
        java.io.EOFException $r27;

        r0 := @this: android.util.JsonReader;

        $r5 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        if $r5 == null goto label02;

        r4 = r0.<android.util.JsonReader: android.util.JsonToken token>;

     label01:
        return r4;

     label02:
        $r6 = <android.util.JsonReader$1: int[] $SwitchMap$android$util$JsonScope>;

        $r7 = specialinvoke r0.<android.util.JsonReader: android.util.JsonScope peekStack()>();

        $i0 = virtualinvoke $r7.<android.util.JsonScope: int ordinal()>();

        $i1 = $r6[$i0];

        tableswitch($i1)
        {
            case 1: goto label04;
            case 2: goto label05;
            case 3: goto label06;
            case 4: goto label07;
            case 5: goto label08;
            case 6: goto label09;
            case 7: goto label10;
            case 8: goto label14;
            default: goto label03;
        };

     label03:
        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label04:
        $r16 = <android.util.JsonScope: android.util.JsonScope NONEMPTY_DOCUMENT>;

        specialinvoke r0.<android.util.JsonReader: void replaceTop(android.util.JsonScope)>($r16);

        r4 = specialinvoke r0.<android.util.JsonReader: android.util.JsonToken nextValue()>();

        $z1 = r0.<android.util.JsonReader: boolean lenient>;

        if $z1 != 0 goto label01;

        $r19 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        $r17 = <android.util.JsonToken: android.util.JsonToken BEGIN_ARRAY>;

        if $r19 == $r17 goto label01;

        $r21 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        $r18 = <android.util.JsonToken: android.util.JsonToken BEGIN_OBJECT>;

        if $r21 == $r18 goto label01;

        $r20 = new java.io.IOException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected JSON document to start with \'[\' or \'{\' but was ");

        $r25 = r0.<android.util.JsonReader: android.util.JsonToken token>;

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.io.IOException: void <init>(java.lang.String)>($r26);

        throw $r20;

     label05:
        $r14 = specialinvoke r0.<android.util.JsonReader: android.util.JsonToken nextInArray(boolean)>(1);

        return $r14;

     label06:
        $r15 = specialinvoke r0.<android.util.JsonReader: android.util.JsonToken nextInArray(boolean)>(0);

        return $r15;

     label07:
        $r12 = specialinvoke r0.<android.util.JsonReader: android.util.JsonToken nextInObject(boolean)>(1);

        return $r12;

     label08:
        $r13 = specialinvoke r0.<android.util.JsonReader: android.util.JsonToken objectValue()>();

        return $r13;

     label09:
        $r11 = specialinvoke r0.<android.util.JsonReader: android.util.JsonToken nextInObject(boolean)>(0);

        return $r11;

     label10:
        r3 = specialinvoke r0.<android.util.JsonReader: android.util.JsonToken nextValue()>();

        $z0 = r0.<android.util.JsonReader: boolean lenient>;

        if $z0 == 0 goto label12;

     label11:
        return r3;

     label12:
        $r10 = specialinvoke r0.<android.util.JsonReader: java.io.IOException syntaxError(java.lang.String)>("Expected EOF");

        throw $r10;

     label13:
        $r27 := @caughtexception;

        r2 = <android.util.JsonToken: android.util.JsonToken END_DOCUMENT>;

        r0.<android.util.JsonReader: android.util.JsonToken token> = r2;

        return r2;

     label14:
        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("JsonReader is closed");

        throw $r9;

        catch java.io.EOFException from label10 to label11 with label13;
        catch java.io.EOFException from label12 to label13 with label13;
    }

    public void setLenient(boolean)
    {
        android.util.JsonReader r0;
        boolean z0;

        r0 := @this: android.util.JsonReader;

        z0 := @parameter0: boolean;

        r0.<android.util.JsonReader: boolean lenient> = z0;

        return;
    }

    public void skipValue() throws java.io.IOException
    {
        android.util.JsonReader r0;
        int i0;
        java.lang.Throwable r1, $r7;
        android.util.JsonToken r2, r3, r4, $r5, $r6;

        r0 := @this: android.util.JsonReader;

        r0.<android.util.JsonReader: boolean skipping> = 1;

        i0 = 0;

     label1:
        r2 = specialinvoke r0.<android.util.JsonReader: android.util.JsonToken advance()>();

        $r5 = <android.util.JsonToken: android.util.JsonToken BEGIN_ARRAY>;

        if r2 == $r5 goto label3;

        r3 = <android.util.JsonToken: android.util.JsonToken BEGIN_OBJECT>;

     label2:
        if r2 != r3 goto label5;

     label3:
        i0 = i0 + 1;

     label4:
        if i0 != 0 goto label1;

        r0.<android.util.JsonReader: boolean skipping> = 0;

        return;

     label5:
        $r6 = <android.util.JsonToken: android.util.JsonToken END_ARRAY>;

        if r2 == $r6 goto label7;

        r4 = <android.util.JsonToken: android.util.JsonToken END_OBJECT>;

     label6:
        if r2 != r4 goto label4;

     label7:
        i0 = i0 + -1;

        goto label4;

     label8:
        $r7 := @caughtexception;

        r1 = $r7;

        r0.<android.util.JsonReader: boolean skipping> = 0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
    }

    public java.lang.String toString()
    {
        android.util.JsonReader r0;
        java.lang.StringBuilder $r1, $r4, $r5, $r7;
        java.lang.Class $r2;
        java.lang.String $r3, $r8;
        java.lang.CharSequence $r6;

        r0 := @this: android.util.JsonReader;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" near ");

        $r6 = specialinvoke r0.<android.util.JsonReader: java.lang.CharSequence getSnippet()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public static void <clinit>()
    {
        <android.util.JsonReader: java.lang.String TRUE> = "true";

        <android.util.JsonReader: java.lang.String FALSE> = "false";

        return;
    }
}
