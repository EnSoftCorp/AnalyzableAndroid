class com.android.server.power.DisplayPowerState$3 extends java.lang.Object implements java.lang.Runnable
{
    final com.android.server.power.DisplayPowerState this$0;

    void <init>(com.android.server.power.DisplayPowerState)
    {
        com.android.server.power.DisplayPowerState$3 r0;
        com.android.server.power.DisplayPowerState r1;

        r0 := @this: com.android.server.power.DisplayPowerState$3;

        r1 := @parameter0: com.android.server.power.DisplayPowerState;

        r0.<com.android.server.power.DisplayPowerState$3: com.android.server.power.DisplayPowerState this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        com.android.server.power.DisplayPowerState$3 r0;
        boolean z0, $z2, $z3, $z4, $z5;
        int i0;
        byte b1;
        com.android.server.power.DisplayPowerState $r1, $r2, $r3, $r5, $r6, $r7, $r8, $r9;
        com.android.server.power.DisplayPowerState$PhotonicModulator $r4;
        float $f0;

        r0 := @this: com.android.server.power.DisplayPowerState$3;

        $r1 = r0.<com.android.server.power.DisplayPowerState$3: com.android.server.power.DisplayPowerState this$0>;

        staticinvoke <com.android.server.power.DisplayPowerState: boolean access$102(com.android.server.power.DisplayPowerState,boolean)>($r1, 0);

        $r2 = r0.<com.android.server.power.DisplayPowerState$3: com.android.server.power.DisplayPowerState this$0>;

        z0 = staticinvoke <com.android.server.power.DisplayPowerState: boolean access$200(com.android.server.power.DisplayPowerState)>($r2);

        i0 = 0;

        if z0 == 0 goto label1;

        $r8 = r0.<com.android.server.power.DisplayPowerState$3: com.android.server.power.DisplayPowerState this$0>;

        $f0 = staticinvoke <com.android.server.power.DisplayPowerState: float access$300(com.android.server.power.DisplayPowerState)>($r8);

        b1 = $f0 cmpl 0.0F;

        i0 = 0;

        if b1 <= 0 goto label1;

        $r9 = r0.<com.android.server.power.DisplayPowerState$3: com.android.server.power.DisplayPowerState this$0>;

        i0 = staticinvoke <com.android.server.power.DisplayPowerState: int access$400(com.android.server.power.DisplayPowerState)>($r9);

     label1:
        $r3 = r0.<com.android.server.power.DisplayPowerState$3: com.android.server.power.DisplayPowerState this$0>;

        $r4 = staticinvoke <com.android.server.power.DisplayPowerState: com.android.server.power.DisplayPowerState$PhotonicModulator access$500(com.android.server.power.DisplayPowerState)>($r3);

        $r5 = r0.<com.android.server.power.DisplayPowerState$3: com.android.server.power.DisplayPowerState this$0>;

        $z2 = staticinvoke <com.android.server.power.DisplayPowerState: boolean access$200(com.android.server.power.DisplayPowerState)>($r5);

        $z4 = virtualinvoke $r4.<com.android.server.power.DisplayPowerState$PhotonicModulator: boolean setState(boolean,int)>($z2, i0);

        if $z4 == 0 goto label4;

        $z5 = staticinvoke <com.android.server.power.DisplayPowerState: boolean access$600()>();

        if $z5 == 0 goto label2;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("DisplayPowerState", "Screen ready");

     label2:
        $r6 = r0.<com.android.server.power.DisplayPowerState$3: com.android.server.power.DisplayPowerState this$0>;

        staticinvoke <com.android.server.power.DisplayPowerState: boolean access$702(com.android.server.power.DisplayPowerState,boolean)>($r6, 1);

        $r7 = r0.<com.android.server.power.DisplayPowerState$3: com.android.server.power.DisplayPowerState this$0>;

        staticinvoke <com.android.server.power.DisplayPowerState: void access$800(com.android.server.power.DisplayPowerState)>($r7);

     label3:
        return;

     label4:
        $z3 = staticinvoke <com.android.server.power.DisplayPowerState: boolean access$600()>();

        if $z3 == 0 goto label3;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("DisplayPowerState", "Screen not ready");

        return;
    }
}
