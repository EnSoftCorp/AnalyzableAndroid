public class com.android.org.conscrypt.CertificateMessage extends com.android.org.conscrypt.Message
{
    java.security.cert.X509Certificate[] certs;
    byte[][] encoded_certs;

    public void <init>(com.android.org.conscrypt.HandshakeIODataStream, int) throws java.io.IOException
    {
        com.android.org.conscrypt.CertificateMessage r0;
        com.android.org.conscrypt.HandshakeIODataStream r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.security.cert.CertificateException r2, r5, $r17, $r20;
        java.security.cert.CertificateFactory r3;
        java.util.ArrayList r4, $r7;
        int[] r6, $r14;
        java.security.cert.X509Certificate[] $r8, $r9, $r11, $r15;
        java.lang.Object[] $r10;
        java.security.cert.Certificate $r12;
        java.security.cert.X509Certificate $r13;
        byte[][] $r16;
        java.lang.Class $r18;
        java.lang.Object $r19;

        r0 := @this: com.android.org.conscrypt.CertificateMessage;

        r1 := @parameter0: com.android.org.conscrypt.HandshakeIODataStream;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.org.conscrypt.Message: void <init>()>();

        i1 = virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: int readUint24()>();

        if i1 != 0 goto label03;

        if i0 == 3 goto label01;

        virtualinvoke r0.<com.android.org.conscrypt.CertificateMessage: void fatalAlert(byte,java.lang.String)>(50, "DECODE ERROR: incorrect CertificateMessage");

     label01:
        $r15 = newarray (java.security.cert.X509Certificate)[0];

        r0.<com.android.org.conscrypt.CertificateMessage: java.security.cert.X509Certificate[] certs> = $r15;

        $r14 = newarray (int)[2];

        $r14[0] = 0;

        $r14[1] = 0;

        r6 = $r14;

        $r18 = <java.lang.Byte: java.lang.Class TYPE>;

        $r19 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r18, r6);

        $r16 = (byte[][]) $r19;

        r0.<com.android.org.conscrypt.CertificateMessage: byte[][] encoded_certs> = $r16;

        r0.<com.android.org.conscrypt.CertificateMessage: int length> = 3;

     label02:
        return;

     label03:
        r3 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X509");

     label04:
        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r4 = $r7;

        i2 = 0;

     label05:
        if i1 <= 0 goto label10;

        i3 = virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: int readUint24()>();

        i4 = i1 - 3;

     label06:
        $r12 = virtualinvoke r3.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>(r1);

        $r13 = (java.security.cert.X509Certificate) $r12;

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);

     label07:
        i1 = i4 - i3;

        i2 = i2 + i3;

        goto label05;

     label08:
        $r17 := @caughtexception;

        r2 = $r17;

        virtualinvoke r0.<com.android.org.conscrypt.CertificateMessage: void fatalAlert(byte,java.lang.String,java.lang.Throwable)>(80, "INTERNAL ERROR", r2);

        return;

     label09:
        $r20 := @caughtexception;

        r5 = $r20;

        virtualinvoke r0.<com.android.org.conscrypt.CertificateMessage: void fatalAlert(byte,java.lang.String,java.lang.Throwable)>(50, "DECODE ERROR", r5);

        goto label07;

     label10:
        $i5 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        $r8 = newarray (java.security.cert.X509Certificate)[$i5];

        $r10 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r8);

        $r9 = (java.security.cert.X509Certificate[]) $r10;

        r0.<com.android.org.conscrypt.CertificateMessage: java.security.cert.X509Certificate[] certs> = $r9;

        $r11 = r0.<com.android.org.conscrypt.CertificateMessage: java.security.cert.X509Certificate[] certs>;

        $i6 = lengthof $r11;

        $i8 = 3 * $i6;

        $i7 = 3 + $i8;

        $i10 = i2 + $i7;

        r0.<com.android.org.conscrypt.CertificateMessage: int length> = $i10;

        $i9 = r0.<com.android.org.conscrypt.CertificateMessage: int length>;

        if $i9 == i0 goto label02;

        virtualinvoke r0.<com.android.org.conscrypt.CertificateMessage: void fatalAlert(byte,java.lang.String)>(50, "DECODE ERROR: incorrect CertificateMessage");

        return;

        catch java.security.cert.CertificateException from label03 to label04 with label08;
        catch java.security.cert.CertificateException from label06 to label07 with label09;
    }

    public void <init>(java.security.cert.X509Certificate[])
    {
        com.android.org.conscrypt.CertificateMessage r0;
        java.security.cert.X509Certificate[] r1, $r14;
        int[] r2, $r13;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.security.cert.CertificateEncodingException r3, $r17;
        byte[][] $r4, $r5, $r6, $r7, $r9, $r12, $r18;
        byte[] $r8, $r11;
        java.security.cert.X509Certificate $r10;
        java.lang.Object $r15;
        java.lang.Class $r16;

        r0 := @this: com.android.org.conscrypt.CertificateMessage;

        r1 := @parameter0: java.security.cert.X509Certificate[];

        specialinvoke r0.<com.android.org.conscrypt.Message: void <init>()>();

        if r1 != null goto label2;

        $r14 = newarray (java.security.cert.X509Certificate)[0];

        r0.<com.android.org.conscrypt.CertificateMessage: java.security.cert.X509Certificate[] certs> = $r14;

        $r13 = newarray (int)[2];

        $r13[0] = 0;

        $r13[1] = 0;

        r2 = $r13;

        $r16 = <java.lang.Byte: java.lang.Class TYPE>;

        $r15 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r16, r2);

        $r18 = (byte[][]) $r15;

        r0.<com.android.org.conscrypt.CertificateMessage: byte[][] encoded_certs> = $r18;

        r0.<com.android.org.conscrypt.CertificateMessage: int length> = 3;

     label1:
        return;

     label2:
        r0.<com.android.org.conscrypt.CertificateMessage: java.security.cert.X509Certificate[] certs> = r1;

        $r4 = r0.<com.android.org.conscrypt.CertificateMessage: byte[][] encoded_certs>;

        if $r4 != null goto label7;

        $i9 = lengthof r1;

        $r9 = newarray (byte[])[$i9];

        r0.<com.android.org.conscrypt.CertificateMessage: byte[][] encoded_certs> = $r9;

        i1 = 0;

     label3:
        $i10 = lengthof r1;

        if i1 >= $i10 goto label7;

     label4:
        $r12 = r0.<com.android.org.conscrypt.CertificateMessage: byte[][] encoded_certs>;

        $r10 = r1[i1];

        $r11 = virtualinvoke $r10.<java.security.cert.X509Certificate: byte[] getEncoded()>();

        $r12[i1] = $r11;

     label5:
        i1 = i1 + 1;

        goto label3;

     label6:
        $r17 := @caughtexception;

        r3 = $r17;

        virtualinvoke r0.<com.android.org.conscrypt.CertificateMessage: void fatalAlert(byte,java.lang.String,java.lang.Throwable)>(80, "INTERNAL ERROR", r3);

        goto label5;

     label7:
        $r5 = r0.<com.android.org.conscrypt.CertificateMessage: byte[][] encoded_certs>;

        $i2 = lengthof $r5;

        $i3 = 3 * $i2;

        $i4 = 3 + $i3;

        r0.<com.android.org.conscrypt.CertificateMessage: int length> = $i4;

        i0 = 0;

     label8:
        $r6 = r0.<com.android.org.conscrypt.CertificateMessage: byte[][] encoded_certs>;

        $i5 = lengthof $r6;

        if i0 >= $i5 goto label1;

        $i8 = r0.<com.android.org.conscrypt.CertificateMessage: int length>;

        $r7 = r0.<com.android.org.conscrypt.CertificateMessage: byte[][] encoded_certs>;

        $r8 = $r7[i0];

        $i6 = lengthof $r8;

        $i7 = $i8 + $i6;

        r0.<com.android.org.conscrypt.CertificateMessage: int length> = $i7;

        i0 = i0 + 1;

        goto label8;

        catch java.security.cert.CertificateEncodingException from label4 to label5 with label6;
    }

    public java.lang.String getAuthType()
    {
        com.android.org.conscrypt.CertificateMessage r0;
        java.security.cert.X509Certificate[] $r1;
        java.security.cert.X509Certificate $r2;
        java.security.PublicKey $r3;
        java.lang.String $r4;

        r0 := @this: com.android.org.conscrypt.CertificateMessage;

        $r1 = r0.<com.android.org.conscrypt.CertificateMessage: java.security.cert.X509Certificate[] certs>;

        $r2 = $r1[0];

        $r3 = virtualinvoke $r2.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

        $r4 = interfaceinvoke $r3.<java.security.PublicKey: java.lang.String getAlgorithm()>();

        return $r4;
    }

    public int getType()
    {
        com.android.org.conscrypt.CertificateMessage r0;

        r0 := @this: com.android.org.conscrypt.CertificateMessage;

        return 11;
    }

    public void send(com.android.org.conscrypt.HandshakeIODataStream)
    {
        com.android.org.conscrypt.CertificateMessage r0;
        com.android.org.conscrypt.HandshakeIODataStream r1;
        int i0, i1, i2, i3, $i4, $i5, $i7, $i8, $i10, $i11, $i12;
        java.security.cert.CertificateEncodingException r2, $r20;
        byte[][] $r3, $r4, $r5, $r6, $r7, $r9, $r10, $r15, $r17;
        long $l6, $l9;
        byte[] $r8, $r11, $r12, $r19;
        java.security.cert.X509Certificate[] $r13, $r14, $r16;
        java.security.cert.X509Certificate $r18;

        r0 := @this: com.android.org.conscrypt.CertificateMessage;

        r1 := @parameter0: com.android.org.conscrypt.HandshakeIODataStream;

        $r3 = r0.<com.android.org.conscrypt.CertificateMessage: byte[][] encoded_certs>;

        if $r3 != null goto label5;

        $r13 = r0.<com.android.org.conscrypt.CertificateMessage: java.security.cert.X509Certificate[] certs>;

        $i11 = lengthof $r13;

        $r15 = newarray (byte[])[$i11];

        r0.<com.android.org.conscrypt.CertificateMessage: byte[][] encoded_certs> = $r15;

        i3 = 0;

     label1:
        $r14 = r0.<com.android.org.conscrypt.CertificateMessage: java.security.cert.X509Certificate[] certs>;

        $i12 = lengthof $r14;

        if i3 >= $i12 goto label5;

     label2:
        $r17 = r0.<com.android.org.conscrypt.CertificateMessage: byte[][] encoded_certs>;

        $r16 = r0.<com.android.org.conscrypt.CertificateMessage: java.security.cert.X509Certificate[] certs>;

        $r18 = $r16[i3];

        $r19 = virtualinvoke $r18.<java.security.cert.X509Certificate: byte[] getEncoded()>();

        $r17[i3] = $r19;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        $r20 := @caughtexception;

        r2 = $r20;

        virtualinvoke r0.<com.android.org.conscrypt.CertificateMessage: void fatalAlert(byte,java.lang.String,java.lang.Throwable)>(80, "INTERNAL ERROR", r2);

        goto label3;

     label5:
        $r4 = r0.<com.android.org.conscrypt.CertificateMessage: byte[][] encoded_certs>;

        $i4 = lengthof $r4;

        i0 = 3 * $i4;

        i1 = 0;

     label6:
        $r5 = r0.<com.android.org.conscrypt.CertificateMessage: byte[][] encoded_certs>;

        $i5 = lengthof $r5;

        if i1 >= $i5 goto label7;

        $r10 = r0.<com.android.org.conscrypt.CertificateMessage: byte[][] encoded_certs>;

        $r12 = $r10[i1];

        $i10 = lengthof $r12;

        i0 = i0 + $i10;

        i1 = i1 + 1;

        goto label6;

     label7:
        $l6 = (long) i0;

        virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: void writeUint24(long)>($l6);

        i2 = 0;

     label8:
        $r6 = r0.<com.android.org.conscrypt.CertificateMessage: byte[][] encoded_certs>;

        $i7 = lengthof $r6;

        if i2 >= $i7 goto label9;

        $r7 = r0.<com.android.org.conscrypt.CertificateMessage: byte[][] encoded_certs>;

        $r8 = $r7[i2];

        $i8 = lengthof $r8;

        $l9 = (long) $i8;

        virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: void writeUint24(long)>($l9);

        $r9 = r0.<com.android.org.conscrypt.CertificateMessage: byte[][] encoded_certs>;

        $r11 = $r9[i2];

        virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: void write(byte[])>($r11);

        i2 = i2 + 1;

        goto label8;

     label9:
        return;

        catch java.security.cert.CertificateEncodingException from label2 to label3 with label4;
    }
}
