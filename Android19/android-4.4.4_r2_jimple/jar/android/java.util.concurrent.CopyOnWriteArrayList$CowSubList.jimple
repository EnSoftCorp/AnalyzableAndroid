class java.util.concurrent.CopyOnWriteArrayList$CowSubList extends java.util.AbstractList
{
    private volatile java.util.concurrent.CopyOnWriteArrayList$Slice slice;
    final java.util.concurrent.CopyOnWriteArrayList this$0;

    public void <init>(java.util.concurrent.CopyOnWriteArrayList, java.lang.Object[], int, int)
    {
        java.util.concurrent.CopyOnWriteArrayList$CowSubList r0;
        java.util.concurrent.CopyOnWriteArrayList r1;
        java.lang.Object[] r2;
        int i0, i1;
        java.util.concurrent.CopyOnWriteArrayList$Slice $r3;

        r0 := @this: java.util.concurrent.CopyOnWriteArrayList$CowSubList;

        r1 := @parameter0: java.util.concurrent.CopyOnWriteArrayList;

        r2 := @parameter1: java.lang.Object[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList this$0> = r1;

        specialinvoke r0.<java.util.AbstractList: void <init>()>();

        $r3 = new java.util.concurrent.CopyOnWriteArrayList$Slice;

        specialinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList$Slice: void <init>(java.lang.Object[],int,int)>(r2, i0, i1);

        r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice> = $r3;

        return;
    }

    public void add(int, java.lang.Object)
    {
        java.util.concurrent.CopyOnWriteArrayList$CowSubList r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object r1;
        java.util.concurrent.CopyOnWriteArrayList r2, $r5, $r9, $r11;
        java.lang.Throwable r3, $r15;
        java.util.concurrent.CopyOnWriteArrayList$Slice $r4, $r6, $r8, $r10, $r12, $r14;
        java.lang.Object[] $r7, $r13;

        r0 := @this: java.util.concurrent.CopyOnWriteArrayList$CowSubList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        r2 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList this$0>;

        entermonitor r2;

     label1:
        $r4 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        virtualinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList$Slice: void checkPositionIndex(int)>(i0);

        $r6 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        $r5 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList this$0>;

        $r7 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] access$300(java.util.concurrent.CopyOnWriteArrayList)>($r5);

        virtualinvoke $r6.<java.util.concurrent.CopyOnWriteArrayList$Slice: void checkConcurrentModification(java.lang.Object[])>($r7);

        $r9 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList this$0>;

        $r8 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        $i1 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$200(java.util.concurrent.CopyOnWriteArrayList$Slice)>($r8);

        $i2 = i0 + $i1;

        virtualinvoke $r9.<java.util.concurrent.CopyOnWriteArrayList: void add(int,java.lang.Object)>($i2, r1);

        $r10 = new java.util.concurrent.CopyOnWriteArrayList$Slice;

        $r11 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList this$0>;

        $r13 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] access$300(java.util.concurrent.CopyOnWriteArrayList)>($r11);

        $r12 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        $i3 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$200(java.util.concurrent.CopyOnWriteArrayList$Slice)>($r12);

        $r14 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        $i4 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$100(java.util.concurrent.CopyOnWriteArrayList$Slice)>($r14);

        $i5 = 1 + $i4;

        specialinvoke $r10.<java.util.concurrent.CopyOnWriteArrayList$Slice: void <init>(java.lang.Object[],int,int)>($r13, $i3, $i5);

        r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice> = $r10;

        exitmonitor r2;

     label2:
        return;

     label3:
        $r15 := @caughtexception;

        r3 = $r15;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean add(java.lang.Object)
    {
        java.util.concurrent.CopyOnWriteArrayList$CowSubList r0;
        java.lang.Object r1;
        java.util.concurrent.CopyOnWriteArrayList r2;
        java.lang.Throwable r3, $r6;
        java.util.concurrent.CopyOnWriteArrayList$Slice $r4, $r5;
        int $i0, $i1, $i2;

        r0 := @this: java.util.concurrent.CopyOnWriteArrayList$CowSubList;

        r1 := @parameter0: java.lang.Object;

        r2 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList this$0>;

        entermonitor r2;

     label1:
        $r4 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        $i0 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$100(java.util.concurrent.CopyOnWriteArrayList$Slice)>($r4);

        $r5 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        $i1 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$200(java.util.concurrent.CopyOnWriteArrayList$Slice)>($r5);

        $i2 = $i0 - $i1;

        virtualinvoke r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: void add(int,java.lang.Object)>($i2, r1);

        exitmonitor r2;

     label2:
        return 1;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean addAll(int, java.util.Collection)
    {
        java.util.concurrent.CopyOnWriteArrayList$CowSubList r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.util.Collection r1;
        java.util.concurrent.CopyOnWriteArrayList r2, $r5, $r8, $r11, $r14, $r18;
        java.lang.Throwable r3, $r19;
        boolean z0;
        java.util.concurrent.CopyOnWriteArrayList$Slice $r4, $r6, $r10, $r12, $r15, $r16;
        java.lang.Object[] $r7, $r9, $r13, $r17;

        r0 := @this: java.util.concurrent.CopyOnWriteArrayList$CowSubList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.Collection;

        r2 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList this$0>;

        entermonitor r2;

     label1:
        $r4 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        virtualinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList$Slice: void checkPositionIndex(int)>(i0);

        $r6 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        $r5 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList this$0>;

        $r7 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] access$300(java.util.concurrent.CopyOnWriteArrayList)>($r5);

        virtualinvoke $r6.<java.util.concurrent.CopyOnWriteArrayList$Slice: void checkConcurrentModification(java.lang.Object[])>($r7);

        $r8 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList this$0>;

        $r9 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] access$300(java.util.concurrent.CopyOnWriteArrayList)>($r8);

        i1 = lengthof $r9;

        $r11 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList this$0>;

        $r10 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        $i3 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$200(java.util.concurrent.CopyOnWriteArrayList$Slice)>($r10);

        $i2 = i0 + $i3;

        z0 = virtualinvoke $r11.<java.util.concurrent.CopyOnWriteArrayList: boolean addAll(int,java.util.Collection)>($i2, r1);

        $r12 = new java.util.concurrent.CopyOnWriteArrayList$Slice;

        $r14 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList this$0>;

        $r13 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] access$300(java.util.concurrent.CopyOnWriteArrayList)>($r14);

        $r15 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        $i4 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$200(java.util.concurrent.CopyOnWriteArrayList$Slice)>($r15);

        $r16 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        $i5 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$100(java.util.concurrent.CopyOnWriteArrayList$Slice)>($r16);

        $r18 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList this$0>;

        $r17 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] access$300(java.util.concurrent.CopyOnWriteArrayList)>($r18);

        $i7 = lengthof $r17;

        $i6 = $i7 - i1;

        $i8 = $i5 + $i6;

        specialinvoke $r12.<java.util.concurrent.CopyOnWriteArrayList$Slice: void <init>(java.lang.Object[],int,int)>($r13, $i4, $i8);

        r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice> = $r12;

        exitmonitor r2;

     label2:
        return z0;

     label3:
        $r19 := @caughtexception;

        r3 = $r19;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean addAll(java.util.Collection)
    {
        java.util.concurrent.CopyOnWriteArrayList$CowSubList r0;
        java.util.Collection r1;
        java.util.concurrent.CopyOnWriteArrayList r2;
        java.lang.Throwable r3, $r4;
        boolean z0;
        int $i0;

        r0 := @this: java.util.concurrent.CopyOnWriteArrayList$CowSubList;

        r1 := @parameter0: java.util.Collection;

        r2 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList this$0>;

        entermonitor r2;

     label1:
        $i0 = virtualinvoke r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: int size()>();

        z0 = virtualinvoke r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: boolean addAll(int,java.util.Collection)>($i0, r1);

        exitmonitor r2;

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void clear()
    {
        java.util.concurrent.CopyOnWriteArrayList$CowSubList r0;
        java.util.concurrent.CopyOnWriteArrayList r1, $r3, $r7, $r10;
        java.lang.Throwable r2, $r14;
        java.util.concurrent.CopyOnWriteArrayList$Slice $r4, $r6, $r8, $r9, $r12, $r13;
        java.lang.Object[] $r5, $r11;
        int $i0, $i1, $i2, $i3;

        r0 := @this: java.util.concurrent.CopyOnWriteArrayList$CowSubList;

        r1 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList this$0>;

        entermonitor r1;

     label1:
        $r4 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        $r3 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList this$0>;

        $r5 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] access$300(java.util.concurrent.CopyOnWriteArrayList)>($r3);

        virtualinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList$Slice: void checkConcurrentModification(java.lang.Object[])>($r5);

        $r7 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList this$0>;

        $r6 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        $i0 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$200(java.util.concurrent.CopyOnWriteArrayList$Slice)>($r6);

        $r8 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        $i1 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$100(java.util.concurrent.CopyOnWriteArrayList$Slice)>($r8);

        staticinvoke <java.util.concurrent.CopyOnWriteArrayList: void access$500(java.util.concurrent.CopyOnWriteArrayList,int,int)>($r7, $i0, $i1);

        $r9 = new java.util.concurrent.CopyOnWriteArrayList$Slice;

        $r10 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList this$0>;

        $r11 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] access$300(java.util.concurrent.CopyOnWriteArrayList)>($r10);

        $r12 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        $i2 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$200(java.util.concurrent.CopyOnWriteArrayList$Slice)>($r12);

        $r13 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        $i3 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$200(java.util.concurrent.CopyOnWriteArrayList$Slice)>($r13);

        specialinvoke $r9.<java.util.concurrent.CopyOnWriteArrayList$Slice: void <init>(java.lang.Object[],int,int)>($r11, $i2, $i3);

        r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice> = $r9;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r14 := @caughtexception;

        r2 = $r14;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean contains(java.lang.Object)
    {
        java.util.concurrent.CopyOnWriteArrayList$CowSubList r0;
        java.lang.Object r1;
        int $i0;

        r0 := @this: java.util.concurrent.CopyOnWriteArrayList$CowSubList;

        r1 := @parameter0: java.lang.Object;

        $i0 = virtualinvoke r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: int indexOf(java.lang.Object)>(r1);

        if $i0 == -1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean containsAll(java.util.Collection)
    {
        java.util.concurrent.CopyOnWriteArrayList$CowSubList r0;
        java.util.Collection r1;
        java.util.concurrent.CopyOnWriteArrayList$Slice r2;
        java.lang.Object[] r3;
        java.util.concurrent.CopyOnWriteArrayList $r4;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: java.util.concurrent.CopyOnWriteArrayList$CowSubList;

        r1 := @parameter0: java.util.Collection;

        r2 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        $r4 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList this$0>;

        r3 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] access$300(java.util.concurrent.CopyOnWriteArrayList)>($r4);

        virtualinvoke r2.<java.util.concurrent.CopyOnWriteArrayList$Slice: void checkConcurrentModification(java.lang.Object[])>(r3);

        $i0 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$200(java.util.concurrent.CopyOnWriteArrayList$Slice)>(r2);

        $i1 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$100(java.util.concurrent.CopyOnWriteArrayList$Slice)>(r2);

        $z0 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection,java.lang.Object[],int,int)>(r1, r3, $i0, $i1);

        return $z0;
    }

    public java.lang.Object get(int)
    {
        java.util.concurrent.CopyOnWriteArrayList$CowSubList r0;
        int i0, $i1, $i2;
        java.util.concurrent.CopyOnWriteArrayList$Slice r1;
        java.lang.Object[] r2;
        java.util.concurrent.CopyOnWriteArrayList $r3;
        java.lang.Object $r4;

        r0 := @this: java.util.concurrent.CopyOnWriteArrayList$CowSubList;

        i0 := @parameter0: int;

        r1 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        $r3 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList this$0>;

        r2 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] access$300(java.util.concurrent.CopyOnWriteArrayList)>($r3);

        virtualinvoke r1.<java.util.concurrent.CopyOnWriteArrayList$Slice: void checkElementIndex(int)>(i0);

        virtualinvoke r1.<java.util.concurrent.CopyOnWriteArrayList$Slice: void checkConcurrentModification(java.lang.Object[])>(r2);

        $i1 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$200(java.util.concurrent.CopyOnWriteArrayList$Slice)>(r1);

        $i2 = i0 + $i1;

        $r4 = r2[$i2];

        return $r4;
    }

    public int indexOf(java.lang.Object)
    {
        java.util.concurrent.CopyOnWriteArrayList$CowSubList r0;
        java.lang.Object r1;
        int i0, i1, $i2, $i3, $i4;
        java.util.concurrent.CopyOnWriteArrayList$Slice r2;
        java.lang.Object[] r3;
        java.util.concurrent.CopyOnWriteArrayList $r4;

        r0 := @this: java.util.concurrent.CopyOnWriteArrayList$CowSubList;

        r1 := @parameter0: java.lang.Object;

        i0 = -1;

        r2 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        $r4 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList this$0>;

        r3 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] access$300(java.util.concurrent.CopyOnWriteArrayList)>($r4);

        virtualinvoke r2.<java.util.concurrent.CopyOnWriteArrayList$Slice: void checkConcurrentModification(java.lang.Object[])>(r3);

        $i2 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$200(java.util.concurrent.CopyOnWriteArrayList$Slice)>(r2);

        $i3 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$100(java.util.concurrent.CopyOnWriteArrayList$Slice)>(r2);

        i1 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>(r1, r3, $i2, $i3);

        if i1 == i0 goto label1;

        $i4 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$200(java.util.concurrent.CopyOnWriteArrayList$Slice)>(r2);

        i0 = i1 - $i4;

     label1:
        return i0;
    }

    public boolean isEmpty()
    {
        java.util.concurrent.CopyOnWriteArrayList$CowSubList r0;
        java.util.concurrent.CopyOnWriteArrayList$Slice r1;
        int $i0, $i1;

        r0 := @this: java.util.concurrent.CopyOnWriteArrayList$CowSubList;

        r1 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        $i0 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$200(java.util.concurrent.CopyOnWriteArrayList$Slice)>(r1);

        $i1 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$100(java.util.concurrent.CopyOnWriteArrayList$Slice)>(r1);

        if $i0 != $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.util.Iterator iterator()
    {
        java.util.concurrent.CopyOnWriteArrayList$CowSubList r0;
        java.util.ListIterator $r1;

        r0 := @this: java.util.concurrent.CopyOnWriteArrayList$CowSubList;

        $r1 = virtualinvoke r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.ListIterator listIterator(int)>(0);

        return $r1;
    }

    public int lastIndexOf(java.lang.Object)
    {
        java.util.concurrent.CopyOnWriteArrayList$CowSubList r0;
        java.lang.Object r1;
        int i0, i1, $i2, $i3, $i4;
        java.util.concurrent.CopyOnWriteArrayList$Slice r2;
        java.lang.Object[] r3;
        java.util.concurrent.CopyOnWriteArrayList $r4;

        r0 := @this: java.util.concurrent.CopyOnWriteArrayList$CowSubList;

        r1 := @parameter0: java.lang.Object;

        i0 = -1;

        r2 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        $r4 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList this$0>;

        r3 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] access$300(java.util.concurrent.CopyOnWriteArrayList)>($r4);

        virtualinvoke r2.<java.util.concurrent.CopyOnWriteArrayList$Slice: void checkConcurrentModification(java.lang.Object[])>(r3);

        $i2 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$200(java.util.concurrent.CopyOnWriteArrayList$Slice)>(r2);

        $i3 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$100(java.util.concurrent.CopyOnWriteArrayList$Slice)>(r2);

        i1 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList: int lastIndexOf(java.lang.Object,java.lang.Object[],int,int)>(r1, r3, $i2, $i3);

        if i1 == i0 goto label1;

        $i4 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$200(java.util.concurrent.CopyOnWriteArrayList$Slice)>(r2);

        i0 = i1 - $i4;

     label1:
        return i0;
    }

    public java.util.ListIterator listIterator()
    {
        java.util.concurrent.CopyOnWriteArrayList$CowSubList r0;
        java.util.ListIterator $r1;

        r0 := @this: java.util.concurrent.CopyOnWriteArrayList$CowSubList;

        $r1 = virtualinvoke r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.ListIterator listIterator(int)>(0);

        return $r1;
    }

    public java.util.ListIterator listIterator(int)
    {
        java.util.concurrent.CopyOnWriteArrayList$CowSubList r0;
        int i0, $i1, $i2, $i3, $i4;
        java.util.concurrent.CopyOnWriteArrayList$Slice r1;
        java.lang.Object[] r2;
        java.util.concurrent.CopyOnWriteArrayList$CowIterator r3, $r5;
        java.util.concurrent.CopyOnWriteArrayList $r4;

        r0 := @this: java.util.concurrent.CopyOnWriteArrayList$CowSubList;

        i0 := @parameter0: int;

        r1 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        $r4 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList this$0>;

        r2 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] access$300(java.util.concurrent.CopyOnWriteArrayList)>($r4);

        virtualinvoke r1.<java.util.concurrent.CopyOnWriteArrayList$Slice: void checkPositionIndex(int)>(i0);

        virtualinvoke r1.<java.util.concurrent.CopyOnWriteArrayList$Slice: void checkConcurrentModification(java.lang.Object[])>(r2);

        $r5 = new java.util.concurrent.CopyOnWriteArrayList$CowIterator;

        $i1 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$200(java.util.concurrent.CopyOnWriteArrayList$Slice)>(r1);

        $i2 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$100(java.util.concurrent.CopyOnWriteArrayList$Slice)>(r1);

        specialinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList$CowIterator: void <init>(java.lang.Object[],int,int)>(r2, $i1, $i2);

        r3 = $r5;

        $i3 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$200(java.util.concurrent.CopyOnWriteArrayList$Slice)>(r1);

        $i4 = i0 + $i3;

        staticinvoke <java.util.concurrent.CopyOnWriteArrayList$CowIterator: int access$002(java.util.concurrent.CopyOnWriteArrayList$CowIterator,int)>(r3, $i4);

        return r3;
    }

    public java.lang.Object remove(int)
    {
        java.util.concurrent.CopyOnWriteArrayList$CowSubList r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.util.concurrent.CopyOnWriteArrayList r1, $r5, $r9, $r12;
        java.lang.Throwable r2, $r15;
        java.lang.Object r3;
        java.util.concurrent.CopyOnWriteArrayList$Slice $r4, $r6, $r8, $r10, $r13, $r14;
        java.lang.Object[] $r7, $r11;

        r0 := @this: java.util.concurrent.CopyOnWriteArrayList$CowSubList;

        i0 := @parameter0: int;

        r1 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList this$0>;

        entermonitor r1;

     label1:
        $r4 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        virtualinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList$Slice: void checkElementIndex(int)>(i0);

        $r6 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        $r5 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList this$0>;

        $r7 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] access$300(java.util.concurrent.CopyOnWriteArrayList)>($r5);

        virtualinvoke $r6.<java.util.concurrent.CopyOnWriteArrayList$Slice: void checkConcurrentModification(java.lang.Object[])>($r7);

        $r9 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList this$0>;

        $r8 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        $i1 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$200(java.util.concurrent.CopyOnWriteArrayList$Slice)>($r8);

        $i2 = i0 + $i1;

        r3 = virtualinvoke $r9.<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object remove(int)>($i2);

        $r10 = new java.util.concurrent.CopyOnWriteArrayList$Slice;

        $r12 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList this$0>;

        $r11 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] access$300(java.util.concurrent.CopyOnWriteArrayList)>($r12);

        $r13 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        $i3 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$200(java.util.concurrent.CopyOnWriteArrayList$Slice)>($r13);

        $r14 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        $i5 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$100(java.util.concurrent.CopyOnWriteArrayList$Slice)>($r14);

        $i4 = -1 + $i5;

        specialinvoke $r10.<java.util.concurrent.CopyOnWriteArrayList$Slice: void <init>(java.lang.Object[],int,int)>($r11, $i3, $i4);

        r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice> = $r10;

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r15 := @caughtexception;

        r2 = $r15;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean remove(java.lang.Object)
    {
        java.util.concurrent.CopyOnWriteArrayList$CowSubList r0;
        java.lang.Object r1;
        java.util.concurrent.CopyOnWriteArrayList r2;
        java.lang.Throwable r3, $r5;
        int i0;

        r0 := @this: java.util.concurrent.CopyOnWriteArrayList$CowSubList;

        r1 := @parameter0: java.lang.Object;

        r2 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList this$0>;

        entermonitor r2;

     label1:
        i0 = virtualinvoke r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: int indexOf(java.lang.Object)>(r1);

     label2:
        if i0 != -1 goto label5;

     label3:
        exitmonitor r2;

     label4:
        return 0;

     label5:
        virtualinvoke r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.lang.Object remove(int)>(i0);

        exitmonitor r2;

     label6:
        return 1;

     label7:
        $r5 := @caughtexception;

        r3 = $r5;

     label8:
        exitmonitor r2;

     label9:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public boolean removeAll(java.util.Collection)
    {
        java.util.concurrent.CopyOnWriteArrayList$CowSubList r0;
        java.util.Collection r1;
        java.util.concurrent.CopyOnWriteArrayList r2, $r4, $r8, $r12;
        java.lang.Throwable r3, $r15;
        int i0, $i1, $i2, $i3, $i4, $i5;
        boolean z0;
        java.util.concurrent.CopyOnWriteArrayList$Slice $r5, $r7, $r9, $r10, $r13, $r14;
        java.lang.Object[] $r6, $r11;

        r0 := @this: java.util.concurrent.CopyOnWriteArrayList$CowSubList;

        r1 := @parameter0: java.util.Collection;

        r2 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList this$0>;

        entermonitor r2;

     label1:
        $r5 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        $r4 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList this$0>;

        $r6 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] access$300(java.util.concurrent.CopyOnWriteArrayList)>($r4);

        virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList$Slice: void checkConcurrentModification(java.lang.Object[])>($r6);

        $r8 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList this$0>;

        $r7 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        $i1 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$200(java.util.concurrent.CopyOnWriteArrayList$Slice)>($r7);

        $r9 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        $i2 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$100(java.util.concurrent.CopyOnWriteArrayList$Slice)>($r9);

        i0 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList: int access$600(java.util.concurrent.CopyOnWriteArrayList,java.util.Collection,boolean,int,int)>($r8, r1, 0, $i1, $i2);

        $r10 = new java.util.concurrent.CopyOnWriteArrayList$Slice;

        $r12 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList this$0>;

        $r11 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] access$300(java.util.concurrent.CopyOnWriteArrayList)>($r12);

        $r13 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        $i3 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$200(java.util.concurrent.CopyOnWriteArrayList$Slice)>($r13);

        $r14 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        $i4 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$100(java.util.concurrent.CopyOnWriteArrayList$Slice)>($r14);

        $i5 = $i4 - i0;

        specialinvoke $r10.<java.util.concurrent.CopyOnWriteArrayList$Slice: void <init>(java.lang.Object[],int,int)>($r11, $i3, $i5);

        r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice> = $r10;

     label2:
        z0 = 0;

        if i0 == 0 goto label3;

        z0 = 1;

     label3:
        exitmonitor r2;

     label4:
        return z0;

     label5:
        $r15 := @caughtexception;

        r3 = $r15;

     label6:
        exitmonitor r2;

     label7:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public boolean retainAll(java.util.Collection)
    {
        java.util.concurrent.CopyOnWriteArrayList$CowSubList r0;
        java.util.Collection r1;
        boolean z0;
        java.util.concurrent.CopyOnWriteArrayList r2, $r4, $r8, $r12;
        java.lang.Throwable r3, $r15;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.util.concurrent.CopyOnWriteArrayList$Slice $r5, $r7, $r9, $r10, $r13, $r14;
        java.lang.Object[] $r6, $r11;

        r0 := @this: java.util.concurrent.CopyOnWriteArrayList$CowSubList;

        r1 := @parameter0: java.util.Collection;

        z0 = 1;

        r2 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList this$0>;

        entermonitor r2;

     label1:
        $r5 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        $r4 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList this$0>;

        $r6 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] access$300(java.util.concurrent.CopyOnWriteArrayList)>($r4);

        virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList$Slice: void checkConcurrentModification(java.lang.Object[])>($r6);

        $r8 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList this$0>;

        $r7 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        $i1 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$200(java.util.concurrent.CopyOnWriteArrayList$Slice)>($r7);

        $r9 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        $i2 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$100(java.util.concurrent.CopyOnWriteArrayList$Slice)>($r9);

        i0 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList: int access$600(java.util.concurrent.CopyOnWriteArrayList,java.util.Collection,boolean,int,int)>($r8, r1, 1, $i1, $i2);

        $r10 = new java.util.concurrent.CopyOnWriteArrayList$Slice;

        $r12 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList this$0>;

        $r11 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] access$300(java.util.concurrent.CopyOnWriteArrayList)>($r12);

        $r13 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        $i3 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$200(java.util.concurrent.CopyOnWriteArrayList$Slice)>($r13);

        $r14 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        $i4 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$100(java.util.concurrent.CopyOnWriteArrayList$Slice)>($r14);

        $i5 = $i4 - i0;

        specialinvoke $r10.<java.util.concurrent.CopyOnWriteArrayList$Slice: void <init>(java.lang.Object[],int,int)>($r11, $i3, $i5);

        r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice> = $r10;

     label2:
        if i0 == 0 goto label8;

     label3:
        exitmonitor r2;

     label4:
        return z0;

     label5:
        $r15 := @caughtexception;

        r3 = $r15;

     label6:
        exitmonitor r2;

     label7:
        throw r3;

     label8:
        z0 = 0;

        goto label3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public java.lang.Object set(int, java.lang.Object)
    {
        java.util.concurrent.CopyOnWriteArrayList$CowSubList r0;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.Object r1, r4;
        java.util.concurrent.CopyOnWriteArrayList r2, $r6, $r10, $r11;
        java.lang.Throwable r3, $r16;
        java.util.concurrent.CopyOnWriteArrayList$Slice $r5, $r7, $r9, $r12, $r13, $r15;
        java.lang.Object[] $r8, $r14;

        r0 := @this: java.util.concurrent.CopyOnWriteArrayList$CowSubList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        r2 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList this$0>;

        entermonitor r2;

     label1:
        $r5 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList$Slice: void checkElementIndex(int)>(i0);

        $r7 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        $r6 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList this$0>;

        $r8 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] access$300(java.util.concurrent.CopyOnWriteArrayList)>($r6);

        virtualinvoke $r7.<java.util.concurrent.CopyOnWriteArrayList$Slice: void checkConcurrentModification(java.lang.Object[])>($r8);

        $r10 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList this$0>;

        $r9 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        $i1 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$200(java.util.concurrent.CopyOnWriteArrayList$Slice)>($r9);

        $i2 = i0 + $i1;

        r4 = virtualinvoke $r10.<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object set(int,java.lang.Object)>($i2, r1);

        $r12 = new java.util.concurrent.CopyOnWriteArrayList$Slice;

        $r11 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList this$0>;

        $r14 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] access$300(java.util.concurrent.CopyOnWriteArrayList)>($r11);

        $r13 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        $i3 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$200(java.util.concurrent.CopyOnWriteArrayList$Slice)>($r13);

        $r15 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        $i4 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$100(java.util.concurrent.CopyOnWriteArrayList$Slice)>($r15);

        specialinvoke $r12.<java.util.concurrent.CopyOnWriteArrayList$Slice: void <init>(java.lang.Object[],int,int)>($r14, $i3, $i4);

        r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice> = $r12;

        exitmonitor r2;

     label2:
        return r4;

     label3:
        $r16 := @caughtexception;

        r3 = $r16;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int size()
    {
        java.util.concurrent.CopyOnWriteArrayList$CowSubList r0;
        java.util.concurrent.CopyOnWriteArrayList$Slice r1;
        int $i0, $i1, $i2;

        r0 := @this: java.util.concurrent.CopyOnWriteArrayList$CowSubList;

        r1 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        $i0 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$100(java.util.concurrent.CopyOnWriteArrayList$Slice)>(r1);

        $i1 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$200(java.util.concurrent.CopyOnWriteArrayList$Slice)>(r1);

        $i2 = $i0 - $i1;

        return $i2;
    }

    public java.util.List subList(int, int)
    {
        java.util.concurrent.CopyOnWriteArrayList$CowSubList r0, $r11;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.util.concurrent.CopyOnWriteArrayList$Slice r1;
        java.lang.IndexOutOfBoundsException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        java.lang.String $r10;
        java.lang.Object[] $r12;
        java.util.concurrent.CopyOnWriteArrayList $r13;

        r0 := @this: java.util.concurrent.CopyOnWriteArrayList$CowSubList;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList$Slice slice>;

        if i0 < 0 goto label1;

        if i0 > i1 goto label1;

        $i3 = virtualinvoke r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: int size()>();

        if i1 <= $i3 goto label2;

     label1:
        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("from=");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", to=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", list size=");

        $i2 = virtualinvoke r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: int size()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r10);

        throw $r2;

     label2:
        $r11 = new java.util.concurrent.CopyOnWriteArrayList$CowSubList;

        $r13 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: java.util.concurrent.CopyOnWriteArrayList this$0>;

        $r12 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: java.lang.Object[] access$400(java.util.concurrent.CopyOnWriteArrayList$Slice)>(r1);

        $i5 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$200(java.util.concurrent.CopyOnWriteArrayList$Slice)>(r1);

        $i4 = i0 + $i5;

        $i7 = staticinvoke <java.util.concurrent.CopyOnWriteArrayList$Slice: int access$200(java.util.concurrent.CopyOnWriteArrayList$Slice)>(r1);

        $i6 = i1 + $i7;

        specialinvoke $r11.<java.util.concurrent.CopyOnWriteArrayList$CowSubList: void <init>(java.util.concurrent.CopyOnWriteArrayList,java.lang.Object[],int,int)>($r13, $r12, $i4, $i6);

        return $r11;
    }
}
