public class com.android.internal.os.SamplingProfilerIntegration extends java.lang.Object
{
    public static final java.lang.String SNAPSHOT_DIR;
    private static final java.lang.String TAG;
    private static final boolean enabled;
    private static final java.util.concurrent.atomic.AtomicBoolean pending;
    private static dalvik.system.profiler.SamplingProfiler samplingProfiler;
    private static final int samplingProfilerDepth;
    private static final int samplingProfilerMilliseconds;
    private static final java.util.concurrent.Executor snapshotWriter;
    private static long startMillis;

    static void <clinit>()
    {
        java.io.File r0, $r2;
        java.util.concurrent.atomic.AtomicBoolean $r1;
        int $i0, $i1, $i2, $i5;
        boolean $z3;
        com.android.internal.os.SamplingProfilerIntegration$1 $r3;
        java.util.concurrent.ExecutorService $r4;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.String $r7;

        <com.android.internal.os.SamplingProfilerIntegration: java.lang.String TAG> = "SamplingProfilerIntegration";

        <com.android.internal.os.SamplingProfilerIntegration: java.lang.String SNAPSHOT_DIR> = "/data/snapshots";

        $r1 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        <com.android.internal.os.SamplingProfilerIntegration: java.util.concurrent.atomic.AtomicBoolean pending> = $r1;

        $i0 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("persist.sys.profiler_ms", 0);

        <com.android.internal.os.SamplingProfilerIntegration: int samplingProfilerMilliseconds> = $i0;

        $i1 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("persist.sys.profiler_depth", 4);

        <com.android.internal.os.SamplingProfilerIntegration: int samplingProfilerDepth> = $i1;

        $i2 = <com.android.internal.os.SamplingProfilerIntegration: int samplingProfilerMilliseconds>;

        if $i2 <= 0 goto label2;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>("/data/snapshots");

        r0 = $r2;

        virtualinvoke r0.<java.io.File: boolean mkdirs()>();

        virtualinvoke r0.<java.io.File: boolean setWritable(boolean,boolean)>(1, 0);

        virtualinvoke r0.<java.io.File: boolean setExecutable(boolean,boolean)>(1, 0);

        $z3 = virtualinvoke r0.<java.io.File: boolean isDirectory()>();

        if $z3 == 0 goto label1;

        $r3 = new com.android.internal.os.SamplingProfilerIntegration$1;

        specialinvoke $r3.<com.android.internal.os.SamplingProfilerIntegration$1: void <init>()>();

        $r4 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor(java.util.concurrent.ThreadFactory)>($r3);

        <com.android.internal.os.SamplingProfilerIntegration: java.util.concurrent.Executor snapshotWriter> = $r4;

        <com.android.internal.os.SamplingProfilerIntegration: boolean enabled> = 1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Profiling enabled. Sampling interval ms: ");

        $i5 = <com.android.internal.os.SamplingProfilerIntegration: int samplingProfilerMilliseconds>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("SamplingProfilerIntegration", $r7);

        return;

     label1:
        <com.android.internal.os.SamplingProfilerIntegration: java.util.concurrent.Executor snapshotWriter> = null;

        <com.android.internal.os.SamplingProfilerIntegration: boolean enabled> = 1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("SamplingProfilerIntegration", "Profiling setup failed. Could not create /data/snapshots");

        return;

     label2:
        <com.android.internal.os.SamplingProfilerIntegration: java.util.concurrent.Executor snapshotWriter> = null;

        <com.android.internal.os.SamplingProfilerIntegration: boolean enabled> = 0;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("SamplingProfilerIntegration", "Profiling disabled.");

        return;
    }

    public void <init>()
    {
        com.android.internal.os.SamplingProfilerIntegration r0;

        r0 := @this: com.android.internal.os.SamplingProfilerIntegration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void access$000(java.lang.String, android.content.pm.PackageInfo)
    {
        java.lang.String r0;
        android.content.pm.PackageInfo r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.content.pm.PackageInfo;

        staticinvoke <com.android.internal.os.SamplingProfilerIntegration: void writeSnapshotFile(java.lang.String,android.content.pm.PackageInfo)>(r0, r1);

        return;
    }

    static java.util.concurrent.atomic.AtomicBoolean access$100()
    {
        java.util.concurrent.atomic.AtomicBoolean $r0;

        $r0 = <com.android.internal.os.SamplingProfilerIntegration: java.util.concurrent.atomic.AtomicBoolean pending>;

        return $r0;
    }

    private static void generateSnapshotHeader(java.lang.String, android.content.pm.PackageInfo, java.io.PrintStream)
    {
        java.lang.String r0, $r6, $r9, $r11, $r14, $r17, $r19;
        android.content.pm.PackageInfo r1;
        java.io.PrintStream r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r7, $r8, $r10, $r12, $r13, $r15, $r16, $r18, $r20;
        int $i0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.content.pm.PackageInfo;

        r2 := @parameter2: java.io.PrintStream;

        virtualinvoke r2.<java.io.PrintStream: void println(java.lang.String)>("Version: 3");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintStream: void println(java.lang.String)>($r6);

        if r1 == null goto label1;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package: ");

        $r14 = r1.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintStream: void println(java.lang.String)>($r17);

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package-Version: ");

        $i0 = r1.<android.content.pm.PackageInfo: int versionCode>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintStream: void println(java.lang.String)>($r19);

     label1:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Build: ");

        $r9 = <android.os.Build: java.lang.String FINGERPRINT>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintStream: void println(java.lang.String)>($r11);

        virtualinvoke r2.<java.io.PrintStream: void println()>();

        return;
    }

    public static boolean isEnabled()
    {
        boolean $z0;

        $z0 = <com.android.internal.os.SamplingProfilerIntegration: boolean enabled>;

        return $z0;
    }

    public static void start()
    {
        dalvik.system.profiler.SamplingProfiler$ThreadSet r0;
        boolean $z0;
        dalvik.system.profiler.SamplingProfiler $r1, $r4, $r5;
        java.lang.Thread $r2;
        java.lang.ThreadGroup $r3;
        int $i0, $i1;
        long $l2, $l3;
        java.lang.StringBuilder $r6, $r7, $r10;
        java.util.Date $r8;
        java.lang.String $r9;

        $z0 = <com.android.internal.os.SamplingProfilerIntegration: boolean enabled>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = <com.android.internal.os.SamplingProfilerIntegration: dalvik.system.profiler.SamplingProfiler samplingProfiler>;

        if $r1 == null goto label2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SamplingProfilerIntegration already started at ");

        $r8 = new java.util.Date;

        $l3 = <com.android.internal.os.SamplingProfilerIntegration: long startMillis>;

        specialinvoke $r8.<java.util.Date: void <init>(long)>($l3);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SamplingProfilerIntegration", $r9);

        return;

     label2:
        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r3 = virtualinvoke $r2.<java.lang.Thread: java.lang.ThreadGroup getThreadGroup()>();

        r0 = staticinvoke <dalvik.system.profiler.SamplingProfiler: dalvik.system.profiler.SamplingProfiler$ThreadSet newThreadGroupThreadSet(java.lang.ThreadGroup)>($r3);

        $r4 = new dalvik.system.profiler.SamplingProfiler;

        $i0 = <com.android.internal.os.SamplingProfilerIntegration: int samplingProfilerDepth>;

        specialinvoke $r4.<dalvik.system.profiler.SamplingProfiler: void <init>(int,dalvik.system.profiler.SamplingProfiler$ThreadSet)>($i0, r0);

        <com.android.internal.os.SamplingProfilerIntegration: dalvik.system.profiler.SamplingProfiler samplingProfiler> = $r4;

        $r5 = <com.android.internal.os.SamplingProfilerIntegration: dalvik.system.profiler.SamplingProfiler samplingProfiler>;

        $i1 = <com.android.internal.os.SamplingProfilerIntegration: int samplingProfilerMilliseconds>;

        virtualinvoke $r5.<dalvik.system.profiler.SamplingProfiler: void start(int)>($i1);

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        <com.android.internal.os.SamplingProfilerIntegration: long startMillis> = $l2;

        return;
    }

    public static void writeSnapshot(java.lang.String, android.content.pm.PackageInfo)
    {
        java.lang.String r0;
        android.content.pm.PackageInfo r1;
        boolean $z0, $z1;
        dalvik.system.profiler.SamplingProfiler $r2;
        java.util.concurrent.atomic.AtomicBoolean $r3;
        com.android.internal.os.SamplingProfilerIntegration$2 $r4;
        java.util.concurrent.Executor $r5;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.content.pm.PackageInfo;

        $z0 = <com.android.internal.os.SamplingProfilerIntegration: boolean enabled>;

        if $z0 != 0 goto label2;

     label1:
        return;

     label2:
        $r2 = <com.android.internal.os.SamplingProfilerIntegration: dalvik.system.profiler.SamplingProfiler samplingProfiler>;

        if $r2 != null goto label3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SamplingProfilerIntegration", "SamplingProfilerIntegration is not started");

        return;

     label3:
        $r3 = <com.android.internal.os.SamplingProfilerIntegration: java.util.concurrent.atomic.AtomicBoolean pending>;

        $z1 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);

        if $z1 == 0 goto label1;

        $r5 = <com.android.internal.os.SamplingProfilerIntegration: java.util.concurrent.Executor snapshotWriter>;

        $r4 = new com.android.internal.os.SamplingProfilerIntegration$2;

        specialinvoke $r4.<com.android.internal.os.SamplingProfilerIntegration$2: void <init>(java.lang.String,android.content.pm.PackageInfo)>(r0, r1);

        interfaceinvoke $r5.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r4);

        return;
    }

    private static void writeSnapshotFile(java.lang.String, android.content.pm.PackageInfo)
    {
        java.lang.String r0, r2, r3, $r26, $r34;
        android.content.pm.PackageInfo r1;
        long l0, l1, $l2, $l3;
        java.io.BufferedOutputStream r4, r5, $r16;
        java.io.PrintStream r6, $r17;
        java.lang.Throwable r7, $r33, $r38;
        java.io.IOException r8, $r30, $r32, $r37;
        boolean $z0, $z1;
        dalvik.system.profiler.SamplingProfiler $r9, $r19, $r29;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r14, $r15, $r22, $r23, $r24, $r25, $r27, $r28, $r31, $r35, $r36;
        java.io.FileOutputStream $r18;
        dalvik.system.profiler.HprofData $r20;
        java.io.File $r21;
        int $i5;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.content.pm.PackageInfo;

        $z0 = <com.android.internal.os.SamplingProfilerIntegration: boolean enabled>;

        if $z0 != 0 goto label01;

        return;

     label01:
        $r9 = <com.android.internal.os.SamplingProfilerIntegration: dalvik.system.profiler.SamplingProfiler samplingProfiler>;

        virtualinvoke $r9.<dalvik.system.profiler.SamplingProfiler: void stop()>();

        r2 = virtualinvoke r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(":", ".");

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/data/snapshots/");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $l2 = <com.android.internal.os.SamplingProfilerIntegration: long startMillis>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".snapshot");

        r3 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r4 = null;

     label02:
        $r16 = new java.io.BufferedOutputStream;

        $r18 = new java.io.FileOutputStream;

        specialinvoke $r18.<java.io.FileOutputStream: void <init>(java.lang.String)>(r3);

        specialinvoke $r16.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r18);

        r5 = $r16;

     label03:
        $r17 = new java.io.PrintStream;

        specialinvoke $r17.<java.io.PrintStream: void <init>(java.io.OutputStream)>(r5);

        r6 = $r17;

        staticinvoke <com.android.internal.os.SamplingProfilerIntegration: void generateSnapshotHeader(java.lang.String,android.content.pm.PackageInfo,java.io.PrintStream)>(r2, r1, r6);

        $z1 = virtualinvoke r6.<java.io.PrintStream: boolean checkError()>();

        if $z1 == 0 goto label07;

        $r30 = new java.io.IOException;

        specialinvoke $r30.<java.io.IOException: void <init>()>();

        throw $r30;

     label04:
        $r32 := @caughtexception;

        r8 = $r32;

        r4 = r5;

     label05:
        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error writing snapshot to ");

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SamplingProfilerIntegration", $r34, r8);

     label06:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        return;

     label07:
        $r19 = <com.android.internal.os.SamplingProfilerIntegration: dalvik.system.profiler.SamplingProfiler samplingProfiler>;

        $r20 = virtualinvoke $r19.<dalvik.system.profiler.SamplingProfiler: dalvik.system.profiler.HprofData getHprofData()>();

        staticinvoke <dalvik.system.profiler.BinaryHprofWriter: void write(dalvik.system.profiler.HprofData,java.io.OutputStream)>($r20, r5);

     label08:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r5);

        $r21 = new java.io.File;

        specialinvoke $r21.<java.io.File: void <init>(java.lang.String)>(r3);

        virtualinvoke $r21.<java.io.File: boolean setReadable(boolean,boolean)>(1, 0);

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l1 = $l3 - l0;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wrote snapshot ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r25 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms.");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("SamplingProfilerIntegration", $r26);

        $r29 = <com.android.internal.os.SamplingProfilerIntegration: dalvik.system.profiler.SamplingProfiler samplingProfiler>;

        $i5 = <com.android.internal.os.SamplingProfilerIntegration: int samplingProfilerMilliseconds>;

        virtualinvoke $r29.<dalvik.system.profiler.SamplingProfiler: void start(int)>($i5);

        return;

     label09:
        $r33 := @caughtexception;

        r7 = $r33;

     label10:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        throw r7;

     label11:
        $r38 := @caughtexception;

        r7 = $r38;

        r4 = r5;

        goto label10;

     label12:
        $r37 := @caughtexception;

        r8 = $r37;

        r4 = null;

        goto label05;

        catch java.io.IOException from label02 to label03 with label12;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.io.IOException from label03 to label04 with label04;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.io.IOException from label07 to label08 with label04;
        catch java.lang.Throwable from label07 to label08 with label11;
    }

    public static void writeZygoteSnapshot()
    {
        boolean $z0;
        dalvik.system.profiler.SamplingProfiler $r0;

        $z0 = <com.android.internal.os.SamplingProfilerIntegration: boolean enabled>;

        if $z0 != 0 goto label1;

        return;

     label1:
        staticinvoke <com.android.internal.os.SamplingProfilerIntegration: void writeSnapshotFile(java.lang.String,android.content.pm.PackageInfo)>("zygote", null);

        $r0 = <com.android.internal.os.SamplingProfilerIntegration: dalvik.system.profiler.SamplingProfiler samplingProfiler>;

        virtualinvoke $r0.<dalvik.system.profiler.SamplingProfiler: void shutdown()>();

        <com.android.internal.os.SamplingProfilerIntegration: dalvik.system.profiler.SamplingProfiler samplingProfiler> = null;

        <com.android.internal.os.SamplingProfilerIntegration: long startMillis> = 0L;

        return;
    }
}
