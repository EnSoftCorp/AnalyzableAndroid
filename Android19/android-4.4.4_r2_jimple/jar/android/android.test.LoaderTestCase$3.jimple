class android.test.LoaderTestCase$3 extends android.os.Handler
{
    final android.test.LoaderTestCase this$0;
    final android.content.Loader$OnLoadCompleteListener val$listener;
    final android.content.Loader val$loader;

    void <init>(android.test.LoaderTestCase, android.os.Looper, android.content.Loader, android.content.Loader$OnLoadCompleteListener)
    {
        android.test.LoaderTestCase$3 r0;
        android.test.LoaderTestCase r1;
        android.os.Looper r2;
        android.content.Loader r3;
        android.content.Loader$OnLoadCompleteListener r4;

        r0 := @this: android.test.LoaderTestCase$3;

        r1 := @parameter0: android.test.LoaderTestCase;

        r2 := @parameter1: android.os.Looper;

        r3 := @parameter2: android.content.Loader;

        r4 := @parameter3: android.content.Loader$OnLoadCompleteListener;

        r0.<android.test.LoaderTestCase$3: android.test.LoaderTestCase this$0> = r1;

        r0.<android.test.LoaderTestCase$3: android.content.Loader val$loader> = r3;

        r0.<android.test.LoaderTestCase$3: android.content.Loader$OnLoadCompleteListener val$listener> = r4;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>(r2);

        return;
    }

    public void handleMessage(android.os.Message)
    {
        android.test.LoaderTestCase$3 r0;
        android.os.Message r1;
        android.content.Loader$OnLoadCompleteListener $r2;
        android.content.Loader $r3, $r4;

        r0 := @this: android.test.LoaderTestCase$3;

        r1 := @parameter0: android.os.Message;

        $r3 = r0.<android.test.LoaderTestCase$3: android.content.Loader val$loader>;

        $r2 = r0.<android.test.LoaderTestCase$3: android.content.Loader$OnLoadCompleteListener val$listener>;

        virtualinvoke $r3.<android.content.Loader: void registerListener(int,android.content.Loader$OnLoadCompleteListener)>(0, $r2);

        $r4 = r0.<android.test.LoaderTestCase$3: android.content.Loader val$loader>;

        virtualinvoke $r4.<android.content.Loader: void startLoading()>();

        return;
    }
}
