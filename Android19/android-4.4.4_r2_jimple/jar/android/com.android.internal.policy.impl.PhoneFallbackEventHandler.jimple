public class com.android.internal.policy.impl.PhoneFallbackEventHandler extends java.lang.Object implements android.view.FallbackEventHandler
{
    private static final boolean DEBUG;
    private static java.lang.String TAG;
    android.media.AudioManager mAudioManager;
    android.content.Context mContext;
    android.app.KeyguardManager mKeyguardManager;
    android.app.SearchManager mSearchManager;
    android.telephony.TelephonyManager mTelephonyManager;
    android.view.View mView;

    static void <clinit>()
    {
        <com.android.internal.policy.impl.PhoneFallbackEventHandler: java.lang.String TAG> = "PhoneFallbackEventHandler";

        return;
    }

    public void <init>(android.content.Context)
    {
        com.android.internal.policy.impl.PhoneFallbackEventHandler r0;
        android.content.Context r1;

        r0 := @this: com.android.internal.policy.impl.PhoneFallbackEventHandler;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.content.Context mContext> = r1;

        return;
    }

    private void handleMediaKeyEvent(android.view.KeyEvent)
    {
        com.android.internal.policy.impl.PhoneFallbackEventHandler r0;
        android.view.KeyEvent r1;
        android.media.IAudioService r2;
        android.os.RemoteException r3, $r6;
        android.os.IBinder $r4;
        java.lang.String $r5, $r8, $r11;
        java.lang.StringBuilder $r7, $r9, $r10;

        r0 := @this: com.android.internal.policy.impl.PhoneFallbackEventHandler;

        r1 := @parameter0: android.view.KeyEvent;

        $r4 = staticinvoke <android.os.ServiceManager: android.os.IBinder checkService(java.lang.String)>("audio");

        r2 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService asInterface(android.os.IBinder)>($r4);

        if r2 == null goto label4;

     label1:
        interfaceinvoke r2.<android.media.IAudioService: void dispatchMediaKeyEvent(android.view.KeyEvent)>(r1);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        $r8 = <com.android.internal.policy.impl.PhoneFallbackEventHandler: java.lang.String TAG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dispatchMediaKeyEvent threw exception ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r8, $r11);

        return;

     label4:
        $r5 = <com.android.internal.policy.impl.PhoneFallbackEventHandler: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r5, "Unable to find IAudioService for media key event.");

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        com.android.internal.policy.impl.PhoneFallbackEventHandler r0;
        android.view.KeyEvent r1;
        int i0, i1;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.policy.impl.PhoneFallbackEventHandler;

        r1 := @parameter0: android.view.KeyEvent;

        i0 = virtualinvoke r1.<android.view.KeyEvent: int getAction()>();

        i1 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        if i0 != 0 goto label1;

        $z1 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: boolean onKeyDown(int,android.view.KeyEvent)>(i1, r1);

        return $z1;

     label1:
        $z0 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: boolean onKeyUp(int,android.view.KeyEvent)>(i1, r1);

        return $z0;
    }

    android.media.AudioManager getAudioManager()
    {
        com.android.internal.policy.impl.PhoneFallbackEventHandler r0;
        android.media.AudioManager $r1, $r2, $r5;
        android.content.Context $r3;
        java.lang.Object $r4;

        r0 := @this: com.android.internal.policy.impl.PhoneFallbackEventHandler;

        $r1 = r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.media.AudioManager mAudioManager>;

        if $r1 != null goto label1;

        $r3 = r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("audio");

        $r5 = (android.media.AudioManager) $r4;

        r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.media.AudioManager mAudioManager> = $r5;

     label1:
        $r2 = r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.media.AudioManager mAudioManager>;

        return $r2;
    }

    android.app.KeyguardManager getKeyguardManager()
    {
        com.android.internal.policy.impl.PhoneFallbackEventHandler r0;
        android.app.KeyguardManager $r1, $r2, $r5;
        android.content.Context $r3;
        java.lang.Object $r4;

        r0 := @this: com.android.internal.policy.impl.PhoneFallbackEventHandler;

        $r1 = r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.app.KeyguardManager mKeyguardManager>;

        if $r1 != null goto label1;

        $r3 = r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("keyguard");

        $r5 = (android.app.KeyguardManager) $r4;

        r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.app.KeyguardManager mKeyguardManager> = $r5;

     label1:
        $r2 = r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.app.KeyguardManager mKeyguardManager>;

        return $r2;
    }

    android.app.SearchManager getSearchManager()
    {
        com.android.internal.policy.impl.PhoneFallbackEventHandler r0;
        android.app.SearchManager $r1, $r2, $r5;
        android.content.Context $r3;
        java.lang.Object $r4;

        r0 := @this: com.android.internal.policy.impl.PhoneFallbackEventHandler;

        $r1 = r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.app.SearchManager mSearchManager>;

        if $r1 != null goto label1;

        $r3 = r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("search");

        $r5 = (android.app.SearchManager) $r4;

        r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.app.SearchManager mSearchManager> = $r5;

     label1:
        $r2 = r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.app.SearchManager mSearchManager>;

        return $r2;
    }

    android.telephony.TelephonyManager getTelephonyManager()
    {
        com.android.internal.policy.impl.PhoneFallbackEventHandler r0;
        android.telephony.TelephonyManager $r1, $r2, $r5;
        android.content.Context $r3;
        java.lang.Object $r4;

        r0 := @this: com.android.internal.policy.impl.PhoneFallbackEventHandler;

        $r1 = r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.telephony.TelephonyManager mTelephonyManager>;

        if $r1 != null goto label1;

        $r3 = r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r5 = (android.telephony.TelephonyManager) $r4;

        r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.telephony.TelephonyManager mTelephonyManager> = $r5;

     label1:
        $r2 = r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.telephony.TelephonyManager mTelephonyManager>;

        return $r2;
    }

    boolean onKeyDown(int, android.view.KeyEvent)
    {
        com.android.internal.policy.impl.PhoneFallbackEventHandler r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.view.KeyEvent r1;
        android.view.KeyEvent$DispatcherState r2;
        android.content.res.Configuration r3;
        android.content.Intent r4, r6, r7, $r14, $r20, $r27;
        android.view.View $r9, $r15, $r21, $r28;
        android.telephony.TelephonyManager $r10;
        boolean $z0, $z1, $z2, $z4, $z5, $z7, $z8, $z9, $z11;
        android.app.KeyguardManager $r11, $r19, $r26;
        android.content.Context $r12, $r17, $r22, $r31;
        android.content.res.Resources $r13;
        android.app.SearchManager $r18;
        android.media.AudioManager $r23;
        android.os.UserHandle $r25;
        android.content.ActivityNotFoundException $r29, $r30;

        r0 := @this: com.android.internal.policy.impl.PhoneFallbackEventHandler;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        $r9 = r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.view.View mView>;

        r2 = virtualinvoke $r9.<android.view.View: android.view.KeyEvent$DispatcherState getKeyDispatcherState()>();

        lookupswitch(i0)
        {
            case 5: goto label05;
            case 24: goto label02;
            case 25: goto label02;
            case 27: goto label11;
            case 79: goto label04;
            case 84: goto label14;
            case 85: goto label03;
            case 86: goto label04;
            case 87: goto label04;
            case 88: goto label04;
            case 89: goto label04;
            case 90: goto label04;
            case 91: goto label04;
            case 126: goto label03;
            case 127: goto label03;
            case 130: goto label04;
            case 164: goto label02;
            case 222: goto label04;
            default: goto label01;
        };

     label01:
        return 0;

     label02:
        $r23 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.media.AudioManager getAudioManager()>();

        virtualinvoke $r23.<android.media.AudioManager: void handleKeyDown(android.view.KeyEvent,int)>(r1, -2147483648);

        return 1;

     label03:
        $r10 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.telephony.TelephonyManager getTelephonyManager()>();

        $i1 = virtualinvoke $r10.<android.telephony.TelephonyManager: int getCallState()>();

        if $i1 == 0 goto label04;

        return 1;

     label04:
        specialinvoke r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: void handleMediaKeyEvent(android.view.KeyEvent)>(r1);

        return 1;

     label05:
        $r26 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.app.KeyguardManager getKeyguardManager()>();

        $z9 = virtualinvoke $r26.<android.app.KeyguardManager: boolean inKeyguardRestrictedInputMode()>();

        if $z9 != 0 goto label01;

        if r2 == null goto label01;

        $i6 = virtualinvoke r1.<android.view.KeyEvent: int getRepeatCount()>();

        if $i6 != 0 goto label07;

        virtualinvoke r2.<android.view.KeyEvent$DispatcherState: void startTracking(android.view.KeyEvent,java.lang.Object)>(r1, r0);

     label06:
        return 1;

     label07:
        $z8 = virtualinvoke r1.<android.view.KeyEvent: boolean isLongPress()>();

        if $z8 == 0 goto label06;

        $z11 = virtualinvoke r2.<android.view.KeyEvent$DispatcherState: boolean isTracking(android.view.KeyEvent)>(r1);

        if $z11 == 0 goto label06;

        virtualinvoke r2.<android.view.KeyEvent$DispatcherState: void performedLongPress(android.view.KeyEvent)>(r1);

        $r28 = r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.view.View mView>;

        virtualinvoke $r28.<android.view.View: boolean performHapticFeedback(int)>(0);

        $r27 = new android.content.Intent;

        specialinvoke $r27.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.VOICE_COMMAND");

        r7 = $r27;

        virtualinvoke r7.<android.content.Intent: android.content.Intent setFlags(int)>(268435456);

     label08:
        virtualinvoke r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: void sendCloseSystemWindows()>();

        $r31 = r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.content.Context mContext>;

        virtualinvoke $r31.<android.content.Context: void startActivity(android.content.Intent)>(r7);

     label09:
        goto label06;

     label10:
        $r30 := @caughtexception;

        virtualinvoke r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: void startCallActivity()>();

        goto label06;

     label11:
        $r19 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.app.KeyguardManager getKeyguardManager()>();

        $z5 = virtualinvoke $r19.<android.app.KeyguardManager: boolean inKeyguardRestrictedInputMode()>();

        if $z5 != 0 goto label01;

        if r2 == null goto label01;

        $i5 = virtualinvoke r1.<android.view.KeyEvent: int getRepeatCount()>();

        if $i5 != 0 goto label13;

        virtualinvoke r2.<android.view.KeyEvent$DispatcherState: void startTracking(android.view.KeyEvent,java.lang.Object)>(r1, r0);

     label12:
        return 1;

     label13:
        $z4 = virtualinvoke r1.<android.view.KeyEvent: boolean isLongPress()>();

        if $z4 == 0 goto label12;

        $z7 = virtualinvoke r2.<android.view.KeyEvent$DispatcherState: boolean isTracking(android.view.KeyEvent)>(r1);

        if $z7 == 0 goto label12;

        virtualinvoke r2.<android.view.KeyEvent$DispatcherState: void performedLongPress(android.view.KeyEvent)>(r1);

        $r21 = r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.view.View mView>;

        virtualinvoke $r21.<android.view.View: boolean performHapticFeedback(int)>(0);

        virtualinvoke r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: void sendCloseSystemWindows()>();

        $r20 = new android.content.Intent;

        specialinvoke $r20.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.CAMERA_BUTTON", null);

        r6 = $r20;

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.KEY_EVENT", r1);

        $r22 = r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.content.Context mContext>;

        $r25 = <android.os.UserHandle: android.os.UserHandle CURRENT_OR_SELF>;

        virtualinvoke $r22.<android.content.Context: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>(r6, $r25, null, null, null, 0, null, null);

        goto label12;

     label14:
        $r11 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.app.KeyguardManager getKeyguardManager()>();

        $z0 = virtualinvoke $r11.<android.app.KeyguardManager: boolean inKeyguardRestrictedInputMode()>();

        if $z0 != 0 goto label01;

        if r2 == null goto label01;

        $i2 = virtualinvoke r1.<android.view.KeyEvent: int getRepeatCount()>();

        if $i2 != 0 goto label15;

        virtualinvoke r2.<android.view.KeyEvent$DispatcherState: void startTracking(android.view.KeyEvent,java.lang.Object)>(r1, r0);

        return 0;

     label15:
        $z1 = virtualinvoke r1.<android.view.KeyEvent: boolean isLongPress()>();

        if $z1 == 0 goto label01;

        $z2 = virtualinvoke r2.<android.view.KeyEvent$DispatcherState: boolean isTracking(android.view.KeyEvent)>(r1);

        if $z2 == 0 goto label01;

        $r12 = r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.content.Context mContext>;

        $r13 = virtualinvoke $r12.<android.content.Context: android.content.res.Resources getResources()>();

        r3 = virtualinvoke $r13.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i3 = r3.<android.content.res.Configuration: int keyboard>;

        if $i3 == 1 goto label16;

        $i4 = r3.<android.content.res.Configuration: int hardKeyboardHidden>;

        if $i4 != 2 goto label01;

     label16:
        $r14 = new android.content.Intent;

        specialinvoke $r14.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.SEARCH_LONG_PRESS");

        r4 = $r14;

        virtualinvoke r4.<android.content.Intent: android.content.Intent setFlags(int)>(268435456);

     label17:
        $r15 = r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.view.View mView>;

        virtualinvoke $r15.<android.view.View: boolean performHapticFeedback(int)>(0);

        virtualinvoke r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: void sendCloseSystemWindows()>();

        $r18 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.app.SearchManager getSearchManager()>();

        virtualinvoke $r18.<android.app.SearchManager: void stopSearch()>();

        $r17 = r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.content.Context mContext>;

        virtualinvoke $r17.<android.content.Context: void startActivity(android.content.Intent)>(r4);

        virtualinvoke r2.<android.view.KeyEvent$DispatcherState: void performedLongPress(android.view.KeyEvent)>(r1);

     label18:
        return 1;

     label19:
        $r29 := @caughtexception;

        return 0;

        catch android.content.ActivityNotFoundException from label08 to label09 with label10;
        catch android.content.ActivityNotFoundException from label17 to label18 with label19;
    }

    boolean onKeyUp(int, android.view.KeyEvent)
    {
        com.android.internal.policy.impl.PhoneFallbackEventHandler r0;
        int i0;
        android.view.KeyEvent r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        android.view.KeyEvent$DispatcherState r2;
        android.view.View $r3;
        android.app.KeyguardManager $r4, $r9;
        android.content.Context $r5;
        java.lang.Object $r6;
        android.media.AudioManager $r7, $r8;

        r0 := @this: com.android.internal.policy.impl.PhoneFallbackEventHandler;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        z0 = 1;

        $r3 = r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.view.View mView>;

        r2 = virtualinvoke $r3.<android.view.View: android.view.KeyEvent$DispatcherState getKeyDispatcherState()>();

        if r2 == null goto label1;

        virtualinvoke r2.<android.view.KeyEvent$DispatcherState: void handleUpEvent(android.view.KeyEvent)>(r1);

     label1:
        lookupswitch(i0)
        {
            case 5: goto label7;
            case 24: goto label4;
            case 25: goto label4;
            case 27: goto label6;
            case 79: goto label5;
            case 85: goto label5;
            case 86: goto label5;
            case 87: goto label5;
            case 88: goto label5;
            case 89: goto label5;
            case 90: goto label5;
            case 91: goto label5;
            case 126: goto label5;
            case 127: goto label5;
            case 130: goto label5;
            case 164: goto label4;
            case 222: goto label5;
            default: goto label2;
        };

     label2:
        z0 = 0;

     label3:
        return z0;

     label4:
        $z4 = virtualinvoke r1.<android.view.KeyEvent: boolean isCanceled()>();

        if $z4 != 0 goto label3;

        $r5 = r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("audio");

        $r7 = (android.media.AudioManager) $r6;

        if $r7 == null goto label3;

        $r8 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.media.AudioManager getAudioManager()>();

        virtualinvoke $r8.<android.media.AudioManager: void handleKeyUp(android.view.KeyEvent,int)>(r1, -2147483648);

        return z0;

     label5:
        specialinvoke r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: void handleMediaKeyEvent(android.view.KeyEvent)>(r1);

        return z0;

     label6:
        $r4 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.app.KeyguardManager getKeyguardManager()>();

        $z1 = virtualinvoke $r4.<android.app.KeyguardManager: boolean inKeyguardRestrictedInputMode()>();

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r1.<android.view.KeyEvent: boolean isTracking()>();

        if $z2 == 0 goto label3;

        $z3 = virtualinvoke r1.<android.view.KeyEvent: boolean isCanceled()>();

        if $z3 != 0 goto label3;

        return z0;

     label7:
        $r9 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.app.KeyguardManager getKeyguardManager()>();

        $z5 = virtualinvoke $r9.<android.app.KeyguardManager: boolean inKeyguardRestrictedInputMode()>();

        if $z5 != 0 goto label2;

        $z7 = virtualinvoke r1.<android.view.KeyEvent: boolean isTracking()>();

        if $z7 == 0 goto label3;

        $z6 = virtualinvoke r1.<android.view.KeyEvent: boolean isCanceled()>();

        if $z6 != 0 goto label3;

        virtualinvoke r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: void startCallActivity()>();

        return z0;
    }

    public void preDispatchKeyEvent(android.view.KeyEvent)
    {
        com.android.internal.policy.impl.PhoneFallbackEventHandler r0;
        android.view.KeyEvent r1;
        android.media.AudioManager $r2;

        r0 := @this: com.android.internal.policy.impl.PhoneFallbackEventHandler;

        r1 := @parameter0: android.view.KeyEvent;

        $r2 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.media.AudioManager getAudioManager()>();

        virtualinvoke $r2.<android.media.AudioManager: void preDispatchKeyEvent(android.view.KeyEvent,int)>(r1, -2147483648);

        return;
    }

    void sendCloseSystemWindows()
    {
        com.android.internal.policy.impl.PhoneFallbackEventHandler r0;
        android.content.Context $r1;

        r0 := @this: com.android.internal.policy.impl.PhoneFallbackEventHandler;

        $r1 = r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.content.Context mContext>;

        staticinvoke <com.android.internal.policy.impl.PhoneWindowManager: void sendCloseSystemWindows(android.content.Context,java.lang.String)>($r1, null);

        return;
    }

    public void setView(android.view.View)
    {
        com.android.internal.policy.impl.PhoneFallbackEventHandler r0;
        android.view.View r1;

        r0 := @this: com.android.internal.policy.impl.PhoneFallbackEventHandler;

        r1 := @parameter0: android.view.View;

        r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.view.View mView> = r1;

        return;
    }

    void startCallActivity()
    {
        com.android.internal.policy.impl.PhoneFallbackEventHandler r0;
        android.content.Intent r1, $r3;
        android.content.Context $r5;
        android.content.ActivityNotFoundException $r6;
        java.lang.String $r7;

        r0 := @this: com.android.internal.policy.impl.PhoneFallbackEventHandler;

        virtualinvoke r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: void sendCloseSystemWindows()>();

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.CALL_BUTTON");

        r1 = $r3;

        virtualinvoke r1.<android.content.Intent: android.content.Intent setFlags(int)>(268435456);

     label1:
        $r5 = r0.<com.android.internal.policy.impl.PhoneFallbackEventHandler: android.content.Context mContext>;

        virtualinvoke $r5.<android.content.Context: void startActivity(android.content.Intent)>(r1);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        $r7 = <com.android.internal.policy.impl.PhoneFallbackEventHandler: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r7, "No activity found for android.intent.action.CALL_BUTTON.");

        return;

        catch android.content.ActivityNotFoundException from label1 to label2 with label3;
    }
}
