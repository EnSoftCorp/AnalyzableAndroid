public abstract class javax.xml.parsers.SAXParserFactory extends java.lang.Object
{
    private boolean namespaceAware;
    private boolean validating;

    protected void <init>()
    {
        javax.xml.parsers.SAXParserFactory r0;

        r0 := @this: javax.xml.parsers.SAXParserFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<javax.xml.parsers.SAXParserFactory: boolean validating> = 0;

        r0.<javax.xml.parsers.SAXParserFactory: boolean namespaceAware> = 0;

        return;
    }

    public static javax.xml.parsers.SAXParserFactory newInstance()
    {
        org.apache.harmony.xml.parsers.SAXParserFactoryImpl $r0;

        $r0 = new org.apache.harmony.xml.parsers.SAXParserFactoryImpl;

        specialinvoke $r0.<org.apache.harmony.xml.parsers.SAXParserFactoryImpl: void <init>()>();

        return $r0;
    }

    public static javax.xml.parsers.SAXParserFactory newInstance(java.lang.String, java.lang.ClassLoader)
    {
        java.lang.String r0;
        java.lang.ClassLoader r1;
        java.lang.IllegalAccessException r2, $r11;
        java.lang.InstantiationException r3, $r14;
        java.lang.ClassNotFoundException r4, $r16;
        java.lang.Class r5, r6;
        java.lang.Object $r7;
        javax.xml.parsers.SAXParserFactory $r8;
        java.lang.Thread $r9;
        javax.xml.parsers.FactoryConfigurationError $r10, $r12, $r13, $r15;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.ClassLoader;

        if r0 != null goto label1;

        $r10 = new javax.xml.parsers.FactoryConfigurationError;

        specialinvoke $r10.<javax.xml.parsers.FactoryConfigurationError: void <init>(java.lang.String)>("factoryClassName == null");

        throw $r10;

     label1:
        if r1 != null goto label2;

        $r9 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r1 = virtualinvoke $r9.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

     label2:
        if r1 == null goto label5;

     label3:
        r6 = virtualinvoke r1.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r0);

     label4:
        $r7 = virtualinvoke r6.<java.lang.Class: java.lang.Object newInstance()>();

        $r8 = (javax.xml.parsers.SAXParserFactory) $r7;

        return $r8;

     label5:
        r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label6:
        r6 = r5;

        goto label4;

     label7:
        $r16 := @caughtexception;

        r4 = $r16;

        $r15 = new javax.xml.parsers.FactoryConfigurationError;

        specialinvoke $r15.<javax.xml.parsers.FactoryConfigurationError: void <init>(java.lang.Exception)>(r4);

        throw $r15;

     label8:
        $r14 := @caughtexception;

        r3 = $r14;

        $r13 = new javax.xml.parsers.FactoryConfigurationError;

        specialinvoke $r13.<javax.xml.parsers.FactoryConfigurationError: void <init>(java.lang.Exception)>(r3);

        throw $r13;

     label9:
        $r11 := @caughtexception;

        r2 = $r11;

        $r12 = new javax.xml.parsers.FactoryConfigurationError;

        specialinvoke $r12.<javax.xml.parsers.FactoryConfigurationError: void <init>(java.lang.Exception)>(r2);

        throw $r12;

        catch java.lang.ClassNotFoundException from label3 to label4 with label7;
        catch java.lang.InstantiationException from label3 to label4 with label8;
        catch java.lang.IllegalAccessException from label3 to label4 with label9;
        catch java.lang.ClassNotFoundException from label4 to label5 with label7;
        catch java.lang.InstantiationException from label4 to label5 with label8;
        catch java.lang.IllegalAccessException from label4 to label5 with label9;
        catch java.lang.ClassNotFoundException from label5 to label6 with label7;
        catch java.lang.InstantiationException from label5 to label6 with label8;
        catch java.lang.IllegalAccessException from label5 to label6 with label9;
    }

    public abstract boolean getFeature(java.lang.String) throws javax.xml.parsers.ParserConfigurationException, org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException;

    public javax.xml.validation.Schema getSchema()
    {
        javax.xml.parsers.SAXParserFactory r0;
        java.lang.UnsupportedOperationException $r1;
        java.lang.StringBuilder $r2, $r3, $r7, $r8, $r12, $r13;
        java.lang.Class $r4, $r9;
        java.lang.Package $r5, $r10;
        java.lang.String $r6, $r11, $r14;

        r0 := @this: javax.xml.parsers.SAXParserFactory;

        $r1 = new java.lang.UnsupportedOperationException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("This parser does not support specification \"");

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Package getPackage()>();

        $r6 = virtualinvoke $r5.<java.lang.Package: java.lang.String getSpecificationTitle()>();

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" version \"");

        $r9 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.Package getPackage()>();

        $r11 = virtualinvoke $r10.<java.lang.Package: java.lang.String getSpecificationVersion()>();

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r14);

        throw $r1;
    }

    public boolean isNamespaceAware()
    {
        javax.xml.parsers.SAXParserFactory r0;
        boolean $z0;

        r0 := @this: javax.xml.parsers.SAXParserFactory;

        $z0 = r0.<javax.xml.parsers.SAXParserFactory: boolean namespaceAware>;

        return $z0;
    }

    public boolean isValidating()
    {
        javax.xml.parsers.SAXParserFactory r0;
        boolean $z0;

        r0 := @this: javax.xml.parsers.SAXParserFactory;

        $z0 = r0.<javax.xml.parsers.SAXParserFactory: boolean validating>;

        return $z0;
    }

    public boolean isXIncludeAware()
    {
        javax.xml.parsers.SAXParserFactory r0;
        java.lang.UnsupportedOperationException $r1;
        java.lang.StringBuilder $r2, $r3, $r7, $r8, $r12, $r13;
        java.lang.Class $r4, $r9;
        java.lang.Package $r5, $r10;
        java.lang.String $r6, $r11, $r14;

        r0 := @this: javax.xml.parsers.SAXParserFactory;

        $r1 = new java.lang.UnsupportedOperationException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("This parser does not support specification \"");

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Package getPackage()>();

        $r6 = virtualinvoke $r5.<java.lang.Package: java.lang.String getSpecificationTitle()>();

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" version \"");

        $r9 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.Package getPackage()>();

        $r11 = virtualinvoke $r10.<java.lang.Package: java.lang.String getSpecificationVersion()>();

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r14);

        throw $r1;
    }

    public abstract javax.xml.parsers.SAXParser newSAXParser() throws javax.xml.parsers.ParserConfigurationException, org.xml.sax.SAXException;

    public abstract void setFeature(java.lang.String, boolean) throws javax.xml.parsers.ParserConfigurationException, org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException;

    public void setNamespaceAware(boolean)
    {
        javax.xml.parsers.SAXParserFactory r0;
        boolean z0;

        r0 := @this: javax.xml.parsers.SAXParserFactory;

        z0 := @parameter0: boolean;

        r0.<javax.xml.parsers.SAXParserFactory: boolean namespaceAware> = z0;

        return;
    }

    public void setSchema(javax.xml.validation.Schema)
    {
        javax.xml.parsers.SAXParserFactory r0;
        javax.xml.validation.Schema r1;
        java.lang.UnsupportedOperationException $r2;
        java.lang.StringBuilder $r3, $r4, $r8, $r9, $r13, $r14;
        java.lang.Class $r5, $r10;
        java.lang.Package $r6, $r11;
        java.lang.String $r7, $r12, $r15;

        r0 := @this: javax.xml.parsers.SAXParserFactory;

        r1 := @parameter0: javax.xml.validation.Schema;

        $r2 = new java.lang.UnsupportedOperationException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("This parser does not support specification \"");

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.Package getPackage()>();

        $r7 = virtualinvoke $r6.<java.lang.Package: java.lang.String getSpecificationTitle()>();

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" version \"");

        $r10 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.Package getPackage()>();

        $r12 = virtualinvoke $r11.<java.lang.Package: java.lang.String getSpecificationVersion()>();

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r15);

        throw $r2;
    }

    public void setValidating(boolean)
    {
        javax.xml.parsers.SAXParserFactory r0;
        boolean z0;

        r0 := @this: javax.xml.parsers.SAXParserFactory;

        z0 := @parameter0: boolean;

        r0.<javax.xml.parsers.SAXParserFactory: boolean validating> = z0;

        return;
    }

    public void setXIncludeAware(boolean)
    {
        javax.xml.parsers.SAXParserFactory r0;
        boolean z0;
        java.lang.UnsupportedOperationException $r1;
        java.lang.StringBuilder $r2, $r3, $r7, $r8, $r12, $r13;
        java.lang.Class $r4, $r9;
        java.lang.Package $r5, $r10;
        java.lang.String $r6, $r11, $r14;

        r0 := @this: javax.xml.parsers.SAXParserFactory;

        z0 := @parameter0: boolean;

        $r1 = new java.lang.UnsupportedOperationException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("This parser does not support specification \"");

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Package getPackage()>();

        $r6 = virtualinvoke $r5.<java.lang.Package: java.lang.String getSpecificationTitle()>();

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" version \"");

        $r9 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.Package getPackage()>();

        $r11 = virtualinvoke $r10.<java.lang.Package: java.lang.String getSpecificationVersion()>();

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r14);

        throw $r1;
    }
}
