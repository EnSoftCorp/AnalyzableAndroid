public class org.apache.harmony.security.provider.cert.Cache extends java.lang.Object
{
    private static final long HASH_MASK;
    private static final int INDEX_MASK;
    private static final long PREFIX_HASH_MASK;
    private final java.lang.Object[] cache;
    private boolean cache_is_full;
    private final int cache_size;
    private final byte[][] encodings;
    private final long[] hashes;
    private final long[] hashes_idx;
    private int last_cached;
    private final int prefix_size;

    public void <init>()
    {
        org.apache.harmony.security.provider.cert.Cache r0;

        r0 := @this: org.apache.harmony.security.provider.cert.Cache;

        specialinvoke r0.<org.apache.harmony.security.provider.cert.Cache: void <init>(int,int)>(28, 9);

        return;
    }

    public void <init>(int)
    {
        org.apache.harmony.security.provider.cert.Cache r0;
        int i0;

        r0 := @this: org.apache.harmony.security.provider.cert.Cache;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.harmony.security.provider.cert.Cache: void <init>(int,int)>(i0, 9);

        return;
    }

    public void <init>(int, int)
    {
        org.apache.harmony.security.provider.cert.Cache r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        long[] $r1, $r2;
        byte[][] $r3;
        java.lang.Object[] $r4;

        r0 := @this: org.apache.harmony.security.provider.cert.Cache;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.harmony.security.provider.cert.Cache: int last_cached> = 0;

        r0.<org.apache.harmony.security.provider.cert.Cache: boolean cache_is_full> = 0;

        r0.<org.apache.harmony.security.provider.cert.Cache: int cache_size> = i1;

        r0.<org.apache.harmony.security.provider.cert.Cache: int prefix_size> = i0;

        $i2 = r0.<org.apache.harmony.security.provider.cert.Cache: int cache_size>;

        $r1 = newarray (long)[$i2];

        r0.<org.apache.harmony.security.provider.cert.Cache: long[] hashes> = $r1;

        $i3 = r0.<org.apache.harmony.security.provider.cert.Cache: int cache_size>;

        $r2 = newarray (long)[$i3];

        r0.<org.apache.harmony.security.provider.cert.Cache: long[] hashes_idx> = $r2;

        $i4 = r0.<org.apache.harmony.security.provider.cert.Cache: int cache_size>;

        $r3 = newarray (byte[])[$i4];

        r0.<org.apache.harmony.security.provider.cert.Cache: byte[][] encodings> = $r3;

        $i5 = r0.<org.apache.harmony.security.provider.cert.Cache: int cache_size>;

        $r4 = newarray (java.lang.Object)[$i5];

        r0.<org.apache.harmony.security.provider.cert.Cache: java.lang.Object[] cache> = $r4;

        return;
    }

    private long getSuffHash(byte[])
    {
        org.apache.harmony.security.provider.cert.Cache r0;
        byte[] r1;
        long l0, $l6, $l9;
        int i1, $i2, $i3, $i4, $i5;
        byte $b7;
        short $s8;

        r0 := @this: org.apache.harmony.security.provider.cert.Cache;

        r1 := @parameter0: byte[];

        l0 = 0L;

        $i2 = lengthof r1;

        i1 = -1 + $i2;

     label1:
        $i4 = lengthof r1;

        $i3 = r0.<org.apache.harmony.security.provider.cert.Cache: int prefix_size>;

        $i5 = $i4 - $i3;

        if i1 <= $i5 goto label2;

        $b7 = r1[i1];

        $s8 = 255 & $b7;

        $l9 = (long) $s8;

        l0 = l0 + $l9;

        i1 = i1 + -1;

        goto label1;

     label2:
        $l6 = l0 << 16;

        return $l6;
    }

    public boolean contains(long)
    {
        org.apache.harmony.security.provider.cert.Cache r0;
        long l0, $l6, $l7;
        int i1, $i3, $i4, $i5;
        byte $b2, $b8;
        long[] $r1, $r2;

        r0 := @this: org.apache.harmony.security.provider.cert.Cache;

        l0 := @parameter0: long;

        $b2 = l0 cmp 0L;

        if $b2 != 0 goto label2;

     label1:
        return 0;

     label2:
        $r1 = r0.<org.apache.harmony.security.provider.cert.Cache: long[] hashes_idx>;

        $i3 = staticinvoke <java.util.Arrays: int binarySearch(long[],long)>($r1, l0);

        $i4 = -1 * $i3;

        i1 = -1 + $i4;

        $i5 = r0.<org.apache.harmony.security.provider.cert.Cache: int cache_size>;

        if i1 == $i5 goto label1;

        $r2 = r0.<org.apache.harmony.security.provider.cert.Cache: long[] hashes_idx>;

        $l6 = $r2[i1];

        $l7 = -4294967296L & $l6;

        $b8 = $l7 cmp l0;

        if $b8 != 0 goto label1;

        return 1;
    }

    public java.lang.Object get(long, byte[])
    {
        org.apache.harmony.security.provider.cert.Cache r0;
        long l0, l1, $l4, $l9, $l11, $l12, $l14;
        byte[] r1, $r5;
        int i2, i3, $i6, $i7, $i8, $i13, $i15;
        byte $b5, $b10;
        long[] $r2, $r3, $r4;
        byte[][] $r6;
        boolean $z0;
        java.lang.Object $r7;
        java.lang.Object[] $r8;

        r0 := @this: org.apache.harmony.security.provider.cert.Cache;

        l0 := @parameter0: long;

        r1 := @parameter1: byte[];

        $l4 = specialinvoke r0.<org.apache.harmony.security.provider.cert.Cache: long getSuffHash(byte[])>(r1);

        l1 = l0 | $l4;

        $b5 = l1 cmp 0L;

        if $b5 != 0 goto label2;

     label1:
        return null;

     label2:
        $r2 = r0.<org.apache.harmony.security.provider.cert.Cache: long[] hashes_idx>;

        $i6 = staticinvoke <java.util.Arrays: int binarySearch(long[],long)>($r2, l1);

        $i7 = -1 * $i6;

        i2 = -1 + $i7;

        $i8 = r0.<org.apache.harmony.security.provider.cert.Cache: int cache_size>;

        if i2 == $i8 goto label1;

     label3:
        $r3 = r0.<org.apache.harmony.security.provider.cert.Cache: long[] hashes_idx>;

        $l9 = $r3[i2];

        $l11 = -65536L & $l9;

        $b10 = $l11 cmp l1;

        if $b10 != 0 goto label1;

        $r4 = r0.<org.apache.harmony.security.provider.cert.Cache: long[] hashes_idx>;

        $l12 = $r4[i2];

        $l14 = 65535L & $l12;

        $i13 = (int) $l14;

        i3 = -1 + $i13;

        $r6 = r0.<org.apache.harmony.security.provider.cert.Cache: byte[][] encodings>;

        $r5 = $r6[i3];

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r1, $r5);

        if $z0 == 0 goto label4;

        $r8 = r0.<org.apache.harmony.security.provider.cert.Cache: java.lang.Object[] cache>;

        $r7 = $r8[i3];

        return $r7;

     label4:
        i2 = i2 + 1;

        $i15 = r0.<org.apache.harmony.security.provider.cert.Cache: int cache_size>;

        if i2 != $i15 goto label3;

        return null;
    }

    public long getHash(byte[])
    {
        org.apache.harmony.security.provider.cert.Cache r0;
        byte[] r1;
        long l0, $l3, $l6;
        int i1, $i2;
        byte $b4;
        short $s5;

        r0 := @this: org.apache.harmony.security.provider.cert.Cache;

        r1 := @parameter0: byte[];

        l0 = 0L;

        i1 = 1;

     label1:
        $i2 = r0.<org.apache.harmony.security.provider.cert.Cache: int prefix_size>;

        if i1 >= $i2 goto label2;

        $b4 = r1[i1];

        $s5 = 255 & $b4;

        $l6 = (long) $s5;

        l0 = l0 + $l6;

        i1 = i1 + 1;

        goto label1;

     label2:
        $l3 = l0 << 32;

        return $l3;
    }

    public void put(long, byte[], java.lang.Object)
    {
        org.apache.harmony.security.provider.cert.Cache r0;
        long l0, l2, l3, l6, l8, $l14, $l15, $l30, $l31, $l33;
        byte[] r1;
        java.lang.Object r2;
        int i1, i4, i5, i7, i9, $i10, i11, $i12, $i13, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i32, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42;
        boolean $z0;
        long[] $r3, $r4, $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r20;
        java.lang.Object[] $r5;
        byte[][] $r7;
        java.io.PrintStream $r19, $r26, $r30;
        java.lang.StringBuilder $r21, $r22, $r24, $r25, $r27, $r28, $r29, $r32;
        java.lang.String $r23, $r31;

        r0 := @this: org.apache.harmony.security.provider.cert.Cache;

        l0 := @parameter0: long;

        r1 := @parameter1: byte[];

        r2 := @parameter2: java.lang.Object;

        $i13 = r0.<org.apache.harmony.security.provider.cert.Cache: int last_cached>;

        $i10 = r0.<org.apache.harmony.security.provider.cert.Cache: int cache_size>;

        if $i13 != $i10 goto label1;

        r0.<org.apache.harmony.security.provider.cert.Cache: int last_cached> = 0;

        r0.<org.apache.harmony.security.provider.cert.Cache: boolean cache_is_full> = 1;

     label1:
        i1 = r0.<org.apache.harmony.security.provider.cert.Cache: int last_cached>;

        $i12 = i1 + 1;

        r0.<org.apache.harmony.security.provider.cert.Cache: int last_cached> = $i12;

        $l14 = specialinvoke r0.<org.apache.harmony.security.provider.cert.Cache: long getSuffHash(byte[])>(r1);

        l2 = l0 | $l14;

        $z0 = r0.<org.apache.harmony.security.provider.cert.Cache: boolean cache_is_full>;

        if $z0 == 0 goto label7;

        $r9 = r0.<org.apache.harmony.security.provider.cert.Cache: long[] hashes>;

        $l30 = $r9[i1];

        $i32 = i1 + 1;

        $l31 = (long) $i32;

        l6 = $l30 | $l31;

        $r11 = r0.<org.apache.harmony.security.provider.cert.Cache: long[] hashes_idx>;

        i7 = staticinvoke <java.util.Arrays: int binarySearch(long[],long)>($r11, l6);

        if i7 >= 0 goto label2;

        $r30 = <java.lang.System: java.io.PrintStream out>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WARNING! ");

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>($r31);

        $i42 = i7 + 1;

        i7 = neg $i42;

     label2:
        $i34 = i1 + 1;

        $l33 = (long) $i34;

        l8 = l2 | $l33;

        $r12 = r0.<org.apache.harmony.security.provider.cert.Cache: long[] hashes_idx>;

        i9 = staticinvoke <java.util.Arrays: int binarySearch(long[],long)>($r12, l8);

        if i9 < 0 goto label4;

        if i7 == i9 goto label3;

        $r19 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>("WARNING: ");

        $r26 = <java.lang.System: java.io.PrintStream out>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">> idx: ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        $r21 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" new_idx: ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r23);

     label3:
        $r6 = r0.<org.apache.harmony.security.provider.cert.Cache: long[] hashes>;

        $r6[i1] = l2;

        $r7 = r0.<org.apache.harmony.security.provider.cert.Cache: byte[][] encodings>;

        $r7[i1] = r1;

        $r5 = r0.<org.apache.harmony.security.provider.cert.Cache: java.lang.Object[] cache>;

        $r5[i1] = r2;

        return;

     label4:
        $i36 = i9 + 1;

        i11 = neg $i36;

        if i11 <= i7 goto label5;

        $r17 = r0.<org.apache.harmony.security.provider.cert.Cache: long[] hashes_idx>;

        $i41 = i7 + 1;

        $r20 = r0.<org.apache.harmony.security.provider.cert.Cache: long[] hashes_idx>;

        $i39 = i11 - i7;

        $i40 = -1 + $i39;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r17, $i41, $r20, i7, $i40);

        $r18 = r0.<org.apache.harmony.security.provider.cert.Cache: long[] hashes_idx>;

        $i38 = i11 - 1;

        $r18[$i38] = l8;

        goto label3;

     label5:
        if i7 <= i11 goto label6;

        $r15 = r0.<org.apache.harmony.security.provider.cert.Cache: long[] hashes_idx>;

        $r16 = r0.<org.apache.harmony.security.provider.cert.Cache: long[] hashes_idx>;

        $i37 = i11 + 1;

        $i35 = i7 - i11;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r15, i11, $r16, $i37, $i35);

        $r14 = r0.<org.apache.harmony.security.provider.cert.Cache: long[] hashes_idx>;

        $r14[i11] = l8;

        goto label3;

     label6:
        $r13 = r0.<org.apache.harmony.security.provider.cert.Cache: long[] hashes_idx>;

        $r13[i11] = l8;

        goto label3;

     label7:
        $i16 = i1 + 1;

        $l15 = (long) $i16;

        l3 = l2 | $l15;

        $r3 = r0.<org.apache.harmony.security.provider.cert.Cache: long[] hashes_idx>;

        i4 = staticinvoke <java.util.Arrays: int binarySearch(long[],long)>($r3, l3);

        if i4 >= 0 goto label8;

        $i28 = i4 + 1;

        i4 = neg $i28;

     label8:
        i5 = i4 - 1;

        $i18 = r0.<org.apache.harmony.security.provider.cert.Cache: int cache_size>;

        $i17 = $i18 - i1;

        $i19 = -1 + $i17;

        if i5 == $i19 goto label9;

        $r10 = r0.<org.apache.harmony.security.provider.cert.Cache: long[] hashes_idx>;

        $i20 = r0.<org.apache.harmony.security.provider.cert.Cache: int cache_size>;

        $i29 = $i20 - i1;

        $r8 = r0.<org.apache.harmony.security.provider.cert.Cache: long[] hashes_idx>;

        $i23 = r0.<org.apache.harmony.security.provider.cert.Cache: int cache_size>;

        $i24 = $i23 - i1;

        $i25 = -1 + $i24;

        $i21 = r0.<org.apache.harmony.security.provider.cert.Cache: int cache_size>;

        $i22 = $i21 - i1;

        $i26 = i5 - $i22;

        $i27 = 1 + $i26;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, $i29, $r8, $i25, $i27);

     label9:
        $r4 = r0.<org.apache.harmony.security.provider.cert.Cache: long[] hashes_idx>;

        $r4[i5] = l3;

        goto label3;
    }

    public static void <clinit>()
    {
        <org.apache.harmony.security.provider.cert.Cache: long PREFIX_HASH_MASK> = -4294967296L;

        <org.apache.harmony.security.provider.cert.Cache: int INDEX_MASK> = 65535;

        <org.apache.harmony.security.provider.cert.Cache: long HASH_MASK> = -65536L;

        return;
    }
}
