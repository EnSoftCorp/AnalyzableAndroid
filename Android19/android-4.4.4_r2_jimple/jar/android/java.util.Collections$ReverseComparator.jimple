final class java.util.Collections$ReverseComparator extends java.lang.Object implements java.util.Comparator, java.io.Serializable
{
    private static final java.util.Collections$ReverseComparator INSTANCE;
    private static final long serialVersionUID;

    static void <clinit>()
    {
        java.util.Collections$ReverseComparator $r0;

        <java.util.Collections$ReverseComparator: long serialVersionUID> = 7207038068494060240L;

        $r0 = new java.util.Collections$ReverseComparator;

        specialinvoke $r0.<java.util.Collections$ReverseComparator: void <init>()>();

        <java.util.Collections$ReverseComparator: java.util.Collections$ReverseComparator INSTANCE> = $r0;

        return;
    }

    private void <init>()
    {
        java.util.Collections$ReverseComparator r0;

        r0 := @this: java.util.Collections$ReverseComparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.util.Collections$ReverseComparator access$400()
    {
        java.util.Collections$ReverseComparator $r0;

        $r0 = <java.util.Collections$ReverseComparator: java.util.Collections$ReverseComparator INSTANCE>;

        return $r0;
    }

    private java.lang.Object readResolve() throws java.io.ObjectStreamException
    {
        java.util.Collections$ReverseComparator r0, $r1;

        r0 := @this: java.util.Collections$ReverseComparator;

        $r1 = <java.util.Collections$ReverseComparator: java.util.Collections$ReverseComparator INSTANCE>;

        return $r1;
    }

    public int compare(java.lang.Object, java.lang.Object)
    {
        java.util.Collections$ReverseComparator r0;
        java.lang.Object r1, r2;
        java.lang.Comparable $r3;
        int $i0;

        r0 := @this: java.util.Collections$ReverseComparator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Comparable) r2;

        $i0 = interfaceinvoke $r3.<java.lang.Comparable: int compareTo(java.lang.Object)>(r1);

        return $i0;
    }
}
