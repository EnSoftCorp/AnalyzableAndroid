public class android.media.ThumbnailUtils extends java.lang.Object
{
    private static final int MAX_NUM_PIXELS_MICRO_THUMBNAIL;
    private static final int MAX_NUM_PIXELS_THUMBNAIL;
    private static final int OPTIONS_NONE;
    public static final int OPTIONS_RECYCLE_INPUT;
    private static final int OPTIONS_SCALE_UP;
    private static final java.lang.String TAG;
    public static final int TARGET_SIZE_MICRO_THUMBNAIL;
    public static final int TARGET_SIZE_MINI_THUMBNAIL;
    private static final int UNCONSTRAINED;

    public void <init>()
    {
        android.media.ThumbnailUtils r0;

        r0 := @this: android.media.ThumbnailUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static void closeSilently(android.os.ParcelFileDescriptor)
    {
        android.os.ParcelFileDescriptor r0;
        java.lang.Throwable $r2;

        r0 := @parameter0: android.os.ParcelFileDescriptor;

        if r0 != null goto label1;

        return;

     label1:
        virtualinvoke r0.<android.os.ParcelFileDescriptor: void close()>();

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private static int computeInitialSampleSize(android.graphics.BitmapFactory$Options, int, int)
    {
        android.graphics.BitmapFactory$Options r0;
        int i0, i1, i2, i3, $i4, $i5;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;

        r0 := @parameter0: android.graphics.BitmapFactory$Options;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i4 = r0.<android.graphics.BitmapFactory$Options: int outWidth>;

        d0 = (double) $i4;

        $i5 = r0.<android.graphics.BitmapFactory$Options: int outHeight>;

        d1 = (double) $i5;

        if i1 != -1 goto label4;

        i2 = 1;

     label1:
        if i0 != -1 goto label5;

        i3 = 128;

     label2:
        if i3 >= i2 goto label6;

     label3:
        return i2;

     label4:
        $d3 = d0 * d1;

        $d2 = (double) i1;

        $d4 = $d3 / $d2;

        $d5 = staticinvoke <java.lang.Math: double sqrt(double)>($d4);

        $d6 = staticinvoke <java.lang.Math: double ceil(double)>($d5);

        i2 = (int) $d6;

        goto label1;

     label5:
        $d8 = (double) i0;

        $d7 = d0 / $d8;

        $d10 = staticinvoke <java.lang.Math: double floor(double)>($d7);

        $d9 = (double) i0;

        $d12 = d1 / $d9;

        $d11 = staticinvoke <java.lang.Math: double floor(double)>($d12);

        $d13 = staticinvoke <java.lang.Math: double min(double,double)>($d10, $d11);

        i3 = (int) $d13;

        goto label2;

     label6:
        if i1 != -1 goto label7;

        if i0 != -1 goto label7;

        return 1;

     label7:
        if i0 == -1 goto label3;

        return i3;
    }

    private static int computeSampleSize(android.graphics.BitmapFactory$Options, int, int)
    {
        android.graphics.BitmapFactory$Options r0;
        int i0, i1, i2, i3, $i4, $i5;

        r0 := @parameter0: android.graphics.BitmapFactory$Options;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = staticinvoke <android.media.ThumbnailUtils: int computeInitialSampleSize(android.graphics.BitmapFactory$Options,int,int)>(r0, i0, i1);

        if i2 > 8 goto label2;

        i3 = 1;

     label1:
        if i3 >= i2 goto label3;

        i3 = i3 << 1;

        goto label1;

     label2:
        $i4 = i2 + 7;

        $i5 = $i4 / 8;

        i3 = 8 * $i5;

     label3:
        return i3;
    }

    public static android.graphics.Bitmap createImageThumbnail(java.lang.String, int)
    {
        java.lang.String r0, $r29;
        int i0, i2, i3, i4, $i5, $i6;
        boolean z0, $z1;
        short s1;
        android.media.ThumbnailUtils$SizedThumbnailBitmap r1, $r17;
        android.media.MediaFile$MediaFileType r2;
        android.graphics.Bitmap r3, r15;
        java.io.FileInputStream r4, r5, $r18;
        java.io.IOException r6, r8, r9, r11, r14, r16, $r21, $r24, $r31, $r33, $r34, $r35, $r37;
        java.lang.Throwable r7, $r28, $r32;
        java.lang.OutOfMemoryError r10, $r23, $r36;
        java.io.FileDescriptor r12;
        android.graphics.BitmapFactory$Options r13, $r19;
        android.graphics.Bitmap$Config $r22;
        java.lang.StringBuilder $r25, $r26, $r27, $r30;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if i0 != 1 goto label11;

        z0 = 1;

     label01:
        if z0 == 0 goto label12;

        s1 = 320;

     label02:
        if z0 == 0 goto label13;

        i2 = 196608;

     label03:
        $r17 = new android.media.ThumbnailUtils$SizedThumbnailBitmap;

        specialinvoke $r17.<android.media.ThumbnailUtils$SizedThumbnailBitmap: void <init>(android.media.ThumbnailUtils$1)>(null);

        r1 = $r17;

        r2 = staticinvoke <android.media.MediaFile: android.media.MediaFile$MediaFileType getFileType(java.lang.String)>(r0);

        r3 = null;

        if r2 == null goto label04;

        i4 = r2.<android.media.MediaFile$MediaFileType: int fileType>;

        r3 = null;

        if i4 != 31 goto label04;

        staticinvoke <android.media.ThumbnailUtils: void createThumbnailFromEXIF(java.lang.String,int,int,android.media.ThumbnailUtils$SizedThumbnailBitmap)>(r0, s1, i2, r1);

        r3 = r1.<android.media.ThumbnailUtils$SizedThumbnailBitmap: android.graphics.Bitmap mBitmap>;

     label04:
        if r3 != null goto label18;

        r4 = null;

     label05:
        $r18 = new java.io.FileInputStream;

        specialinvoke $r18.<java.io.FileInputStream: void <init>(java.lang.String)>(r0);

        r5 = $r18;

     label06:
        r12 = virtualinvoke r5.<java.io.FileInputStream: java.io.FileDescriptor getFD()>();

        $r19 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r19.<android.graphics.BitmapFactory$Options: void <init>()>();

        r13 = $r19;

        r13.<android.graphics.BitmapFactory$Options: int inSampleSize> = 1;

        r13.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 1;

        staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor,android.graphics.Rect,android.graphics.BitmapFactory$Options)>(r12, null, r13);

        $z1 = r13.<android.graphics.BitmapFactory$Options: boolean mCancel>;

        if $z1 != 0 goto label08;

        $i5 = r13.<android.graphics.BitmapFactory$Options: int outWidth>;

        if $i5 == -1 goto label08;

        i3 = r13.<android.graphics.BitmapFactory$Options: int outHeight>;

     label07:
        if i3 != -1 goto label15;

     label08:
        if r5 == null goto label10;

     label09:
        virtualinvoke r5.<java.io.FileInputStream: void close()>();

     label10:
        return null;

     label11:
        z0 = 0;

        goto label01;

     label12:
        s1 = 96;

        goto label02;

     label13:
        i2 = 19200;

        goto label03;

     label14:
        $r34 := @caughtexception;

        r14 = $r34;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ThumbnailUtils", "", r14);

        return null;

     label15:
        $i6 = staticinvoke <android.media.ThumbnailUtils: int computeSampleSize(android.graphics.BitmapFactory$Options,int,int)>(r13, s1, i2);

        r13.<android.graphics.BitmapFactory$Options: int inSampleSize> = $i6;

        r13.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 0;

        r13.<android.graphics.BitmapFactory$Options: boolean inDither> = 0;

        $r22 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r13.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap$Config inPreferredConfig> = $r22;

        r15 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor,android.graphics.Rect,android.graphics.BitmapFactory$Options)>(r12, null, r13);

     label16:
        r3 = r15;

        if r5 == null goto label18;

     label17:
        virtualinvoke r5.<java.io.FileInputStream: void close()>();

     label18:
        if i0 != 3 goto label19;

        r3 = staticinvoke <android.media.ThumbnailUtils: android.graphics.Bitmap extractThumbnail(android.graphics.Bitmap,int,int,int)>(r3, 96, 96, 2);

     label19:
        return r3;

     label20:
        $r37 := @caughtexception;

        r16 = $r37;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ThumbnailUtils", "", r16);

        goto label18;

     label21:
        $r31 := @caughtexception;

        r6 = $r31;

     label22:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ThumbnailUtils", "", r6);

     label23:
        if r4 == null goto label18;

     label24:
        virtualinvoke r4.<java.io.FileInputStream: void close()>();

     label25:
        goto label18;

     label26:
        $r33 := @caughtexception;

        r9 = $r33;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ThumbnailUtils", "", r9);

        goto label18;

     label27:
        $r36 := @caughtexception;

        r10 = $r36;

     label28:
        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to decode file ");

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". OutOfMemoryError.");

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ThumbnailUtils", $r29, r10);

     label29:
        if r4 == null goto label18;

     label30:
        virtualinvoke r4.<java.io.FileInputStream: void close()>();

     label31:
        goto label18;

     label32:
        $r24 := @caughtexception;

        r11 = $r24;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ThumbnailUtils", "", r11);

        goto label18;

     label33:
        $r28 := @caughtexception;

        r7 = $r28;

     label34:
        if r4 == null goto label36;

     label35:
        virtualinvoke r4.<java.io.FileInputStream: void close()>();

     label36:
        throw r7;

     label37:
        $r35 := @caughtexception;

        r8 = $r35;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ThumbnailUtils", "", r8);

        goto label36;

     label38:
        $r32 := @caughtexception;

        r7 = $r32;

        r4 = r5;

        goto label34;

     label39:
        $r23 := @caughtexception;

        r10 = $r23;

        r4 = r5;

        goto label28;

     label40:
        $r21 := @caughtexception;

        r6 = $r21;

        r4 = r5;

        goto label22;

        catch java.io.IOException from label05 to label06 with label21;
        catch java.lang.OutOfMemoryError from label05 to label06 with label27;
        catch java.lang.Throwable from label05 to label06 with label33;
        catch java.io.IOException from label06 to label07 with label40;
        catch java.lang.OutOfMemoryError from label06 to label07 with label39;
        catch java.lang.Throwable from label06 to label07 with label38;
        catch java.io.IOException from label09 to label10 with label14;
        catch java.io.IOException from label15 to label16 with label40;
        catch java.lang.OutOfMemoryError from label15 to label16 with label39;
        catch java.lang.Throwable from label15 to label16 with label38;
        catch java.io.IOException from label17 to label18 with label20;
        catch java.lang.Throwable from label22 to label23 with label33;
        catch java.io.IOException from label24 to label25 with label26;
        catch java.lang.Throwable from label28 to label29 with label33;
        catch java.io.IOException from label30 to label31 with label32;
        catch java.io.IOException from label35 to label36 with label37;
    }

    private static void createThumbnailFromEXIF(java.lang.String, int, int, android.media.ThumbnailUtils$SizedThumbnailBitmap)
    {
        java.lang.String r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14;
        android.media.ThumbnailUtils$SizedThumbnailBitmap r1;
        android.media.ExifInterface r2, $r7;
        java.io.IOException r3, $r16, $r17;
        byte[] r4, r8;
        android.graphics.BitmapFactory$Options r5, r6, $r9, $r11;
        android.graphics.Bitmap $r12, $r13, $r14;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: android.media.ThumbnailUtils$SizedThumbnailBitmap;

        if r0 != null goto label02;

     label01:
        return;

     label02:
        $r7 = new android.media.ExifInterface;

        specialinvoke $r7.<android.media.ExifInterface: void <init>(java.lang.String)>(r0);

        r2 = $r7;

     label03:
        r8 = virtualinvoke r2.<android.media.ExifInterface: byte[] getThumbnail()>();

     label04:
        r4 = r8;

     label05:
        $r9 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r9.<android.graphics.BitmapFactory$Options: void <init>()>();

        r5 = $r9;

        $r11 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r11.<android.graphics.BitmapFactory$Options: void <init>()>();

        r6 = $r11;

        i2 = 0;

        if r4 == null goto label06;

        r6.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 1;

        $i10 = lengthof r4;

        staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>(r4, 0, $i10, r6);

        $i11 = staticinvoke <android.media.ThumbnailUtils: int computeSampleSize(android.graphics.BitmapFactory$Options,int,int)>(r6, i0, i1);

        r6.<android.graphics.BitmapFactory$Options: int inSampleSize> = $i11;

        $i14 = r6.<android.graphics.BitmapFactory$Options: int outWidth>;

        $i13 = r6.<android.graphics.BitmapFactory$Options: int inSampleSize>;

        i2 = $i14 / $i13;

     label06:
        r5.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 1;

        staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>(r0, r5);

        $i7 = staticinvoke <android.media.ThumbnailUtils: int computeSampleSize(android.graphics.BitmapFactory$Options,int,int)>(r5, i0, i1);

        r5.<android.graphics.BitmapFactory$Options: int inSampleSize> = $i7;

        $i8 = r5.<android.graphics.BitmapFactory$Options: int outWidth>;

        $i6 = r5.<android.graphics.BitmapFactory$Options: int inSampleSize>;

        i3 = $i8 / $i6;

        if r4 == null goto label09;

        if i2 < i3 goto label09;

        i4 = r6.<android.graphics.BitmapFactory$Options: int outWidth>;

        i5 = r6.<android.graphics.BitmapFactory$Options: int outHeight>;

        r6.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 0;

        $i9 = lengthof r4;

        $r13 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>(r4, 0, $i9, r6);

        r1.<android.media.ThumbnailUtils$SizedThumbnailBitmap: android.graphics.Bitmap mBitmap> = $r13;

        $r14 = r1.<android.media.ThumbnailUtils$SizedThumbnailBitmap: android.graphics.Bitmap mBitmap>;

        if $r14 == null goto label01;

        r1.<android.media.ThumbnailUtils$SizedThumbnailBitmap: byte[] mThumbnailData> = r4;

        r1.<android.media.ThumbnailUtils$SizedThumbnailBitmap: int mThumbnailWidth> = i4;

        r1.<android.media.ThumbnailUtils$SizedThumbnailBitmap: int mThumbnailHeight> = i5;

        return;

     label07:
        $r16 := @caughtexception;

        r3 = $r16;

     label08:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>("ThumbnailUtils", r3);

        r4 = null;

        goto label05;

     label09:
        r5.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 0;

        $r12 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>(r0, r5);

        r1.<android.media.ThumbnailUtils$SizedThumbnailBitmap: android.graphics.Bitmap mBitmap> = $r12;

        return;

     label10:
        $r17 := @caughtexception;

        r3 = $r17;

        goto label08;

        catch java.io.IOException from label02 to label03 with label07;
        catch java.io.IOException from label03 to label04 with label10;
    }

    public static android.graphics.Bitmap createVideoThumbnail(java.lang.String, int)
    {
        java.lang.String r0;
        int i0, i1, i2, i3, $i4, $i5;
        android.media.MediaMetadataRetriever r1, $r11;
        java.lang.Throwable r2, $r15;
        android.graphics.Bitmap r6, r9;
        float f0, $f1, $f2, $f3, $f4, $f5;
        java.lang.RuntimeException $r12, $r13, $r16, $r17, $r18;
        java.lang.IllegalArgumentException $r14;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r11 = new android.media.MediaMetadataRetriever;

        specialinvoke $r11.<android.media.MediaMetadataRetriever: void <init>()>();

        r1 = $r11;

     label01:
        virtualinvoke r1.<android.media.MediaMetadataRetriever: void setDataSource(java.lang.String)>(r0);

        r9 = virtualinvoke r1.<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime(long)>(-1L);

     label02:
        r6 = r9;

     label03:
        virtualinvoke r1.<android.media.MediaMetadataRetriever: void release()>();

     label04:
        if r6 != null goto label16;

        return null;

     label05:
        $r14 := @caughtexception;

     label06:
        virtualinvoke r1.<android.media.MediaMetadataRetriever: void release()>();

     label07:
        r6 = null;

        goto label04;

     label08:
        $r16 := @caughtexception;

        r6 = null;

        goto label04;

     label09:
        $r13 := @caughtexception;

     label10:
        virtualinvoke r1.<android.media.MediaMetadataRetriever: void release()>();

     label11:
        r6 = null;

        goto label04;

     label12:
        $r12 := @caughtexception;

        r6 = null;

        goto label04;

     label13:
        $r15 := @caughtexception;

        r2 = $r15;

     label14:
        virtualinvoke r1.<android.media.MediaMetadataRetriever: void release()>();

     label15:
        throw r2;

     label16:
        if i0 != 1 goto label18;

        i1 = virtualinvoke r6.<android.graphics.Bitmap: int getWidth()>();

        i2 = virtualinvoke r6.<android.graphics.Bitmap: int getHeight()>();

        i3 = staticinvoke <java.lang.Math: int max(int,int)>(i1, i2);

        if i3 <= 512 goto label17;

        $f2 = (float) i3;

        f0 = 512.0F / $f2;

        $f1 = (float) i1;

        $f3 = f0 * $f1;

        $i4 = staticinvoke <java.lang.Math: int round(float)>($f3);

        $f5 = (float) i2;

        $f4 = f0 * $f5;

        $i5 = staticinvoke <java.lang.Math: int round(float)>($f4);

        r6 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>(r6, $i4, $i5, 1);

     label17:
        return r6;

     label18:
        if i0 != 3 goto label17;

        r6 = staticinvoke <android.media.ThumbnailUtils: android.graphics.Bitmap extractThumbnail(android.graphics.Bitmap,int,int,int)>(r6, 96, 96, 2);

        goto label17;

     label19:
        $r17 := @caughtexception;

        goto label04;

     label20:
        $r18 := @caughtexception;

        goto label15;

        catch java.lang.IllegalArgumentException from label01 to label02 with label05;
        catch java.lang.RuntimeException from label01 to label02 with label09;
        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.RuntimeException from label03 to label04 with label19;
        catch java.lang.RuntimeException from label06 to label07 with label08;
        catch java.lang.RuntimeException from label10 to label11 with label12;
        catch java.lang.RuntimeException from label14 to label15 with label20;
    }

    public static android.graphics.Bitmap extractThumbnail(android.graphics.Bitmap, int, int)
    {
        android.graphics.Bitmap r0, $r1;
        int i0, i1;

        r0 := @parameter0: android.graphics.Bitmap;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = staticinvoke <android.media.ThumbnailUtils: android.graphics.Bitmap extractThumbnail(android.graphics.Bitmap,int,int,int)>(r0, i0, i1, 0);

        return $r1;
    }

    public static android.graphics.Bitmap extractThumbnail(android.graphics.Bitmap, int, int, int)
    {
        android.graphics.Bitmap r0, $r3;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        float f0, $f1, $f2, $f3, $f4;
        android.graphics.Matrix r1, $r2;

        r0 := @parameter0: android.graphics.Bitmap;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        if r0 != null goto label1;

        return null;

     label1:
        $i3 = virtualinvoke r0.<android.graphics.Bitmap: int getWidth()>();

        $i4 = virtualinvoke r0.<android.graphics.Bitmap: int getHeight()>();

        if $i3 >= $i4 goto label3;

        $f3 = (float) i0;

        $i7 = virtualinvoke r0.<android.graphics.Bitmap: int getWidth()>();

        $f4 = (float) $i7;

        f0 = $f3 / $f4;

     label2:
        $r2 = new android.graphics.Matrix;

        specialinvoke $r2.<android.graphics.Matrix: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<android.graphics.Matrix: void setScale(float,float)>(f0, f0);

        $i6 = i2 | 1;

        $r3 = staticinvoke <android.media.ThumbnailUtils: android.graphics.Bitmap transform(android.graphics.Matrix,android.graphics.Bitmap,int,int,int)>(r1, r0, i0, i1, $i6);

        return $r3;

     label3:
        $f1 = (float) i1;

        $i5 = virtualinvoke r0.<android.graphics.Bitmap: int getHeight()>();

        $f2 = (float) $i5;

        f0 = $f1 / $f2;

        goto label2;
    }

    private static android.graphics.Bitmap makeBitmap(int, int, android.net.Uri, android.content.ContentResolver, android.os.ParcelFileDescriptor, android.graphics.BitmapFactory$Options)
    {
        int i0, i1, i2, $i3, $i4;
        android.net.Uri r0;
        android.content.ContentResolver r1;
        android.os.ParcelFileDescriptor r2, r8;
        android.graphics.BitmapFactory$Options r3, $r11;
        java.lang.Throwable r4, $r12;
        java.lang.OutOfMemoryError r5, $r13;
        java.io.FileDescriptor r6;
        android.graphics.Bitmap r7;
        boolean $z0;
        android.graphics.Bitmap$Config $r10;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: android.net.Uri;

        r1 := @parameter3: android.content.ContentResolver;

        r2 := @parameter4: android.os.ParcelFileDescriptor;

        r3 := @parameter5: android.graphics.BitmapFactory$Options;

        if r2 != null goto label03;

     label01:
        r8 = staticinvoke <android.media.ThumbnailUtils: android.os.ParcelFileDescriptor makeInputStream(android.net.Uri,android.content.ContentResolver)>(r0, r1);

     label02:
        r2 = r8;

     label03:
        if r2 != null goto label04;

        staticinvoke <android.media.ThumbnailUtils: void closeSilently(android.os.ParcelFileDescriptor)>(r2);

        return null;

     label04:
        if r3 != null goto label06;

     label05:
        $r11 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r11.<android.graphics.BitmapFactory$Options: void <init>()>();

        r3 = $r11;

     label06:
        r6 = virtualinvoke r2.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        r3.<android.graphics.BitmapFactory$Options: int inSampleSize> = 1;

        r3.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 1;

        staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor,android.graphics.Rect,android.graphics.BitmapFactory$Options)>(r6, null, r3);

        $z0 = r3.<android.graphics.BitmapFactory$Options: boolean mCancel>;

        if $z0 != 0 goto label08;

        $i3 = r3.<android.graphics.BitmapFactory$Options: int outWidth>;

        if $i3 == -1 goto label08;

        i2 = r3.<android.graphics.BitmapFactory$Options: int outHeight>;

     label07:
        if i2 != -1 goto label09;

     label08:
        staticinvoke <android.media.ThumbnailUtils: void closeSilently(android.os.ParcelFileDescriptor)>(r2);

        return null;

     label09:
        $i4 = staticinvoke <android.media.ThumbnailUtils: int computeSampleSize(android.graphics.BitmapFactory$Options,int,int)>(r3, i0, i1);

        r3.<android.graphics.BitmapFactory$Options: int inSampleSize> = $i4;

        r3.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 0;

        r3.<android.graphics.BitmapFactory$Options: boolean inDither> = 0;

        $r10 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r3.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap$Config inPreferredConfig> = $r10;

        r7 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor,android.graphics.Rect,android.graphics.BitmapFactory$Options)>(r6, null, r3);

     label10:
        staticinvoke <android.media.ThumbnailUtils: void closeSilently(android.os.ParcelFileDescriptor)>(r2);

        return r7;

     label11:
        $r13 := @caughtexception;

        r5 = $r13;

     label12:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ThumbnailUtils", "Got oom exception ", r5);

     label13:
        staticinvoke <android.media.ThumbnailUtils: void closeSilently(android.os.ParcelFileDescriptor)>(r2);

        return null;

     label14:
        $r12 := @caughtexception;

        r4 = $r12;

        staticinvoke <android.media.ThumbnailUtils: void closeSilently(android.os.ParcelFileDescriptor)>(r2);

        throw r4;

        catch java.lang.OutOfMemoryError from label01 to label02 with label11;
        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.OutOfMemoryError from label05 to label06 with label11;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.OutOfMemoryError from label06 to label07 with label11;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.OutOfMemoryError from label09 to label10 with label11;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    private static android.os.ParcelFileDescriptor makeInputStream(android.net.Uri, android.content.ContentResolver)
    {
        android.net.Uri r0;
        android.content.ContentResolver r1;
        android.os.ParcelFileDescriptor r3;
        java.io.IOException $r4;

        r0 := @parameter0: android.net.Uri;

        r1 := @parameter1: android.content.ContentResolver;

     label1:
        r3 = virtualinvoke r1.<android.content.ContentResolver: android.os.ParcelFileDescriptor openFileDescriptor(android.net.Uri,java.lang.String)>(r0, "r");

     label2:
        return r3;

     label3:
        $r4 := @caughtexception;

        return null;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private static android.graphics.Bitmap transform(android.graphics.Matrix, android.graphics.Bitmap, int, int, int)
    {
        android.graphics.Matrix r0;
        android.graphics.Bitmap r1, r2, r3;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, $i11, $i12, $i13, $i14, $i15, $i16, $i18, $i19, $i21, $i22, $i23, $i24, $i25, $i26, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43;
        boolean z0, z1;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9;
        android.graphics.Canvas r4, $r7;
        android.graphics.Rect r5, r6, $r9, $r10;
        byte $b17, $b20, $b27, $b28, $b29;
        android.graphics.Bitmap$Config $r8;

        r0 := @parameter0: android.graphics.Matrix;

        r1 := @parameter1: android.graphics.Bitmap;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $i12 = i2 & 1;

        if $i12 == 0 goto label06;

        z0 = 1;

     label01:
        $i11 = i2 & 2;

        if $i11 == 0 goto label07;

        z1 = 1;

     label02:
        $i14 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        i3 = $i14 - i0;

        $i13 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        i4 = $i13 - i1;

        if z0 != 0 goto label08;

        if i3 < 0 goto label03;

        if i4 >= 0 goto label08;

     label03:
        $r8 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r3 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i0, i1, $r8);

        $r7 = new android.graphics.Canvas;

        specialinvoke $r7.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r3);

        r4 = $r7;

        $i31 = i3 / 2;

        i8 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i31);

        $i30 = i4 / 2;

        i7 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i30);

        $r9 = new android.graphics.Rect;

        $i36 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        $i37 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i36);

        $i38 = i8 + $i37;

        $i32 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        $i33 = staticinvoke <java.lang.Math: int min(int,int)>(i1, $i32);

        $i34 = i7 + $i33;

        specialinvoke $r9.<android.graphics.Rect: void <init>(int,int,int,int)>(i8, i7, $i38, $i34);

        r5 = $r9;

        $i35 = virtualinvoke r5.<android.graphics.Rect: int width()>();

        $i41 = i0 - $i35;

        i9 = $i41 / 2;

        $i42 = virtualinvoke r5.<android.graphics.Rect: int height()>();

        $i43 = i1 - $i42;

        i10 = $i43 / 2;

        $r10 = new android.graphics.Rect;

        $i40 = i0 - i9;

        $i39 = i1 - i10;

        specialinvoke $r10.<android.graphics.Rect: void <init>(int,int,int,int)>(i9, i10, $i40, $i39);

        r6 = $r10;

        virtualinvoke r4.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint)>(r1, r5, r6, null);

        if z1 == 0 goto label04;

        virtualinvoke r1.<android.graphics.Bitmap: void recycle()>();

     label04:
        virtualinvoke r4.<android.graphics.Canvas: void setBitmap(android.graphics.Bitmap)>(null);

     label05:
        return r3;

     label06:
        z0 = 0;

        goto label01;

     label07:
        z1 = 0;

        goto label02;

     label08:
        $i16 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        f0 = (float) $i16;

        $i15 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        f1 = (float) $i15;

        $f8 = f0 / f1;

        $f4 = (float) i0;

        $f5 = (float) i1;

        $f7 = $f4 / $f5;

        $b17 = $f8 cmpl $f7;

        if $b17 <= 0 goto label15;

        $f9 = (float) i1;

        f3 = $f9 / f1;

        $b27 = f3 cmpg 0.9F;

        if $b27 < 0 goto label09;

        $b29 = f3 cmpl 1.0F;

        if $b29 <= 0 goto label14;

     label09:
        virtualinvoke r0.<android.graphics.Matrix: void setScale(float,float)>(f3, f3);

     label10:
        if r0 == null goto label18;

        $i26 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        $i25 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        r2 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>(r1, 0, 0, $i26, $i25, r0, 1);

     label11:
        if z1 == 0 goto label12;

        if r2 == r1 goto label12;

        virtualinvoke r1.<android.graphics.Bitmap: void recycle()>();

     label12:
        $i18 = virtualinvoke r2.<android.graphics.Bitmap: int getWidth()>();

        $i19 = $i18 - i0;

        i5 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i19);

        $i21 = virtualinvoke r2.<android.graphics.Bitmap: int getHeight()>();

        $i22 = $i21 - i1;

        i6 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i22);

        $i23 = i5 / 2;

        $i24 = i6 / 2;

        r3 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>(r2, $i23, $i24, i0, i1);

        if r3 == r2 goto label05;

        if z1 != 0 goto label13;

        if r2 == r1 goto label05;

     label13:
        virtualinvoke r2.<android.graphics.Bitmap: void recycle()>();

        return r3;

     label14:
        r0 = null;

        goto label10;

     label15:
        $f6 = (float) i0;

        f2 = $f6 / f0;

        $b20 = f2 cmpg 0.9F;

        if $b20 < 0 goto label16;

        $b28 = f2 cmpl 1.0F;

        if $b28 <= 0 goto label17;

     label16:
        virtualinvoke r0.<android.graphics.Matrix: void setScale(float,float)>(f2, f2);

        goto label10;

     label17:
        r0 = null;

        goto label10;

     label18:
        r2 = r1;

        goto label11;
    }

    public static void <clinit>()
    {
        <android.media.ThumbnailUtils: int UNCONSTRAINED> = -1;

        <android.media.ThumbnailUtils: int TARGET_SIZE_MINI_THUMBNAIL> = 320;

        <android.media.ThumbnailUtils: int TARGET_SIZE_MICRO_THUMBNAIL> = 96;

        <android.media.ThumbnailUtils: java.lang.String TAG> = "ThumbnailUtils";

        <android.media.ThumbnailUtils: int OPTIONS_SCALE_UP> = 1;

        <android.media.ThumbnailUtils: int OPTIONS_RECYCLE_INPUT> = 2;

        <android.media.ThumbnailUtils: int OPTIONS_NONE> = 0;

        <android.media.ThumbnailUtils: int MAX_NUM_PIXELS_THUMBNAIL> = 196608;

        <android.media.ThumbnailUtils: int MAX_NUM_PIXELS_MICRO_THUMBNAIL> = 19200;

        return;
    }
}
