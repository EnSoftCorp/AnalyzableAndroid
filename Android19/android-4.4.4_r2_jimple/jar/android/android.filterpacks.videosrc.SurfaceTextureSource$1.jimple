class android.filterpacks.videosrc.SurfaceTextureSource$1 extends java.lang.Object implements android.graphics.SurfaceTexture$OnFrameAvailableListener
{
    final android.filterpacks.videosrc.SurfaceTextureSource this$0;

    void <init>(android.filterpacks.videosrc.SurfaceTextureSource)
    {
        android.filterpacks.videosrc.SurfaceTextureSource$1 r0;
        android.filterpacks.videosrc.SurfaceTextureSource r1;

        r0 := @this: android.filterpacks.videosrc.SurfaceTextureSource$1;

        r1 := @parameter0: android.filterpacks.videosrc.SurfaceTextureSource;

        r0.<android.filterpacks.videosrc.SurfaceTextureSource$1: android.filterpacks.videosrc.SurfaceTextureSource this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onFrameAvailable(android.graphics.SurfaceTexture)
    {
        android.filterpacks.videosrc.SurfaceTextureSource$1 r0;
        android.graphics.SurfaceTexture r1;
        boolean $z0;
        android.filterpacks.videosrc.SurfaceTextureSource $r2;
        android.os.ConditionVariable $r3;

        r0 := @this: android.filterpacks.videosrc.SurfaceTextureSource$1;

        r1 := @parameter0: android.graphics.SurfaceTexture;

        $z0 = staticinvoke <android.filterpacks.videosrc.SurfaceTextureSource: boolean access$000()>();

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("SurfaceTextureSource", "New frame from SurfaceTexture");

     label1:
        $r2 = r0.<android.filterpacks.videosrc.SurfaceTextureSource$1: android.filterpacks.videosrc.SurfaceTextureSource this$0>;

        $r3 = staticinvoke <android.filterpacks.videosrc.SurfaceTextureSource: android.os.ConditionVariable access$100(android.filterpacks.videosrc.SurfaceTextureSource)>($r2);

        virtualinvoke $r3.<android.os.ConditionVariable: void open()>();

        return;
    }
}
