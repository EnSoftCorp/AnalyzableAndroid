class com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask extends android.os.AsyncTask
{
    static final boolean $assertionsDisabled;
    private final android.content.Context mContext;
    private final java.lang.String mData;
    private java.io.File mTempFile;
    final com.android.org.chromium.media.MediaPlayerBridge this$0;

    static void <clinit>()
    {
        boolean z0, $z1;
        java.lang.Class $r0;

        $r0 = class "com/android/org/chromium/media/MediaPlayerBridge";

        $z1 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z1 != 0 goto label2;

        z0 = 1;

     label1:
        <com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask: boolean $assertionsDisabled> = z0;

        return;

     label2:
        z0 = 0;

        goto label1;
    }

    public void <init>(com.android.org.chromium.media.MediaPlayerBridge, android.content.Context, java.lang.String)
    {
        com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask r0;
        com.android.org.chromium.media.MediaPlayerBridge r1;
        android.content.Context r2;
        java.lang.String r3;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask;

        r1 := @parameter0: com.android.org.chromium.media.MediaPlayerBridge;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: java.lang.String;

        r0.<com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask: com.android.org.chromium.media.MediaPlayerBridge this$0> = r1;

        specialinvoke r0.<android.os.AsyncTask: void <init>()>();

        r0.<com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask: java.lang.String mData> = r3;

        r0.<com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask: android.content.Context mContext> = r2;

        return;
    }

    private void deleteFile()
    {
        com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask r0;
        java.io.File $r1, $r2, $r5;
        boolean $z0, $z1;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r7;
        java.lang.AssertionError $r8;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask;

        $r1 = r0.<com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask: java.io.File mTempFile>;

        if $r1 != null goto label2;

     label1:
        return;

     label2:
        $r2 = r0.<com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask: java.io.File mTempFile>;

        $z0 = virtualinvoke $r2.<java.io.File: boolean delete()>();

        if $z0 != 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to delete temporary file: ");

        $r5 = r0.<com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask: java.io.File mTempFile>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaPlayerBridge", $r7);

        $z1 = <com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask: boolean $assertionsDisabled>;

        if $z1 != 0 goto label1;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;
    }

    protected transient java.lang.Boolean doInBackground(java.lang.Void[])
    {
        com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask r0;
        java.lang.Void[] r1;
        java.io.FileOutputStream r2, r8, $r16;
        java.lang.Throwable r4, $r23, $r25;
        java.lang.Boolean r6, r12;
        android.util.Base64InputStream r9, $r18;
        byte[] r11, $r19;
        int i0;
        java.io.File $r14, $r15;
        java.io.ByteArrayInputStream $r17;
        java.lang.String $r20;
        java.io.IOException $r21, $r22, $r24, $r26, $r27;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask;

        r1 := @parameter0: java.lang.Void[];

        r2 = null;

     label01:
        $r14 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>("decoded", "mediadata");

        r0.<com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask: java.io.File mTempFile> = $r14;

        $r16 = new java.io.FileOutputStream;

        $r15 = r0.<com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask: java.io.File mTempFile>;

        specialinvoke $r16.<java.io.FileOutputStream: void <init>(java.io.File)>($r15);

        r8 = $r16;

     label02:
        $r18 = new android.util.Base64InputStream;

        $r17 = new java.io.ByteArrayInputStream;

        $r20 = r0.<com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask: java.lang.String mData>;

        $r19 = virtualinvoke $r20.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r17.<java.io.ByteArrayInputStream: void <init>(byte[])>($r19);

        specialinvoke $r18.<android.util.Base64InputStream: void <init>(java.io.InputStream,int)>($r17, 0);

        r9 = $r18;

        r11 = newarray (byte)[1024];

     label03:
        i0 = virtualinvoke r9.<android.util.Base64InputStream: int read(byte[])>(r11);

     label04:
        if i0 == -1 goto label12;

     label05:
        virtualinvoke r8.<java.io.FileOutputStream: void write(byte[],int,int)>(r11, 0, i0);

     label06:
        goto label03;

     label07:
        $r27 := @caughtexception;

        r2 = r8;

     label08:
        r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

     label09:
        if r2 == null goto label11;

     label10:
        virtualinvoke r2.<java.io.FileOutputStream: void close()>();

     label11:
        return r6;

     label12:
        virtualinvoke r9.<android.util.Base64InputStream: void close()>();

        r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

     label13:
        if r8 == null goto label15;

     label14:
        virtualinvoke r8.<java.io.FileOutputStream: void close()>();

     label15:
        return r12;

     label16:
        $r25 := @caughtexception;

        r4 = $r25;

     label17:
        if r2 == null goto label19;

     label18:
        virtualinvoke r2.<java.io.FileOutputStream: void close()>();

     label19:
        throw r4;

     label20:
        $r22 := @caughtexception;

        goto label15;

     label21:
        $r26 := @caughtexception;

        return r6;

     label22:
        $r24 := @caughtexception;

        goto label19;

     label23:
        $r23 := @caughtexception;

        r4 = $r23;

        r2 = r8;

        goto label17;

     label24:
        $r21 := @caughtexception;

        r2 = null;

        goto label08;

        catch java.io.IOException from label01 to label02 with label24;
        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.io.IOException from label02 to label03 with label07;
        catch java.lang.Throwable from label02 to label03 with label23;
        catch java.io.IOException from label03 to label04 with label07;
        catch java.lang.Throwable from label03 to label04 with label23;
        catch java.io.IOException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label23;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.io.IOException from label10 to label11 with label21;
        catch java.io.IOException from label12 to label13 with label07;
        catch java.lang.Throwable from label12 to label13 with label23;
        catch java.io.IOException from label14 to label15 with label20;
        catch java.io.IOException from label18 to label19 with label22;
    }

    protected volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask r0;
        java.lang.Object[] r1;
        java.lang.Void[] $r2;
        java.lang.Boolean $r3;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask;

        r1 := @parameter0: java.lang.Object[];

        $r2 = (java.lang.Void[]) r1;

        $r3 = virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask: java.lang.Boolean doInBackground(java.lang.Void[])>($r2);

        return $r3;
    }

    protected void onPostExecute(java.lang.Boolean)
    {
        com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask r0;
        java.lang.Boolean r1;
        boolean $z0, $z1, $z2;
        com.android.org.chromium.media.MediaPlayerBridge $r3, $r8, $r9, $r10;
        android.media.MediaPlayer $r4;
        java.io.File $r5;
        android.content.Context $r6;
        android.net.Uri $r7;
        long $l0, $l1;
        java.lang.AssertionError $r11;
        byte $b2;
        java.io.IOException $r12;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask;

        r1 := @parameter0: java.lang.Boolean;

        $z0 = virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask: boolean isCancelled()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask: void deleteFile()>();

        return;

     label1:
        $r3 = r0.<com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask: com.android.org.chromium.media.MediaPlayerBridge this$0>;

        $r4 = virtualinvoke $r3.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer getLocalPlayer()>();

        $r6 = r0.<com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask: android.content.Context mContext>;

        $r5 = r0.<com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask: java.io.File mTempFile>;

        $r7 = staticinvoke <android.net.Uri: android.net.Uri fromFile(java.io.File)>($r5);

        virtualinvoke $r4.<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)>($r6, $r7);

     label2:
        specialinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask: void deleteFile()>();

        $z1 = <com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask: boolean $assertionsDisabled>;

        if $z1 != 0 goto label4;

        $r10 = r0.<com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask: com.android.org.chromium.media.MediaPlayerBridge this$0>;

        $l1 = staticinvoke <com.android.org.chromium.media.MediaPlayerBridge: long access$000(com.android.org.chromium.media.MediaPlayerBridge)>($r10);

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label4;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label3:
        $r12 := @caughtexception;

        r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        goto label2;

     label4:
        $r9 = r0.<com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask: com.android.org.chromium.media.MediaPlayerBridge this$0>;

        $r8 = r0.<com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask: com.android.org.chromium.media.MediaPlayerBridge this$0>;

        $l0 = staticinvoke <com.android.org.chromium.media.MediaPlayerBridge: long access$000(com.android.org.chromium.media.MediaPlayerBridge)>($r8);

        $z2 = virtualinvoke r1.<java.lang.Boolean: boolean booleanValue()>();

        staticinvoke <com.android.org.chromium.media.MediaPlayerBridge: void access$100(com.android.org.chromium.media.MediaPlayerBridge,long,boolean)>($r9, $l0, $z2);

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    protected volatile void onPostExecute(java.lang.Object)
    {
        com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask r0;
        java.lang.Object r1;
        java.lang.Boolean $r2;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Boolean) r1;

        virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask: void onPostExecute(java.lang.Boolean)>($r2);

        return;
    }
}
