public class android.net.NetworkPolicy extends java.lang.Object implements android.os.Parcelable, java.lang.Comparable
{
    public static final android.os.Parcelable$Creator CREATOR;
    public static final int CYCLE_NONE;
    private static final long DEFAULT_MTU;
    public static final long LIMIT_DISABLED;
    public static final long SNOOZE_NEVER;
    public static final long WARNING_DISABLED;
    public int cycleDay;
    public java.lang.String cycleTimezone;
    public boolean inferred;
    public long lastLimitSnooze;
    public long lastWarningSnooze;
    public long limitBytes;
    public boolean metered;
    public final android.net.NetworkTemplate template;
    public long warningBytes;

    static void <clinit>()
    {
        android.net.NetworkPolicy$1 $r0;

        <android.net.NetworkPolicy: long WARNING_DISABLED> = -1L;

        <android.net.NetworkPolicy: long SNOOZE_NEVER> = -1L;

        <android.net.NetworkPolicy: long LIMIT_DISABLED> = -1L;

        <android.net.NetworkPolicy: long DEFAULT_MTU> = 1500L;

        <android.net.NetworkPolicy: int CYCLE_NONE> = -1;

        $r0 = new android.net.NetworkPolicy$1;

        specialinvoke $r0.<android.net.NetworkPolicy$1: void <init>()>();

        <android.net.NetworkPolicy: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(android.net.NetworkTemplate, int, java.lang.String, long, long, long, long, boolean, boolean)
    {
        android.net.NetworkPolicy r0;
        android.net.NetworkTemplate r1, $r4;
        int i0;
        java.lang.String r2, $r5;
        long l1, l2, l3, l4;
        boolean z0, z1;
        java.lang.Object $r3, $r6;

        r0 := @this: android.net.NetworkPolicy;

        r1 := @parameter0: android.net.NetworkTemplate;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        l1 := @parameter3: long;

        l2 := @parameter4: long;

        l3 := @parameter5: long;

        l4 := @parameter6: long;

        z0 := @parameter7: boolean;

        z1 := @parameter8: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "missing NetworkTemplate");

        $r4 = (android.net.NetworkTemplate) $r3;

        r0.<android.net.NetworkPolicy: android.net.NetworkTemplate template> = $r4;

        r0.<android.net.NetworkPolicy: int cycleDay> = i0;

        $r6 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "missing cycleTimezone");

        $r5 = (java.lang.String) $r6;

        r0.<android.net.NetworkPolicy: java.lang.String cycleTimezone> = $r5;

        r0.<android.net.NetworkPolicy: long warningBytes> = l1;

        r0.<android.net.NetworkPolicy: long limitBytes> = l2;

        r0.<android.net.NetworkPolicy: long lastWarningSnooze> = l3;

        r0.<android.net.NetworkPolicy: long lastLimitSnooze> = l4;

        r0.<android.net.NetworkPolicy: boolean metered> = z0;

        r0.<android.net.NetworkPolicy: boolean inferred> = z1;

        return;
    }

    public void <init>(android.net.NetworkTemplate, int, java.lang.String, long, long, boolean)
    {
        android.net.NetworkPolicy r0;
        android.net.NetworkTemplate r1;
        int i0;
        java.lang.String r2;
        long l1, l2;
        boolean z0;

        r0 := @this: android.net.NetworkPolicy;

        r1 := @parameter0: android.net.NetworkTemplate;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        l1 := @parameter3: long;

        l2 := @parameter4: long;

        z0 := @parameter5: boolean;

        specialinvoke r0.<android.net.NetworkPolicy: void <init>(android.net.NetworkTemplate,int,java.lang.String,long,long,long,long,boolean,boolean)>(r1, i0, r2, l1, l2, -1L, -1L, z0, 0);

        return;
    }

    public void <init>(android.os.Parcel)
    {
        android.net.NetworkPolicy r0;
        android.os.Parcel r1;
        boolean z0, z1;
        android.os.Parcelable $r2;
        android.net.NetworkTemplate $r3;
        int $i0, $i5, $i6;
        java.lang.String $r4;
        long $l1, $l2, $l3, $l4;

        r0 := @this: android.net.NetworkPolicy;

        r1 := @parameter0: android.os.Parcel;

        z0 = 1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(null);

        $r3 = (android.net.NetworkTemplate) $r2;

        r0.<android.net.NetworkPolicy: android.net.NetworkTemplate template> = $r3;

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.net.NetworkPolicy: int cycleDay> = $i0;

        $r4 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.net.NetworkPolicy: java.lang.String cycleTimezone> = $r4;

        $l1 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.net.NetworkPolicy: long warningBytes> = $l1;

        $l2 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.net.NetworkPolicy: long limitBytes> = $l2;

        $l3 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.net.NetworkPolicy: long lastWarningSnooze> = $l3;

        $l4 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.net.NetworkPolicy: long lastLimitSnooze> = $l4;

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i5 == 0 goto label3;

        z1 = z0;

     label1:
        r0.<android.net.NetworkPolicy: boolean metered> = z1;

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i6 == 0 goto label4;

     label2:
        r0.<android.net.NetworkPolicy: boolean inferred> = z0;

        return;

     label3:
        z1 = 0;

        goto label1;

     label4:
        z0 = 0;

        goto label2;
    }

    public void clearSnooze()
    {
        android.net.NetworkPolicy r0;

        r0 := @this: android.net.NetworkPolicy;

        r0.<android.net.NetworkPolicy: long lastWarningSnooze> = -1L;

        r0.<android.net.NetworkPolicy: long lastLimitSnooze> = -1L;

        return;
    }

    public int compareTo(android.net.NetworkPolicy)
    {
        android.net.NetworkPolicy r0, r1;
        long $l0, $l2, $l4, $l5;
        byte $b1, $b3, $b6;

        r0 := @this: android.net.NetworkPolicy;

        r1 := @parameter0: android.net.NetworkPolicy;

        if r1 == null goto label1;

        $l0 = r1.<android.net.NetworkPolicy: long limitBytes>;

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label2;

     label1:
        return -1;

     label2:
        $l2 = r0.<android.net.NetworkPolicy: long limitBytes>;

        $b3 = $l2 cmp -1L;

        if $b3 == 0 goto label3;

        $l5 = r1.<android.net.NetworkPolicy: long limitBytes>;

        $l4 = r0.<android.net.NetworkPolicy: long limitBytes>;

        $b6 = $l5 cmp $l4;

        if $b6 >= 0 goto label4;

     label3:
        return 1;

     label4:
        return 0;
    }

    public volatile int compareTo(java.lang.Object)
    {
        android.net.NetworkPolicy r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: android.net.NetworkPolicy;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.net.NetworkPolicy) r1;

        $i0 = virtualinvoke r0.<android.net.NetworkPolicy: int compareTo(android.net.NetworkPolicy)>($r2);

        return $i0;
    }

    public int describeContents()
    {
        android.net.NetworkPolicy r0;

        r0 := @this: android.net.NetworkPolicy;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        android.net.NetworkPolicy r0, r2;
        java.lang.Object r1;
        boolean z0, z1, z2, z3, z4, z5, z6, z7;
        int i0, i1;
        byte b2, b3, b4, b5;
        long $l6, $l7, $l8, $l9, $l10, $l11, $l12, $l13;
        java.lang.String $r3, $r4;
        android.net.NetworkTemplate $r5, $r6;

        r0 := @this: android.net.NetworkPolicy;

        r1 := @parameter0: java.lang.Object;

        z0 = r1 instanceof android.net.NetworkPolicy;

        z1 = 0;

        if z0 == 0 goto label1;

        r2 = (android.net.NetworkPolicy) r1;

        i0 = r0.<android.net.NetworkPolicy: int cycleDay>;

        i1 = r2.<android.net.NetworkPolicy: int cycleDay>;

        z1 = 0;

        if i0 != i1 goto label1;

        $l8 = r0.<android.net.NetworkPolicy: long warningBytes>;

        $l6 = r2.<android.net.NetworkPolicy: long warningBytes>;

        b2 = $l8 cmp $l6;

        z1 = 0;

        if b2 != 0 goto label1;

        $l10 = r0.<android.net.NetworkPolicy: long limitBytes>;

        $l7 = r2.<android.net.NetworkPolicy: long limitBytes>;

        b3 = $l10 cmp $l7;

        z1 = 0;

        if b3 != 0 goto label1;

        $l12 = r0.<android.net.NetworkPolicy: long lastWarningSnooze>;

        $l9 = r2.<android.net.NetworkPolicy: long lastWarningSnooze>;

        b4 = $l12 cmp $l9;

        z1 = 0;

        if b4 != 0 goto label1;

        $l13 = r0.<android.net.NetworkPolicy: long lastLimitSnooze>;

        $l11 = r2.<android.net.NetworkPolicy: long lastLimitSnooze>;

        b5 = $l13 cmp $l11;

        z1 = 0;

        if b5 != 0 goto label1;

        z2 = r0.<android.net.NetworkPolicy: boolean metered>;

        z3 = r2.<android.net.NetworkPolicy: boolean metered>;

        z1 = 0;

        if z2 != z3 goto label1;

        z4 = r0.<android.net.NetworkPolicy: boolean inferred>;

        z5 = r2.<android.net.NetworkPolicy: boolean inferred>;

        z1 = 0;

        if z4 != z5 goto label1;

        $r4 = r0.<android.net.NetworkPolicy: java.lang.String cycleTimezone>;

        $r3 = r2.<android.net.NetworkPolicy: java.lang.String cycleTimezone>;

        z6 = staticinvoke <com.android.internal.util.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r4, $r3);

        z1 = 0;

        if z6 == 0 goto label1;

        $r5 = r0.<android.net.NetworkPolicy: android.net.NetworkTemplate template>;

        $r6 = r2.<android.net.NetworkPolicy: android.net.NetworkTemplate template>;

        z7 = staticinvoke <com.android.internal.util.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6);

        z1 = 0;

        if z7 == 0 goto label1;

        z1 = 1;

     label1:
        return z1;
    }

    public boolean hasCycle()
    {
        android.net.NetworkPolicy r0;
        int $i0;

        r0 := @this: android.net.NetworkPolicy;

        $i0 = r0.<android.net.NetworkPolicy: int cycleDay>;

        if $i0 == -1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public int hashCode()
    {
        android.net.NetworkPolicy r0;
        java.lang.Object[] r1;
        android.net.NetworkTemplate $r2;
        int $i0, $i5;
        java.lang.Integer $r3;
        java.lang.String $r4;
        long $l1, $l2, $l3, $l4;
        java.lang.Long $r5, $r6, $r7, $r8;
        boolean $z0, $z1;
        java.lang.Boolean $r9, $r10;

        r0 := @this: android.net.NetworkPolicy;

        r1 = newarray (java.lang.Object)[9];

        $r2 = r0.<android.net.NetworkPolicy: android.net.NetworkTemplate template>;

        r1[0] = $r2;

        $i0 = r0.<android.net.NetworkPolicy: int cycleDay>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        r1[1] = $r3;

        $r4 = r0.<android.net.NetworkPolicy: java.lang.String cycleTimezone>;

        r1[2] = $r4;

        $l1 = r0.<android.net.NetworkPolicy: long warningBytes>;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        r1[3] = $r5;

        $l2 = r0.<android.net.NetworkPolicy: long limitBytes>;

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        r1[4] = $r6;

        $l3 = r0.<android.net.NetworkPolicy: long lastWarningSnooze>;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        r1[5] = $r7;

        $l4 = r0.<android.net.NetworkPolicy: long lastLimitSnooze>;

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        r1[6] = $r8;

        $z0 = r0.<android.net.NetworkPolicy: boolean metered>;

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        r1[7] = $r9;

        $z1 = r0.<android.net.NetworkPolicy: boolean inferred>;

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        r1[8] = $r10;

        $i5 = staticinvoke <com.android.internal.util.Objects: int hashCode(java.lang.Object[])>(r1);

        return $i5;
    }

    public boolean isOverLimit(long)
    {
        android.net.NetworkPolicy r0;
        long l0, l1, $l2, $l4;
        byte $b3, $b5;

        r0 := @this: android.net.NetworkPolicy;

        l0 := @parameter0: long;

        l1 = l0 + 3000L;

        $l2 = r0.<android.net.NetworkPolicy: long limitBytes>;

        $b3 = $l2 cmp -1L;

        if $b3 == 0 goto label1;

        $l4 = r0.<android.net.NetworkPolicy: long limitBytes>;

        $b5 = l1 cmp $l4;

        if $b5 < 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isOverWarning(long)
    {
        android.net.NetworkPolicy r0;
        long l0, $l1, $l3;
        byte $b2, $b4;

        r0 := @this: android.net.NetworkPolicy;

        l0 := @parameter0: long;

        $l1 = r0.<android.net.NetworkPolicy: long warningBytes>;

        $b2 = $l1 cmp -1L;

        if $b2 == 0 goto label1;

        $l3 = r0.<android.net.NetworkPolicy: long warningBytes>;

        $b4 = l0 cmp $l3;

        if $b4 < 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.String toString()
    {
        android.net.NetworkPolicy r0;
        java.lang.StringBuilder r1, $r2, $r3, $r5, $r7, $r9, $r12, $r14, $r15, $r18, $r19, $r22;
        android.net.NetworkTemplate $r4;
        int $i0;
        java.lang.String $r10, $r23;
        long $l1, $l2, $l3, $l4;
        boolean $z0, $z1;

        r0 := @this: android.net.NetworkPolicy;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("NetworkPolicy");

        r1 = $r2;

        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r4 = r0.<android.net.NetworkPolicy: android.net.NetworkTemplate template>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]:");

        $r7 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cycleDay=");

        $i0 = r0.<android.net.NetworkPolicy: int cycleDay>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", cycleTimezone=");

        $r10 = r0.<android.net.NetworkPolicy: java.lang.String cycleTimezone>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", warningBytes=");

        $l1 = r0.<android.net.NetworkPolicy: long warningBytes>;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r14 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", limitBytes=");

        $l2 = r0.<android.net.NetworkPolicy: long limitBytes>;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r15 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", lastWarningSnooze=");

        $l3 = r0.<android.net.NetworkPolicy: long lastWarningSnooze>;

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r18 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", lastLimitSnooze=");

        $l4 = r0.<android.net.NetworkPolicy: long lastLimitSnooze>;

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        $r19 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", metered=");

        $z0 = r0.<android.net.NetworkPolicy: boolean metered>;

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r22 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", inferred=");

        $z1 = r0.<android.net.NetworkPolicy: boolean inferred>;

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r23 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r23;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.net.NetworkPolicy r0;
        android.os.Parcel r1;
        int i0, $i3;
        byte b1, b2;
        android.net.NetworkTemplate $r2;
        java.lang.String $r3;
        long $l4, $l5, $l6, $l7;
        boolean $z0, $z1;

        r0 := @this: android.net.NetworkPolicy;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        b1 = 1;

        $r2 = r0.<android.net.NetworkPolicy: android.net.NetworkTemplate template>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r2, i0);

        $i3 = r0.<android.net.NetworkPolicy: int cycleDay>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $r3 = r0.<android.net.NetworkPolicy: java.lang.String cycleTimezone>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        $l4 = r0.<android.net.NetworkPolicy: long warningBytes>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l4);

        $l5 = r0.<android.net.NetworkPolicy: long limitBytes>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l5);

        $l6 = r0.<android.net.NetworkPolicy: long lastWarningSnooze>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l6);

        $l7 = r0.<android.net.NetworkPolicy: long lastLimitSnooze>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l7);

        $z0 = r0.<android.net.NetworkPolicy: boolean metered>;

        if $z0 == 0 goto label3;

        b2 = b1;

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b2);

        $z1 = r0.<android.net.NetworkPolicy: boolean inferred>;

        if $z1 == 0 goto label4;

     label2:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        return;

     label3:
        b2 = 0;

        goto label1;

     label4:
        b1 = 0;

        goto label2;
    }
}
