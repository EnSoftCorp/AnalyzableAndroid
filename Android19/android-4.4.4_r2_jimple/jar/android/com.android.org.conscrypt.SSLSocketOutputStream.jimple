public class com.android.org.conscrypt.SSLSocketOutputStream extends java.io.OutputStream
{
    private final com.android.org.conscrypt.SSLSocketImpl owner;

    protected void <init>(com.android.org.conscrypt.SSLSocketImpl)
    {
        com.android.org.conscrypt.SSLSocketOutputStream r0;
        com.android.org.conscrypt.SSLSocketImpl r1;

        r0 := @this: com.android.org.conscrypt.SSLSocketOutputStream;

        r1 := @parameter0: com.android.org.conscrypt.SSLSocketImpl;

        specialinvoke r0.<java.io.OutputStream: void <init>()>();

        r0.<com.android.org.conscrypt.SSLSocketOutputStream: com.android.org.conscrypt.SSLSocketImpl owner> = r1;

        return;
    }

    public void write(int) throws java.io.IOException
    {
        com.android.org.conscrypt.SSLSocketOutputStream r0;
        int i0;

        r0 := @this: com.android.org.conscrypt.SSLSocketOutputStream;

        i0 := @parameter0: int;

        staticinvoke <libcore.io.Streams: void writeSingleByte(java.io.OutputStream,int)>(r0, i0);

        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        com.android.org.conscrypt.SSLSocketOutputStream r0;
        byte[] r1;
        int i0, i1;
        com.android.org.conscrypt.SSLSocketImpl $r2;

        r0 := @this: com.android.org.conscrypt.SSLSocketOutputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.org.conscrypt.SSLSocketOutputStream: com.android.org.conscrypt.SSLSocketImpl owner>;

        virtualinvoke $r2.<com.android.org.conscrypt.SSLSocketImpl: void writeAppData(byte[],int,int)>(r1, i0, i1);

        return;
    }
}
