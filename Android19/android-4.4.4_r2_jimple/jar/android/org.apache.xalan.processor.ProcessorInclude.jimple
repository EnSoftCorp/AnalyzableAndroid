public class org.apache.xalan.processor.ProcessorInclude extends org.apache.xalan.processor.XSLTElementProcessor
{
    static final long serialVersionUID;
    private java.lang.String m_href;

    public void <init>()
    {
        org.apache.xalan.processor.ProcessorInclude r0;

        r0 := @this: org.apache.xalan.processor.ProcessorInclude;

        specialinvoke r0.<org.apache.xalan.processor.XSLTElementProcessor: void <init>()>();

        r0.<org.apache.xalan.processor.ProcessorInclude: java.lang.String m_href> = null;

        return;
    }

    private java.lang.String getBaseURIOfIncludedStylesheet(org.apache.xalan.processor.StylesheetHandler, javax.xml.transform.Source) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.processor.ProcessorInclude r0;
        org.apache.xalan.processor.StylesheetHandler r1;
        javax.xml.transform.Source r2;
        java.lang.String r3, $r4, $r5, $r6;

        r0 := @this: org.apache.xalan.processor.ProcessorInclude;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter1: javax.xml.transform.Source;

        if r2 == null goto label1;

        r3 = interfaceinvoke r2.<javax.xml.transform.Source: java.lang.String getSystemId()>();

        if r3 == null goto label1;

        return r3;

     label1:
        $r4 = virtualinvoke r0.<org.apache.xalan.processor.ProcessorInclude: java.lang.String getHref()>();

        $r5 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: java.lang.String getBaseIdentifier()>();

        $r6 = staticinvoke <org.apache.xml.utils.SystemIDResolver: java.lang.String getAbsoluteURI(java.lang.String,java.lang.String)>($r4, $r5);

        return $r6;
    }

    private javax.xml.transform.Source getSourceFromUriResolver(org.apache.xalan.processor.StylesheetHandler) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.processor.ProcessorInclude r0;
        org.apache.xalan.processor.StylesheetHandler r1;
        javax.xml.transform.URIResolver r2;
        javax.xml.transform.Source r3;
        org.apache.xalan.processor.TransformerFactoryImpl $r4;
        java.lang.String $r5, $r6;

        r0 := @this: org.apache.xalan.processor.ProcessorInclude;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        $r4 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.TransformerFactoryImpl getStylesheetProcessor()>();

        r2 = virtualinvoke $r4.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.URIResolver getURIResolver()>();

        r3 = null;

        if r2 == null goto label1;

        $r5 = virtualinvoke r0.<org.apache.xalan.processor.ProcessorInclude: java.lang.String getHref()>();

        $r6 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: java.lang.String getBaseIdentifier()>();

        r3 = interfaceinvoke r2.<javax.xml.transform.URIResolver: javax.xml.transform.Source resolve(java.lang.String,java.lang.String)>($r5, $r6);

     label1:
        return r3;
    }

    public java.lang.String getHref()
    {
        org.apache.xalan.processor.ProcessorInclude r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xalan.processor.ProcessorInclude;

        $r1 = r0.<org.apache.xalan.processor.ProcessorInclude: java.lang.String m_href>;

        return $r1;
    }

    protected java.lang.String getStylesheetInclErr()
    {
        org.apache.xalan.processor.ProcessorInclude r0;

        r0 := @this: org.apache.xalan.processor.ProcessorInclude;

        return "ER_STYLESHEET_INCLUDES_ITSELF";
    }

    protected int getStylesheetType()
    {
        org.apache.xalan.processor.ProcessorInclude r0;

        r0 := @this: org.apache.xalan.processor.ProcessorInclude;

        return 2;
    }

    protected void parse(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        org.apache.xalan.processor.ProcessorInclude r0;
        org.apache.xalan.processor.StylesheetHandler r1;
        java.lang.String r2, r3, r4, r24, r26, $r32, $r37, $r38, $r43, $r47, $r51;
        org.xml.sax.Attributes r5;
        javax.xml.transform.URIResolver r6;
        javax.xml.transform.Source r7, r8, r9, r11;
        javax.xml.transform.TransformerException r10, r28, $r50, $r52, $r55;
        boolean z0, z1, $z2;
        org.xml.sax.XMLReader r12, r23;
        org.xml.sax.InputSource r13;
        java.lang.Throwable r14, $r58;
        java.io.IOException r15, $r44, $r60;
        java.lang.Object[] r16;
        javax.xml.parsers.ParserConfigurationException r19, $r56;
        javax.xml.parsers.FactoryConfigurationError r20, $r53;
        javax.xml.parsers.SAXParserFactory r21;
        org.xml.sax.SAXException r22, r31, $r46, $r54, $r57, $r61;
        org.w3c.dom.Node r27;
        org.apache.xalan.processor.TransformerFactoryImpl $r29, $r33;
        org.apache.xml.utils.TreeWalker r30, $r42;
        javax.xml.transform.sax.SAXSource $r35;
        javax.xml.parsers.SAXParser $r36;
        javax.xml.transform.dom.DOMSource $r39;
        javax.xml.transform.stream.StreamSource $r40;
        org.apache.xml.utils.DOM2Helper $r41;
        java.lang.AbstractMethodError $r48;
        java.lang.NoSuchMethodError $r49;

        r0 := @this: org.apache.xalan.processor.ProcessorInclude;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: org.xml.sax.Attributes;

        $r29 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.TransformerFactoryImpl getStylesheetProcessor()>();

        r6 = virtualinvoke $r29.<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.URIResolver getURIResolver()>();

        r7 = null;

        if r6 == null goto label15;

     label01:
        r7 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: javax.xml.transform.Source peekSourceFromURIResolver()>();

     label02:
        if r7 == null goto label15;

     label03:
        $z2 = r7 instanceof javax.xml.transform.dom.DOMSource;

        if $z2 == 0 goto label15;

        $r39 = (javax.xml.transform.dom.DOMSource) r7;

        r27 = virtualinvoke $r39.<javax.xml.transform.dom.DOMSource: org.w3c.dom.Node getNode()>();

        r26 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: java.lang.String peekImportURL()>();

     label04:
        if r26 == null goto label06;

     label05:
        virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: void pushBaseIndentifier(java.lang.String)>(r26);

     label06:
        $r42 = new org.apache.xml.utils.TreeWalker;

        $r41 = new org.apache.xml.utils.DOM2Helper;

        specialinvoke $r41.<org.apache.xml.utils.DOM2Helper: void <init>()>();

        specialinvoke $r42.<org.apache.xml.utils.TreeWalker: void <init>(org.xml.sax.ContentHandler,org.apache.xml.utils.DOMHelper,java.lang.String)>(r1, $r41, r26);

        r30 = $r42;

     label07:
        virtualinvoke r30.<org.apache.xml.utils.TreeWalker: void traverse(org.w3c.dom.Node)>(r27);

     label08:
        if r26 == null goto label48;

     label09:
        virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: java.lang.String popBaseIndentifier()>();

     label10:
        return;

     label11:
        $r54 := @caughtexception;

        r31 = $r54;

     label12:
        $r55 = new javax.xml.transform.TransformerException;

        specialinvoke $r55.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r31);

        r28 = $r55;

        throw r28;

     label13:
        $r60 := @caughtexception;

        r15 = $r60;

     label14:
        r16 = newarray (java.lang.Object)[1];

        $r43 = virtualinvoke r0.<org.apache.xalan.processor.ProcessorInclude: java.lang.String getHref()>();

        r16[0] = $r43;

        virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: void error(java.lang.String,java.lang.Object[],java.lang.Exception)>("ER_IOEXCEPTION", r16, r15);

        return;

     label15:
        r8 = r7;

        if r8 != null goto label47;

     label16:
        $r38 = virtualinvoke r0.<org.apache.xalan.processor.ProcessorInclude: java.lang.String getHref()>();

        $r37 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: java.lang.String getBaseIdentifier()>();

        r24 = staticinvoke <org.apache.xml.utils.SystemIDResolver: java.lang.String getAbsoluteURI(java.lang.String,java.lang.String)>($r38, $r37);

        $r40 = new javax.xml.transform.stream.StreamSource;

        specialinvoke $r40.<javax.xml.transform.stream.StreamSource: void <init>(java.lang.String)>(r24);

        r9 = $r40;

     label17:
        r11 = virtualinvoke r0.<org.apache.xalan.processor.ProcessorInclude: javax.xml.transform.Source processSource(org.apache.xalan.processor.StylesheetHandler,javax.xml.transform.Source)>(r1, r9);

        z0 = r11 instanceof javax.xml.transform.sax.SAXSource;

     label18:
        r12 = null;

        if z0 == 0 goto label20;

     label19:
        $r35 = (javax.xml.transform.sax.SAXSource) r11;

        r12 = virtualinvoke $r35.<javax.xml.transform.sax.SAXSource: org.xml.sax.XMLReader getXMLReader()>();

     label20:
        r13 = staticinvoke <javax.xml.transform.sax.SAXSource: org.xml.sax.InputSource sourceToInputSource(javax.xml.transform.Source)>(r11);

     label21:
        if r12 != null goto label27;

     label22:
        r21 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();

        virtualinvoke r21.<javax.xml.parsers.SAXParserFactory: void setNamespaceAware(boolean)>(1);

        $r33 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.TransformerFactoryImpl getStylesheetProcessor()>();

        z1 = virtualinvoke $r33.<org.apache.xalan.processor.TransformerFactoryImpl: boolean isSecureProcessing()>();

     label23:
        if z1 == 0 goto label25;

     label24:
        virtualinvoke r21.<javax.xml.parsers.SAXParserFactory: void setFeature(java.lang.String,boolean)>("http://javax.xml.XMLConstants/feature/secure-processing", 1);

     label25:
        $r36 = virtualinvoke r21.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();

        r23 = virtualinvoke $r36.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();

     label26:
        r12 = r23;

     label27:
        if r12 != null goto label29;

     label28:
        r12 = staticinvoke <org.xml.sax.helpers.XMLReaderFactory: org.xml.sax.XMLReader createXMLReader()>();

     label29:
        if r12 == null goto label48;

     label30:
        interfaceinvoke r12.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>(r1);

        $r32 = virtualinvoke r13.<org.xml.sax.InputSource: java.lang.String getSystemId()>();

        virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: void pushBaseIndentifier(java.lang.String)>($r32);

     label31:
        interfaceinvoke r12.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>(r13);

     label32:
        virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: java.lang.String popBaseIndentifier()>();

     label33:
        return;

     label34:
        $r52 := @caughtexception;

        r10 = $r52;

     label35:
        $r51 = virtualinvoke r10.<javax.xml.transform.TransformerException: java.lang.String getMessage()>();

        virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: void error(java.lang.String,java.lang.Exception)>($r51, r10);

        return;

     label36:
        $r56 := @caughtexception;

        r19 = $r56;

     label37:
        $r57 = new org.xml.sax.SAXException;

        specialinvoke $r57.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>(r19);

        r22 = $r57;

        throw r22;

     label38:
        $r53 := @caughtexception;

        r20 = $r53;

     label39:
        $r46 = new org.xml.sax.SAXException;

        $r47 = virtualinvoke r20.<javax.xml.parsers.FactoryConfigurationError: java.lang.String toString()>();

        specialinvoke $r46.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r47);

        throw $r46;

     label40:
        $r58 := @caughtexception;

        r14 = $r58;

     label41:
        virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: java.lang.String popBaseIndentifier()>();

        throw r14;

     label42:
        $r50 := @caughtexception;

        r10 = $r50;

        goto label35;

     label43:
        $r44 := @caughtexception;

        r15 = $r44;

        goto label14;

     label44:
        $r48 := @caughtexception;

        goto label27;

     label45:
        $r49 := @caughtexception;

        goto label27;

     label46:
        $r61 := @caughtexception;

        goto label25;

     label47:
        r9 = r8;

        goto label17;

     label48:
        return;

        catch java.io.IOException from label01 to label02 with label13;
        catch javax.xml.transform.TransformerException from label01 to label02 with label34;
        catch java.io.IOException from label03 to label04 with label13;
        catch javax.xml.transform.TransformerException from label03 to label04 with label34;
        catch java.io.IOException from label05 to label06 with label13;
        catch javax.xml.transform.TransformerException from label05 to label06 with label34;
        catch java.io.IOException from label06 to label07 with label13;
        catch javax.xml.transform.TransformerException from label06 to label07 with label34;
        catch org.xml.sax.SAXException from label07 to label08 with label11;
        catch java.io.IOException from label07 to label08 with label13;
        catch javax.xml.transform.TransformerException from label07 to label08 with label34;
        catch java.io.IOException from label09 to label10 with label13;
        catch javax.xml.transform.TransformerException from label09 to label10 with label34;
        catch java.io.IOException from label12 to label13 with label13;
        catch javax.xml.transform.TransformerException from label12 to label13 with label34;
        catch java.io.IOException from label16 to label17 with label43;
        catch javax.xml.transform.TransformerException from label16 to label17 with label42;
        catch java.io.IOException from label17 to label18 with label13;
        catch javax.xml.transform.TransformerException from label17 to label18 with label34;
        catch java.io.IOException from label19 to label20 with label13;
        catch javax.xml.transform.TransformerException from label19 to label20 with label34;
        catch java.io.IOException from label20 to label21 with label13;
        catch javax.xml.transform.TransformerException from label20 to label21 with label34;
        catch javax.xml.parsers.ParserConfigurationException from label22 to label23 with label36;
        catch javax.xml.parsers.FactoryConfigurationError from label22 to label23 with label38;
        catch java.lang.NoSuchMethodError from label22 to label23 with label45;
        catch java.lang.AbstractMethodError from label22 to label23 with label44;
        catch java.io.IOException from label22 to label23 with label13;
        catch javax.xml.transform.TransformerException from label22 to label23 with label34;
        catch org.xml.sax.SAXException from label24 to label25 with label46;
        catch javax.xml.parsers.ParserConfigurationException from label24 to label25 with label36;
        catch javax.xml.parsers.FactoryConfigurationError from label24 to label25 with label38;
        catch java.lang.NoSuchMethodError from label24 to label25 with label45;
        catch java.lang.AbstractMethodError from label24 to label25 with label44;
        catch java.io.IOException from label24 to label25 with label13;
        catch javax.xml.transform.TransformerException from label24 to label25 with label34;
        catch javax.xml.parsers.ParserConfigurationException from label25 to label26 with label36;
        catch javax.xml.parsers.FactoryConfigurationError from label25 to label26 with label38;
        catch java.lang.NoSuchMethodError from label25 to label26 with label45;
        catch java.lang.AbstractMethodError from label25 to label26 with label44;
        catch java.io.IOException from label25 to label26 with label13;
        catch javax.xml.transform.TransformerException from label25 to label26 with label34;
        catch java.io.IOException from label28 to label29 with label13;
        catch javax.xml.transform.TransformerException from label28 to label29 with label34;
        catch java.io.IOException from label30 to label31 with label13;
        catch javax.xml.transform.TransformerException from label30 to label31 with label34;
        catch java.lang.Throwable from label31 to label32 with label40;
        catch java.io.IOException from label32 to label33 with label13;
        catch javax.xml.transform.TransformerException from label32 to label33 with label34;
        catch java.io.IOException from label37 to label38 with label13;
        catch javax.xml.transform.TransformerException from label37 to label38 with label34;
        catch java.io.IOException from label39 to label40 with label13;
        catch javax.xml.transform.TransformerException from label39 to label40 with label34;
        catch java.io.IOException from label41 to label42 with label13;
        catch javax.xml.transform.TransformerException from label41 to label42 with label34;
    }

    protected javax.xml.transform.Source processSource(org.apache.xalan.processor.StylesheetHandler, javax.xml.transform.Source)
    {
        org.apache.xalan.processor.ProcessorInclude r0;
        org.apache.xalan.processor.StylesheetHandler r1;
        javax.xml.transform.Source r2;

        r0 := @this: org.apache.xalan.processor.ProcessorInclude;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter1: javax.xml.transform.Source;

        return r2;
    }

    public void setHref(java.lang.String)
    {
        org.apache.xalan.processor.ProcessorInclude r0;
        java.lang.String r1;

        r0 := @this: org.apache.xalan.processor.ProcessorInclude;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xalan.processor.ProcessorInclude: java.lang.String m_href> = r1;

        return;
    }

    public void startElement(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        org.apache.xalan.processor.ProcessorInclude r0;
        org.apache.xalan.processor.StylesheetHandler r1;
        java.lang.String r2, r3, r4, r8, $r12, $r14, $r20;
        org.xml.sax.Attributes r5;
        javax.xml.transform.TransformerException r6, $r18;
        javax.xml.transform.Source r7;
        int i0, $i1;
        java.lang.Throwable r9, $r17;
        boolean $z0;
        org.xml.sax.SAXException $r13;
        java.lang.Object[] $r15;

        r0 := @this: org.apache.xalan.processor.ProcessorInclude;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: org.xml.sax.Attributes;

        virtualinvoke r0.<org.apache.xalan.processor.ProcessorInclude: void setPropertiesFromAttributes(org.apache.xalan.processor.StylesheetHandler,java.lang.String,org.xml.sax.Attributes,org.apache.xalan.templates.ElemTemplateElement)>(r1, r4, r5, r0);

     label1:
        r7 = specialinvoke r0.<org.apache.xalan.processor.ProcessorInclude: javax.xml.transform.Source getSourceFromUriResolver(org.apache.xalan.processor.StylesheetHandler)>(r1);

        r8 = specialinvoke r0.<org.apache.xalan.processor.ProcessorInclude: java.lang.String getBaseURIOfIncludedStylesheet(org.apache.xalan.processor.StylesheetHandler,javax.xml.transform.Source)>(r1, r7);

        $z0 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: boolean importStackContains(java.lang.String)>(r8);

        if $z0 == 0 goto label3;

        $r13 = new org.xml.sax.SAXException;

        $r12 = virtualinvoke r0.<org.apache.xalan.processor.ProcessorInclude: java.lang.String getStylesheetInclErr()>();

        $r15 = newarray (java.lang.Object)[1];

        $r15[0] = r8;

        $r14 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>($r12, $r15);

        specialinvoke $r13.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r14);

        throw $r13;

     label2:
        $r18 := @caughtexception;

        r6 = $r18;

        $r20 = virtualinvoke r6.<javax.xml.transform.TransformerException: java.lang.String getMessage()>();

        virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: void error(java.lang.String,java.lang.Exception)>($r20, r6);

        return;

     label3:
        virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: void pushImportURL(java.lang.String)>(r8);

        virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: void pushImportSource(javax.xml.transform.Source)>(r7);

        i0 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: int getStylesheetType()>();

        $i1 = virtualinvoke r0.<org.apache.xalan.processor.ProcessorInclude: int getStylesheetType()>();

        virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: void setStylesheetType(int)>($i1);

        virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: void pushNewNamespaceSupport()>();

     label4:
        virtualinvoke r0.<org.apache.xalan.processor.ProcessorInclude: void parse(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>(r1, r2, r3, r4, r5);

     label5:
        virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: void setStylesheetType(int)>(i0);

        virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: java.lang.String popImportURL()>();

        virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: javax.xml.transform.Source popImportSource()>();

        virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: void popNamespaceSupport()>();

     label6:
        return;

     label7:
        $r17 := @caughtexception;

        r9 = $r17;

     label8:
        virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: void setStylesheetType(int)>(i0);

        virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: java.lang.String popImportURL()>();

        virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: javax.xml.transform.Source popImportSource()>();

        virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: void popNamespaceSupport()>();

        throw r9;

     label9:
        nop;

        catch javax.xml.transform.TransformerException from label1 to label2 with label2;
        catch javax.xml.transform.TransformerException from label3 to label4 with label2;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch javax.xml.transform.TransformerException from label5 to label6 with label2;
        catch javax.xml.transform.TransformerException from label8 to label9 with label2;
    }

    public static void <clinit>()
    {
        <org.apache.xalan.processor.ProcessorInclude: long serialVersionUID> = -4570078731972673481L;

        return;
    }
}
