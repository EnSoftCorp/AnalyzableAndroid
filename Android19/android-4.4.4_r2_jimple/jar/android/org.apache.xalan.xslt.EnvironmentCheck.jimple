public class org.apache.xalan.xslt.EnvironmentCheck extends java.lang.Object
{
    public static final java.lang.String CLASS_NOTPRESENT;
    public static final java.lang.String CLASS_PRESENT;
    public static final java.lang.String ERROR;
    public static final java.lang.String ERROR_FOUND;
    public static final java.lang.String FOUNDCLASSES;
    public static final java.lang.String VERSION;
    public static final java.lang.String WARNING;
    private static java.util.Hashtable jarVersions;
    public java.lang.String[] jarNames;
    protected java.io.PrintWriter outWriter;

    static void <clinit>()
    {
        java.util.Hashtable $r0, $r2, $r5, $r8, $r11, $r14, $r16, $r21, $r22, $r27, $r28, $r33, $r34, $r36, $r43, $r45, $r46, $r49, $r54, $r56, $r59, $r61, $r64, $r67, $r69, $r73, $r78, $r83, $r85, $r86, $r89, $r90, $r92, $r99, $r100, $r104, $r109, $r110, $r112, $r115, $r118, $r122, $r125, $r128, $r133, $r134, $r137, $r138, $r143, $r144, $r147, $r150, $r154, $r157, $r161, $r166, $r170, $r172, $r175, $r179, $r181, $r182, $r185, $r186, $r188, $r195, $r197, $r198, $r200, $r207, $r209, $r212, $r214;
        java.lang.Long $r1, $r4, $r7, $r10, $r13, $r17, $r18, $r23, $r24, $r29, $r30, $r32, $r39, $r41, $r42, $r44, $r50, $r52, $r55, $r57, $r62, $r66, $r68, $r71, $r72, $r75, $r77, $r80, $r87, $r91, $r93, $r94, $r97, $r98, $r103, $r107, $r108, $r113, $r116, $r119, $r120, $r123, $r126, $r129, $r130, $r135, $r139, $r140, $r146, $r149, $r153, $r156, $r159, $r162, $r164, $r167, $r168, $r171, $r173, $r177, $r178, $r180, $r184, $r191, $r192, $r199, $r201, $r202, $r204, $r211, $r213, $r216;

        <org.apache.xalan.xslt.EnvironmentCheck: java.lang.String WARNING> = "WARNING.";

        <org.apache.xalan.xslt.EnvironmentCheck: java.lang.String VERSION> = "version.";

        <org.apache.xalan.xslt.EnvironmentCheck: java.lang.String FOUNDCLASSES> = "foundclasses.";

        <org.apache.xalan.xslt.EnvironmentCheck: java.lang.String ERROR_FOUND> = "At least one error was found!";

        <org.apache.xalan.xslt.EnvironmentCheck: java.lang.String ERROR> = "ERROR.";

        <org.apache.xalan.xslt.EnvironmentCheck: java.lang.String CLASS_PRESENT> = "present-unknown-version";

        <org.apache.xalan.xslt.EnvironmentCheck: java.lang.String CLASS_NOTPRESENT> = "not-present";

        $r0 = new java.util.Hashtable;

        specialinvoke $r0.<java.util.Hashtable: void <init>()>();

        <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions> = $r0;

        $r2 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r1 = new java.lang.Long;

        specialinvoke $r1.<java.lang.Long: void <init>(long)>(857192L);

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, "xalan.jar from xalan-j_1_1");

        $r5 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r4 = new java.lang.Long;

        specialinvoke $r4.<java.lang.Long: void <init>(long)>(440237L);

        virtualinvoke $r5.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, "xalan.jar from xalan-j_1_2");

        $r8 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r7 = new java.lang.Long;

        specialinvoke $r7.<java.lang.Long: void <init>(long)>(436094L);

        virtualinvoke $r8.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, "xalan.jar from xalan-j_1_2_1");

        $r11 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r10 = new java.lang.Long;

        specialinvoke $r10.<java.lang.Long: void <init>(long)>(426249L);

        virtualinvoke $r11.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, "xalan.jar from xalan-j_1_2_2");

        $r14 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r13 = new java.lang.Long;

        specialinvoke $r13.<java.lang.Long: void <init>(long)>(702536L);

        virtualinvoke $r14.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, "xalan.jar from xalan-j_2_0_0");

        $r16 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r17 = new java.lang.Long;

        specialinvoke $r17.<java.lang.Long: void <init>(long)>(720930L);

        virtualinvoke $r16.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, "xalan.jar from xalan-j_2_0_1");

        $r21 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r18 = new java.lang.Long;

        specialinvoke $r18.<java.lang.Long: void <init>(long)>(732330L);

        virtualinvoke $r21.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, "xalan.jar from xalan-j_2_1_0");

        $r22 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r23 = new java.lang.Long;

        specialinvoke $r23.<java.lang.Long: void <init>(long)>(872241L);

        virtualinvoke $r22.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r23, "xalan.jar from xalan-j_2_2_D10");

        $r27 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r24 = new java.lang.Long;

        specialinvoke $r24.<java.lang.Long: void <init>(long)>(882739L);

        virtualinvoke $r27.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, "xalan.jar from xalan-j_2_2_D11");

        $r28 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r29 = new java.lang.Long;

        specialinvoke $r29.<java.lang.Long: void <init>(long)>(923866L);

        virtualinvoke $r28.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r29, "xalan.jar from xalan-j_2_2_0");

        $r34 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r30 = new java.lang.Long;

        specialinvoke $r30.<java.lang.Long: void <init>(long)>(905872L);

        virtualinvoke $r34.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r30, "xalan.jar from xalan-j_2_3_D1");

        $r33 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r32 = new java.lang.Long;

        specialinvoke $r32.<java.lang.Long: void <init>(long)>(906122L);

        virtualinvoke $r33.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r32, "xalan.jar from xalan-j_2_3_0");

        $r36 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r39 = new java.lang.Long;

        specialinvoke $r39.<java.lang.Long: void <init>(long)>(906248L);

        virtualinvoke $r36.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r39, "xalan.jar from xalan-j_2_3_1");

        $r43 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r42 = new java.lang.Long;

        specialinvoke $r42.<java.lang.Long: void <init>(long)>(983377L);

        virtualinvoke $r43.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r42, "xalan.jar from xalan-j_2_4_D1");

        $r46 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r41 = new java.lang.Long;

        specialinvoke $r41.<java.lang.Long: void <init>(long)>(997276L);

        virtualinvoke $r46.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r41, "xalan.jar from xalan-j_2_4_0");

        $r45 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r44 = new java.lang.Long;

        specialinvoke $r44.<java.lang.Long: void <init>(long)>(1031036L);

        virtualinvoke $r45.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r44, "xalan.jar from xalan-j_2_4_1");

        $r49 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r50 = new java.lang.Long;

        specialinvoke $r50.<java.lang.Long: void <init>(long)>(596540L);

        virtualinvoke $r49.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r50, "xsltc.jar from xalan-j_2_2_0");

        $r54 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r55 = new java.lang.Long;

        specialinvoke $r55.<java.lang.Long: void <init>(long)>(590247L);

        virtualinvoke $r54.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r55, "xsltc.jar from xalan-j_2_3_D1");

        $r59 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r52 = new java.lang.Long;

        specialinvoke $r52.<java.lang.Long: void <init>(long)>(589914L);

        virtualinvoke $r59.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r52, "xsltc.jar from xalan-j_2_3_0");

        $r56 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r57 = new java.lang.Long;

        specialinvoke $r57.<java.lang.Long: void <init>(long)>(589915L);

        virtualinvoke $r56.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r57, "xsltc.jar from xalan-j_2_3_1");

        $r61 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r62 = new java.lang.Long;

        specialinvoke $r62.<java.lang.Long: void <init>(long)>(1306667L);

        virtualinvoke $r61.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r62, "xsltc.jar from xalan-j_2_4_D1");

        $r69 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r68 = new java.lang.Long;

        specialinvoke $r68.<java.lang.Long: void <init>(long)>(1328227L);

        virtualinvoke $r69.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r68, "xsltc.jar from xalan-j_2_4_0");

        $r64 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r71 = new java.lang.Long;

        specialinvoke $r71.<java.lang.Long: void <init>(long)>(1344009L);

        virtualinvoke $r64.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r71, "xsltc.jar from xalan-j_2_4_1");

        $r67 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r66 = new java.lang.Long;

        specialinvoke $r66.<java.lang.Long: void <init>(long)>(1348361L);

        virtualinvoke $r67.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r66, "xsltc.jar from xalan-j_2_5_D1");

        $r78 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r77 = new java.lang.Long;

        specialinvoke $r77.<java.lang.Long: void <init>(long)>(1268634L);

        virtualinvoke $r78.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r77, "xsltc.jar-bundled from xalan-j_2_3_0");

        $r73 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r72 = new java.lang.Long;

        specialinvoke $r72.<java.lang.Long: void <init>(long)>(100196L);

        virtualinvoke $r73.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r72, "xml-apis.jar from xalan-j_2_2_0 or xalan-j_2_3_D1");

        $r85 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r75 = new java.lang.Long;

        specialinvoke $r75.<java.lang.Long: void <init>(long)>(108484L);

        virtualinvoke $r85.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r75, "xml-apis.jar from xalan-j_2_3_0, or xalan-j_2_3_1 from xml-commons-1.0.b2");

        $r86 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r87 = new java.lang.Long;

        specialinvoke $r87.<java.lang.Long: void <init>(long)>(109049L);

        virtualinvoke $r86.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r87, "xml-apis.jar from xalan-j_2_4_0 from xml-commons RIVERCOURT1 branch");

        $r83 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r80 = new java.lang.Long;

        specialinvoke $r80.<java.lang.Long: void <init>(long)>(113749L);

        virtualinvoke $r83.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r80, "xml-apis.jar from xalan-j_2_4_1 from factoryfinder-build of xml-commons RIVERCOURT1");

        $r92 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r93 = new java.lang.Long;

        specialinvoke $r93.<java.lang.Long: void <init>(long)>(124704L);

        virtualinvoke $r92.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r93, "xml-apis.jar from tck-jaxp-1_2_0 branch of xml-commons");

        $r89 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r94 = new java.lang.Long;

        specialinvoke $r94.<java.lang.Long: void <init>(long)>(124724L);

        virtualinvoke $r89.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r94, "xml-apis.jar from tck-jaxp-1_2_0 branch of xml-commons, tag: xml-commons-external_1_2_01");

        $r90 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r91 = new java.lang.Long;

        specialinvoke $r91.<java.lang.Long: void <init>(long)>(194205L);

        virtualinvoke $r90.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r91, "xml-apis.jar from head branch of xml-commons, tag: xml-commons-external_1_3_02");

        $r100 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r103 = new java.lang.Long;

        specialinvoke $r103.<java.lang.Long: void <init>(long)>(424490L);

        virtualinvoke $r100.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r103, "xalan.jar from Xerces Tools releases - ERROR:DO NOT USE!");

        $r99 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r98 = new java.lang.Long;

        specialinvoke $r98.<java.lang.Long: void <init>(long)>(1591855L);

        virtualinvoke $r99.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r98, "xerces.jar from xalan-j_1_1 from xerces-1...");

        $r110 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r97 = new java.lang.Long;

        specialinvoke $r97.<java.lang.Long: void <init>(long)>(1498679L);

        virtualinvoke $r110.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r97, "xerces.jar from xalan-j_1_2 from xerces-1_2_0.bin");

        $r109 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r108 = new java.lang.Long;

        specialinvoke $r108.<java.lang.Long: void <init>(long)>(1484896L);

        virtualinvoke $r109.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r108, "xerces.jar from xalan-j_1_2_1 from xerces-1_2_1.bin");

        $r104 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r107 = new java.lang.Long;

        specialinvoke $r107.<java.lang.Long: void <init>(long)>(804460L);

        virtualinvoke $r104.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r107, "xerces.jar from xalan-j_1_2_2 from xerces-1_2_2.bin");

        $r118 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r119 = new java.lang.Long;

        specialinvoke $r119.<java.lang.Long: void <init>(long)>(1499244L);

        virtualinvoke $r118.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r119, "xerces.jar from xalan-j_2_0_0 from xerces-1_2_3.bin");

        $r115 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r116 = new java.lang.Long;

        specialinvoke $r116.<java.lang.Long: void <init>(long)>(1605266L);

        virtualinvoke $r115.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r116, "xerces.jar from xalan-j_2_0_1 from xerces-1_3_0.bin");

        $r112 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r113 = new java.lang.Long;

        specialinvoke $r113.<java.lang.Long: void <init>(long)>(904030L);

        virtualinvoke $r112.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r113, "xerces.jar from xalan-j_2_1_0 from xerces-1_4.bin");

        $r125 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r126 = new java.lang.Long;

        specialinvoke $r126.<java.lang.Long: void <init>(long)>(904030L);

        virtualinvoke $r125.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r126, "xerces.jar from xerces-1_4_0.bin");

        $r122 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r123 = new java.lang.Long;

        specialinvoke $r123.<java.lang.Long: void <init>(long)>(1802885L);

        virtualinvoke $r122.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r123, "xerces.jar from xerces-1_4_2.bin");

        $r137 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r120 = new java.lang.Long;

        specialinvoke $r120.<java.lang.Long: void <init>(long)>(1734594L);

        virtualinvoke $r137.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r120, "xerces.jar from Xerces-J-bin.2.0.0.beta3");

        $r138 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r139 = new java.lang.Long;

        specialinvoke $r139.<java.lang.Long: void <init>(long)>(1808883L);

        virtualinvoke $r138.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r139, "xerces.jar from xalan-j_2_2_D10,D11,D12 or xerces-1_4_3.bin");

        $r143 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r140 = new java.lang.Long;

        specialinvoke $r140.<java.lang.Long: void <init>(long)>(1812019L);

        virtualinvoke $r143.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r140, "xerces.jar from xalan-j_2_2_0");

        $r128 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r129 = new java.lang.Long;

        specialinvoke $r129.<java.lang.Long: void <init>(long)>(1720292L);

        virtualinvoke $r128.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r129, "xercesImpl.jar from xalan-j_2_3_D1");

        $r133 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r130 = new java.lang.Long;

        specialinvoke $r130.<java.lang.Long: void <init>(long)>(1730053L);

        virtualinvoke $r133.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r130, "xercesImpl.jar from xalan-j_2_3_0 or xalan-j_2_3_1 from xerces-2_0_0");

        $r134 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r135 = new java.lang.Long;

        specialinvoke $r135.<java.lang.Long: void <init>(long)>(1728861L);

        virtualinvoke $r134.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r135, "xercesImpl.jar from xalan-j_2_4_D1 from xerces-2_0_1");

        $r154 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r153 = new java.lang.Long;

        specialinvoke $r153.<java.lang.Long: void <init>(long)>(972027L);

        virtualinvoke $r154.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r153, "xercesImpl.jar from xalan-j_2_4_0 from xerces-2_1");

        $r157 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r156 = new java.lang.Long;

        specialinvoke $r156.<java.lang.Long: void <init>(long)>(831587L);

        virtualinvoke $r157.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r156, "xercesImpl.jar from xalan-j_2_4_1 from xerces-2_2");

        $r144 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r159 = new java.lang.Long;

        specialinvoke $r159.<java.lang.Long: void <init>(long)>(891817L);

        virtualinvoke $r144.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r159, "xercesImpl.jar from xalan-j_2_5_D1 from xerces-2_3");

        $r147 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r146 = new java.lang.Long;

        specialinvoke $r146.<java.lang.Long: void <init>(long)>(895924L);

        virtualinvoke $r147.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r146, "xercesImpl.jar from xerces-2_4");

        $r150 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r149 = new java.lang.Long;

        specialinvoke $r149.<java.lang.Long: void <init>(long)>(1010806L);

        virtualinvoke $r150.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r149, "xercesImpl.jar from Xerces-J-bin.2.6.2");

        $r170 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r171 = new java.lang.Long;

        specialinvoke $r171.<java.lang.Long: void <init>(long)>(1203860L);

        virtualinvoke $r170.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r171, "xercesImpl.jar from Xerces-J-bin.2.7.1");

        $r175 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r168 = new java.lang.Long;

        specialinvoke $r168.<java.lang.Long: void <init>(long)>(37485L);

        virtualinvoke $r175.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r168, "xalanj1compat.jar from xalan-j_2_0_0");

        $r172 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r173 = new java.lang.Long;

        specialinvoke $r173.<java.lang.Long: void <init>(long)>(38100L);

        virtualinvoke $r172.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r173, "xalanj1compat.jar from xalan-j_2_0_1");

        $r161 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r162 = new java.lang.Long;

        specialinvoke $r162.<java.lang.Long: void <init>(long)>(18779L);

        virtualinvoke $r161.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r162, "xalanservlet.jar from xalan-j_2_0_0");

        $r166 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r167 = new java.lang.Long;

        specialinvoke $r167.<java.lang.Long: void <init>(long)>(21453L);

        virtualinvoke $r166.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r167, "xalanservlet.jar from xalan-j_2_0_1");

        $r186 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r164 = new java.lang.Long;

        specialinvoke $r164.<java.lang.Long: void <init>(long)>(24826L);

        virtualinvoke $r186.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r164, "xalanservlet.jar from xalan-j_2_3_1 or xalan-j_2_4_1");

        $r185 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r184 = new java.lang.Long;

        specialinvoke $r184.<java.lang.Long: void <init>(long)>(24831L);

        virtualinvoke $r185.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r184, "xalanservlet.jar from xalan-j_2_4_1");

        $r188 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r191 = new java.lang.Long;

        specialinvoke $r191.<java.lang.Long: void <init>(long)>(5618L);

        virtualinvoke $r188.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r191, "jaxp.jar from jaxp1.0.1");

        $r179 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r178 = new java.lang.Long;

        specialinvoke $r178.<java.lang.Long: void <init>(long)>(136133L);

        virtualinvoke $r179.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r178, "parser.jar from jaxp1.0.1");

        $r182 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r177 = new java.lang.Long;

        specialinvoke $r177.<java.lang.Long: void <init>(long)>(28404L);

        virtualinvoke $r182.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r177, "jaxp.jar from jaxp-1.1");

        $r181 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r180 = new java.lang.Long;

        specialinvoke $r180.<java.lang.Long: void <init>(long)>(187162L);

        virtualinvoke $r181.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r180, "crimson.jar from jaxp-1.1");

        $r207 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r204 = new java.lang.Long;

        specialinvoke $r204.<java.lang.Long: void <init>(long)>(801714L);

        virtualinvoke $r207.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r204, "xalan.jar from jaxp-1.1");

        $r200 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r201 = new java.lang.Long;

        specialinvoke $r201.<java.lang.Long: void <init>(long)>(196399L);

        virtualinvoke $r200.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r201, "crimson.jar from crimson-1.1.1");

        $r197 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r202 = new java.lang.Long;

        specialinvoke $r202.<java.lang.Long: void <init>(long)>(33323L);

        virtualinvoke $r197.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r202, "jaxp.jar from crimson-1.1.1 or jakarta-ant-1.4.1b1");

        $r198 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r199 = new java.lang.Long;

        specialinvoke $r199.<java.lang.Long: void <init>(long)>(152717L);

        virtualinvoke $r198.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r199, "crimson.jar from crimson-1.1.2beta2");

        $r195 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r192 = new java.lang.Long;

        specialinvoke $r192.<java.lang.Long: void <init>(long)>(88143L);

        virtualinvoke $r195.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r192, "xml-apis.jar from crimson-1.1.2beta2");

        $r214 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r213 = new java.lang.Long;

        specialinvoke $r213.<java.lang.Long: void <init>(long)>(206384L);

        virtualinvoke $r214.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r213, "crimson.jar from crimson-1.1.3 or jakarta-ant-1.4.1b1");

        $r209 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r216 = new java.lang.Long;

        specialinvoke $r216.<java.lang.Long: void <init>(long)>(136198L);

        virtualinvoke $r209.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r216, "parser.jar from jakarta-ant-1.3 or 1.2");

        $r212 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r211 = new java.lang.Long;

        specialinvoke $r211.<java.lang.Long: void <init>(long)>(5537L);

        virtualinvoke $r212.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r211, "jaxp.jar from jakarta-ant-1.3 or 1.2");

        return;
    }

    public void <init>()
    {
        org.apache.xalan.xslt.EnvironmentCheck r0;
        java.lang.String[] $r1;
        java.io.PrintWriter $r2;
        java.io.PrintStream $r3;

        r0 := @this: org.apache.xalan.xslt.EnvironmentCheck;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (java.lang.String)[17];

        $r1[0] = "xalan.jar";

        $r1[1] = "xalansamples.jar";

        $r1[2] = "xalanj1compat.jar";

        $r1[3] = "xalanservlet.jar";

        $r1[4] = "serializer.jar";

        $r1[5] = "xerces.jar";

        $r1[6] = "xercesImpl.jar";

        $r1[7] = "testxsl.jar";

        $r1[8] = "crimson.jar";

        $r1[9] = "lotusxsl.jar";

        $r1[10] = "jaxp.jar";

        $r1[11] = "parser.jar";

        $r1[12] = "dom.jar";

        $r1[13] = "sax.jar";

        $r1[14] = "xml.jar";

        $r1[15] = "xml-apis.jar";

        $r1[16] = "xsltc.jar";

        r0.<org.apache.xalan.xslt.EnvironmentCheck: java.lang.String[] jarNames> = $r1;

        $r2 = new java.io.PrintWriter;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        specialinvoke $r2.<java.io.PrintWriter: void <init>(java.io.OutputStream,boolean)>($r3, 1);

        r0.<org.apache.xalan.xslt.EnvironmentCheck: java.io.PrintWriter outWriter> = $r2;

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;
        java.io.PrintWriter r1, r2, $r4, $r11;
        int i0, $i1, $i2;
        java.lang.Exception r3, $r12;
        java.io.PrintStream $r5, $r9, $r14;
        org.apache.xalan.xslt.EnvironmentCheck $r6;
        java.lang.String $r7, $r8, $r13, $r16, $r21, $r22;
        boolean $z1;
        java.io.FileWriter $r10;
        java.lang.StringBuilder $r15, $r17, $r18, $r19, $r20;

        r0 := @parameter0: java.lang.String[];

        $r4 = new java.io.PrintWriter;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        specialinvoke $r4.<java.io.PrintWriter: void <init>(java.io.OutputStream,boolean)>($r5, 1);

        r1 = $r4;

        i0 = 0;

     label1:
        $i1 = lengthof r0;

        if i0 >= $i1 goto label7;

        $r8 = "-out";

        $r7 = r0[i0];

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r7);

        if $z1 == 0 goto label4;

        i0 = i0 + 1;

        $i2 = lengthof r0;

        if i0 >= $i2 goto label6;

     label2:
        $r11 = new java.io.PrintWriter;

        $r10 = new java.io.FileWriter;

        $r13 = r0[i0];

        specialinvoke $r10.<java.io.FileWriter: void <init>(java.lang.String,boolean)>($r13, 1);

        specialinvoke $r11.<java.io.PrintWriter: void <init>(java.io.Writer)>($r10);

        r2 = $r11;

     label3:
        r1 = r2;

     label4:
        i0 = i0 + 1;

        goto label1;

     label5:
        $r12 := @caughtexception;

        r3 = $r12;

        $r14 = <java.lang.System: java.io.PrintStream err>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("# WARNING: -out ");

        $r16 = r0[i0];

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" threw ");

        $r21 = virtualinvoke r3.<java.lang.Exception: java.lang.String toString()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r22);

        goto label4;

     label6:
        $r9 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>("# WARNING: -out argument should have a filename, output sent to console");

        goto label4;

     label7:
        $r6 = new org.apache.xalan.xslt.EnvironmentCheck;

        specialinvoke $r6.<org.apache.xalan.xslt.EnvironmentCheck: void <init>()>();

        virtualinvoke $r6.<org.apache.xalan.xslt.EnvironmentCheck: boolean checkEnvironment(java.io.PrintWriter)>(r1);

        return;

        catch java.lang.Exception from label2 to label3 with label5;
    }

    public void appendEnvironmentReport(org.w3c.dom.Node, org.w3c.dom.Document, java.util.Hashtable)
    {
        org.apache.xalan.xslt.EnvironmentCheck r0;
        org.w3c.dom.Node r1;
        org.w3c.dom.Document r2;
        java.util.Hashtable r3;
        java.lang.Exception r4, r12, $r32, $r33;
        org.w3c.dom.Element r5, r6, r7, r9, r14, r15;
        boolean z0, $z1, $z2, $z3, $z4;
        java.util.Enumeration r8;
        java.lang.String r10, r13, $r22, $r34, $r36, $r40, $r42;
        java.lang.Object r11, $r21, $r25;
        org.w3c.dom.Text $r19, $r28, $r44;
        java.util.Vector $r23;
        java.lang.StringBuilder $r29, $r31, $r35, $r37, $r38, $r39, $r41, $r43;
        java.io.PrintStream $r30;

        r0 := @this: org.apache.xalan.xslt.EnvironmentCheck;

        r1 := @parameter0: org.w3c.dom.Node;

        r2 := @parameter1: org.w3c.dom.Document;

        r3 := @parameter2: java.util.Hashtable;

        if r1 == null goto label01;

        if r2 != null goto label02;

     label01:
        return;

     label02:
        r5 = interfaceinvoke r2.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("EnvironmentCheck");

        interfaceinvoke r5.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("version", "$Revision: 468646 $");

        interfaceinvoke r1.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r5);

     label03:
        if r3 != null goto label07;

     label04:
        r6 = interfaceinvoke r2.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("status");

        interfaceinvoke r6.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("result", "ERROR");

        $r28 = interfaceinvoke r2.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>("appendEnvironmentReport called with null Hashtable!");

        interfaceinvoke r6.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r28);

        interfaceinvoke r5.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r6);

     label05:
        return;

     label06:
        $r32 := @caughtexception;

        r4 = $r32;

        $r30 = <java.lang.System: java.io.PrintStream err>;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("appendEnvironmentReport threw: ");

        $r36 = virtualinvoke r4.<java.lang.Exception: java.lang.String toString()>();

        $r35 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>($r34);

        virtualinvoke r4.<java.lang.Exception: void printStackTrace()>();

        return;

     label07:
        z0 = 0;

     label08:
        r7 = interfaceinvoke r2.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("environment");

        interfaceinvoke r5.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r7);

        r8 = virtualinvoke r3.<java.util.Hashtable: java.util.Enumeration keys()>();

     label09:
        $z1 = interfaceinvoke r8.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label19;

        r11 = interfaceinvoke r8.<java.util.Enumeration: java.lang.Object nextElement()>();

        r13 = (java.lang.String) r11;

     label10:
        $z3 = virtualinvoke r13.<java.lang.String: boolean startsWith(java.lang.String)>("foundclasses.");

        if $z3 == 0 goto label12;

        $r25 = virtualinvoke r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r13);

        $r23 = (java.util.Vector) $r25;

        $z4 = virtualinvoke r0.<org.apache.xalan.xslt.EnvironmentCheck: boolean appendFoundJars(org.w3c.dom.Node,org.w3c.dom.Document,java.util.Vector,java.lang.String)>(r7, r2, $r23, r13);

        z0 = z0 | $z4;

     label11:
        goto label09;

     label12:
        $z2 = virtualinvoke r13.<java.lang.String: boolean startsWith(java.lang.String)>("ERROR.");

        if $z2 == 0 goto label14;

     label13:
        z0 = 1;

     label14:
        r15 = interfaceinvoke r2.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("item");

        interfaceinvoke r15.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("key", r13);

        $r21 = virtualinvoke r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r13);

        $r22 = (java.lang.String) $r21;

        $r19 = interfaceinvoke r2.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r22);

        interfaceinvoke r15.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r19);

        interfaceinvoke r7.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r15);

     label15:
        goto label09;

     label16:
        $r33 := @caughtexception;

        r12 = $r33;

        z0 = 1;

     label17:
        r14 = interfaceinvoke r2.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("item");

        interfaceinvoke r14.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("key", r13);

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ERROR. Reading ");

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r43 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" threw: ");

        $r42 = virtualinvoke r12.<java.lang.Exception: java.lang.String toString()>();

        $r41 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        $r44 = interfaceinvoke r2.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r40);

        interfaceinvoke r14.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r44);

        interfaceinvoke r7.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r14);

     label18:
        goto label09;

     label19:
        r9 = interfaceinvoke r2.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("status");

     label20:
        if z0 == 0 goto label23;

        r10 = "ERROR";

     label21:
        interfaceinvoke r9.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("result", r10);

        interfaceinvoke r5.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r9);

     label22:
        return;

     label23:
        r10 = "OK";

        goto label21;

        catch java.lang.Exception from label02 to label03 with label06;
        catch java.lang.Exception from label04 to label05 with label06;
        catch java.lang.Exception from label08 to label09 with label06;
        catch java.lang.Exception from label09 to label10 with label06;
        catch java.lang.Exception from label10 to label11 with label16;
        catch java.lang.Exception from label12 to label13 with label16;
        catch java.lang.Exception from label14 to label15 with label16;
        catch java.lang.Exception from label17 to label18 with label06;
        catch java.lang.Exception from label19 to label20 with label06;
        catch java.lang.Exception from label21 to label22 with label06;
    }

    protected boolean appendFoundJars(org.w3c.dom.Node, org.w3c.dom.Document, java.util.Vector, java.lang.String)
    {
        org.apache.xalan.xslt.EnvironmentCheck r0;
        org.w3c.dom.Node r1;
        org.w3c.dom.Document r2;
        java.util.Vector r3;
        java.lang.String r4, r10, $r13, $r15, $r16, $r25, $r27;
        boolean z0, $z1, $z2;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.util.Hashtable r5;
        java.util.Enumeration r6;
        java.lang.Object r7, $r12, $r14;
        java.lang.Exception r8, $r18;
        org.w3c.dom.Element r9, r11;
        org.w3c.dom.Text $r19, $r30;
        java.lang.StringBuilder $r21, $r22, $r23, $r24, $r26;

        r0 := @this: org.apache.xalan.xslt.EnvironmentCheck;

        r1 := @parameter0: org.w3c.dom.Node;

        r2 := @parameter1: org.w3c.dom.Document;

        r3 := @parameter2: java.util.Vector;

        r4 := @parameter3: java.lang.String;

        z0 = 0;

        if r3 == null goto label01;

        i0 = virtualinvoke r3.<java.util.Vector: int size()>();

        z0 = 0;

        if i0 >= 1 goto label02;

     label01:
        return z0;

     label02:
        z0 = 0;

        i1 = 0;

     label03:
        $i2 = virtualinvoke r3.<java.util.Vector: int size()>();

        if i1 >= $i2 goto label01;

        $r12 = virtualinvoke r3.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        r5 = (java.util.Hashtable) $r12;

        r6 = virtualinvoke r5.<java.util.Hashtable: java.util.Enumeration keys()>();

     label04:
        $z1 = interfaceinvoke r6.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label10;

        r7 = interfaceinvoke r6.<java.util.Enumeration: java.lang.Object nextElement()>();

     label05:
        r10 = (java.lang.String) r7;

        $z2 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("ERROR.");

        if $z2 == 0 goto label07;

     label06:
        z0 = 1;

     label07:
        r11 = interfaceinvoke r2.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("foundJar");

        $i3 = virtualinvoke r10.<java.lang.String: int indexOf(java.lang.String)>("-");

        $r13 = virtualinvoke r10.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

        interfaceinvoke r11.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("name", $r13);

        $i4 = virtualinvoke r10.<java.lang.String: int indexOf(java.lang.String)>("-");

        $i5 = 1 + $i4;

        $r16 = virtualinvoke r10.<java.lang.String: java.lang.String substring(int)>($i5);

        interfaceinvoke r11.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("desc", $r16);

        $r14 = virtualinvoke r5.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r10);

        $r15 = (java.lang.String) $r14;

        $r19 = interfaceinvoke r2.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r15);

        interfaceinvoke r11.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r19);

        interfaceinvoke r1.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r11);

     label08:
        goto label04;

     label09:
        $r18 := @caughtexception;

        r8 = $r18;

        z0 = 1;

        r9 = interfaceinvoke r2.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("foundJar");

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ERROR. Reading ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" threw: ");

        $r27 = virtualinvoke r8.<java.lang.Exception: java.lang.String toString()>();

        $r24 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        $r30 = interfaceinvoke r2.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r25);

        interfaceinvoke r9.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r30);

        interfaceinvoke r1.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r9);

        goto label04;

     label10:
        i1 = i1 + 1;

        goto label03;

        catch java.lang.Exception from label05 to label06 with label09;
        catch java.lang.Exception from label07 to label08 with label09;
    }

    protected void checkAntVersion(java.util.Hashtable)
    {
        org.apache.xalan.xslt.EnvironmentCheck r0;
        java.util.Hashtable r1, $r11;
        java.lang.Class[] r2;
        java.lang.ClassLoader $r4;
        java.lang.Class $r5;
        java.lang.reflect.Method $r6;
        java.lang.Object[] $r7;
        java.lang.Object $r8;
        java.lang.String $r9;
        java.lang.Exception $r12;

        r0 := @this: org.apache.xalan.xslt.EnvironmentCheck;

        r1 := @parameter0: java.util.Hashtable;

        if r1 != null goto label1;

        $r11 = new java.util.Hashtable;

        specialinvoke $r11.<java.util.Hashtable: void <init>()>();

        r1 = $r11;

     label1:
        r2 = newarray (java.lang.Class)[0];

        $r4 = staticinvoke <org.apache.xalan.xslt.ObjectFactory: java.lang.ClassLoader findClassLoader()>();

        $r5 = staticinvoke <org.apache.xalan.xslt.ObjectFactory: java.lang.Class findProviderClass(java.lang.String,java.lang.ClassLoader,boolean)>("org.apache.tools.ant.Main", $r4, 1);

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getAntVersion", r2);

        $r7 = newarray (java.lang.Object)[0];

        $r8 = virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r7);

        $r9 = (java.lang.String) $r8;

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("version.ant", $r9);

     label2:
        return;

     label3:
        $r12 := @caughtexception;

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("version.ant", "not-present");

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected void checkDOMVersion(java.util.Hashtable)
    {
        org.apache.xalan.xslt.EnvironmentCheck r0;
        java.util.Hashtable r1, $r16;
        java.lang.Class[] r2, $r7;
        java.lang.Exception r3, $r18, $r24, $r28;
        java.lang.String r4, $r30;
        java.lang.ClassLoader $r8, $r13, $r20;
        java.lang.Class $r9, $r12, $r19;
        java.lang.StringBuilder $r25, $r26, $r31;

        r0 := @this: org.apache.xalan.xslt.EnvironmentCheck;

        r1 := @parameter0: java.util.Hashtable;

        if r1 != null goto label01;

        $r16 = new java.util.Hashtable;

        specialinvoke $r16.<java.util.Hashtable: void <init>()>();

        r1 = $r16;

     label01:
        $r7 = newarray (java.lang.Class)[2];

        $r7[0] = class "java/lang/String";

        $r7[1] = class "java/lang/String";

        r2 = $r7;

     label02:
        $r8 = staticinvoke <org.apache.xalan.xslt.ObjectFactory: java.lang.ClassLoader findClassLoader()>();

        $r9 = staticinvoke <org.apache.xalan.xslt.ObjectFactory: java.lang.Class findProviderClass(java.lang.String,java.lang.ClassLoader,boolean)>("org.w3c.dom.Document", $r8, 1);

        virtualinvoke $r9.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("createElementNS", r2);

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("version.DOM", "2.0");

     label03:
        $r13 = staticinvoke <org.apache.xalan.xslt.ObjectFactory: java.lang.ClassLoader findClassLoader()>();

        $r12 = staticinvoke <org.apache.xalan.xslt.ObjectFactory: java.lang.Class findProviderClass(java.lang.String,java.lang.ClassLoader,boolean)>("org.w3c.dom.Node", $r13, 1);

        virtualinvoke $r12.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("supported", r2);

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("ERROR.version.DOM.draftlevel", "2.0wd");

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("ERROR.", "At least one error was found!");

     label04:
        return;

     label05:
        $r18 := @caughtexception;

     label06:
        $r20 = staticinvoke <org.apache.xalan.xslt.ObjectFactory: java.lang.ClassLoader findClassLoader()>();

        $r19 = staticinvoke <org.apache.xalan.xslt.ObjectFactory: java.lang.Class findProviderClass(java.lang.String,java.lang.ClassLoader,boolean)>("org.w3c.dom.Node", $r20, 1);

        virtualinvoke $r19.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("isSupported", r2);

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("version.DOM.draftlevel", "2.0fd");

     label07:
        return;

     label08:
        $r24 := @caughtexception;

     label09:
        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("ERROR.version.DOM.draftlevel", "2.0unknown");

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("ERROR.", "At least one error was found!");

     label10:
        return;

     label11:
        $r28 := @caughtexception;

        r3 = $r28;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ERROR attempting to load DOM level 2 class: ");

        $r30 = virtualinvoke r3.<java.lang.Exception: java.lang.String toString()>();

        $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        r4 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("ERROR.version.DOM", r4);

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("ERROR.", "At least one error was found!");

        return;

        catch java.lang.Exception from label02 to label03 with label11;
        catch java.lang.Exception from label03 to label04 with label05;
        catch java.lang.Exception from label06 to label07 with label08;
        catch java.lang.Exception from label09 to label10 with label11;
    }

    public boolean checkEnvironment(java.io.PrintWriter)
    {
        org.apache.xalan.xslt.EnvironmentCheck r0;
        java.io.PrintWriter r1, $r3, $r4, $r5, $r6;
        java.util.Hashtable $r2;
        boolean $z0;

        r0 := @this: org.apache.xalan.xslt.EnvironmentCheck;

        r1 := @parameter0: java.io.PrintWriter;

        if r1 == null goto label1;

        r0.<org.apache.xalan.xslt.EnvironmentCheck: java.io.PrintWriter outWriter> = r1;

     label1:
        $r2 = virtualinvoke r0.<org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable getEnvironmentHash()>();

        $z0 = virtualinvoke r0.<org.apache.xalan.xslt.EnvironmentCheck: boolean writeEnvironmentReport(java.util.Hashtable)>($r2);

        if $z0 == 0 goto label3;

        virtualinvoke r0.<org.apache.xalan.xslt.EnvironmentCheck: void logMsg(java.lang.String)>("# WARNING: Potential problems found in your environment!");

        virtualinvoke r0.<org.apache.xalan.xslt.EnvironmentCheck: void logMsg(java.lang.String)>("#    Check any \'ERROR\' items above against the Xalan FAQs");

        virtualinvoke r0.<org.apache.xalan.xslt.EnvironmentCheck: void logMsg(java.lang.String)>("#    to correct potential problems with your classes/jars");

        virtualinvoke r0.<org.apache.xalan.xslt.EnvironmentCheck: void logMsg(java.lang.String)>("#    http://xml.apache.org/xalan-j/faq.html");

        $r5 = r0.<org.apache.xalan.xslt.EnvironmentCheck: java.io.PrintWriter outWriter>;

        if $r5 == null goto label2;

        $r6 = r0.<org.apache.xalan.xslt.EnvironmentCheck: java.io.PrintWriter outWriter>;

        virtualinvoke $r6.<java.io.PrintWriter: void flush()>();

     label2:
        return 0;

     label3:
        virtualinvoke r0.<org.apache.xalan.xslt.EnvironmentCheck: void logMsg(java.lang.String)>("# YAHOO! Your environment seems to be OK.");

        $r3 = r0.<org.apache.xalan.xslt.EnvironmentCheck: java.io.PrintWriter outWriter>;

        if $r3 == null goto label4;

        $r4 = r0.<org.apache.xalan.xslt.EnvironmentCheck: java.io.PrintWriter outWriter>;

        virtualinvoke $r4.<java.io.PrintWriter: void flush()>();

     label4:
        return 1;
    }

    protected void checkJAXPVersion(java.util.Hashtable)
    {
        org.apache.xalan.xslt.EnvironmentCheck r0;
        java.util.Hashtable r1, $r8;
        java.lang.Class[] r2;
        java.lang.Class r3;
        java.lang.ClassLoader $r5;
        java.lang.Exception $r9;

        r0 := @this: org.apache.xalan.xslt.EnvironmentCheck;

        r1 := @parameter0: java.util.Hashtable;

        if r1 != null goto label1;

        $r8 = new java.util.Hashtable;

        specialinvoke $r8.<java.util.Hashtable: void <init>()>();

        r1 = $r8;

     label1:
        r2 = newarray (java.lang.Class)[0];

        r3 = null;

     label2:
        $r5 = staticinvoke <org.apache.xalan.xslt.ObjectFactory: java.lang.ClassLoader findClassLoader()>();

        r3 = staticinvoke <org.apache.xalan.xslt.ObjectFactory: java.lang.Class findProviderClass(java.lang.String,java.lang.ClassLoader,boolean)>("javax.xml.parsers.DocumentBuilder", $r5, 1);

        virtualinvoke r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getDOMImplementation", r2);

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("version.JAXP", "1.1 or higher");

     label3:
        return;

     label4:
        $r9 := @caughtexception;

        if r3 == null goto label5;

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("ERROR.version.JAXP", "1.0.1");

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("ERROR.", "At least one error was found!");

        return;

     label5:
        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("ERROR.version.JAXP", "not-present");

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("ERROR.", "At least one error was found!");

        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    protected void checkParserVersion(java.util.Hashtable)
    {
        org.apache.xalan.xslt.EnvironmentCheck r0;
        java.util.Hashtable r1, $r19;
        java.lang.ClassLoader $r5, $r11, $r18;
        java.lang.Class $r6, $r13;
        java.lang.reflect.Field $r7, $r12;
        java.lang.Object $r8, $r15;
        java.lang.String $r9, $r14;
        java.lang.Exception $r22, $r24, $r25;

        r0 := @this: org.apache.xalan.xslt.EnvironmentCheck;

        r1 := @parameter0: java.util.Hashtable;

        if r1 != null goto label1;

        $r19 = new java.util.Hashtable;

        specialinvoke $r19.<java.util.Hashtable: void <init>()>();

        r1 = $r19;

     label1:
        $r5 = staticinvoke <org.apache.xalan.xslt.ObjectFactory: java.lang.ClassLoader findClassLoader()>();

        $r6 = staticinvoke <org.apache.xalan.xslt.ObjectFactory: java.lang.Class findProviderClass(java.lang.String,java.lang.ClassLoader,boolean)>("org.apache.xerces.framework.Version", $r5, 1);

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("fVersion");

        $r8 = virtualinvoke $r7.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        $r9 = (java.lang.String) $r8;

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("version.xerces1", $r9);

     label2:
        $r11 = staticinvoke <org.apache.xalan.xslt.ObjectFactory: java.lang.ClassLoader findClassLoader()>();

        $r13 = staticinvoke <org.apache.xalan.xslt.ObjectFactory: java.lang.Class findProviderClass(java.lang.String,java.lang.ClassLoader,boolean)>("org.apache.xerces.impl.Version", $r11, 1);

        $r12 = virtualinvoke $r13.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("fVersion");

        $r15 = virtualinvoke $r12.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        $r14 = (java.lang.String) $r15;

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("version.xerces2", $r14);

     label3:
        $r18 = staticinvoke <org.apache.xalan.xslt.ObjectFactory: java.lang.ClassLoader findClassLoader()>();

        staticinvoke <org.apache.xalan.xslt.ObjectFactory: java.lang.Class findProviderClass(java.lang.String,java.lang.ClassLoader,boolean)>("org.apache.crimson.parser.Parser2", $r18, 1);

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("version.crimson", "present-unknown-version");

     label4:
        return;

     label5:
        $r24 := @caughtexception;

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("version.xerces1", "not-present");

        goto label2;

     label6:
        $r22 := @caughtexception;

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("version.xerces2", "not-present");

        goto label3;

     label7:
        $r25 := @caughtexception;

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("version.crimson", "not-present");

        return;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label2 to label3 with label6;
        catch java.lang.Exception from label3 to label4 with label7;
    }

    protected java.util.Vector checkPathForJars(java.lang.String, java.lang.String[])
    {
        org.apache.xalan.xslt.EnvironmentCheck r0;
        java.lang.String r1, r5, $r11, $r13, $r16, $r21, $r23, $r26, $r33, $r37, $r38, $r40, $r41, $r42, $r44, $r45, $r46, $r51;
        java.lang.String[] r2;
        java.util.Vector r3, $r10;
        java.util.StringTokenizer r4, $r12;
        int i0, $i1, $i2, $i3, $i4;
        java.io.File r6, $r14;
        java.util.Hashtable r7, r8, $r15, $r31;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r17, $r18, $r19, $r20, $r22, $r24, $r25, $r27, $r29, $r32, $r34, $r35, $r36, $r43, $r47, $r48;
        java.lang.Exception $r49;
        long $l5;

        r0 := @this: org.apache.xalan.xslt.EnvironmentCheck;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

        if r1 == null goto label01;

        if r2 == null goto label01;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i1 == 0 goto label01;

        $i2 = lengthof r2;

        if $i2 != 0 goto label03;

     label01:
        r3 = null;

     label02:
        return r3;

     label03:
        $r10 = new java.util.Vector;

        specialinvoke $r10.<java.util.Vector: void <init>()>();

        r3 = $r10;

        $r12 = new java.util.StringTokenizer;

        $r11 = <java.io.File: java.lang.String pathSeparator>;

        specialinvoke $r12.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r1, $r11);

        r4 = $r12;

     label04:
        $z0 = virtualinvoke r4.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label02;

        r5 = virtualinvoke r4.<java.util.StringTokenizer: java.lang.String nextToken()>();

        i0 = 0;

     label05:
        $i3 = lengthof r2;

        if i0 >= $i3 goto label04;

        $r13 = r2[i0];

        $i4 = virtualinvoke r5.<java.lang.String: int indexOf(java.lang.String)>($r13);

        if $i4 <= -1 goto label08;

        $r14 = new java.io.File;

        specialinvoke $r14.<java.io.File: void <init>(java.lang.String)>(r5);

        r6 = $r14;

        $z1 = virtualinvoke r6.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label09;

     label06:
        $r31 = new java.util.Hashtable;

        specialinvoke $r31.<java.util.Hashtable: void <init>(int)>(2);

        r8 = $r31;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r37 = r2[i0];

        $r34 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-path");

        $r41 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        $r40 = virtualinvoke r6.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke r8.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r41, $r40);

        $r44 = "xalan.jar";

        $r38 = r2[i0];

        $z2 = virtualinvoke $r44.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r38);

        if $z2 != 0 goto label07;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r42 = r2[i0];

        $r48 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r47 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-apparent.version");

        $r46 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        $r45 = r2[i0];

        $l5 = virtualinvoke r6.<java.io.File: long length()>();

        $r51 = virtualinvoke r0.<org.apache.xalan.xslt.EnvironmentCheck: java.lang.String getApparentVersion(java.lang.String,long)>($r45, $l5);

        virtualinvoke r8.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r46, $r51);

     label07:
        virtualinvoke r3.<java.util.Vector: void addElement(java.lang.Object)>(r8);

     label08:
        i0 = i0 + 1;

        goto label05;

     label09:
        $r15 = new java.util.Hashtable;

        specialinvoke $r15.<java.util.Hashtable: void <init>(int)>(2);

        r7 = $r15;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r16 = r2[i0];

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-path");

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WARNING. Classpath entry: ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r22 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not exist");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r7.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r23);

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r26 = r2[i0];

        $r27 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r32 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-apparent.version");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r7.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r33, "not-present");

        virtualinvoke r3.<java.util.Vector: void addElement(java.lang.Object)>(r7);

        goto label08;

     label10:
        $r49 := @caughtexception;

        goto label08;

        catch java.lang.Exception from label06 to label07 with label10;
        catch java.lang.Exception from label07 to label08 with label10;
    }

    protected void checkProcessorVersion(java.util.Hashtable)
    {
        org.apache.xalan.xslt.EnvironmentCheck r0;
        java.util.Hashtable r1, $r37;
        java.lang.Class[] r4;
        java.lang.String r6, r9, r12;
        java.lang.Class r7, r11, $r35;
        java.lang.StringBuffer r8, r10, $r15, $r28;
        java.lang.ClassLoader $r13, $r30, $r36;
        java.lang.reflect.Field $r14, $r21, $r25, $r29;
        java.lang.Object $r17, $r18, $r22, $r33, $r39;
        java.lang.reflect.Method $r34;
        java.lang.Object[] $r40;
        java.lang.Exception $r42, $r44, $r45;

        r0 := @this: org.apache.xalan.xslt.EnvironmentCheck;

        r1 := @parameter0: java.util.Hashtable;

        if r1 != null goto label1;

        $r37 = new java.util.Hashtable;

        specialinvoke $r37.<java.util.Hashtable: void <init>()>();

        r1 = $r37;

     label1:
        $r13 = staticinvoke <org.apache.xalan.xslt.ObjectFactory: java.lang.ClassLoader findClassLoader()>();

        r11 = staticinvoke <org.apache.xalan.xslt.ObjectFactory: java.lang.Class findProviderClass(java.lang.String,java.lang.ClassLoader,boolean)>("org.apache.xalan.xslt.XSLProcessorVersion", $r13, 1);

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        r10 = $r15;

        $r14 = virtualinvoke r11.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("PRODUCT");

        $r17 = virtualinvoke $r14.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        virtualinvoke r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r17);

        virtualinvoke r10.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(59);

        $r21 = virtualinvoke r11.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("LANGUAGE");

        $r18 = virtualinvoke $r21.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        virtualinvoke r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r18);

        virtualinvoke r10.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(59);

        $r25 = virtualinvoke r11.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("S_VERSION");

        $r22 = virtualinvoke $r25.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        virtualinvoke r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r22);

        virtualinvoke r10.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(59);

        r12 = virtualinvoke r10.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("version.xalan1", r12);

     label2:
        $r30 = staticinvoke <org.apache.xalan.xslt.ObjectFactory: java.lang.ClassLoader findClassLoader()>();

        r7 = staticinvoke <org.apache.xalan.xslt.ObjectFactory: java.lang.Class findProviderClass(java.lang.String,java.lang.ClassLoader,boolean)>("org.apache.xalan.processor.XSLProcessorVersion", $r30, 1);

        $r28 = new java.lang.StringBuffer;

        specialinvoke $r28.<java.lang.StringBuffer: void <init>()>();

        r8 = $r28;

        $r29 = virtualinvoke r7.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("S_VERSION");

        $r33 = virtualinvoke $r29.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        virtualinvoke r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r33);

        r9 = virtualinvoke r8.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("version.xalan2x", r9);

     label3:
        r4 = newarray (java.lang.Class)[0];

        $r36 = staticinvoke <org.apache.xalan.xslt.ObjectFactory: java.lang.ClassLoader findClassLoader()>();

        $r35 = staticinvoke <org.apache.xalan.xslt.ObjectFactory: java.lang.Class findProviderClass(java.lang.String,java.lang.ClassLoader,boolean)>("org.apache.xalan.Version", $r36, 1);

        $r34 = virtualinvoke $r35.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getVersion", r4);

        $r40 = newarray (java.lang.Object)[0];

        $r39 = virtualinvoke $r34.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r40);

        r6 = (java.lang.String) $r39;

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("version.xalan2_2", r6);

     label4:
        return;

     label5:
        $r44 := @caughtexception;

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("version.xalan1", "not-present");

        goto label2;

     label6:
        $r45 := @caughtexception;

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("version.xalan2x", "not-present");

        goto label3;

     label7:
        $r42 := @caughtexception;

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("version.xalan2_2", "not-present");

        return;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label2 to label3 with label6;
        catch java.lang.Exception from label3 to label4 with label7;
    }

    protected void checkSAXVersion(java.util.Hashtable)
    {
        org.apache.xalan.xslt.EnvironmentCheck r0;
        java.util.Hashtable r1, $r15;
        java.lang.Class[] r2, r3, $r10, $r11;
        java.lang.Exception r4, r8, $r18, $r22, $r32;
        java.lang.String r5, r7, r9, $r19, $r27, $r38;
        java.lang.ClassLoader $r12, $r29, $r39;
        java.lang.Class $r14, $r30, $r44;
        java.lang.StringBuilder $r17, $r20, $r21, $r24, $r25, $r28, $r33, $r36, $r37;

        r0 := @this: org.apache.xalan.xslt.EnvironmentCheck;

        r1 := @parameter0: java.util.Hashtable;

        if r1 != null goto label01;

        $r15 = new java.util.Hashtable;

        specialinvoke $r15.<java.util.Hashtable: void <init>()>();

        r1 = $r15;

     label01:
        $r10 = newarray (java.lang.Class)[1];

        $r10[0] = class "java/lang/String";

        r2 = $r10;

        $r11 = newarray (java.lang.Class)[1];

        $r11[0] = class "org/xml/sax/Attributes";

        r3 = $r11;

     label02:
        $r12 = staticinvoke <org.apache.xalan.xslt.ObjectFactory: java.lang.ClassLoader findClassLoader()>();

        $r14 = staticinvoke <org.apache.xalan.xslt.ObjectFactory: java.lang.Class findProviderClass(java.lang.String,java.lang.ClassLoader,boolean)>("org.xml.sax.helpers.AttributesImpl", $r12, 1);

        virtualinvoke $r14.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("setAttributes", r3);

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("version.SAX", "2.0");

     label03:
        return;

     label04:
        $r32 := @caughtexception;

        r4 = $r32;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ERROR attempting to load SAX version 2 class: ");

        $r38 = virtualinvoke r4.<java.lang.Exception: java.lang.String toString()>();

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        r5 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("ERROR.version.SAX", r5);

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("ERROR.", "At least one error was found!");

     label05:
        $r39 = staticinvoke <org.apache.xalan.xslt.ObjectFactory: java.lang.ClassLoader findClassLoader()>();

        $r44 = staticinvoke <org.apache.xalan.xslt.ObjectFactory: java.lang.Class findProviderClass(java.lang.String,java.lang.ClassLoader,boolean)>("org.xml.sax.XMLReader", $r39, 1);

        virtualinvoke $r44.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("parse", r2);

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("version.SAX-backlevel", "2.0beta2-or-earlier");

     label06:
        return;

     label07:
        $r22 := @caughtexception;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ERROR attempting to load SAX version 2 class: ");

        $r27 = virtualinvoke r4.<java.lang.Exception: java.lang.String toString()>();

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        r7 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("ERROR.version.SAX", r7);

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("ERROR.", "At least one error was found!");

     label08:
        $r29 = staticinvoke <org.apache.xalan.xslt.ObjectFactory: java.lang.ClassLoader findClassLoader()>();

        $r30 = staticinvoke <org.apache.xalan.xslt.ObjectFactory: java.lang.Class findProviderClass(java.lang.String,java.lang.ClassLoader,boolean)>("org.xml.sax.Parser", $r29, 1);

        virtualinvoke $r30.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("parse", r2);

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("version.SAX-backlevel", "1.0");

     label09:
        return;

     label10:
        $r18 := @caughtexception;

        r8 = $r18;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ERROR attempting to load SAX version 1 class: ");

        $r19 = virtualinvoke r8.<java.lang.Exception: java.lang.String toString()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        r9 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("ERROR.version.SAX-backlevel", r9);

        return;

        catch java.lang.Exception from label02 to label03 with label04;
        catch java.lang.Exception from label05 to label06 with label07;
        catch java.lang.Exception from label08 to label09 with label10;
    }

    protected void checkSystemProperties(java.util.Hashtable)
    {
        org.apache.xalan.xslt.EnvironmentCheck r0;
        java.util.Hashtable r1, $r20;
        java.lang.String r4, r6, r8, $r11;
        java.util.Vector r5, r7, r9;
        java.lang.String[] $r13, $r14, $r17;
        java.lang.SecurityException $r22, $r24;

        r0 := @this: org.apache.xalan.xslt.EnvironmentCheck;

        r1 := @parameter0: java.util.Hashtable;

        if r1 != null goto label01;

        $r20 = new java.util.Hashtable;

        specialinvoke $r20.<java.util.Hashtable: void <init>()>();

        r1 = $r20;

     label01:
        $r11 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.version");

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.version", $r11);

     label02:
        r4 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.class.path");

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.class.path", r4);

        $r13 = r0.<org.apache.xalan.xslt.EnvironmentCheck: java.lang.String[] jarNames>;

        r5 = virtualinvoke r0.<org.apache.xalan.xslt.EnvironmentCheck: java.util.Vector checkPathForJars(java.lang.String,java.lang.String[])>(r4, $r13);

     label03:
        if r5 == null goto label05;

     label04:
        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("foundclasses.java.class.path", r5);

     label05:
        r6 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("sun.boot.class.path");

     label06:
        if r6 == null goto label10;

     label07:
        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("sun.boot.class.path", r6);

        $r17 = r0.<org.apache.xalan.xslt.EnvironmentCheck: java.lang.String[] jarNames>;

        r7 = virtualinvoke r0.<org.apache.xalan.xslt.EnvironmentCheck: java.util.Vector checkPathForJars(java.lang.String,java.lang.String[])>(r6, $r17);

     label08:
        if r7 == null goto label10;

     label09:
        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("foundclasses.sun.boot.class.path", r7);

     label10:
        r8 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.ext.dirs");

     label11:
        if r8 == null goto label15;

     label12:
        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.ext.dirs", r8);

        $r14 = r0.<org.apache.xalan.xslt.EnvironmentCheck: java.lang.String[] jarNames>;

        r9 = virtualinvoke r0.<org.apache.xalan.xslt.EnvironmentCheck: java.util.Vector checkPathForJars(java.lang.String,java.lang.String[])>(r8, $r14);

     label13:
        if r9 == null goto label15;

     label14:
        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("foundclasses.java.ext.dirs", r9);

     label15:
        return;

     label16:
        $r22 := @caughtexception;

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.version", "WARNING: SecurityException thrown accessing system version properties");

        goto label02;

     label17:
        $r24 := @caughtexception;

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.class.path", "WARNING: SecurityException thrown accessing system classpath properties");

        return;

        catch java.lang.SecurityException from label01 to label02 with label16;
        catch java.lang.SecurityException from label02 to label03 with label17;
        catch java.lang.SecurityException from label04 to label05 with label17;
        catch java.lang.SecurityException from label05 to label06 with label17;
        catch java.lang.SecurityException from label07 to label08 with label17;
        catch java.lang.SecurityException from label09 to label10 with label17;
        catch java.lang.SecurityException from label10 to label11 with label17;
        catch java.lang.SecurityException from label12 to label13 with label17;
        catch java.lang.SecurityException from label14 to label15 with label17;
    }

    protected java.lang.String getApparentVersion(java.lang.String, long)
    {
        org.apache.xalan.xslt.EnvironmentCheck r0;
        java.lang.String r1, r2, $r6, $r12, $r13, $r18;
        long l0;
        java.lang.Long $r3;
        java.util.Hashtable $r4;
        java.lang.Object $r5;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11, $r14, $r15, $r16, $r17;

        r0 := @this: org.apache.xalan.xslt.EnvironmentCheck;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r4 = <org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable jarVersions>;

        $r3 = new java.lang.Long;

        specialinvoke $r3.<java.lang.Long: void <init>(long)>(l0);

        $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r3);

        r2 = (java.lang.String) $r5;

        if r2 == null goto label1;

        $z2 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>(r1);

        if $z2 == 0 goto label1;

        return r2;

     label1:
        $r6 = "xerces.jar";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z0 != 0 goto label2;

        $r13 = "xercesImpl.jar";

        $z1 = virtualinvoke $r13.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z1 == 0 goto label3;

     label2:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WARNING.");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("present-unknown-version");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;

     label3:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("present-unknown-version");

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r18;
    }

    public java.util.Hashtable getEnvironmentHash()
    {
        org.apache.xalan.xslt.EnvironmentCheck r0;
        java.util.Hashtable r1, $r2;

        r0 := @this: org.apache.xalan.xslt.EnvironmentCheck;

        $r2 = new java.util.Hashtable;

        specialinvoke $r2.<java.util.Hashtable: void <init>()>();

        r1 = $r2;

        virtualinvoke r0.<org.apache.xalan.xslt.EnvironmentCheck: void checkJAXPVersion(java.util.Hashtable)>(r1);

        virtualinvoke r0.<org.apache.xalan.xslt.EnvironmentCheck: void checkProcessorVersion(java.util.Hashtable)>(r1);

        virtualinvoke r0.<org.apache.xalan.xslt.EnvironmentCheck: void checkParserVersion(java.util.Hashtable)>(r1);

        virtualinvoke r0.<org.apache.xalan.xslt.EnvironmentCheck: void checkAntVersion(java.util.Hashtable)>(r1);

        virtualinvoke r0.<org.apache.xalan.xslt.EnvironmentCheck: void checkDOMVersion(java.util.Hashtable)>(r1);

        virtualinvoke r0.<org.apache.xalan.xslt.EnvironmentCheck: void checkSAXVersion(java.util.Hashtable)>(r1);

        virtualinvoke r0.<org.apache.xalan.xslt.EnvironmentCheck: void checkSystemProperties(java.util.Hashtable)>(r1);

        return r1;
    }

    protected boolean logFoundJars(java.util.Vector, java.lang.String)
    {
        org.apache.xalan.xslt.EnvironmentCheck r0;
        java.util.Vector r1;
        java.lang.String r2, r6, $r12, $r16, $r26, $r28, $r32;
        boolean z0, $z1, $z2;
        int i0, $i1, $i2;
        java.util.Hashtable r3;
        java.util.Enumeration r4;
        java.lang.Object r5, $r18, $r23;
        java.lang.Exception r7, $r27;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r13, $r14, $r15, $r17, $r19, $r20, $r21, $r22, $r24, $r25, $r29, $r30, $r31;

        r0 := @this: org.apache.xalan.xslt.EnvironmentCheck;

        r1 := @parameter0: java.util.Vector;

        r2 := @parameter1: java.lang.String;

        if r1 == null goto label01;

        $i1 = virtualinvoke r1.<java.util.Vector: int size()>();

        if $i1 >= 1 goto label02;

     label01:
        return 0;

     label02:
        z0 = 0;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#---- BEGIN Listing XML-related jars in: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ----");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xalan.xslt.EnvironmentCheck: void logMsg(java.lang.String)>($r12);

        i0 = 0;

     label03:
        $i2 = virtualinvoke r1.<java.util.Vector: int size()>();

        if i0 >= $i2 goto label11;

        $r18 = virtualinvoke r1.<java.util.Vector: java.lang.Object elementAt(int)>(i0);

        r3 = (java.util.Hashtable) $r18;

        r4 = virtualinvoke r3.<java.util.Hashtable: java.util.Enumeration keys()>();

     label04:
        $z1 = interfaceinvoke r4.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label10;

        r5 = interfaceinvoke r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        r6 = (java.lang.String) r5;

     label05:
        $z2 = virtualinvoke r6.<java.lang.String: boolean startsWith(java.lang.String)>("ERROR.");

        if $z2 == 0 goto label07;

     label06:
        z0 = 1;

     label07:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r23 = virtualinvoke r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r6);

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xalan.xslt.EnvironmentCheck: void logMsg(java.lang.String)>($r26);

     label08:
        goto label04;

     label09:
        $r27 := @caughtexception;

        r7 = $r27;

        z0 = 1;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reading-");

        $r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("= threw: ");

        $r28 = virtualinvoke r7.<java.lang.Exception: java.lang.String toString()>();

        $r29 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xalan.xslt.EnvironmentCheck: void logMsg(java.lang.String)>($r32);

        goto label04;

     label10:
        i0 = i0 + 1;

        goto label03;

     label11:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#----- END Listing XML-related jars in: ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -----");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xalan.xslt.EnvironmentCheck: void logMsg(java.lang.String)>($r16);

        return z0;

        catch java.lang.Exception from label05 to label06 with label09;
        catch java.lang.Exception from label07 to label08 with label09;
    }

    protected void logMsg(java.lang.String)
    {
        org.apache.xalan.xslt.EnvironmentCheck r0;
        java.lang.String r1;
        java.io.PrintWriter $r2;

        r0 := @this: org.apache.xalan.xslt.EnvironmentCheck;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xalan.xslt.EnvironmentCheck: java.io.PrintWriter outWriter>;

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>(r1);

        return;
    }

    protected boolean writeEnvironmentReport(java.util.Hashtable)
    {
        org.apache.xalan.xslt.EnvironmentCheck r0;
        java.util.Hashtable r1;
        boolean z0, $z1, $z2, $z3, $z4;
        java.util.Enumeration r2;
        java.lang.Object r3, $r9, $r13;
        java.lang.String r4, $r10, $r20, $r21;
        java.lang.Exception r5, $r14;
        java.lang.StringBuilder $r6, $r7, $r8, $r11, $r15, $r16, $r17, $r18, $r19;
        java.util.Vector $r12;

        r0 := @this: org.apache.xalan.xslt.EnvironmentCheck;

        r1 := @parameter0: java.util.Hashtable;

        if r1 != null goto label01;

        virtualinvoke r0.<org.apache.xalan.xslt.EnvironmentCheck: void logMsg(java.lang.String)>("# ERROR: writeEnvironmentReport called with null Hashtable");

        return 0;

     label01:
        z0 = 0;

        virtualinvoke r0.<org.apache.xalan.xslt.EnvironmentCheck: void logMsg(java.lang.String)>("#---- BEGIN writeEnvironmentReport($Revision: 468646 $): Useful stuff found: ----");

        r2 = virtualinvoke r1.<java.util.Hashtable: java.util.Enumeration keys()>();

     label02:
        $z1 = interfaceinvoke r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label10;

        r3 = interfaceinvoke r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        r4 = (java.lang.String) r3;

     label03:
        $z2 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("foundclasses.");

        if $z2 == 0 goto label05;

        $r13 = virtualinvoke r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r4);

        $r12 = (java.util.Vector) $r13;

        $z4 = virtualinvoke r0.<org.apache.xalan.xslt.EnvironmentCheck: boolean logFoundJars(java.util.Vector,java.lang.String)>($r12, r4);

        z0 = z0 | $z4;

     label04:
        goto label02;

     label05:
        $z3 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("ERROR.");

        if $z3 == 0 goto label07;

     label06:
        z0 = 1;

     label07:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r9 = virtualinvoke r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r4);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xalan.xslt.EnvironmentCheck: void logMsg(java.lang.String)>($r10);

     label08:
        goto label02;

     label09:
        $r14 := @caughtexception;

        r5 = $r14;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reading-");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("= threw: ");

        $r20 = virtualinvoke r5.<java.lang.Exception: java.lang.String toString()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.xalan.xslt.EnvironmentCheck: void logMsg(java.lang.String)>($r21);

        goto label02;

     label10:
        virtualinvoke r0.<org.apache.xalan.xslt.EnvironmentCheck: void logMsg(java.lang.String)>("#----- END writeEnvironmentReport: Useful properties found: -----");

        return z0;

        catch java.lang.Exception from label03 to label04 with label09;
        catch java.lang.Exception from label05 to label06 with label09;
        catch java.lang.Exception from label07 to label08 with label09;
    }
}
