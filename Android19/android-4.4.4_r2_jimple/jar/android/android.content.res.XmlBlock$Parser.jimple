final class android.content.res.XmlBlock$Parser extends java.lang.Object implements android.content.res.XmlResourceParser
{
    private final android.content.res.XmlBlock mBlock;
    private boolean mDecNextDepth;
    private int mDepth;
    private int mEventType;
    int mParseState;
    private boolean mStarted;
    final android.content.res.XmlBlock this$0;

    void <init>(android.content.res.XmlBlock, int, android.content.res.XmlBlock)
    {
        android.content.res.XmlBlock$Parser r0;
        android.content.res.XmlBlock r1, r2;
        int i0;

        r0 := @this: android.content.res.XmlBlock$Parser;

        r1 := @parameter0: android.content.res.XmlBlock;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.res.XmlBlock;

        r0.<android.content.res.XmlBlock$Parser: android.content.res.XmlBlock this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.res.XmlBlock$Parser: boolean mStarted> = 0;

        r0.<android.content.res.XmlBlock$Parser: boolean mDecNextDepth> = 0;

        r0.<android.content.res.XmlBlock$Parser: int mDepth> = 0;

        r0.<android.content.res.XmlBlock$Parser: int mEventType> = 0;

        r0.<android.content.res.XmlBlock$Parser: int mParseState> = i0;

        r0.<android.content.res.XmlBlock$Parser: android.content.res.XmlBlock mBlock> = r2;

        staticinvoke <android.content.res.XmlBlock: int access$008(android.content.res.XmlBlock)>(r2);

        return;
    }

    public void close()
    {
        android.content.res.XmlBlock$Parser r0;
        android.content.res.XmlBlock r1, $r3;
        java.lang.Throwable r2, $r4;
        int $i0, $i1;

        r0 := @this: android.content.res.XmlBlock$Parser;

        r1 = r0.<android.content.res.XmlBlock$Parser: android.content.res.XmlBlock mBlock>;

        entermonitor r1;

     label1:
        $i0 = r0.<android.content.res.XmlBlock$Parser: int mParseState>;

        if $i0 == 0 goto label2;

        $i1 = r0.<android.content.res.XmlBlock$Parser: int mParseState>;

        staticinvoke <android.content.res.XmlBlock: void access$1500(int)>($i1);

        r0.<android.content.res.XmlBlock$Parser: int mParseState> = 0;

        $r3 = r0.<android.content.res.XmlBlock$Parser: android.content.res.XmlBlock mBlock>;

        staticinvoke <android.content.res.XmlBlock: void access$1600(android.content.res.XmlBlock)>($r3);

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r4 := @caughtexception;

        r2 = $r4;

     label5:
        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void defineEntityReplacementText(java.lang.String, java.lang.String) throws org.xmlpull.v1.XmlPullParserException
    {
        android.content.res.XmlBlock$Parser r0;
        java.lang.String r1, r2;
        org.xmlpull.v1.XmlPullParserException $r3;

        r0 := @this: android.content.res.XmlBlock$Parser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r3.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("defineEntityReplacementText() not supported");

        throw $r3;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.content.res.XmlBlock$Parser r0;

        r0 := @this: android.content.res.XmlBlock$Parser;

        virtualinvoke r0.<android.content.res.XmlBlock$Parser: void close()>();

        return;
    }

    public boolean getAttributeBooleanValue(int, boolean)
    {
        android.content.res.XmlBlock$Parser r0;
        int i0, i1, $i2, $i3, $i4;
        boolean z0;

        r0 := @this: android.content.res.XmlBlock$Parser;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $i2 = r0.<android.content.res.XmlBlock$Parser: int mParseState>;

        i1 = staticinvoke <android.content.res.XmlBlock: int access$800(int,int)>($i2, i0);

        if i1 < 16 goto label2;

        if i1 > 31 goto label2;

        $i3 = r0.<android.content.res.XmlBlock$Parser: int mParseState>;

        $i4 = staticinvoke <android.content.res.XmlBlock: int access$900(int,int)>($i3, i0);

        if $i4 == 0 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        return z0;
    }

    public boolean getAttributeBooleanValue(java.lang.String, java.lang.String, boolean)
    {
        android.content.res.XmlBlock$Parser r0;
        java.lang.String r1, r2;
        boolean z0;
        int i0, $i1;

        r0 := @this: android.content.res.XmlBlock$Parser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $i1 = r0.<android.content.res.XmlBlock$Parser: int mParseState>;

        i0 = staticinvoke <android.content.res.XmlBlock: int access$1000(int,java.lang.String,java.lang.String)>($i1, r1, r2);

        if i0 < 0 goto label1;

        z0 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: boolean getAttributeBooleanValue(int,boolean)>(i0, z0);

     label1:
        return z0;
    }

    public int getAttributeCount()
    {
        android.content.res.XmlBlock$Parser r0;
        int $i0, $i1, $i2;

        r0 := @this: android.content.res.XmlBlock$Parser;

        $i0 = r0.<android.content.res.XmlBlock$Parser: int mEventType>;

        if $i0 != 2 goto label1;

        $i1 = r0.<android.content.res.XmlBlock$Parser: int mParseState>;

        $i2 = staticinvoke <android.content.res.XmlBlock: int access$600(int)>($i1);

        return $i2;

     label1:
        return -1;
    }

    public float getAttributeFloatValue(int, float)
    {
        android.content.res.XmlBlock$Parser r0;
        int i0, $i1, $i2, $i3, $i4;
        float f0, $f1;
        java.lang.RuntimeException $r1;

        r0 := @this: android.content.res.XmlBlock$Parser;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        $i1 = r0.<android.content.res.XmlBlock$Parser: int mParseState>;

        $i2 = staticinvoke <android.content.res.XmlBlock: int access$800(int,int)>($i1, i0);

        if $i2 != 4 goto label1;

        $i3 = r0.<android.content.res.XmlBlock$Parser: int mParseState>;

        $i4 = staticinvoke <android.content.res.XmlBlock: int access$900(int,int)>($i3, i0);

        $f1 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i4);

        return $f1;

     label1:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("not a float!");

        throw $r1;
    }

    public float getAttributeFloatValue(java.lang.String, java.lang.String, float)
    {
        android.content.res.XmlBlock$Parser r0;
        java.lang.String r1, r2;
        float f0;
        int i0, $i1;

        r0 := @this: android.content.res.XmlBlock$Parser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        f0 := @parameter2: float;

        $i1 = r0.<android.content.res.XmlBlock$Parser: int mParseState>;

        i0 = staticinvoke <android.content.res.XmlBlock: int access$1000(int,java.lang.String,java.lang.String)>($i1, r1, r2);

        if i0 < 0 goto label1;

        f0 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: float getAttributeFloatValue(int,float)>(i0, f0);

     label1:
        return f0;
    }

    public int getAttributeIntValue(int, int)
    {
        android.content.res.XmlBlock$Parser r0;
        int i0, i1, i2, $i3, $i4;

        r0 := @this: android.content.res.XmlBlock$Parser;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i3 = r0.<android.content.res.XmlBlock$Parser: int mParseState>;

        i2 = staticinvoke <android.content.res.XmlBlock: int access$800(int,int)>($i3, i0);

        if i2 < 16 goto label1;

        if i2 > 31 goto label1;

        $i4 = r0.<android.content.res.XmlBlock$Parser: int mParseState>;

        i1 = staticinvoke <android.content.res.XmlBlock: int access$900(int,int)>($i4, i0);

     label1:
        return i1;
    }

    public int getAttributeIntValue(java.lang.String, java.lang.String, int)
    {
        android.content.res.XmlBlock$Parser r0;
        java.lang.String r1, r2;
        int i0, i1, $i2;

        r0 := @this: android.content.res.XmlBlock$Parser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $i2 = r0.<android.content.res.XmlBlock$Parser: int mParseState>;

        i1 = staticinvoke <android.content.res.XmlBlock: int access$1000(int,java.lang.String,java.lang.String)>($i2, r1, r2);

        if i1 < 0 goto label1;

        i0 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: int getAttributeIntValue(int,int)>(i1, i0);

     label1:
        return i0;
    }

    public int getAttributeListValue(int, java.lang.String[], int)
    {
        android.content.res.XmlBlock$Parser r0;
        int i0, i1, i2, i3, $i4, $i5;
        java.lang.String[] r1;
        android.content.res.XmlBlock $r2;
        android.content.res.StringBlock $r3;
        java.lang.CharSequence $r4;

        r0 := @this: android.content.res.XmlBlock$Parser;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String[];

        i1 := @parameter2: int;

        $i4 = r0.<android.content.res.XmlBlock$Parser: int mParseState>;

        i2 = staticinvoke <android.content.res.XmlBlock: int access$800(int,int)>($i4, i0);

        $i5 = r0.<android.content.res.XmlBlock$Parser: int mParseState>;

        i3 = staticinvoke <android.content.res.XmlBlock: int access$900(int,int)>($i5, i0);

        if i2 != 3 goto label1;

        $r2 = r0.<android.content.res.XmlBlock$Parser: android.content.res.XmlBlock this$0>;

        $r3 = $r2.<android.content.res.XmlBlock: android.content.res.StringBlock mStrings>;

        $r4 = virtualinvoke $r3.<android.content.res.StringBlock: java.lang.CharSequence get(int)>(i3);

        i3 = staticinvoke <com.android.internal.util.XmlUtils: int convertValueToList(java.lang.CharSequence,java.lang.String[],int)>($r4, r1, i1);

     label1:
        return i3;
    }

    public int getAttributeListValue(java.lang.String, java.lang.String, java.lang.String[], int)
    {
        android.content.res.XmlBlock$Parser r0;
        java.lang.String r1, r2;
        java.lang.String[] r3;
        int i0, i1, $i2;

        r0 := @this: android.content.res.XmlBlock$Parser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String[];

        i0 := @parameter3: int;

        $i2 = r0.<android.content.res.XmlBlock$Parser: int mParseState>;

        i1 = staticinvoke <android.content.res.XmlBlock: int access$1000(int,java.lang.String,java.lang.String)>($i2, r1, r2);

        if i1 < 0 goto label1;

        i0 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: int getAttributeListValue(int,java.lang.String[],int)>(i1, r3, i0);

     label1:
        return i0;
    }

    public java.lang.String getAttributeName(int)
    {
        android.content.res.XmlBlock$Parser r0;
        int i0, i1, $i2;
        java.lang.IndexOutOfBoundsException $r1;
        java.lang.String $r2, $r6;
        android.content.res.XmlBlock $r3;
        android.content.res.StringBlock $r4;
        java.lang.CharSequence $r5;

        r0 := @this: android.content.res.XmlBlock$Parser;

        i0 := @parameter0: int;

        $i2 = r0.<android.content.res.XmlBlock$Parser: int mParseState>;

        i1 = staticinvoke <android.content.res.XmlBlock: int access$500(int,int)>($i2, i0);

        if i1 < 0 goto label1;

        $r3 = r0.<android.content.res.XmlBlock$Parser: android.content.res.XmlBlock this$0>;

        $r4 = $r3.<android.content.res.XmlBlock: android.content.res.StringBlock mStrings>;

        $r5 = virtualinvoke $r4.<android.content.res.StringBlock: java.lang.CharSequence get(int)>(i1);

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        return $r6;

     label1:
        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r2);

        throw $r1;
    }

    public int getAttributeNameResource(int)
    {
        android.content.res.XmlBlock$Parser r0;
        int i0, $i1, $i2;

        r0 := @this: android.content.res.XmlBlock$Parser;

        i0 := @parameter0: int;

        $i1 = r0.<android.content.res.XmlBlock$Parser: int mParseState>;

        $i2 = staticinvoke <android.content.res.XmlBlock: int access$1100(int,int)>($i1, i0);

        return $i2;
    }

    public java.lang.String getAttributeNamespace(int)
    {
        android.content.res.XmlBlock$Parser r0;
        int i0, i1, $i2;
        java.lang.IndexOutOfBoundsException $r1;
        java.lang.String $r2, $r6;
        android.content.res.XmlBlock $r3;
        android.content.res.StringBlock $r4;
        java.lang.CharSequence $r5;

        r0 := @this: android.content.res.XmlBlock$Parser;

        i0 := @parameter0: int;

        $i2 = r0.<android.content.res.XmlBlock$Parser: int mParseState>;

        i1 = staticinvoke <android.content.res.XmlBlock: int access$400(int,int)>($i2, i0);

        if i1 < 0 goto label1;

        $r3 = r0.<android.content.res.XmlBlock$Parser: android.content.res.XmlBlock this$0>;

        $r4 = $r3.<android.content.res.XmlBlock: android.content.res.StringBlock mStrings>;

        $r5 = virtualinvoke $r4.<android.content.res.StringBlock: java.lang.CharSequence get(int)>(i1);

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        return $r6;

     label1:
        if i1 != -1 goto label2;

        return "";

     label2:
        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r2);

        throw $r1;
    }

    public java.lang.String getAttributePrefix(int)
    {
        android.content.res.XmlBlock$Parser r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.content.res.XmlBlock$Parser;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("getAttributePrefix not supported");

        throw $r1;
    }

    public int getAttributeResourceValue(int, int)
    {
        android.content.res.XmlBlock$Parser r0;
        int i0, i1, $i2, $i3, $i4;

        r0 := @this: android.content.res.XmlBlock$Parser;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<android.content.res.XmlBlock$Parser: int mParseState>;

        $i3 = staticinvoke <android.content.res.XmlBlock: int access$800(int,int)>($i2, i0);

        if $i3 != 1 goto label1;

        $i4 = r0.<android.content.res.XmlBlock$Parser: int mParseState>;

        i1 = staticinvoke <android.content.res.XmlBlock: int access$900(int,int)>($i4, i0);

     label1:
        return i1;
    }

    public int getAttributeResourceValue(java.lang.String, java.lang.String, int)
    {
        android.content.res.XmlBlock$Parser r0;
        java.lang.String r1, r2;
        int i0, i1, $i2;

        r0 := @this: android.content.res.XmlBlock$Parser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $i2 = r0.<android.content.res.XmlBlock$Parser: int mParseState>;

        i1 = staticinvoke <android.content.res.XmlBlock: int access$1000(int,java.lang.String,java.lang.String)>($i2, r1, r2);

        if i1 < 0 goto label1;

        i0 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: int getAttributeResourceValue(int,int)>(i1, i0);

     label1:
        return i0;
    }

    public java.lang.String getAttributeType(int)
    {
        android.content.res.XmlBlock$Parser r0;
        int i0;

        r0 := @this: android.content.res.XmlBlock$Parser;

        i0 := @parameter0: int;

        return "CDATA";
    }

    public int getAttributeUnsignedIntValue(int, int)
    {
        android.content.res.XmlBlock$Parser r0;
        int i0, i1, i2, $i3, $i4;

        r0 := @this: android.content.res.XmlBlock$Parser;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i3 = r0.<android.content.res.XmlBlock$Parser: int mParseState>;

        i2 = staticinvoke <android.content.res.XmlBlock: int access$800(int,int)>($i3, i0);

        if i2 < 16 goto label1;

        if i2 > 31 goto label1;

        $i4 = r0.<android.content.res.XmlBlock$Parser: int mParseState>;

        i1 = staticinvoke <android.content.res.XmlBlock: int access$900(int,int)>($i4, i0);

     label1:
        return i1;
    }

    public int getAttributeUnsignedIntValue(java.lang.String, java.lang.String, int)
    {
        android.content.res.XmlBlock$Parser r0;
        java.lang.String r1, r2;
        int i0, i1, $i2;

        r0 := @this: android.content.res.XmlBlock$Parser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $i2 = r0.<android.content.res.XmlBlock$Parser: int mParseState>;

        i1 = staticinvoke <android.content.res.XmlBlock: int access$1000(int,java.lang.String,java.lang.String)>($i2, r1, r2);

        if i1 < 0 goto label1;

        i0 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: int getAttributeUnsignedIntValue(int,int)>(i1, i0);

     label1:
        return i0;
    }

    public java.lang.String getAttributeValue(int)
    {
        android.content.res.XmlBlock$Parser r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        java.lang.String $r1, $r3, $r7;
        java.lang.IndexOutOfBoundsException $r2;
        android.content.res.XmlBlock $r4;
        android.content.res.StringBlock $r5;
        java.lang.CharSequence $r6;

        r0 := @this: android.content.res.XmlBlock$Parser;

        i0 := @parameter0: int;

        $i3 = r0.<android.content.res.XmlBlock$Parser: int mParseState>;

        i1 = staticinvoke <android.content.res.XmlBlock: int access$700(int,int)>($i3, i0);

        if i1 < 0 goto label1;

        $r4 = r0.<android.content.res.XmlBlock$Parser: android.content.res.XmlBlock this$0>;

        $r5 = $r4.<android.content.res.XmlBlock: android.content.res.StringBlock mStrings>;

        $r6 = virtualinvoke $r5.<android.content.res.StringBlock: java.lang.CharSequence get(int)>(i1);

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        return $r7;

     label1:
        $i4 = r0.<android.content.res.XmlBlock$Parser: int mParseState>;

        i2 = staticinvoke <android.content.res.XmlBlock: int access$800(int,int)>($i4, i0);

        if i2 != 0 goto label2;

        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label2:
        $i5 = r0.<android.content.res.XmlBlock$Parser: int mParseState>;

        $i6 = staticinvoke <android.content.res.XmlBlock: int access$900(int,int)>($i5, i0);

        $r1 = staticinvoke <android.util.TypedValue: java.lang.String coerceToString(int,int)>(i2, $i6);

        return $r1;
    }

    public java.lang.String getAttributeValue(java.lang.String, java.lang.String)
    {
        android.content.res.XmlBlock$Parser r0;
        java.lang.String r1, r2, $r3;
        int i0, $i1;

        r0 := @this: android.content.res.XmlBlock$Parser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $i1 = r0.<android.content.res.XmlBlock$Parser: int mParseState>;

        i0 = staticinvoke <android.content.res.XmlBlock: int access$1000(int,java.lang.String,java.lang.String)>($i1, r1, r2);

        if i0 < 0 goto label1;

        $r3 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: java.lang.String getAttributeValue(int)>(i0);

        return $r3;

     label1:
        return null;
    }

    public java.lang.String getClassAttribute()
    {
        android.content.res.XmlBlock$Parser r0;
        int i0, $i1;
        android.content.res.XmlBlock $r1;
        android.content.res.StringBlock $r2;
        java.lang.CharSequence $r3;
        java.lang.String $r4;

        r0 := @this: android.content.res.XmlBlock$Parser;

        $i1 = r0.<android.content.res.XmlBlock$Parser: int mParseState>;

        i0 = staticinvoke <android.content.res.XmlBlock: int access$1300(int)>($i1);

        if i0 < 0 goto label1;

        $r1 = r0.<android.content.res.XmlBlock$Parser: android.content.res.XmlBlock this$0>;

        $r2 = $r1.<android.content.res.XmlBlock: android.content.res.StringBlock mStrings>;

        $r3 = virtualinvoke $r2.<android.content.res.StringBlock: java.lang.CharSequence get(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        return $r4;

     label1:
        return null;
    }

    public int getColumnNumber()
    {
        android.content.res.XmlBlock$Parser r0;

        r0 := @this: android.content.res.XmlBlock$Parser;

        return -1;
    }

    public int getDepth()
    {
        android.content.res.XmlBlock$Parser r0;
        int $i0;

        r0 := @this: android.content.res.XmlBlock$Parser;

        $i0 = r0.<android.content.res.XmlBlock$Parser: int mDepth>;

        return $i0;
    }

    public int getEventType() throws org.xmlpull.v1.XmlPullParserException
    {
        android.content.res.XmlBlock$Parser r0;
        int $i0;

        r0 := @this: android.content.res.XmlBlock$Parser;

        $i0 = r0.<android.content.res.XmlBlock$Parser: int mEventType>;

        return $i0;
    }

    public boolean getFeature(java.lang.String)
    {
        android.content.res.XmlBlock$Parser r0;
        java.lang.String r1, $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: android.content.res.XmlBlock$Parser;

        r1 := @parameter0: java.lang.String;

        $r2 = "http://xmlpull.org/v1/doc/features.html#process-namespaces";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        $r3 = "http://xmlpull.org/v1/doc/features.html#report-namespace-prefixes";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 != 0 goto label1;

        return 0;
    }

    public java.lang.String getIdAttribute()
    {
        android.content.res.XmlBlock$Parser r0;
        int i0, $i1;
        android.content.res.XmlBlock $r1;
        android.content.res.StringBlock $r2;
        java.lang.CharSequence $r3;
        java.lang.String $r4;

        r0 := @this: android.content.res.XmlBlock$Parser;

        $i1 = r0.<android.content.res.XmlBlock$Parser: int mParseState>;

        i0 = staticinvoke <android.content.res.XmlBlock: int access$1200(int)>($i1);

        if i0 < 0 goto label1;

        $r1 = r0.<android.content.res.XmlBlock$Parser: android.content.res.XmlBlock this$0>;

        $r2 = $r1.<android.content.res.XmlBlock: android.content.res.StringBlock mStrings>;

        $r3 = virtualinvoke $r2.<android.content.res.StringBlock: java.lang.CharSequence get(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        return $r4;

     label1:
        return null;
    }

    public int getIdAttributeResourceValue(int)
    {
        android.content.res.XmlBlock$Parser r0;
        int i0, $i1;

        r0 := @this: android.content.res.XmlBlock$Parser;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: int getAttributeResourceValue(java.lang.String,java.lang.String,int)>(null, "id", i0);

        return $i1;
    }

    public java.lang.String getInputEncoding()
    {
        android.content.res.XmlBlock$Parser r0;

        r0 := @this: android.content.res.XmlBlock$Parser;

        return null;
    }

    public int getLineNumber()
    {
        android.content.res.XmlBlock$Parser r0;
        int $i0, $i1;

        r0 := @this: android.content.res.XmlBlock$Parser;

        $i0 = r0.<android.content.res.XmlBlock$Parser: int mParseState>;

        $i1 = staticinvoke <android.content.res.XmlBlock: int access$200(int)>($i0);

        return $i1;
    }

    public java.lang.String getName()
    {
        android.content.res.XmlBlock$Parser r0;
        int i0, $i1;
        android.content.res.XmlBlock $r1;
        android.content.res.StringBlock $r2;
        java.lang.CharSequence $r3;
        java.lang.String $r4;

        r0 := @this: android.content.res.XmlBlock$Parser;

        $i1 = r0.<android.content.res.XmlBlock$Parser: int mParseState>;

        i0 = staticinvoke <android.content.res.XmlBlock: int nativeGetName(int)>($i1);

        if i0 < 0 goto label1;

        $r1 = r0.<android.content.res.XmlBlock$Parser: android.content.res.XmlBlock this$0>;

        $r2 = $r1.<android.content.res.XmlBlock: android.content.res.StringBlock mStrings>;

        $r3 = virtualinvoke $r2.<android.content.res.StringBlock: java.lang.CharSequence get(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        return $r4;

     label1:
        return null;
    }

    public java.lang.String getNamespace()
    {
        android.content.res.XmlBlock$Parser r0;
        int i0, $i1;
        android.content.res.XmlBlock $r1;
        android.content.res.StringBlock $r2;
        java.lang.CharSequence $r3;
        java.lang.String $r4;

        r0 := @this: android.content.res.XmlBlock$Parser;

        $i1 = r0.<android.content.res.XmlBlock$Parser: int mParseState>;

        i0 = staticinvoke <android.content.res.XmlBlock: int access$300(int)>($i1);

        if i0 < 0 goto label1;

        $r1 = r0.<android.content.res.XmlBlock$Parser: android.content.res.XmlBlock this$0>;

        $r2 = $r1.<android.content.res.XmlBlock: android.content.res.StringBlock mStrings>;

        $r3 = virtualinvoke $r2.<android.content.res.StringBlock: java.lang.CharSequence get(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        return $r4;

     label1:
        return "";
    }

    public java.lang.String getNamespace(java.lang.String)
    {
        android.content.res.XmlBlock$Parser r0;
        java.lang.String r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.content.res.XmlBlock$Parser;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("getNamespace() not supported");

        throw $r2;
    }

    public int getNamespaceCount(int) throws org.xmlpull.v1.XmlPullParserException
    {
        android.content.res.XmlBlock$Parser r0;
        int i0;
        org.xmlpull.v1.XmlPullParserException $r1;

        r0 := @this: android.content.res.XmlBlock$Parser;

        i0 := @parameter0: int;

        $r1 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r1.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("getNamespaceCount() not supported");

        throw $r1;
    }

    public java.lang.String getNamespacePrefix(int) throws org.xmlpull.v1.XmlPullParserException
    {
        android.content.res.XmlBlock$Parser r0;
        int i0;
        org.xmlpull.v1.XmlPullParserException $r1;

        r0 := @this: android.content.res.XmlBlock$Parser;

        i0 := @parameter0: int;

        $r1 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r1.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("getNamespacePrefix() not supported");

        throw $r1;
    }

    public java.lang.String getNamespaceUri(int) throws org.xmlpull.v1.XmlPullParserException
    {
        android.content.res.XmlBlock$Parser r0;
        int i0;
        org.xmlpull.v1.XmlPullParserException $r1;

        r0 := @this: android.content.res.XmlBlock$Parser;

        i0 := @parameter0: int;

        $r1 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r1.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("getNamespaceUri() not supported");

        throw $r1;
    }

    final java.lang.CharSequence getPooledString(int)
    {
        android.content.res.XmlBlock$Parser r0;
        int i0;
        android.content.res.XmlBlock $r1;
        android.content.res.StringBlock $r2;
        java.lang.CharSequence $r3;

        r0 := @this: android.content.res.XmlBlock$Parser;

        i0 := @parameter0: int;

        $r1 = r0.<android.content.res.XmlBlock$Parser: android.content.res.XmlBlock this$0>;

        $r2 = $r1.<android.content.res.XmlBlock: android.content.res.StringBlock mStrings>;

        $r3 = virtualinvoke $r2.<android.content.res.StringBlock: java.lang.CharSequence get(int)>(i0);

        return $r3;
    }

    public java.lang.String getPositionDescription()
    {
        android.content.res.XmlBlock$Parser r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        int $i0;
        java.lang.String $r4;

        r0 := @this: android.content.res.XmlBlock$Parser;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Binary XML file line #");

        $i0 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: int getLineNumber()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public java.lang.String getPrefix()
    {
        android.content.res.XmlBlock$Parser r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.content.res.XmlBlock$Parser;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("getPrefix not supported");

        throw $r1;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        android.content.res.XmlBlock$Parser r0;
        java.lang.String r1;

        r0 := @this: android.content.res.XmlBlock$Parser;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    public int getStyleAttribute()
    {
        android.content.res.XmlBlock$Parser r0;
        int $i0, $i1;

        r0 := @this: android.content.res.XmlBlock$Parser;

        $i0 = r0.<android.content.res.XmlBlock$Parser: int mParseState>;

        $i1 = staticinvoke <android.content.res.XmlBlock: int access$1400(int)>($i0);

        return $i1;
    }

    public java.lang.String getText()
    {
        android.content.res.XmlBlock$Parser r0;
        int i0, $i1;
        android.content.res.XmlBlock $r1;
        android.content.res.StringBlock $r2;
        java.lang.CharSequence $r3;
        java.lang.String $r4;

        r0 := @this: android.content.res.XmlBlock$Parser;

        $i1 = r0.<android.content.res.XmlBlock$Parser: int mParseState>;

        i0 = staticinvoke <android.content.res.XmlBlock: int access$100(int)>($i1);

        if i0 < 0 goto label1;

        $r1 = r0.<android.content.res.XmlBlock$Parser: android.content.res.XmlBlock this$0>;

        $r2 = $r1.<android.content.res.XmlBlock: android.content.res.StringBlock mStrings>;

        $r3 = virtualinvoke $r2.<android.content.res.StringBlock: java.lang.CharSequence get(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        return $r4;

     label1:
        return null;
    }

    public char[] getTextCharacters(int[])
    {
        android.content.res.XmlBlock$Parser r0;
        int[] r1;
        java.lang.String r2;
        char[] r3;
        int $i0, $i1, $i2;

        r0 := @this: android.content.res.XmlBlock$Parser;

        r1 := @parameter0: int[];

        r2 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: java.lang.String getText()>();

        r3 = null;

        if r2 == null goto label1;

        r1[0] = 0;

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        r1[1] = $i0;

        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        r3 = newarray (char)[$i1];

        $i2 = virtualinvoke r2.<java.lang.String: int length()>();

        virtualinvoke r2.<java.lang.String: void getChars(int,int,char[],int)>(0, $i2, r3, 0);

     label1:
        return r3;
    }

    public boolean isAttributeDefault(int)
    {
        android.content.res.XmlBlock$Parser r0;
        int i0;

        r0 := @this: android.content.res.XmlBlock$Parser;

        i0 := @parameter0: int;

        return 0;
    }

    public boolean isEmptyElementTag() throws org.xmlpull.v1.XmlPullParserException
    {
        android.content.res.XmlBlock$Parser r0;

        r0 := @this: android.content.res.XmlBlock$Parser;

        return 0;
    }

    public boolean isWhitespace() throws org.xmlpull.v1.XmlPullParserException
    {
        android.content.res.XmlBlock$Parser r0;

        r0 := @this: android.content.res.XmlBlock$Parser;

        return 0;
    }

    public int next() throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.XmlBlock$Parser r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0, $z1;

        r0 := @this: android.content.res.XmlBlock$Parser;

        $z0 = r0.<android.content.res.XmlBlock$Parser: boolean mStarted>;

        if $z0 != 0 goto label2;

        r0.<android.content.res.XmlBlock$Parser: boolean mStarted> = 1;

        i0 = 0;

     label1:
        return i0;

     label2:
        $i1 = r0.<android.content.res.XmlBlock$Parser: int mParseState>;

        if $i1 != 0 goto label3;

        return 1;

     label3:
        $i2 = r0.<android.content.res.XmlBlock$Parser: int mParseState>;

        i0 = staticinvoke <android.content.res.XmlBlock: int nativeNext(int)>($i2);

        $z1 = r0.<android.content.res.XmlBlock$Parser: boolean mDecNextDepth>;

        if $z1 == 0 goto label4;

        $i5 = r0.<android.content.res.XmlBlock$Parser: int mDepth>;

        $i6 = -1 + $i5;

        r0.<android.content.res.XmlBlock$Parser: int mDepth> = $i6;

        r0.<android.content.res.XmlBlock$Parser: boolean mDecNextDepth> = 0;

     label4:
        tableswitch(i0)
        {
            case 2: goto label6;
            case 3: goto label7;
            default: goto label5;
        };

     label5:
        r0.<android.content.res.XmlBlock$Parser: int mEventType> = i0;

        if i0 != 1 goto label1;

        virtualinvoke r0.<android.content.res.XmlBlock$Parser: void close()>();

        return i0;

     label6:
        $i3 = r0.<android.content.res.XmlBlock$Parser: int mDepth>;

        $i4 = 1 + $i3;

        r0.<android.content.res.XmlBlock$Parser: int mDepth> = $i4;

        goto label5;

     label7:
        r0.<android.content.res.XmlBlock$Parser: boolean mDecNextDepth> = 1;

        goto label5;
    }

    public int nextTag() throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.XmlBlock$Parser r0;
        int i0;
        org.xmlpull.v1.XmlPullParserException $r1;
        java.lang.StringBuilder $r2, $r4, $r5;
        java.lang.String $r3, $r6;
        boolean $z0;

        r0 := @this: android.content.res.XmlBlock$Parser;

        i0 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: int next()>();

        if i0 != 4 goto label1;

        $z0 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: boolean isWhitespace()>();

        if $z0 == 0 goto label1;

        i0 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: int next()>();

     label1:
        if i0 == 2 goto label2;

        if i0 == 3 goto label2;

        $r1 = new org.xmlpull.v1.XmlPullParserException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: java.lang.String getPositionDescription()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": expected start or end tag");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>($r6, r0, null);

        throw $r1;

     label2:
        return i0;
    }

    public java.lang.String nextText() throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.XmlBlock$Parser r0;
        int i0, $i1, $i2;
        java.lang.String r1, $r4, $r7, $r10, $r14, $r15, $r19;
        org.xmlpull.v1.XmlPullParserException $r2, $r8, $r13;
        java.lang.StringBuilder $r3, $r5, $r6, $r9, $r11, $r12, $r16, $r17, $r18;

        r0 := @this: android.content.res.XmlBlock$Parser;

        $i1 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: int getEventType()>();

        if $i1 == 2 goto label1;

        $r13 = new org.xmlpull.v1.XmlPullParserException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: java.lang.String getPositionDescription()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": parser must be on START_TAG to read next text");

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>($r19, r0, null);

        throw $r13;

     label1:
        i0 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: int next()>();

        if i0 != 4 goto label2;

        r1 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: java.lang.String getText()>();

        $i2 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: int next()>();

        if $i2 == 3 goto label3;

        $r8 = new org.xmlpull.v1.XmlPullParserException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: java.lang.String getPositionDescription()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": event TEXT it must be immediately followed by END_TAG");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>($r14, r0, null);

        throw $r8;

     label2:
        if i0 != 3 goto label4;

        r1 = "";

     label3:
        return r1;

     label4:
        $r2 = new org.xmlpull.v1.XmlPullParserException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: java.lang.String getPositionDescription()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": parser must be on START_TAG or TEXT to read text");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>($r7, r0, null);

        throw $r2;
    }

    public int nextToken() throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.XmlBlock$Parser r0;
        int $i0;

        r0 := @this: android.content.res.XmlBlock$Parser;

        $i0 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: int next()>();

        return $i0;
    }

    public void require(int, java.lang.String, java.lang.String) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.XmlBlock$Parser r0;
        int i0, $i1;
        java.lang.String r1, r2, $r7, $r9, $r11, $r12, $r13;
        org.xmlpull.v1.XmlPullParserException $r3;
        java.lang.StringBuilder $r4, $r5, $r8, $r10;
        java.lang.String[] $r6;
        boolean $z0, $z1;

        r0 := @this: android.content.res.XmlBlock$Parser;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $i1 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: int getEventType()>();

        if i0 != $i1 goto label2;

        if r1 == null goto label1;

        $r13 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: java.lang.String getNamespace()>();

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z1 == 0 goto label2;

     label1:
        if r2 == null goto label3;

        $r12 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: java.lang.String getName()>();

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z0 != 0 goto label3;

     label2:
        $r3 = new org.xmlpull.v1.XmlPullParserException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected ");

        $r6 = <android.content.res.XmlBlock$Parser: java.lang.String[] TYPES>;

        $r7 = $r6[i0];

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke r0.<android.content.res.XmlBlock$Parser: java.lang.String getPositionDescription()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r11);

        throw $r3;

     label3:
        return;
    }

    public void setFeature(java.lang.String, boolean) throws org.xmlpull.v1.XmlPullParserException
    {
        android.content.res.XmlBlock$Parser r0;
        java.lang.String r1, $r2, $r3, $r8;
        boolean z0, $z1, $z2;
        org.xmlpull.v1.XmlPullParserException $r4;
        java.lang.StringBuilder $r5, $r6, $r7;

        r0 := @this: android.content.res.XmlBlock$Parser;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = "http://xmlpull.org/v1/doc/features.html#process-namespaces";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        if z0 == 0 goto label2;

     label1:
        return;

     label2:
        $r3 = "http://xmlpull.org/v1/doc/features.html#report-namespace-prefixes";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label3;

        if z0 != 0 goto label1;

     label3:
        $r4 = new org.xmlpull.v1.XmlPullParserException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported feature: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r8);

        throw $r4;
    }

    public void setInput(java.io.InputStream, java.lang.String) throws org.xmlpull.v1.XmlPullParserException
    {
        android.content.res.XmlBlock$Parser r0;
        java.io.InputStream r1;
        java.lang.String r2;
        org.xmlpull.v1.XmlPullParserException $r3;

        r0 := @this: android.content.res.XmlBlock$Parser;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.lang.String;

        $r3 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r3.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("setInput() not supported");

        throw $r3;
    }

    public void setInput(java.io.Reader) throws org.xmlpull.v1.XmlPullParserException
    {
        android.content.res.XmlBlock$Parser r0;
        java.io.Reader r1;
        org.xmlpull.v1.XmlPullParserException $r2;

        r0 := @this: android.content.res.XmlBlock$Parser;

        r1 := @parameter0: java.io.Reader;

        $r2 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r2.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("setInput() not supported");

        throw $r2;
    }

    public void setProperty(java.lang.String, java.lang.Object) throws org.xmlpull.v1.XmlPullParserException
    {
        android.content.res.XmlBlock$Parser r0;
        java.lang.String r1;
        java.lang.Object r2;
        org.xmlpull.v1.XmlPullParserException $r3;

        r0 := @this: android.content.res.XmlBlock$Parser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r3.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("setProperty() not supported");

        throw $r3;
    }
}
