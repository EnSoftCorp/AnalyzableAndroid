public class android.os.HandlerThread extends java.lang.Thread
{
    android.os.Looper mLooper;
    int mPriority;
    int mTid;

    public void <init>(java.lang.String)
    {
        android.os.HandlerThread r0;
        java.lang.String r1;

        r0 := @this: android.os.HandlerThread;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Thread: void <init>(java.lang.String)>(r1);

        r0.<android.os.HandlerThread: int mTid> = -1;

        r0.<android.os.HandlerThread: int mPriority> = 0;

        return;
    }

    public void <init>(java.lang.String, int)
    {
        android.os.HandlerThread r0;
        java.lang.String r1;
        int i0;

        r0 := @this: android.os.HandlerThread;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Thread: void <init>(java.lang.String)>(r1);

        r0.<android.os.HandlerThread: int mTid> = -1;

        r0.<android.os.HandlerThread: int mPriority> = i0;

        return;
    }

    public android.os.Looper getLooper()
    {
        android.os.HandlerThread r0;
        java.lang.Throwable r1, $r5;
        android.os.Looper r2, $r4;
        boolean $z0, $z1;
        java.lang.InterruptedException $r6;

        r0 := @this: android.os.HandlerThread;

        $z0 = virtualinvoke r0.<android.os.HandlerThread: boolean isAlive()>();

        if $z0 != 0 goto label01;

        return null;

     label01:
        entermonitor r0;

     label02:
        $z1 = virtualinvoke r0.<android.os.HandlerThread: boolean isAlive()>();

        if $z1 == 0 goto label07;

        r2 = r0.<android.os.HandlerThread: android.os.Looper mLooper>;

     label03:
        if r2 != null goto label07;

     label04:
        virtualinvoke r0.<java.lang.Object: void wait()>();

     label05:
        goto label02;

     label06:
        $r6 := @caughtexception;

        goto label02;

     label07:
        exitmonitor r0;

     label08:
        $r4 = r0.<android.os.HandlerThread: android.os.Looper mLooper>;

        return $r4;

     label09:
        $r5 := @caughtexception;

        r1 = $r5;

     label10:
        exitmonitor r0;

     label11:
        throw r1;

        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.InterruptedException from label04 to label05 with label06;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public int getThreadId()
    {
        android.os.HandlerThread r0;
        int $i0;

        r0 := @this: android.os.HandlerThread;

        $i0 = r0.<android.os.HandlerThread: int mTid>;

        return $i0;
    }

    protected void onLooperPrepared()
    {
        android.os.HandlerThread r0;

        r0 := @this: android.os.HandlerThread;

        return;
    }

    public boolean quit()
    {
        android.os.HandlerThread r0;
        android.os.Looper r1;

        r0 := @this: android.os.HandlerThread;

        r1 = virtualinvoke r0.<android.os.HandlerThread: android.os.Looper getLooper()>();

        if r1 == null goto label1;

        virtualinvoke r1.<android.os.Looper: void quit()>();

        return 1;

     label1:
        return 0;
    }

    public boolean quitSafely()
    {
        android.os.HandlerThread r0;
        android.os.Looper r1;

        r0 := @this: android.os.HandlerThread;

        r1 = virtualinvoke r0.<android.os.HandlerThread: android.os.Looper getLooper()>();

        if r1 == null goto label1;

        virtualinvoke r1.<android.os.Looper: void quitSafely()>();

        return 1;

     label1:
        return 0;
    }

    public void run()
    {
        android.os.HandlerThread r0;
        java.lang.Throwable r1, $r3;
        int $i0, $i1;
        android.os.Looper $r2;

        r0 := @this: android.os.HandlerThread;

        $i0 = staticinvoke <android.os.Process: int myTid()>();

        r0.<android.os.HandlerThread: int mTid> = $i0;

        staticinvoke <android.os.Looper: void prepare()>();

        entermonitor r0;

     label1:
        $r2 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        r0.<android.os.HandlerThread: android.os.Looper mLooper> = $r2;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r0;

     label2:
        $i1 = r0.<android.os.HandlerThread: int mPriority>;

        staticinvoke <android.os.Process: void setThreadPriority(int)>($i1);

        virtualinvoke r0.<android.os.HandlerThread: void onLooperPrepared()>();

        staticinvoke <android.os.Looper: void loop()>();

        r0.<android.os.HandlerThread: int mTid> = -1;

        return;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

     label4:
        exitmonitor r0;

     label5:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
