public final class com.android.server.TwilightService extends java.lang.Object
{
    private static final java.lang.String ACTION_UPDATE_TWILIGHT_STATE;
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    private final android.app.AlarmManager mAlarmManager;
    private final android.content.Context mContext;
    private final android.location.LocationListener mEmptyLocationListener;
    private final java.util.ArrayList mListeners;
    private final com.android.server.TwilightService$LocationHandler mLocationHandler;
    private final android.location.LocationListener mLocationListener;
    private final android.location.LocationManager mLocationManager;
    private final java.lang.Object mLock;
    private boolean mSystemReady;
    private com.android.server.TwilightService$TwilightState mTwilightState;
    private final android.content.BroadcastReceiver mUpdateLocationReceiver;

    public void <init>(android.content.Context)
    {
        com.android.server.TwilightService r0;
        android.content.Context r1, $r7, $r10;
        java.lang.Object $r2, $r8, $r11;
        java.util.ArrayList $r3;
        com.android.server.TwilightService$1 $r4;
        com.android.server.TwilightService$2 $r5;
        com.android.server.TwilightService$3 $r6;
        android.app.AlarmManager $r9;
        android.location.LocationManager $r12;
        com.android.server.TwilightService$LocationHandler $r13;

        r0 := @this: com.android.server.TwilightService;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.server.TwilightService: java.lang.Object mLock> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.TwilightService: java.util.ArrayList mListeners> = $r3;

        $r4 = new com.android.server.TwilightService$1;

        specialinvoke $r4.<com.android.server.TwilightService$1: void <init>(com.android.server.TwilightService)>(r0);

        r0.<com.android.server.TwilightService: android.content.BroadcastReceiver mUpdateLocationReceiver> = $r4;

        $r5 = new com.android.server.TwilightService$2;

        specialinvoke $r5.<com.android.server.TwilightService$2: void <init>(com.android.server.TwilightService)>(r0);

        r0.<com.android.server.TwilightService: android.location.LocationListener mEmptyLocationListener> = $r5;

        $r6 = new com.android.server.TwilightService$3;

        specialinvoke $r6.<com.android.server.TwilightService$3: void <init>(com.android.server.TwilightService)>(r0);

        r0.<com.android.server.TwilightService: android.location.LocationListener mLocationListener> = $r6;

        r0.<com.android.server.TwilightService: android.content.Context mContext> = r1;

        $r7 = r0.<com.android.server.TwilightService: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("alarm");

        $r9 = (android.app.AlarmManager) $r8;

        r0.<com.android.server.TwilightService: android.app.AlarmManager mAlarmManager> = $r9;

        $r10 = r0.<com.android.server.TwilightService: android.content.Context mContext>;

        $r11 = virtualinvoke $r10.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("location");

        $r12 = (android.location.LocationManager) $r11;

        r0.<com.android.server.TwilightService: android.location.LocationManager mLocationManager> = $r12;

        $r13 = new com.android.server.TwilightService$LocationHandler;

        specialinvoke $r13.<com.android.server.TwilightService$LocationHandler: void <init>(com.android.server.TwilightService,com.android.server.TwilightService$1)>(r0, null);

        r0.<com.android.server.TwilightService: com.android.server.TwilightService$LocationHandler mLocationHandler> = $r13;

        return;
    }

    static boolean access$100(android.location.Location, android.location.Location)
    {
        android.location.Location r0, r1;
        boolean $z0;

        r0 := @parameter0: android.location.Location;

        r1 := @parameter1: android.location.Location;

        $z0 = staticinvoke <com.android.server.TwilightService: boolean hasMoved(android.location.Location,android.location.Location)>(r0, r1);

        return $z0;
    }

    static android.location.LocationListener access$200(com.android.server.TwilightService)
    {
        com.android.server.TwilightService r0;
        android.location.LocationListener $r1;

        r0 := @parameter0: com.android.server.TwilightService;

        $r1 = r0.<com.android.server.TwilightService: android.location.LocationListener mEmptyLocationListener>;

        return $r1;
    }

    static android.location.LocationManager access$300(com.android.server.TwilightService)
    {
        com.android.server.TwilightService r0;
        android.location.LocationManager $r1;

        r0 := @parameter0: com.android.server.TwilightService;

        $r1 = r0.<com.android.server.TwilightService: android.location.LocationManager mLocationManager>;

        return $r1;
    }

    static android.location.LocationListener access$400(com.android.server.TwilightService)
    {
        com.android.server.TwilightService r0;
        android.location.LocationListener $r1;

        r0 := @parameter0: com.android.server.TwilightService;

        $r1 = r0.<com.android.server.TwilightService: android.location.LocationListener mLocationListener>;

        return $r1;
    }

    static void access$500(com.android.server.TwilightService, com.android.server.TwilightService$TwilightState)
    {
        com.android.server.TwilightService r0;
        com.android.server.TwilightService$TwilightState r1;

        r0 := @parameter0: com.android.server.TwilightService;

        r1 := @parameter1: com.android.server.TwilightService$TwilightState;

        specialinvoke r0.<com.android.server.TwilightService: void setTwilightState(com.android.server.TwilightService$TwilightState)>(r1);

        return;
    }

    static android.content.Context access$600(com.android.server.TwilightService)
    {
        com.android.server.TwilightService r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.server.TwilightService;

        $r1 = r0.<com.android.server.TwilightService: android.content.Context mContext>;

        return $r1;
    }

    static android.app.AlarmManager access$700(com.android.server.TwilightService)
    {
        com.android.server.TwilightService r0;
        android.app.AlarmManager $r1;

        r0 := @parameter0: com.android.server.TwilightService;

        $r1 = r0.<com.android.server.TwilightService: android.app.AlarmManager mAlarmManager>;

        return $r1;
    }

    static com.android.server.TwilightService$LocationHandler access$800(com.android.server.TwilightService)
    {
        com.android.server.TwilightService r0;
        com.android.server.TwilightService$LocationHandler $r1;

        r0 := @parameter0: com.android.server.TwilightService;

        $r1 = r0.<com.android.server.TwilightService: com.android.server.TwilightService$LocationHandler mLocationHandler>;

        return $r1;
    }

    private static boolean hasMoved(android.location.Location, android.location.Location)
    {
        android.location.Location r0, r1;
        boolean z0;
        long $l0, $l1;
        byte $b2, $b3;
        float $f0, $f1, $f2, $f3;

        r0 := @parameter0: android.location.Location;

        r1 := @parameter1: android.location.Location;

        z0 = 1;

        if r1 != null goto label2;

     label1:
        return 0;

     label2:
        if r0 != null goto label3;

        return z0;

     label3:
        $l0 = virtualinvoke r1.<android.location.Location: long getElapsedRealtimeNanos()>();

        $l1 = virtualinvoke r0.<android.location.Location: long getElapsedRealtimeNanos()>();

        $b2 = $l0 cmp $l1;

        if $b2 < 0 goto label1;

        $f0 = virtualinvoke r0.<android.location.Location: float distanceTo(android.location.Location)>(r1);

        $f1 = virtualinvoke r0.<android.location.Location: float getAccuracy()>();

        $f2 = virtualinvoke r1.<android.location.Location: float getAccuracy()>();

        $f3 = $f1 + $f2;

        $b3 = $f0 cmpl $f3;

        if $b3 < 0 goto label5;

     label4:
        return z0;

     label5:
        z0 = 0;

        goto label4;
    }

    private void setTwilightState(com.android.server.TwilightService$TwilightState)
    {
        com.android.server.TwilightService r0;
        com.android.server.TwilightService$TwilightState r1, $r4;
        java.lang.Object r2, $r7;
        java.lang.Throwable r3, $r9;
        int i0, i1;
        boolean $z0;
        java.util.ArrayList $r5, $r6;
        com.android.server.TwilightService$TwilightListenerRecord $r8;

        r0 := @this: com.android.server.TwilightService;

        r1 := @parameter0: com.android.server.TwilightService$TwilightState;

        r2 = r0.<com.android.server.TwilightService: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        $r4 = r0.<com.android.server.TwilightService: com.android.server.TwilightService$TwilightState mTwilightState>;

        $z0 = staticinvoke <libcore.util.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r4, r1);

        if $z0 != 0 goto label06;

        r0.<com.android.server.TwilightService: com.android.server.TwilightService$TwilightState mTwilightState> = r1;

        $r5 = r0.<com.android.server.TwilightService: java.util.ArrayList mListeners>;

        i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label06;

     label04:
        $r6 = r0.<com.android.server.TwilightService: java.util.ArrayList mListeners>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r8 = (com.android.server.TwilightService$TwilightListenerRecord) $r7;

        virtualinvoke $r8.<com.android.server.TwilightService$TwilightListenerRecord: void post()>();

     label05:
        i1 = i1 + 1;

        goto label03;

     label06:
        exitmonitor r2;

     label07:
        return;

     label08:
        $r9 := @caughtexception;

        r3 = $r9;

     label09:
        exitmonitor r2;

     label10:
        throw r3;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public com.android.server.TwilightService$TwilightState getCurrentState()
    {
        com.android.server.TwilightService r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r4;
        com.android.server.TwilightService$TwilightState r3;

        r0 := @this: com.android.server.TwilightService;

        r1 = r0.<com.android.server.TwilightService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r3 = r0.<com.android.server.TwilightService: com.android.server.TwilightService$TwilightState mTwilightState>;

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void registerListener(com.android.server.TwilightService$TwilightListener, android.os.Handler)
    {
        com.android.server.TwilightService r0;
        com.android.server.TwilightService$TwilightListener r1;
        android.os.Handler r2;
        java.lang.Object r3;
        java.lang.Throwable r4, $r9;
        com.android.server.TwilightService$TwilightListenerRecord $r5;
        java.util.ArrayList $r6, $r7;
        boolean $z1;
        int $i0;
        com.android.server.TwilightService$LocationHandler $r8;

        r0 := @this: com.android.server.TwilightService;

        r1 := @parameter0: com.android.server.TwilightService$TwilightListener;

        r2 := @parameter1: android.os.Handler;

        r3 = r0.<com.android.server.TwilightService: java.lang.Object mLock>;

        entermonitor r3;

     label1:
        $r6 = r0.<com.android.server.TwilightService: java.util.ArrayList mListeners>;

        $r5 = new com.android.server.TwilightService$TwilightListenerRecord;

        specialinvoke $r5.<com.android.server.TwilightService$TwilightListenerRecord: void <init>(com.android.server.TwilightService$TwilightListener,android.os.Handler)>(r1, r2);

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $z1 = r0.<com.android.server.TwilightService: boolean mSystemReady>;

        if $z1 == 0 goto label2;

        $r7 = r0.<com.android.server.TwilightService: java.util.ArrayList mListeners>;

        $i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        if $i0 != 1 goto label2;

        $r8 = r0.<com.android.server.TwilightService: com.android.server.TwilightService$LocationHandler mLocationHandler>;

        virtualinvoke $r8.<com.android.server.TwilightService$LocationHandler: void enableLocationUpdates()>();

     label2:
        exitmonitor r3;

     label3:
        return;

     label4:
        $r9 := @caughtexception;

        r4 = $r9;

     label5:
        exitmonitor r3;

     label6:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    void systemReady()
    {
        com.android.server.TwilightService r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r10;
        android.content.IntentFilter r3, $r4;
        android.content.BroadcastReceiver $r5;
        android.content.Context $r6;
        java.util.ArrayList $r8;
        boolean $z0;
        com.android.server.TwilightService$LocationHandler $r9;

        r0 := @this: com.android.server.TwilightService;

        r1 = r0.<com.android.server.TwilightService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<com.android.server.TwilightService: boolean mSystemReady> = 1;

        $r4 = new android.content.IntentFilter;

        specialinvoke $r4.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.AIRPLANE_MODE");

        r3 = $r4;

        virtualinvoke r3.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.TIME_SET");

        virtualinvoke r3.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.TIMEZONE_CHANGED");

        virtualinvoke r3.<android.content.IntentFilter: void addAction(java.lang.String)>("com.android.server.action.UPDATE_TWILIGHT_STATE");

        $r6 = r0.<com.android.server.TwilightService: android.content.Context mContext>;

        $r5 = r0.<com.android.server.TwilightService: android.content.BroadcastReceiver mUpdateLocationReceiver>;

        virtualinvoke $r6.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r5, r3);

        $r8 = r0.<com.android.server.TwilightService: java.util.ArrayList mListeners>;

        $z0 = virtualinvoke $r8.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r9 = r0.<com.android.server.TwilightService: com.android.server.TwilightService$LocationHandler mLocationHandler>;

        virtualinvoke $r9.<com.android.server.TwilightService$LocationHandler: void enableLocationUpdates()>();

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r10 := @caughtexception;

        r2 = $r10;

     label5:
        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static void <clinit>()
    {
        <com.android.server.TwilightService: java.lang.String TAG> = "TwilightService";

        <com.android.server.TwilightService: boolean DEBUG> = 0;

        <com.android.server.TwilightService: java.lang.String ACTION_UPDATE_TWILIGHT_STATE> = "com.android.server.action.UPDATE_TWILIGHT_STATE";

        return;
    }
}
