class com.android.server.CommonTimeManagementService extends android.os.Binder
{
    private static final boolean ALLOW_WIFI;
    private static final java.lang.String ALLOW_WIFI_PROP;
    private static final boolean AUTO_DISABLE;
    private static final java.lang.String AUTO_DISABLE_PROP;
    private static final byte BASE_SERVER_PRIO;
    private static final com.android.server.CommonTimeManagementService$InterfaceScoreRule[] IFACE_SCORE_RULES;
    private static final int NATIVE_SERVICE_RECONNECT_TIMEOUT;
    private static final int NO_INTERFACE_TIMEOUT;
    private static final java.lang.String NO_INTERFACE_TIMEOUT_PROP;
    private static final java.lang.String SERVER_PRIO_PROP;
    private static final java.lang.String TAG;
    private android.os.CommonTimeConfig mCTConfig;
    private android.os.CommonTimeConfig$OnServerDiedListener mCTServerDiedListener;
    private android.content.BroadcastReceiver mConnectivityMangerObserver;
    private final android.content.Context mContext;
    private java.lang.String mCurIface;
    private boolean mDetectedAtStartup;
    private byte mEffectivePrio;
    private android.net.INetworkManagementEventObserver mIfaceObserver;
    private java.lang.Object mLock;
    private android.os.INetworkManagementService mNetMgr;
    private android.os.Handler mNoInterfaceHandler;
    private java.lang.Runnable mNoInterfaceRunnable;
    private android.os.Handler mReconnectHandler;
    private java.lang.Runnable mReconnectRunnable;

    static void <clinit>()
    {
        boolean z0, z1, $z2;
        int i0, $i1, $i2, $i3;
        com.android.server.CommonTimeManagementService$InterfaceScoreRule[] r0, r1;
        java.lang.Class $r2;
        java.lang.String $r3;
        byte $b4;
        com.android.server.CommonTimeManagementService$InterfaceScoreRule $r4, $r5, $r6;

        <com.android.server.CommonTimeManagementService: java.lang.String SERVER_PRIO_PROP> = "ro.common_time.server_prio";

        <com.android.server.CommonTimeManagementService: java.lang.String NO_INTERFACE_TIMEOUT_PROP> = "ro.common_time.no_iface_timeout";

        <com.android.server.CommonTimeManagementService: int NATIVE_SERVICE_RECONNECT_TIMEOUT> = 5000;

        <com.android.server.CommonTimeManagementService: java.lang.String AUTO_DISABLE_PROP> = "ro.common_time.auto_disable";

        <com.android.server.CommonTimeManagementService: java.lang.String ALLOW_WIFI_PROP> = "ro.common_time.allow_wifi";

        $r2 = class "com/android/server/CommonTimeManagementService";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.server.CommonTimeManagementService: java.lang.String TAG> = $r3;

        $i1 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("ro.common_time.auto_disable", 1);

        if $i1 == 0 goto label4;

        z0 = 1;

     label1:
        <com.android.server.CommonTimeManagementService: boolean AUTO_DISABLE> = z0;

        $i2 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("ro.common_time.allow_wifi", 0);

        if $i2 == 0 goto label5;

        z1 = 1;

     label2:
        <com.android.server.CommonTimeManagementService: boolean ALLOW_WIFI> = z1;

        i0 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("ro.common_time.server_prio", 1);

        $i3 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("ro.common_time.no_iface_timeout", 60000);

        <com.android.server.CommonTimeManagementService: int NO_INTERFACE_TIMEOUT> = $i3;

        if i0 >= 1 goto label6;

        <com.android.server.CommonTimeManagementService: byte BASE_SERVER_PRIO> = 1;

     label3:
        $z2 = <com.android.server.CommonTimeManagementService: boolean ALLOW_WIFI>;

        if $z2 == 0 goto label8;

        r1 = newarray (com.android.server.CommonTimeManagementService$InterfaceScoreRule)[2];

        $r5 = new com.android.server.CommonTimeManagementService$InterfaceScoreRule;

        specialinvoke $r5.<com.android.server.CommonTimeManagementService$InterfaceScoreRule: void <init>(java.lang.String,byte)>("wlan", 1);

        r1[0] = $r5;

        $r6 = new com.android.server.CommonTimeManagementService$InterfaceScoreRule;

        specialinvoke $r6.<com.android.server.CommonTimeManagementService$InterfaceScoreRule: void <init>(java.lang.String,byte)>("eth", 2);

        r1[1] = $r6;

        <com.android.server.CommonTimeManagementService: com.android.server.CommonTimeManagementService$InterfaceScoreRule[] IFACE_SCORE_RULES> = r1;

        return;

     label4:
        z0 = 0;

        goto label1;

     label5:
        z1 = 0;

        goto label2;

     label6:
        if i0 <= 30 goto label7;

        <com.android.server.CommonTimeManagementService: byte BASE_SERVER_PRIO> = 30;

        goto label3;

     label7:
        $b4 = (byte) i0;

        <com.android.server.CommonTimeManagementService: byte BASE_SERVER_PRIO> = $b4;

        goto label3;

     label8:
        r0 = newarray (com.android.server.CommonTimeManagementService$InterfaceScoreRule)[1];

        $r4 = new com.android.server.CommonTimeManagementService$InterfaceScoreRule;

        specialinvoke $r4.<com.android.server.CommonTimeManagementService$InterfaceScoreRule: void <init>(java.lang.String,byte)>("eth", 2);

        r0[0] = $r4;

        <com.android.server.CommonTimeManagementService: com.android.server.CommonTimeManagementService$InterfaceScoreRule[] IFACE_SCORE_RULES> = r0;

        return;
    }

    public void <init>(android.content.Context)
    {
        com.android.server.CommonTimeManagementService r0;
        android.content.Context r1;
        android.os.Handler $r2, $r3;
        java.lang.Object $r4;
        byte $b0;
        com.android.server.CommonTimeManagementService$1 $r5;
        com.android.server.CommonTimeManagementService$2 $r6;
        com.android.server.CommonTimeManagementService$3 $r7;
        com.android.server.CommonTimeManagementService$4 $r8;
        com.android.server.CommonTimeManagementService$5 $r9;

        r0 := @this: com.android.server.CommonTimeManagementService;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        $r2 = new android.os.Handler;

        specialinvoke $r2.<android.os.Handler: void <init>()>();

        r0.<com.android.server.CommonTimeManagementService: android.os.Handler mReconnectHandler> = $r2;

        $r3 = new android.os.Handler;

        specialinvoke $r3.<android.os.Handler: void <init>()>();

        r0.<com.android.server.CommonTimeManagementService: android.os.Handler mNoInterfaceHandler> = $r3;

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        r0.<com.android.server.CommonTimeManagementService: java.lang.Object mLock> = $r4;

        r0.<com.android.server.CommonTimeManagementService: boolean mDetectedAtStartup> = 0;

        $b0 = <com.android.server.CommonTimeManagementService: byte BASE_SERVER_PRIO>;

        r0.<com.android.server.CommonTimeManagementService: byte mEffectivePrio> = $b0;

        $r5 = new com.android.server.CommonTimeManagementService$1;

        specialinvoke $r5.<com.android.server.CommonTimeManagementService$1: void <init>(com.android.server.CommonTimeManagementService)>(r0);

        r0.<com.android.server.CommonTimeManagementService: android.net.INetworkManagementEventObserver mIfaceObserver> = $r5;

        $r6 = new com.android.server.CommonTimeManagementService$2;

        specialinvoke $r6.<com.android.server.CommonTimeManagementService$2: void <init>(com.android.server.CommonTimeManagementService)>(r0);

        r0.<com.android.server.CommonTimeManagementService: android.content.BroadcastReceiver mConnectivityMangerObserver> = $r6;

        $r7 = new com.android.server.CommonTimeManagementService$3;

        specialinvoke $r7.<com.android.server.CommonTimeManagementService$3: void <init>(com.android.server.CommonTimeManagementService)>(r0);

        r0.<com.android.server.CommonTimeManagementService: android.os.CommonTimeConfig$OnServerDiedListener mCTServerDiedListener> = $r7;

        $r8 = new com.android.server.CommonTimeManagementService$4;

        specialinvoke $r8.<com.android.server.CommonTimeManagementService$4: void <init>(com.android.server.CommonTimeManagementService)>(r0);

        r0.<com.android.server.CommonTimeManagementService: java.lang.Runnable mReconnectRunnable> = $r8;

        $r9 = new com.android.server.CommonTimeManagementService$5;

        specialinvoke $r9.<com.android.server.CommonTimeManagementService$5: void <init>(com.android.server.CommonTimeManagementService)>(r0);

        r0.<com.android.server.CommonTimeManagementService: java.lang.Runnable mNoInterfaceRunnable> = $r9;

        r0.<com.android.server.CommonTimeManagementService: android.content.Context mContext> = r1;

        return;
    }

    static void access$000(com.android.server.CommonTimeManagementService)
    {
        com.android.server.CommonTimeManagementService r0;

        r0 := @parameter0: com.android.server.CommonTimeManagementService;

        specialinvoke r0.<com.android.server.CommonTimeManagementService: void reevaluateServiceState()>();

        return;
    }

    static void access$100(com.android.server.CommonTimeManagementService)
    {
        com.android.server.CommonTimeManagementService r0;

        r0 := @parameter0: com.android.server.CommonTimeManagementService;

        specialinvoke r0.<com.android.server.CommonTimeManagementService: void scheduleTimeConfigReconnect()>();

        return;
    }

    static void access$200(com.android.server.CommonTimeManagementService)
    {
        com.android.server.CommonTimeManagementService r0;

        r0 := @parameter0: com.android.server.CommonTimeManagementService;

        specialinvoke r0.<com.android.server.CommonTimeManagementService: void connectToTimeConfig()>();

        return;
    }

    static void access$300(com.android.server.CommonTimeManagementService)
    {
        com.android.server.CommonTimeManagementService r0;

        r0 := @parameter0: com.android.server.CommonTimeManagementService;

        specialinvoke r0.<com.android.server.CommonTimeManagementService: void handleNoInterfaceTimeout()>();

        return;
    }

    private void cleanupTimeConfig()
    {
        com.android.server.CommonTimeManagementService r0;
        java.lang.Runnable $r1, $r3;
        android.os.Handler $r2, $r4;
        android.os.CommonTimeConfig $r5, $r6;

        r0 := @this: com.android.server.CommonTimeManagementService;

        $r2 = r0.<com.android.server.CommonTimeManagementService: android.os.Handler mReconnectHandler>;

        $r1 = r0.<com.android.server.CommonTimeManagementService: java.lang.Runnable mReconnectRunnable>;

        virtualinvoke $r2.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r1);

        $r4 = r0.<com.android.server.CommonTimeManagementService: android.os.Handler mNoInterfaceHandler>;

        $r3 = r0.<com.android.server.CommonTimeManagementService: java.lang.Runnable mNoInterfaceRunnable>;

        virtualinvoke $r4.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r3);

        $r5 = r0.<com.android.server.CommonTimeManagementService: android.os.CommonTimeConfig mCTConfig>;

        if $r5 == null goto label1;

        $r6 = r0.<com.android.server.CommonTimeManagementService: android.os.CommonTimeConfig mCTConfig>;

        virtualinvoke $r6.<android.os.CommonTimeConfig: void release()>();

        r0.<com.android.server.CommonTimeManagementService: android.os.CommonTimeConfig mCTConfig> = null;

     label1:
        return;
    }

    private void connectToTimeConfig()
    {
        com.android.server.CommonTimeManagementService r0;
        java.lang.Object r2;
        java.lang.Throwable r3, $r13;
        android.os.CommonTimeConfig $r4, $r6, $r7, $r9, $r10;
        android.os.CommonTimeConfig$OnServerDiedListener $r5;
        java.lang.String $r8;
        boolean $z0;
        byte $b1;
        int $i3, $i5;
        long $l4;
        android.os.Handler $r11;
        java.lang.Runnable $r12;
        android.os.RemoteException $r14;

        r0 := @this: com.android.server.CommonTimeManagementService;

        specialinvoke r0.<com.android.server.CommonTimeManagementService: void cleanupTimeConfig()>();

     label1:
        r2 = r0.<com.android.server.CommonTimeManagementService: java.lang.Object mLock>;

        entermonitor r2;

     label2:
        $r4 = new android.os.CommonTimeConfig;

        specialinvoke $r4.<android.os.CommonTimeConfig: void <init>()>();

        r0.<com.android.server.CommonTimeManagementService: android.os.CommonTimeConfig mCTConfig> = $r4;

        $r6 = r0.<com.android.server.CommonTimeManagementService: android.os.CommonTimeConfig mCTConfig>;

        $r5 = r0.<com.android.server.CommonTimeManagementService: android.os.CommonTimeConfig$OnServerDiedListener mCTServerDiedListener>;

        virtualinvoke $r6.<android.os.CommonTimeConfig: void setServerDiedListener(android.os.CommonTimeConfig$OnServerDiedListener)>($r5);

        $r7 = r0.<com.android.server.CommonTimeManagementService: android.os.CommonTimeConfig mCTConfig>;

        $r8 = virtualinvoke $r7.<android.os.CommonTimeConfig: java.lang.String getInterfaceBinding()>();

        r0.<com.android.server.CommonTimeManagementService: java.lang.String mCurIface> = $r8;

        $r9 = r0.<com.android.server.CommonTimeManagementService: android.os.CommonTimeConfig mCTConfig>;

        $z0 = <com.android.server.CommonTimeManagementService: boolean AUTO_DISABLE>;

        virtualinvoke $r9.<android.os.CommonTimeConfig: int setAutoDisable(boolean)>($z0);

        $r10 = r0.<com.android.server.CommonTimeManagementService: android.os.CommonTimeConfig mCTConfig>;

        $b1 = r0.<com.android.server.CommonTimeManagementService: byte mEffectivePrio>;

        virtualinvoke $r10.<android.os.CommonTimeConfig: int setMasterElectionPriority(byte)>($b1);

        exitmonitor r2;

     label3:
        $i3 = <com.android.server.CommonTimeManagementService: int NO_INTERFACE_TIMEOUT>;

        if $i3 < 0 goto label4;

        $r11 = r0.<com.android.server.CommonTimeManagementService: android.os.Handler mNoInterfaceHandler>;

        $r12 = r0.<com.android.server.CommonTimeManagementService: java.lang.Runnable mNoInterfaceRunnable>;

        $i5 = <com.android.server.CommonTimeManagementService: int NO_INTERFACE_TIMEOUT>;

        $l4 = (long) $i5;

        virtualinvoke $r11.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r12, $l4);

     label4:
        specialinvoke r0.<com.android.server.CommonTimeManagementService: void reevaluateServiceState()>();

     label5:
        return;

     label6:
        $r13 := @caughtexception;

        r3 = $r13;

     label7:
        exitmonitor r2;

     label8:
        throw r3;

     label9:
        $r14 := @caughtexception;

        specialinvoke r0.<com.android.server.CommonTimeManagementService: void scheduleTimeConfigReconnect()>();

        return;

        catch android.os.RemoteException from label1 to label2 with label9;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch android.os.RemoteException from label3 to label4 with label9;
        catch android.os.RemoteException from label4 to label5 with label9;
        catch java.lang.Throwable from label7 to label8 with label6;
        catch android.os.RemoteException from label8 to label9 with label9;
    }

    private void handleNoInterfaceTimeout()
    {
        com.android.server.CommonTimeManagementService r0;
        android.os.CommonTimeConfig $r1, $r3;
        java.lang.String $r2;
        int $i1;

        r0 := @this: com.android.server.CommonTimeManagementService;

        $r1 = r0.<com.android.server.CommonTimeManagementService: android.os.CommonTimeConfig mCTConfig>;

        if $r1 == null goto label1;

        $r2 = <com.android.server.CommonTimeManagementService: java.lang.String TAG>;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r2, "Timeout waiting for interface to come up.  Forcing networkless master mode.");

        $r3 = r0.<com.android.server.CommonTimeManagementService: android.os.CommonTimeConfig mCTConfig>;

        $i1 = virtualinvoke $r3.<android.os.CommonTimeConfig: int forceNetworklessMasterMode()>();

        if -7 != $i1 goto label1;

        specialinvoke r0.<com.android.server.CommonTimeManagementService: void scheduleTimeConfigReconnect()>();

     label1:
        return;
    }

    private void reevaluateServiceState()
    {
        com.android.server.CommonTimeManagementService r0;
        byte b0, b1, b4, $b7, $b13, $b14;
        java.lang.String r2, r5, r8, $r14, $r16, $r22, $r23, $r24, $r25, $r26, $r28, $r29, $r31, $r32, $r35;
        boolean z0, z1, $z3, $z4;
        java.lang.Object r3;
        java.lang.Throwable r4, $r34;
        java.lang.Object[] r6, $r27;
        java.lang.String[] r7;
        int i2, i3, i5, i6, $i8, $i9, $i10, $i15;
        com.android.server.CommonTimeManagementService$InterfaceScoreRule[] r9;
        com.android.server.CommonTimeManagementService$InterfaceScoreRule r10;
        android.net.InterfaceConfiguration r11;
        android.os.INetworkManagementService $r12, $r30;
        android.os.CommonTimeConfig $r13, $r15, $r21;
        java.lang.Runnable $r17, $r20;
        android.os.Handler $r18, $r19;
        long $l11;
        android.os.RemoteException $r33;

        r0 := @this: com.android.server.CommonTimeManagementService;

        b0 = -1;

     label01:
        $r12 = r0.<com.android.server.CommonTimeManagementService: android.os.INetworkManagementService mNetMgr>;

        r7 = interfaceinvoke $r12.<android.os.INetworkManagementService: java.lang.String[] listInterfaces()>();

     label02:
        r2 = null;

        if r7 == null goto label18;

     label03:
        i3 = lengthof r7;

     label04:
        i2 = 0;

     label05:
        if i2 >= i3 goto label18;

     label06:
        r8 = r7[i2];

     label07:
        b4 = -1;

     label08:
        r9 = <com.android.server.CommonTimeManagementService: com.android.server.CommonTimeManagementService$InterfaceScoreRule[] IFACE_SCORE_RULES>;

        i5 = lengthof r9;

     label09:
        i6 = 0;

     label10:
        if i6 >= i5 goto label37;

     label11:
        r10 = r9[i6];

        $r35 = r10.<com.android.server.CommonTimeManagementService$InterfaceScoreRule: java.lang.String mPrefix>;

        $z4 = virtualinvoke r8.<java.lang.String: boolean contains(java.lang.CharSequence)>($r35);

        if $z4 == 0 goto label39;

        b4 = r10.<com.android.server.CommonTimeManagementService$InterfaceScoreRule: byte mScore>;

     label12:
        goto label37;

     label13:
        $r30 = r0.<com.android.server.CommonTimeManagementService: android.os.INetworkManagementService mNetMgr>;

        r11 = interfaceinvoke $r30.<android.os.INetworkManagementService: android.net.InterfaceConfiguration getInterfaceConfig(java.lang.String)>(r8);

     label14:
        if r11 == null goto label38;

     label15:
        z1 = virtualinvoke r11.<android.net.InterfaceConfiguration: boolean isActive()>();

     label16:
        if z1 == 0 goto label38;

        r2 = r8;

        b0 = b4;

        goto label38;

     label17:
        $r33 := @caughtexception;

        r2 = null;

     label18:
        z0 = 1;

        r3 = r0.<com.android.server.CommonTimeManagementService: java.lang.Object mLock>;

        entermonitor r3;

        if r2 == null goto label25;

     label19:
        $r28 = r0.<com.android.server.CommonTimeManagementService: java.lang.String mCurIface>;

        if $r28 != null goto label25;

        $r32 = <com.android.server.CommonTimeManagementService: java.lang.String TAG>;

        $r27 = newarray (java.lang.Object)[1];

        $r27[0] = r2;

        $r31 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Binding common time service to %s.", $r27);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r32, $r31);

        r0.<com.android.server.CommonTimeManagementService: java.lang.String mCurIface> = r2;

     label20:
        exitmonitor r3;

     label21:
        if z0 == 0 goto label24;

        $r13 = r0.<com.android.server.CommonTimeManagementService: android.os.CommonTimeConfig mCTConfig>;

        if $r13 == null goto label24;

        if b0 <= 0 goto label35;

        $b13 = <com.android.server.CommonTimeManagementService: byte BASE_SERVER_PRIO>;

        $i15 = b0 * $b13;

        b1 = (byte) $i15;

     label22:
        $b7 = r0.<com.android.server.CommonTimeManagementService: byte mEffectivePrio>;

        if b1 == $b7 goto label23;

        r0.<com.android.server.CommonTimeManagementService: byte mEffectivePrio> = b1;

        $r21 = r0.<com.android.server.CommonTimeManagementService: android.os.CommonTimeConfig mCTConfig>;

        $b14 = r0.<com.android.server.CommonTimeManagementService: byte mEffectivePrio>;

        virtualinvoke $r21.<android.os.CommonTimeConfig: int setMasterElectionPriority(byte)>($b14);

     label23:
        $r15 = r0.<com.android.server.CommonTimeManagementService: android.os.CommonTimeConfig mCTConfig>;

        $r14 = r0.<com.android.server.CommonTimeManagementService: java.lang.String mCurIface>;

        $i8 = virtualinvoke $r15.<android.os.CommonTimeConfig: int setNetworkBinding(java.lang.String)>($r14);

        if $i8 == 0 goto label36;

        specialinvoke r0.<com.android.server.CommonTimeManagementService: void scheduleTimeConfigReconnect()>();

     label24:
        return;

     label25:
        if r2 != null goto label31;

     label26:
        $r24 = r0.<com.android.server.CommonTimeManagementService: java.lang.String mCurIface>;

        if $r24 == null goto label31;

        $r29 = <com.android.server.CommonTimeManagementService: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r29, "Unbinding common time service.");

        r0.<com.android.server.CommonTimeManagementService: java.lang.String mCurIface> = null;

     label27:
        goto label20;

     label28:
        $r34 := @caughtexception;

        r4 = $r34;

     label29:
        exitmonitor r3;

     label30:
        throw r4;

     label31:
        if r2 == null goto label34;

     label32:
        $r23 = r0.<com.android.server.CommonTimeManagementService: java.lang.String mCurIface>;

        if $r23 == null goto label34;

        $r22 = r0.<com.android.server.CommonTimeManagementService: java.lang.String mCurIface>;

        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r22);

        if $z3 != 0 goto label34;

        r5 = <com.android.server.CommonTimeManagementService: java.lang.String TAG>;

        r6 = newarray (java.lang.Object)[2];

        $r26 = r0.<com.android.server.CommonTimeManagementService: java.lang.String mCurIface>;

        r6[0] = $r26;

        r6[1] = r2;

        $r25 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Switching common time service binding from %s to %s.", r6);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(r5, $r25);

        r0.<com.android.server.CommonTimeManagementService: java.lang.String mCurIface> = r2;

     label33:
        goto label20;

     label34:
        z0 = 0;

        goto label20;

     label35:
        b1 = <com.android.server.CommonTimeManagementService: byte BASE_SERVER_PRIO>;

        goto label22;

     label36:
        $i9 = <com.android.server.CommonTimeManagementService: int NO_INTERFACE_TIMEOUT>;

        if $i9 < 0 goto label24;

        $r18 = r0.<com.android.server.CommonTimeManagementService: android.os.Handler mNoInterfaceHandler>;

        $r17 = r0.<com.android.server.CommonTimeManagementService: java.lang.Runnable mNoInterfaceRunnable>;

        virtualinvoke $r18.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r17);

        $r16 = r0.<com.android.server.CommonTimeManagementService: java.lang.String mCurIface>;

        if $r16 != null goto label24;

        $r19 = r0.<com.android.server.CommonTimeManagementService: android.os.Handler mNoInterfaceHandler>;

        $r20 = r0.<com.android.server.CommonTimeManagementService: java.lang.Runnable mNoInterfaceRunnable>;

        $i10 = <com.android.server.CommonTimeManagementService: int NO_INTERFACE_TIMEOUT>;

        $l11 = (long) $i10;

        virtualinvoke $r19.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r20, $l11);

        return;

     label37:
        if b4 > b0 goto label13;

     label38:
        i2 = i2 + 1;

        goto label05;

     label39:
        i6 = i6 + 1;

        goto label10;

        catch android.os.RemoteException from label01 to label02 with label17;
        catch android.os.RemoteException from label03 to label04 with label17;
        catch android.os.RemoteException from label06 to label07 with label17;
        catch android.os.RemoteException from label08 to label09 with label17;
        catch android.os.RemoteException from label11 to label12 with label17;
        catch android.os.RemoteException from label13 to label14 with label17;
        catch android.os.RemoteException from label15 to label16 with label17;
        catch java.lang.Throwable from label19 to label20 with label28;
        catch java.lang.Throwable from label20 to label21 with label28;
        catch java.lang.Throwable from label26 to label27 with label28;
        catch java.lang.Throwable from label29 to label30 with label28;
        catch java.lang.Throwable from label32 to label33 with label28;
    }

    private void scheduleTimeConfigReconnect()
    {
        com.android.server.CommonTimeManagementService r0;
        java.lang.String r1, $r4;
        java.lang.Object[] r2;
        java.lang.Integer $r3;
        java.lang.Runnable $r5;
        android.os.Handler $r6;

        r0 := @this: com.android.server.CommonTimeManagementService;

        specialinvoke r0.<com.android.server.CommonTimeManagementService: void cleanupTimeConfig()>();

        r1 = <com.android.server.CommonTimeManagementService: java.lang.String TAG>;

        r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5000);

        r2[0] = $r3;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Native service died, will reconnect in %d mSec", r2);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(r1, $r4);

        $r6 = r0.<com.android.server.CommonTimeManagementService: android.os.Handler mReconnectHandler>;

        $r5 = r0.<com.android.server.CommonTimeManagementService: java.lang.Runnable mReconnectRunnable>;

        virtualinvoke $r6.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r5, 5000L);

        return;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.CommonTimeManagementService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        java.lang.Object r4;
        java.lang.Throwable r5, $r31;
        java.lang.Object[] r6, r8, r10, r12, r14, r15, r17;
        java.lang.String r7, r9, r11, r13, $r19, $r20, $r21, $r22, $r23, $r26, $r27, $r30;
        android.content.Context $r16;
        boolean $z0, $z1, $z2;
        int $i0, $i2, $i3, $i4;
        android.os.CommonTimeConfig $r18;
        byte $b1;
        java.lang.Byte $r24;
        java.lang.Integer $r25, $r28, $r29;

        r0 := @this: com.android.server.CommonTimeManagementService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r16 = r0.<com.android.server.CommonTimeManagementService: android.content.Context mContext>;

        $i0 = virtualinvoke $r16.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.DUMP");

        if $i0 == 0 goto label01;

        r17 = newarray (java.lang.Object)[2];

        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        r17[0] = $r29;

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        r17[1] = $r28;

        $r30 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Permission Denial: can\'t dump CommonTimeManagement service from from pid=%d, uid=%d", r17);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r30);

        return;

     label01:
        $z0 = r0.<com.android.server.CommonTimeManagementService: boolean mDetectedAtStartup>;

        if $z0 != 0 goto label02;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Native Common Time service was not detected at startup.  Service is unavailable");

        return;

     label02:
        r4 = r0.<com.android.server.CommonTimeManagementService: java.lang.Object mLock>;

        entermonitor r4;

     label03:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Current Common Time Management Service Config:");

        r6 = newarray (java.lang.Object)[1];

        $r18 = r0.<com.android.server.CommonTimeManagementService: android.os.CommonTimeConfig mCTConfig>;

        if $r18 != null goto label16;

     label04:
        r7 = "reconnecting";

     label05:
        r6[0] = r7;

        $r20 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("  Native service     : %s", r6);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r20);

        r8 = newarray (java.lang.Object)[1];

        $r19 = r0.<com.android.server.CommonTimeManagementService: java.lang.String mCurIface>;

        if $r19 != null goto label17;

     label06:
        r9 = "unbound";

     label07:
        r8[0] = r9;

        $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("  Bound interface    : %s", r8);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r21);

        r10 = newarray (java.lang.Object)[1];

        $z1 = <com.android.server.CommonTimeManagementService: boolean ALLOW_WIFI>;

        if $z1 == 0 goto label20;

     label08:
        r11 = "yes";

     label09:
        r10[0] = r11;

        $r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("  Allow WiFi         : %s", r10);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r22);

        r12 = newarray (java.lang.Object)[1];

        $z2 = <com.android.server.CommonTimeManagementService: boolean AUTO_DISABLE>;

        if $z2 == 0 goto label19;

     label10:
        r13 = "yes";

     label11:
        r12[0] = r13;

        $r23 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("  Allow Auto Disable : %s", r12);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r23);

        r14 = newarray (java.lang.Object)[1];

        $b1 = r0.<com.android.server.CommonTimeManagementService: byte mEffectivePrio>;

        $r24 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        r14[0] = $r24;

        $r26 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("  Server Priority    : %d", r14);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r26);

        r15 = newarray (java.lang.Object)[1];

        $i2 = <com.android.server.CommonTimeManagementService: int NO_INTERFACE_TIMEOUT>;

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        r15[0] = $r25;

        $r27 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("  No iface timeout   : %d", r15);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r27);

        exitmonitor r4;

     label12:
        return;

     label13:
        $r31 := @caughtexception;

        r5 = $r31;

     label14:
        exitmonitor r4;

     label15:
        throw r5;

     label16:
        r7 = "alive";

        goto label05;

     label17:
        r9 = r0.<com.android.server.CommonTimeManagementService: java.lang.String mCurIface>;

     label18:
        goto label07;

     label19:
        r13 = "no";

        goto label11;

     label20:
        r11 = "no";

        goto label09;

        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.lang.Throwable from label17 to label18 with label13;
    }

    void systemRunning()
    {
        com.android.server.CommonTimeManagementService r0;
        android.content.IntentFilter r2, $r8;
        android.os.IBinder $r3, $r4;
        android.os.INetworkManagementService $r5, $r7;
        android.net.INetworkManagementEventObserver $r6;
        android.content.BroadcastReceiver $r9;
        android.content.Context $r10;
        java.lang.String $r12;
        android.os.RemoteException $r13;

        r0 := @this: com.android.server.CommonTimeManagementService;

        $r3 = staticinvoke <android.os.ServiceManager: android.os.IBinder checkService(java.lang.String)>("common_time.config");

        if $r3 != null goto label1;

        $r12 = <com.android.server.CommonTimeManagementService: java.lang.String TAG>;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r12, "No common time service detected on this platform.  Common time services will be unavailable.");

        return;

     label1:
        r0.<com.android.server.CommonTimeManagementService: boolean mDetectedAtStartup> = 1;

        $r4 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("network_management");

        $r5 = staticinvoke <android.os.INetworkManagementService$Stub: android.os.INetworkManagementService asInterface(android.os.IBinder)>($r4);

        r0.<com.android.server.CommonTimeManagementService: android.os.INetworkManagementService mNetMgr> = $r5;

     label2:
        $r7 = r0.<com.android.server.CommonTimeManagementService: android.os.INetworkManagementService mNetMgr>;

        $r6 = r0.<com.android.server.CommonTimeManagementService: android.net.INetworkManagementEventObserver mIfaceObserver>;

        interfaceinvoke $r7.<android.os.INetworkManagementService: void registerObserver(android.net.INetworkManagementEventObserver)>($r6);

     label3:
        $r8 = new android.content.IntentFilter;

        specialinvoke $r8.<android.content.IntentFilter: void <init>()>();

        r2 = $r8;

        virtualinvoke r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.net.conn.CONNECTIVITY_CHANGE");

        $r10 = r0.<com.android.server.CommonTimeManagementService: android.content.Context mContext>;

        $r9 = r0.<com.android.server.CommonTimeManagementService: android.content.BroadcastReceiver mConnectivityMangerObserver>;

        virtualinvoke $r10.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r9, r2);

        specialinvoke r0.<com.android.server.CommonTimeManagementService: void connectToTimeConfig()>();

        return;

     label4:
        $r13 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label4;
    }
}
