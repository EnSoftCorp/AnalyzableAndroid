public class android.media.MediaRecorder extends java.lang.Object
{
    public static final int MEDIA_ERROR_SERVER_DIED;
    public static final int MEDIA_RECORDER_ERROR_UNKNOWN;
    public static final int MEDIA_RECORDER_INFO_MAX_DURATION_REACHED;
    public static final int MEDIA_RECORDER_INFO_MAX_FILESIZE_REACHED;
    public static final int MEDIA_RECORDER_INFO_UNKNOWN;
    public static final int MEDIA_RECORDER_TRACK_INFO_COMPLETION_STATUS;
    public static final int MEDIA_RECORDER_TRACK_INFO_DATA_KBYTES;
    public static final int MEDIA_RECORDER_TRACK_INFO_DURATION_MS;
    public static final int MEDIA_RECORDER_TRACK_INFO_ENCODED_FRAMES;
    public static final int MEDIA_RECORDER_TRACK_INFO_INITIAL_DELAY_MS;
    public static final int MEDIA_RECORDER_TRACK_INFO_LIST_END;
    public static final int MEDIA_RECORDER_TRACK_INFO_LIST_START;
    public static final int MEDIA_RECORDER_TRACK_INFO_MAX_CHUNK_DUR_MS;
    public static final int MEDIA_RECORDER_TRACK_INFO_PROGRESS_IN_TIME;
    public static final int MEDIA_RECORDER_TRACK_INFO_START_OFFSET_MS;
    public static final int MEDIA_RECORDER_TRACK_INFO_TYPE;
    public static final int MEDIA_RECORDER_TRACK_INTER_CHUNK_TIME_MS;
    private static final java.lang.String TAG;
    private android.media.MediaRecorder$EventHandler mEventHandler;
    private java.io.FileDescriptor mFd;
    private int mNativeContext;
    private android.media.MediaRecorder$OnErrorListener mOnErrorListener;
    private android.media.MediaRecorder$OnInfoListener mOnInfoListener;
    private java.lang.String mPath;
    private android.view.Surface mSurface;

    static void <clinit>()
    {
        <android.media.MediaRecorder: java.lang.String TAG> = "MediaRecorder";

        <android.media.MediaRecorder: int MEDIA_RECORDER_TRACK_INTER_CHUNK_TIME_MS> = 1006;

        <android.media.MediaRecorder: int MEDIA_RECORDER_TRACK_INFO_TYPE> = 1002;

        <android.media.MediaRecorder: int MEDIA_RECORDER_TRACK_INFO_START_OFFSET_MS> = 1008;

        <android.media.MediaRecorder: int MEDIA_RECORDER_TRACK_INFO_PROGRESS_IN_TIME> = 1001;

        <android.media.MediaRecorder: int MEDIA_RECORDER_TRACK_INFO_MAX_CHUNK_DUR_MS> = 1004;

        <android.media.MediaRecorder: int MEDIA_RECORDER_TRACK_INFO_LIST_START> = 1000;

        <android.media.MediaRecorder: int MEDIA_RECORDER_TRACK_INFO_LIST_END> = 2000;

        <android.media.MediaRecorder: int MEDIA_RECORDER_TRACK_INFO_INITIAL_DELAY_MS> = 1007;

        <android.media.MediaRecorder: int MEDIA_RECORDER_TRACK_INFO_ENCODED_FRAMES> = 1005;

        <android.media.MediaRecorder: int MEDIA_RECORDER_TRACK_INFO_DURATION_MS> = 1003;

        <android.media.MediaRecorder: int MEDIA_RECORDER_TRACK_INFO_DATA_KBYTES> = 1009;

        <android.media.MediaRecorder: int MEDIA_RECORDER_TRACK_INFO_COMPLETION_STATUS> = 1000;

        <android.media.MediaRecorder: int MEDIA_RECORDER_INFO_UNKNOWN> = 1;

        <android.media.MediaRecorder: int MEDIA_RECORDER_INFO_MAX_FILESIZE_REACHED> = 801;

        <android.media.MediaRecorder: int MEDIA_RECORDER_INFO_MAX_DURATION_REACHED> = 800;

        <android.media.MediaRecorder: int MEDIA_RECORDER_ERROR_UNKNOWN> = 1;

        <android.media.MediaRecorder: int MEDIA_ERROR_SERVER_DIED> = 100;

        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("media_jni");

        staticinvoke <android.media.MediaRecorder: void native_init()>();

        return;
    }

    public void <init>()
    {
        android.media.MediaRecorder r0;
        android.os.Looper r1, r2;
        java.lang.String r3;
        java.lang.ref.WeakReference $r4;
        android.media.MediaRecorder$EventHandler $r5, $r6;

        r0 := @this: android.media.MediaRecorder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r1 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if r1 == null goto label2;

        $r6 = new android.media.MediaRecorder$EventHandler;

        specialinvoke $r6.<android.media.MediaRecorder$EventHandler: void <init>(android.media.MediaRecorder,android.media.MediaRecorder,android.os.Looper)>(r0, r0, r1);

        r0.<android.media.MediaRecorder: android.media.MediaRecorder$EventHandler mEventHandler> = $r6;

     label1:
        r3 = staticinvoke <android.app.ActivityThread: java.lang.String currentPackageName()>();

        $r4 = new java.lang.ref.WeakReference;

        specialinvoke $r4.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r0);

        specialinvoke r0.<android.media.MediaRecorder: void native_setup(java.lang.Object,java.lang.String)>($r4, r3);

        return;

     label2:
        r2 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        if r2 == null goto label3;

        $r5 = new android.media.MediaRecorder$EventHandler;

        specialinvoke $r5.<android.media.MediaRecorder$EventHandler: void <init>(android.media.MediaRecorder,android.media.MediaRecorder,android.os.Looper)>(r0, r0, r2);

        r0.<android.media.MediaRecorder: android.media.MediaRecorder$EventHandler mEventHandler> = $r5;

        goto label1;

     label3:
        r0.<android.media.MediaRecorder: android.media.MediaRecorder$EventHandler mEventHandler> = null;

        goto label1;
    }

    private native void _prepare() throws java.lang.IllegalStateException, java.io.IOException;

    private native void _setOutputFile(java.io.FileDescriptor, long, long) throws java.lang.IllegalStateException, java.io.IOException;

    static int access$000(android.media.MediaRecorder)
    {
        android.media.MediaRecorder r0;
        int $i0;

        r0 := @parameter0: android.media.MediaRecorder;

        $i0 = r0.<android.media.MediaRecorder: int mNativeContext>;

        return $i0;
    }

    static android.media.MediaRecorder$OnErrorListener access$100(android.media.MediaRecorder)
    {
        android.media.MediaRecorder r0;
        android.media.MediaRecorder$OnErrorListener $r1;

        r0 := @parameter0: android.media.MediaRecorder;

        $r1 = r0.<android.media.MediaRecorder: android.media.MediaRecorder$OnErrorListener mOnErrorListener>;

        return $r1;
    }

    static android.media.MediaRecorder$OnInfoListener access$200(android.media.MediaRecorder)
    {
        android.media.MediaRecorder r0;
        android.media.MediaRecorder$OnInfoListener $r1;

        r0 := @parameter0: android.media.MediaRecorder;

        $r1 = r0.<android.media.MediaRecorder: android.media.MediaRecorder$OnInfoListener mOnInfoListener>;

        return $r1;
    }

    public static final int getAudioSourceMax()
    {
        return 8;
    }

    private final native void native_finalize();

    private static final native void native_init();

    private native void native_reset();

    private final native void native_setup(java.lang.Object, java.lang.String) throws java.lang.IllegalStateException;

    private static void postEventFromNative(java.lang.Object, int, int, int, java.lang.Object)
    {
        java.lang.Object r0, r1, $r5;
        int i0, i1, i2;
        android.media.MediaRecorder r2;
        android.os.Message r3;
        java.lang.ref.WeakReference $r4;
        android.media.MediaRecorder$EventHandler $r6, $r7, $r8;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r1 := @parameter4: java.lang.Object;

        $r4 = (java.lang.ref.WeakReference) r0;

        $r5 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (android.media.MediaRecorder) $r5;

        if r2 != null goto label2;

     label1:
        return;

     label2:
        $r6 = r2.<android.media.MediaRecorder: android.media.MediaRecorder$EventHandler mEventHandler>;

        if $r6 == null goto label1;

        $r7 = r2.<android.media.MediaRecorder: android.media.MediaRecorder$EventHandler mEventHandler>;

        r3 = virtualinvoke $r7.<android.media.MediaRecorder$EventHandler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(i0, i1, i2, r1);

        $r8 = r2.<android.media.MediaRecorder: android.media.MediaRecorder$EventHandler mEventHandler>;

        virtualinvoke $r8.<android.media.MediaRecorder$EventHandler: boolean sendMessage(android.os.Message)>(r3);

        return;
    }

    private native void setParameter(java.lang.String);

    protected void finalize()
    {
        android.media.MediaRecorder r0;

        r0 := @this: android.media.MediaRecorder;

        specialinvoke r0.<android.media.MediaRecorder: void native_finalize()>();

        return;
    }

    public native int getMaxAmplitude() throws java.lang.IllegalStateException;

    public void prepare() throws java.lang.IllegalStateException, java.io.IOException
    {
        android.media.MediaRecorder r0;
        java.io.FileOutputStream r1, $r7;
        java.lang.Throwable r2, $r10;
        java.lang.String $r3, $r8;
        java.io.FileDescriptor $r4, $r6, $r9;
        java.io.IOException $r5;

        r0 := @this: android.media.MediaRecorder;

        $r3 = r0.<android.media.MediaRecorder: java.lang.String mPath>;

        if $r3 == null goto label5;

        $r7 = new java.io.FileOutputStream;

        $r8 = r0.<android.media.MediaRecorder: java.lang.String mPath>;

        specialinvoke $r7.<java.io.FileOutputStream: void <init>(java.lang.String)>($r8);

        r1 = $r7;

     label1:
        $r9 = virtualinvoke r1.<java.io.FileOutputStream: java.io.FileDescriptor getFD()>();

        specialinvoke r0.<android.media.MediaRecorder: void _setOutputFile(java.io.FileDescriptor,long,long)>($r9, 0L, 0L);

     label2:
        virtualinvoke r1.<java.io.FileOutputStream: void close()>();

     label3:
        specialinvoke r0.<android.media.MediaRecorder: void _prepare()>();

        return;

     label4:
        $r10 := @caughtexception;

        r2 = $r10;

        virtualinvoke r1.<java.io.FileOutputStream: void close()>();

        throw r2;

     label5:
        $r4 = r0.<android.media.MediaRecorder: java.io.FileDescriptor mFd>;

        if $r4 == null goto label6;

        $r6 = r0.<android.media.MediaRecorder: java.io.FileDescriptor mFd>;

        specialinvoke r0.<android.media.MediaRecorder: void _setOutputFile(java.io.FileDescriptor,long,long)>($r6, 0L, 0L);

        goto label3;

     label6:
        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("No valid output file");

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public native void release();

    public void reset()
    {
        android.media.MediaRecorder r0;
        android.media.MediaRecorder$EventHandler $r1;

        r0 := @this: android.media.MediaRecorder;

        specialinvoke r0.<android.media.MediaRecorder: void native_reset()>();

        $r1 = r0.<android.media.MediaRecorder: android.media.MediaRecorder$EventHandler mEventHandler>;

        virtualinvoke $r1.<android.media.MediaRecorder$EventHandler: void removeCallbacksAndMessages(java.lang.Object)>(null);

        return;
    }

    public void setAudioChannels(int)
    {
        android.media.MediaRecorder r0;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: android.media.MediaRecorder;

        i0 := @parameter0: int;

        if i0 > 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Number of channels is not positive");

        throw $r5;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("audio-param-number-of-channels=");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.media.MediaRecorder: void setParameter(java.lang.String)>($r4);

        return;
    }

    public native void setAudioEncoder(int) throws java.lang.IllegalStateException;

    public void setAudioEncodingBitRate(int)
    {
        android.media.MediaRecorder r0;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: android.media.MediaRecorder;

        i0 := @parameter0: int;

        if i0 > 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Audio encoding bit rate is not positive");

        throw $r5;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("audio-param-encoding-bitrate=");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.media.MediaRecorder: void setParameter(java.lang.String)>($r4);

        return;
    }

    public void setAudioSamplingRate(int)
    {
        android.media.MediaRecorder r0;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: android.media.MediaRecorder;

        i0 := @parameter0: int;

        if i0 > 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Audio sampling rate is not positive");

        throw $r5;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("audio-param-sampling-rate=");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.media.MediaRecorder: void setParameter(java.lang.String)>($r4);

        return;
    }

    public native void setAudioSource(int) throws java.lang.IllegalStateException;

    public void setAuxiliaryOutputFile(java.io.FileDescriptor)
    {
        android.media.MediaRecorder r0;
        java.io.FileDescriptor r1;

        r0 := @this: android.media.MediaRecorder;

        r1 := @parameter0: java.io.FileDescriptor;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaRecorder", "setAuxiliaryOutputFile(FileDescriptor) is no longer supported.");

        return;
    }

    public void setAuxiliaryOutputFile(java.lang.String)
    {
        android.media.MediaRecorder r0;
        java.lang.String r1;

        r0 := @this: android.media.MediaRecorder;

        r1 := @parameter0: java.lang.String;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaRecorder", "setAuxiliaryOutputFile(String) is no longer supported.");

        return;
    }

    public native void setCamera(android.hardware.Camera);

    public void setCaptureRate(double)
    {
        android.media.MediaRecorder r0;
        double d0, $d1, $d2;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        r0 := @this: android.media.MediaRecorder;

        d0 := @parameter0: double;

        specialinvoke r0.<android.media.MediaRecorder: void setParameter(java.lang.String)>("time-lapse-enable=1");

        $d1 = 1.0 / d0;

        $d2 = 1000.0 * $d1;

        i0 = (int) $d2;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("time-between-time-lapse-frame-capture=");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.media.MediaRecorder: void setParameter(java.lang.String)>($r4);

        return;
    }

    public void setLocation(float, float)
    {
        android.media.MediaRecorder r0;
        float f0, f1, $f2, $f3;
        int i0, i1;
        double $d0, $d1, $d2, $d3;
        java.lang.IllegalArgumentException $r1, $r6;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r8, $r9, $r10, $r11, $r12, $r14, $r15, $r16, $r18, $r19;
        java.lang.String $r7, $r13, $r17, $r20;

        r0 := @this: android.media.MediaRecorder;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $f2 = f0 * 10000.0F;

        $d0 = (double) $f2;

        $d1 = 0.5 + $d0;

        i0 = (int) $d1;

        $f3 = f1 * 10000.0F;

        $d2 = (double) $f3;

        $d3 = 0.5 + $d2;

        i1 = (int) $d3;

        if i0 > 900000 goto label1;

        if i0 >= -900000 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Latitude: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" out of range.");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r1;

     label2:
        if i1 > 1800000 goto label3;

        if i1 >= -1800000 goto label4;

     label3:
        $r6 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Longitude: ");

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f1);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" out of range");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r6;

     label4:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("param-geotag-latitude=");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.media.MediaRecorder: void setParameter(java.lang.String)>($r17);

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("param-geotag-longitude=");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.media.MediaRecorder: void setParameter(java.lang.String)>($r20);

        return;
    }

    public native void setMaxDuration(int) throws java.lang.IllegalArgumentException;

    public native void setMaxFileSize(long) throws java.lang.IllegalArgumentException;

    public void setOnErrorListener(android.media.MediaRecorder$OnErrorListener)
    {
        android.media.MediaRecorder r0;
        android.media.MediaRecorder$OnErrorListener r1;

        r0 := @this: android.media.MediaRecorder;

        r1 := @parameter0: android.media.MediaRecorder$OnErrorListener;

        r0.<android.media.MediaRecorder: android.media.MediaRecorder$OnErrorListener mOnErrorListener> = r1;

        return;
    }

    public void setOnInfoListener(android.media.MediaRecorder$OnInfoListener)
    {
        android.media.MediaRecorder r0;
        android.media.MediaRecorder$OnInfoListener r1;

        r0 := @this: android.media.MediaRecorder;

        r1 := @parameter0: android.media.MediaRecorder$OnInfoListener;

        r0.<android.media.MediaRecorder: android.media.MediaRecorder$OnInfoListener mOnInfoListener> = r1;

        return;
    }

    public void setOrientationHint(int)
    {
        android.media.MediaRecorder r0;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r3, $r6, $r7, $r8;
        java.lang.String $r4, $r9;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: android.media.MediaRecorder;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        if i0 == 90 goto label1;

        if i0 == 180 goto label1;

        if i0 == 270 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported angle: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("video-param-rotation-angle-degrees=");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.media.MediaRecorder: void setParameter(java.lang.String)>($r4);

        return;
    }

    public void setOutputFile(java.io.FileDescriptor) throws java.lang.IllegalStateException
    {
        android.media.MediaRecorder r0;
        java.io.FileDescriptor r1;

        r0 := @this: android.media.MediaRecorder;

        r1 := @parameter0: java.io.FileDescriptor;

        r0.<android.media.MediaRecorder: java.lang.String mPath> = null;

        r0.<android.media.MediaRecorder: java.io.FileDescriptor mFd> = r1;

        return;
    }

    public void setOutputFile(java.lang.String) throws java.lang.IllegalStateException
    {
        android.media.MediaRecorder r0;
        java.lang.String r1;

        r0 := @this: android.media.MediaRecorder;

        r1 := @parameter0: java.lang.String;

        r0.<android.media.MediaRecorder: java.io.FileDescriptor mFd> = null;

        r0.<android.media.MediaRecorder: java.lang.String mPath> = r1;

        return;
    }

    public native void setOutputFormat(int) throws java.lang.IllegalStateException;

    public void setPreviewDisplay(android.view.Surface)
    {
        android.media.MediaRecorder r0;
        android.view.Surface r1;

        r0 := @this: android.media.MediaRecorder;

        r1 := @parameter0: android.view.Surface;

        r0.<android.media.MediaRecorder: android.view.Surface mSurface> = r1;

        return;
    }

    public void setProfile(android.media.CamcorderProfile)
    {
        android.media.MediaRecorder r0;
        android.media.CamcorderProfile r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: android.media.MediaRecorder;

        r1 := @parameter0: android.media.CamcorderProfile;

        $i0 = r1.<android.media.CamcorderProfile: int fileFormat>;

        virtualinvoke r0.<android.media.MediaRecorder: void setOutputFormat(int)>($i0);

        $i1 = r1.<android.media.CamcorderProfile: int videoFrameRate>;

        virtualinvoke r0.<android.media.MediaRecorder: void setVideoFrameRate(int)>($i1);

        $i3 = r1.<android.media.CamcorderProfile: int videoFrameWidth>;

        $i2 = r1.<android.media.CamcorderProfile: int videoFrameHeight>;

        virtualinvoke r0.<android.media.MediaRecorder: void setVideoSize(int,int)>($i3, $i2);

        $i4 = r1.<android.media.CamcorderProfile: int videoBitRate>;

        virtualinvoke r0.<android.media.MediaRecorder: void setVideoEncodingBitRate(int)>($i4);

        $i5 = r1.<android.media.CamcorderProfile: int videoCodec>;

        virtualinvoke r0.<android.media.MediaRecorder: void setVideoEncoder(int)>($i5);

        $i6 = r1.<android.media.CamcorderProfile: int quality>;

        if $i6 < 1000 goto label1;

        $i11 = r1.<android.media.CamcorderProfile: int quality>;

        if $i11 > 1007 goto label1;

        return;

     label1:
        $i7 = r1.<android.media.CamcorderProfile: int audioBitRate>;

        virtualinvoke r0.<android.media.MediaRecorder: void setAudioEncodingBitRate(int)>($i7);

        $i8 = r1.<android.media.CamcorderProfile: int audioChannels>;

        virtualinvoke r0.<android.media.MediaRecorder: void setAudioChannels(int)>($i8);

        $i9 = r1.<android.media.CamcorderProfile: int audioSampleRate>;

        virtualinvoke r0.<android.media.MediaRecorder: void setAudioSamplingRate(int)>($i9);

        $i10 = r1.<android.media.CamcorderProfile: int audioCodec>;

        virtualinvoke r0.<android.media.MediaRecorder: void setAudioEncoder(int)>($i10);

        return;
    }

    public native void setVideoEncoder(int) throws java.lang.IllegalStateException;

    public void setVideoEncodingBitRate(int)
    {
        android.media.MediaRecorder r0;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: android.media.MediaRecorder;

        i0 := @parameter0: int;

        if i0 > 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Video encoding bit rate is not positive");

        throw $r5;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("video-param-encoding-bitrate=");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.media.MediaRecorder: void setParameter(java.lang.String)>($r4);

        return;
    }

    public native void setVideoFrameRate(int) throws java.lang.IllegalStateException;

    public native void setVideoSize(int, int) throws java.lang.IllegalStateException;

    public native void setVideoSource(int) throws java.lang.IllegalStateException;

    public native void start() throws java.lang.IllegalStateException;

    public native void stop() throws java.lang.IllegalStateException;
}
