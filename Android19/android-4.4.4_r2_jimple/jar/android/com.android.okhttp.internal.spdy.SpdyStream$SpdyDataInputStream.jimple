final class com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream extends java.io.InputStream
{
    static final boolean $assertionsDisabled;
    private final byte[] buffer;
    private boolean closed;
    private boolean finished;
    private int limit;
    private int pos;
    final com.android.okhttp.internal.spdy.SpdyStream this$0;
    private int unacknowledgedBytes;

    static void <clinit>()
    {
        boolean z0, $z1;
        java.lang.Class $r0;

        $r0 = class "com/android/okhttp/internal/spdy/SpdyStream";

        $z1 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z1 != 0 goto label2;

        z0 = 1;

     label1:
        <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: boolean $assertionsDisabled> = z0;

        return;

     label2:
        z0 = 0;

        goto label1;
    }

    private void <init>(com.android.okhttp.internal.spdy.SpdyStream)
    {
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream r0;
        com.android.okhttp.internal.spdy.SpdyStream r1;
        byte[] $r2;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream;

        r1 := @parameter0: com.android.okhttp.internal.spdy.SpdyStream;

        r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: com.android.okhttp.internal.spdy.SpdyStream this$0> = r1;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        $r2 = newarray (byte)[65536];

        r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: byte[] buffer> = $r2;

        r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: int pos> = -1;

        r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: int unacknowledgedBytes> = 0;

        return;
    }

    void <init>(com.android.okhttp.internal.spdy.SpdyStream, com.android.okhttp.internal.spdy.SpdyStream$1)
    {
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream r0;
        com.android.okhttp.internal.spdy.SpdyStream r1;
        com.android.okhttp.internal.spdy.SpdyStream$1 r2;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream;

        r1 := @parameter0: com.android.okhttp.internal.spdy.SpdyStream;

        r2 := @parameter1: com.android.okhttp.internal.spdy.SpdyStream$1;

        specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: void <init>(com.android.okhttp.internal.spdy.SpdyStream)>(r1);

        return;
    }

    static boolean access$200(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream)
    {
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream r0;
        boolean $z0;

        r0 := @parameter0: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream;

        $z0 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: boolean finished>;

        return $z0;
    }

    static boolean access$202(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream, boolean)
    {
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream r0;
        boolean z0;

        r0 := @parameter0: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream;

        z0 := @parameter1: boolean;

        r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: boolean finished> = z0;

        return z0;
    }

    static boolean access$400(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream)
    {
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream r0;
        boolean $z0;

        r0 := @parameter0: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream;

        $z0 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: boolean closed>;

        return $z0;
    }

    private void checkNotClosed() throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream r0;
        boolean $z0;
        com.android.okhttp.internal.spdy.SpdyStream $r1, $r5;
        int $i0;
        java.io.IOException $r2, $r9;
        java.lang.StringBuilder $r3, $r4, $r7;
        java.lang.String $r6, $r8;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream;

        $z0 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: boolean closed>;

        if $z0 == 0 goto label1;

        $r9 = new java.io.IOException;

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>("stream closed");

        throw $r9;

     label1:
        $r1 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        $i0 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream: int access$1000(com.android.okhttp.internal.spdy.SpdyStream)>($r1);

        if $i0 == -1 goto label2;

        $r2 = new java.io.IOException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stream was reset: ");

        $r5 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        $r6 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream: java.lang.String access$1200(com.android.okhttp.internal.spdy.SpdyStream)>($r5);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r2;

     label2:
        return;
    }

    private void waitUntilReadable() throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream r0;
        long l0, l1, $l2, $l6, $l9, $l10, $l11, $l12, $l13;
        com.android.okhttp.internal.spdy.SpdyStream $r2, $r3, $r4, $r5, $r7, $r8, $r9;
        byte $b3, $b7, $b8;
        int $i4, $i5;
        boolean $z0, $z1;
        java.net.SocketTimeoutException $r6;
        java.lang.InterruptedException $r10;
        java.io.InterruptedIOException $r11;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream;

        l0 = 0L;

        l1 = 0L;

        $r2 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        $l2 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream: long access$900(com.android.okhttp.internal.spdy.SpdyStream)>($r2);

        $b3 = $l2 cmp 0L;

        if $b3 == 0 goto label1;

        $l13 = staticinvoke <java.lang.System: long nanoTime()>();

        l0 = $l13 / 1000000L;

        $r9 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        l1 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream: long access$900(com.android.okhttp.internal.spdy.SpdyStream)>($r9);

     label1:
        $i4 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: int pos>;

        if $i4 != -1 goto label8;

        $z0 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: boolean finished>;

        if $z0 != 0 goto label8;

        $z1 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: boolean closed>;

        if $z1 != 0 goto label8;

        $r3 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        $i5 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream: int access$1000(com.android.okhttp.internal.spdy.SpdyStream)>($r3);

        if $i5 != -1 goto label8;

        $r4 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        $l6 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream: long access$900(com.android.okhttp.internal.spdy.SpdyStream)>($r4);

        $b8 = $l6 cmp 0L;

        if $b8 != 0 goto label4;

        $r8 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        virtualinvoke $r8.<java.lang.Object: void wait()>();

     label2:
        goto label1;

     label3:
        $r10 := @caughtexception;

        $r11 = new java.io.InterruptedIOException;

        specialinvoke $r11.<java.io.InterruptedIOException: void <init>()>();

        throw $r11;

     label4:
        $b7 = l1 cmp 0L;

        if $b7 <= 0 goto label7;

     label5:
        $r5 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        virtualinvoke $r5.<java.lang.Object: void wait(long)>(l1);

        $r7 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        $l9 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream: long access$900(com.android.okhttp.internal.spdy.SpdyStream)>($r7);

        $l11 = l0 + $l9;

        $l10 = staticinvoke <java.lang.System: long nanoTime()>();

        $l12 = $l10 / 1000000L;

        l1 = $l11 - $l12;

     label6:
        goto label1;

     label7:
        $r6 = new java.net.SocketTimeoutException;

        specialinvoke $r6.<java.net.SocketTimeoutException: void <init>()>();

        throw $r6;

     label8:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
        catch java.lang.InterruptedException from label5 to label6 with label3;
        catch java.lang.InterruptedException from label7 to label8 with label3;
    }

    public int available() throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream r0;
        com.android.okhttp.internal.spdy.SpdyStream r1;
        java.lang.Throwable r2, $r4;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        byte[] $r3;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream;

        r1 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: void checkNotClosed()>();

        $i2 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: int pos>;

        if $i2 != -1 goto label3;

        exitmonitor r1;

     label2:
        return 0;

     label3:
        $i4 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: int limit>;

        $i3 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: int pos>;

        if $i4 <= $i3 goto label8;

        $i10 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: int limit>;

        $i9 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: int pos>;

        i1 = $i10 - $i9;

        exitmonitor r1;

     label4:
        return i1;

     label5:
        $r4 := @caughtexception;

        r2 = $r4;

     label6:
        exitmonitor r1;

     label7:
        throw r2;

     label8:
        $i8 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: int limit>;

        $r3 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: byte[] buffer>;

        $i6 = lengthof $r3;

        $i5 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: int pos>;

        $i7 = $i6 - $i5;

        i0 = $i8 + $i7;

        exitmonitor r1;

     label9:
        return i0;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
        catch java.lang.Throwable from label8 to label9 with label5;
    }

    public void close() throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream r0;
        com.android.okhttp.internal.spdy.SpdyStream r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream;

        r1 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        entermonitor r1;

     label1:
        r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: boolean closed> = 1;

        $r3 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        virtualinvoke $r3.<java.lang.Object: void notifyAll()>();

        exitmonitor r1;

     label2:
        $r4 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        staticinvoke <com.android.okhttp.internal.spdy.SpdyStream: void access$1100(com.android.okhttp.internal.spdy.SpdyStream)>($r4);

        return;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int read() throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream r0;
        int $i0;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream;

        $i0 = staticinvoke <com.android.okhttp.internal.Util: int readSingleByte(java.io.InputStream)>(r0);

        return $i0;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream r0;
        byte[] r1, $r7, $r8, $r9, $r10;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31;
        com.android.okhttp.internal.spdy.SpdyStream r2, $r5, $r6;
        java.lang.Throwable r3, $r11;
        com.android.okhttp.internal.spdy.SpdyConnection $r4;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        entermonitor r2;

     label01:
        $i7 = lengthof r1;

        staticinvoke <com.android.okhttp.internal.Util: void checkOffsetAndCount(int,int,int)>($i7, i0, i1);

        specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: void waitUntilReadable()>();

        specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: void checkNotClosed()>();

        $i8 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: int pos>;

        if $i8 != -1 goto label03;

        exitmonitor r2;

     label02:
        return -1;

     label03:
        i2 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: int limit>;

        i3 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: int pos>;

     label04:
        i4 = 0;

        if i2 > i3 goto label08;

     label05:
        $r7 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: byte[] buffer>;

        $i26 = lengthof $r7;

        $i25 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: int pos>;

        $i24 = $i26 - $i25;

        i5 = staticinvoke <java.lang.Math: int min(int,int)>(i1, $i24);

        $r9 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: byte[] buffer>;

        $i29 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: int pos>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, $i29, r1, i0, i5);

        $i27 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: int pos>;

        $i28 = i5 + $i27;

        r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: int pos> = $i28;

     label06:
        i4 = 0 + i5;

     label07:
        $i30 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: int pos>;

        $r10 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: byte[] buffer>;

        $i31 = lengthof $r10;

        if $i30 != $i31 goto label08;

        r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: int pos> = 0;

     label08:
        if i4 >= i1 goto label11;

     label09:
        $i18 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: int limit>;

        $i15 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: int pos>;

        $i19 = $i18 - $i15;

        $i17 = i1 - i4;

        i6 = staticinvoke <java.lang.Math: int min(int,int)>($i19, $i17);

        $r8 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: byte[] buffer>;

        $i20 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: int pos>;

        $i21 = i0 + i4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, $i20, r1, $i21, i6);

        $i23 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: int pos>;

        $i22 = i6 + $i23;

        r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: int pos> = $i22;

     label10:
        i4 = i4 + i6;

     label11:
        $i9 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: int unacknowledgedBytes>;

        $i10 = i4 + $i9;

        r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: int unacknowledgedBytes> = $i10;

        $i12 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: int unacknowledgedBytes>;

        if $i12 < 32768 goto label12;

        $r5 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        $r4 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyConnection access$800(com.android.okhttp.internal.spdy.SpdyStream)>($r5);

        $r6 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        $i14 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream: int access$700(com.android.okhttp.internal.spdy.SpdyStream)>($r6);

        $i16 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: int unacknowledgedBytes>;

        virtualinvoke $r4.<com.android.okhttp.internal.spdy.SpdyConnection: void writeWindowUpdateLater(int,int)>($i14, $i16);

        r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: int unacknowledgedBytes> = 0;

     label12:
        $i13 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: int pos>;

        $i11 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: int limit>;

        if $i13 != $i11 goto label13;

        r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: int pos> = -1;

        r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: int limit> = 0;

     label13:
        exitmonitor r2;

     label14:
        return i4;

     label15:
        $r11 := @caughtexception;

        r3 = $r11;

     label16:
        exitmonitor r2;

     label17:
        throw r3;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    void receive(java.io.InputStream, int) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream r0;
        java.io.InputStream r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        com.android.okhttp.internal.spdy.SpdyStream r2, r4, $r7, $r13, $r14;
        java.lang.Throwable r3, r5, $r15, $r16;
        boolean z0, z1, $z2, $z3;
        byte[] $r6, $r8, $r9, $r10, $r11;
        long $l12, $l14;
        java.lang.AssertionError $r12;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream;

        r1 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        $z2 = <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: boolean $assertionsDisabled>;

        if $z2 != 0 goto label01;

        $r14 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        $z3 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>($r14);

        if $z3 == 0 goto label01;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();

        throw $r12;

     label01:
        if i0 != 0 goto label02;

        return;

     label02:
        r2 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        entermonitor r2;

     label03:
        z0 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: boolean finished>;

        i1 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: int pos>;

        i2 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: int limit>;

        i3 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: int limit>;

        $r6 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: byte[] buffer>;

        $i6 = lengthof $r6;

        $i5 = virtualinvoke r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: int available()>();

        $i7 = $i6 - $i5;

        if i0 <= $i7 goto label07;

     label04:
        z1 = 1;

     label05:
        exitmonitor r2;

     label06:
        if z1 == 0 goto label11;

        $l12 = (long) i0;

        staticinvoke <com.android.okhttp.internal.Util: long skipByReading(java.io.InputStream,long)>(r1, $l12);

        $r13 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        virtualinvoke $r13.<com.android.okhttp.internal.spdy.SpdyStream: void closeLater(int)>(7);

        return;

     label07:
        z1 = 0;

        goto label05;

     label08:
        $r16 := @caughtexception;

        r3 = $r16;

     label09:
        exitmonitor r2;

     label10:
        throw r3;

     label11:
        if z0 == 0 goto label12;

        $l14 = (long) i0;

        staticinvoke <com.android.okhttp.internal.Util: long skipByReading(java.io.InputStream,long)>(r1, $l14);

        return;

     label12:
        if i1 >= i3 goto label13;

        $r8 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: byte[] buffer>;

        $i10 = lengthof $r8;

        $i9 = $i10 - i3;

        i4 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i9);

        $r10 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: byte[] buffer>;

        staticinvoke <com.android.okhttp.internal.Util: void readFully(java.io.InputStream,byte[],int,int)>(r1, $r10, i3, i4);

        i3 = i3 + i4;

        i0 = i0 - i4;

        $r11 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: byte[] buffer>;

        $i11 = lengthof $r11;

        if i3 != $i11 goto label13;

        i3 = 0;

     label13:
        if i0 <= 0 goto label14;

        $r9 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: byte[] buffer>;

        staticinvoke <com.android.okhttp.internal.Util: void readFully(java.io.InputStream,byte[],int,int)>(r1, $r9, i3, i0);

        i3 = i3 + i0;

     label14:
        r4 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        entermonitor r4;

     label15:
        r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: int limit> = i3;

        $i8 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: int pos>;

        if $i8 != -1 goto label16;

        r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: int pos> = i2;

        $r7 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        virtualinvoke $r7.<java.lang.Object: void notifyAll()>();

     label16:
        exitmonitor r4;

     label17:
        return;

     label18:
        $r15 := @caughtexception;

        r5 = $r15;

     label19:
        exitmonitor r4;

     label20:
        throw r5;

        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label15 to label16 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
    }
}
