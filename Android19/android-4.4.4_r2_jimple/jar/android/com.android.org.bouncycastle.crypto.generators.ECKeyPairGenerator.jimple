public class com.android.org.bouncycastle.crypto.generators.ECKeyPairGenerator extends java.lang.Object implements com.android.org.bouncycastle.crypto.AsymmetricCipherKeyPairGenerator, com.android.org.bouncycastle.math.ec.ECConstants
{
    com.android.org.bouncycastle.crypto.params.ECDomainParameters params;
    java.security.SecureRandom random;

    public void <init>()
    {
        com.android.org.bouncycastle.crypto.generators.ECKeyPairGenerator r0;

        r0 := @this: com.android.org.bouncycastle.crypto.generators.ECKeyPairGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.android.org.bouncycastle.crypto.AsymmetricCipherKeyPair generateKeyPair()
    {
        com.android.org.bouncycastle.crypto.generators.ECKeyPairGenerator r0;
        java.math.BigInteger r1, r2, $r4, $r6;
        int i0, $i1;
        com.android.org.bouncycastle.crypto.params.ECDomainParameters $r3, $r9, $r11, $r13;
        java.security.SecureRandom $r5;
        boolean $z0;
        com.android.org.bouncycastle.crypto.AsymmetricCipherKeyPair $r7;
        com.android.org.bouncycastle.crypto.params.ECPublicKeyParameters $r8;
        com.android.org.bouncycastle.math.ec.ECPoint $r10, $r12;
        com.android.org.bouncycastle.crypto.params.ECPrivateKeyParameters $r14;

        r0 := @this: com.android.org.bouncycastle.crypto.generators.ECKeyPairGenerator;

        $r3 = r0.<com.android.org.bouncycastle.crypto.generators.ECKeyPairGenerator: com.android.org.bouncycastle.crypto.params.ECDomainParameters params>;

        r1 = virtualinvoke $r3.<com.android.org.bouncycastle.crypto.params.ECDomainParameters: java.math.BigInteger getN()>();

        i0 = virtualinvoke r1.<java.math.BigInteger: int bitLength()>();

     label1:
        $r4 = new java.math.BigInteger;

        $r5 = r0.<com.android.org.bouncycastle.crypto.generators.ECKeyPairGenerator: java.security.SecureRandom random>;

        specialinvoke $r4.<java.math.BigInteger: void <init>(int,java.util.Random)>(i0, $r5);

        r2 = $r4;

        $r6 = <com.android.org.bouncycastle.crypto.generators.ECKeyPairGenerator: java.math.BigInteger ZERO>;

        $z0 = virtualinvoke r2.<java.math.BigInteger: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label1;

        $i1 = virtualinvoke r2.<java.math.BigInteger: int compareTo(java.math.BigInteger)>(r1);

        if $i1 >= 0 goto label1;

        $r7 = new com.android.org.bouncycastle.crypto.AsymmetricCipherKeyPair;

        $r8 = new com.android.org.bouncycastle.crypto.params.ECPublicKeyParameters;

        $r9 = r0.<com.android.org.bouncycastle.crypto.generators.ECKeyPairGenerator: com.android.org.bouncycastle.crypto.params.ECDomainParameters params>;

        $r10 = virtualinvoke $r9.<com.android.org.bouncycastle.crypto.params.ECDomainParameters: com.android.org.bouncycastle.math.ec.ECPoint getG()>();

        $r12 = virtualinvoke $r10.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECPoint multiply(java.math.BigInteger)>(r2);

        $r11 = r0.<com.android.org.bouncycastle.crypto.generators.ECKeyPairGenerator: com.android.org.bouncycastle.crypto.params.ECDomainParameters params>;

        specialinvoke $r8.<com.android.org.bouncycastle.crypto.params.ECPublicKeyParameters: void <init>(com.android.org.bouncycastle.math.ec.ECPoint,com.android.org.bouncycastle.crypto.params.ECDomainParameters)>($r12, $r11);

        $r14 = new com.android.org.bouncycastle.crypto.params.ECPrivateKeyParameters;

        $r13 = r0.<com.android.org.bouncycastle.crypto.generators.ECKeyPairGenerator: com.android.org.bouncycastle.crypto.params.ECDomainParameters params>;

        specialinvoke $r14.<com.android.org.bouncycastle.crypto.params.ECPrivateKeyParameters: void <init>(java.math.BigInteger,com.android.org.bouncycastle.crypto.params.ECDomainParameters)>(r2, $r13);

        specialinvoke $r7.<com.android.org.bouncycastle.crypto.AsymmetricCipherKeyPair: void <init>(com.android.org.bouncycastle.crypto.params.AsymmetricKeyParameter,com.android.org.bouncycastle.crypto.params.AsymmetricKeyParameter)>($r8, $r14);

        return $r7;
    }

    public void init(com.android.org.bouncycastle.crypto.KeyGenerationParameters)
    {
        com.android.org.bouncycastle.crypto.generators.ECKeyPairGenerator r0;
        com.android.org.bouncycastle.crypto.KeyGenerationParameters r1;
        com.android.org.bouncycastle.crypto.params.ECKeyGenerationParameters r2;
        java.security.SecureRandom $r3;
        com.android.org.bouncycastle.crypto.params.ECDomainParameters $r4;

        r0 := @this: com.android.org.bouncycastle.crypto.generators.ECKeyPairGenerator;

        r1 := @parameter0: com.android.org.bouncycastle.crypto.KeyGenerationParameters;

        r2 = (com.android.org.bouncycastle.crypto.params.ECKeyGenerationParameters) r1;

        $r3 = virtualinvoke r2.<com.android.org.bouncycastle.crypto.params.ECKeyGenerationParameters: java.security.SecureRandom getRandom()>();

        r0.<com.android.org.bouncycastle.crypto.generators.ECKeyPairGenerator: java.security.SecureRandom random> = $r3;

        $r4 = virtualinvoke r2.<com.android.org.bouncycastle.crypto.params.ECKeyGenerationParameters: com.android.org.bouncycastle.crypto.params.ECDomainParameters getDomainParameters()>();

        r0.<com.android.org.bouncycastle.crypto.generators.ECKeyPairGenerator: com.android.org.bouncycastle.crypto.params.ECDomainParameters params> = $r4;

        return;
    }
}
