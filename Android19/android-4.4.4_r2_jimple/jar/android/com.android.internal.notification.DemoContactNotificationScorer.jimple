public class com.android.internal.notification.DemoContactNotificationScorer extends java.lang.Object implements com.android.internal.notification.NotificationScorer
{
    private static final android.net.Uri CONTACTS_URI;
    private static final boolean DBG;
    protected static final boolean ENABLE_CONTACT_SCORER;
    private static final int NOTIFICATION_PRIORITY_MULTIPLIER;
    private static final java.lang.String[] PROJECTION;
    private static final java.util.List RELEVANT_KEYS_LIST;
    private static final java.lang.String SETTING_ENABLE_SCORER;
    private static final java.lang.String TAG;
    private android.content.Context mContext;
    protected boolean mEnabled;

    static void <clinit>()
    {
        java.lang.String[] $r0, $r2;
        java.util.List $r1;
        android.net.Uri $r3;

        <com.android.internal.notification.DemoContactNotificationScorer: java.lang.String TAG> = "DemoContactNotificationScorer";

        <com.android.internal.notification.DemoContactNotificationScorer: java.lang.String SETTING_ENABLE_SCORER> = "contact_scorer_enabled";

        <com.android.internal.notification.DemoContactNotificationScorer: int NOTIFICATION_PRIORITY_MULTIPLIER> = 10;

        <com.android.internal.notification.DemoContactNotificationScorer: boolean ENABLE_CONTACT_SCORER> = 1;

        <com.android.internal.notification.DemoContactNotificationScorer: boolean DBG> = 0;

        $r0 = newarray (java.lang.String)[5];

        $r0[0] = "android.infoText";

        $r0[1] = "android.text";

        $r0[2] = "android.textLines";

        $r0[3] = "android.subText";

        $r0[4] = "android.title";

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        <com.android.internal.notification.DemoContactNotificationScorer: java.util.List RELEVANT_KEYS_LIST> = $r1;

        $r2 = newarray (java.lang.String)[2];

        $r2[0] = "_id";

        $r2[1] = "display_name";

        <com.android.internal.notification.DemoContactNotificationScorer: java.lang.String[] PROJECTION> = $r2;

        $r3 = <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_URI>;

        <com.android.internal.notification.DemoContactNotificationScorer: android.net.Uri CONTACTS_URI> = $r3;

        return;
    }

    public void <init>()
    {
        com.android.internal.notification.DemoContactNotificationScorer r0;

        r0 := @this: com.android.internal.notification.DemoContactNotificationScorer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static final int clamp(int, int, int)
    {
        int i0, i1, i2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i0 >= i1 goto label1;

        return i1;

     label1:
        if i0 <= i2 goto label2;

        return i2;

     label2:
        return i0;
    }

    private static java.util.List extractSpannedStrings(java.lang.CharSequence)
    {
        java.lang.CharSequence r0, $r9;
        android.text.SpannableString r1;
        java.lang.Object[] r2;
        java.util.List r3, $r10;
        int i0, i1, $i2, $i3, $i4;
        java.lang.Object r4;
        java.lang.StringIndexOutOfBoundsException r5, $r12;
        java.lang.String[] r6;
        boolean $z0;
        java.lang.String $r8, $r11;
        java.util.ArrayList r13, r14;

        r0 := @parameter0: java.lang.CharSequence;

        if r0 != null goto label2;

        r3 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label1:
        return r3;

     label2:
        $z0 = r0 instanceof android.text.SpannableString;

        if $z0 != 0 goto label3;

        r6 = newarray (java.lang.String)[1];

        $r11 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        r6[0] = $r11;

        $r10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r6);

        return $r10;

     label3:
        r1 = (android.text.SpannableString) r0;

        $i2 = virtualinvoke r1.<android.text.SpannableString: int length()>();

        r2 = virtualinvoke r1.<android.text.SpannableString: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i2, class "java/lang/Object");

        r13 = new java.util.ArrayList;

        specialinvoke r13.<java.util.ArrayList: void <init>()>();

        r3 = r13;

        i0 = lengthof r2;

        i1 = 0;

     label4:
        if i1 >= i0 goto label1;

        r4 = r2[i1];

     label5:
        $i4 = virtualinvoke r1.<android.text.SpannableString: int getSpanStart(java.lang.Object)>(r4);

        $i3 = virtualinvoke r1.<android.text.SpannableString: int getSpanEnd(java.lang.Object)>(r4);

        $r9 = virtualinvoke r1.<android.text.SpannableString: java.lang.CharSequence subSequence(int,int)>($i4, $i3);

        $r8 = virtualinvoke $r9.<java.lang.Object: java.lang.String toString()>();

        r14 = (java.util.ArrayList) r3;

        virtualinvoke r14.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

     label6:
        i1 = i1 + 1;

        goto label4;

     label7:
        $r12 := @caughtexception;

        r5 = $r12;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("DemoContactNotificationScorer", "Bad indices when extracting spanned subsequence", r5);

        goto label6;

        catch java.lang.StringIndexOutOfBoundsException from label5 to label6 with label7;
    }

    private static java.lang.String getQuestionMarksInParens(int)
    {
        int i0, i1, $i2;
        java.lang.StringBuilder r0, $r1;
        java.lang.String $r3;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("(");

        r0 = $r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $i2 = virtualinvoke r0.<java.lang.StringBuilder: int length()>();

        if $i2 <= 1 goto label2;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

     label2:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(63);

        i1 = i1 + 1;

        goto label1;

     label3:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r3 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    private boolean hasStarredContact(android.os.Bundle)
    {
        com.android.internal.notification.DemoContactNotificationScorer r0;
        android.os.Bundle r1;
        java.util.ArrayList r2, $r11;
        java.util.Iterator r3;
        java.lang.String[] r4, $r13, $r24;
        java.lang.String r5, r9, $r18, $r31;
        android.database.Cursor r6;
        java.lang.Throwable r7, r8, $r41, $r42;
        int i0, i1, i2, $i3, $i4;
        boolean z0, $z1, $z2, $z3, $z4;
        java.lang.CharSequence[] r10, $r36;
        java.util.List $r12, $r40, $r43;
        java.lang.StringBuilder $r14, $r16, $r17, $r19, $r20, $r23, $r29, $r32, $r33, $r34;
        java.lang.Object[] $r15;
        android.content.Context $r21;
        android.content.ContentResolver $r22;
        android.net.Uri $r25;
        java.lang.Object $r26, $r27, $r28, $r30, $r37, $r39;
        java.lang.CharSequence $r35, $r38;

        r0 := @this: com.android.internal.notification.DemoContactNotificationScorer;

        r1 := @parameter0: android.os.Bundle;

        if r1 != null goto label02;

        z0 = 0;

     label01:
        return z0;

     label02:
        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r2 = $r11;

        $r12 = <com.android.internal.notification.DemoContactNotificationScorer: java.util.List RELEVANT_KEYS_LIST>;

        r3 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label07;

        $r27 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.lang.String) $r27;

        $r28 = virtualinvoke r1.<android.os.Bundle: java.lang.Object get(java.lang.String)>(r9);

        if $r28 == null goto label03;

        $r26 = virtualinvoke r1.<android.os.Bundle: java.lang.Object get(java.lang.String)>(r9);

        $z3 = $r26 instanceof java.lang.CharSequence;

        if $z3 == 0 goto label04;

        $r39 = virtualinvoke r1.<android.os.Bundle: java.lang.Object get(java.lang.String)>(r9);

        $r38 = (java.lang.CharSequence) $r39;

        $r43 = staticinvoke <com.android.internal.notification.DemoContactNotificationScorer: java.util.List extractSpannedStrings(java.lang.CharSequence)>($r38);

        virtualinvoke r2.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r43);

        goto label03;

     label04:
        $r30 = virtualinvoke r1.<android.os.Bundle: java.lang.Object get(java.lang.String)>(r9);

        $z4 = $r30 instanceof java.lang.CharSequence[];

        if $z4 == 0 goto label06;

        $r37 = virtualinvoke r1.<android.os.Bundle: java.lang.Object get(java.lang.String)>(r9);

        $r36 = (java.lang.CharSequence[]) $r37;

        r10 = (java.lang.CharSequence[]) $r36;

        i1 = lengthof r10;

        i2 = 0;

     label05:
        if i2 >= i1 goto label03;

        $r35 = r10[i2];

        $r40 = staticinvoke <com.android.internal.notification.DemoContactNotificationScorer: java.util.List extractSpannedStrings(java.lang.CharSequence)>($r35);

        virtualinvoke r2.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r40);

        i2 = i2 + 1;

        goto label05;

     label06:
        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Strange, the extra ");

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is of unexpected type.");

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("DemoContactNotificationScorer", $r31);

        goto label03;

     label07:
        $z1 = virtualinvoke r2.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 == 0 goto label08;

        return 0;

     label08:
        $i3 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        $r13 = newarray (java.lang.String)[$i3];

        $r15 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r13);

        r4 = (java.lang.String[]) $r15;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("display_name IN ");

        $i4 = lengthof r4;

        $r18 = staticinvoke <com.android.internal.notification.DemoContactNotificationScorer: java.lang.String getQuestionMarksInParens(int)>($i4);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AND ");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("starred");

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" =\'1\'");

        r5 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        r6 = null;

     label09:
        $r21 = r0.<com.android.internal.notification.DemoContactNotificationScorer: android.content.Context mContext>;

        $r22 = virtualinvoke $r21.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r25 = <com.android.internal.notification.DemoContactNotificationScorer: android.net.Uri CONTACTS_URI>;

        $r24 = <com.android.internal.notification.DemoContactNotificationScorer: java.lang.String[] PROJECTION>;

        r6 = virtualinvoke $r22.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r25, $r24, r5, r4, null);

     label10:
        if r6 == null goto label15;

     label11:
        i0 = interfaceinvoke r6.<android.database.Cursor: int getCount()>();

     label12:
        if i0 <= 0 goto label14;

        z0 = 1;

     label13:
        if r6 == null goto label01;

        interfaceinvoke r6.<android.database.Cursor: void close()>();

        return z0;

     label14:
        z0 = 0;

        goto label13;

     label15:
        if r6 == null goto label16;

        interfaceinvoke r6.<android.database.Cursor: void close()>();

     label16:
        return 0;

     label17:
        $r41 := @caughtexception;

        r8 = $r41;

     label18:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("DemoContactNotificationScorer", "Problem getting content resolver or performing contacts query.", r8);

     label19:
        if r6 == null goto label16;

        interfaceinvoke r6.<android.database.Cursor: void close()>();

        goto label16;

     label20:
        $r42 := @caughtexception;

        r7 = $r42;

        if r6 == null goto label21;

        interfaceinvoke r6.<android.database.Cursor: void close()>();

     label21:
        throw r7;

        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label09 to label10 with label20;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch java.lang.Throwable from label11 to label12 with label20;
        catch java.lang.Throwable from label18 to label19 with label20;
    }

    private static int priorityBumpMap(int)
    {
        int i0, i1, i2, $i4, $i5;
        byte $b3;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;

        i0 := @parameter0: int;

        i1 = staticinvoke <com.android.internal.notification.DemoContactNotificationScorer: int clamp(int,int,int)>(i0, -20, 20);

        if i1 == i0 goto label1;

        return i0;

     label1:
        $b3 = neg 10;

        if i1 > $b3 goto label3;

        $d6 = (double) i1;

        $i5 = i1 + 20;

        $d4 = (double) $i5;

        $d5 = 1.5 * $d4;

        $d7 = $d6 + $d5;

        i2 = (int) $d7;

     label2:
        return i2;

     label3:
        $d2 = (double) i1;

        $i4 = 20 - i1;

        $d0 = (double) $i4;

        $d1 = 0.5 * $d0;

        $d3 = $d2 + $d1;

        i2 = (int) $d3;

        goto label2;
    }

    public int getScore(android.app.Notification, int)
    {
        com.android.internal.notification.DemoContactNotificationScorer r0;
        android.app.Notification r1;
        int i0;
        boolean $z0, $z1;
        android.os.Bundle $r2;

        r0 := @this: com.android.internal.notification.DemoContactNotificationScorer;

        r1 := @parameter0: android.app.Notification;

        i0 := @parameter1: int;

        if r1 == null goto label1;

        $z0 = r0.<com.android.internal.notification.DemoContactNotificationScorer: boolean mEnabled>;

        if $z0 != 0 goto label2;

     label1:
        return i0;

     label2:
        $r2 = r1.<android.app.Notification: android.os.Bundle extras>;

        $z1 = specialinvoke r0.<com.android.internal.notification.DemoContactNotificationScorer: boolean hasStarredContact(android.os.Bundle)>($r2);

        if $z1 == 0 goto label3;

        i0 = staticinvoke <com.android.internal.notification.DemoContactNotificationScorer: int priorityBumpMap(int)>(i0);

     label3:
        return i0;
    }

    public void initialize(android.content.Context)
    {
        com.android.internal.notification.DemoContactNotificationScorer r0;
        android.content.Context r1, $r2;
        boolean z0, z1;
        android.content.ContentResolver $r3;
        int $i0, i1;

        r0 := @this: com.android.internal.notification.DemoContactNotificationScorer;

        r1 := @parameter0: android.content.Context;

        z0 = 1;

        r0.<com.android.internal.notification.DemoContactNotificationScorer: android.content.Context mContext> = r1;

        $r2 = r0.<com.android.internal.notification.DemoContactNotificationScorer: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r3, "contact_scorer_enabled", 0);

        z1 = z0;

        i1 = (int) z1;

        if i1 != $i0 goto label2;

     label1:
        r0.<com.android.internal.notification.DemoContactNotificationScorer: boolean mEnabled> = z0;

        return;

     label2:
        z0 = 0;

        goto label1;
    }
}
