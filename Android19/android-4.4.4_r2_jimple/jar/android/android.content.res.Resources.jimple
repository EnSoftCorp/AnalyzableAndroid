public class android.content.res.Resources extends java.lang.Object
{
    private static final boolean DEBUG_ATTRIBUTES_CACHE;
    private static final boolean DEBUG_CONFIG;
    private static final boolean DEBUG_LOAD;
    private static final int ID_OTHER;
    private static final int LAYOUT_DIR_CONFIG;
    static final java.lang.String TAG;
    private static final boolean TRACE_FOR_MISS_PRELOAD;
    private static final boolean TRACE_FOR_PRELOAD;
    static android.content.res.Resources mSystem;
    private static boolean sPreloaded;
    private static final android.util.LongSparseArray sPreloadedColorDrawables;
    private static final android.util.LongSparseArray sPreloadedColorStateLists;
    private static int sPreloadedDensity;
    private static final android.util.LongSparseArray[] sPreloadedDrawables;
    private static final java.lang.Object sSync;
    final java.lang.Object mAccessLock;
    final android.content.res.AssetManager mAssets;
    android.content.res.TypedArray mCachedStyledAttributes;
    private final int[] mCachedXmlBlockIds;
    private final android.content.res.XmlBlock[] mCachedXmlBlocks;
    final android.util.LongSparseArray mColorDrawableCache;
    final android.util.LongSparseArray mColorStateListCache;
    private android.content.res.CompatibilityInfo mCompatibilityInfo;
    private final android.content.res.Configuration mConfiguration;
    final android.util.LongSparseArray mDrawableCache;
    private int mLastCachedXmlBlockIndex;
    java.lang.RuntimeException mLastRetrievedAttrs;
    final android.util.DisplayMetrics mMetrics;
    private libcore.icu.NativePluralRules mPluralRule;
    boolean mPreloading;
    final android.content.res.Configuration mTmpConfig;
    android.util.TypedValue mTmpValue;
    private java.lang.ref.WeakReference mToken;

    static void <clinit>()
    {
        java.lang.Object $r0;
        android.util.LongSparseArray $r1, $r2, $r4, $r6;
        android.util.LongSparseArray[] $r3, $r5, $r7;
        int $i0;

        <android.content.res.Resources: java.lang.String TAG> = "Resources";

        <android.content.res.Resources: int ID_OTHER> = 16777220;

        <android.content.res.Resources: boolean DEBUG_LOAD> = 0;

        <android.content.res.Resources: boolean DEBUG_CONFIG> = 0;

        <android.content.res.Resources: boolean DEBUG_ATTRIBUTES_CACHE> = 0;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <android.content.res.Resources: java.lang.Object sSync> = $r0;

        <android.content.res.Resources: android.content.res.Resources mSystem> = null;

        $r1 = new android.util.LongSparseArray;

        specialinvoke $r1.<android.util.LongSparseArray: void <init>()>();

        <android.content.res.Resources: android.util.LongSparseArray sPreloadedColorDrawables> = $r1;

        $r2 = new android.util.LongSparseArray;

        specialinvoke $r2.<android.util.LongSparseArray: void <init>()>();

        <android.content.res.Resources: android.util.LongSparseArray sPreloadedColorStateLists> = $r2;

        $r3 = newarray (android.util.LongSparseArray)[2];

        <android.content.res.Resources: android.util.LongSparseArray[] sPreloadedDrawables> = $r3;

        $r5 = <android.content.res.Resources: android.util.LongSparseArray[] sPreloadedDrawables>;

        $r4 = new android.util.LongSparseArray;

        specialinvoke $r4.<android.util.LongSparseArray: void <init>()>();

        $r5[0] = $r4;

        $r7 = <android.content.res.Resources: android.util.LongSparseArray[] sPreloadedDrawables>;

        $r6 = new android.util.LongSparseArray;

        specialinvoke $r6.<android.util.LongSparseArray: void <init>()>();

        $r7[1] = $r6;

        $i0 = staticinvoke <android.content.pm.ActivityInfo: int activityInfoConfigToNative(int)>(8192);

        <android.content.res.Resources: int LAYOUT_DIR_CONFIG> = $i0;

        return;
    }

    private void <init>()
    {
        android.content.res.Resources r0;
        java.lang.Object $r1;
        android.content.res.Configuration $r2, $r9, $r13;
        android.util.TypedValue $r3;
        android.util.LongSparseArray $r4, $r5, $r6;
        int[] $r7;
        android.content.res.XmlBlock[] $r8;
        android.util.DisplayMetrics $r10, $r14;
        android.content.res.CompatibilityInfo $r11;
        android.content.res.AssetManager $r12, $r15;

        r0 := @this: android.content.res.Resources;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<android.content.res.Resources: java.lang.Object mAccessLock> = $r1;

        $r2 = new android.content.res.Configuration;

        specialinvoke $r2.<android.content.res.Configuration: void <init>()>();

        r0.<android.content.res.Resources: android.content.res.Configuration mTmpConfig> = $r2;

        $r3 = new android.util.TypedValue;

        specialinvoke $r3.<android.util.TypedValue: void <init>()>();

        r0.<android.content.res.Resources: android.util.TypedValue mTmpValue> = $r3;

        $r4 = new android.util.LongSparseArray;

        specialinvoke $r4.<android.util.LongSparseArray: void <init>(int)>(0);

        r0.<android.content.res.Resources: android.util.LongSparseArray mDrawableCache> = $r4;

        $r5 = new android.util.LongSparseArray;

        specialinvoke $r5.<android.util.LongSparseArray: void <init>(int)>(0);

        r0.<android.content.res.Resources: android.util.LongSparseArray mColorStateListCache> = $r5;

        $r6 = new android.util.LongSparseArray;

        specialinvoke $r6.<android.util.LongSparseArray: void <init>(int)>(0);

        r0.<android.content.res.Resources: android.util.LongSparseArray mColorDrawableCache> = $r6;

        r0.<android.content.res.Resources: android.content.res.TypedArray mCachedStyledAttributes> = null;

        r0.<android.content.res.Resources: java.lang.RuntimeException mLastRetrievedAttrs> = null;

        r0.<android.content.res.Resources: int mLastCachedXmlBlockIndex> = -1;

        $r7 = newarray (int)[4];

        $r7[0] = 0;

        $r7[1] = 0;

        $r7[2] = 0;

        $r7[3] = 0;

        r0.<android.content.res.Resources: int[] mCachedXmlBlockIds> = $r7;

        $r8 = newarray (android.content.res.XmlBlock)[4];

        r0.<android.content.res.Resources: android.content.res.XmlBlock[] mCachedXmlBlocks> = $r8;

        $r9 = new android.content.res.Configuration;

        specialinvoke $r9.<android.content.res.Configuration: void <init>()>();

        r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration> = $r9;

        $r10 = new android.util.DisplayMetrics;

        specialinvoke $r10.<android.util.DisplayMetrics: void <init>()>();

        r0.<android.content.res.Resources: android.util.DisplayMetrics mMetrics> = $r10;

        $r11 = <android.content.res.CompatibilityInfo: android.content.res.CompatibilityInfo DEFAULT_COMPATIBILITY_INFO>;

        r0.<android.content.res.Resources: android.content.res.CompatibilityInfo mCompatibilityInfo> = $r11;

        $r12 = staticinvoke <android.content.res.AssetManager: android.content.res.AssetManager getSystem()>();

        r0.<android.content.res.Resources: android.content.res.AssetManager mAssets> = $r12;

        $r13 = r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        virtualinvoke $r13.<android.content.res.Configuration: void setToDefaults()>();

        $r14 = r0.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        virtualinvoke $r14.<android.util.DisplayMetrics: void setToDefaults()>();

        virtualinvoke r0.<android.content.res.Resources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)>(null, null);

        $r15 = r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        virtualinvoke $r15.<android.content.res.AssetManager: void ensureStringBlocks()>();

        return;
    }

    public void <init>(android.content.res.AssetManager, android.util.DisplayMetrics, android.content.res.Configuration)
    {
        android.content.res.Resources r0;
        android.content.res.AssetManager r1;
        android.util.DisplayMetrics r2;
        android.content.res.Configuration r3;
        android.content.res.CompatibilityInfo $r4;

        r0 := @this: android.content.res.Resources;

        r1 := @parameter0: android.content.res.AssetManager;

        r2 := @parameter1: android.util.DisplayMetrics;

        r3 := @parameter2: android.content.res.Configuration;

        $r4 = <android.content.res.CompatibilityInfo: android.content.res.CompatibilityInfo DEFAULT_COMPATIBILITY_INFO>;

        specialinvoke r0.<android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration,android.content.res.CompatibilityInfo,android.os.IBinder)>(r1, r2, r3, $r4, null);

        return;
    }

    public void <init>(android.content.res.AssetManager, android.util.DisplayMetrics, android.content.res.Configuration, android.content.res.CompatibilityInfo, android.os.IBinder)
    {
        android.content.res.Resources r0;
        android.content.res.AssetManager r1;
        android.util.DisplayMetrics r2, $r15, $r16;
        android.content.res.Configuration r3, $r7, $r14;
        android.content.res.CompatibilityInfo r4, $r17;
        android.os.IBinder r5;
        java.lang.Object $r6;
        android.util.TypedValue $r8;
        android.util.LongSparseArray $r9, $r10, $r11;
        int[] $r12;
        android.content.res.XmlBlock[] $r13;
        java.lang.ref.WeakReference $r18;

        r0 := @this: android.content.res.Resources;

        r1 := @parameter0: android.content.res.AssetManager;

        r2 := @parameter1: android.util.DisplayMetrics;

        r3 := @parameter2: android.content.res.Configuration;

        r4 := @parameter3: android.content.res.CompatibilityInfo;

        r5 := @parameter4: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r6 = new java.lang.Object;

        specialinvoke $r6.<java.lang.Object: void <init>()>();

        r0.<android.content.res.Resources: java.lang.Object mAccessLock> = $r6;

        $r7 = new android.content.res.Configuration;

        specialinvoke $r7.<android.content.res.Configuration: void <init>()>();

        r0.<android.content.res.Resources: android.content.res.Configuration mTmpConfig> = $r7;

        $r8 = new android.util.TypedValue;

        specialinvoke $r8.<android.util.TypedValue: void <init>()>();

        r0.<android.content.res.Resources: android.util.TypedValue mTmpValue> = $r8;

        $r9 = new android.util.LongSparseArray;

        specialinvoke $r9.<android.util.LongSparseArray: void <init>(int)>(0);

        r0.<android.content.res.Resources: android.util.LongSparseArray mDrawableCache> = $r9;

        $r10 = new android.util.LongSparseArray;

        specialinvoke $r10.<android.util.LongSparseArray: void <init>(int)>(0);

        r0.<android.content.res.Resources: android.util.LongSparseArray mColorStateListCache> = $r10;

        $r11 = new android.util.LongSparseArray;

        specialinvoke $r11.<android.util.LongSparseArray: void <init>(int)>(0);

        r0.<android.content.res.Resources: android.util.LongSparseArray mColorDrawableCache> = $r11;

        r0.<android.content.res.Resources: android.content.res.TypedArray mCachedStyledAttributes> = null;

        r0.<android.content.res.Resources: java.lang.RuntimeException mLastRetrievedAttrs> = null;

        r0.<android.content.res.Resources: int mLastCachedXmlBlockIndex> = -1;

        $r12 = newarray (int)[4];

        $r12[0] = 0;

        $r12[1] = 0;

        $r12[2] = 0;

        $r12[3] = 0;

        r0.<android.content.res.Resources: int[] mCachedXmlBlockIds> = $r12;

        $r13 = newarray (android.content.res.XmlBlock)[4];

        r0.<android.content.res.Resources: android.content.res.XmlBlock[] mCachedXmlBlocks> = $r13;

        $r14 = new android.content.res.Configuration;

        specialinvoke $r14.<android.content.res.Configuration: void <init>()>();

        r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration> = $r14;

        $r15 = new android.util.DisplayMetrics;

        specialinvoke $r15.<android.util.DisplayMetrics: void <init>()>();

        r0.<android.content.res.Resources: android.util.DisplayMetrics mMetrics> = $r15;

        $r17 = <android.content.res.CompatibilityInfo: android.content.res.CompatibilityInfo DEFAULT_COMPATIBILITY_INFO>;

        r0.<android.content.res.Resources: android.content.res.CompatibilityInfo mCompatibilityInfo> = $r17;

        r0.<android.content.res.Resources: android.content.res.AssetManager mAssets> = r1;

        $r16 = r0.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        virtualinvoke $r16.<android.util.DisplayMetrics: void setToDefaults()>();

        if r4 == null goto label1;

        r0.<android.content.res.Resources: android.content.res.CompatibilityInfo mCompatibilityInfo> = r4;

     label1:
        $r18 = new java.lang.ref.WeakReference;

        specialinvoke $r18.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r5);

        r0.<android.content.res.Resources: java.lang.ref.WeakReference mToken> = $r18;

        virtualinvoke r0.<android.content.res.Resources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)>(r3, r2);

        virtualinvoke r1.<android.content.res.AssetManager: void ensureStringBlocks()>();

        return;
    }

    static android.content.res.TypedArray access$000(android.content.res.Resources, int)
    {
        android.content.res.Resources r0;
        int i0;
        android.content.res.TypedArray $r1;

        r0 := @parameter0: android.content.res.Resources;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<android.content.res.Resources: android.content.res.TypedArray getCachedStyledAttributes(int)>(i0);

        return $r1;
    }

    private static int attrForQuantityCode(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            default: goto label1;
        };

     label1:
        return 16777220;

     label2:
        return 16777221;

     label3:
        return 16777222;

     label4:
        return 16777223;

     label5:
        return 16777224;

     label6:
        return 16777225;
    }

    private void clearDrawableCacheLocked(android.util.LongSparseArray, int)
    {
        android.content.res.Resources r0;
        android.util.LongSparseArray r1;
        int i0, i1, i2, $i3;
        java.lang.ref.WeakReference r2;
        android.graphics.drawable.Drawable$ConstantState r3;
        java.lang.Object $r4, $r5;
        boolean $z0;

        r0 := @this: android.content.res.Resources;

        r1 := @parameter0: android.util.LongSparseArray;

        i0 := @parameter1: int;

        i1 = virtualinvoke r1.<android.util.LongSparseArray: int size()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        $r4 = virtualinvoke r1.<android.util.LongSparseArray: java.lang.Object valueAt(int)>(i2);

        r2 = (java.lang.ref.WeakReference) $r4;

        if r2 == null goto label2;

        $r5 = virtualinvoke r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r3 = (android.graphics.drawable.Drawable$ConstantState) $r5;

        if r3 == null goto label2;

        $i3 = virtualinvoke r3.<android.graphics.drawable.Drawable$ConstantState: int getChangingConfigurations()>();

        $z0 = staticinvoke <android.content.res.Configuration: boolean needNewResources(int,int)>(i0, $i3);

        if $z0 == 0 goto label2;

        virtualinvoke r1.<android.util.LongSparseArray: void setValueAt(int,java.lang.Object)>(i2, null);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }

    private android.content.res.ColorStateList getCachedColorStateList(long)
    {
        android.content.res.Resources r0;
        long l0;
        java.lang.Object r1, $r6, $r7;
        java.lang.Throwable r2, $r9;
        java.lang.ref.WeakReference r3;
        android.content.res.ColorStateList r4;
        android.util.LongSparseArray $r5, $r8;

        r0 := @this: android.content.res.Resources;

        l0 := @parameter0: long;

        r1 = r0.<android.content.res.Resources: java.lang.Object mAccessLock>;

        entermonitor r1;

     label01:
        $r5 = r0.<android.content.res.Resources: android.util.LongSparseArray mColorStateListCache>;

        $r6 = virtualinvoke $r5.<android.util.LongSparseArray: java.lang.Object get(long)>(l0);

        r3 = (java.lang.ref.WeakReference) $r6;

     label02:
        if r3 == null goto label08;

     label03:
        $r7 = virtualinvoke r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r4 = (android.content.res.ColorStateList) $r7;

     label04:
        if r4 == null goto label07;

     label05:
        exitmonitor r1;

     label06:
        return r4;

     label07:
        $r8 = r0.<android.content.res.Resources: android.util.LongSparseArray mColorStateListCache>;

        virtualinvoke $r8.<android.util.LongSparseArray: void delete(long)>(l0);

     label08:
        exitmonitor r1;

     label09:
        return null;

     label10:
        $r9 := @caughtexception;

        r2 = $r9;

     label11:
        exitmonitor r1;

     label12:
        throw r2;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    private android.graphics.drawable.Drawable getCachedDrawable(android.util.LongSparseArray, long)
    {
        android.content.res.Resources r0;
        android.util.LongSparseArray r1;
        long l0;
        java.lang.Object r2, $r7, $r8;
        java.lang.Throwable r3, $r9;
        java.lang.ref.WeakReference r4;
        android.graphics.drawable.Drawable$ConstantState r5;
        android.graphics.drawable.Drawable r6;

        r0 := @this: android.content.res.Resources;

        r1 := @parameter0: android.util.LongSparseArray;

        l0 := @parameter1: long;

        r2 = r0.<android.content.res.Resources: java.lang.Object mAccessLock>;

        entermonitor r2;

     label01:
        $r7 = virtualinvoke r1.<android.util.LongSparseArray: java.lang.Object get(long)>(l0);

        r4 = (java.lang.ref.WeakReference) $r7;

     label02:
        if r4 == null goto label08;

     label03:
        $r8 = virtualinvoke r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r5 = (android.graphics.drawable.Drawable$ConstantState) $r8;

     label04:
        if r5 == null goto label07;

     label05:
        r6 = virtualinvoke r5.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>(r0);

        exitmonitor r2;

     label06:
        return r6;

     label07:
        virtualinvoke r1.<android.util.LongSparseArray: void delete(long)>(l0);

     label08:
        exitmonitor r2;

     label09:
        return null;

     label10:
        $r9 := @caughtexception;

        r3 = $r9;

     label11:
        exitmonitor r2;

     label12:
        throw r3;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    private android.content.res.TypedArray getCachedStyledAttributes(int)
    {
        android.content.res.Resources r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.lang.Object r1;
        java.lang.Throwable r2, $r11;
        android.content.res.TypedArray r3, r4, $r5;
        int[] $r6, $r7, $r8, $r9, $r10;

        r0 := @this: android.content.res.Resources;

        i0 := @parameter0: int;

        r1 = r0.<android.content.res.Resources: java.lang.Object mAccessLock>;

        entermonitor r1;

     label01:
        r3 = r0.<android.content.res.Resources: android.content.res.TypedArray mCachedStyledAttributes>;

     label02:
        if r3 == null goto label12;

     label03:
        r0.<android.content.res.Resources: android.content.res.TypedArray mCachedStyledAttributes> = null;

        r3.<android.content.res.TypedArray: int mLength> = i0;

     label04:
        i1 = i0 * 6;

     label05:
        $r8 = r3.<android.content.res.TypedArray: int[] mData>;

        $i4 = lengthof $r8;

        if $i4 < i1 goto label07;

        exitmonitor r1;

     label06:
        return r3;

     label07:
        $r9 = newarray (int)[i1];

        r3.<android.content.res.TypedArray: int[] mData> = $r9;

        $i5 = i0 + 1;

        $r10 = newarray (int)[$i5];

        r3.<android.content.res.TypedArray: int[] mIndices> = $r10;

        exitmonitor r1;

     label08:
        return r3;

     label09:
        $r11 := @caughtexception;

        r2 = $r11;

     label10:
        exitmonitor r1;

     label11:
        throw r2;

     label12:
        $r5 = new android.content.res.TypedArray;

        $i2 = i0 * 6;

        $r7 = newarray (int)[$i2];

        $i3 = i0 + 1;

        $r6 = newarray (int)[$i3];

        specialinvoke $r5.<android.content.res.TypedArray: void <init>(android.content.res.Resources,int[],int[],int)>(r0, $r7, $r6, i0);

        r4 = $r5;

        exitmonitor r1;

     label13:
        return r4;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label12 to label13 with label09;
    }

    private libcore.icu.NativePluralRules getPluralRule()
    {
        android.content.res.Resources r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r8;
        libcore.icu.NativePluralRules r3, $r4, $r7;
        android.content.res.Configuration $r5;
        java.util.Locale $r6;

        r0 := @this: android.content.res.Resources;

        r1 = <android.content.res.Resources: java.lang.Object sSync>;

        entermonitor r1;

     label1:
        $r4 = r0.<android.content.res.Resources: libcore.icu.NativePluralRules mPluralRule>;

        if $r4 != null goto label2;

        $r5 = r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $r6 = $r5.<android.content.res.Configuration: java.util.Locale locale>;

        $r7 = staticinvoke <libcore.icu.NativePluralRules: libcore.icu.NativePluralRules forLocale(java.util.Locale)>($r6);

        r0.<android.content.res.Resources: libcore.icu.NativePluralRules mPluralRule> = $r7;

     label2:
        r3 = r0.<android.content.res.Resources: libcore.icu.NativePluralRules mPluralRule>;

        exitmonitor r1;

     label3:
        return r3;

     label4:
        $r8 := @caughtexception;

        r2 = $r8;

     label5:
        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static android.content.res.Resources getSystem()
    {
        java.lang.Object r0;
        java.lang.Throwable r1, $r4;
        android.content.res.Resources r2, $r3;

        r0 = <android.content.res.Resources: java.lang.Object sSync>;

        entermonitor r0;

     label1:
        r2 = <android.content.res.Resources: android.content.res.Resources mSystem>;

     label2:
        if r2 != null goto label4;

     label3:
        $r3 = new android.content.res.Resources;

        specialinvoke $r3.<android.content.res.Resources: void <init>()>();

        r2 = $r3;

        <android.content.res.Resources: android.content.res.Resources mSystem> = r2;

     label4:
        exitmonitor r0;

     label5:
        return r2;

     label6:
        $r4 := @caughtexception;

        r1 = $r4;

     label7:
        exitmonitor r0;

     label8:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public static boolean resourceHasPackage(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = i0 >>> 24;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static int selectDefaultTheme(int, int)
    {
        int i0, i1, $i2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <android.content.res.Resources: int selectSystemTheme(int,int,int,int,int)>(i0, i1, 16973829, 16973931, 16974120);

        return $i2;
    }

    public static int selectSystemTheme(int, int, int, int, int)
    {
        int i0, i1, i2, i3, i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        if i0 == 0 goto label1;

        return i0;

     label1:
        if i1 >= 11 goto label2;

        return i2;

     label2:
        if i1 >= 14 goto label3;

        return i3;

     label3:
        return i4;
    }

    private static java.lang.String stringForQuantityCode(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            default: goto label1;
        };

     label1:
        return "other";

     label2:
        return "zero";

     label3:
        return "one";

     label4:
        return "two";

     label5:
        return "few";

     label6:
        return "many";
    }

    public static void updateSystemConfiguration(android.content.res.Configuration, android.util.DisplayMetrics, android.content.res.CompatibilityInfo)
    {
        android.content.res.Configuration r0;
        android.util.DisplayMetrics r1;
        android.content.res.CompatibilityInfo r2;
        android.content.res.Resources $r3, $r4;

        r0 := @parameter0: android.content.res.Configuration;

        r1 := @parameter1: android.util.DisplayMetrics;

        r2 := @parameter2: android.content.res.CompatibilityInfo;

        $r3 = <android.content.res.Resources: android.content.res.Resources mSystem>;

        if $r3 == null goto label1;

        $r4 = <android.content.res.Resources: android.content.res.Resources mSystem>;

        virtualinvoke $r4.<android.content.res.Resources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics,android.content.res.CompatibilityInfo)>(r0, r1, r2);

     label1:
        return;
    }

    private boolean verifyPreloadConfig(int, int, int, java.lang.String)
    {
        android.content.res.Resources r0;
        int i0, i1, i2, $i3, $i4, $i5;
        java.lang.String r1, r3, r4, $r10, $r13;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r14;
        android.content.res.Resources$NotFoundException $r15;

        r0 := @this: android.content.res.Resources;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        $i4 = -1073745921 & i0;

        $i3 = i1 ^ -1;

        $i5 = $i4 & $i3;

        if $i5 == 0 goto label5;

     label1:
        r4 = virtualinvoke r0.<android.content.res.Resources: java.lang.String getResourceName(int)>(i2);

     label2:
        r3 = r4;

     label3:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Preloaded ");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" resource #0x");

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i2);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") that varies with configuration!!");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Resources", $r13);

        return 0;

     label4:
        $r15 := @caughtexception;

        r3 = "?";

        goto label3;

     label5:
        return 1;

        catch android.content.res.Resources$NotFoundException from label1 to label2 with label4;
    }

    public final void finishPreloading()
    {
        android.content.res.Resources r0;
        boolean $z0;

        r0 := @this: android.content.res.Resources;

        $z0 = r0.<android.content.res.Resources: boolean mPreloading>;

        if $z0 == 0 goto label1;

        r0.<android.content.res.Resources: boolean mPreloading> = 0;

        virtualinvoke r0.<android.content.res.Resources: void flushLayoutCache()>();

     label1:
        return;
    }

    public final void flushLayoutCache()
    {
        android.content.res.Resources r0;
        int[] r1, $r4, $r5;
        java.lang.Throwable r2, $r8;
        int i0, i1;
        android.content.res.XmlBlock r3;
        android.content.res.XmlBlock[] $r6, $r7;

        r0 := @this: android.content.res.Resources;

        r1 = r0.<android.content.res.Resources: int[] mCachedXmlBlockIds>;

        entermonitor r1;

     label01:
        $r4 = r0.<android.content.res.Resources: int[] mCachedXmlBlockIds>;

        i0 = lengthof $r4;

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label09;

     label04:
        $r5 = r0.<android.content.res.Resources: int[] mCachedXmlBlockIds>;

        $r5[i1] = 0;

        $r6 = r0.<android.content.res.Resources: android.content.res.XmlBlock[] mCachedXmlBlocks>;

        r3 = $r6[i1];

     label05:
        if r3 == null goto label07;

     label06:
        virtualinvoke r3.<android.content.res.XmlBlock: void close()>();

     label07:
        $r7 = r0.<android.content.res.Resources: android.content.res.XmlBlock[] mCachedXmlBlocks>;

        $r7[i1] = null;

     label08:
        i1 = i1 + 1;

        goto label03;

     label09:
        exitmonitor r1;

     label10:
        return;

     label11:
        $r8 := @caughtexception;

        r2 = $r8;

     label12:
        exitmonitor r1;

     label13:
        throw r2;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public android.content.res.XmlResourceParser getAnimation(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        int i0;
        android.content.res.XmlResourceParser $r1;

        r0 := @this: android.content.res.Resources;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.content.res.Resources: android.content.res.XmlResourceParser loadXmlResourceParser(int,java.lang.String)>(i0, "anim");

        return $r1;
    }

    public final android.content.res.AssetManager getAssets()
    {
        android.content.res.Resources r0;
        android.content.res.AssetManager $r1;

        r0 := @this: android.content.res.Resources;

        $r1 = r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        return $r1;
    }

    public boolean getBoolean(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        int i0, $i1, $i2, $i3, $i4;
        boolean z0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r14;
        android.util.TypedValue r3, $r15;
        android.content.res.Resources$NotFoundException $r4;
        java.lang.StringBuilder $r5, $r6, $r8, $r9, $r11, $r12;
        java.lang.String $r7, $r10, $r13;

        r0 := @this: android.content.res.Resources;

        i0 := @parameter0: int;

        z0 = 1;

        r1 = r0.<android.content.res.Resources: java.lang.Object mAccessLock>;

        entermonitor r1;

     label01:
        r3 = r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

     label02:
        if r3 != null goto label04;

     label03:
        $r15 = new android.util.TypedValue;

        specialinvoke $r15.<android.util.TypedValue: void <init>()>();

        r3 = $r15;

        r0.<android.content.res.Resources: android.util.TypedValue mTmpValue> = r3;

     label04:
        virtualinvoke r0.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>(i0, r3, 1);

        $i1 = r3.<android.util.TypedValue: int type>;

        if $i1 < 16 goto label07;

        $i3 = r3.<android.util.TypedValue: int type>;

        if $i3 > 31 goto label07;

        $i4 = r3.<android.util.TypedValue: int data>;

        if $i4 == 0 goto label11;

     label05:
        exitmonitor r1;

     label06:
        return z0;

     label07:
        $r4 = new android.content.res.Resources$NotFoundException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource ID #0x");

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type #0x");

        $i2 = r3.<android.util.TypedValue: int type>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i2);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not valid");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r13);

        throw $r4;

     label08:
        $r14 := @caughtexception;

        r2 = $r14;

     label09:
        exitmonitor r1;

     label10:
        throw r2;

     label11:
        z0 = 0;

        goto label05;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public int getColor(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Object r1, r5;
        java.lang.Throwable r2, r6, $r19, $r20;
        android.util.TypedValue r3, $r7, $r18;
        android.content.res.ColorStateList r4;
        java.lang.StringBuilder $r8, $r11, $r12, $r13, $r15, $r16;
        android.content.res.Resources$NotFoundException $r9;
        java.lang.String $r10, $r14, $r17;

        r0 := @this: android.content.res.Resources;

        i0 := @parameter0: int;

        r1 = r0.<android.content.res.Resources: java.lang.Object mAccessLock>;

        entermonitor r1;

     label01:
        r3 = r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

     label02:
        if r3 != null goto label04;

     label03:
        $r18 = new android.util.TypedValue;

        specialinvoke $r18.<android.util.TypedValue: void <init>()>();

        r3 = $r18;

     label04:
        virtualinvoke r0.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>(i0, r3, 1);

        $i2 = r3.<android.util.TypedValue: int type>;

        if $i2 < 16 goto label06;

        $i6 = r3.<android.util.TypedValue: int type>;

        if $i6 > 31 goto label06;

        r0.<android.content.res.Resources: android.util.TypedValue mTmpValue> = r3;

        i1 = r3.<android.util.TypedValue: int data>;

        exitmonitor r1;

     label05:
        return i1;

     label06:
        $i3 = r3.<android.util.TypedValue: int type>;

        if $i3 == 3 goto label10;

        $r9 = new android.content.res.Resources$NotFoundException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource ID #0x");

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type #0x");

        $i5 = r3.<android.util.TypedValue: int type>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i5);

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not valid");

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r17);

        throw $r9;

     label07:
        $r20 := @caughtexception;

        r2 = $r20;

     label08:
        exitmonitor r1;

     label09:
        throw r2;

     label10:
        r0.<android.content.res.Resources: android.util.TypedValue mTmpValue> = null;

        exitmonitor r1;

     label11:
        r4 = virtualinvoke r0.<android.content.res.Resources: android.content.res.ColorStateList loadColorStateList(android.util.TypedValue,int)>(r3, i0);

        r5 = r0.<android.content.res.Resources: java.lang.Object mAccessLock>;

        entermonitor r5;

     label12:
        $r7 = r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

        if $r7 != null goto label13;

        r0.<android.content.res.Resources: android.util.TypedValue mTmpValue> = r3;

     label13:
        exitmonitor r5;

     label14:
        $i4 = virtualinvoke r4.<android.content.res.ColorStateList: int getDefaultColor()>();

        return $i4;

     label15:
        $r19 := @caughtexception;

        r6 = $r19;

     label16:
        exitmonitor r5;

     label17:
        throw r6;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label06 to label07 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label10 to label11 with label07;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    public android.content.res.ColorStateList getColorStateList(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        int i0;
        java.lang.Object r1, r5;
        java.lang.Throwable r2, r6, $r9, $r10;
        android.util.TypedValue r3, $r7, $r8;
        android.content.res.ColorStateList r4;

        r0 := @this: android.content.res.Resources;

        i0 := @parameter0: int;

        r1 = r0.<android.content.res.Resources: java.lang.Object mAccessLock>;

        entermonitor r1;

     label01:
        r3 = r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

     label02:
        if r3 != null goto label09;

     label03:
        $r8 = new android.util.TypedValue;

        specialinvoke $r8.<android.util.TypedValue: void <init>()>();

        r3 = $r8;

     label04:
        virtualinvoke r0.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>(i0, r3, 1);

        exitmonitor r1;

     label05:
        r4 = virtualinvoke r0.<android.content.res.Resources: android.content.res.ColorStateList loadColorStateList(android.util.TypedValue,int)>(r3, i0);

        r5 = r0.<android.content.res.Resources: java.lang.Object mAccessLock>;

        entermonitor r5;

     label06:
        $r7 = r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

        if $r7 != null goto label07;

        r0.<android.content.res.Resources: android.util.TypedValue mTmpValue> = r3;

     label07:
        exitmonitor r5;

     label08:
        return r4;

     label09:
        r0.<android.content.res.Resources: android.util.TypedValue mTmpValue> = null;

     label10:
        goto label04;

     label11:
        $r10 := @caughtexception;

        r2 = $r10;

     label12:
        exitmonitor r1;

     label13:
        throw r2;

     label14:
        $r9 := @caughtexception;

        r6 = $r9;

     label15:
        exitmonitor r5;

     label16:
        throw r6;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    public android.content.res.CompatibilityInfo getCompatibilityInfo()
    {
        android.content.res.Resources r0;
        android.content.res.CompatibilityInfo $r1;

        r0 := @this: android.content.res.Resources;

        $r1 = r0.<android.content.res.Resources: android.content.res.CompatibilityInfo mCompatibilityInfo>;

        return $r1;
    }

    public android.content.res.Configuration getConfiguration()
    {
        android.content.res.Resources r0;
        android.content.res.Configuration $r1;

        r0 := @this: android.content.res.Resources;

        $r1 = r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        return $r1;
    }

    public float getDimension(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        int i0, $i1, $i2, $i3;
        java.lang.Object r1;
        java.lang.Throwable r2, $r16;
        android.util.TypedValue r3, $r15;
        float f0;
        android.content.res.Resources$NotFoundException $r4;
        java.lang.StringBuilder $r5, $r6, $r8, $r9, $r11, $r12;
        java.lang.String $r7, $r10, $r14;
        android.util.DisplayMetrics $r13;

        r0 := @this: android.content.res.Resources;

        i0 := @parameter0: int;

        r1 = r0.<android.content.res.Resources: java.lang.Object mAccessLock>;

        entermonitor r1;

     label1:
        r3 = r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

     label2:
        if r3 != null goto label4;

     label3:
        $r15 = new android.util.TypedValue;

        specialinvoke $r15.<android.util.TypedValue: void <init>()>();

        r3 = $r15;

        r0.<android.content.res.Resources: android.util.TypedValue mTmpValue> = r3;

     label4:
        virtualinvoke r0.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>(i0, r3, 1);

        $i1 = r3.<android.util.TypedValue: int type>;

        if $i1 != 5 goto label6;

        $i3 = r3.<android.util.TypedValue: int data>;

        $r13 = r0.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        f0 = staticinvoke <android.util.TypedValue: float complexToDimension(int,android.util.DisplayMetrics)>($i3, $r13);

        exitmonitor r1;

     label5:
        return f0;

     label6:
        $r4 = new android.content.res.Resources$NotFoundException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource ID #0x");

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type #0x");

        $i2 = r3.<android.util.TypedValue: int type>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i2);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not valid");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r14);

        throw $r4;

     label7:
        $r16 := @caughtexception;

        r2 = $r16;

     label8:
        exitmonitor r1;

     label9:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label6 to label7 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public int getDimensionPixelOffset(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        int i0, i1, $i2, $i3, $i4;
        java.lang.Object r1;
        java.lang.Throwable r2, $r16;
        android.util.TypedValue r3, $r15;
        android.content.res.Resources$NotFoundException $r4;
        java.lang.StringBuilder $r5, $r6, $r8, $r9, $r11, $r12;
        java.lang.String $r7, $r10, $r14;
        android.util.DisplayMetrics $r13;

        r0 := @this: android.content.res.Resources;

        i0 := @parameter0: int;

        r1 = r0.<android.content.res.Resources: java.lang.Object mAccessLock>;

        entermonitor r1;

     label1:
        r3 = r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

     label2:
        if r3 != null goto label4;

     label3:
        $r15 = new android.util.TypedValue;

        specialinvoke $r15.<android.util.TypedValue: void <init>()>();

        r3 = $r15;

        r0.<android.content.res.Resources: android.util.TypedValue mTmpValue> = r3;

     label4:
        virtualinvoke r0.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>(i0, r3, 1);

        $i2 = r3.<android.util.TypedValue: int type>;

        if $i2 != 5 goto label6;

        $i4 = r3.<android.util.TypedValue: int data>;

        $r13 = r0.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        i1 = staticinvoke <android.util.TypedValue: int complexToDimensionPixelOffset(int,android.util.DisplayMetrics)>($i4, $r13);

        exitmonitor r1;

     label5:
        return i1;

     label6:
        $r4 = new android.content.res.Resources$NotFoundException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource ID #0x");

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type #0x");

        $i3 = r3.<android.util.TypedValue: int type>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i3);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not valid");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r14);

        throw $r4;

     label7:
        $r16 := @caughtexception;

        r2 = $r16;

     label8:
        exitmonitor r1;

     label9:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label6 to label7 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public int getDimensionPixelSize(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        int i0, i1, $i2, $i3, $i4;
        java.lang.Object r1;
        java.lang.Throwable r2, $r16;
        android.util.TypedValue r3, $r15;
        android.content.res.Resources$NotFoundException $r4;
        java.lang.StringBuilder $r5, $r6, $r8, $r9, $r11, $r12;
        java.lang.String $r7, $r10, $r14;
        android.util.DisplayMetrics $r13;

        r0 := @this: android.content.res.Resources;

        i0 := @parameter0: int;

        r1 = r0.<android.content.res.Resources: java.lang.Object mAccessLock>;

        entermonitor r1;

     label1:
        r3 = r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

     label2:
        if r3 != null goto label4;

     label3:
        $r15 = new android.util.TypedValue;

        specialinvoke $r15.<android.util.TypedValue: void <init>()>();

        r3 = $r15;

        r0.<android.content.res.Resources: android.util.TypedValue mTmpValue> = r3;

     label4:
        virtualinvoke r0.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>(i0, r3, 1);

        $i2 = r3.<android.util.TypedValue: int type>;

        if $i2 != 5 goto label6;

        $i4 = r3.<android.util.TypedValue: int data>;

        $r13 = r0.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        i1 = staticinvoke <android.util.TypedValue: int complexToDimensionPixelSize(int,android.util.DisplayMetrics)>($i4, $r13);

        exitmonitor r1;

     label5:
        return i1;

     label6:
        $r4 = new android.content.res.Resources$NotFoundException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource ID #0x");

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type #0x");

        $i3 = r3.<android.util.TypedValue: int type>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i3);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not valid");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r14);

        throw $r4;

     label7:
        $r16 := @caughtexception;

        r2 = $r16;

     label8:
        exitmonitor r1;

     label9:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label6 to label7 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public android.util.DisplayMetrics getDisplayMetrics()
    {
        android.content.res.Resources r0;
        android.util.DisplayMetrics $r1;

        r0 := @this: android.content.res.Resources;

        $r1 = r0.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        return $r1;
    }

    public android.graphics.drawable.Drawable getDrawable(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        int i0;
        java.lang.Object r1, r5;
        java.lang.Throwable r2, r6, $r9, $r10;
        android.util.TypedValue r3, $r7, $r8;
        android.graphics.drawable.Drawable r4;

        r0 := @this: android.content.res.Resources;

        i0 := @parameter0: int;

        r1 = r0.<android.content.res.Resources: java.lang.Object mAccessLock>;

        entermonitor r1;

     label01:
        r3 = r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

     label02:
        if r3 != null goto label09;

     label03:
        $r8 = new android.util.TypedValue;

        specialinvoke $r8.<android.util.TypedValue: void <init>()>();

        r3 = $r8;

     label04:
        virtualinvoke r0.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>(i0, r3, 1);

        exitmonitor r1;

     label05:
        r4 = virtualinvoke r0.<android.content.res.Resources: android.graphics.drawable.Drawable loadDrawable(android.util.TypedValue,int)>(r3, i0);

        r5 = r0.<android.content.res.Resources: java.lang.Object mAccessLock>;

        entermonitor r5;

     label06:
        $r7 = r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

        if $r7 != null goto label07;

        r0.<android.content.res.Resources: android.util.TypedValue mTmpValue> = r3;

     label07:
        exitmonitor r5;

     label08:
        return r4;

     label09:
        r0.<android.content.res.Resources: android.util.TypedValue mTmpValue> = null;

     label10:
        goto label04;

     label11:
        $r9 := @caughtexception;

        r2 = $r9;

     label12:
        exitmonitor r1;

     label13:
        throw r2;

     label14:
        $r10 := @caughtexception;

        r6 = $r10;

     label15:
        exitmonitor r5;

     label16:
        throw r6;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    public android.graphics.drawable.Drawable getDrawableForDensity(int, int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.Object r1, r5;
        java.lang.Throwable r2, r6, $r11, $r12;
        android.util.TypedValue r3, $r7, $r10;
        android.graphics.drawable.Drawable r4;
        android.util.DisplayMetrics $r8, $r9;

        r0 := @this: android.content.res.Resources;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<android.content.res.Resources: java.lang.Object mAccessLock>;

        entermonitor r1;

     label01:
        r3 = r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

     label02:
        if r3 != null goto label10;

     label03:
        $r10 = new android.util.TypedValue;

        specialinvoke $r10.<android.util.TypedValue: void <init>()>();

        r3 = $r10;

     label04:
        virtualinvoke r0.<android.content.res.Resources: void getValueForDensity(int,int,android.util.TypedValue,boolean)>(i0, i1, r3, 1);

        $i2 = r3.<android.util.TypedValue: int density>;

        if $i2 <= 0 goto label05;

        $i4 = r3.<android.util.TypedValue: int density>;

        if $i4 == 65535 goto label05;

        $i3 = r3.<android.util.TypedValue: int density>;

        if $i3 != i1 goto label15;

        $r9 = r0.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        $i9 = $r9.<android.util.DisplayMetrics: int densityDpi>;

        r3.<android.util.TypedValue: int density> = $i9;

     label05:
        exitmonitor r1;

     label06:
        r4 = virtualinvoke r0.<android.content.res.Resources: android.graphics.drawable.Drawable loadDrawable(android.util.TypedValue,int)>(r3, i0);

        r5 = r0.<android.content.res.Resources: java.lang.Object mAccessLock>;

        entermonitor r5;

     label07:
        $r7 = r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

        if $r7 != null goto label08;

        r0.<android.content.res.Resources: android.util.TypedValue mTmpValue> = r3;

     label08:
        exitmonitor r5;

     label09:
        return r4;

     label10:
        r0.<android.content.res.Resources: android.util.TypedValue mTmpValue> = null;

     label11:
        goto label04;

     label12:
        $r12 := @caughtexception;

        r2 = $r12;

     label13:
        exitmonitor r1;

     label14:
        throw r2;

     label15:
        $i7 = r3.<android.util.TypedValue: int density>;

        $r8 = r0.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        $i5 = $r8.<android.util.DisplayMetrics: int densityDpi>;

        $i6 = $i7 * $i5;

        $i8 = $i6 / i1;

        r3.<android.util.TypedValue: int density> = $i8;

     label16:
        goto label05;

     label17:
        $r11 := @caughtexception;

        r6 = $r11;

     label18:
        exitmonitor r5;

     label19:
        throw r6;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
        catch java.lang.Throwable from label15 to label16 with label12;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    public float getFraction(int, int, int)
    {
        android.content.res.Resources r0;
        int i0, i1, i2, $i3, $i4, $i5;
        java.lang.Object r1;
        java.lang.Throwable r2, $r14;
        android.util.TypedValue r3, $r15;
        float f0, $f1, $f2;
        android.content.res.Resources$NotFoundException $r4;
        java.lang.StringBuilder $r5, $r6, $r8, $r9, $r11, $r12;
        java.lang.String $r7, $r10, $r13;

        r0 := @this: android.content.res.Resources;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 = r0.<android.content.res.Resources: java.lang.Object mAccessLock>;

        entermonitor r1;

     label1:
        r3 = r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

     label2:
        if r3 != null goto label4;

     label3:
        $r15 = new android.util.TypedValue;

        specialinvoke $r15.<android.util.TypedValue: void <init>()>();

        r3 = $r15;

        r0.<android.content.res.Resources: android.util.TypedValue mTmpValue> = r3;

     label4:
        virtualinvoke r0.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>(i0, r3, 1);

        $i3 = r3.<android.util.TypedValue: int type>;

        if $i3 != 6 goto label6;

        $i5 = r3.<android.util.TypedValue: int data>;

        $f2 = (float) i1;

        $f1 = (float) i2;

        f0 = staticinvoke <android.util.TypedValue: float complexToFraction(int,float,float)>($i5, $f2, $f1);

        exitmonitor r1;

     label5:
        return f0;

     label6:
        $r4 = new android.content.res.Resources$NotFoundException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource ID #0x");

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type #0x");

        $i4 = r3.<android.util.TypedValue: int type>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i4);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not valid");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r13);

        throw $r4;

     label7:
        $r14 := @caughtexception;

        r2 = $r14;

     label8:
        exitmonitor r1;

     label9:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label6 to label7 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public int getIdentifier(java.lang.String, java.lang.String, java.lang.String)
    {
        android.content.res.Resources r0;
        java.lang.String r1, r2, r3;
        int i0, $i1;
        java.lang.NullPointerException $r5;
        java.lang.Exception $r6;
        android.content.res.AssetManager $r7;

        r0 := @this: android.content.res.Resources;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        if r1 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("name is null");

        throw $r5;

     label1:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

     label2:
        return i0;

     label3:
        $r6 := @caughtexception;

        $r7 = r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        $i1 = virtualinvoke $r7.<android.content.res.AssetManager: int getResourceIdentifier(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        return $i1;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public int[] getIntArray(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        int i0;
        int[] r1;
        android.content.res.AssetManager $r2;
        android.content.res.Resources$NotFoundException $r3;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r6, $r8;

        r0 := @this: android.content.res.Resources;

        i0 := @parameter0: int;

        $r2 = r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        r1 = virtualinvoke $r2.<android.content.res.AssetManager: int[] getArrayIntResource(int)>(i0);

        if r1 == null goto label1;

        return r1;

     label1:
        $r3 = new android.content.res.Resources$NotFoundException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Int array resource ID #0x");

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r8);

        throw $r3;
    }

    public int getInteger(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        int i0, i1, $i2, $i3, $i4;
        java.lang.Object r1;
        java.lang.Throwable r2, $r15;
        android.util.TypedValue r3, $r14;
        android.content.res.Resources$NotFoundException $r4;
        java.lang.StringBuilder $r5, $r6, $r8, $r9, $r11, $r12;
        java.lang.String $r7, $r10, $r13;

        r0 := @this: android.content.res.Resources;

        i0 := @parameter0: int;

        r1 = r0.<android.content.res.Resources: java.lang.Object mAccessLock>;

        entermonitor r1;

     label1:
        r3 = r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

     label2:
        if r3 != null goto label4;

     label3:
        $r14 = new android.util.TypedValue;

        specialinvoke $r14.<android.util.TypedValue: void <init>()>();

        r3 = $r14;

        r0.<android.content.res.Resources: android.util.TypedValue mTmpValue> = r3;

     label4:
        virtualinvoke r0.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>(i0, r3, 1);

        $i2 = r3.<android.util.TypedValue: int type>;

        if $i2 < 16 goto label6;

        $i4 = r3.<android.util.TypedValue: int type>;

        if $i4 > 31 goto label6;

        i1 = r3.<android.util.TypedValue: int data>;

        exitmonitor r1;

     label5:
        return i1;

     label6:
        $r4 = new android.content.res.Resources$NotFoundException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource ID #0x");

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type #0x");

        $i3 = r3.<android.util.TypedValue: int type>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i3);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not valid");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r13);

        throw $r4;

     label7:
        $r15 := @caughtexception;

        r2 = $r15;

     label8:
        exitmonitor r1;

     label9:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label6 to label7 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public android.content.res.XmlResourceParser getLayout(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        int i0;
        android.content.res.XmlResourceParser $r1;

        r0 := @this: android.content.res.Resources;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.content.res.Resources: android.content.res.XmlResourceParser loadXmlResourceParser(int,java.lang.String)>(i0, "layout");

        return $r1;
    }

    public android.graphics.Movie getMovie(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        int i0;
        java.io.InputStream r1;
        android.graphics.Movie r2;
        java.io.IOException $r4;

        r0 := @this: android.content.res.Resources;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<android.content.res.Resources: java.io.InputStream openRawResource(int)>(i0);

        r2 = staticinvoke <android.graphics.Movie: android.graphics.Movie decodeStream(java.io.InputStream)>(r1);

     label1:
        virtualinvoke r1.<java.io.InputStream: void close()>();

     label2:
        return r2;

     label3:
        $r4 := @caughtexception;

        return r2;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public android.util.LongSparseArray getPreloadedDrawables()
    {
        android.content.res.Resources r0;
        android.util.LongSparseArray[] $r1;
        android.util.LongSparseArray $r2;

        r0 := @this: android.content.res.Resources;

        $r1 = <android.content.res.Resources: android.util.LongSparseArray[] sPreloadedDrawables>;

        $r2 = $r1[0];

        return $r2;
    }

    public java.lang.String getQuantityString(int, int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        int i0, i1;
        java.lang.CharSequence $r1;
        java.lang.String $r2;

        r0 := @this: android.content.res.Resources;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<android.content.res.Resources: java.lang.CharSequence getQuantityText(int,int)>(i0, i1);

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public transient java.lang.String getQuantityString(int, int, java.lang.Object[]) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        int i0, i1;
        java.lang.Object[] r1;
        java.lang.String r2, $r6;
        java.lang.CharSequence $r3;
        android.content.res.Configuration $r4;
        java.util.Locale $r5;

        r0 := @this: android.content.res.Resources;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Object[];

        $r3 = virtualinvoke r0.<android.content.res.Resources: java.lang.CharSequence getQuantityText(int,int)>(i0, i1);

        r2 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $r4 = r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $r5 = $r4.<android.content.res.Configuration: java.util.Locale locale>;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r5, r2, r1);

        return $r6;
    }

    public java.lang.CharSequence getQuantityText(int, int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        int i0, i1, $i2, $i3, $i4;
        libcore.icu.NativePluralRules r1;
        java.lang.CharSequence r2, r3;
        android.content.res.AssetManager $r4, $r5;
        android.content.res.Resources$NotFoundException $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r11, $r12, $r13, $r14;
        java.lang.String $r10, $r15, $r16;

        r0 := @this: android.content.res.Resources;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = specialinvoke r0.<android.content.res.Resources: libcore.icu.NativePluralRules getPluralRule()>();

        $r4 = r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        $i2 = virtualinvoke r1.<libcore.icu.NativePluralRules: int quantityForInt(int)>(i1);

        $i3 = staticinvoke <android.content.res.Resources: int attrForQuantityCode(int)>($i2);

        r2 = virtualinvoke $r4.<android.content.res.AssetManager: java.lang.CharSequence getResourceBagText(int,int)>(i0, $i3);

        if r2 == null goto label1;

        return r2;

     label1:
        $r5 = r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        r3 = virtualinvoke $r5.<android.content.res.AssetManager: java.lang.CharSequence getResourceBagText(int,int)>(i0, 16777220);

        if r3 == null goto label2;

        return r3;

     label2:
        $r6 = new android.content.res.Resources$NotFoundException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Plural resource ID #0x");

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" quantity=");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" item=");

        $i4 = virtualinvoke r1.<libcore.icu.NativePluralRules: int quantityForInt(int)>(i1);

        $r15 = staticinvoke <android.content.res.Resources: java.lang.String stringForQuantityCode(int)>($i4);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r16);

        throw $r6;
    }

    public java.lang.String getResourceEntryName(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        int i0;
        java.lang.String r1, $r6, $r8;
        android.content.res.AssetManager $r2;
        android.content.res.Resources$NotFoundException $r3;
        java.lang.StringBuilder $r4, $r5, $r7;

        r0 := @this: android.content.res.Resources;

        i0 := @parameter0: int;

        $r2 = r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        r1 = virtualinvoke $r2.<android.content.res.AssetManager: java.lang.String getResourceEntryName(int)>(i0);

        if r1 == null goto label1;

        return r1;

     label1:
        $r3 = new android.content.res.Resources$NotFoundException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find resource ID #0x");

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r8);

        throw $r3;
    }

    public java.lang.String getResourceName(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        int i0;
        java.lang.String r1, $r6, $r8;
        android.content.res.AssetManager $r2;
        android.content.res.Resources$NotFoundException $r3;
        java.lang.StringBuilder $r4, $r5, $r7;

        r0 := @this: android.content.res.Resources;

        i0 := @parameter0: int;

        $r2 = r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        r1 = virtualinvoke $r2.<android.content.res.AssetManager: java.lang.String getResourceName(int)>(i0);

        if r1 == null goto label1;

        return r1;

     label1:
        $r3 = new android.content.res.Resources$NotFoundException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find resource ID #0x");

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r8);

        throw $r3;
    }

    public java.lang.String getResourcePackageName(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        int i0;
        java.lang.String r1, $r6, $r8;
        android.content.res.AssetManager $r2;
        android.content.res.Resources$NotFoundException $r3;
        java.lang.StringBuilder $r4, $r5, $r7;

        r0 := @this: android.content.res.Resources;

        i0 := @parameter0: int;

        $r2 = r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        r1 = virtualinvoke $r2.<android.content.res.AssetManager: java.lang.String getResourcePackageName(int)>(i0);

        if r1 == null goto label1;

        return r1;

     label1:
        $r3 = new android.content.res.Resources$NotFoundException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find resource ID #0x");

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r8);

        throw $r3;
    }

    public java.lang.String getResourceTypeName(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        int i0;
        java.lang.String r1, $r6, $r8;
        android.content.res.AssetManager $r2;
        android.content.res.Resources$NotFoundException $r3;
        java.lang.StringBuilder $r4, $r5, $r7;

        r0 := @this: android.content.res.Resources;

        i0 := @parameter0: int;

        $r2 = r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        r1 = virtualinvoke $r2.<android.content.res.AssetManager: java.lang.String getResourceTypeName(int)>(i0);

        if r1 == null goto label1;

        return r1;

     label1:
        $r3 = new android.content.res.Resources$NotFoundException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find resource ID #0x");

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r8);

        throw $r3;
    }

    public java.lang.String getString(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        int i0;
        java.lang.CharSequence r1;
        android.content.res.Resources$NotFoundException $r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r7, $r8;

        r0 := @this: android.content.res.Resources;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<android.content.res.Resources: java.lang.CharSequence getText(int)>(i0);

        if r1 == null goto label1;

        $r8 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        return $r8;

     label1:
        $r2 = new android.content.res.Resources$NotFoundException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("String resource ID #0x");

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r7);

        throw $r2;
    }

    public transient java.lang.String getString(int, java.lang.Object[]) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        int i0;
        java.lang.Object[] r1;
        java.lang.String r2, $r5;
        android.content.res.Configuration $r3;
        java.util.Locale $r4;

        r0 := @this: android.content.res.Resources;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object[];

        r2 = virtualinvoke r0.<android.content.res.Resources: java.lang.String getString(int)>(i0);

        $r3 = r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $r4 = $r3.<android.content.res.Configuration: java.util.Locale locale>;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r4, r2, r1);

        return $r5;
    }

    public java.lang.String[] getStringArray(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        int i0;
        java.lang.String[] r1;
        android.content.res.AssetManager $r2;
        android.content.res.Resources$NotFoundException $r3;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r6, $r8;

        r0 := @this: android.content.res.Resources;

        i0 := @parameter0: int;

        $r2 = r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        r1 = virtualinvoke $r2.<android.content.res.AssetManager: java.lang.String[] getResourceStringArray(int)>(i0);

        if r1 == null goto label1;

        return r1;

     label1:
        $r3 = new android.content.res.Resources$NotFoundException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("String array resource ID #0x");

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r8);

        throw $r3;
    }

    public java.lang.CharSequence getText(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        int i0;
        java.lang.CharSequence r1;
        android.content.res.AssetManager $r2;
        android.content.res.Resources$NotFoundException $r3;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r6, $r8;

        r0 := @this: android.content.res.Resources;

        i0 := @parameter0: int;

        $r2 = r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        r1 = virtualinvoke $r2.<android.content.res.AssetManager: java.lang.CharSequence getResourceText(int)>(i0);

        if r1 == null goto label1;

        return r1;

     label1:
        $r3 = new android.content.res.Resources$NotFoundException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("String resource ID #0x");

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r8);

        throw $r3;
    }

    public java.lang.CharSequence getText(int, java.lang.CharSequence)
    {
        android.content.res.Resources r0;
        int i0;
        java.lang.CharSequence r1, r2;
        android.content.res.AssetManager $r3;

        r0 := @this: android.content.res.Resources;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.CharSequence;

        if i0 == 0 goto label2;

        $r3 = r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        r2 = virtualinvoke $r3.<android.content.res.AssetManager: java.lang.CharSequence getResourceText(int)>(i0);

     label1:
        if r2 == null goto label3;

        return r2;

     label2:
        r2 = null;

        goto label1;

     label3:
        return r1;
    }

    public java.lang.CharSequence[] getTextArray(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        int i0;
        java.lang.CharSequence[] r1;
        android.content.res.AssetManager $r2;
        android.content.res.Resources$NotFoundException $r3;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r6, $r8;

        r0 := @this: android.content.res.Resources;

        i0 := @parameter0: int;

        $r2 = r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        r1 = virtualinvoke $r2.<android.content.res.AssetManager: java.lang.CharSequence[] getResourceTextArray(int)>(i0);

        if r1 == null goto label1;

        return r1;

     label1:
        $r3 = new android.content.res.Resources$NotFoundException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Text array resource ID #0x");

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r8);

        throw $r3;
    }

    public void getValue(int, android.util.TypedValue, boolean) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        int i0;
        android.util.TypedValue r1;
        boolean z0, $z1;
        android.content.res.AssetManager $r2;
        android.content.res.Resources$NotFoundException $r3;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r6, $r8;

        r0 := @this: android.content.res.Resources;

        i0 := @parameter0: int;

        r1 := @parameter1: android.util.TypedValue;

        z0 := @parameter2: boolean;

        $r2 = r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        $z1 = virtualinvoke $r2.<android.content.res.AssetManager: boolean getResourceValue(int,int,android.util.TypedValue,boolean)>(i0, 0, r1, z0);

        if $z1 == 0 goto label1;

        return;

     label1:
        $r3 = new android.content.res.Resources$NotFoundException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource ID #0x");

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r8);

        throw $r3;
    }

    public void getValue(java.lang.String, android.util.TypedValue, boolean) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        java.lang.String r1, $r7;
        android.util.TypedValue r2;
        boolean z0;
        int i0;
        android.content.res.Resources$NotFoundException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;

        r0 := @this: android.content.res.Resources;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.util.TypedValue;

        z0 := @parameter2: boolean;

        i0 = virtualinvoke r0.<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>(r1, "string", null);

        if i0 == 0 goto label1;

        virtualinvoke r0.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>(i0, r2, z0);

        return;

     label1:
        $r3 = new android.content.res.Resources$NotFoundException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("String resource name ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r7);

        throw $r3;
    }

    public void getValueForDensity(int, int, android.util.TypedValue, boolean) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        int i0, i1;
        android.util.TypedValue r1;
        boolean z0, $z1;
        android.content.res.AssetManager $r2;
        android.content.res.Resources$NotFoundException $r3;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r6, $r8;

        r0 := @this: android.content.res.Resources;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.util.TypedValue;

        z0 := @parameter3: boolean;

        $r2 = r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        $z1 = virtualinvoke $r2.<android.content.res.AssetManager: boolean getResourceValue(int,int,android.util.TypedValue,boolean)>(i0, i1, r1, z0);

        if $z1 == 0 goto label1;

        return;

     label1:
        $r3 = new android.content.res.Resources$NotFoundException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource ID #0x");

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r8);

        throw $r3;
    }

    public android.content.res.XmlResourceParser getXml(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        int i0;
        android.content.res.XmlResourceParser $r1;

        r0 := @this: android.content.res.Resources;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.content.res.Resources: android.content.res.XmlResourceParser loadXmlResourceParser(int,java.lang.String)>(i0, "xml");

        return $r1;
    }

    android.content.res.ColorStateList loadColorStateList(android.util.TypedValue, int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        android.util.TypedValue r1;
        int i0, $i2, $i3, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        long l1, $l4, $l5, $l6;
        android.content.res.ColorStateList r2, r3, r8, r11, r12;
        java.lang.String r4, $r20, $r23, $r30, $r44, $r46;
        java.lang.Exception r5, $r41;
        android.content.res.Resources$NotFoundException r6, $r18, $r28, $r42;
        android.content.res.XmlResourceParser r7;
        java.lang.Object r9, $r13, $r34;
        java.lang.Throwable r10, $r43;
        android.util.LongSparseArray $r14, $r27, $r29, $r35, $r40;
        java.lang.CharSequence $r15, $r16;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r17, $r19, $r21, $r22, $r24, $r25, $r31, $r32, $r33, $r36, $r37, $r38, $r39, $r45;
        java.lang.ref.WeakReference $r26;

        r0 := @this: android.content.res.Resources;

        r1 := @parameter0: android.util.TypedValue;

        i0 := @parameter1: int;

        $i2 = r1.<android.util.TypedValue: int assetCookie>;

        $l4 = (long) $i2;

        $l5 = $l4 << 32;

        $i3 = r1.<android.util.TypedValue: int data>;

        $l6 = (long) $i3;

        l1 = $l5 | $l6;

        $i7 = r1.<android.util.TypedValue: int type>;

        if $i7 < 28 goto label03;

        $i12 = r1.<android.util.TypedValue: int type>;

        if $i12 > 31 goto label03;

        $r35 = <android.content.res.Resources: android.util.LongSparseArray sPreloadedColorStateLists>;

        $r34 = virtualinvoke $r35.<android.util.LongSparseArray: java.lang.Object get(long)>(l1);

        r11 = (android.content.res.ColorStateList) $r34;

        if r11 == null goto label01;

        return r11;

     label01:
        $i11 = r1.<android.util.TypedValue: int data>;

        r12 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>($i11);

        $z3 = r0.<android.content.res.Resources: boolean mPreloading>;

        if $z3 == 0 goto label02;

        $i13 = r1.<android.util.TypedValue: int changingConfigurations>;

        $i14 = r1.<android.util.TypedValue: int resourceId>;

        $z4 = specialinvoke r0.<android.content.res.Resources: boolean verifyPreloadConfig(int,int,int,java.lang.String)>($i13, 0, $i14, "color");

        if $z4 == 0 goto label02;

        $r40 = <android.content.res.Resources: android.util.LongSparseArray sPreloadedColorStateLists>;

        virtualinvoke $r40.<android.util.LongSparseArray: void put(long,java.lang.Object)>(l1, r12);

     label02:
        return r12;

     label03:
        r2 = specialinvoke r0.<android.content.res.Resources: android.content.res.ColorStateList getCachedColorStateList(long)>(l1);

        if r2 == null goto label04;

        return r2;

     label04:
        $r14 = <android.content.res.Resources: android.util.LongSparseArray sPreloadedColorStateLists>;

        $r13 = virtualinvoke $r14.<android.util.LongSparseArray: java.lang.Object get(long)>(l1);

        r3 = (android.content.res.ColorStateList) $r13;

        if r3 == null goto label05;

        return r3;

     label05:
        $r16 = r1.<android.util.TypedValue: java.lang.CharSequence string>;

        if $r16 != null goto label06;

        $r28 = new android.content.res.Resources$NotFoundException;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource is not a ColorStateList (color or path): ");

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r28.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r30);

        throw $r28;

     label06:
        $r15 = r1.<android.util.TypedValue: java.lang.CharSequence string>;

        r4 = virtualinvoke $r15.<java.lang.Object: java.lang.String toString()>();

        $z0 = virtualinvoke r4.<java.lang.String: boolean endsWith(java.lang.String)>(".xml");

        if $z0 == 0 goto label11;

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(8192L, r4);

     label07:
        $i8 = r1.<android.util.TypedValue: int assetCookie>;

        r7 = virtualinvoke r0.<android.content.res.Resources: android.content.res.XmlResourceParser loadXmlResourceParser(java.lang.String,int,int,java.lang.String)>(r4, i0, $i8, "colorstatelist");

        r8 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser)>(r0, r7);

        interfaceinvoke r7.<android.content.res.XmlResourceParser: void close()>();

     label08:
        staticinvoke <android.os.Trace: void traceEnd(long)>(8192L);

        if r8 == null goto label09;

        $z1 = r0.<android.content.res.Resources: boolean mPreloading>;

        if $z1 == 0 goto label12;

        $i10 = r1.<android.util.TypedValue: int changingConfigurations>;

        $i9 = r1.<android.util.TypedValue: int resourceId>;

        $z2 = specialinvoke r0.<android.content.res.Resources: boolean verifyPreloadConfig(int,int,int,java.lang.String)>($i10, 0, $i9, "color");

        if $z2 == 0 goto label09;

        $r29 = <android.content.res.Resources: android.util.LongSparseArray sPreloadedColorStateLists>;

        virtualinvoke $r29.<android.util.LongSparseArray: void put(long,java.lang.Object)>(l1, r8);

     label09:
        return r8;

     label10:
        $r41 := @caughtexception;

        r5 = $r41;

        staticinvoke <android.os.Trace: void traceEnd(long)>(8192L);

        $r42 = new android.content.res.Resources$NotFoundException;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File ");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from color state list resource ID #0x");

        $r44 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r45 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r42.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r46);

        r6 = $r42;

        virtualinvoke r6.<android.content.res.Resources$NotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>(r5);

        throw r6;

     label11:
        $r18 = new android.content.res.Resources$NotFoundException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r19 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from drawable resource ID #0x");

        $r20 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r24 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": .xml extension required");

        $r23 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r23);

        throw $r18;

     label12:
        r9 = r0.<android.content.res.Resources: java.lang.Object mAccessLock>;

        entermonitor r9;

     label13:
        $r27 = r0.<android.content.res.Resources: android.util.LongSparseArray mColorStateListCache>;

        $r26 = new java.lang.ref.WeakReference;

        specialinvoke $r26.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r8);

        virtualinvoke $r27.<android.util.LongSparseArray: void put(long,java.lang.Object)>(l1, $r26);

        exitmonitor r9;

     label14:
        goto label09;

     label15:
        $r43 := @caughtexception;

        r10 = $r43;

     label16:
        exitmonitor r9;

     label17:
        throw r10;

        catch java.lang.Exception from label07 to label08 with label10;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    android.graphics.drawable.Drawable loadDrawable(android.util.TypedValue, int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        android.util.TypedValue r1;
        int i0, i1, i3, i4, $i6, $i8, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        boolean z0, $z1, $z2, $z3, $z4;
        long l2, $l5, $l7, $l9;
        android.util.LongSparseArray r2, r10, r15, $r22, $r25, $r28, $r30, $r33, $r46;
        android.graphics.drawable.Drawable r3;
        android.graphics.drawable.Drawable$ConstantState r4, r9;
        java.lang.String r5, $r38, $r47, $r53, $r56, $r58;
        java.lang.Exception r6, r16, $r42, $r49;
        android.content.res.Resources$NotFoundException r7, r17, $r40, $r44, $r61;
        java.io.InputStream r8;
        java.lang.Object r11, $r21, $r45;
        java.lang.Throwable r12, $r64;
        java.lang.ref.WeakReference r13, r14, $r23, $r24;
        android.content.res.XmlResourceParser r18;
        android.content.res.Configuration $r19, $r27;
        android.util.LongSparseArray[] $r20, $r26, $r29, $r31;
        java.lang.CharSequence $r32, $r35;
        android.content.res.AssetManager $r34;
        java.lang.StringBuilder $r36, $r37, $r41, $r43, $r48, $r51, $r52, $r54, $r55, $r57, $r59, $r60, $r62;
        android.graphics.drawable.ColorDrawable $r39;

        r0 := @this: android.content.res.Resources;

        r1 := @parameter0: android.util.TypedValue;

        i0 := @parameter1: int;

        i1 = r1.<android.util.TypedValue: int type>;

        z0 = 0;

        if i1 < 28 goto label01;

        i4 = r1.<android.util.TypedValue: int type>;

        z0 = 0;

        if i4 > 31 goto label01;

        z0 = 1;

     label01:
        if z0 == 0 goto label04;

        $i20 = r1.<android.util.TypedValue: int data>;

        l2 = (long) $i20;

     label02:
        if z0 == 0 goto label05;

        r2 = r0.<android.content.res.Resources: android.util.LongSparseArray mColorDrawableCache>;

     label03:
        r3 = specialinvoke r0.<android.content.res.Resources: android.graphics.drawable.Drawable getCachedDrawable(android.util.LongSparseArray,long)>(r2, l2);

        if r3 == null goto label06;

        return r3;

     label04:
        $i6 = r1.<android.util.TypedValue: int assetCookie>;

        $l5 = (long) $i6;

        $l9 = $l5 << 32;

        $i8 = r1.<android.util.TypedValue: int data>;

        $l7 = (long) $i8;

        l2 = $l9 | $l7;

        goto label02;

     label05:
        r2 = r0.<android.content.res.Resources: android.util.LongSparseArray mDrawableCache>;

        goto label03;

     label06:
        if z0 == 0 goto label10;

        $r46 = <android.content.res.Resources: android.util.LongSparseArray sPreloadedColorDrawables>;

        $r45 = virtualinvoke $r46.<android.util.LongSparseArray: java.lang.Object get(long)>(l2);

        r4 = (android.graphics.drawable.Drawable$ConstantState) $r45;

     label07:
        if r4 == null goto label11;

        r3 = virtualinvoke r4.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>(r0);

     label08:
        if r3 == null goto label09;

        $i10 = r1.<android.util.TypedValue: int changingConfigurations>;

        virtualinvoke r3.<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>($i10);

        r9 = virtualinvoke r3.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>();

        if r9 == null goto label09;

        $z1 = r0.<android.content.res.Resources: boolean mPreloading>;

        if $z1 == 0 goto label23;

        i3 = virtualinvoke r9.<android.graphics.drawable.Drawable$ConstantState: int getChangingConfigurations()>();

        if z0 == 0 goto label21;

        $i17 = r1.<android.util.TypedValue: int resourceId>;

        $z3 = specialinvoke r0.<android.content.res.Resources: boolean verifyPreloadConfig(int,int,int,java.lang.String)>(i3, 0, $i17, "drawable");

        if $z3 == 0 goto label09;

        $r33 = <android.content.res.Resources: android.util.LongSparseArray sPreloadedColorDrawables>;

        virtualinvoke $r33.<android.util.LongSparseArray: void put(long,java.lang.Object)>(l2, r9);

     label09:
        return r3;

     label10:
        $r20 = <android.content.res.Resources: android.util.LongSparseArray[] sPreloadedDrawables>;

        $r19 = r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $i11 = virtualinvoke $r19.<android.content.res.Configuration: int getLayoutDirection()>();

        $r22 = $r20[$i11];

        $r21 = virtualinvoke $r22.<android.util.LongSparseArray: java.lang.Object get(long)>(l2);

        r4 = (android.graphics.drawable.Drawable$ConstantState) $r21;

        goto label07;

     label11:
        if z0 == 0 goto label12;

        $r39 = new android.graphics.drawable.ColorDrawable;

        $i21 = r1.<android.util.TypedValue: int data>;

        specialinvoke $r39.<android.graphics.drawable.ColorDrawable: void <init>(int)>($i21);

        r3 = $r39;

     label12:
        if r3 != null goto label08;

        $r32 = r1.<android.util.TypedValue: java.lang.CharSequence string>;

        if $r32 != null goto label13;

        $r40 = new android.content.res.Resources$NotFoundException;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource is not a Drawable (color or path): ");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r40.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r38);

        throw $r40;

     label13:
        $r35 = r1.<android.util.TypedValue: java.lang.CharSequence string>;

        r5 = virtualinvoke $r35.<java.lang.Object: java.lang.String toString()>();

        $z4 = virtualinvoke r5.<java.lang.String: boolean endsWith(java.lang.String)>(".xml");

        if $z4 == 0 goto label17;

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(8192L, r5);

     label14:
        $i18 = r1.<android.util.TypedValue: int assetCookie>;

        r18 = virtualinvoke r0.<android.content.res.Resources: android.content.res.XmlResourceParser loadXmlResourceParser(java.lang.String,int,int,java.lang.String)>(r5, i0, $i18, "drawable");

        r3 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser)>(r0, r18);

        interfaceinvoke r18.<android.content.res.XmlResourceParser: void close()>();

     label15:
        staticinvoke <android.os.Trace: void traceEnd(long)>(8192L);

        goto label08;

     label16:
        $r49 := @caughtexception;

        r16 = $r49;

        staticinvoke <android.os.Trace: void traceEnd(long)>(8192L);

        $r61 = new android.content.res.Resources$NotFoundException;

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File ");

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r57 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from drawable resource ID #0x");

        $r58 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r55 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r61.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r56);

        r17 = $r61;

        virtualinvoke r17.<android.content.res.Resources$NotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>(r16);

        throw r17;

     label17:
        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(8192L, r5);

     label18:
        $r34 = r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        $i19 = r1.<android.util.TypedValue: int assetCookie>;

        r8 = virtualinvoke $r34.<android.content.res.AssetManager: java.io.InputStream openNonAsset(int,java.lang.String,int)>($i19, r5, 2);

        r3 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,java.lang.String,android.graphics.BitmapFactory$Options)>(r0, r1, r8, r5, null);

        virtualinvoke r8.<java.io.InputStream: void close()>();

     label19:
        staticinvoke <android.os.Trace: void traceEnd(long)>(8192L);

        goto label08;

     label20:
        $r42 := @caughtexception;

        r6 = $r42;

        staticinvoke <android.os.Trace: void traceEnd(long)>(8192L);

        $r44 = new android.content.res.Resources$NotFoundException;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File ");

        $r51 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r54 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from drawable resource ID #0x");

        $r53 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r48 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r53);

        $r47 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r44.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r47);

        r7 = $r44;

        virtualinvoke r7.<android.content.res.Resources$NotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>(r6);

        throw r7;

     label21:
        $i15 = <android.content.res.Resources: int LAYOUT_DIR_CONFIG>;

        $i12 = r1.<android.util.TypedValue: int resourceId>;

        $z2 = specialinvoke r0.<android.content.res.Resources: boolean verifyPreloadConfig(int,int,int,java.lang.String)>(i3, $i15, $i12, "drawable");

        if $z2 == 0 goto label09;

        $i14 = <android.content.res.Resources: int LAYOUT_DIR_CONFIG>;

        $i13 = i3 & $i14;

        if $i13 != 0 goto label22;

        $r31 = <android.content.res.Resources: android.util.LongSparseArray[] sPreloadedDrawables>;

        $r30 = $r31[0];

        virtualinvoke $r30.<android.util.LongSparseArray: void put(long,java.lang.Object)>(l2, r9);

        $r29 = <android.content.res.Resources: android.util.LongSparseArray[] sPreloadedDrawables>;

        $r28 = $r29[1];

        virtualinvoke $r28.<android.util.LongSparseArray: void put(long,java.lang.Object)>(l2, r9);

        goto label09;

     label22:
        $r26 = <android.content.res.Resources: android.util.LongSparseArray[] sPreloadedDrawables>;

        $r27 = r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $i16 = virtualinvoke $r27.<android.content.res.Configuration: int getLayoutDirection()>();

        $r25 = $r26[$i16];

        virtualinvoke $r25.<android.util.LongSparseArray: void put(long,java.lang.Object)>(l2, r9);

        goto label09;

     label23:
        r11 = r0.<android.content.res.Resources: java.lang.Object mAccessLock>;

        entermonitor r11;

        if z0 == 0 goto label30;

     label24:
        r15 = r0.<android.content.res.Resources: android.util.LongSparseArray mColorDrawableCache>;

        $r24 = new java.lang.ref.WeakReference;

        specialinvoke $r24.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r9);

        r14 = $r24;

        virtualinvoke r15.<android.util.LongSparseArray: void put(long,java.lang.Object)>(l2, r14);

     label25:
        exitmonitor r11;

     label26:
        goto label09;

     label27:
        $r64 := @caughtexception;

        r12 = $r64;

     label28:
        exitmonitor r11;

     label29:
        throw r12;

     label30:
        r10 = r0.<android.content.res.Resources: android.util.LongSparseArray mDrawableCache>;

        $r23 = new java.lang.ref.WeakReference;

        specialinvoke $r23.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r9);

        r13 = $r23;

        virtualinvoke r10.<android.util.LongSparseArray: void put(long,java.lang.Object)>(l2, r13);

     label31:
        goto label25;

        catch java.lang.Exception from label14 to label15 with label16;
        catch java.lang.Exception from label18 to label19 with label20;
        catch java.lang.Throwable from label24 to label25 with label27;
        catch java.lang.Throwable from label25 to label26 with label27;
        catch java.lang.Throwable from label28 to label29 with label27;
        catch java.lang.Throwable from label30 to label31 with label27;
    }

    android.content.res.XmlResourceParser loadXmlResourceParser(int, java.lang.String) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        int i0, $i1, $i2, $i3;
        java.lang.String r1, $r9, $r13, $r14, $r16;
        java.lang.Object r2;
        java.lang.Throwable r3, $r19;
        android.util.TypedValue r4, $r18;
        android.content.res.XmlResourceParser r5;
        android.content.res.Resources$NotFoundException $r6;
        java.lang.StringBuilder $r7, $r8, $r10, $r11, $r12, $r15;
        java.lang.CharSequence $r17;

        r0 := @this: android.content.res.Resources;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 = r0.<android.content.res.Resources: java.lang.Object mAccessLock>;

        entermonitor r2;

     label1:
        r4 = r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

     label2:
        if r4 != null goto label4;

     label3:
        $r18 = new android.util.TypedValue;

        specialinvoke $r18.<android.util.TypedValue: void <init>()>();

        r4 = $r18;

        r0.<android.content.res.Resources: android.util.TypedValue mTmpValue> = r4;

     label4:
        virtualinvoke r0.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>(i0, r4, 1);

        $i1 = r4.<android.util.TypedValue: int type>;

        if $i1 != 3 goto label6;

        $r17 = r4.<android.util.TypedValue: java.lang.CharSequence string>;

        $r16 = virtualinvoke $r17.<java.lang.Object: java.lang.String toString()>();

        $i3 = r4.<android.util.TypedValue: int assetCookie>;

        r5 = virtualinvoke r0.<android.content.res.Resources: android.content.res.XmlResourceParser loadXmlResourceParser(java.lang.String,int,int,java.lang.String)>($r16, i0, $i3, r1);

        exitmonitor r2;

     label5:
        return r5;

     label6:
        $r6 = new android.content.res.Resources$NotFoundException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource ID #0x");

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type #0x");

        $i2 = r4.<android.util.TypedValue: int type>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not valid");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r14);

        throw $r6;

     label7:
        $r19 := @caughtexception;

        r3 = $r19;

     label8:
        exitmonitor r2;

     label9:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label6 to label7 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    android.content.res.XmlResourceParser loadXmlResourceParser(java.lang.String, int, int, java.lang.String) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        java.lang.String r1, r2, $r19, $r20, $r38, $r40;
        int i0, i1, i2, i3, i4, $i5, $i6;
        java.lang.Exception r3, $r31;
        android.content.res.Resources$NotFoundException r4, $r10, $r32;
        int[] r5, $r22, $r23, $r26;
        java.lang.Throwable r6, $r41;
        android.content.res.XmlResourceParser r7, r11;
        android.content.res.XmlBlock r8, r9, $r28;
        java.lang.StringBuilder $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r29, $r30, $r33, $r34, $r35, $r36, $r39;
        android.content.res.AssetManager $r21;
        android.content.res.XmlBlock[] $r24, $r25, $r27;

        r0 := @this: android.content.res.Resources;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        if i0 == 0 goto label21;

     label01:
        r5 = r0.<android.content.res.Resources: int[] mCachedXmlBlockIds>;

        entermonitor r5;

     label02:
        $r22 = r0.<android.content.res.Resources: int[] mCachedXmlBlockIds>;

        i2 = lengthof $r22;

     label03:
        i3 = 0;

     label04:
        if i3 >= i2 goto label07;

     label05:
        $r26 = r0.<android.content.res.Resources: int[] mCachedXmlBlockIds>;

        $i6 = $r26[i3];

        if $i6 != i0 goto label22;

        $r27 = r0.<android.content.res.Resources: android.content.res.XmlBlock[] mCachedXmlBlocks>;

        $r28 = $r27[i3];

        r7 = virtualinvoke $r28.<android.content.res.XmlBlock: android.content.res.XmlResourceParser newParser()>();

        exitmonitor r5;

     label06:
        return r7;

     label07:
        $r21 = r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        r8 = virtualinvoke $r21.<android.content.res.AssetManager: android.content.res.XmlBlock openXmlBlockAsset(int,java.lang.String)>(i1, r1);

     label08:
        if r8 == null goto label20;

     label09:
        $i5 = r0.<android.content.res.Resources: int mLastCachedXmlBlockIndex>;

        i4 = 1 + $i5;

     label10:
        if i4 < i2 goto label11;

        i4 = 0;

     label11:
        r0.<android.content.res.Resources: int mLastCachedXmlBlockIndex> = i4;

        $r25 = r0.<android.content.res.Resources: android.content.res.XmlBlock[] mCachedXmlBlocks>;

        r9 = $r25[i4];

     label12:
        if r9 == null goto label14;

     label13:
        virtualinvoke r9.<android.content.res.XmlBlock: void close()>();

     label14:
        $r23 = r0.<android.content.res.Resources: int[] mCachedXmlBlockIds>;

        $r23[i4] = i0;

        $r24 = r0.<android.content.res.Resources: android.content.res.XmlBlock[] mCachedXmlBlocks>;

        $r24[i4] = r8;

        r11 = virtualinvoke r8.<android.content.res.XmlBlock: android.content.res.XmlResourceParser newParser()>();

        exitmonitor r5;

     label15:
        return r11;

     label16:
        $r41 := @caughtexception;

        r6 = $r41;

     label17:
        exitmonitor r5;

     label18:
        throw r6;

     label19:
        $r31 := @caughtexception;

        r3 = $r31;

        $r32 = new android.content.res.Resources$NotFoundException;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File ");

        $r36 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from xml type ");

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" resource ID #0x");

        $r40 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r39 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r38);

        r4 = $r32;

        virtualinvoke r4.<android.content.res.Resources$NotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>(r3);

        throw r4;

     label20:
        exitmonitor r5;

     label21:
        $r10 = new android.content.res.Resources$NotFoundException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File ");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from xml type ");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" resource ID #0x");

        $r19 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r20);

        throw $r10;

     label22:
        i3 = i3 + 1;

        goto label04;

        catch java.lang.Exception from label01 to label02 with label19;
        catch java.lang.Throwable from label02 to label03 with label16;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
        catch java.lang.Exception from label18 to label19 with label19;
        catch java.lang.Throwable from label20 to label21 with label16;
    }

    public final android.content.res.Resources$Theme newTheme()
    {
        android.content.res.Resources r0;
        android.content.res.Resources$Theme $r1;

        r0 := @this: android.content.res.Resources;

        $r1 = new android.content.res.Resources$Theme;

        specialinvoke $r1.<android.content.res.Resources$Theme: void <init>(android.content.res.Resources)>(r0);

        return $r1;
    }

    public android.content.res.TypedArray obtainAttributes(android.util.AttributeSet, int[])
    {
        android.content.res.Resources r0;
        android.util.AttributeSet r1;
        int[] r2, $r5, $r6;
        android.content.res.TypedArray r3;
        android.content.res.XmlBlock$Parser r4;
        int $i0, $i1;
        android.content.res.AssetManager $r7;

        r0 := @this: android.content.res.Resources;

        r1 := @parameter0: android.util.AttributeSet;

        r2 := @parameter1: int[];

        $i0 = lengthof r2;

        r3 = specialinvoke r0.<android.content.res.Resources: android.content.res.TypedArray getCachedStyledAttributes(int)>($i0);

        r4 = (android.content.res.XmlBlock$Parser) r1;

        $r7 = r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        $i1 = r4.<android.content.res.XmlBlock$Parser: int mParseState>;

        $r6 = r3.<android.content.res.TypedArray: int[] mData>;

        $r5 = r3.<android.content.res.TypedArray: int[] mIndices>;

        virtualinvoke $r7.<android.content.res.AssetManager: boolean retrieveAttributes(int,int[],int[],int[])>($i1, r2, $r6, $r5);

        r3.<android.content.res.TypedArray: int[] mRsrcs> = r2;

        r3.<android.content.res.TypedArray: android.content.res.XmlBlock$Parser mXml> = r4;

        return r3;
    }

    public android.content.res.TypedArray obtainTypedArray(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        int i0, i1, $i2;
        android.content.res.TypedArray r1;
        android.content.res.AssetManager $r2, $r4;
        int[] $r3, $r5;
        android.content.res.Resources$NotFoundException $r6;
        java.lang.StringBuilder $r7, $r8, $r10;
        java.lang.String $r9, $r11;

        r0 := @this: android.content.res.Resources;

        i0 := @parameter0: int;

        $r2 = r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        i1 = virtualinvoke $r2.<android.content.res.AssetManager: int getArraySize(int)>(i0);

        if i1 >= 0 goto label1;

        $r6 = new android.content.res.Resources$NotFoundException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Array resource ID #0x");

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label1:
        r1 = specialinvoke r0.<android.content.res.Resources: android.content.res.TypedArray getCachedStyledAttributes(int)>(i1);

        $r4 = r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        $r3 = r1.<android.content.res.TypedArray: int[] mData>;

        $i2 = virtualinvoke $r4.<android.content.res.AssetManager: int retrieveArray(int,int[])>(i0, $r3);

        r1.<android.content.res.TypedArray: int mLength> = $i2;

        $r5 = r1.<android.content.res.TypedArray: int[] mIndices>;

        $r5[0] = 0;

        return r1;
    }

    public java.io.InputStream openRawResource(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        int i0;
        java.lang.Object r1, r5;
        java.lang.Throwable r2, r6, $r9, $r10;
        android.util.TypedValue r3, $r7, $r8;
        java.io.InputStream r4;

        r0 := @this: android.content.res.Resources;

        i0 := @parameter0: int;

        r1 = r0.<android.content.res.Resources: java.lang.Object mAccessLock>;

        entermonitor r1;

     label01:
        r3 = r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

     label02:
        if r3 != null goto label09;

     label03:
        $r8 = new android.util.TypedValue;

        specialinvoke $r8.<android.util.TypedValue: void <init>()>();

        r3 = $r8;

     label04:
        exitmonitor r1;

     label05:
        r4 = virtualinvoke r0.<android.content.res.Resources: java.io.InputStream openRawResource(int,android.util.TypedValue)>(i0, r3);

        r5 = r0.<android.content.res.Resources: java.lang.Object mAccessLock>;

        entermonitor r5;

     label06:
        $r7 = r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

        if $r7 != null goto label07;

        r0.<android.content.res.Resources: android.util.TypedValue mTmpValue> = r3;

     label07:
        exitmonitor r5;

     label08:
        return r4;

     label09:
        r0.<android.content.res.Resources: android.util.TypedValue mTmpValue> = null;

     label10:
        goto label04;

     label11:
        $r9 := @caughtexception;

        r2 = $r9;

     label12:
        exitmonitor r1;

     label13:
        throw r2;

     label14:
        $r10 := @caughtexception;

        r6 = $r10;

     label15:
        exitmonitor r5;

     label16:
        throw r6;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    public java.io.InputStream openRawResource(int, android.util.TypedValue) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        int i0, $i1;
        android.util.TypedValue r1;
        java.lang.Exception r2, $r8;
        android.content.res.Resources$NotFoundException r3, $r9;
        java.io.InputStream r4;
        java.lang.CharSequence $r5, $r13;
        android.content.res.AssetManager $r6;
        java.lang.String $r7, $r12, $r17, $r19;
        java.lang.StringBuilder $r10, $r11, $r14, $r15, $r16;

        r0 := @this: android.content.res.Resources;

        i0 := @parameter0: int;

        r1 := @parameter1: android.util.TypedValue;

        virtualinvoke r0.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>(i0, r1, 1);

     label1:
        $r6 = r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        $i1 = r1.<android.util.TypedValue: int assetCookie>;

        $r5 = r1.<android.util.TypedValue: java.lang.CharSequence string>;

        $r7 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        r4 = virtualinvoke $r6.<android.content.res.AssetManager: java.io.InputStream openNonAsset(int,java.lang.String,int)>($i1, $r7, 2);

     label2:
        return r4;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

        $r9 = new android.content.res.Resources$NotFoundException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File ");

        $r13 = r1.<android.util.TypedValue: java.lang.CharSequence string>;

        $r12 = virtualinvoke $r13.<java.lang.Object: java.lang.String toString()>();

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from drawable resource ID #0x");

        $r17 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r19);

        r3 = $r9;

        virtualinvoke r3.<android.content.res.Resources$NotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>(r2);

        throw r3;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public android.content.res.AssetFileDescriptor openRawResourceFd(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        int i0, $i1;
        java.lang.Object r1, r5, r10;
        java.lang.Throwable r2, r4, r6, r11, $r28, $r30, $r32, $r33;
        android.util.TypedValue r3, $r15, $r17, $r31;
        java.lang.Exception r7, $r16;
        android.content.res.Resources$NotFoundException r8, $r19;
        android.content.res.AssetFileDescriptor r9;
        android.content.res.AssetManager $r12;
        java.lang.CharSequence $r13, $r20;
        java.lang.String $r14, $r23, $r25, $r27;
        java.lang.StringBuilder $r18, $r21, $r22, $r24, $r26;

        r0 := @this: android.content.res.Resources;

        i0 := @parameter0: int;

        r1 = r0.<android.content.res.Resources: java.lang.Object mAccessLock>;

        entermonitor r1;

     label01:
        r3 = r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

     label02:
        if r3 != null goto label10;

     label03:
        $r17 = new android.util.TypedValue;

        specialinvoke $r17.<android.util.TypedValue: void <init>()>();

        r3 = $r17;

     label04:
        virtualinvoke r0.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>(i0, r3, 1);

        exitmonitor r1;

     label05:
        $r12 = r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        $i1 = r3.<android.util.TypedValue: int assetCookie>;

        $r13 = r3.<android.util.TypedValue: java.lang.CharSequence string>;

        $r14 = virtualinvoke $r13.<java.lang.Object: java.lang.String toString()>();

        r9 = virtualinvoke $r12.<android.content.res.AssetManager: android.content.res.AssetFileDescriptor openNonAssetFd(int,java.lang.String)>($i1, $r14);

     label06:
        r10 = r0.<android.content.res.Resources: java.lang.Object mAccessLock>;

        entermonitor r10;

     label07:
        $r15 = r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

        if $r15 != null goto label08;

        r0.<android.content.res.Resources: android.util.TypedValue mTmpValue> = r3;

     label08:
        exitmonitor r10;

     label09:
        return r9;

     label10:
        r0.<android.content.res.Resources: android.util.TypedValue mTmpValue> = null;

     label11:
        goto label04;

     label12:
        $r33 := @caughtexception;

        r2 = $r33;

     label13:
        exitmonitor r1;

     label14:
        throw r2;

     label15:
        $r28 := @caughtexception;

        r11 = $r28;

     label16:
        exitmonitor r10;

     label17:
        throw r11;

     label18:
        $r16 := @caughtexception;

        r7 = $r16;

     label19:
        $r19 = new android.content.res.Resources$NotFoundException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File ");

        $r20 = r3.<android.util.TypedValue: java.lang.CharSequence string>;

        $r23 = virtualinvoke $r20.<java.lang.Object: java.lang.String toString()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from drawable resource ID #0x");

        $r27 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r24 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r25);

        r8 = $r19;

        virtualinvoke r8.<android.content.res.Resources$NotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>(r7);

        throw r8;

     label20:
        $r32 := @caughtexception;

        r4 = $r32;

        r5 = r0.<android.content.res.Resources: java.lang.Object mAccessLock>;

        entermonitor r5;

     label21:
        $r31 = r0.<android.content.res.Resources: android.util.TypedValue mTmpValue>;

        if $r31 != null goto label22;

        r0.<android.content.res.Resources: android.util.TypedValue mTmpValue> = r3;

     label22:
        exitmonitor r5;

     label23:
        throw r4;

     label24:
        $r30 := @caughtexception;

        r6 = $r30;

     label25:
        exitmonitor r5;

     label26:
        throw r6;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Exception from label05 to label06 with label18;
        catch java.lang.Throwable from label05 to label06 with label20;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
        catch java.lang.Throwable from label16 to label17 with label15;
        catch java.lang.Throwable from label19 to label20 with label20;
        catch java.lang.Throwable from label21 to label22 with label24;
        catch java.lang.Throwable from label22 to label23 with label24;
        catch java.lang.Throwable from label25 to label26 with label24;
    }

    public void parseBundleExtra(java.lang.String, android.util.AttributeSet, android.os.Bundle) throws org.xmlpull.v1.XmlPullParserException
    {
        android.content.res.Resources r0;
        java.lang.String r1, r5, $r12, $r14, $r20, $r22, $r28, $r32;
        android.util.AttributeSet r2;
        android.os.Bundle r3;
        boolean z0;
        android.content.res.TypedArray r4;
        android.util.TypedValue r6;
        int[] $r7;
        org.xmlpull.v1.XmlPullParserException $r8, $r17, $r27;
        java.lang.StringBuilder $r9, $r10, $r11, $r13, $r15, $r16, $r18, $r19, $r21, $r23, $r24, $r25, $r29, $r30, $r31;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        float $f0;
        java.lang.CharSequence $r26;

        r0 := @this: android.content.res.Resources;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.util.AttributeSet;

        r3 := @parameter2: android.os.Bundle;

        z0 = 1;

        $r7 = <com.android.internal.R$styleable: int[] Extra>;

        r4 = virtualinvoke r0.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r2, $r7);

        r5 = virtualinvoke r4.<android.content.res.TypedArray: java.lang.String getString(int)>(0);

        if r5 != null goto label1;

        virtualinvoke r4.<android.content.res.TypedArray: void recycle()>();

        $r27 = new org.xmlpull.v1.XmlPullParserException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> requires an android:name attribute at ");

        $r28 = interfaceinvoke r2.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        $r29 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r32);

        throw $r27;

     label1:
        i7 = (int) z0;

        r6 = virtualinvoke r4.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(i7);

        if r6 == null goto label9;

        $i1 = r6.<android.util.TypedValue: int type>;

        if $i1 != 3 goto label3;

        $r26 = virtualinvoke r6.<android.util.TypedValue: java.lang.CharSequence coerceToString()>();

        virtualinvoke r3.<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>(r5, $r26);

     label2:
        virtualinvoke r4.<android.content.res.TypedArray: void recycle()>();

        return;

     label3:
        $i0 = r6.<android.util.TypedValue: int type>;

        if $i0 != 18 goto label6;

        $i5 = r6.<android.util.TypedValue: int data>;

        if $i5 == 0 goto label5;

     label4:
        virtualinvoke r3.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>(r5, z0);

        goto label2;

     label5:
        z0 = 0;

        goto label4;

     label6:
        $i3 = r6.<android.util.TypedValue: int type>;

        if $i3 < 16 goto label7;

        $i6 = r6.<android.util.TypedValue: int type>;

        if $i6 > 31 goto label7;

        $i4 = r6.<android.util.TypedValue: int data>;

        virtualinvoke r3.<android.os.Bundle: void putInt(java.lang.String,int)>(r5, $i4);

        goto label2;

     label7:
        $i2 = r6.<android.util.TypedValue: int type>;

        if $i2 != 4 goto label8;

        $f0 = virtualinvoke r6.<android.util.TypedValue: float getFloat()>();

        virtualinvoke r3.<android.os.Bundle: void putFloat(java.lang.String,float)>(r5, $f0);

        goto label2;

     label8:
        virtualinvoke r4.<android.content.res.TypedArray: void recycle()>();

        $r17 = new org.xmlpull.v1.XmlPullParserException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> only supports string, integer, float, color, and boolean at ");

        $r20 = interfaceinvoke r2.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r22);

        throw $r17;

     label9:
        virtualinvoke r4.<android.content.res.TypedArray: void recycle()>();

        $r8 = new org.xmlpull.v1.XmlPullParserException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> requires an android:value or android:resource attribute at ");

        $r12 = interfaceinvoke r2.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r14);

        throw $r8;
    }

    public void parseBundleExtras(android.content.res.XmlResourceParser, android.os.Bundle) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.Resources r0;
        android.content.res.XmlResourceParser r1;
        android.os.Bundle r2;
        int i0, i1, $i2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: android.content.res.Resources;

        r1 := @parameter0: android.content.res.XmlResourceParser;

        r2 := @parameter1: android.os.Bundle;

        i0 = interfaceinvoke r1.<android.content.res.XmlResourceParser: int getDepth()>();

     label1:
        i1 = interfaceinvoke r1.<android.content.res.XmlResourceParser: int next()>();

        if i1 == 1 goto label4;

        if i1 != 3 goto label2;

        $i2 = interfaceinvoke r1.<android.content.res.XmlResourceParser: int getDepth()>();

        if $i2 <= i0 goto label4;

     label2:
        if i1 == 3 goto label1;

        if i1 == 4 goto label1;

        $r3 = interfaceinvoke r1.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("extra");

        if $z0 == 0 goto label3;

        virtualinvoke r0.<android.content.res.Resources: void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle)>("extra", r1, r2);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label1;

     label3:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label1;

     label4:
        return;
    }

    public void setCompatibilityInfo(android.content.res.CompatibilityInfo)
    {
        android.content.res.Resources r0;
        android.content.res.CompatibilityInfo r1;
        android.util.DisplayMetrics $r2;
        android.content.res.Configuration $r3;

        r0 := @this: android.content.res.Resources;

        r1 := @parameter0: android.content.res.CompatibilityInfo;

        if r1 == null goto label1;

        r0.<android.content.res.Resources: android.content.res.CompatibilityInfo mCompatibilityInfo> = r1;

        $r3 = r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $r2 = r0.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        virtualinvoke r0.<android.content.res.Resources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)>($r3, $r2);

     label1:
        return;
    }

    public final void startPreloading()
    {
        android.content.res.Resources r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r5;
        boolean $z0;
        int $i0, $i1;
        android.content.res.Configuration $r3;
        java.lang.IllegalStateException $r4;

        r0 := @this: android.content.res.Resources;

        r1 = <android.content.res.Resources: java.lang.Object sSync>;

        entermonitor r1;

     label1:
        $z0 = <android.content.res.Resources: boolean sPreloaded>;

        if $z0 == 0 goto label5;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Resources already preloaded");

        throw $r4;

     label2:
        $r5 := @caughtexception;

        r2 = $r5;

     label3:
        exitmonitor r1;

     label4:
        throw r2;

     label5:
        <android.content.res.Resources: boolean sPreloaded> = 1;

        r0.<android.content.res.Resources: boolean mPreloading> = 1;

        $i0 = <android.util.DisplayMetrics: int DENSITY_DEVICE>;

        <android.content.res.Resources: int sPreloadedDensity> = $i0;

        $r3 = r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $i1 = <android.content.res.Resources: int sPreloadedDensity>;

        $r3.<android.content.res.Configuration: int densityDpi> = $i1;

        virtualinvoke r0.<android.content.res.Resources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)>(null, null);

        exitmonitor r1;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.Throwable from label5 to label6 with label2;
    }

    public void updateConfiguration(android.content.res.Configuration, android.util.DisplayMetrics)
    {
        android.content.res.Resources r0;
        android.content.res.Configuration r1;
        android.util.DisplayMetrics r2;

        r0 := @this: android.content.res.Resources;

        r1 := @parameter0: android.content.res.Configuration;

        r2 := @parameter1: android.util.DisplayMetrics;

        virtualinvoke r0.<android.content.res.Resources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics,android.content.res.CompatibilityInfo)>(r1, r2, null);

        return;
    }

    public void updateConfiguration(android.content.res.Configuration, android.util.DisplayMetrics, android.content.res.CompatibilityInfo)
    {
        android.content.res.Resources r0;
        android.content.res.Configuration r1, r7, $r15, $r16, $r17, $r21, $r24, $r25, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r45, $r48, $r53, $r55, $r59, $r62, $r64, $r66, $r68, $r69, $r70, $r72, $r73, $r74, $r78, $r80;
        android.util.DisplayMetrics r2, $r13, $r18, $r19, $r20, $r22, $r23, $r26, $r44, $r49, $r58, $r67, $r76, $r77;
        android.content.res.CompatibilityInfo r3, r6, $r12;
        java.lang.Object r4, r10;
        java.lang.Throwable r5, r11, $r75, $r82;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24;
        java.util.Locale r8, $r14, $r40, $r46, $r52, $r54, $r63, $r65, $r71, $r79, $r81;
        java.lang.String r9, $r57, $r61;
        float $f0, $f1, $f2, $f3, $f4;
        android.content.res.AssetManager $r38;
        libcore.icu.NativePluralRules $r39, $r47;
        android.util.LongSparseArray $r41, $r42, $r43;
        java.lang.StringBuilder $r50, $r51, $r56, $r60;

        r0 := @this: android.content.res.Resources;

        r1 := @parameter0: android.content.res.Configuration;

        r2 := @parameter1: android.util.DisplayMetrics;

        r3 := @parameter2: android.content.res.CompatibilityInfo;

        r4 = r0.<android.content.res.Resources: java.lang.Object mAccessLock>;

        entermonitor r4;

        if r3 == null goto label02;

     label01:
        r0.<android.content.res.Resources: android.content.res.CompatibilityInfo mCompatibilityInfo> = r3;

     label02:
        if r2 == null goto label04;

     label03:
        $r76 = r0.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        virtualinvoke $r76.<android.util.DisplayMetrics: void setTo(android.util.DisplayMetrics)>(r2);

     label04:
        $r12 = r0.<android.content.res.Resources: android.content.res.CompatibilityInfo mCompatibilityInfo>;

        $r13 = r0.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        virtualinvoke $r12.<android.content.res.CompatibilityInfo: void applyToDisplayMetrics(android.util.DisplayMetrics)>($r13);

     label05:
        i0 = 268435455;

        if r1 == null goto label11;

     label06:
        $r73 = r0.<android.content.res.Resources: android.content.res.Configuration mTmpConfig>;

        virtualinvoke $r73.<android.content.res.Configuration: void setTo(android.content.res.Configuration)>(r1);

        i1 = r1.<android.content.res.Configuration: int densityDpi>;

     label07:
        if i1 != 0 goto label09;

     label08:
        $r77 = r0.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        i1 = $r77.<android.util.DisplayMetrics: int noncompatDensityDpi>;

     label09:
        r6 = r0.<android.content.res.Resources: android.content.res.CompatibilityInfo mCompatibilityInfo>;

        r7 = r0.<android.content.res.Resources: android.content.res.Configuration mTmpConfig>;

        virtualinvoke r6.<android.content.res.CompatibilityInfo: void applyToConfiguration(int,android.content.res.Configuration)>(i1, r7);

        $r74 = r0.<android.content.res.Resources: android.content.res.Configuration mTmpConfig>;

        $r71 = $r74.<android.content.res.Configuration: java.util.Locale locale>;

        if $r71 != null goto label10;

        $r69 = r0.<android.content.res.Resources: android.content.res.Configuration mTmpConfig>;

        $r81 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r69.<android.content.res.Configuration: java.util.Locale locale> = $r81;

        $r78 = r0.<android.content.res.Resources: android.content.res.Configuration mTmpConfig>;

        $r80 = r0.<android.content.res.Resources: android.content.res.Configuration mTmpConfig>;

        $r79 = $r80.<android.content.res.Configuration: java.util.Locale locale>;

        virtualinvoke $r78.<android.content.res.Configuration: void setLayoutDirection(java.util.Locale)>($r79);

     label10:
        $r70 = r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $r72 = r0.<android.content.res.Resources: android.content.res.Configuration mTmpConfig>;

        $i24 = virtualinvoke $r70.<android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>($r72);

        i0 = staticinvoke <android.content.pm.ActivityInfo: int activityInfoConfigToNative(int)>($i24);

     label11:
        $r15 = r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $r14 = $r15.<android.content.res.Configuration: java.util.Locale locale>;

        if $r14 != null goto label12;

        $r68 = r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $r65 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r68.<android.content.res.Configuration: java.util.Locale locale> = $r65;

        $r64 = r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $r66 = r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $r63 = $r66.<android.content.res.Configuration: java.util.Locale locale>;

        virtualinvoke $r64.<android.content.res.Configuration: void setLayoutDirection(java.util.Locale)>($r63);

     label12:
        $r16 = r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $i5 = $r16.<android.content.res.Configuration: int densityDpi>;

        if $i5 == 0 goto label13;

        $r58 = r0.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        $r62 = r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $i22 = $r62.<android.content.res.Configuration: int densityDpi>;

        $r58.<android.util.DisplayMetrics: int densityDpi> = $i22;

        $r67 = r0.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        $r59 = r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $i23 = $r59.<android.content.res.Configuration: int densityDpi>;

        $f3 = (float) $i23;

        $f4 = 0.00625F * $f3;

        $r67.<android.util.DisplayMetrics: float density> = $f4;

     label13:
        $r19 = r0.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        $r18 = r0.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        $f0 = $r18.<android.util.DisplayMetrics: float density>;

        $r17 = r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $f1 = $r17.<android.content.res.Configuration: float fontScale>;

        $f2 = $f0 * $f1;

        $r19.<android.util.DisplayMetrics: float scaledDensity> = $f2;

        $r21 = r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        r8 = $r21.<android.content.res.Configuration: java.util.Locale locale>;

     label14:
        r9 = null;

        if r8 == null goto label16;

     label15:
        $r45 = r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $r46 = $r45.<android.content.res.Configuration: java.util.Locale locale>;

        r9 = virtualinvoke $r46.<java.util.Locale: java.lang.String getLanguage()>();

        $r55 = r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $r54 = $r55.<android.content.res.Configuration: java.util.Locale locale>;

        $r57 = virtualinvoke $r54.<java.util.Locale: java.lang.String getCountry()>();

        if $r57 == null goto label16;

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r50 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r53 = r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $r52 = $r53.<android.content.res.Configuration: java.util.Locale locale>;

        $r61 = virtualinvoke $r52.<java.util.Locale: java.lang.String getCountry()>();

        $r60 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        r9 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

     label16:
        $r20 = r0.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        $i6 = $r20.<android.util.DisplayMetrics: int widthPixels>;

        $r23 = r0.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        $i7 = $r23.<android.util.DisplayMetrics: int heightPixels>;

        if $i6 < $i7 goto label26;

        $r49 = r0.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        i2 = $r49.<android.util.DisplayMetrics: int widthPixels>;

        $r44 = r0.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        i3 = $r44.<android.util.DisplayMetrics: int heightPixels>;

     label17:
        $r27 = r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        i4 = $r27.<android.content.res.Configuration: int keyboardHidden>;

     label18:
        if i4 != 1 goto label21;

     label19:
        $r48 = r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $i21 = $r48.<android.content.res.Configuration: int hardKeyboardHidden>;

        if $i21 != 2 goto label21;

     label20:
        i4 = 3;

     label21:
        $r38 = r0.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        $r24 = r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $i18 = $r24.<android.content.res.Configuration: int mcc>;

        $r25 = r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $i19 = $r25.<android.content.res.Configuration: int mnc>;

        $r30 = r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $i20 = $r30.<android.content.res.Configuration: int orientation>;

        $r31 = r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $i14 = $r31.<android.content.res.Configuration: int touchscreen>;

        $r28 = r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $i15 = $r28.<android.content.res.Configuration: int densityDpi>;

        $r29 = r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $i16 = $r29.<android.content.res.Configuration: int keyboard>;

        $r34 = r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $i17 = $r34.<android.content.res.Configuration: int navigation>;

        $r35 = r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $i10 = $r35.<android.content.res.Configuration: int smallestScreenWidthDp>;

        $r32 = r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $i11 = $r32.<android.content.res.Configuration: int screenWidthDp>;

        $r33 = r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $i12 = $r33.<android.content.res.Configuration: int screenHeightDp>;

        $r37 = r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $i13 = $r37.<android.content.res.Configuration: int screenLayout>;

        $r36 = r0.<android.content.res.Resources: android.content.res.Configuration mConfiguration>;

        $i8 = $r36.<android.content.res.Configuration: int uiMode>;

        $i9 = <android.os.Build$VERSION: int RESOURCES_SDK_INT>;

        virtualinvoke $r38.<android.content.res.AssetManager: void setConfiguration(int,int,java.lang.String,int,int,int,int,int,int,int,int,int,int,int,int,int,int)>($i18, $i19, r9, $i20, $i14, $i15, $i16, i4, $i17, i2, i3, $i10, $i11, $i12, $i13, $i8, $i9);

        $r41 = r0.<android.content.res.Resources: android.util.LongSparseArray mDrawableCache>;

        specialinvoke r0.<android.content.res.Resources: void clearDrawableCacheLocked(android.util.LongSparseArray,int)>($r41, i0);

        $r42 = r0.<android.content.res.Resources: android.util.LongSparseArray mColorDrawableCache>;

        specialinvoke r0.<android.content.res.Resources: void clearDrawableCacheLocked(android.util.LongSparseArray,int)>($r42, i0);

        $r43 = r0.<android.content.res.Resources: android.util.LongSparseArray mColorStateListCache>;

        virtualinvoke $r43.<android.util.LongSparseArray: void clear()>();

        virtualinvoke r0.<android.content.res.Resources: void flushLayoutCache()>();

        exitmonitor r4;

     label22:
        r10 = <android.content.res.Resources: java.lang.Object sSync>;

        entermonitor r10;

     label23:
        $r39 = r0.<android.content.res.Resources: libcore.icu.NativePluralRules mPluralRule>;

        if $r39 == null goto label24;

        $r40 = r1.<android.content.res.Configuration: java.util.Locale locale>;

        $r47 = staticinvoke <libcore.icu.NativePluralRules: libcore.icu.NativePluralRules forLocale(java.util.Locale)>($r40);

        r0.<android.content.res.Resources: libcore.icu.NativePluralRules mPluralRule> = $r47;

     label24:
        exitmonitor r10;

     label25:
        return;

     label26:
        $r22 = r0.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        i2 = $r22.<android.util.DisplayMetrics: int heightPixels>;

        $r26 = r0.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        i3 = $r26.<android.util.DisplayMetrics: int widthPixels>;

     label27:
        goto label17;

     label28:
        $r82 := @caughtexception;

        r5 = $r82;

     label29:
        exitmonitor r4;

     label30:
        throw r5;

     label31:
        $r75 := @caughtexception;

        r11 = $r75;

     label32:
        exitmonitor r10;

     label33:
        throw r11;

        catch java.lang.Throwable from label01 to label02 with label28;
        catch java.lang.Throwable from label03 to label04 with label28;
        catch java.lang.Throwable from label04 to label05 with label28;
        catch java.lang.Throwable from label06 to label07 with label28;
        catch java.lang.Throwable from label08 to label09 with label28;
        catch java.lang.Throwable from label09 to label10 with label28;
        catch java.lang.Throwable from label10 to label11 with label28;
        catch java.lang.Throwable from label11 to label12 with label28;
        catch java.lang.Throwable from label12 to label13 with label28;
        catch java.lang.Throwable from label13 to label14 with label28;
        catch java.lang.Throwable from label15 to label16 with label28;
        catch java.lang.Throwable from label16 to label17 with label28;
        catch java.lang.Throwable from label17 to label18 with label28;
        catch java.lang.Throwable from label19 to label20 with label28;
        catch java.lang.Throwable from label21 to label22 with label28;
        catch java.lang.Throwable from label23 to label24 with label31;
        catch java.lang.Throwable from label24 to label25 with label31;
        catch java.lang.Throwable from label26 to label27 with label28;
        catch java.lang.Throwable from label29 to label30 with label28;
        catch java.lang.Throwable from label32 to label33 with label31;
    }
}
