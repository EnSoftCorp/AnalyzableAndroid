public class com.android.org.conscrypt.PRF extends java.lang.Object
{
    private static com.android.org.conscrypt.Logger$Stream logger;
    protected static java.security.MessageDigest md5;
    private static javax.crypto.Mac md5_mac;
    private static int md5_mac_length;
    protected static java.security.MessageDigest sha;
    private static javax.crypto.Mac sha_mac;
    private static int sha_mac_length;

    static void <clinit>()
    {
        com.android.org.conscrypt.Logger$Stream $r0;

        $r0 = staticinvoke <com.android.org.conscrypt.Logger: com.android.org.conscrypt.Logger$Stream getStream(java.lang.String)>("prf");

        <com.android.org.conscrypt.PRF: com.android.org.conscrypt.Logger$Stream logger> = $r0;

        return;
    }

    public void <init>()
    {
        com.android.org.conscrypt.PRF r0;

        r0 := @this: com.android.org.conscrypt.PRF;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void computePRF(byte[], byte[], byte[], byte[]) throws java.security.GeneralSecurityException
    {
        byte[] r0, r1, r2, r3, r7, r8, r9, $r33, $r62, $r66;
        java.lang.Throwable r4, $r64;
        javax.crypto.spec.SecretKeySpec r5, r6, $r11, $r12, $r63, $r65;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i17, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30;
        boolean z0, z1, $z2;
        javax.crypto.Mac $r10, $r13, $r15, $r16, $r17, $r19, $r20, $r24, $r25, $r26, $r27, $r30, $r31, $r32, $r34, $r35, $r38;
        com.android.org.conscrypt.Logger$Stream $r14, $r18, $r21, $r22, $r23, $r28, $r29, $r37, $r40, $r42, $r46, $r48, $r53, $r55, $r56, $r60, $r61;
        byte $b14, $b15, $b16, $b18;
        java.lang.StringBuilder $r36, $r41, $r43, $r44, $r45, $r49, $r50, $r51, $r52, $r57, $r58, $r59;
        java.lang.String $r39, $r47, $r54;

        r0 := @parameter0: byte[];

        r1 := @parameter1: byte[];

        r2 := @parameter2: byte[];

        r3 := @parameter3: byte[];

        entermonitor class "com/android/org/conscrypt/PRF";

     label01:
        $r10 = <com.android.org.conscrypt.PRF: javax.crypto.Mac sha_mac>;

        if $r10 != null goto label02;

        staticinvoke <com.android.org.conscrypt.PRF: void init()>();

     label02:
        if r1 == null goto label04;

     label03:
        $i29 = lengthof r1;

        if $i29 != 0 goto label11;

     label04:
        r1 = newarray (byte)[8];

        $r12 = new javax.crypto.spec.SecretKeySpec;

        specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, "HmacMD5");

        r5 = $r12;

        $r11 = new javax.crypto.spec.SecretKeySpec;

        specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, "HmacSHA1");

        r6 = $r11;

     label05:
        $r14 = <com.android.org.conscrypt.PRF: com.android.org.conscrypt.Logger$Stream logger>;

        if $r14 == null goto label06;

        $r37 = <com.android.org.conscrypt.PRF: com.android.org.conscrypt.Logger$Stream logger>;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("secret[");

        $i25 = lengthof r1;

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i25);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r39 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r37.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>($r39);

        $r40 = <com.android.org.conscrypt.PRF: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r40.<com.android.org.conscrypt.Logger$Stream: void printAsHex(int,java.lang.String,java.lang.String,byte[])>(16, "", " ", r1);

        $r42 = <com.android.org.conscrypt.PRF: com.android.org.conscrypt.Logger$Stream logger>;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("label[");

        $i26 = lengthof r2;

        $r52 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i26);

        $r51 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r47 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r42.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>($r47);

        $r46 = <com.android.org.conscrypt.PRF: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r46.<com.android.org.conscrypt.Logger$Stream: void printAsHex(int,java.lang.String,java.lang.String,byte[])>(16, "", " ", r2);

        $r48 = <com.android.org.conscrypt.PRF: com.android.org.conscrypt.Logger$Stream logger>;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("seed[");

        $i27 = lengthof r3;

        $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i27);

        $r58 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r54 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r48.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>($r54);

        $r53 = <com.android.org.conscrypt.PRF: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r53.<com.android.org.conscrypt.Logger$Stream: void printAsHex(int,java.lang.String,java.lang.String,byte[])>(16, "", " ", r3);

        $r56 = <com.android.org.conscrypt.PRF: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r56.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>("MD5 key:");

        $r55 = <com.android.org.conscrypt.PRF: com.android.org.conscrypt.Logger$Stream logger>;

        $r62 = virtualinvoke r5.<javax.crypto.spec.SecretKeySpec: byte[] getEncoded()>();

        virtualinvoke $r55.<com.android.org.conscrypt.Logger$Stream: void printAsHex(int,java.lang.String,java.lang.String,byte[])>(16, "", " ", $r62);

        $r60 = <com.android.org.conscrypt.PRF: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r60.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>("SHA1 key:");

        $r61 = <com.android.org.conscrypt.PRF: com.android.org.conscrypt.Logger$Stream logger>;

        $r66 = virtualinvoke r6.<javax.crypto.spec.SecretKeySpec: byte[] getEncoded()>();

        virtualinvoke $r61.<com.android.org.conscrypt.Logger$Stream: void printAsHex(int,java.lang.String,java.lang.String,byte[])>(16, "", " ", $r66);

     label06:
        $r13 = <com.android.org.conscrypt.PRF: javax.crypto.Mac md5_mac>;

        virtualinvoke $r13.<javax.crypto.Mac: void init(java.security.Key)>(r5);

        $r16 = <com.android.org.conscrypt.PRF: javax.crypto.Mac sha_mac>;

        virtualinvoke $r16.<javax.crypto.Mac: void init(java.security.Key)>(r6);

     label07:
        i0 = 0;

     label08:
        $r15 = <com.android.org.conscrypt.PRF: javax.crypto.Mac md5_mac>;

        virtualinvoke $r15.<javax.crypto.Mac: void update(byte[])>(r2);

        $r17 = <com.android.org.conscrypt.PRF: javax.crypto.Mac md5_mac>;

        r7 = virtualinvoke $r17.<javax.crypto.Mac: byte[] doFinal(byte[])>(r3);

     label09:
        $i9 = lengthof r0;

        if i0 >= $i9 goto label18;

        $r32 = <com.android.org.conscrypt.PRF: javax.crypto.Mac md5_mac>;

        virtualinvoke $r32.<javax.crypto.Mac: void update(byte[])>(r7);

        $r31 = <com.android.org.conscrypt.PRF: javax.crypto.Mac md5_mac>;

        virtualinvoke $r31.<javax.crypto.Mac: void update(byte[])>(r2);

        $r30 = <com.android.org.conscrypt.PRF: javax.crypto.Mac md5_mac>;

        virtualinvoke $r30.<javax.crypto.Mac: void update(byte[])>(r3);

        $i19 = <com.android.org.conscrypt.PRF: int md5_mac_length>;

        $i20 = i0 + $i19;

        $i21 = lengthof r0;

        if $i20 >= $i21 goto label17;

        $r38 = <com.android.org.conscrypt.PRF: javax.crypto.Mac md5_mac>;

        virtualinvoke $r38.<javax.crypto.Mac: void doFinal(byte[],int)>(r0, i0);

        $i24 = <com.android.org.conscrypt.PRF: int md5_mac_length>;

        i0 = i0 + $i24;

        $r35 = <com.android.org.conscrypt.PRF: javax.crypto.Mac md5_mac>;

        r7 = virtualinvoke $r35.<javax.crypto.Mac: byte[] doFinal(byte[])>(r7);

     label10:
        goto label09;

     label11:
        $i30 = lengthof r1;

        i4 = $i30 >> 1;

        $i28 = lengthof r1;

        i7 = 1 & $i28;

     label12:
        i6 = i4 + i7;

     label13:
        $r65 = new javax.crypto.spec.SecretKeySpec;

        specialinvoke $r65.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>(r1, 0, i6, "HmacMD5");

        r5 = $r65;

     label14:
        i8 = i4 + i7;

     label15:
        $r63 = new javax.crypto.spec.SecretKeySpec;

        specialinvoke $r63.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>(r1, i4, i8, "HmacSHA1");

        r6 = $r63;

     label16:
        goto label05;

     label17:
        $r34 = <com.android.org.conscrypt.PRF: javax.crypto.Mac md5_mac>;

        $r33 = virtualinvoke $r34.<javax.crypto.Mac: byte[] doFinal()>();

        $i22 = lengthof r0;

        $i23 = $i22 - i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r33, 0, r0, i0, $i23);

     label18:
        $r18 = <com.android.org.conscrypt.PRF: com.android.org.conscrypt.Logger$Stream logger>;

        if $r18 == null goto label19;

        $r29 = <com.android.org.conscrypt.PRF: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r29.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>("P_MD5:");

        $r28 = <com.android.org.conscrypt.PRF: com.android.org.conscrypt.Logger$Stream logger>;

        $i17 = <com.android.org.conscrypt.PRF: int md5_mac_length>;

        virtualinvoke $r28.<com.android.org.conscrypt.Logger$Stream: void printAsHex(int,java.lang.String,java.lang.String,byte[])>($i17, "", " ", r0);

     label19:
        i1 = 0;

     label20:
        $r19 = <com.android.org.conscrypt.PRF: javax.crypto.Mac sha_mac>;

        virtualinvoke $r19.<javax.crypto.Mac: void update(byte[])>(r2);

        $r20 = <com.android.org.conscrypt.PRF: javax.crypto.Mac sha_mac>;

        r8 = virtualinvoke $r20.<javax.crypto.Mac: byte[] doFinal(byte[])>(r3);

     label21:
        $i10 = lengthof r0;

        if i1 >= $i10 goto label32;

        $r25 = <com.android.org.conscrypt.PRF: javax.crypto.Mac sha_mac>;

        virtualinvoke $r25.<javax.crypto.Mac: void update(byte[])>(r8);

        $r26 = <com.android.org.conscrypt.PRF: javax.crypto.Mac sha_mac>;

        virtualinvoke $r26.<javax.crypto.Mac: void update(byte[])>(r2);

        $r24 = <com.android.org.conscrypt.PRF: javax.crypto.Mac sha_mac>;

        r9 = virtualinvoke $r24.<javax.crypto.Mac: byte[] doFinal(byte[])>(r3);

     label22:
        i2 = 0;

        i3 = i1;

     label23:
        $i12 = <com.android.org.conscrypt.PRF: int sha_mac_length>;

        if i2 >= $i12 goto label35;

     label24:
        z0 = 1;

     label25:
        $i13 = lengthof r0;

        if i3 >= $i13 goto label36;

     label26:
        z1 = 1;

     label27:
        $z2 = z1 & z0;

        if $z2 == 0 goto label30;

        i5 = i3 + 1;

     label28:
        $b15 = r0[i3];

        $b16 = r9[i2];

        $b14 = $b15 ^ $b16;

        $b18 = (byte) $b14;

        r0[i3] = $b18;

     label29:
        i2 = i2 + 1;

        i3 = i5;

        goto label23;

     label30:
        $r27 = <com.android.org.conscrypt.PRF: javax.crypto.Mac sha_mac>;

        r8 = virtualinvoke $r27.<javax.crypto.Mac: byte[] doFinal(byte[])>(r8);

     label31:
        i1 = i3;

        goto label21;

     label32:
        $r22 = <com.android.org.conscrypt.PRF: com.android.org.conscrypt.Logger$Stream logger>;

        if $r22 == null goto label33;

        $r23 = <com.android.org.conscrypt.PRF: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r23.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>("PRF:");

        $r21 = <com.android.org.conscrypt.PRF: com.android.org.conscrypt.Logger$Stream logger>;

        $i11 = <com.android.org.conscrypt.PRF: int sha_mac_length>;

        virtualinvoke $r21.<com.android.org.conscrypt.Logger$Stream: void printAsHex(int,java.lang.String,java.lang.String,byte[])>($i11, "", " ", r0);

     label33:
        exitmonitor class "com/android/org/conscrypt/PRF";

        return;

     label34:
        $r64 := @caughtexception;

        r4 = $r64;

        exitmonitor class "com/android/org/conscrypt/PRF";

        throw r4;

     label35:
        z0 = 0;

        goto label25;

     label36:
        z1 = 0;

        goto label27;

        catch java.lang.Throwable from label01 to label02 with label34;
        catch java.lang.Throwable from label03 to label04 with label34;
        catch java.lang.Throwable from label04 to label05 with label34;
        catch java.lang.Throwable from label05 to label06 with label34;
        catch java.lang.Throwable from label06 to label07 with label34;
        catch java.lang.Throwable from label08 to label09 with label34;
        catch java.lang.Throwable from label09 to label10 with label34;
        catch java.lang.Throwable from label11 to label12 with label34;
        catch java.lang.Throwable from label13 to label14 with label34;
        catch java.lang.Throwable from label15 to label16 with label34;
        catch java.lang.Throwable from label17 to label18 with label34;
        catch java.lang.Throwable from label18 to label19 with label34;
        catch java.lang.Throwable from label20 to label21 with label34;
        catch java.lang.Throwable from label21 to label22 with label34;
        catch java.lang.Throwable from label23 to label24 with label34;
        catch java.lang.Throwable from label25 to label26 with label34;
        catch java.lang.Throwable from label28 to label29 with label34;
        catch java.lang.Throwable from label30 to label31 with label34;
        catch java.lang.Throwable from label32 to label33 with label34;
    }

    static void computePRF_SSLv3(byte[], byte[], byte[])
    {
        byte[] r0, r1, r2, r4, r5, $r12;
        java.lang.Throwable r3, $r15;
        int i0, i1, i2, $i3, $i4, $i6, $i7, $i8, $i9;
        java.security.MessageDigest $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r14;
        byte $b5;

        r0 := @parameter0: byte[];

        r1 := @parameter1: byte[];

        r2 := @parameter2: byte[];

        entermonitor class "com/android/org/conscrypt/PRF";

     label01:
        $r6 = <com.android.org.conscrypt.PRF: java.security.MessageDigest sha>;

        if $r6 != null goto label11;

        staticinvoke <com.android.org.conscrypt.PRF: void init()>();

     label02:
        goto label11;

     label03:
        $i3 = lengthof r0;

        if i1 >= $i3 goto label09;

        r4 = newarray (byte)[i0];

     label04:
        i2 = i0 + 1;

     label05:
        $i4 = i0 + 64;

        $b5 = (byte) $i4;

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>(r4, $b5);

        $r7 = <com.android.org.conscrypt.PRF: java.security.MessageDigest sha>;

        virtualinvoke $r7.<java.security.MessageDigest: void update(byte[])>(r4);

        $r8 = <com.android.org.conscrypt.PRF: java.security.MessageDigest sha>;

        virtualinvoke $r8.<java.security.MessageDigest: void update(byte[])>(r1);

        $r9 = <com.android.org.conscrypt.PRF: java.security.MessageDigest sha>;

        virtualinvoke $r9.<java.security.MessageDigest: void update(byte[])>(r2);

        $r11 = <com.android.org.conscrypt.PRF: java.security.MessageDigest md5>;

        virtualinvoke $r11.<java.security.MessageDigest: void update(byte[])>(r1);

        $r13 = <com.android.org.conscrypt.PRF: java.security.MessageDigest md5>;

        $r10 = <com.android.org.conscrypt.PRF: java.security.MessageDigest sha>;

        $r12 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest()>();

        virtualinvoke $r13.<java.security.MessageDigest: void update(byte[])>($r12);

        $r14 = <com.android.org.conscrypt.PRF: java.security.MessageDigest md5>;

        r5 = virtualinvoke $r14.<java.security.MessageDigest: byte[] digest()>();

        $i6 = i1 + 16;

        $i7 = lengthof r0;

        if $i6 <= $i7 goto label07;

        $i9 = lengthof r0;

        $i8 = $i9 - i1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r5, 0, r0, i1, $i8);

        i1 = lengthof r0;

     label06:
        goto label12;

     label07:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r5, 0, r0, i1, 16);

     label08:
        i1 = i1 + 16;

        goto label12;

     label09:
        exitmonitor class "com/android/org/conscrypt/PRF";

        return;

     label10:
        $r15 := @caughtexception;

        r3 = $r15;

        exitmonitor class "com/android/org/conscrypt/PRF";

        throw r3;

     label11:
        i0 = 1;

        i1 = 0;

        goto label03;

     label12:
        i0 = i2;

        goto label03;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
    }

    private static void init()
    {
        javax.crypto.Mac $r2, $r3, $r4, $r5;
        int $i0, $i1;
        java.security.MessageDigest $r6, $r7;
        java.lang.Exception $r8;
        com.android.org.conscrypt.AlertException $r9, $r12;
        javax.net.ssl.SSLException $r10, $r13;
        java.security.NoSuchAlgorithmException $r11;

     label1:
        $r2 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>("HmacMD5");

        <com.android.org.conscrypt.PRF: javax.crypto.Mac md5_mac> = $r2;

        $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>("HmacSHA1");

        <com.android.org.conscrypt.PRF: javax.crypto.Mac sha_mac> = $r3;

     label2:
        $r4 = <com.android.org.conscrypt.PRF: javax.crypto.Mac md5_mac>;

        $i0 = virtualinvoke $r4.<javax.crypto.Mac: int getMacLength()>();

        <com.android.org.conscrypt.PRF: int md5_mac_length> = $i0;

        $r5 = <com.android.org.conscrypt.PRF: javax.crypto.Mac sha_mac>;

        $i1 = virtualinvoke $r5.<javax.crypto.Mac: int getMacLength()>();

        <com.android.org.conscrypt.PRF: int sha_mac_length> = $i1;

     label3:
        $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        <com.android.org.conscrypt.PRF: java.security.MessageDigest md5> = $r6;

        $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-1");

        <com.android.org.conscrypt.PRF: java.security.MessageDigest sha> = $r7;

     label4:
        return;

     label5:
        $r11 := @caughtexception;

        $r12 = new com.android.org.conscrypt.AlertException;

        $r13 = new javax.net.ssl.SSLException;

        specialinvoke $r13.<javax.net.ssl.SSLException: void <init>(java.lang.String)>("There is no provider of HmacSHA1 or HmacMD5 algorithms installed in the system");

        specialinvoke $r12.<com.android.org.conscrypt.AlertException: void <init>(byte,javax.net.ssl.SSLException)>(80, $r13);

        throw $r12;

     label6:
        $r8 := @caughtexception;

        $r9 = new com.android.org.conscrypt.AlertException;

        $r10 = new javax.net.ssl.SSLException;

        specialinvoke $r10.<javax.net.ssl.SSLException: void <init>(java.lang.String)>("Could not initialize the Digest Algorithms.");

        specialinvoke $r9.<com.android.org.conscrypt.AlertException: void <init>(byte,javax.net.ssl.SSLException)>(80, $r10);

        throw $r9;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label6;
    }
}
