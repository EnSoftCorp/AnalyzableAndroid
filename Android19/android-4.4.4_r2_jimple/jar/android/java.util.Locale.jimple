public final class java.util.Locale extends java.lang.Object implements java.lang.Cloneable, java.io.Serializable
{
    public static final java.util.Locale CANADA;
    public static final java.util.Locale CANADA_FRENCH;
    public static final java.util.Locale CHINA;
    public static final java.util.Locale CHINESE;
    public static final java.util.Locale ENGLISH;
    public static final java.util.Locale FRANCE;
    public static final java.util.Locale FRENCH;
    public static final java.util.Locale GERMAN;
    public static final java.util.Locale GERMANY;
    public static final java.util.Locale ITALIAN;
    public static final java.util.Locale ITALY;
    public static final java.util.Locale JAPAN;
    public static final java.util.Locale JAPANESE;
    public static final java.util.Locale KOREA;
    public static final java.util.Locale KOREAN;
    public static final java.util.Locale PRC;
    public static final java.util.Locale ROOT;
    public static final java.util.Locale SIMPLIFIED_CHINESE;
    public static final java.util.Locale TAIWAN;
    public static final java.util.Locale TRADITIONAL_CHINESE;
    public static final java.util.Locale UK;
    public static final java.util.Locale US;
    private static java.util.Locale defaultLocale;
    private static final java.io.ObjectStreamField[] serialPersistentFields;
    private static final long serialVersionUID;
    private transient java.lang.String cachedToStringResult;
    private transient java.lang.String countryCode;
    private transient java.lang.String languageCode;
    private transient java.lang.String variantCode;

    static void <clinit>()
    {
        java.io.ObjectStreamField[] r0;
        java.util.Locale $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r25;
        java.lang.String $r24, $r26, $r27;
        java.io.ObjectStreamField $r28, $r30, $r31, $r32;
        java.lang.Class $r29;

        <java.util.Locale: long serialVersionUID> = 9149081749638150636L;

        $r1 = new java.util.Locale;

        specialinvoke $r1.<java.util.Locale: void <init>(boolean,java.lang.String,java.lang.String)>(1, "en", "CA");

        <java.util.Locale: java.util.Locale CANADA> = $r1;

        $r2 = new java.util.Locale;

        specialinvoke $r2.<java.util.Locale: void <init>(boolean,java.lang.String,java.lang.String)>(1, "fr", "CA");

        <java.util.Locale: java.util.Locale CANADA_FRENCH> = $r2;

        $r3 = new java.util.Locale;

        specialinvoke $r3.<java.util.Locale: void <init>(boolean,java.lang.String,java.lang.String)>(1, "zh", "CN");

        <java.util.Locale: java.util.Locale CHINA> = $r3;

        $r4 = new java.util.Locale;

        specialinvoke $r4.<java.util.Locale: void <init>(boolean,java.lang.String,java.lang.String)>(1, "zh", "");

        <java.util.Locale: java.util.Locale CHINESE> = $r4;

        $r5 = new java.util.Locale;

        specialinvoke $r5.<java.util.Locale: void <init>(boolean,java.lang.String,java.lang.String)>(1, "en", "");

        <java.util.Locale: java.util.Locale ENGLISH> = $r5;

        $r6 = new java.util.Locale;

        specialinvoke $r6.<java.util.Locale: void <init>(boolean,java.lang.String,java.lang.String)>(1, "fr", "FR");

        <java.util.Locale: java.util.Locale FRANCE> = $r6;

        $r7 = new java.util.Locale;

        specialinvoke $r7.<java.util.Locale: void <init>(boolean,java.lang.String,java.lang.String)>(1, "fr", "");

        <java.util.Locale: java.util.Locale FRENCH> = $r7;

        $r8 = new java.util.Locale;

        specialinvoke $r8.<java.util.Locale: void <init>(boolean,java.lang.String,java.lang.String)>(1, "de", "");

        <java.util.Locale: java.util.Locale GERMAN> = $r8;

        $r9 = new java.util.Locale;

        specialinvoke $r9.<java.util.Locale: void <init>(boolean,java.lang.String,java.lang.String)>(1, "de", "DE");

        <java.util.Locale: java.util.Locale GERMANY> = $r9;

        $r10 = new java.util.Locale;

        specialinvoke $r10.<java.util.Locale: void <init>(boolean,java.lang.String,java.lang.String)>(1, "it", "");

        <java.util.Locale: java.util.Locale ITALIAN> = $r10;

        $r11 = new java.util.Locale;

        specialinvoke $r11.<java.util.Locale: void <init>(boolean,java.lang.String,java.lang.String)>(1, "it", "IT");

        <java.util.Locale: java.util.Locale ITALY> = $r11;

        $r12 = new java.util.Locale;

        specialinvoke $r12.<java.util.Locale: void <init>(boolean,java.lang.String,java.lang.String)>(1, "ja", "JP");

        <java.util.Locale: java.util.Locale JAPAN> = $r12;

        $r13 = new java.util.Locale;

        specialinvoke $r13.<java.util.Locale: void <init>(boolean,java.lang.String,java.lang.String)>(1, "ja", "");

        <java.util.Locale: java.util.Locale JAPANESE> = $r13;

        $r14 = new java.util.Locale;

        specialinvoke $r14.<java.util.Locale: void <init>(boolean,java.lang.String,java.lang.String)>(1, "ko", "KR");

        <java.util.Locale: java.util.Locale KOREA> = $r14;

        $r15 = new java.util.Locale;

        specialinvoke $r15.<java.util.Locale: void <init>(boolean,java.lang.String,java.lang.String)>(1, "ko", "");

        <java.util.Locale: java.util.Locale KOREAN> = $r15;

        $r17 = new java.util.Locale;

        specialinvoke $r17.<java.util.Locale: void <init>(boolean,java.lang.String,java.lang.String)>(1, "zh", "CN");

        <java.util.Locale: java.util.Locale PRC> = $r17;

        $r16 = new java.util.Locale;

        specialinvoke $r16.<java.util.Locale: void <init>(boolean,java.lang.String,java.lang.String)>(1, "", "");

        <java.util.Locale: java.util.Locale ROOT> = $r16;

        $r19 = new java.util.Locale;

        specialinvoke $r19.<java.util.Locale: void <init>(boolean,java.lang.String,java.lang.String)>(1, "zh", "CN");

        <java.util.Locale: java.util.Locale SIMPLIFIED_CHINESE> = $r19;

        $r18 = new java.util.Locale;

        specialinvoke $r18.<java.util.Locale: void <init>(boolean,java.lang.String,java.lang.String)>(1, "zh", "TW");

        <java.util.Locale: java.util.Locale TAIWAN> = $r18;

        $r21 = new java.util.Locale;

        specialinvoke $r21.<java.util.Locale: void <init>(boolean,java.lang.String,java.lang.String)>(1, "zh", "TW");

        <java.util.Locale: java.util.Locale TRADITIONAL_CHINESE> = $r21;

        $r20 = new java.util.Locale;

        specialinvoke $r20.<java.util.Locale: void <init>(boolean,java.lang.String,java.lang.String)>(1, "en", "GB");

        <java.util.Locale: java.util.Locale UK> = $r20;

        $r23 = new java.util.Locale;

        specialinvoke $r23.<java.util.Locale: void <init>(boolean,java.lang.String,java.lang.String)>(1, "en", "US");

        <java.util.Locale: java.util.Locale US> = $r23;

        $r22 = <java.util.Locale: java.util.Locale US>;

        <java.util.Locale: java.util.Locale defaultLocale> = $r22;

        $r25 = new java.util.Locale;

        $r24 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("user.language", "en");

        $r27 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("user.region", "US");

        $r26 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("user.variant", "");

        specialinvoke $r25.<java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r24, $r27, $r26);

        <java.util.Locale: java.util.Locale defaultLocale> = $r25;

        r0 = newarray (java.io.ObjectStreamField)[4];

        $r28 = new java.io.ObjectStreamField;

        specialinvoke $r28.<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>("country", class "java/lang/String");

        r0[0] = $r28;

        $r30 = new java.io.ObjectStreamField;

        $r29 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r30.<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>("hashcode", $r29);

        r0[1] = $r30;

        $r32 = new java.io.ObjectStreamField;

        specialinvoke $r32.<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>("language", class "java/lang/String");

        r0[2] = $r32;

        $r31 = new java.io.ObjectStreamField;

        specialinvoke $r31.<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>("variant", class "java/lang/String");

        r0[3] = $r31;

        <java.util.Locale: java.io.ObjectStreamField[] serialPersistentFields> = r0;

        return;
    }

    public void <init>(java.lang.String)
    {
        java.util.Locale r0;
        java.lang.String r1;

        r0 := @this: java.util.Locale;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r1, "", "");

        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        java.util.Locale r0;
        java.lang.String r1, r2;

        r0 := @this: java.util.Locale;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, "");

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String)
    {
        java.util.Locale r0, $r13, $r19;
        java.lang.String r1, r2, r3, $r12, $r14, $r15, $r16, $r17, $r18;
        java.lang.NullPointerException $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: java.util.Locale;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 == null goto label1;

        if r2 == null goto label1;

        if r3 != null goto label2;

     label1:
        $r4 = new java.lang.NullPointerException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("language=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",country=");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",variant=");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>($r12);

        throw $r4;

     label2:
        $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        $z4 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>();

        if $z4 == 0 goto label3;

        r0.<java.util.Locale: java.lang.String languageCode> = "";

        r0.<java.util.Locale: java.lang.String countryCode> = "";

        r0.<java.util.Locale: java.lang.String variantCode> = r3;

        return;

     label3:
        $r13 = <java.util.Locale: java.util.Locale US>;

        $r14 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r13);

        r0.<java.util.Locale: java.lang.String languageCode> = $r14;

        $r15 = r0.<java.util.Locale: java.lang.String languageCode>;

        $z1 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>("he");

        if $z1 == 0 goto label5;

        r0.<java.util.Locale: java.lang.String languageCode> = "iw";

     label4:
        $r19 = <java.util.Locale: java.util.Locale US>;

        $r18 = virtualinvoke r2.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r19);

        r0.<java.util.Locale: java.lang.String countryCode> = $r18;

        r0.<java.util.Locale: java.lang.String variantCode> = r3;

        return;

     label5:
        $r16 = r0.<java.util.Locale: java.lang.String languageCode>;

        $z2 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>("id");

        if $z2 == 0 goto label6;

        r0.<java.util.Locale: java.lang.String languageCode> = "in";

        goto label4;

     label6:
        $r17 = r0.<java.util.Locale: java.lang.String languageCode>;

        $z3 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>("yi");

        if $z3 == 0 goto label4;

        r0.<java.util.Locale: java.lang.String languageCode> = "ji";

        goto label4;
    }

    private void <init>(boolean, java.lang.String, java.lang.String)
    {
        java.util.Locale r0;
        boolean z0;
        java.lang.String r1, r2;

        r0 := @this: java.util.Locale;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.util.Locale: java.lang.String languageCode> = r1;

        r0.<java.util.Locale: java.lang.String countryCode> = r2;

        r0.<java.util.Locale: java.lang.String variantCode> = "";

        return;
    }

    public static java.util.Locale[] getAvailableLocales()
    {
        java.util.Locale[] $r0;

        $r0 = staticinvoke <libcore.icu.ICU: java.util.Locale[] getAvailableLocales()>();

        return $r0;
    }

    public static java.util.Locale getDefault()
    {
        java.util.Locale $r0;

        $r0 = <java.util.Locale: java.util.Locale defaultLocale>;

        return $r0;
    }

    public static java.lang.String[] getISOCountries()
    {
        java.lang.String[] $r0;

        $r0 = staticinvoke <libcore.icu.ICU: java.lang.String[] getISOCountries()>();

        return $r0;
    }

    public static java.lang.String[] getISOLanguages()
    {
        java.lang.String[] $r0;

        $r0 = staticinvoke <libcore.icu.ICU: java.lang.String[] getISOLanguages()>();

        return $r0;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.util.Locale r0;
        java.io.ObjectInputStream r1;
        java.io.ObjectInputStream$GetField r2;
        java.lang.Object $r3, $r5, $r7;
        java.lang.String $r4, $r6, $r8;

        r0 := @this: java.util.Locale;

        r1 := @parameter0: java.io.ObjectInputStream;

        r2 = virtualinvoke r1.<java.io.ObjectInputStream: java.io.ObjectInputStream$GetField readFields()>();

        $r3 = virtualinvoke r2.<java.io.ObjectInputStream$GetField: java.lang.Object get(java.lang.String,java.lang.Object)>("country", "");

        $r4 = (java.lang.String) $r3;

        r0.<java.util.Locale: java.lang.String countryCode> = $r4;

        $r5 = virtualinvoke r2.<java.io.ObjectInputStream$GetField: java.lang.Object get(java.lang.String,java.lang.Object)>("language", "");

        $r6 = (java.lang.String) $r5;

        r0.<java.util.Locale: java.lang.String languageCode> = $r6;

        $r7 = virtualinvoke r2.<java.io.ObjectInputStream$GetField: java.lang.Object get(java.lang.String,java.lang.Object)>("variant", "");

        $r8 = (java.lang.String) $r7;

        r0.<java.util.Locale: java.lang.String variantCode> = $r8;

        return;
    }

    public static void setDefault(java.util.Locale)
    {
        java.util.Locale r0;
        java.lang.Throwable r1, $r3;
        java.lang.NullPointerException $r2;

        r0 := @parameter0: java.util.Locale;

        entermonitor class "java/util/Locale";

        if r0 != null goto label3;

     label1:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("locale == null");

        throw $r2;

     label2:
        $r3 := @caughtexception;

        r1 = $r3;

        exitmonitor class "java/util/Locale";

        throw r1;

     label3:
        <java.util.Locale: java.util.Locale defaultLocale> = r0;

     label4:
        exitmonitor class "java/util/Locale";

        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    private static java.lang.String toNewString(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2, $r9;
        java.lang.StringBuilder r3, $r4;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        $i4 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i4 != 0 goto label1;

        return "";

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>(11);

        r3 = $r4;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i1 > 0 goto label2;

        $i3 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i3 <= 0 goto label3;

     label2:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(95);

     label3:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $i2 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i2 <= 0 goto label4;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(95);

     label4:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.util.Locale r0;
        java.io.ObjectOutputStream r1;
        java.io.ObjectOutputStream$PutField r2;
        java.lang.String $r3, $r4, $r5;

        r0 := @this: java.util.Locale;

        r1 := @parameter0: java.io.ObjectOutputStream;

        r2 = virtualinvoke r1.<java.io.ObjectOutputStream: java.io.ObjectOutputStream$PutField putFields()>();

        $r3 = r0.<java.util.Locale: java.lang.String countryCode>;

        virtualinvoke r2.<java.io.ObjectOutputStream$PutField: void put(java.lang.String,java.lang.Object)>("country", $r3);

        virtualinvoke r2.<java.io.ObjectOutputStream$PutField: void put(java.lang.String,int)>("hashcode", -1);

        $r4 = r0.<java.util.Locale: java.lang.String languageCode>;

        virtualinvoke r2.<java.io.ObjectOutputStream$PutField: void put(java.lang.String,java.lang.Object)>("language", $r4);

        $r5 = r0.<java.util.Locale: java.lang.String variantCode>;

        virtualinvoke r2.<java.io.ObjectOutputStream$PutField: void put(java.lang.String,java.lang.Object)>("variant", $r5);

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeFields()>();

        return;
    }

    public java.lang.Object clone()
    {
        java.util.Locale r0;
        java.lang.CloneNotSupportedException r1, $r3;
        java.lang.Object r2;
        java.lang.AssertionError $r4;

        r0 := @this: java.util.Locale;

     label1:
        r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

     label2:
        return r2;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>(r1);

        throw $r4;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.Locale r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8;

        r0 := @this: java.util.Locale;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label2;

     label1:
        return 1;

     label2:
        $z0 = r1 instanceof java.util.Locale;

        if $z0 == 0 goto label4;

        r2 = (java.util.Locale) r1;

        $r4 = r0.<java.util.Locale: java.lang.String languageCode>;

        $r3 = r2.<java.util.Locale: java.lang.String languageCode>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label3;

        $r6 = r0.<java.util.Locale: java.lang.String countryCode>;

        $r5 = r2.<java.util.Locale: java.lang.String countryCode>;

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label3;

        $r8 = r0.<java.util.Locale: java.lang.String variantCode>;

        $r7 = r2.<java.util.Locale: java.lang.String variantCode>;

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z3 != 0 goto label1;

     label3:
        return 0;

     label4:
        return 0;
    }

    public java.lang.String getCountry()
    {
        java.util.Locale r0;
        java.lang.String $r1;

        r0 := @this: java.util.Locale;

        $r1 = r0.<java.util.Locale: java.lang.String countryCode>;

        return $r1;
    }

    public final java.lang.String getDisplayCountry()
    {
        java.util.Locale r0, $r1;
        java.lang.String $r2;

        r0 := @this: java.util.Locale;

        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r2 = virtualinvoke r0.<java.util.Locale: java.lang.String getDisplayCountry(java.util.Locale)>($r1);

        return $r2;
    }

    public java.lang.String getDisplayCountry(java.util.Locale)
    {
        java.util.Locale r0, r1, $r7;
        java.lang.String r2, $r3, $r4, $r5, $r6, $r8, $r9;
        boolean $z0;

        r0 := @this: java.util.Locale;

        r1 := @parameter0: java.util.Locale;

        $r3 = r0.<java.util.Locale: java.lang.String countryCode>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        r2 = "";

     label1:
        return r2;

     label2:
        $r4 = virtualinvoke r0.<java.util.Locale: java.lang.String toString()>();

        $r5 = virtualinvoke r1.<java.util.Locale: java.lang.String toString()>();

        r2 = staticinvoke <libcore.icu.ICU: java.lang.String getDisplayCountryNative(java.lang.String,java.lang.String)>($r4, $r5);

        if r2 != null goto label1;

        $r6 = virtualinvoke r0.<java.util.Locale: java.lang.String toString()>();

        $r7 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r8 = virtualinvoke $r7.<java.util.Locale: java.lang.String toString()>();

        $r9 = staticinvoke <libcore.icu.ICU: java.lang.String getDisplayCountryNative(java.lang.String,java.lang.String)>($r6, $r8);

        return $r9;
    }

    public final java.lang.String getDisplayLanguage()
    {
        java.util.Locale r0, $r1;
        java.lang.String $r2;

        r0 := @this: java.util.Locale;

        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r2 = virtualinvoke r0.<java.util.Locale: java.lang.String getDisplayLanguage(java.util.Locale)>($r1);

        return $r2;
    }

    public java.lang.String getDisplayLanguage(java.util.Locale)
    {
        java.util.Locale r0, r1, $r7;
        java.lang.String r2, r3, $r4, $r5, $r6, $r8, $r9, $r10, $r11;
        boolean $z0, $z1;

        r0 := @this: java.util.Locale;

        r1 := @parameter0: java.util.Locale;

        $r4 = r0.<java.util.Locale: java.lang.String languageCode>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        r3 = "";

     label1:
        return r3;

     label2:
        r2 = virtualinvoke r0.<java.util.Locale: java.lang.String toString()>();

        $r5 = r0.<java.util.Locale: java.lang.String languageCode>;

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("tl");

        if $z1 == 0 goto label3;

        $r11 = r0.<java.util.Locale: java.lang.String countryCode>;

        $r10 = r0.<java.util.Locale: java.lang.String variantCode>;

        r2 = staticinvoke <java.util.Locale: java.lang.String toNewString(java.lang.String,java.lang.String,java.lang.String)>("fil", $r11, $r10);

     label3:
        $r6 = virtualinvoke r1.<java.util.Locale: java.lang.String toString()>();

        r3 = staticinvoke <libcore.icu.ICU: java.lang.String getDisplayLanguageNative(java.lang.String,java.lang.String)>(r2, $r6);

        if r3 != null goto label1;

        $r7 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r8 = virtualinvoke $r7.<java.util.Locale: java.lang.String toString()>();

        $r9 = staticinvoke <libcore.icu.ICU: java.lang.String getDisplayLanguageNative(java.lang.String,java.lang.String)>(r2, $r8);

        return $r9;
    }

    public final java.lang.String getDisplayName()
    {
        java.util.Locale r0, $r1;
        java.lang.String $r2;

        r0 := @this: java.util.Locale;

        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r2 = virtualinvoke r0.<java.util.Locale: java.lang.String getDisplayName(java.util.Locale)>($r1);

        return $r2;
    }

    public java.lang.String getDisplayName(java.util.Locale)
    {
        java.util.Locale r0, r1;
        java.lang.StringBuilder r2, $r6;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        int i0;
        java.lang.String r3, r4, r5, $r7, $r8, $r9, $r10;

        r0 := @this: java.util.Locale;

        r1 := @parameter0: java.util.Locale;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        r2 = $r6;

        $r7 = r0.<java.util.Locale: java.lang.String languageCode>;

        z0 = virtualinvoke $r7.<java.lang.String: boolean isEmpty()>();

        i0 = 0;

        if z0 != 0 goto label02;

        r5 = virtualinvoke r0.<java.util.Locale: java.lang.String getDisplayLanguage(java.util.Locale)>(r1);

        $z5 = virtualinvoke r5.<java.lang.String: boolean isEmpty()>();

        if $z5 == 0 goto label01;

        r5 = r0.<java.util.Locale: java.lang.String languageCode>;

     label01:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        i0 = 0 + 1;

     label02:
        $r8 = r0.<java.util.Locale: java.lang.String countryCode>;

        $z1 = virtualinvoke $r8.<java.lang.String: boolean isEmpty()>();

        if $z1 != 0 goto label05;

        if i0 != 1 goto label03;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

     label03:
        r4 = virtualinvoke r0.<java.util.Locale: java.lang.String getDisplayCountry(java.util.Locale)>(r1);

        $z4 = virtualinvoke r4.<java.lang.String: boolean isEmpty()>();

        if $z4 == 0 goto label04;

        r4 = r0.<java.util.Locale: java.lang.String countryCode>;

     label04:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        i0 = i0 + 1;

     label05:
        $r9 = r0.<java.util.Locale: java.lang.String variantCode>;

        $z2 = virtualinvoke $r9.<java.lang.String: boolean isEmpty()>();

        if $z2 != 0 goto label08;

        if i0 != 1 goto label10;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

     label06:
        r3 = virtualinvoke r0.<java.util.Locale: java.lang.String getDisplayVariant(java.util.Locale)>(r1);

        $z3 = virtualinvoke r3.<java.lang.String: boolean isEmpty()>();

        if $z3 == 0 goto label07;

        r3 = r0.<java.util.Locale: java.lang.String variantCode>;

     label07:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        i0 = i0 + 1;

     label08:
        if i0 <= 1 goto label09;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

     label09:
        $r10 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;

     label10:
        if i0 != 2 goto label06;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        goto label06;
    }

    public final java.lang.String getDisplayVariant()
    {
        java.util.Locale r0, $r1;
        java.lang.String $r2;

        r0 := @this: java.util.Locale;

        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r2 = virtualinvoke r0.<java.util.Locale: java.lang.String getDisplayVariant(java.util.Locale)>($r1);

        return $r2;
    }

    public java.lang.String getDisplayVariant(java.util.Locale)
    {
        java.util.Locale r0, r1, $r7;
        java.lang.String r2, $r3, $r4, $r5, $r6, $r8, $r9;
        int $i0;

        r0 := @this: java.util.Locale;

        r1 := @parameter0: java.util.Locale;

        $r3 = r0.<java.util.Locale: java.lang.String variantCode>;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

        r2 = r0.<java.util.Locale: java.lang.String variantCode>;

     label1:
        return r2;

     label2:
        $r4 = virtualinvoke r0.<java.util.Locale: java.lang.String toString()>();

        $r5 = virtualinvoke r1.<java.util.Locale: java.lang.String toString()>();

        r2 = staticinvoke <libcore.icu.ICU: java.lang.String getDisplayVariantNative(java.lang.String,java.lang.String)>($r4, $r5);

        if r2 != null goto label1;

        $r6 = virtualinvoke r0.<java.util.Locale: java.lang.String toString()>();

        $r7 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r8 = virtualinvoke $r7.<java.util.Locale: java.lang.String toString()>();

        $r9 = staticinvoke <libcore.icu.ICU: java.lang.String getDisplayVariantNative(java.lang.String,java.lang.String)>($r6, $r8);

        return $r9;
    }

    public java.lang.String getISO3Country()
    {
        java.util.Locale r0;
        java.lang.String r1, $r2, $r3, $r8, $r12;
        boolean $z0, $z1;
        java.util.MissingResourceException $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r9, $r10, $r11;

        r0 := @this: java.util.Locale;

        $r2 = virtualinvoke r0.<java.util.Locale: java.lang.String toString()>();

        r1 = staticinvoke <libcore.icu.ICU: java.lang.String getISO3CountryNative(java.lang.String)>($r2);

        $r3 = r0.<java.util.Locale: java.lang.String countryCode>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        $r4 = new java.util.MissingResourceException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No 3-letter country code for locale: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FormatData_");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.util.MissingResourceException: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r8, $r12, "ShortCountry");

        throw $r4;

     label1:
        return r1;
    }

    public java.lang.String getISO3Language()
    {
        java.util.Locale r0;
        java.lang.String r1, $r2, $r3, $r8, $r12;
        boolean $z0, $z1;
        java.util.MissingResourceException $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r9, $r10, $r11;

        r0 := @this: java.util.Locale;

        $r2 = virtualinvoke r0.<java.util.Locale: java.lang.String toString()>();

        r1 = staticinvoke <libcore.icu.ICU: java.lang.String getISO3LanguageNative(java.lang.String)>($r2);

        $r3 = r0.<java.util.Locale: java.lang.String languageCode>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        $r4 = new java.util.MissingResourceException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No 3-letter language code for locale: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FormatData_");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.util.MissingResourceException: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r8, $r12, "ShortLanguage");

        throw $r4;

     label1:
        return r1;
    }

    public java.lang.String getLanguage()
    {
        java.util.Locale r0;
        java.lang.String $r1;

        r0 := @this: java.util.Locale;

        $r1 = r0.<java.util.Locale: java.lang.String languageCode>;

        return $r1;
    }

    public java.lang.String getVariant()
    {
        java.util.Locale r0;
        java.lang.String $r1;

        r0 := @this: java.util.Locale;

        $r1 = r0.<java.util.Locale: java.lang.String variantCode>;

        return $r1;
    }

    public int hashCode()
    {
        java.util.Locale r0;
        java.lang.Throwable r1, $r5;
        int i0, i1, i2, $i3, $i4;
        java.lang.String $r2, $r3, $r4;

        r0 := @this: java.util.Locale;

        entermonitor r0;

     label1:
        $r2 = r0.<java.util.Locale: java.lang.String countryCode>;

        $i3 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        $r3 = r0.<java.util.Locale: java.lang.String languageCode>;

        $i4 = virtualinvoke $r3.<java.lang.String: int hashCode()>();

        i0 = $i3 + $i4;

        $r4 = r0.<java.util.Locale: java.lang.String variantCode>;

        i1 = virtualinvoke $r4.<java.lang.String: int hashCode()>();

     label2:
        i2 = i0 + i1;

        exitmonitor r0;

        return i2;

     label3:
        $r5 := @caughtexception;

        r1 = $r5;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final java.lang.String toString()
    {
        java.util.Locale r0;
        java.lang.String r1, $r2, $r3, $r4;

        r0 := @this: java.util.Locale;

        r1 = r0.<java.util.Locale: java.lang.String cachedToStringResult>;

        if r1 != null goto label1;

        $r4 = r0.<java.util.Locale: java.lang.String languageCode>;

        $r3 = r0.<java.util.Locale: java.lang.String countryCode>;

        $r2 = r0.<java.util.Locale: java.lang.String variantCode>;

        r1 = staticinvoke <java.util.Locale: java.lang.String toNewString(java.lang.String,java.lang.String,java.lang.String)>($r4, $r3, $r2);

        r0.<java.util.Locale: java.lang.String cachedToStringResult> = r1;

     label1:
        return r1;
    }
}
