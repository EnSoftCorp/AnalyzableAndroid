public class android.text.style.DrawableMarginSpan extends java.lang.Object implements android.text.style.LeadingMarginSpan, android.text.style.LineHeightSpan
{
    private android.graphics.drawable.Drawable mDrawable;
    private int mPad;

    public void <init>(android.graphics.drawable.Drawable)
    {
        android.text.style.DrawableMarginSpan r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: android.text.style.DrawableMarginSpan;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.text.style.DrawableMarginSpan: android.graphics.drawable.Drawable mDrawable> = r1;

        return;
    }

    public void <init>(android.graphics.drawable.Drawable, int)
    {
        android.text.style.DrawableMarginSpan r0;
        android.graphics.drawable.Drawable r1;
        int i0;

        r0 := @this: android.text.style.DrawableMarginSpan;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.text.style.DrawableMarginSpan: android.graphics.drawable.Drawable mDrawable> = r1;

        r0.<android.text.style.DrawableMarginSpan: int mPad> = i0;

        return;
    }

    public void chooseHeight(java.lang.CharSequence, int, int, int, int, android.graphics.Paint$FontMetricsInt)
    {
        android.text.style.DrawableMarginSpan r0;
        java.lang.CharSequence r1;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        android.graphics.Paint$FontMetricsInt r2;
        android.text.Spanned $r3;
        android.graphics.drawable.Drawable $r4;

        r0 := @this: android.text.style.DrawableMarginSpan;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        r2 := @parameter5: android.graphics.Paint$FontMetricsInt;

        $r3 = (android.text.Spanned) r1;

        $i7 = interfaceinvoke $r3.<android.text.Spanned: int getSpanEnd(java.lang.Object)>(r0);

        if i1 != $i7 goto label2;

        $r4 = r0.<android.text.style.DrawableMarginSpan: android.graphics.drawable.Drawable mDrawable>;

        i4 = virtualinvoke $r4.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $i8 = r2.<android.graphics.Paint$FontMetricsInt: int descent>;

        $i11 = i3 + $i8;

        $i9 = r2.<android.graphics.Paint$FontMetricsInt: int ascent>;

        $i10 = $i11 - $i9;

        $i13 = $i10 - i2;

        i5 = i4 - $i13;

        if i5 <= 0 goto label1;

        $i21 = r2.<android.graphics.Paint$FontMetricsInt: int descent>;

        $i20 = i5 + $i21;

        r2.<android.graphics.Paint$FontMetricsInt: int descent> = $i20;

     label1:
        $i12 = r2.<android.graphics.Paint$FontMetricsInt: int bottom>;

        $i14 = i3 + $i12;

        $i15 = r2.<android.graphics.Paint$FontMetricsInt: int top>;

        $i17 = $i14 - $i15;

        $i16 = $i17 - i2;

        i6 = i4 - $i16;

        if i6 <= 0 goto label2;

        $i19 = r2.<android.graphics.Paint$FontMetricsInt: int bottom>;

        $i18 = i6 + $i19;

        r2.<android.graphics.Paint$FontMetricsInt: int bottom> = $i18;

     label2:
        return;
    }

    public void drawLeadingMargin(android.graphics.Canvas, android.graphics.Paint, int, int, int, int, int, java.lang.CharSequence, int, int, boolean, android.text.Layout)
    {
        android.text.style.DrawableMarginSpan r0;
        android.graphics.Canvas r1;
        android.graphics.Paint r2;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11, $i12, $i13;
        java.lang.CharSequence r3;
        boolean z0;
        android.text.Layout r4;
        android.text.Spanned $r5;
        android.graphics.drawable.Drawable $r6, $r7, $r8, $r9;

        r0 := @this: android.text.style.DrawableMarginSpan;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: android.graphics.Paint;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        i4 := @parameter6: int;

        r3 := @parameter7: java.lang.CharSequence;

        i5 := @parameter8: int;

        i6 := @parameter9: int;

        z0 := @parameter10: boolean;

        r4 := @parameter11: android.text.Layout;

        $r5 = (android.text.Spanned) r3;

        $i10 = interfaceinvoke $r5.<android.text.Spanned: int getSpanStart(java.lang.Object)>(r0);

        $i11 = virtualinvoke r4.<android.text.Layout: int getLineForOffset(int)>($i10);

        i7 = virtualinvoke r4.<android.text.Layout: int getLineTop(int)>($i11);

        $r6 = r0.<android.text.style.DrawableMarginSpan: android.graphics.drawable.Drawable mDrawable>;

        i8 = virtualinvoke $r6.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $r7 = r0.<android.text.style.DrawableMarginSpan: android.graphics.drawable.Drawable mDrawable>;

        i9 = virtualinvoke $r7.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $r9 = r0.<android.text.style.DrawableMarginSpan: android.graphics.drawable.Drawable mDrawable>;

        $i12 = i0 + i8;

        $i13 = i7 + i9;

        virtualinvoke $r9.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(i0, i7, $i12, $i13);

        $r8 = r0.<android.text.style.DrawableMarginSpan: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r8.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        return;
    }

    public int getLeadingMargin(boolean)
    {
        android.text.style.DrawableMarginSpan r0;
        boolean z0;
        android.graphics.drawable.Drawable $r1;
        int $i0, $i1, $i2;

        r0 := @this: android.text.style.DrawableMarginSpan;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.text.style.DrawableMarginSpan: android.graphics.drawable.Drawable mDrawable>;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i1 = r0.<android.text.style.DrawableMarginSpan: int mPad>;

        $i2 = $i0 + $i1;

        return $i2;
    }
}
