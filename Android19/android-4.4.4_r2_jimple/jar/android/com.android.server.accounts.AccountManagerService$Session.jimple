abstract class com.android.server.accounts.AccountManagerService$Session extends android.accounts.IAccountAuthenticatorResponse$Stub implements android.os.IBinder$DeathRecipient, android.content.ServiceConnection
{
    final java.lang.String mAccountType;
    protected final com.android.server.accounts.AccountManagerService$UserAccounts mAccounts;
    android.accounts.IAccountAuthenticator mAuthenticator;
    final long mCreationTime;
    final boolean mExpectActivityLaunch;
    private int mNumErrors;
    private int mNumRequestContinued;
    public int mNumResults;
    android.accounts.IAccountManagerResponse mResponse;
    private final boolean mStripAuthTokenFromResult;
    final com.android.server.accounts.AccountManagerService this$0;

    public void <init>(com.android.server.accounts.AccountManagerService, com.android.server.accounts.AccountManagerService$UserAccounts, android.accounts.IAccountManagerResponse, java.lang.String, boolean, boolean)
    {
        com.android.server.accounts.AccountManagerService$Session r0;
        com.android.server.accounts.AccountManagerService r1;
        com.android.server.accounts.AccountManagerService$UserAccounts r2;
        android.accounts.IAccountManagerResponse r3;
        java.lang.String r4, $r9;
        boolean z0, z1;
        java.util.LinkedHashMap r5, $r8;
        java.lang.Throwable r6, $r13;
        long $l0;
        java.lang.IllegalArgumentException $r11;
        android.os.IBinder $r12;
        android.os.RemoteException $r14;

        r0 := @this: com.android.server.accounts.AccountManagerService$Session;

        r1 := @parameter0: com.android.server.accounts.AccountManagerService;

        r2 := @parameter1: com.android.server.accounts.AccountManagerService$UserAccounts;

        r3 := @parameter2: android.accounts.IAccountManagerResponse;

        r4 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        r0.<com.android.server.accounts.AccountManagerService$Session: com.android.server.accounts.AccountManagerService this$0> = r1;

        specialinvoke r0.<android.accounts.IAccountAuthenticatorResponse$Stub: void <init>()>();

        r0.<com.android.server.accounts.AccountManagerService$Session: int mNumResults> = 0;

        r0.<com.android.server.accounts.AccountManagerService$Session: int mNumRequestContinued> = 0;

        r0.<com.android.server.accounts.AccountManagerService$Session: int mNumErrors> = 0;

        r0.<com.android.server.accounts.AccountManagerService$Session: android.accounts.IAccountAuthenticator mAuthenticator> = null;

        if r4 != null goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("accountType is null");

        throw $r11;

     label1:
        r0.<com.android.server.accounts.AccountManagerService$Session: com.android.server.accounts.AccountManagerService$UserAccounts mAccounts> = r2;

        r0.<com.android.server.accounts.AccountManagerService$Session: boolean mStripAuthTokenFromResult> = z1;

        r0.<com.android.server.accounts.AccountManagerService$Session: android.accounts.IAccountManagerResponse mResponse> = r3;

        r0.<com.android.server.accounts.AccountManagerService$Session: java.lang.String mAccountType> = r4;

        r0.<com.android.server.accounts.AccountManagerService$Session: boolean mExpectActivityLaunch> = z0;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.server.accounts.AccountManagerService$Session: long mCreationTime> = $l0;

        r5 = staticinvoke <com.android.server.accounts.AccountManagerService: java.util.LinkedHashMap access$1500(com.android.server.accounts.AccountManagerService)>(r1);

        entermonitor r5;

     label2:
        $r8 = staticinvoke <com.android.server.accounts.AccountManagerService: java.util.LinkedHashMap access$1500(com.android.server.accounts.AccountManagerService)>(r1);

        $r9 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r8.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, r0);

        exitmonitor r5;

     label3:
        if r3 == null goto label5;

     label4:
        $r12 = interfaceinvoke r3.<android.accounts.IAccountManagerResponse: android.os.IBinder asBinder()>();

        interfaceinvoke $r12.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

     label5:
        return;

     label6:
        $r13 := @caughtexception;

        r6 = $r13;

     label7:
        exitmonitor r5;

     label8:
        throw r6;

     label9:
        $r14 := @caughtexception;

        r0.<com.android.server.accounts.AccountManagerService$Session: android.accounts.IAccountManagerResponse mResponse> = null;

        virtualinvoke r0.<com.android.server.accounts.AccountManagerService$Session: void binderDied()>();

        return;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch android.os.RemoteException from label4 to label5 with label9;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private boolean bindToAuthenticator(java.lang.String)
    {
        com.android.server.accounts.AccountManagerService$Session r0;
        java.lang.String r1, $r20, $r27, $r31;
        android.content.pm.RegisteredServicesCache$ServiceInfo r2;
        android.content.Intent r3, $r8;
        com.android.server.accounts.AccountManagerService $r4, $r12;
        com.android.server.accounts.IAccountAuthenticatorCache $r5;
        android.accounts.AuthenticatorDescription $r6;
        com.android.server.accounts.AccountManagerService$UserAccounts $r7, $r15;
        int $i0, $i1;
        android.content.ComponentName $r10, $r19, $r23;
        boolean $z0, $z1, $z2, $z3;
        android.os.UserHandle $r13;
        android.content.Context $r14;
        java.lang.StringBuilder $r16, $r17, $r18, $r21, $r22, $r24, $r25, $r26, $r28, $r29, $r30;

        r0 := @this: com.android.server.accounts.AccountManagerService$Session;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<com.android.server.accounts.AccountManagerService$Session: com.android.server.accounts.AccountManagerService this$0>;

        $r5 = staticinvoke <com.android.server.accounts.AccountManagerService: com.android.server.accounts.IAccountAuthenticatorCache access$1900(com.android.server.accounts.AccountManagerService)>($r4);

        $r6 = staticinvoke <android.accounts.AuthenticatorDescription: android.accounts.AuthenticatorDescription newKey(java.lang.String)>(r1);

        $r7 = r0.<com.android.server.accounts.AccountManagerService$Session: com.android.server.accounts.AccountManagerService$UserAccounts mAccounts>;

        $i0 = staticinvoke <com.android.server.accounts.AccountManagerService$UserAccounts: int access$500(com.android.server.accounts.AccountManagerService$UserAccounts)>($r7);

        r2 = interfaceinvoke $r5.<com.android.server.accounts.IAccountAuthenticatorCache: android.content.pm.RegisteredServicesCache$ServiceInfo getServiceInfo(android.accounts.AuthenticatorDescription,int)>($r6, $i0);

        if r2 != null goto label2;

        $z3 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountManagerService", 2);

        if $z3 == 0 goto label1;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("there is no authenticator for ");

        $r28 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", bailing out");

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AccountManagerService", $r31);

     label1:
        return 0;

     label2:
        $r8 = new android.content.Intent;

        specialinvoke $r8.<android.content.Intent: void <init>()>();

        r3 = $r8;

        virtualinvoke r3.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("android.accounts.AccountAuthenticator");

        $r10 = r2.<android.content.pm.RegisteredServicesCache$ServiceInfo: android.content.ComponentName componentName>;

        virtualinvoke r3.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r10);

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountManagerService", 2);

        if $z0 == 0 goto label3;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("performing bindService to ");

        $r23 = r2.<android.content.pm.RegisteredServicesCache$ServiceInfo: android.content.ComponentName componentName>;

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AccountManagerService", $r27);

     label3:
        $r12 = r0.<com.android.server.accounts.AccountManagerService$Session: com.android.server.accounts.AccountManagerService this$0>;

        $r14 = staticinvoke <com.android.server.accounts.AccountManagerService: android.content.Context access$1600(com.android.server.accounts.AccountManagerService)>($r12);

        $r13 = new android.os.UserHandle;

        $r15 = r0.<com.android.server.accounts.AccountManagerService$Session: com.android.server.accounts.AccountManagerService$UserAccounts mAccounts>;

        $i1 = staticinvoke <com.android.server.accounts.AccountManagerService$UserAccounts: int access$500(com.android.server.accounts.AccountManagerService$UserAccounts)>($r15);

        specialinvoke $r13.<android.os.UserHandle: void <init>(int)>($i1);

        $z1 = virtualinvoke $r14.<android.content.Context: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)>(r3, r0, 1, $r13);

        if $z1 != 0 goto label4;

        $z2 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountManagerService", 2);

        if $z2 == 0 goto label1;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bindService to ");

        $r19 = r2.<android.content.pm.RegisteredServicesCache$ServiceInfo: android.content.ComponentName componentName>;

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AccountManagerService", $r20);

        return 0;

     label4:
        return 1;
    }

    private void close()
    {
        com.android.server.accounts.AccountManagerService$Session r0;
        java.util.LinkedHashMap r1, $r5;
        java.lang.Throwable r2, $r11;
        com.android.server.accounts.AccountManagerService $r3, $r4;
        java.lang.String $r6;
        java.lang.Object $r7;
        android.accounts.IAccountManagerResponse $r8, $r9;
        android.os.IBinder $r10;

        r0 := @this: com.android.server.accounts.AccountManagerService$Session;

        $r3 = r0.<com.android.server.accounts.AccountManagerService$Session: com.android.server.accounts.AccountManagerService this$0>;

        r1 = staticinvoke <com.android.server.accounts.AccountManagerService: java.util.LinkedHashMap access$1500(com.android.server.accounts.AccountManagerService)>($r3);

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.accounts.AccountManagerService$Session: com.android.server.accounts.AccountManagerService this$0>;

        $r5 = staticinvoke <com.android.server.accounts.AccountManagerService: java.util.LinkedHashMap access$1500(com.android.server.accounts.AccountManagerService)>($r4);

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $r7 = virtualinvoke $r5.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>($r6);

        if $r7 != null goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        exitmonitor r1;

     label4:
        $r8 = r0.<com.android.server.accounts.AccountManagerService$Session: android.accounts.IAccountManagerResponse mResponse>;

        if $r8 == null goto label5;

        $r9 = r0.<com.android.server.accounts.AccountManagerService$Session: android.accounts.IAccountManagerResponse mResponse>;

        $r10 = interfaceinvoke $r9.<android.accounts.IAccountManagerResponse: android.os.IBinder asBinder()>();

        interfaceinvoke $r10.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

        r0.<com.android.server.accounts.AccountManagerService$Session: android.accounts.IAccountManagerResponse mResponse> = null;

     label5:
        virtualinvoke r0.<com.android.server.accounts.AccountManagerService$Session: void cancelTimeout()>();

        specialinvoke r0.<com.android.server.accounts.AccountManagerService$Session: void unbind()>();

        return;

     label6:
        $r11 := @caughtexception;

        r2 = $r11;

     label7:
        exitmonitor r1;

     label8:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private void unbind()
    {
        com.android.server.accounts.AccountManagerService$Session r0;
        android.accounts.IAccountAuthenticator $r1;
        com.android.server.accounts.AccountManagerService $r2;
        android.content.Context $r3;

        r0 := @this: com.android.server.accounts.AccountManagerService$Session;

        $r1 = r0.<com.android.server.accounts.AccountManagerService$Session: android.accounts.IAccountAuthenticator mAuthenticator>;

        if $r1 == null goto label1;

        r0.<com.android.server.accounts.AccountManagerService$Session: android.accounts.IAccountAuthenticator mAuthenticator> = null;

        $r2 = r0.<com.android.server.accounts.AccountManagerService$Session: com.android.server.accounts.AccountManagerService this$0>;

        $r3 = staticinvoke <com.android.server.accounts.AccountManagerService: android.content.Context access$1600(com.android.server.accounts.AccountManagerService)>($r2);

        virtualinvoke $r3.<android.content.Context: void unbindService(android.content.ServiceConnection)>(r0);

     label1:
        return;
    }

    void bind()
    {
        com.android.server.accounts.AccountManagerService$Session r0;
        boolean $z0, $z1;
        java.lang.String $r1, $r4, $r6, $r9, $r11;
        java.lang.StringBuilder $r2, $r3, $r5, $r7, $r8, $r10;

        r0 := @this: com.android.server.accounts.AccountManagerService$Session;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountManagerService", 2);

        if $z0 == 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("initiating bind to authenticator type ");

        $r9 = r0.<com.android.server.accounts.AccountManagerService$Session: java.lang.String mAccountType>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AccountManagerService", $r11);

     label1:
        $r1 = r0.<com.android.server.accounts.AccountManagerService$Session: java.lang.String mAccountType>;

        $z1 = specialinvoke r0.<com.android.server.accounts.AccountManagerService$Session: boolean bindToAuthenticator(java.lang.String)>($r1);

        if $z1 != 0 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bind attempt failed for ");

        $r4 = virtualinvoke r0.<com.android.server.accounts.AccountManagerService$Session: java.lang.String toDebugString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AccountManagerService", $r6);

        virtualinvoke r0.<com.android.server.accounts.AccountManagerService$Session: void onError(int,java.lang.String)>(1, "bind failure");

     label2:
        return;
    }

    public void binderDied()
    {
        com.android.server.accounts.AccountManagerService$Session r0;

        r0 := @this: com.android.server.accounts.AccountManagerService$Session;

        r0.<com.android.server.accounts.AccountManagerService$Session: android.accounts.IAccountManagerResponse mResponse> = null;

        specialinvoke r0.<com.android.server.accounts.AccountManagerService$Session: void close()>();

        return;
    }

    public void cancelTimeout()
    {
        com.android.server.accounts.AccountManagerService$Session r0;
        com.android.server.accounts.AccountManagerService $r1;
        com.android.server.accounts.AccountManagerService$MessageHandler $r2;

        r0 := @this: com.android.server.accounts.AccountManagerService$Session;

        $r1 = r0.<com.android.server.accounts.AccountManagerService$Session: com.android.server.accounts.AccountManagerService this$0>;

        $r2 = staticinvoke <com.android.server.accounts.AccountManagerService: com.android.server.accounts.AccountManagerService$MessageHandler access$1700(com.android.server.accounts.AccountManagerService)>($r1);

        virtualinvoke $r2.<com.android.server.accounts.AccountManagerService$MessageHandler: void removeMessages(int,java.lang.Object)>(3, r0);

        return;
    }

    android.accounts.IAccountManagerResponse getResponseAndClose()
    {
        com.android.server.accounts.AccountManagerService$Session r0;
        android.accounts.IAccountManagerResponse r1, $r2;

        r0 := @this: com.android.server.accounts.AccountManagerService$Session;

        $r2 = r0.<com.android.server.accounts.AccountManagerService$Session: android.accounts.IAccountManagerResponse mResponse>;

        if $r2 != null goto label1;

        return null;

     label1:
        r1 = r0.<com.android.server.accounts.AccountManagerService$Session: android.accounts.IAccountManagerResponse mResponse>;

        specialinvoke r0.<com.android.server.accounts.AccountManagerService$Session: void close()>();

        return r1;
    }

    public void onError(int, java.lang.String)
    {
        com.android.server.accounts.AccountManagerService$Session r0;
        int i0, $i1, $i2;
        java.lang.String r1, $r6, $r9;
        android.accounts.IAccountManagerResponse r2;
        android.os.RemoteException r3, $r11;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r4, $r7, $r8, $r10;
        java.lang.Class $r5;

        r0 := @this: com.android.server.accounts.AccountManagerService$Session;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $i1 = r0.<com.android.server.accounts.AccountManagerService$Session: int mNumErrors>;

        $i2 = 1 + $i1;

        r0.<com.android.server.accounts.AccountManagerService$Session: int mNumErrors> = $i2;

        r2 = virtualinvoke r0.<com.android.server.accounts.AccountManagerService$Session: android.accounts.IAccountManagerResponse getResponseAndClose()>();

        if r2 == null goto label4;

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountManagerService", 2);

        if $z1 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getSimpleName()>();

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" calling onError() on response ");

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AccountManagerService", $r9);

     label1:
        interfaceinvoke r2.<android.accounts.IAccountManagerResponse: void onError(int,java.lang.String)>(i0, r1);

     label2:
        return;

     label3:
        $r11 := @caughtexception;

        r3 = $r11;

        $z2 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountManagerService", 2);

        if $z2 == 0 goto label2;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>("AccountManagerService", "Session.onError: caught RemoteException while responding", r3);

        return;

     label4:
        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountManagerService", 2);

        if $z0 == 0 goto label2;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AccountManagerService", "Session.onError: already closed");

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onRequestContinued()
    {
        com.android.server.accounts.AccountManagerService$Session r0;
        int $i0, $i1;

        r0 := @this: com.android.server.accounts.AccountManagerService$Session;

        $i0 = r0.<com.android.server.accounts.AccountManagerService$Session: int mNumRequestContinued>;

        $i1 = 1 + $i0;

        r0.<com.android.server.accounts.AccountManagerService$Session: int mNumRequestContinued> = $i1;

        return;
    }

    public void onResult(android.os.Bundle)
    {
        com.android.server.accounts.AccountManagerService$Session r0;
        android.os.Bundle r1;
        android.content.Intent r2;
        android.accounts.IAccountManagerResponse r3;
        android.os.RemoteException r4, $r42;
        java.lang.String r5, r6, $r11, $r14, $r18, $r19, $r22, $r25;
        android.accounts.Account r7, $r26;
        int i0, $i2, $i3, $i4, $i5, $i8, $i9, $i10, $i12, $i13;
        long l1;
        java.lang.Throwable r8, $r40;
        android.content.pm.PackageManager r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.StringBuilder $r10, $r13, $r15, $r16, $r17, $r20, $r23, $r24;
        java.lang.Class $r12, $r21;
        java.lang.Integer $r27;
        com.android.server.accounts.AccountManagerService $r28, $r29, $r33;
        com.android.server.accounts.AccountManagerService$UserAccounts $r30, $r31, $r39;
        android.os.UserHandle $r32;
        android.os.Parcelable $r34;
        android.content.pm.ResolveInfo $r35;
        android.content.pm.ActivityInfo $r36;
        android.content.pm.ApplicationInfo $r37;
        android.content.Context $r38;
        java.lang.SecurityException $r41;

        r0 := @this: com.android.server.accounts.AccountManagerService$Session;

        r1 := @parameter0: android.os.Bundle;

        $i3 = r0.<com.android.server.accounts.AccountManagerService$Session: int mNumResults>;

        $i2 = 1 + $i3;

        r0.<com.android.server.accounts.AccountManagerService$Session: int mNumResults> = $i2;

        r2 = null;

        if r1 == null goto label04;

        $r34 = virtualinvoke r1.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("intent");

        r2 = (android.content.Intent) $r34;

        if r2 == null goto label04;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        $r33 = r0.<com.android.server.accounts.AccountManagerService$Session: com.android.server.accounts.AccountManagerService this$0>;

        $r38 = staticinvoke <com.android.server.accounts.AccountManagerService: android.content.Context access$1600(com.android.server.accounts.AccountManagerService)>($r33);

        r9 = virtualinvoke $r38.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r39 = r0.<com.android.server.accounts.AccountManagerService$Session: com.android.server.accounts.AccountManagerService$UserAccounts mAccounts>;

        $i10 = staticinvoke <com.android.server.accounts.AccountManagerService$UserAccounts: int access$500(com.android.server.accounts.AccountManagerService$UserAccounts)>($r39);

        $r35 = virtualinvoke r9.<android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivityAsUser(android.content.Intent,int,int)>(r2, 0, $i10);

        $r36 = $r35.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r37 = $r36.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i12 = $r37.<android.content.pm.ApplicationInfo: int uid>;

        $i13 = virtualinvoke r9.<android.content.pm.PackageManager: int checkSignatures(int,int)>(i0, $i12);

        if $i13 == 0 goto label03;

        $r41 = new java.lang.SecurityException;

        specialinvoke $r41.<java.lang.SecurityException: void <init>(java.lang.String)>("Activity to be started with KEY_INTENT must share Authenticator\'s signatures");

        throw $r41;

     label02:
        $r40 := @caughtexception;

        r8 = $r40;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r8;

     label03:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

     label04:
        if r1 == null goto label05;

        $r25 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("authtoken");

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r25);

        if $z4 != 0 goto label05;

        r5 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("authAccount");

        r6 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("accountType");

        $z7 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r5);

        if $z7 != 0 goto label05;

        $z6 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r6);

        if $z6 != 0 goto label05;

        $r26 = new android.accounts.Account;

        specialinvoke $r26.<android.accounts.Account: void <init>(java.lang.String,java.lang.String)>(r5, r6);

        r7 = $r26;

        $r28 = r0.<com.android.server.accounts.AccountManagerService$Session: com.android.server.accounts.AccountManagerService this$0>;

        $r29 = r0.<com.android.server.accounts.AccountManagerService$Session: com.android.server.accounts.AccountManagerService this$0>;

        $r30 = r0.<com.android.server.accounts.AccountManagerService$Session: com.android.server.accounts.AccountManagerService$UserAccounts mAccounts>;

        $r27 = staticinvoke <com.android.server.accounts.AccountManagerService: java.lang.Integer access$1800(com.android.server.accounts.AccountManagerService,com.android.server.accounts.AccountManagerService$UserAccounts,android.accounts.Account)>($r29, $r30, r7);

        $i9 = virtualinvoke $r27.<java.lang.Integer: int intValue()>();

        $r32 = new android.os.UserHandle;

        $r31 = r0.<com.android.server.accounts.AccountManagerService$Session: com.android.server.accounts.AccountManagerService$UserAccounts mAccounts>;

        $i8 = staticinvoke <com.android.server.accounts.AccountManagerService$UserAccounts: int access$500(com.android.server.accounts.AccountManagerService$UserAccounts)>($r31);

        specialinvoke $r32.<android.os.UserHandle: void <init>(int)>($i8);

        virtualinvoke $r28.<com.android.server.accounts.AccountManagerService: void cancelNotification(int,android.os.UserHandle)>($i9, $r32);

     label05:
        $z0 = r0.<com.android.server.accounts.AccountManagerService$Session: boolean mExpectActivityLaunch>;

        if $z0 == 0 goto label10;

        if r1 == null goto label10;

        $z5 = virtualinvoke r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("intent");

        if $z5 == 0 goto label10;

        r3 = r0.<com.android.server.accounts.AccountManagerService$Session: android.accounts.IAccountManagerResponse mResponse>;

     label06:
        if r3 == null goto label09;

        if r1 != null goto label11;

     label07:
        $z3 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountManagerService", 2);

        if $z3 == 0 goto label08;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r19 = virtualinvoke $r21.<java.lang.Class: java.lang.String getSimpleName()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" calling onError() on response ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AccountManagerService", $r22);

     label08:
        interfaceinvoke r3.<android.accounts.IAccountManagerResponse: void onError(int,java.lang.String)>(5, "null bundle returned");

     label09:
        return;

     label10:
        r3 = virtualinvoke r0.<com.android.server.accounts.AccountManagerService$Session: android.accounts.IAccountManagerResponse getResponseAndClose()>();

        goto label06;

     label11:
        $z2 = r0.<com.android.server.accounts.AccountManagerService$Session: boolean mStripAuthTokenFromResult>;

        if $z2 == 0 goto label12;

        virtualinvoke r1.<android.os.Bundle: void remove(java.lang.String)>("authtoken");

     label12:
        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountManagerService", 2);

        if $z1 == 0 goto label13;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = virtualinvoke $r12.<java.lang.Class: java.lang.String getSimpleName()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" calling onResult() on response ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AccountManagerService", $r18);

     label13:
        $i5 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String,int)>("errorCode", -1);

        if $i5 <= 0 goto label18;

     label14:
        if r2 != null goto label18;

     label15:
        $i4 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String)>("errorCode");

        $r11 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("errorMessage");

        interfaceinvoke r3.<android.accounts.IAccountManagerResponse: void onError(int,java.lang.String)>($i4, $r11);

     label16:
        return;

     label17:
        $r42 := @caughtexception;

        r4 = $r42;

        $z8 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountManagerService", 2);

        if $z8 == 0 goto label09;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>("AccountManagerService", "failure while notifying response", r4);

        return;

     label18:
        interfaceinvoke r3.<android.accounts.IAccountManagerResponse: void onResult(android.os.Bundle)>(r1);

     label19:
        return;

        catch java.lang.Throwable from label01 to label02 with label02;
        catch android.os.RemoteException from label07 to label08 with label17;
        catch android.os.RemoteException from label08 to label09 with label17;
        catch android.os.RemoteException from label11 to label12 with label17;
        catch android.os.RemoteException from label12 to label13 with label17;
        catch android.os.RemoteException from label13 to label14 with label17;
        catch android.os.RemoteException from label15 to label16 with label17;
        catch android.os.RemoteException from label18 to label19 with label17;
    }

    public void onServiceConnected(android.content.ComponentName, android.os.IBinder)
    {
        com.android.server.accounts.AccountManagerService$Session r0;
        android.content.ComponentName r1;
        android.os.IBinder r2;
        android.accounts.IAccountAuthenticator $r4;
        android.os.RemoteException $r5;

        r0 := @this: com.android.server.accounts.AccountManagerService$Session;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.os.IBinder;

        $r4 = staticinvoke <android.accounts.IAccountAuthenticator$Stub: android.accounts.IAccountAuthenticator asInterface(android.os.IBinder)>(r2);

        r0.<com.android.server.accounts.AccountManagerService$Session: android.accounts.IAccountAuthenticator mAuthenticator> = $r4;

     label1:
        virtualinvoke r0.<com.android.server.accounts.AccountManagerService$Session: void run()>();

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        virtualinvoke r0.<com.android.server.accounts.AccountManagerService$Session: void onError(int,java.lang.String)>(1, "remote exception");

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onServiceDisconnected(android.content.ComponentName)
    {
        com.android.server.accounts.AccountManagerService$Session r0;
        android.content.ComponentName r1;
        android.accounts.IAccountManagerResponse r2;
        android.os.RemoteException r3, $r4;
        boolean $z0;

        r0 := @this: com.android.server.accounts.AccountManagerService$Session;

        r1 := @parameter0: android.content.ComponentName;

        r0.<com.android.server.accounts.AccountManagerService$Session: android.accounts.IAccountAuthenticator mAuthenticator> = null;

        r2 = virtualinvoke r0.<com.android.server.accounts.AccountManagerService$Session: android.accounts.IAccountManagerResponse getResponseAndClose()>();

        if r2 == null goto label2;

     label1:
        interfaceinvoke r2.<android.accounts.IAccountManagerResponse: void onError(int,java.lang.String)>(1, "disconnected");

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountManagerService", 2);

        if $z0 == 0 goto label2;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>("AccountManagerService", "Session.onServiceDisconnected: caught RemoteException while responding", r3);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onTimedOut()
    {
        com.android.server.accounts.AccountManagerService$Session r0;
        android.accounts.IAccountManagerResponse r1;
        android.os.RemoteException r2, $r3;
        boolean $z0;

        r0 := @this: com.android.server.accounts.AccountManagerService$Session;

        r1 = virtualinvoke r0.<com.android.server.accounts.AccountManagerService$Session: android.accounts.IAccountManagerResponse getResponseAndClose()>();

        if r1 == null goto label2;

     label1:
        interfaceinvoke r1.<android.accounts.IAccountManagerResponse: void onError(int,java.lang.String)>(1, "timeout");

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountManagerService", 2);

        if $z0 == 0 goto label2;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>("AccountManagerService", "Session.onTimedOut: caught RemoteException while responding", r2);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public abstract void run() throws android.os.RemoteException;

    public void scheduleTimeout()
    {
        com.android.server.accounts.AccountManagerService$Session r0;
        com.android.server.accounts.AccountManagerService $r1, $r3;
        com.android.server.accounts.AccountManagerService$MessageHandler $r2, $r4;
        android.os.Message $r5;

        r0 := @this: com.android.server.accounts.AccountManagerService$Session;

        $r1 = r0.<com.android.server.accounts.AccountManagerService$Session: com.android.server.accounts.AccountManagerService this$0>;

        $r2 = staticinvoke <com.android.server.accounts.AccountManagerService: com.android.server.accounts.AccountManagerService$MessageHandler access$1700(com.android.server.accounts.AccountManagerService)>($r1);

        $r3 = r0.<com.android.server.accounts.AccountManagerService$Session: com.android.server.accounts.AccountManagerService this$0>;

        $r4 = staticinvoke <com.android.server.accounts.AccountManagerService: com.android.server.accounts.AccountManagerService$MessageHandler access$1700(com.android.server.accounts.AccountManagerService)>($r3);

        $r5 = virtualinvoke $r4.<com.android.server.accounts.AccountManagerService$MessageHandler: android.os.Message obtainMessage(int,java.lang.Object)>(3, r0);

        virtualinvoke $r2.<com.android.server.accounts.AccountManagerService$MessageHandler: boolean sendMessageDelayed(android.os.Message,long)>($r5, 60000L);

        return;
    }

    protected java.lang.String toDebugString()
    {
        com.android.server.accounts.AccountManagerService$Session r0;
        long $l0;
        java.lang.String $r1;

        r0 := @this: com.android.server.accounts.AccountManagerService$Session;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r1 = virtualinvoke r0.<com.android.server.accounts.AccountManagerService$Session: java.lang.String toDebugString(long)>($l0);

        return $r1;
    }

    protected java.lang.String toDebugString(long)
    {
        com.android.server.accounts.AccountManagerService$Session r0;
        long l0, $l4, $l5;
        java.lang.StringBuilder r1, $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        boolean z0, $z1;
        android.accounts.IAccountAuthenticator $r5;
        int $i1, $i2, $i3;
        double $d0, $d1;
        java.lang.String $r16;

        r0 := @this: com.android.server.accounts.AccountManagerService$Session;

        l0 := @parameter0: long;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Session: expectLaunch ");

        $z1 = r0.<com.android.server.accounts.AccountManagerService$Session: boolean mExpectActivityLaunch>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", connected ");

        $r5 = r0.<com.android.server.accounts.AccountManagerService$Session: android.accounts.IAccountAuthenticator mAuthenticator>;

        if $r5 == null goto label2;

        z0 = 1;

     label1:
        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", stats (");

        $i1 = r0.<com.android.server.accounts.AccountManagerService$Session: int mNumResults>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i2 = r0.<com.android.server.accounts.AccountManagerService$Session: int mNumRequestContinued>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i3 = r0.<com.android.server.accounts.AccountManagerService$Session: int mNumErrors>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", lifetime ");

        $l4 = r0.<com.android.server.accounts.AccountManagerService$Session: long mCreationTime>;

        $l5 = l0 - $l4;

        $d0 = (double) $l5;

        $d1 = $d0 / 1000.0;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r16;

     label2:
        z0 = 0;

        goto label1;
    }
}
