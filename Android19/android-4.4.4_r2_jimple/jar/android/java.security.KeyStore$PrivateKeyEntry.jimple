public final class java.security.KeyStore$PrivateKeyEntry extends java.lang.Object implements java.security.KeyStore$Entry
{
    private java.security.cert.Certificate[] chain;
    private java.security.PrivateKey privateKey;

    public void <init>(java.security.PrivateKey, java.security.cert.Certificate[])
    {
        java.security.KeyStore$PrivateKeyEntry r0;
        java.security.PrivateKey r1;
        java.security.cert.Certificate[] r2, $r9, $r10;
        java.lang.String r3, $r7, $r8, $r14;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        boolean z0, $z1, $z2, $z3;
        java.security.cert.Certificate $r4, $r5, $r11, $r13;
        java.security.PublicKey $r6;
        java.security.cert.X509Certificate[] $r12;
        java.lang.IllegalArgumentException $r15, $r16, $r18;
        java.lang.NullPointerException $r17, $r19;

        r0 := @this: java.security.KeyStore$PrivateKeyEntry;

        r1 := @parameter0: java.security.PrivateKey;

        r2 := @parameter1: java.security.cert.Certificate[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label01;

        $r19 = new java.lang.NullPointerException;

        specialinvoke $r19.<java.lang.NullPointerException: void <init>(java.lang.String)>("privateKey == null");

        throw $r19;

     label01:
        if r2 != null goto label02;

        $r17 = new java.lang.NullPointerException;

        specialinvoke $r17.<java.lang.NullPointerException: void <init>(java.lang.String)>("chain == null");

        throw $r17;

     label02:
        $i3 = lengthof r2;

        if $i3 != 0 goto label03;

        $r18 = new java.lang.IllegalArgumentException;

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("chain.length == 0");

        throw $r18;

     label03:
        $r4 = r2[0];

        r3 = virtualinvoke $r4.<java.security.cert.Certificate: java.lang.String getType()>();

        $r5 = r2[0];

        $r6 = virtualinvoke $r5.<java.security.cert.Certificate: java.security.PublicKey getPublicKey()>();

        $r7 = interfaceinvoke $r6.<java.security.PublicKey: java.lang.String getAlgorithm()>();

        $r8 = interfaceinvoke r1.<java.security.PrivateKey: java.lang.String getAlgorithm()>();

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z1 != 0 goto label04;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Algorithm of private key does not match algorithm of public key in end certificate of entry (with index number: 0)");

        throw $r15;

     label04:
        i0 = 1;

     label05:
        $i5 = lengthof r2;

        if i0 >= $i5 goto label07;

        $r13 = r2[i0];

        $r14 = virtualinvoke $r13.<java.security.cert.Certificate: java.lang.String getType()>();

        $z3 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z3 != 0 goto label06;

        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Certificates from the given chain have different types");

        throw $r16;

     label06:
        i0 = i0 + 1;

        goto label05;

     label07:
        z0 = 1;

        i1 = lengthof r2;

        i2 = 0;

     label08:
        if i2 >= i1 goto label09;

        $r11 = r2[i2];

        $z2 = $r11 instanceof java.security.cert.X509Certificate;

        if $z2 != 0 goto label11;

        z0 = 0;

     label09:
        if z0 == 0 goto label12;

        $i7 = lengthof r2;

        $r12 = newarray (java.security.cert.X509Certificate)[$i7];

        r0.<java.security.KeyStore$PrivateKeyEntry: java.security.cert.Certificate[] chain> = $r12;

     label10:
        $r10 = r0.<java.security.KeyStore$PrivateKeyEntry: java.security.cert.Certificate[] chain>;

        $i6 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, $r10, 0, $i6);

        r0.<java.security.KeyStore$PrivateKeyEntry: java.security.PrivateKey privateKey> = r1;

        return;

     label11:
        i2 = i2 + 1;

        goto label08;

     label12:
        $i4 = lengthof r2;

        $r9 = newarray (java.security.cert.Certificate)[$i4];

        r0.<java.security.KeyStore$PrivateKeyEntry: java.security.cert.Certificate[] chain> = $r9;

        goto label10;
    }

    public java.security.cert.Certificate getCertificate()
    {
        java.security.KeyStore$PrivateKeyEntry r0;
        java.security.cert.Certificate[] $r1;
        java.security.cert.Certificate $r2;

        r0 := @this: java.security.KeyStore$PrivateKeyEntry;

        $r1 = r0.<java.security.KeyStore$PrivateKeyEntry: java.security.cert.Certificate[] chain>;

        $r2 = $r1[0];

        return $r2;
    }

    public java.security.cert.Certificate[] getCertificateChain()
    {
        java.security.KeyStore$PrivateKeyEntry r0;
        java.security.cert.Certificate[] $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: java.security.KeyStore$PrivateKeyEntry;

        $r1 = r0.<java.security.KeyStore$PrivateKeyEntry: java.security.cert.Certificate[] chain>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (java.security.cert.Certificate[]) $r2;

        return $r3;
    }

    public java.security.PrivateKey getPrivateKey()
    {
        java.security.KeyStore$PrivateKeyEntry r0;
        java.security.PrivateKey $r1;

        r0 := @this: java.security.KeyStore$PrivateKeyEntry;

        $r1 = r0.<java.security.KeyStore$PrivateKeyEntry: java.security.PrivateKey privateKey>;

        return $r1;
    }

    public java.lang.String toString()
    {
        java.security.KeyStore$PrivateKeyEntry r0;
        java.lang.StringBuilder r1, $r2;
        int i0, $i1, $i2;
        java.security.cert.Certificate[] $r3, $r7, $r9;
        java.lang.String $r4, $r8, $r12;
        java.security.cert.Certificate $r10;

        r0 := @this: java.security.KeyStore$PrivateKeyEntry;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("PrivateKeyEntry: number of elements in certificate chain is ");

        r1 = $r2;

        $r3 = r0.<java.security.KeyStore$PrivateKeyEntry: java.security.cert.Certificate[] chain>;

        $i1 = lengthof $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        i0 = 0;

     label1:
        $r7 = r0.<java.security.KeyStore$PrivateKeyEntry: java.security.cert.Certificate[] chain>;

        $i2 = lengthof $r7;

        if i0 >= $i2 goto label2;

        $r9 = r0.<java.security.KeyStore$PrivateKeyEntry: java.security.cert.Certificate[] chain>;

        $r10 = $r9[i0];

        $r12 = virtualinvoke $r10.<java.security.cert.Certificate: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        i0 = i0 + 1;

        goto label1;

     label2:
        $r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }
}
