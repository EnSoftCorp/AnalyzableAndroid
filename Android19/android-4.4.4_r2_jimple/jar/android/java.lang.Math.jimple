public final class java.lang.Math extends java.lang.Object
{
    public static final double E;
    public static final double PI;
    private static java.util.Random random;

    private void <init>()
    {
        java.lang.Math r0;

        r0 := @this: java.lang.Math;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static native double IEEEremainder(double, double);

    public static double abs(double)
    {
        double d0, $d1;
        long $l0, $l1;

        d0 := @parameter0: double;

        $l0 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d0);

        $l1 = 9223372036854775807L & $l0;

        $d1 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l1);

        return $d1;
    }

    public static float abs(float)
    {
        float f0, $f1;
        int $i0, $i1;

        f0 := @parameter0: float;

        $i0 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>(f0);

        $i1 = 2147483647 & $i0;

        $f1 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i1);

        return $f1;
    }

    public static int abs(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        return i0;

     label1:
        $i1 = neg i0;

        return $i1;
    }

    public static long abs(long)
    {
        long l0, $l2;
        byte $b1;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 < 0 goto label1;

        return l0;

     label1:
        $l2 = neg l0;

        return $l2;
    }

    public static native double acos(double);

    public static native double asin(double);

    public static native double atan(double);

    public static native double atan2(double, double);

    public static native double cbrt(double);

    public static native double ceil(double);

    public static double copySign(double, double)
    {
        double d0, d1, $d2;
        long l0, l1, $l2, $l3, $l4;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        l0 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d0);

        l1 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d1);

        $l3 = 9223372036854775807L & l0;

        $l2 = -9223372036854775808L & l1;

        $l4 = $l3 | $l2;

        $d2 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l4);

        return $d2;
    }

    public static float copySign(float, float)
    {
        float f0, f1, $f2;
        int i0, i1, $i2, $i3, $i4;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        i0 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>(f0);

        i1 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>(f1);

        $i3 = 2147483647 & i0;

        $i2 = -2147483648 & i1;

        $i4 = $i3 | $i2;

        $f2 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i4);

        return $f2;
    }

    public static native double cos(double);

    public static native double cosh(double);

    public static native double exp(double);

    public static native double expm1(double);

    public static native double floor(double);

    public static int getExponent(double)
    {
        double d0;
        long $l0, $l1, $l2;
        int $i3, $i4;

        d0 := @parameter0: double;

        $l0 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d0);

        $l1 = 9218868437227405312L & $l0;

        $l2 = $l1 >> 52;

        $i3 = (int) $l2;

        $i4 = -1023 + $i3;

        return $i4;
    }

    public static int getExponent(float)
    {
        float f0;
        int $i0, $i1, $i2, $i3;

        f0 := @parameter0: float;

        $i0 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>(f0);

        $i1 = 2139095040 & $i0;

        $i2 = $i1 >> 23;

        $i3 = -127 + $i2;

        return $i3;
    }

    public static native double hypot(double, double);

    public static native double log(double);

    public static native double log10(double);

    public static native double log1p(double);

    public static double max(double, double)
    {
        double d0, d1;
        byte $b0, $b1, $b2, $b4;
        long $l3;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $b0 = d0 cmpl d1;

        if $b0 <= 0 goto label2;

        d1 = d0;

     label1:
        return d1;

     label2:
        $b1 = d0 cmpg d1;

        if $b1 < 0 goto label1;

        $b2 = d0 cmpl d1;

        if $b2 == 0 goto label3;

        return #NaN;

     label3:
        $l3 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d0);

        $b4 = $l3 cmp 0L;

        if $b4 != 0 goto label1;

        return 0.0;
    }

    public static float max(float, float)
    {
        float f0, f1;
        byte $b0, $b1, $b2;
        int $i3;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $b0 = f0 cmpl f1;

        if $b0 <= 0 goto label2;

        f1 = f0;

     label1:
        return f1;

     label2:
        $b1 = f0 cmpg f1;

        if $b1 < 0 goto label1;

        $b2 = f0 cmpl f1;

        if $b2 == 0 goto label3;

        return #NaNF;

     label3:
        $i3 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>(f0);

        if $i3 != 0 goto label1;

        return 0.0F;
    }

    public static int max(int, int)
    {
        int i0, i1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 <= i1 goto label1;

        return i0;

     label1:
        return i1;
    }

    public static long max(long, long)
    {
        long l0, l1;
        byte $b2;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $b2 = l0 cmp l1;

        if $b2 <= 0 goto label1;

        return l0;

     label1:
        return l1;
    }

    public static double min(double, double)
    {
        double d0, d1;
        byte $b0, $b1, $b2, $b4;
        long $l3;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $b0 = d0 cmpl d1;

        if $b0 <= 0 goto label2;

     label1:
        return d1;

     label2:
        $b1 = d0 cmpg d1;

        if $b1 >= 0 goto label3;

        return d0;

     label3:
        $b2 = d0 cmpl d1;

        if $b2 == 0 goto label4;

        return #NaN;

     label4:
        $l3 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d0);

        $b4 = $l3 cmp -9223372036854775808L;

        if $b4 != 0 goto label1;

        return 0.0;
    }

    public static float min(float, float)
    {
        float f0, f1;
        byte $b0, $b1, $b2;
        int $i3;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $b0 = f0 cmpl f1;

        if $b0 <= 0 goto label2;

     label1:
        return f1;

     label2:
        $b1 = f0 cmpg f1;

        if $b1 >= 0 goto label3;

        return f0;

     label3:
        $b2 = f0 cmpl f1;

        if $b2 == 0 goto label4;

        return #NaNF;

     label4:
        $i3 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>(f0);

        if $i3 != -2147483648 goto label1;

        return 0.0F;
    }

    public static int min(int, int)
    {
        int i0, i1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 >= i1 goto label1;

        return i0;

     label1:
        return i1;
    }

    public static long min(long, long)
    {
        long l0, l1;
        byte $b2;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $b2 = l0 cmp l1;

        if $b2 >= 0 goto label1;

        return l0;

     label1:
        return l1;
    }

    public static double nextAfter(double, double)
    {
        double d0, d1, $d2;
        byte $b0, $b1;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $b0 = d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        $b1 = d1 cmpl 0.0;

        if $b1 != 0 goto label1;

        return d1;

     label1:
        $d2 = staticinvoke <java.lang.Math: double nextafter(double,double)>(d0, d1);

        return $d2;
    }

    public static float nextAfter(float, double)
    {
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        byte b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9, $b14, $b15, $b19, $b21, $b22, $b23, $b24, $b25, $b26, $b27;
        boolean $z0, $z1, $z2;
        int $i10, $i11, $i12, $i13, $i16, $i17, $i18, $i20;

        f0 := @parameter0: float;

        d0 := @parameter1: double;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f0);

        if $z0 != 0 goto label01;

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0);

        if $z1 == 0 goto label03;

     label01:
        f1 = #NaNF;

     label02:
        return f1;

     label03:
        $b1 = f0 cmpl 0.0F;

        if $b1 != 0 goto label04;

        $b26 = d0 cmpl 0.0;

        if $b26 != 0 goto label04;

        $f7 = (float) d0;

        return $f7;

     label04:
        $b2 = f0 cmpl 1.4E-45F;

        if $b2 != 0 goto label05;

        $d7 = (double) f0;

        $b27 = d0 cmpg $d7;

        if $b27 < 0 goto label06;

     label05:
        $b3 = f0 cmpl -1.4E-45F;

        if $b3 != 0 goto label07;

        $d6 = (double) f0;

        $b23 = d0 cmpl $d6;

        if $b23 <= 0 goto label07;

     label06:
        b0 = f0 cmpl 0.0F;

        f1 = 0.0F;

        if b0 > 0 goto label02;

        return 0.0F;

     label07:
        $z2 = staticinvoke <java.lang.Float: boolean isInfinite(float)>(f0);

        if $z2 == 0 goto label09;

        $d4 = (double) f0;

        $b24 = d0 cmpl $d4;

        if $b24 == 0 goto label09;

        $b25 = f0 cmpl 0.0F;

        if $b25 <= 0 goto label08;

        return 3.4028235E38F;

     label08:
        return -3.4028235E38F;

     label09:
        $b4 = f0 cmpl 3.4028235E38F;

        if $b4 != 0 goto label10;

        $d5 = (double) f0;

        $b21 = d0 cmpl $d5;

        if $b21 > 0 goto label11;

     label10:
        $b5 = f0 cmpl -3.4028235E38F;

        if $b5 != 0 goto label13;

        $d3 = (double) f0;

        $b19 = d0 cmpg $d3;

        if $b19 >= 0 goto label13;

     label11:
        $b22 = f0 cmpl 0.0F;

        if $b22 <= 0 goto label12;

        return #InfinityF;

     label12:
        return #-InfinityF;

     label13:
        $d1 = (double) f0;

        $b6 = d0 cmpl $d1;

        if $b6 <= 0 goto label16;

        $b15 = f0 cmpl 0.0F;

        if $b15 <= 0 goto label14;

        $i17 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f0);

        $i20 = 1 + $i17;

        $f6 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i20);

        return $f6;

     label14:
        $b14 = f0 cmpg 0.0F;

        if $b14 >= 0 goto label15;

        $i16 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f0);

        $i18 = -1 + $i16;

        $f5 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i18);

        return $f5;

     label15:
        return 1.4E-45F;

     label16:
        $d2 = (double) f0;

        $b7 = d0 cmpg $d2;

        if $b7 >= 0 goto label19;

        $b9 = f0 cmpl 0.0F;

        if $b9 <= 0 goto label17;

        $i12 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f0);

        $i13 = -1 + $i12;

        $f4 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i13);

        return $f4;

     label17:
        $b8 = f0 cmpg 0.0F;

        if $b8 >= 0 goto label18;

        $i10 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f0);

        $i11 = 1 + $i10;

        $f3 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i11);

        return $f3;

     label18:
        return -1.4E-45F;

     label19:
        $f2 = (float) d0;

        return $f2;
    }

    public static double nextUp(double)
    {
        double d0, d1, $d2, $d3;
        boolean $z0;
        byte $b0, $b1, $b2;
        long $l3, $l4, $l5, $l6;

        d0 := @parameter0: double;

        d1 = #Infinity;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0);

        if $z0 == 0 goto label2;

        d1 = #NaN;

     label1:
        return d1;

     label2:
        $b0 = d0 cmpl d1;

        if $b0 == 0 goto label1;

        $b1 = d0 cmpl 0.0;

        if $b1 != 0 goto label3;

        return 4.9E-324;

     label3:
        $b2 = d0 cmpl 0.0;

        if $b2 <= 0 goto label4;

        $l5 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(d0);

        $l6 = 1L + $l5;

        $d3 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l6);

        return $d3;

     label4:
        $l3 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(d0);

        $l4 = $l3 - 1L;

        $d2 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l4);

        return $d2;
    }

    public static float nextUp(float)
    {
        float f0, f1, $f2, $f3;
        boolean $z0;
        byte $b0, $b1, $b2;
        int $i3, $i4, $i5, $i6;

        f0 := @parameter0: float;

        f1 = #InfinityF;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f0);

        if $z0 == 0 goto label2;

        f1 = #NaNF;

     label1:
        return f1;

     label2:
        $b0 = f0 cmpl f1;

        if $b0 == 0 goto label1;

        $b1 = f0 cmpl 0.0F;

        if $b1 != 0 goto label3;

        return 1.4E-45F;

     label3:
        $b2 = f0 cmpl 0.0F;

        if $b2 <= 0 goto label4;

        $i5 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f0);

        $i6 = 1 + $i5;

        $f3 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i6);

        return $f3;

     label4:
        $i3 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f0);

        $i4 = -1 + $i3;

        $f2 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i4);

        return $f2;
    }

    private static native double nextafter(double, double);

    public static native double pow(double, double);

    public static double random()
    {
        java.lang.Throwable r0, $r4;
        double d0;
        java.util.Random $r1, $r2, $r3;

        entermonitor class "java/lang/Math";

     label1:
        $r1 = <java.lang.Math: java.util.Random random>;

        if $r1 != null goto label2;

        $r3 = new java.util.Random;

        specialinvoke $r3.<java.util.Random: void <init>()>();

        <java.lang.Math: java.util.Random random> = $r3;

     label2:
        $r2 = <java.lang.Math: java.util.Random random>;

        d0 = virtualinvoke $r2.<java.util.Random: double nextDouble()>();

     label3:
        exitmonitor class "java/lang/Math";

        return d0;

     label4:
        $r4 := @caughtexception;

        r0 = $r4;

        exitmonitor class "java/lang/Math";

        throw r0;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public static native double rint(double);

    public static int round(float)
    {
        float f0, $f1;
        byte $b0;
        double $d0, $d1;
        int $i1;

        f0 := @parameter0: float;

        $b0 = f0 cmpl f0;

        if $b0 == 0 goto label1;

        return 0;

     label1:
        $f1 = 0.5F + f0;

        $d0 = (double) $f1;

        $d1 = staticinvoke <java.lang.Math: double floor(double)>($d0);

        $i1 = (int) $d1;

        return $i1;
    }

    public static long round(double)
    {
        double d0, $d1, $d2;
        byte $b0;
        long $l1;

        d0 := @parameter0: double;

        $b0 = d0 cmpl d0;

        if $b0 == 0 goto label1;

        return 0L;

     label1:
        $d1 = 0.5 + d0;

        $d2 = staticinvoke <java.lang.Math: double floor(double)>($d1);

        $l1 = (long) $d2;

        return $l1;
    }

    public static double scalb(double, int)
    {
        double d0, $d1, $d2, $d3;
        int i0, i4, $i14, $i18;
        long l1, l2, l3, l5, l6, $l8, $l9, $l10, $l11, $l12, $l13, $l19, $l20, $l21, $l22, $l23, $l24, $l25, $l26, $l28, $l29, $l30, $l31, $l32, $l34;
        boolean $z0, $z1;
        byte $b7, $b15, $b16, $b17, $b27, $b33;

        d0 := @parameter0: double;

        i0 := @parameter1: int;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0);

        if $z0 != 0 goto label01;

        $z1 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d0);

        if $z1 != 0 goto label01;

        $b7 = d0 cmpl 0.0;

        if $b7 != 0 goto label02;

     label01:
        return d0;

     label02:
        l1 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(d0);

        l2 = l1 & -9223372036854775808L;

        $l9 = 9218868437227405312L & l1;

        $l8 = $l9 >> 52;

        $l10 = $l8 - 1023L;

        $l11 = (long) i0;

        l3 = $l10 + $l11;

        $l12 = 9223372036854775807L & l1;

        $i14 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>($l12);

        i4 = -12 + $i14;

        if i4 >= 0 goto label04;

        i4 = 0;

     label03:
        $b16 = l3 cmp 1023L;

        if $b16 <= 0 goto label06;

        $b33 = d0 cmpl 0.0;

        if $b33 <= 0 goto label05;

        return #Infinity;

     label04:
        $l13 = (long) i4;

        l3 = l3 - $l13;

        goto label03;

     label05:
        return #-Infinity;

     label06:
        $b15 = l3 cmp -1023L;

        if $b15 > 0 goto label09;

        $l29 = 1023L + l3;

        $l28 = (long) i4;

        l6 = $l29 + $l28;

        $d3 = staticinvoke <java.lang.Math: double abs(double)>(d0);

        $b27 = $d3 cmpg 2.2250738585072014E-308;

        if $b27 >= 0 goto label08;

        $l34 = 4503599627370495L & l1;

        l5 = staticinvoke <java.lang.Math: long shiftLongBits(long,long)>($l34, l6);

     label07:
        $l21 = l5 | l2;

        $d2 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l21);

        return $d2;

     label08:
        $l31 = 4503599627370495L & l1;

        $l30 = 4503599627370496L | $l31;

        $l32 = l6 - 1L;

        l5 = staticinvoke <java.lang.Math: long shiftLongBits(long,long)>($l30, $l32);

        goto label07;

     label09:
        $d1 = staticinvoke <java.lang.Math: double abs(double)>(d0);

        $b17 = $d1 cmpl 2.2250738585072014E-308;

        if $b17 < 0 goto label10;

        $l26 = 1023L + l3;

        $l25 = $l26 << 52;

        $l24 = 4503599627370495L & l1;

        l5 = $l25 | $l24;

        goto label07;

     label10:
        $l19 = 1023L + l3;

        $l20 = $l19 << 52;

        $i18 = i4 + 1;

        $l22 = l1 << $i18;

        $l23 = 4503599627370495L & $l22;

        l5 = $l20 | $l23;

        goto label07;
    }

    public static float scalb(float, int)
    {
        float f0, $f1, $f2, $f3;
        int i0, i1, i2, i3, i4, i5, i6, $i8, $i9, $i10, $i11, $i12, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i27, $i29;
        boolean $z0, $z1;
        byte $b7, $b13, $b26, $b28;

        f0 := @parameter0: float;

        i0 := @parameter1: int;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f0);

        if $z0 != 0 goto label01;

        $z1 = staticinvoke <java.lang.Float: boolean isInfinite(float)>(f0);

        if $z1 != 0 goto label01;

        $b7 = f0 cmpl 0.0F;

        if $b7 != 0 goto label02;

     label01:
        return f0;

     label02:
        i1 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f0);

        i2 = i1 & -2147483648;

        $i8 = 2139095040 & i1;

        $i9 = $i8 >> 23;

        $i10 = -127 + $i9;

        i3 = i0 + $i10;

        $i11 = 2147483647 & i1;

        $i12 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>($i11);

        i4 = -9 + $i12;

        if i4 >= 0 goto label04;

        i4 = 0;

     label03:
        if i3 <= 127 goto label06;

        $b28 = f0 cmpl 0.0F;

        if $b28 <= 0 goto label05;

        return #InfinityF;

     label04:
        i3 = i3 - i4;

        goto label03;

     label05:
        return #-InfinityF;

     label06:
        if i3 > -127 goto label09;

        $i23 = i3 + 127;

        i6 = i4 + $i23;

        $f3 = staticinvoke <java.lang.Math: float abs(float)>(f0);

        $b26 = $f3 cmpg 1.17549435E-38F;

        if $b26 >= 0 goto label08;

        $i29 = i1 & 8388607;

        i5 = staticinvoke <java.lang.Math: int shiftIntBits(int,int)>($i29, i6);

     label07:
        $i18 = i5 | i2;

        $f2 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i18);

        return $f2;

     label08:
        $i27 = i1 & 8388607;

        $i25 = 8388608 | $i27;

        $i24 = i6 - 1;

        i5 = staticinvoke <java.lang.Math: int shiftIntBits(int,int)>($i25, $i24);

        goto label07;

     label09:
        $f1 = staticinvoke <java.lang.Math: float abs(float)>(f0);

        $b13 = $f1 cmpl 1.17549435E-38F;

        if $b13 < 0 goto label10;

        $i20 = i3 + 127;

        $i21 = $i20 << 23;

        $i22 = i1 & 8388607;

        i5 = $i21 | $i22;

        goto label07;

     label10:
        $i15 = i3 + 127;

        $i19 = $i15 << 23;

        $i14 = i4 + 1;

        $i17 = i1 << $i14;

        $i16 = 8388607 & $i17;

        i5 = $i19 | $i16;

        goto label07;
    }

    private static int shiftIntBits(int, int)
    {
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        boolean z0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 <= 0 goto label2;

        i3 = i0 << i1;

     label1:
        return i3;

     label2:
        i2 = neg i1;

        $i4 = 2147483647 & i0;

        $i5 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>($i4);

        $i6 = 32 - i2;

        if $i5 <= $i6 goto label3;

        return 0;

     label3:
        i3 = i0 >> i2;

        $i7 = i2 - 1;

        $i8 = i0 >> $i7;

        $i9 = 1 & $i8;

        if $i9 != 1 goto label6;

        z0 = 1;

     label4:
        if z0 == 0 goto label1;

        $i10 = staticinvoke <java.lang.Integer: int numberOfTrailingZeros(int)>(i0);

        $i11 = i2 - 1;

        if $i10 >= $i11 goto label5;

        i3 = i3 + 1;

     label5:
        $i12 = staticinvoke <java.lang.Integer: int numberOfTrailingZeros(int)>(i0);

        $i13 = i2 - 1;

        if $i12 != $i13 goto label1;

        $i14 = i3 & 1;

        if $i14 != 1 goto label1;

        $i15 = i3 + 1;

        return $i15;

     label6:
        z0 = 0;

        goto label4;
    }

    private static long shiftLongBits(long, long)
    {
        long l0, l1, l2, l3, $l5, $l7, $l8, $l12, $l13, $l14, $l17, $l18, $l21, $l22, $l23, $l25;
        boolean z0;
        byte $b4, $b9, $b16, $b20, $b24, $b26;
        int $i6, $i10, $i11, $i15, $i19, $i27;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 = 0L;

        $b4 = l1 cmp l2;

        if $b4 <= 0 goto label2;

        $i27 = (int) l1;

        l2 = l0 << $i27;

     label1:
        return l2;

     label2:
        l3 = neg l1;

        $l5 = 9223372036854775807L & l0;

        $i6 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>($l5);

        $l8 = (long) $i6;

        $l7 = 64L - l3;

        $b9 = $l8 cmp $l7;

        if $b9 > 0 goto label1;

        $i10 = (int) l3;

        l2 = l0 >> $i10;

        $l12 = l3 - 1L;

        $i11 = (int) $l12;

        $l14 = l0 >> $i11;

        $l13 = 1L & $l14;

        $b16 = $l13 cmp 1L;

        if $b16 != 0 goto label5;

        z0 = 1;

     label3:
        if z0 == 0 goto label1;

        $i15 = staticinvoke <java.lang.Long: int numberOfTrailingZeros(long)>(l0);

        $l17 = (long) $i15;

        $l18 = l3 - 1L;

        $b20 = $l17 cmp $l18;

        if $b20 >= 0 goto label4;

        l2 = l2 + 1L;

     label4:
        $i19 = staticinvoke <java.lang.Long: int numberOfTrailingZeros(long)>(l0);

        $l21 = (long) $i19;

        $l22 = l3 - 1L;

        $b24 = $l21 cmp $l22;

        if $b24 != 0 goto label1;

        $l23 = l2 & 1L;

        $b26 = $l23 cmp 1L;

        if $b26 != 0 goto label1;

        $l25 = l2 + 1L;

        return $l25;

     label5:
        z0 = 0;

        goto label3;
    }

    public static double signum(double)
    {
        double d0, d1;
        boolean $z0;
        byte $b0, $b1;

        d0 := @parameter0: double;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0);

        if $z0 == 0 goto label2;

        d1 = #NaN;

     label1:
        return d1;

     label2:
        d1 = d0;

        $b0 = d0 cmpl 0.0;

        if $b0 <= 0 goto label3;

        return 1.0;

     label3:
        $b1 = d0 cmpg 0.0;

        if $b1 >= 0 goto label1;

        return -1.0;
    }

    public static float signum(float)
    {
        float f0, f1;
        boolean $z0;
        byte $b0, $b1;

        f0 := @parameter0: float;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f0);

        if $z0 == 0 goto label2;

        f1 = #NaNF;

     label1:
        return f1;

     label2:
        f1 = f0;

        $b0 = f0 cmpl 0.0F;

        if $b0 <= 0 goto label3;

        return 1.0F;

     label3:
        $b1 = f0 cmpg 0.0F;

        if $b1 >= 0 goto label1;

        return -1.0F;
    }

    public static native double sin(double);

    public static native double sinh(double);

    public static native double sqrt(double);

    public static native double tan(double);

    public static native double tanh(double);

    public static double toDegrees(double)
    {
        double d0, $d1, $d2;

        d0 := @parameter0: double;

        $d1 = 180.0 * d0;

        $d2 = $d1 / 3.141592653589793;

        return $d2;
    }

    public static double toRadians(double)
    {
        double d0, $d1, $d2;

        d0 := @parameter0: double;

        $d1 = d0 / 180.0;

        $d2 = 3.141592653589793 * $d1;

        return $d2;
    }

    public static double ulp(double)
    {
        double d0, d1, $d2, $d3, $d4;
        boolean $z0;
        byte $b0, $b1;

        d0 := @parameter0: double;

        $z0 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d0);

        if $z0 == 0 goto label1;

        return #Infinity;

     label1:
        $b0 = d0 cmpl 1.7976931348623157E308;

        if $b0 == 0 goto label2;

        $b1 = d0 cmpl -1.7976931348623157E308;

        if $b1 != 0 goto label3;

     label2:
        $d2 = staticinvoke <java.lang.Math: double pow(double,double)>(2.0, 971.0);

        return $d2;

     label3:
        d1 = staticinvoke <java.lang.Math: double abs(double)>(d0);

        $d3 = staticinvoke <java.lang.Math: double nextafter(double,double)>(d1, 1.7976931348623157E308);

        $d4 = $d3 - d1;

        return $d4;
    }

    public static float ulp(float)
    {
        float f0, f1, $f2, $f3, $f4, $f5;
        boolean z0, z1, $z2, $z3, $z4;
        int i0, i1, i2, $i5, $i6, $i7;
        byte $b3, $b4;
        double $d0;

        f0 := @parameter0: float;

        z0 = 1;

        $z2 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f0);

        if $z2 == 0 goto label01;

        return #NaNF;

     label01:
        $z3 = staticinvoke <java.lang.Float: boolean isInfinite(float)>(f0);

        if $z3 == 0 goto label02;

        return #InfinityF;

     label02:
        $b3 = f0 cmpl 3.4028235E38F;

        if $b3 == 0 goto label03;

        $b4 = f0 cmpl -3.4028235E38F;

        if $b4 != 0 goto label04;

     label03:
        $d0 = staticinvoke <java.lang.Math: double pow(double,double)>(2.0, 104.0);

        $f2 = (float) $d0;

        return $f2;

     label04:
        f1 = staticinvoke <java.lang.Math: float abs(float)>(f0);

        i0 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>(f1);

        i1 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>(3.4028235E38F);

        $i5 = 2147483647 & i0;

        if $i5 != 0 goto label05;

        $i7 = -2147483648 & i1;

        $i6 = 1 | $i7;

        $f5 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i6);

        return $f5;

     label05:
        if i0 <= 0 goto label09;

        z1 = z0;

     label06:
        if i0 <= i1 goto label10;

     label07:
        $z4 = z0 ^ z1;

        if $z4 == 0 goto label11;

        i2 = i0 + 1;

     label08:
        $f4 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>(i2);

        $f3 = $f4 - f1;

        return $f3;

     label09:
        z1 = 0;

        goto label06;

     label10:
        z0 = 0;

        goto label07;

     label11:
        i2 = i0 - 1;

        goto label08;
    }

    public static void <clinit>()
    {
        <java.lang.Math: double PI> = 3.141592653589793;

        <java.lang.Math: double E> = 2.718281828459045;

        return;
    }
}
