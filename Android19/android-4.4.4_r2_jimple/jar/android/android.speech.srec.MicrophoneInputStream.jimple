public final class android.speech.srec.MicrophoneInputStream extends java.io.InputStream
{
    private static final java.lang.String TAG;
    private int mAudioRecord;
    private byte[] mOneByte;

    static void <clinit>()
    {
        <android.speech.srec.MicrophoneInputStream: java.lang.String TAG> = "MicrophoneInputStream";

        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("srec_jni");

        return;
    }

    public void <init>(int, int) throws java.io.IOException
    {
        android.speech.srec.MicrophoneInputStream r0;
        int i0, i1, i2, $i3, $i4, $i5;
        byte[] $r1;
        java.io.IOException $r2, $r7;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: android.speech.srec.MicrophoneInputStream;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        r0.<android.speech.srec.MicrophoneInputStream: int mAudioRecord> = 0;

        $r1 = newarray (byte)[1];

        r0.<android.speech.srec.MicrophoneInputStream: byte[] mOneByte> = $r1;

        $i3 = staticinvoke <android.speech.srec.MicrophoneInputStream: int AudioRecordNew(int,int)>(i0, i1);

        r0.<android.speech.srec.MicrophoneInputStream: int mAudioRecord> = $i3;

        $i4 = r0.<android.speech.srec.MicrophoneInputStream: int mAudioRecord>;

        if $i4 != 0 goto label1;

        $r7 = new java.io.IOException;

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("AudioRecord constructor failed - busy?");

        throw $r7;

     label1:
        $i5 = r0.<android.speech.srec.MicrophoneInputStream: int mAudioRecord>;

        i2 = staticinvoke <android.speech.srec.MicrophoneInputStream: int AudioRecordStart(int)>($i5);

        if i2 == 0 goto label2;

        virtualinvoke r0.<android.speech.srec.MicrophoneInputStream: void close()>();

        $r2 = new java.io.IOException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AudioRecord start failed: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label2:
        return;
    }

    private static native void AudioRecordDelete(int) throws java.io.IOException;

    private static native int AudioRecordNew(int, int);

    private static native int AudioRecordRead(int, byte[], int, int) throws java.io.IOException;

    private static native int AudioRecordStart(int);

    private static native void AudioRecordStop(int) throws java.io.IOException;

    public void close() throws java.io.IOException
    {
        android.speech.srec.MicrophoneInputStream r0;
        java.lang.Throwable r1, r2, r3, $r4, $r5, $r6;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.speech.srec.MicrophoneInputStream;

        $i0 = r0.<android.speech.srec.MicrophoneInputStream: int mAudioRecord>;

        if $i0 == 0 goto label4;

     label1:
        $i1 = r0.<android.speech.srec.MicrophoneInputStream: int mAudioRecord>;

        staticinvoke <android.speech.srec.MicrophoneInputStream: void AudioRecordStop(int)>($i1);

     label2:
        $i2 = r0.<android.speech.srec.MicrophoneInputStream: int mAudioRecord>;

        staticinvoke <android.speech.srec.MicrophoneInputStream: void AudioRecordDelete(int)>($i2);

     label3:
        r0.<android.speech.srec.MicrophoneInputStream: int mAudioRecord> = 0;

     label4:
        return;

     label5:
        $r6 := @caughtexception;

        r3 = $r6;

        r0.<android.speech.srec.MicrophoneInputStream: int mAudioRecord> = 0;

        throw r3;

     label6:
        $r5 := @caughtexception;

        r1 = $r5;

     label7:
        $i3 = r0.<android.speech.srec.MicrophoneInputStream: int mAudioRecord>;

        staticinvoke <android.speech.srec.MicrophoneInputStream: void AudioRecordDelete(int)>($i3);

     label8:
        r0.<android.speech.srec.MicrophoneInputStream: int mAudioRecord> = 0;

        throw r1;

     label9:
        $r4 := @caughtexception;

        r2 = $r4;

        r0.<android.speech.srec.MicrophoneInputStream: int mAudioRecord> = 0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label7 to label8 with label9;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.speech.srec.MicrophoneInputStream r0;
        int $i0;
        java.io.IOException $r1;

        r0 := @this: android.speech.srec.MicrophoneInputStream;

        $i0 = r0.<android.speech.srec.MicrophoneInputStream: int mAudioRecord>;

        if $i0 == 0 goto label1;

        virtualinvoke r0.<android.speech.srec.MicrophoneInputStream: void close()>();

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("someone forgot to close MicrophoneInputStream");

        throw $r1;

     label1:
        return;
    }

    public int read() throws java.io.IOException
    {
        android.speech.srec.MicrophoneInputStream r0;
        int $i0, $i1, $i2;
        byte[] $r1, $r2;
        byte $b3;
        short $s4;
        java.lang.IllegalStateException $r3;

        r0 := @this: android.speech.srec.MicrophoneInputStream;

        $i0 = r0.<android.speech.srec.MicrophoneInputStream: int mAudioRecord>;

        if $i0 != 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("not open");

        throw $r3;

     label1:
        $i1 = r0.<android.speech.srec.MicrophoneInputStream: int mAudioRecord>;

        $r1 = r0.<android.speech.srec.MicrophoneInputStream: byte[] mOneByte>;

        $i2 = staticinvoke <android.speech.srec.MicrophoneInputStream: int AudioRecordRead(int,byte[],int,int)>($i1, $r1, 0, 1);

        if $i2 != 1 goto label2;

        $r2 = r0.<android.speech.srec.MicrophoneInputStream: byte[] mOneByte>;

        $b3 = $r2[0];

        $s4 = 255 & $b3;

        return $s4;

     label2:
        return -1;
    }

    public int read(byte[]) throws java.io.IOException
    {
        android.speech.srec.MicrophoneInputStream r0;
        byte[] r1;
        int $i0, $i1, $i2, $i3;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.speech.srec.MicrophoneInputStream;

        r1 := @parameter0: byte[];

        $i0 = r0.<android.speech.srec.MicrophoneInputStream: int mAudioRecord>;

        if $i0 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("not open");

        throw $r2;

     label1:
        $i2 = r0.<android.speech.srec.MicrophoneInputStream: int mAudioRecord>;

        $i1 = lengthof r1;

        $i3 = staticinvoke <android.speech.srec.MicrophoneInputStream: int AudioRecordRead(int,byte[],int,int)>($i2, r1, 0, $i1);

        return $i3;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        android.speech.srec.MicrophoneInputStream r0;
        byte[] r1;
        int i0, i1, $i2, $i3, $i4;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.speech.srec.MicrophoneInputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = r0.<android.speech.srec.MicrophoneInputStream: int mAudioRecord>;

        if $i2 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("not open");

        throw $r2;

     label1:
        $i3 = r0.<android.speech.srec.MicrophoneInputStream: int mAudioRecord>;

        $i4 = staticinvoke <android.speech.srec.MicrophoneInputStream: int AudioRecordRead(int,byte[],int,int)>($i3, r1, i0, i1);

        return $i4;
    }
}
