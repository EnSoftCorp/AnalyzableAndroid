final class org.apache.harmony.security.x509.BasicConstraints$1 extends org.apache.harmony.security.asn1.ASN1Sequence
{

    void <init>(org.apache.harmony.security.asn1.ASN1Type[])
    {
        org.apache.harmony.security.x509.BasicConstraints$1 r0;
        org.apache.harmony.security.asn1.ASN1Type[] r1;
        java.lang.Boolean $r2;

        r0 := @this: org.apache.harmony.security.x509.BasicConstraints$1;

        r1 := @parameter0: org.apache.harmony.security.asn1.ASN1Type[];

        specialinvoke r0.<org.apache.harmony.security.asn1.ASN1Sequence: void <init>(org.apache.harmony.security.asn1.ASN1Type[])>(r1);

        $r2 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke r0.<org.apache.harmony.security.x509.BasicConstraints$1: void setDefault(java.lang.Object,int)>($r2, 0);

        virtualinvoke r0.<org.apache.harmony.security.x509.BasicConstraints$1: void setOptional(int)>(1);

        return;
    }

    public java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream) throws java.io.IOException
    {
        org.apache.harmony.security.x509.BasicConstraints$1 r0;
        org.apache.harmony.security.asn1.BerInputStream r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.harmony.security.x509.BasicConstraints$1;

        r1 := @parameter0: org.apache.harmony.security.asn1.BerInputStream;

        $r2 = r1.<org.apache.harmony.security.asn1.BerInputStream: java.lang.Object content>;

        return $r2;
    }

    protected void getValues(java.lang.Object, java.lang.Object[])
    {
        org.apache.harmony.security.x509.BasicConstraints$1 r0;
        java.lang.Object r1, $r5, $r6;
        java.lang.Object[] r2, r3, $r4;
        java.math.BigInteger $r7;
        byte[] $r8;

        r0 := @this: org.apache.harmony.security.x509.BasicConstraints$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object[];

        $r4 = (java.lang.Object[]) r1;

        r3 = (java.lang.Object[]) $r4;

        $r5 = r3[0];

        r2[0] = $r5;

        $r6 = r3[1];

        $r7 = (java.math.BigInteger) $r6;

        $r8 = virtualinvoke $r7.<java.math.BigInteger: byte[] toByteArray()>();

        r2[1] = $r8;

        return;
    }
}
