class java.net.PlainSocketImpl$PlainSocketInputStream extends java.io.InputStream
{
    private final java.net.PlainSocketImpl socketImpl;

    public void <init>(java.net.PlainSocketImpl)
    {
        java.net.PlainSocketImpl$PlainSocketInputStream r0;
        java.net.PlainSocketImpl r1;

        r0 := @this: java.net.PlainSocketImpl$PlainSocketInputStream;

        r1 := @parameter0: java.net.PlainSocketImpl;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        r0.<java.net.PlainSocketImpl$PlainSocketInputStream: java.net.PlainSocketImpl socketImpl> = r1;

        return;
    }

    public int available() throws java.io.IOException
    {
        java.net.PlainSocketImpl$PlainSocketInputStream r0;
        java.net.PlainSocketImpl $r1;
        int $i0;

        r0 := @this: java.net.PlainSocketImpl$PlainSocketInputStream;

        $r1 = r0.<java.net.PlainSocketImpl$PlainSocketInputStream: java.net.PlainSocketImpl socketImpl>;

        $i0 = virtualinvoke $r1.<java.net.PlainSocketImpl: int available()>();

        return $i0;
    }

    public void close() throws java.io.IOException
    {
        java.net.PlainSocketImpl$PlainSocketInputStream r0;
        java.net.PlainSocketImpl $r1;

        r0 := @this: java.net.PlainSocketImpl$PlainSocketInputStream;

        $r1 = r0.<java.net.PlainSocketImpl$PlainSocketInputStream: java.net.PlainSocketImpl socketImpl>;

        virtualinvoke $r1.<java.net.PlainSocketImpl: void close()>();

        return;
    }

    public int read() throws java.io.IOException
    {
        java.net.PlainSocketImpl$PlainSocketInputStream r0;
        int $i0;

        r0 := @this: java.net.PlainSocketImpl$PlainSocketInputStream;

        $i0 = staticinvoke <libcore.io.Streams: int readSingleByte(java.io.InputStream)>(r0);

        return $i0;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        java.net.PlainSocketImpl$PlainSocketInputStream r0;
        byte[] r1;
        int i0, i1, $i2;
        java.net.PlainSocketImpl $r2;

        r0 := @this: java.net.PlainSocketImpl$PlainSocketInputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<java.net.PlainSocketImpl$PlainSocketInputStream: java.net.PlainSocketImpl socketImpl>;

        $i2 = staticinvoke <java.net.PlainSocketImpl: int access$000(java.net.PlainSocketImpl,byte[],int,int)>($r2, r1, i0, i1);

        return $i2;
    }
}
