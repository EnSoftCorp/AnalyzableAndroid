public abstract class android.widget.AbsListView extends android.widget.AdapterView implements android.text.TextWatcher, android.view.ViewTreeObserver$OnGlobalLayoutListener, android.widget.Filter$FilterListener, android.view.ViewTreeObserver$OnTouchModeChangeListener, android.widget.RemoteViewsAdapter$RemoteAdapterConnectionCallback
{
    private static final int CHECK_POSITION_SEARCH_DISTANCE;
    public static final int CHOICE_MODE_MULTIPLE;
    public static final int CHOICE_MODE_MULTIPLE_MODAL;
    public static final int CHOICE_MODE_NONE;
    public static final int CHOICE_MODE_SINGLE;
    private static final int INVALID_POINTER;
    static final int LAYOUT_FORCE_BOTTOM;
    static final int LAYOUT_FORCE_TOP;
    static final int LAYOUT_MOVE_SELECTION;
    static final int LAYOUT_NORMAL;
    static final int LAYOUT_SET_SELECTION;
    static final int LAYOUT_SPECIFIC;
    static final int LAYOUT_SYNC;
    static final int OVERSCROLL_LIMIT_DIVISOR;
    private static final boolean PROFILE_FLINGING;
    private static final boolean PROFILE_SCROLLING;
    private static final java.lang.String TAG;
    static final int TOUCH_MODE_DONE_WAITING;
    static final int TOUCH_MODE_DOWN;
    static final int TOUCH_MODE_FLING;
    private static final int TOUCH_MODE_OFF;
    private static final int TOUCH_MODE_ON;
    static final int TOUCH_MODE_OVERFLING;
    static final int TOUCH_MODE_OVERSCROLL;
    static final int TOUCH_MODE_REST;
    static final int TOUCH_MODE_SCROLL;
    static final int TOUCH_MODE_TAP;
    private static final int TOUCH_MODE_UNKNOWN;
    public static final int TRANSCRIPT_MODE_ALWAYS_SCROLL;
    public static final int TRANSCRIPT_MODE_DISABLED;
    public static final int TRANSCRIPT_MODE_NORMAL;
    static final android.view.animation.Interpolator sLinearInterpolator;
    private android.widget.AbsListView$ListItemAccessibilityDelegate mAccessibilityDelegate;
    private int mActivePointerId;
    android.widget.ListAdapter mAdapter;
    boolean mAdapterHasStableIds;
    private int mCacheColorHint;
    boolean mCachingActive;
    boolean mCachingStarted;
    android.util.SparseBooleanArray mCheckStates;
    android.util.LongSparseArray mCheckedIdStates;
    int mCheckedItemCount;
    android.view.ActionMode mChoiceActionMode;
    int mChoiceMode;
    private java.lang.Runnable mClearScrollingCache;
    private android.view.ContextMenu$ContextMenuInfo mContextMenuInfo;
    android.widget.AbsListView$AdapterDataSetObserver mDataSetObserver;
    private android.view.inputmethod.InputConnection mDefInputConnection;
    private boolean mDeferNotifyDataSetChanged;
    private float mDensityScale;
    private int mDirection;
    boolean mDrawSelectorOnTop;
    private android.widget.EdgeEffect mEdgeGlowBottom;
    private android.widget.EdgeEffect mEdgeGlowTop;
    boolean mFastScrollAlwaysVisible;
    boolean mFastScrollEnabled;
    private android.widget.FastScroller mFastScroller;
    private boolean mFiltered;
    private int mFirstPositionDistanceGuess;
    private boolean mFlingProfilingStarted;
    private android.widget.AbsListView$FlingRunnable mFlingRunnable;
    private android.os.StrictMode$Span mFlingStrictSpan;
    private boolean mForceTranscriptScroll;
    private boolean mGlobalLayoutListenerAddedFilter;
    private int mGlowPaddingLeft;
    private int mGlowPaddingRight;
    private boolean mIsChildViewEnabled;
    final boolean[] mIsScrap;
    private int mLastAccessibilityScrollEventFromIndex;
    private int mLastAccessibilityScrollEventToIndex;
    private int mLastHandledItemCount;
    private int mLastPositionDistanceGuess;
    private int mLastScrollState;
    private int mLastTouchMode;
    int mLastY;
    int mLayoutMode;
    android.graphics.Rect mListPadding;
    private int mMaximumVelocity;
    private int mMinimumVelocity;
    int mMotionCorrection;
    int mMotionPosition;
    int mMotionViewNewTop;
    int mMotionViewOriginalTop;
    int mMotionX;
    int mMotionY;
    android.widget.AbsListView$MultiChoiceModeWrapper mMultiChoiceModeCallback;
    private android.widget.AbsListView$OnScrollListener mOnScrollListener;
    int mOverflingDistance;
    int mOverscrollDistance;
    int mOverscrollMax;
    private final java.lang.Thread mOwnerThread;
    private android.widget.AbsListView$CheckForKeyLongPress mPendingCheckForKeyLongPress;
    private android.widget.AbsListView$CheckForLongPress mPendingCheckForLongPress;
    private java.lang.Runnable mPendingCheckForTap;
    private android.widget.AbsListView$SavedState mPendingSync;
    private android.widget.AbsListView$PerformClick mPerformClick;
    android.widget.PopupWindow mPopup;
    private boolean mPopupHidden;
    java.lang.Runnable mPositionScrollAfterLayout;
    android.widget.AbsListView$PositionScroller mPositionScroller;
    private android.widget.AbsListView$InputConnectionWrapper mPublicInputConnection;
    final android.widget.AbsListView$RecycleBin mRecycler;
    private android.widget.RemoteViewsAdapter mRemoteAdapter;
    int mResurrectToPosition;
    android.view.View mScrollDown;
    private boolean mScrollProfilingStarted;
    private android.os.StrictMode$Span mScrollStrictSpan;
    android.view.View mScrollUp;
    boolean mScrollingCacheEnabled;
    int mSelectedTop;
    int mSelectionBottomPadding;
    int mSelectionLeftPadding;
    int mSelectionRightPadding;
    int mSelectionTopPadding;
    android.graphics.drawable.Drawable mSelector;
    int mSelectorPosition;
    android.graphics.Rect mSelectorRect;
    private boolean mSmoothScrollbarEnabled;
    boolean mStackFromBottom;
    android.widget.EditText mTextFilter;
    private boolean mTextFilterEnabled;
    private android.graphics.Rect mTouchFrame;
    int mTouchMode;
    private java.lang.Runnable mTouchModeReset;
    private int mTouchSlop;
    private int mTranscriptMode;
    private float mVelocityScale;
    private android.view.VelocityTracker mVelocityTracker;
    int mWidthMeasureSpec;

    static void <clinit>()
    {
        android.view.animation.LinearInterpolator $r0;

        <android.widget.AbsListView: int TRANSCRIPT_MODE_NORMAL> = 1;

        <android.widget.AbsListView: int TRANSCRIPT_MODE_DISABLED> = 0;

        <android.widget.AbsListView: int TRANSCRIPT_MODE_ALWAYS_SCROLL> = 2;

        <android.widget.AbsListView: int TOUCH_MODE_UNKNOWN> = -1;

        <android.widget.AbsListView: int TOUCH_MODE_TAP> = 1;

        <android.widget.AbsListView: int TOUCH_MODE_SCROLL> = 3;

        <android.widget.AbsListView: int TOUCH_MODE_REST> = -1;

        <android.widget.AbsListView: int TOUCH_MODE_OVERSCROLL> = 5;

        <android.widget.AbsListView: int TOUCH_MODE_OVERFLING> = 6;

        <android.widget.AbsListView: int TOUCH_MODE_ON> = 0;

        <android.widget.AbsListView: int TOUCH_MODE_OFF> = 1;

        <android.widget.AbsListView: int TOUCH_MODE_FLING> = 4;

        <android.widget.AbsListView: int TOUCH_MODE_DOWN> = 0;

        <android.widget.AbsListView: int TOUCH_MODE_DONE_WAITING> = 2;

        <android.widget.AbsListView: java.lang.String TAG> = "AbsListView";

        <android.widget.AbsListView: boolean PROFILE_SCROLLING> = 0;

        <android.widget.AbsListView: boolean PROFILE_FLINGING> = 0;

        <android.widget.AbsListView: int OVERSCROLL_LIMIT_DIVISOR> = 3;

        <android.widget.AbsListView: int LAYOUT_SYNC> = 5;

        <android.widget.AbsListView: int LAYOUT_SPECIFIC> = 4;

        <android.widget.AbsListView: int LAYOUT_SET_SELECTION> = 2;

        <android.widget.AbsListView: int LAYOUT_NORMAL> = 0;

        <android.widget.AbsListView: int LAYOUT_MOVE_SELECTION> = 6;

        <android.widget.AbsListView: int LAYOUT_FORCE_TOP> = 1;

        <android.widget.AbsListView: int LAYOUT_FORCE_BOTTOM> = 3;

        <android.widget.AbsListView: int INVALID_POINTER> = -1;

        <android.widget.AbsListView: int CHOICE_MODE_SINGLE> = 1;

        <android.widget.AbsListView: int CHOICE_MODE_NONE> = 0;

        <android.widget.AbsListView: int CHOICE_MODE_MULTIPLE_MODAL> = 3;

        <android.widget.AbsListView: int CHOICE_MODE_MULTIPLE> = 2;

        <android.widget.AbsListView: int CHECK_POSITION_SEARCH_DISTANCE> = 20;

        $r0 = new android.view.animation.LinearInterpolator;

        specialinvoke $r0.<android.view.animation.LinearInterpolator: void <init>()>();

        <android.widget.AbsListView: android.view.animation.Interpolator sLinearInterpolator> = $r0;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.widget.AbsListView r0;
        android.content.Context r1;
        android.content.res.TypedArray r2;
        android.graphics.Rect $r3, $r5;
        android.widget.AbsListView$RecycleBin $r4;
        boolean[] $r6;
        java.lang.Thread $r7;
        int[] $r8;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.AdapterView: void <init>(android.content.Context)>(r1);

        r0.<android.widget.AbsListView: int mChoiceMode> = 0;

        r0.<android.widget.AbsListView: int mLayoutMode> = 0;

        r0.<android.widget.AbsListView: boolean mDeferNotifyDataSetChanged> = 0;

        r0.<android.widget.AbsListView: boolean mDrawSelectorOnTop> = 0;

        r0.<android.widget.AbsListView: int mSelectorPosition> = -1;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<android.widget.AbsListView: android.graphics.Rect mSelectorRect> = $r3;

        $r4 = new android.widget.AbsListView$RecycleBin;

        specialinvoke $r4.<android.widget.AbsListView$RecycleBin: void <init>(android.widget.AbsListView)>(r0);

        r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler> = $r4;

        r0.<android.widget.AbsListView: int mSelectionLeftPadding> = 0;

        r0.<android.widget.AbsListView: int mSelectionTopPadding> = 0;

        r0.<android.widget.AbsListView: int mSelectionRightPadding> = 0;

        r0.<android.widget.AbsListView: int mSelectionBottomPadding> = 0;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<android.widget.AbsListView: android.graphics.Rect mListPadding> = $r5;

        r0.<android.widget.AbsListView: int mWidthMeasureSpec> = 0;

        r0.<android.widget.AbsListView: int mTouchMode> = -1;

        r0.<android.widget.AbsListView: int mSelectedTop> = 0;

        r0.<android.widget.AbsListView: boolean mSmoothScrollbarEnabled> = 1;

        r0.<android.widget.AbsListView: int mResurrectToPosition> = -1;

        r0.<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo mContextMenuInfo> = null;

        r0.<android.widget.AbsListView: int mLastTouchMode> = -1;

        r0.<android.widget.AbsListView: boolean mScrollProfilingStarted> = 0;

        r0.<android.widget.AbsListView: boolean mFlingProfilingStarted> = 0;

        r0.<android.widget.AbsListView: android.os.StrictMode$Span mScrollStrictSpan> = null;

        r0.<android.widget.AbsListView: android.os.StrictMode$Span mFlingStrictSpan> = null;

        r0.<android.widget.AbsListView: int mLastScrollState> = 0;

        r0.<android.widget.AbsListView: float mVelocityScale> = 1.0F;

        $r6 = newarray (boolean)[1];

        r0.<android.widget.AbsListView: boolean[] mIsScrap> = $r6;

        r0.<android.widget.AbsListView: int mActivePointerId> = -1;

        r0.<android.widget.AbsListView: int mDirection> = 0;

        specialinvoke r0.<android.widget.AbsListView: void initAbsListView()>();

        $r7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r0.<android.widget.AbsListView: java.lang.Thread mOwnerThread> = $r7;

        virtualinvoke r0.<android.widget.AbsListView: void setVerticalScrollBarEnabled(boolean)>(1);

        $r8 = <com.android.internal.R$styleable: int[] View>;

        r2 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>($r8);

        virtualinvoke r0.<android.widget.AbsListView: void initializeScrollbars(android.content.res.TypedArray)>(r2);

        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.AbsListView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.AbsListView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 16842858);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.AbsListView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, $i1, $i2, $i3;
        android.content.res.TypedArray r3;
        android.graphics.drawable.Drawable r4;
        android.graphics.Rect $r5, $r7;
        android.widget.AbsListView$RecycleBin $r6;
        boolean[] $r8;
        java.lang.Thread $r9;
        int[] $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.AdapterView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        r0.<android.widget.AbsListView: int mChoiceMode> = 0;

        r0.<android.widget.AbsListView: int mLayoutMode> = 0;

        r0.<android.widget.AbsListView: boolean mDeferNotifyDataSetChanged> = 0;

        r0.<android.widget.AbsListView: boolean mDrawSelectorOnTop> = 0;

        r0.<android.widget.AbsListView: int mSelectorPosition> = -1;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<android.widget.AbsListView: android.graphics.Rect mSelectorRect> = $r5;

        $r6 = new android.widget.AbsListView$RecycleBin;

        specialinvoke $r6.<android.widget.AbsListView$RecycleBin: void <init>(android.widget.AbsListView)>(r0);

        r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler> = $r6;

        r0.<android.widget.AbsListView: int mSelectionLeftPadding> = 0;

        r0.<android.widget.AbsListView: int mSelectionTopPadding> = 0;

        r0.<android.widget.AbsListView: int mSelectionRightPadding> = 0;

        r0.<android.widget.AbsListView: int mSelectionBottomPadding> = 0;

        $r7 = new android.graphics.Rect;

        specialinvoke $r7.<android.graphics.Rect: void <init>()>();

        r0.<android.widget.AbsListView: android.graphics.Rect mListPadding> = $r7;

        r0.<android.widget.AbsListView: int mWidthMeasureSpec> = 0;

        r0.<android.widget.AbsListView: int mTouchMode> = -1;

        r0.<android.widget.AbsListView: int mSelectedTop> = 0;

        r0.<android.widget.AbsListView: boolean mSmoothScrollbarEnabled> = 1;

        r0.<android.widget.AbsListView: int mResurrectToPosition> = -1;

        r0.<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo mContextMenuInfo> = null;

        r0.<android.widget.AbsListView: int mLastTouchMode> = -1;

        r0.<android.widget.AbsListView: boolean mScrollProfilingStarted> = 0;

        r0.<android.widget.AbsListView: boolean mFlingProfilingStarted> = 0;

        r0.<android.widget.AbsListView: android.os.StrictMode$Span mScrollStrictSpan> = null;

        r0.<android.widget.AbsListView: android.os.StrictMode$Span mFlingStrictSpan> = null;

        r0.<android.widget.AbsListView: int mLastScrollState> = 0;

        r0.<android.widget.AbsListView: float mVelocityScale> = 1.0F;

        $r8 = newarray (boolean)[1];

        r0.<android.widget.AbsListView: boolean[] mIsScrap> = $r8;

        r0.<android.widget.AbsListView: int mActivePointerId> = -1;

        r0.<android.widget.AbsListView: int mDirection> = 0;

        specialinvoke r0.<android.widget.AbsListView: void initAbsListView()>();

        $r9 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r0.<android.widget.AbsListView: java.lang.Thread mOwnerThread> = $r9;

        $r10 = <com.android.internal.R$styleable: int[] AbsListView>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r10, i0, 0);

        r4 = virtualinvoke r3.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(0);

        if r4 == null goto label1;

        virtualinvoke r0.<android.widget.AbsListView: void setSelector(android.graphics.drawable.Drawable)>(r4);

     label1:
        $z0 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(1, 0);

        r0.<android.widget.AbsListView: boolean mDrawSelectorOnTop> = $z0;

        $z1 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(2, 0);

        virtualinvoke r0.<android.widget.AbsListView: void setStackFromBottom(boolean)>($z1);

        $z3 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(3, 1);

        virtualinvoke r0.<android.widget.AbsListView: void setScrollingCacheEnabled(boolean)>($z3);

        $z2 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(4, 0);

        virtualinvoke r0.<android.widget.AbsListView: void setTextFilterEnabled(boolean)>($z2);

        $i2 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(5, 0);

        virtualinvoke r0.<android.widget.AbsListView: void setTranscriptMode(int)>($i2);

        $i1 = virtualinvoke r3.<android.content.res.TypedArray: int getColor(int,int)>(6, 0);

        virtualinvoke r0.<android.widget.AbsListView: void setCacheColorHint(int)>($i1);

        $z5 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(8, 0);

        virtualinvoke r0.<android.widget.AbsListView: void setFastScrollEnabled(boolean)>($z5);

        $z4 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(9, 1);

        virtualinvoke r0.<android.widget.AbsListView: void setSmoothScrollbarEnabled(boolean)>($z4);

        $i3 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(7, 0);

        virtualinvoke r0.<android.widget.AbsListView: void setChoiceMode(int)>($i3);

        $z6 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(10, 0);

        virtualinvoke r0.<android.widget.AbsListView: void setFastScrollAlwaysVisible(boolean)>($z6);

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    private boolean acceptFilter()
    {
        android.widget.AbsListView r0;
        boolean $z0, $z1;
        android.widget.Adapter $r1, $r2;
        android.widget.Filterable $r3;
        android.widget.Filter $r4;

        r0 := @this: android.widget.AbsListView;

        $z0 = r0.<android.widget.AbsListView: boolean mTextFilterEnabled>;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<android.widget.AbsListView: android.widget.Adapter getAdapter()>();

        $z1 = $r1 instanceof android.widget.Filterable;

        if $z1 == 0 goto label1;

        $r2 = virtualinvoke r0.<android.widget.AbsListView: android.widget.Adapter getAdapter()>();

        $r3 = (android.widget.Filterable) $r2;

        $r4 = interfaceinvoke $r3.<android.widget.Filterable: android.widget.Filter getFilter()>();

        if $r4 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    static void access$000(android.widget.AbsListView, boolean)
    {
        android.widget.AbsListView r0;
        boolean z0;

        r0 := @parameter0: android.widget.AbsListView;

        z0 := @parameter1: boolean;

        specialinvoke r0.<android.widget.AbsListView: void setFastScrollerEnabledUiThread(boolean)>(z0);

        return;
    }

    static void access$100(android.widget.AbsListView, boolean)
    {
        android.widget.AbsListView r0;
        boolean z0;

        r0 := @parameter0: android.widget.AbsListView;

        z0 := @parameter1: boolean;

        specialinvoke r0.<android.widget.AbsListView: void setFastScrollerAlwaysVisibleUiThread(boolean)>(z0);

        return;
    }

    static java.lang.Runnable access$1002(android.widget.AbsListView, java.lang.Runnable)
    {
        android.widget.AbsListView r0;
        java.lang.Runnable r1;

        r0 := @parameter0: android.widget.AbsListView;

        r1 := @parameter1: java.lang.Runnable;

        r0.<android.widget.AbsListView: java.lang.Runnable mTouchModeReset> = r1;

        return r1;
    }

    static int access$1100(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mActivePointerId>;

        return $i0;
    }

    static android.view.VelocityTracker access$1200(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        android.view.VelocityTracker $r1;

        r0 := @parameter0: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        return $r1;
    }

    static int access$1400(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mMaximumVelocity>;

        return $i0;
    }

    static int access$1500(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mMinimumVelocity>;

        return $i0;
    }

    static android.os.StrictMode$Span access$1600(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        android.os.StrictMode$Span $r1;

        r0 := @parameter0: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.os.StrictMode$Span mFlingStrictSpan>;

        return $r1;
    }

    static android.os.StrictMode$Span access$1602(android.widget.AbsListView, android.os.StrictMode$Span)
    {
        android.widget.AbsListView r0;
        android.os.StrictMode$Span r1;

        r0 := @parameter0: android.widget.AbsListView;

        r1 := @parameter1: android.os.StrictMode$Span;

        r0.<android.widget.AbsListView: android.os.StrictMode$Span mFlingStrictSpan> = r1;

        return r1;
    }

    static int access$1700(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mScrollY>;

        return $i0;
    }

    static int access$1800(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mScrollY>;

        return $i0;
    }

    static int access$1900(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mScrollY>;

        return $i0;
    }

    static boolean access$2000(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        boolean $z0;

        r0 := @parameter0: android.widget.AbsListView;

        $z0 = specialinvoke r0.<android.widget.AbsListView: boolean contentFits()>();

        return $z0;
    }

    static android.widget.EdgeEffect access$2100(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        android.widget.EdgeEffect $r1;

        r0 := @parameter0: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        return $r1;
    }

    static android.widget.EdgeEffect access$2200(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        android.widget.EdgeEffect $r1;

        r0 := @parameter0: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        return $r1;
    }

    static void access$2300(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;

        r0 := @parameter0: android.widget.AbsListView;

        specialinvoke r0.<android.widget.AbsListView: void clearScrollingCache()>();

        return;
    }

    static int access$2400(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mPaddingBottom>;

        return $i0;
    }

    static int access$2500(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mPaddingTop>;

        return $i0;
    }

    static int access$2600(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mPaddingBottom>;

        return $i0;
    }

    static int access$2700(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mPaddingTop>;

        return $i0;
    }

    static int access$2800(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mScrollY>;

        return $i0;
    }

    static boolean access$2900(android.widget.AbsListView, int, int, int, int, int, int, int, int, boolean)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, i3, i4, i5, i6, i7;
        boolean z0, $z1;

        r0 := @parameter0: android.widget.AbsListView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        i6 := @parameter7: int;

        i7 := @parameter8: int;

        z0 := @parameter9: boolean;

        $z1 = virtualinvoke r0.<android.widget.AbsListView: boolean overScrollBy(int,int,int,int,int,int,int,int,boolean)>(i0, i1, i2, i3, i4, i5, i6, i7, z0);

        return $z1;
    }

    static int access$3000(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mScrollY>;

        return $i0;
    }

    static boolean access$3100(android.widget.AbsListView, int, int, int, int, int, int, int, int, boolean)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, i3, i4, i5, i6, i7;
        boolean z0, $z1;

        r0 := @parameter0: android.widget.AbsListView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        i6 := @parameter7: int;

        i7 := @parameter8: int;

        z0 := @parameter9: boolean;

        $z1 = virtualinvoke r0.<android.widget.AbsListView: boolean overScrollBy(int,int,int,int,int,int,int,int,boolean)>(i0, i1, i2, i3, i4, i5, i6, i7, z0);

        return $z1;
    }

    static android.content.Context access$3200(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        android.content.Context $r1;

        r0 := @parameter0: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.content.Context mContext>;

        return $r1;
    }

    static void access$3300(android.widget.AbsListView, boolean)
    {
        android.widget.AbsListView r0;
        boolean z0;

        r0 := @parameter0: android.widget.AbsListView;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<android.widget.AbsListView: void setChildrenDrawnWithCacheEnabled(boolean)>(z0);

        return;
    }

    static int access$3400(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mPersistentDrawingCache>;

        return $i0;
    }

    static void access$3500(android.widget.AbsListView, boolean)
    {
        android.widget.AbsListView r0;
        boolean z0;

        r0 := @parameter0: android.widget.AbsListView;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<android.widget.AbsListView: void setChildrenDrawingCacheEnabled(boolean)>(z0);

        return;
    }

    static android.widget.EditText access$3600(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        android.widget.EditText $r1;

        r0 := @parameter0: android.widget.AbsListView;

        $r1 = specialinvoke r0.<android.widget.AbsListView: android.widget.EditText getTextFilterInput()>();

        return $r1;
    }

    static android.view.inputmethod.InputConnection access$3700(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        android.view.inputmethod.InputConnection $r1;

        r0 := @parameter0: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.view.inputmethod.InputConnection mDefInputConnection>;

        return $r1;
    }

    static android.widget.FastScroller access$3900(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        android.widget.FastScroller $r1;

        r0 := @parameter0: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        return $r1;
    }

    static int access$400(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = virtualinvoke r0.<android.widget.AbsListView: int getWindowAttachCount()>();

        return $i0;
    }

    static void access$4000(android.widget.AbsListView, android.view.View, boolean)
    {
        android.widget.AbsListView r0;
        android.view.View r1;
        boolean z0;

        r0 := @parameter0: android.widget.AbsListView;

        r1 := @parameter1: android.view.View;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<android.widget.AbsListView: void removeDetachedView(android.view.View,boolean)>(r1, z0);

        return;
    }

    static void access$4100(android.widget.AbsListView, android.view.View, boolean)
    {
        android.widget.AbsListView r0;
        android.view.View r1;
        boolean z0;

        r0 := @parameter0: android.widget.AbsListView;

        r1 := @parameter1: android.view.View;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<android.widget.AbsListView: void removeDetachedView(android.view.View,boolean)>(r1, z0);

        return;
    }

    static void access$4200(android.widget.AbsListView, android.view.View, boolean)
    {
        android.widget.AbsListView r0;
        android.view.View r1;
        boolean z0;

        r0 := @parameter0: android.widget.AbsListView;

        r1 := @parameter1: android.view.View;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<android.widget.AbsListView: void removeDetachedView(android.view.View,boolean)>(r1, z0);

        return;
    }

    static void access$4300(android.widget.AbsListView, android.view.View, boolean)
    {
        android.widget.AbsListView r0;
        android.view.View r1;
        boolean z0;

        r0 := @parameter0: android.widget.AbsListView;

        r1 := @parameter1: android.view.View;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<android.widget.AbsListView: void removeDetachedView(android.view.View,boolean)>(r1, z0);

        return;
    }

    static void access$4400(android.widget.AbsListView, android.view.View, boolean)
    {
        android.widget.AbsListView r0;
        android.view.View r1;
        boolean z0;

        r0 := @parameter0: android.widget.AbsListView;

        r1 := @parameter1: android.view.View;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<android.widget.AbsListView: void removeDetachedView(android.view.View,boolean)>(r1, z0);

        return;
    }

    static void access$4500(android.widget.AbsListView, android.view.View, boolean)
    {
        android.widget.AbsListView r0;
        android.view.View r1;
        boolean z0;

        r0 := @parameter0: android.widget.AbsListView;

        r1 := @parameter1: android.view.View;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<android.widget.AbsListView: void removeDetachedView(android.view.View,boolean)>(r1, z0);

        return;
    }

    static void access$4600(android.widget.AbsListView, android.view.View, boolean)
    {
        android.widget.AbsListView r0;
        android.view.View r1;
        boolean z0;

        r0 := @parameter0: android.widget.AbsListView;

        r1 := @parameter1: android.view.View;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<android.widget.AbsListView: void removeDetachedView(android.view.View,boolean)>(r1, z0);

        return;
    }

    static void access$4700(android.widget.AbsListView, android.view.View, boolean)
    {
        android.widget.AbsListView r0;
        android.view.View r1;
        boolean z0;

        r0 := @parameter0: android.widget.AbsListView;

        r1 := @parameter1: android.view.View;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<android.widget.AbsListView: void removeDetachedView(android.view.View,boolean)>(r1, z0);

        return;
    }

    static void access$4800(android.widget.AbsListView, android.view.View, boolean)
    {
        android.widget.AbsListView r0;
        android.view.View r1;
        boolean z0;

        r0 := @parameter0: android.widget.AbsListView;

        r1 := @parameter1: android.view.View;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<android.widget.AbsListView: void removeDetachedView(android.view.View,boolean)>(r1, z0);

        return;
    }

    static void access$4900(android.widget.AbsListView, android.view.View, boolean)
    {
        android.widget.AbsListView r0;
        android.view.View r1;
        boolean z0;

        r0 := @parameter0: android.widget.AbsListView;

        r1 := @parameter1: android.view.View;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<android.widget.AbsListView: void removeDetachedView(android.view.View,boolean)>(r1, z0);

        return;
    }

    static int access$500(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = virtualinvoke r0.<android.widget.AbsListView: int getWindowAttachCount()>();

        return $i0;
    }

    static android.widget.AbsListView$CheckForLongPress access$700(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        android.widget.AbsListView$CheckForLongPress $r1;

        r0 := @parameter0: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForLongPress mPendingCheckForLongPress>;

        return $r1;
    }

    static android.widget.AbsListView$CheckForLongPress access$702(android.widget.AbsListView, android.widget.AbsListView$CheckForLongPress)
    {
        android.widget.AbsListView r0;
        android.widget.AbsListView$CheckForLongPress r1;

        r0 := @parameter0: android.widget.AbsListView;

        r1 := @parameter1: android.widget.AbsListView$CheckForLongPress;

        r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForLongPress mPendingCheckForLongPress> = r1;

        return r1;
    }

    private void clearScrollingCache()
    {
        android.widget.AbsListView r0;
        boolean $z0;
        java.lang.Runnable $r1, $r2;
        android.widget.AbsListView$4 $r3;

        r0 := @this: android.widget.AbsListView;

        $z0 = virtualinvoke r0.<android.widget.AbsListView: boolean isHardwareAccelerated()>();

        if $z0 != 0 goto label2;

        $r1 = r0.<android.widget.AbsListView: java.lang.Runnable mClearScrollingCache>;

        if $r1 != null goto label1;

        $r3 = new android.widget.AbsListView$4;

        specialinvoke $r3.<android.widget.AbsListView$4: void <init>(android.widget.AbsListView)>(r0);

        r0.<android.widget.AbsListView: java.lang.Runnable mClearScrollingCache> = $r3;

     label1:
        $r2 = r0.<android.widget.AbsListView: java.lang.Runnable mClearScrollingCache>;

        virtualinvoke r0.<android.widget.AbsListView: boolean post(java.lang.Runnable)>($r2);

     label2:
        return;
    }

    private boolean contentFits()
    {
        android.widget.AbsListView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.view.View $r1, $r3;
        android.graphics.Rect $r2, $r4;

        r0 := @this: android.widget.AbsListView;

        i0 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if i0 != 0 goto label2;

     label1:
        return 1;

     label2:
        $i1 = r0.<android.widget.AbsListView: int mItemCount>;

        if i0 == $i1 goto label3;

        return 0;

     label3:
        $r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(0);

        $i2 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $r2 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i3 = $r2.<android.graphics.Rect: int top>;

        if $i2 < $i3 goto label4;

        $i4 = i0 - 1;

        $r3 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i4);

        $i5 = virtualinvoke $r3.<android.view.View: int getBottom()>();

        $i6 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $r4 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i7 = $r4.<android.graphics.Rect: int bottom>;

        $i8 = $i6 - $i7;

        if $i5 <= $i8 goto label1;

     label4:
        return 0;
    }

    private void createScrollingCache()
    {
        android.widget.AbsListView r0;
        boolean $z0, $z1, $z2;

        r0 := @this: android.widget.AbsListView;

        $z0 = r0.<android.widget.AbsListView: boolean mScrollingCacheEnabled>;

        if $z0 == 0 goto label1;

        $z1 = r0.<android.widget.AbsListView: boolean mCachingStarted>;

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r0.<android.widget.AbsListView: boolean isHardwareAccelerated()>();

        if $z2 != 0 goto label1;

        virtualinvoke r0.<android.widget.AbsListView: void setChildrenDrawnWithCacheEnabled(boolean)>(1);

        virtualinvoke r0.<android.widget.AbsListView: void setChildrenDrawingCacheEnabled(boolean)>(1);

        r0.<android.widget.AbsListView: boolean mCachingActive> = 1;

        r0.<android.widget.AbsListView: boolean mCachingStarted> = 1;

     label1:
        return;
    }

    private void createTextFilter(boolean)
    {
        android.widget.AbsListView r0;
        boolean z0;
        android.widget.PopupWindow r1, $r2, $r3, $r4, $r5;
        android.content.Context $r6;
        android.widget.EditText $r7;
        android.view.ViewTreeObserver $r8;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        $r2 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        if $r2 != null goto label1;

        $r5 = new android.widget.PopupWindow;

        $r6 = virtualinvoke r0.<android.widget.AbsListView: android.content.Context getContext()>();

        specialinvoke $r5.<android.widget.PopupWindow: void <init>(android.content.Context)>($r6);

        r1 = $r5;

        virtualinvoke r1.<android.widget.PopupWindow: void setFocusable(boolean)>(0);

        virtualinvoke r1.<android.widget.PopupWindow: void setTouchable(boolean)>(0);

        virtualinvoke r1.<android.widget.PopupWindow: void setInputMethodMode(int)>(2);

        $r7 = specialinvoke r0.<android.widget.AbsListView: android.widget.EditText getTextFilterInput()>();

        virtualinvoke r1.<android.widget.PopupWindow: void setContentView(android.view.View)>($r7);

        virtualinvoke r1.<android.widget.PopupWindow: void setWidth(int)>(-2);

        virtualinvoke r1.<android.widget.PopupWindow: void setHeight(int)>(-2);

        virtualinvoke r1.<android.widget.PopupWindow: void setBackgroundDrawable(android.graphics.drawable.Drawable)>(null);

        r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup> = r1;

        $r8 = virtualinvoke r0.<android.widget.AbsListView: android.view.ViewTreeObserver getViewTreeObserver()>();

        virtualinvoke $r8.<android.view.ViewTreeObserver: void addOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>(r0);

        r0.<android.widget.AbsListView: boolean mGlobalLayoutListenerAddedFilter> = 1;

     label1:
        if z0 == 0 goto label2;

        $r4 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        virtualinvoke $r4.<android.widget.PopupWindow: void setAnimationStyle(int)>(16974317);

        return;

     label2:
        $r3 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        virtualinvoke $r3.<android.widget.PopupWindow: void setAnimationStyle(int)>(16974318);

        return;
    }

    private void dismissPopup()
    {
        android.widget.AbsListView r0;
        android.widget.PopupWindow $r1, $r2;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        virtualinvoke $r2.<android.widget.PopupWindow: void dismiss()>();

     label1:
        return;
    }

    private void drawSelector(android.graphics.Canvas)
    {
        android.widget.AbsListView r0;
        android.graphics.Canvas r1;
        android.graphics.drawable.Drawable r2;
        android.graphics.Rect $r3, $r4;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.graphics.Canvas;

        $r3 = r0.<android.widget.AbsListView: android.graphics.Rect mSelectorRect>;

        $z0 = virtualinvoke $r3.<android.graphics.Rect: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        r2 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        $r4 = r0.<android.widget.AbsListView: android.graphics.Rect mSelectorRect>;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>($r4);

        virtualinvoke r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

     label1:
        return;
    }

    private void finishGlows()
    {
        android.widget.AbsListView r0;
        android.widget.EdgeEffect $r1, $r2, $r3;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        virtualinvoke $r2.<android.widget.EdgeEffect: void finish()>();

        $r3 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        virtualinvoke $r3.<android.widget.EdgeEffect: void finish()>();

     label1:
        return;
    }

    static int getDistance(android.graphics.Rect, android.graphics.Rect, int)
    {
        android.graphics.Rect r0, r1;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45;
        java.lang.IllegalArgumentException $r2;

        r0 := @parameter0: android.graphics.Rect;

        r1 := @parameter1: android.graphics.Rect;

        i0 := @parameter2: int;

        lookupswitch(i0)
        {
            case 1: goto label7;
            case 2: goto label7;
            case 17: goto label5;
            case 33: goto label6;
            case 66: goto label2;
            case 130: goto label4;
            default: goto label1;
        };

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT, FOCUS_FORWARD, FOCUS_BACKWARD}.");

        throw $r2;

     label2:
        i1 = r0.<android.graphics.Rect: int right>;

        $i17 = r0.<android.graphics.Rect: int top>;

        $i16 = virtualinvoke r0.<android.graphics.Rect: int height()>();

        $i19 = $i16 / 2;

        i2 = $i17 + $i19;

        i3 = r1.<android.graphics.Rect: int left>;

        $i18 = r1.<android.graphics.Rect: int top>;

        $i21 = virtualinvoke r1.<android.graphics.Rect: int height()>();

        $i20 = $i21 / 2;

        i4 = $i18 + $i20;

     label3:
        i5 = i3 - i1;

        i6 = i4 - i2;

        $i15 = i6 * i6;

        $i13 = i5 * i5;

        $i14 = $i15 + $i13;

        return $i14;

     label4:
        $i7 = r0.<android.graphics.Rect: int left>;

        $i8 = virtualinvoke r0.<android.graphics.Rect: int width()>();

        $i9 = $i8 / 2;

        i1 = $i7 + $i9;

        i2 = r0.<android.graphics.Rect: int bottom>;

        $i10 = r1.<android.graphics.Rect: int left>;

        $i11 = virtualinvoke r1.<android.graphics.Rect: int width()>();

        $i12 = $i11 / 2;

        i3 = $i10 + $i12;

        i4 = r1.<android.graphics.Rect: int top>;

        goto label3;

     label5:
        i1 = r0.<android.graphics.Rect: int left>;

        $i29 = r0.<android.graphics.Rect: int top>;

        $i28 = virtualinvoke r0.<android.graphics.Rect: int height()>();

        $i32 = $i28 / 2;

        i2 = $i29 + $i32;

        i3 = r1.<android.graphics.Rect: int right>;

        $i33 = r1.<android.graphics.Rect: int top>;

        $i30 = virtualinvoke r1.<android.graphics.Rect: int height()>();

        $i31 = $i30 / 2;

        i4 = $i33 + $i31;

        goto label3;

     label6:
        $i23 = r0.<android.graphics.Rect: int left>;

        $i22 = virtualinvoke r0.<android.graphics.Rect: int width()>();

        $i25 = $i22 / 2;

        i1 = $i23 + $i25;

        i2 = r0.<android.graphics.Rect: int top>;

        $i24 = r1.<android.graphics.Rect: int left>;

        $i27 = virtualinvoke r1.<android.graphics.Rect: int width()>();

        $i26 = $i27 / 2;

        i3 = $i24 + $i26;

        i4 = r1.<android.graphics.Rect: int bottom>;

        goto label3;

     label7:
        $i36 = r0.<android.graphics.Rect: int right>;

        $i37 = virtualinvoke r0.<android.graphics.Rect: int width()>();

        $i34 = $i37 / 2;

        i1 = $i36 + $i34;

        $i35 = r0.<android.graphics.Rect: int top>;

        $i40 = virtualinvoke r0.<android.graphics.Rect: int height()>();

        $i41 = $i40 / 2;

        i2 = $i35 + $i41;

        $i38 = r1.<android.graphics.Rect: int left>;

        $i39 = virtualinvoke r1.<android.graphics.Rect: int width()>();

        $i44 = $i39 / 2;

        i3 = $i38 + $i44;

        $i45 = r1.<android.graphics.Rect: int top>;

        $i42 = virtualinvoke r1.<android.graphics.Rect: int height()>();

        $i43 = $i42 / 2;

        i4 = $i45 + $i43;

        goto label3;
    }

    private android.widget.EditText getTextFilterInput()
    {
        android.widget.AbsListView r0;
        android.widget.EditText $r1, $r2, $r6, $r7, $r8, $r9;
        android.content.Context $r3;
        android.view.LayoutInflater $r4;
        android.view.View $r5;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<android.widget.AbsListView: android.content.Context getContext()>();

        $r4 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r3);

        $r5 = virtualinvoke $r4.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(17367223, null);

        $r6 = (android.widget.EditText) $r5;

        r0.<android.widget.AbsListView: android.widget.EditText mTextFilter> = $r6;

        $r7 = r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        virtualinvoke $r7.<android.widget.EditText: void setRawInputType(int)>(177);

        $r8 = r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        virtualinvoke $r8.<android.widget.EditText: void setImeOptions(int)>(268435456);

        $r9 = r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        virtualinvoke $r9.<android.widget.EditText: void addTextChangedListener(android.text.TextWatcher)>(r0);

     label1:
        $r2 = r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        return $r2;
    }

    private void initAbsListView()
    {
        android.widget.AbsListView r0;
        android.view.ViewConfiguration r1;
        android.content.Context $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4;
        android.content.res.Resources $r4;
        android.util.DisplayMetrics $r5;
        float $f0;

        r0 := @this: android.widget.AbsListView;

        virtualinvoke r0.<android.widget.AbsListView: void setClickable(boolean)>(1);

        virtualinvoke r0.<android.widget.AbsListView: void setFocusableInTouchMode(boolean)>(1);

        virtualinvoke r0.<android.widget.AbsListView: void setWillNotDraw(boolean)>(0);

        virtualinvoke r0.<android.widget.AbsListView: void setAlwaysDrawnWithCacheEnabled(boolean)>(0);

        virtualinvoke r0.<android.widget.AbsListView: void setScrollingCacheEnabled(boolean)>(1);

        $r2 = r0.<android.widget.AbsListView: android.content.Context mContext>;

        r1 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r2);

        $i0 = virtualinvoke r1.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        r0.<android.widget.AbsListView: int mTouchSlop> = $i0;

        $i1 = virtualinvoke r1.<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>();

        r0.<android.widget.AbsListView: int mMinimumVelocity> = $i1;

        $i2 = virtualinvoke r1.<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>();

        r0.<android.widget.AbsListView: int mMaximumVelocity> = $i2;

        $i3 = virtualinvoke r1.<android.view.ViewConfiguration: int getScaledOverscrollDistance()>();

        r0.<android.widget.AbsListView: int mOverscrollDistance> = $i3;

        $i4 = virtualinvoke r1.<android.view.ViewConfiguration: int getScaledOverflingDistance()>();

        r0.<android.widget.AbsListView: int mOverflingDistance> = $i4;

        $r3 = virtualinvoke r0.<android.widget.AbsListView: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = $r5.<android.util.DisplayMetrics: float density>;

        r0.<android.widget.AbsListView: float mDensityScale> = $f0;

        return;
    }

    private void initOrResetVelocityTracker()
    {
        android.widget.AbsListView r0;
        android.view.VelocityTracker $r1, $r2, $r3;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker> = $r3;

        return;

     label1:
        $r2 = r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2.<android.view.VelocityTracker: void clear()>();

        return;
    }

    private void initVelocityTrackerIfNotExists()
    {
        android.widget.AbsListView r0;
        android.view.VelocityTracker $r1, $r2;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        if $r1 != null goto label1;

        $r2 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker> = $r2;

     label1:
        return;
    }

    private boolean isOwnerThread()
    {
        android.widget.AbsListView r0;
        java.lang.Thread $r1, $r2;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: java.lang.Thread mOwnerThread>;

        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        if $r1 != $r2 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void onSecondaryPointerUp(android.view.MotionEvent)
    {
        android.widget.AbsListView r0;
        android.view.MotionEvent r1;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        byte b1;
        float $f0, $f1;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.MotionEvent;

        $i2 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        $i3 = 65280 & $i2;

        i0 = $i3 >> 8;

        $i4 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(i0);

        $i5 = r0.<android.widget.AbsListView: int mActivePointerId>;

        if $i4 != $i5 goto label2;

        if i0 != 0 goto label3;

        b1 = 1;

     label1:
        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(b1);

        $i6 = (int) $f0;

        r0.<android.widget.AbsListView: int mMotionX> = $i6;

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(b1);

        $i7 = (int) $f1;

        r0.<android.widget.AbsListView: int mMotionY> = $i7;

        r0.<android.widget.AbsListView: int mMotionCorrection> = 0;

        $i8 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(b1);

        r0.<android.widget.AbsListView: int mActivePointerId> = $i8;

     label2:
        return;

     label3:
        b1 = 0;

        goto label1;
    }

    private void onTouchCancel()
    {
        android.widget.AbsListView r0;
        android.view.View r1;
        int $i0, $i1, $i2, $i3;
        android.widget.AbsListView$CheckForLongPress $r2;
        android.widget.EdgeEffect $r3, $r4, $r5;
        android.widget.AbsListView$FlingRunnable $r6, $r7, $r8;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mTouchMode>;

        tableswitch($i0)
        {
            case 5: goto label5;
            case 6: goto label3;
            default: goto label1;
        };

     label1:
        r0.<android.widget.AbsListView: int mTouchMode> = -1;

        virtualinvoke r0.<android.widget.AbsListView: void setPressed(boolean)>(0);

        $i2 = r0.<android.widget.AbsListView: int mMotionPosition>;

        $i1 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i3 = $i2 - $i1;

        r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i3);

        if r1 == null goto label2;

        virtualinvoke r1.<android.view.View: void setPressed(boolean)>(0);

     label2:
        specialinvoke r0.<android.widget.AbsListView: void clearScrollingCache()>();

        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForLongPress mPendingCheckForLongPress>;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>($r2);

        specialinvoke r0.<android.widget.AbsListView: void recycleVelocityTracker()>();

     label3:
        $r3 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        if $r3 == null goto label4;

        $r4 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        virtualinvoke $r4.<android.widget.EdgeEffect: void onRelease()>();

        $r5 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        virtualinvoke $r5.<android.widget.EdgeEffect: void onRelease()>();

     label4:
        r0.<android.widget.AbsListView: int mActivePointerId> = -1;

        return;

     label5:
        $r6 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        if $r6 != null goto label6;

        $r8 = new android.widget.AbsListView$FlingRunnable;

        specialinvoke $r8.<android.widget.AbsListView$FlingRunnable: void <init>(android.widget.AbsListView)>(r0);

        r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable> = $r8;

     label6:
        $r7 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        virtualinvoke $r7.<android.widget.AbsListView$FlingRunnable: void startSpringback()>();

        goto label3;
    }

    private void onTouchDown(android.view.MotionEvent)
    {
        android.widget.AbsListView r0;
        android.view.MotionEvent r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i15;
        float $f0, $f1, $f2, $f3;
        boolean $z0, $z1, $z3;
        java.lang.Runnable $r2, $r6, $r7;
        android.view.View $r3;
        android.widget.Adapter $r4;
        android.widget.ListAdapter $r5;
        long $l11;
        android.widget.AbsListView$CheckForTap $r8;
        android.widget.AbsListView$FlingRunnable $r9, $r10;
        android.widget.AbsListView$PositionScroller $r11, $r12;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.MotionEvent;

        $i3 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(0);

        r0.<android.widget.AbsListView: int mActivePointerId> = $i3;

        $i4 = r0.<android.widget.AbsListView: int mTouchMode>;

        if $i4 != 6 goto label4;

        $r10 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        virtualinvoke $r10.<android.widget.AbsListView$FlingRunnable: void endFling()>();

        $r11 = r0.<android.widget.AbsListView: android.widget.AbsListView$PositionScroller mPositionScroller>;

        if $r11 == null goto label1;

        $r12 = r0.<android.widget.AbsListView: android.widget.AbsListView$PositionScroller mPositionScroller>;

        virtualinvoke $r12.<android.widget.AbsListView$PositionScroller: void stop()>();

     label1:
        r0.<android.widget.AbsListView: int mTouchMode> = 5;

        $f2 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $i13 = (int) $f2;

        r0.<android.widget.AbsListView: int mMotionX> = $i13;

        $f3 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $i15 = (int) $f3;

        r0.<android.widget.AbsListView: int mMotionY> = $i15;

        $i14 = r0.<android.widget.AbsListView: int mMotionY>;

        r0.<android.widget.AbsListView: int mLastY> = $i14;

        r0.<android.widget.AbsListView: int mMotionCorrection> = 0;

        r0.<android.widget.AbsListView: int mDirection> = 0;

     label2:
        $i5 = r0.<android.widget.AbsListView: int mTouchMode>;

        if $i5 != 0 goto label3;

        $i6 = r0.<android.widget.AbsListView: int mMotionPosition>;

        if $i6 == -1 goto label3;

        $z1 = virtualinvoke r0.<android.widget.AbsListView: boolean performButtonActionOnTouchDown(android.view.MotionEvent)>(r1);

        if $z1 == 0 goto label3;

        $r2 = r0.<android.widget.AbsListView: java.lang.Runnable mPendingCheckForTap>;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>($r2);

     label3:
        return;

     label4:
        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        i0 = (int) $f0;

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        i1 = (int) $f1;

        i2 = virtualinvoke r0.<android.widget.AbsListView: int pointToPosition(int,int)>(i0, i1);

        $z0 = r0.<android.widget.AbsListView: boolean mDataChanged>;

        if $z0 != 0 goto label5;

        $i10 = r0.<android.widget.AbsListView: int mTouchMode>;

        if $i10 != 4 goto label7;

        specialinvoke r0.<android.widget.AbsListView: void createScrollingCache()>();

        r0.<android.widget.AbsListView: int mTouchMode> = 3;

        r0.<android.widget.AbsListView: int mMotionCorrection> = 0;

        i2 = virtualinvoke r0.<android.widget.AbsListView: int findMotionRow(int)>(i1);

        $r9 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        virtualinvoke $r9.<android.widget.AbsListView$FlingRunnable: void flywheelTouch()>();

     label5:
        if i2 < 0 goto label6;

        $i8 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i7 = i2 - $i8;

        $r3 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i7);

        $i9 = virtualinvoke $r3.<android.view.View: int getTop()>();

        r0.<android.widget.AbsListView: int mMotionViewOriginalTop> = $i9;

     label6:
        r0.<android.widget.AbsListView: int mMotionX> = i0;

        r0.<android.widget.AbsListView: int mMotionY> = i1;

        r0.<android.widget.AbsListView: int mMotionPosition> = i2;

        r0.<android.widget.AbsListView: int mLastY> = -2147483648;

        goto label2;

     label7:
        if i2 < 0 goto label5;

        $r4 = virtualinvoke r0.<android.widget.AbsListView: android.widget.Adapter getAdapter()>();

        $r5 = (android.widget.ListAdapter) $r4;

        $z3 = interfaceinvoke $r5.<android.widget.ListAdapter: boolean isEnabled(int)>(i2);

        if $z3 == 0 goto label5;

        r0.<android.widget.AbsListView: int mTouchMode> = 0;

        $r7 = r0.<android.widget.AbsListView: java.lang.Runnable mPendingCheckForTap>;

        if $r7 != null goto label8;

        $r8 = new android.widget.AbsListView$CheckForTap;

        specialinvoke $r8.<android.widget.AbsListView$CheckForTap: void <init>(android.widget.AbsListView)>(r0);

        r0.<android.widget.AbsListView: java.lang.Runnable mPendingCheckForTap> = $r8;

     label8:
        $r6 = r0.<android.widget.AbsListView: java.lang.Runnable mPendingCheckForTap>;

        $i12 = staticinvoke <android.view.ViewConfiguration: int getTapTimeout()>();

        $l11 = (long) $i12;

        virtualinvoke r0.<android.widget.AbsListView: boolean postDelayed(java.lang.Runnable,long)>($r6, $l11);

        goto label5;
    }

    private void onTouchMove(android.view.MotionEvent)
    {
        android.widget.AbsListView r0;
        android.view.MotionEvent r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.view.View r2;
        java.lang.Runnable r3;
        boolean $z0, $z1, $z2;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.MotionEvent;

        $i2 = r0.<android.widget.AbsListView: int mActivePointerId>;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int findPointerIndex(int)>($i2);

        if i0 != -1 goto label1;

        i0 = 0;

        $i9 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(0);

        r0.<android.widget.AbsListView: int mActivePointerId> = $i9;

     label1:
        $z0 = r0.<android.widget.AbsListView: boolean mDataChanged>;

        if $z0 == 0 goto label2;

        virtualinvoke r0.<android.widget.AbsListView: void layoutChildren()>();

     label2:
        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i0);

        i1 = (int) $f0;

        $i3 = r0.<android.widget.AbsListView: int mTouchMode>;

        tableswitch($i3)
        {
            case 0: goto label4;
            case 1: goto label4;
            case 2: goto label4;
            case 3: goto label8;
            case 4: goto label3;
            case 5: goto label8;
            default: goto label3;
        };

     label3:
        return;

     label4:
        $z1 = specialinvoke r0.<android.widget.AbsListView: boolean startScrollIfNeeded(int)>(i1);

        if $z1 != 0 goto label3;

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(i0);

        $f3 = (float) i1;

        $i4 = r0.<android.widget.AbsListView: int mTouchSlop>;

        $f2 = (float) $i4;

        $z2 = virtualinvoke r0.<android.widget.AbsListView: boolean pointInView(float,float,float)>($f1, $f3, $f2);

        if $z2 != 0 goto label3;

        virtualinvoke r0.<android.widget.AbsListView: void setPressed(boolean)>(0);

        $i7 = r0.<android.widget.AbsListView: int mMotionPosition>;

        $i5 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i6 = $i7 - $i5;

        r2 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i6);

        if r2 == null goto label5;

        virtualinvoke r2.<android.view.View: void setPressed(boolean)>(0);

     label5:
        $i8 = r0.<android.widget.AbsListView: int mTouchMode>;

        if $i8 != 0 goto label7;

        r3 = r0.<android.widget.AbsListView: java.lang.Runnable mPendingCheckForTap>;

     label6:
        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>(r3);

        r0.<android.widget.AbsListView: int mTouchMode> = 2;

        virtualinvoke r0.<android.widget.AbsListView: void updateSelectorState()>();

        return;

     label7:
        r3 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForLongPress mPendingCheckForLongPress>;

        goto label6;

     label8:
        specialinvoke r0.<android.widget.AbsListView: void scrollIfNeeded(int)>(i1);

        return;
    }

    private void onTouchUp(android.view.MotionEvent)
    {
        android.widget.AbsListView r0;
        android.view.MotionEvent r1;
        android.widget.AbsListView$FlingRunnable r2, r5, $r16, $r19, $r20, $r22, $r26, $r29, $r30, $r31, $r32;
        android.view.VelocityTracker r3, r4;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i47, $i49, $i50, $i51;
        android.view.View r6, $r21, $r24;
        boolean z0, $z2, $z3, $z5, $z7, $z8, $z10;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        android.widget.AbsListView$PerformClick r7, r8, $r33, $r45;
        java.lang.Runnable r9, $r36, $r38, $r40;
        android.widget.AbsListView$3 r10, $r37;
        android.graphics.drawable.Drawable r11, $r39, $r43;
        android.widget.EdgeEffect $r12, $r17, $r18;
        android.widget.AbsListView$CheckForLongPress $r13;
        android.os.StrictMode$Span $r14, $r15;
        android.graphics.Rect $r23, $r25, $r34, $r44;
        android.widget.AbsListView$PositionScroller $r27, $r28;
        byte $b38, $b48;
        android.widget.ListAdapter $r35, $r41;
        long $l46;
        android.graphics.drawable.TransitionDrawable $r42;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.MotionEvent;

        $i8 = r0.<android.widget.AbsListView: int mTouchMode>;

        tableswitch($i8)
        {
            case 0: goto label04;
            case 1: goto label04;
            case 2: goto label04;
            case 3: goto label17;
            case 4: goto label01;
            case 5: goto label25;
            default: goto label01;
        };

     label01:
        virtualinvoke r0.<android.widget.AbsListView: void setPressed(boolean)>(0);

        $r12 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        if $r12 == null goto label02;

        $r17 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        virtualinvoke $r17.<android.widget.EdgeEffect: void onRelease()>();

        $r18 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        virtualinvoke $r18.<android.widget.EdgeEffect: void onRelease()>();

     label02:
        virtualinvoke r0.<android.widget.AbsListView: void invalidate()>();

        $r13 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForLongPress mPendingCheckForLongPress>;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>($r13);

        specialinvoke r0.<android.widget.AbsListView: void recycleVelocityTracker()>();

        r0.<android.widget.AbsListView: int mActivePointerId> = -1;

        $r15 = r0.<android.widget.AbsListView: android.os.StrictMode$Span mScrollStrictSpan>;

        if $r15 == null goto label03;

        $r14 = r0.<android.widget.AbsListView: android.os.StrictMode$Span mScrollStrictSpan>;

        virtualinvoke $r14.<android.os.StrictMode$Span: void finish()>();

        r0.<android.widget.AbsListView: android.os.StrictMode$Span mScrollStrictSpan> = null;

     label03:
        return;

     label04:
        i7 = r0.<android.widget.AbsListView: int mMotionPosition>;

        $i31 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i33 = i7 - $i31;

        r6 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i33);

        if r6 == null goto label16;

        $i39 = r0.<android.widget.AbsListView: int mTouchMode>;

        if $i39 == 0 goto label05;

        virtualinvoke r6.<android.view.View: void setPressed(boolean)>(0);

     label05:
        f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $r34 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i40 = $r34.<android.graphics.Rect: int left>;

        $f7 = (float) $i40;

        $b38 = f0 cmpl $f7;

        if $b38 <= 0 goto label12;

        $i51 = virtualinvoke r0.<android.widget.AbsListView: int getWidth()>();

        $r44 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i50 = $r44.<android.graphics.Rect: int right>;

        $i49 = $i51 - $i50;

        $f8 = (float) $i49;

        $b48 = f0 cmpg $f8;

        if $b48 >= 0 goto label12;

        z0 = 1;

     label06:
        if z0 == 0 goto label16;

        $z2 = virtualinvoke r6.<android.view.View: boolean hasFocusable()>();

        if $z2 != 0 goto label16;

        $r33 = r0.<android.widget.AbsListView: android.widget.AbsListView$PerformClick mPerformClick>;

        if $r33 != null goto label07;

        $r45 = new android.widget.AbsListView$PerformClick;

        specialinvoke $r45.<android.widget.AbsListView$PerformClick: void <init>(android.widget.AbsListView,android.widget.AbsListView$1)>(r0, null);

        r8 = $r45;

        r0.<android.widget.AbsListView: android.widget.AbsListView$PerformClick mPerformClick> = r8;

     label07:
        r7 = r0.<android.widget.AbsListView: android.widget.AbsListView$PerformClick mPerformClick>;

        r7.<android.widget.AbsListView$PerformClick: int mClickMotionPosition> = i7;

        virtualinvoke r7.<android.widget.AbsListView$PerformClick: void rememberWindowAttachCount()>();

        r0.<android.widget.AbsListView: int mResurrectToPosition> = i7;

        $i43 = r0.<android.widget.AbsListView: int mTouchMode>;

        if $i43 == 0 goto label08;

        $i47 = r0.<android.widget.AbsListView: int mTouchMode>;

        if $i47 != 1 goto label15;

     label08:
        $i44 = r0.<android.widget.AbsListView: int mTouchMode>;

        if $i44 != 0 goto label13;

        r9 = r0.<android.widget.AbsListView: java.lang.Runnable mPendingCheckForTap>;

     label09:
        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>(r9);

        r0.<android.widget.AbsListView: int mLayoutMode> = 0;

        $z5 = r0.<android.widget.AbsListView: boolean mDataChanged>;

        if $z5 != 0 goto label14;

        $r35 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $z3 = interfaceinvoke $r35.<android.widget.ListAdapter: boolean isEnabled(int)>(i7);

        if $z3 == 0 goto label14;

        r0.<android.widget.AbsListView: int mTouchMode> = 1;

        $i41 = r0.<android.widget.AbsListView: int mMotionPosition>;

        virtualinvoke r0.<android.widget.AbsListView: void setSelectedPositionInt(int)>($i41);

        virtualinvoke r0.<android.widget.AbsListView: void layoutChildren()>();

        virtualinvoke r6.<android.view.View: void setPressed(boolean)>(1);

        $i42 = r0.<android.widget.AbsListView: int mMotionPosition>;

        virtualinvoke r0.<android.widget.AbsListView: void positionSelector(int,android.view.View)>($i42, r6);

        virtualinvoke r0.<android.widget.AbsListView: void setPressed(boolean)>(1);

        $r39 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        if $r39 == null goto label10;

        $r43 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        r11 = virtualinvoke $r43.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable getCurrent()>();

        if r11 == null goto label10;

        $z8 = r11 instanceof android.graphics.drawable.TransitionDrawable;

        if $z8 == 0 goto label10;

        $r42 = (android.graphics.drawable.TransitionDrawable) r11;

        virtualinvoke $r42.<android.graphics.drawable.TransitionDrawable: void resetTransition()>();

     label10:
        $r40 = r0.<android.widget.AbsListView: java.lang.Runnable mTouchModeReset>;

        if $r40 == null goto label11;

        $r36 = r0.<android.widget.AbsListView: java.lang.Runnable mTouchModeReset>;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>($r36);

     label11:
        $r37 = new android.widget.AbsListView$3;

        specialinvoke $r37.<android.widget.AbsListView$3: void <init>(android.widget.AbsListView,android.view.View,android.widget.AbsListView$PerformClick)>(r0, r6, r7);

        r10 = $r37;

        r0.<android.widget.AbsListView: java.lang.Runnable mTouchModeReset> = r10;

        $r38 = r0.<android.widget.AbsListView: java.lang.Runnable mTouchModeReset>;

        $i45 = staticinvoke <android.view.ViewConfiguration: int getPressedStateDuration()>();

        $l46 = (long) $i45;

        virtualinvoke r0.<android.widget.AbsListView: boolean postDelayed(java.lang.Runnable,long)>($r38, $l46);

        return;

     label12:
        z0 = 0;

        goto label06;

     label13:
        r9 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForLongPress mPendingCheckForLongPress>;

        goto label09;

     label14:
        r0.<android.widget.AbsListView: int mTouchMode> = -1;

        virtualinvoke r0.<android.widget.AbsListView: void updateSelectorState()>();

        return;

     label15:
        $z7 = r0.<android.widget.AbsListView: boolean mDataChanged>;

        if $z7 != 0 goto label16;

        $r41 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $z10 = interfaceinvoke $r41.<android.widget.ListAdapter: boolean isEnabled(int)>(i7);

        if $z10 == 0 goto label16;

        virtualinvoke r7.<android.widget.AbsListView$PerformClick: void run()>();

     label16:
        r0.<android.widget.AbsListView: int mTouchMode> = -1;

        virtualinvoke r0.<android.widget.AbsListView: void updateSelectorState()>();

        goto label01;

     label17:
        i1 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if i1 <= 0 goto label24;

        $r21 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(0);

        i2 = virtualinvoke $r21.<android.view.View: int getTop()>();

        $i14 = i1 - 1;

        $r24 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i14);

        i3 = virtualinvoke $r24.<android.view.View: int getBottom()>();

        $r23 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        i4 = $r23.<android.graphics.Rect: int top>;

        $i17 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $r25 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i16 = $r25.<android.graphics.Rect: int bottom>;

        i5 = $i17 - $i16;

        $i15 = r0.<android.widget.AbsListView: int mFirstPosition>;

        if $i15 != 0 goto label18;

        if i2 < i4 goto label18;

        $i35 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i37 = i1 + $i35;

        $i34 = r0.<android.widget.AbsListView: int mItemCount>;

        if $i37 >= $i34 goto label18;

        $i36 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $i32 = $i36 - i5;

        if i3 > $i32 goto label18;

        r0.<android.widget.AbsListView: int mTouchMode> = -1;

        virtualinvoke r0.<android.widget.AbsListView: void reportScrollStateChange(int)>(0);

        goto label01;

     label18:
        r4 = r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        $i19 = r0.<android.widget.AbsListView: int mMaximumVelocity>;

        $f4 = (float) $i19;

        virtualinvoke r4.<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>(1000, $f4);

        $i18 = r0.<android.widget.AbsListView: int mActivePointerId>;

        $f3 = virtualinvoke r4.<android.view.VelocityTracker: float getYVelocity(int)>($i18);

        $f6 = r0.<android.widget.AbsListView: float mVelocityScale>;

        $f5 = $f3 * $f6;

        i6 = (int) $f5;

        $i21 = staticinvoke <java.lang.Math: int abs(int)>(i6);

        $i20 = r0.<android.widget.AbsListView: int mMinimumVelocity>;

        if $i21 <= $i20 goto label22;

        $i22 = r0.<android.widget.AbsListView: int mFirstPosition>;

        if $i22 != 0 goto label19;

        $i28 = r0.<android.widget.AbsListView: int mOverscrollDistance>;

        $i29 = i4 - $i28;

        if i2 == $i29 goto label22;

     label19:
        $i23 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i25 = i1 + $i23;

        $i24 = r0.<android.widget.AbsListView: int mItemCount>;

        if $i25 != $i24 goto label20;

        $i26 = r0.<android.widget.AbsListView: int mOverscrollDistance>;

        $i27 = i5 + $i26;

        if i3 == $i27 goto label22;

     label20:
        $r30 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        if $r30 != null goto label21;

        $r32 = new android.widget.AbsListView$FlingRunnable;

        specialinvoke $r32.<android.widget.AbsListView$FlingRunnable: void <init>(android.widget.AbsListView)>(r0);

        r5 = $r32;

        r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable> = r5;

     label21:
        virtualinvoke r0.<android.widget.AbsListView: void reportScrollStateChange(int)>(2);

        $r31 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        $i30 = neg i6;

        virtualinvoke $r31.<android.widget.AbsListView$FlingRunnable: void start(int)>($i30);

        goto label01;

     label22:
        r0.<android.widget.AbsListView: int mTouchMode> = -1;

        virtualinvoke r0.<android.widget.AbsListView: void reportScrollStateChange(int)>(0);

        $r26 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        if $r26 == null goto label23;

        $r29 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        virtualinvoke $r29.<android.widget.AbsListView$FlingRunnable: void endFling()>();

     label23:
        $r27 = r0.<android.widget.AbsListView: android.widget.AbsListView$PositionScroller mPositionScroller>;

        if $r27 == null goto label01;

        $r28 = r0.<android.widget.AbsListView: android.widget.AbsListView$PositionScroller mPositionScroller>;

        virtualinvoke $r28.<android.widget.AbsListView$PositionScroller: void stop()>();

        goto label01;

     label24:
        r0.<android.widget.AbsListView: int mTouchMode> = -1;

        virtualinvoke r0.<android.widget.AbsListView: void reportScrollStateChange(int)>(0);

        goto label01;

     label25:
        $r16 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        if $r16 != null goto label26;

        $r22 = new android.widget.AbsListView$FlingRunnable;

        specialinvoke $r22.<android.widget.AbsListView$FlingRunnable: void <init>(android.widget.AbsListView)>(r0);

        r2 = $r22;

        r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable> = r2;

     label26:
        r3 = r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        $i9 = r0.<android.widget.AbsListView: int mMaximumVelocity>;

        $f2 = (float) $i9;

        virtualinvoke r3.<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>(1000, $f2);

        $i11 = r0.<android.widget.AbsListView: int mActivePointerId>;

        $f1 = virtualinvoke r3.<android.view.VelocityTracker: float getYVelocity(int)>($i11);

        i0 = (int) $f1;

        virtualinvoke r0.<android.widget.AbsListView: void reportScrollStateChange(int)>(2);

        $i10 = staticinvoke <java.lang.Math: int abs(int)>(i0);

        $i13 = r0.<android.widget.AbsListView: int mMinimumVelocity>;

        if $i10 <= $i13 goto label27;

        $r19 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        $i12 = neg i0;

        virtualinvoke $r19.<android.widget.AbsListView$FlingRunnable: void startOverfling(int)>($i12);

        goto label01;

     label27:
        $r20 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        virtualinvoke $r20.<android.widget.AbsListView$FlingRunnable: void startSpringback()>();

        goto label01;
    }

    private void positionPopup()
    {
        android.widget.AbsListView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        int[] r1;
        android.content.res.Resources $r2;
        android.util.DisplayMetrics $r3;
        float $f0, $f1;
        android.widget.PopupWindow $r4, $r5, $r6;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        $r2 = virtualinvoke r0.<android.widget.AbsListView: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        i0 = $r3.<android.util.DisplayMetrics: int heightPixels>;

        r1 = newarray (int)[2];

        virtualinvoke r0.<android.widget.AbsListView: void getLocationOnScreen(int[])>(r1);

        $i2 = r1[1];

        $i3 = i0 - $i2;

        $i4 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $i6 = $i3 - $i4;

        $f0 = r0.<android.widget.AbsListView: float mDensityScale>;

        $f1 = 20.0F * $f0;

        $i5 = (int) $f1;

        i1 = $i6 + $i5;

        $r4 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        $z0 = virtualinvoke $r4.<android.widget.PopupWindow: boolean isShowing()>();

        if $z0 != 0 goto label1;

        $r6 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        $i8 = r1[0];

        virtualinvoke $r6.<android.widget.PopupWindow: void showAtLocation(android.view.View,int,int,int)>(r0, 81, $i8, i1);

        return;

     label1:
        $r5 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        $i7 = r1[0];

        virtualinvoke $r5.<android.widget.PopupWindow: void update(int,int,int,int)>($i7, i1, -1, -1);

        return;
    }

    private void positionSelector(int, int, int, int)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        android.graphics.Rect $r1;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r1 = r0.<android.widget.AbsListView: android.graphics.Rect mSelectorRect>;

        $i4 = r0.<android.widget.AbsListView: int mSelectionLeftPadding>;

        $i11 = i0 - $i4;

        $i5 = r0.<android.widget.AbsListView: int mSelectionTopPadding>;

        $i10 = i1 - $i5;

        $i6 = r0.<android.widget.AbsListView: int mSelectionRightPadding>;

        $i9 = i2 + $i6;

        $i7 = r0.<android.widget.AbsListView: int mSelectionBottomPadding>;

        $i8 = i3 + $i7;

        virtualinvoke $r1.<android.graphics.Rect: void set(int,int,int,int)>($i11, $i10, $i9, $i8);

        return;
    }

    private void recycleVelocityTracker()
    {
        android.widget.AbsListView r0;
        android.view.VelocityTracker $r1, $r2;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2.<android.view.VelocityTracker: void recycle()>();

        r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker> = null;

     label1:
        return;
    }

    static android.view.View retrieveFromScrap(java.util.ArrayList, int)
    {
        java.util.ArrayList r0;
        int i0, i1, i2, $i3, $i4;
        android.view.View r1, $r3;
        java.lang.Object $r2, $r4;
        android.view.ViewGroup$LayoutParams $r5;
        android.widget.AbsListView$LayoutParams $r6;

        r0 := @parameter0: java.util.ArrayList;

        i0 := @parameter1: int;

        i1 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        if i1 <= 0 goto label4;

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        $r4 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r1 = (android.view.View) $r4;

        $r5 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r6 = (android.widget.AbsListView$LayoutParams) $r5;

        $i4 = $r6.<android.widget.AbsListView$LayoutParams: int scrappedFromPosition>;

        if $i4 != i0 goto label2;

        virtualinvoke r0.<java.util.ArrayList: java.lang.Object remove(int)>(i2);

        return r1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $i3 = i1 - 1;

        $r2 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object remove(int)>($i3);

        $r3 = (android.view.View) $r2;

        return $r3;

     label4:
        return null;
    }

    private void scrollIfNeeded(int)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, i3, i4, i5, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51;
        byte b6;
        android.view.View r1, r2, r3;
        boolean z0, $z3, $z4, $z5, $z7, $z8, $z9;
        android.view.ViewParent r4;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        android.widget.EdgeEffect $r5, $r6, $r7, $r8, $r10, $r12, $r13, $r14, $r16, $r18, $r19, $r20, $r21, $r22, $r24, $r27;
        android.graphics.Rect $r9, $r11, $r17, $r23;
        android.os.StrictMode$Span $r15, $r28;
        android.view.VelocityTracker $r25, $r26;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        $i18 = r0.<android.widget.AbsListView: int mMotionY>;

        i1 = i0 - $i18;

        $i17 = r0.<android.widget.AbsListView: int mMotionCorrection>;

        i2 = i1 - $i17;

        $i20 = r0.<android.widget.AbsListView: int mLastY>;

        if $i20 == -2147483648 goto label13;

        $i49 = r0.<android.widget.AbsListView: int mLastY>;

        i3 = i0 - $i49;

     label01:
        $i19 = r0.<android.widget.AbsListView: int mTouchMode>;

        if $i19 != 3 goto label17;

        $r15 = r0.<android.widget.AbsListView: android.os.StrictMode$Span mScrollStrictSpan>;

        if $r15 != null goto label02;

        $r28 = staticinvoke <android.os.StrictMode: android.os.StrictMode$Span enterCriticalSpan(java.lang.String)>("AbsListView-scroll");

        r0.<android.widget.AbsListView: android.os.StrictMode$Span mScrollStrictSpan> = $r28;

     label02:
        $i36 = r0.<android.widget.AbsListView: int mLastY>;

        if i0 == $i36 goto label12;

        $i32 = r0.<android.widget.AbsListView: int mGroupFlags>;

        $i33 = 524288 & $i32;

        if $i33 != 0 goto label03;

        $i51 = staticinvoke <java.lang.Math: int abs(int)>(i1);

        $i50 = r0.<android.widget.AbsListView: int mTouchSlop>;

        if $i51 <= $i50 goto label03;

        r4 = virtualinvoke r0.<android.widget.AbsListView: android.view.ViewParent getParent()>();

        if r4 == null goto label03;

        interfaceinvoke r4.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

     label03:
        $i34 = r0.<android.widget.AbsListView: int mMotionPosition>;

        if $i34 < 0 goto label14;

        $i48 = r0.<android.widget.AbsListView: int mMotionPosition>;

        $i47 = r0.<android.widget.AbsListView: int mFirstPosition>;

        i12 = $i48 - $i47;

     label04:
        r2 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i12);

        i13 = 0;

        if r2 == null goto label05;

        i13 = virtualinvoke r2.<android.view.View: int getTop()>();

     label05:
        z0 = 0;

        if i3 == 0 goto label06;

        z0 = virtualinvoke r0.<android.widget.AbsListView: boolean trackMotionScroll(int,int)>(i2, i3);

     label06:
        r3 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i12);

        if r3 == null goto label11;

        i14 = virtualinvoke r3.<android.view.View: int getTop()>();

        if z0 == 0 goto label10;

        $i37 = neg i3;

        $i40 = i14 - i13;

        i15 = $i37 - $i40;

        $i39 = r0.<android.widget.AbsListView: int mScrollY>;

        $i38 = r0.<android.widget.AbsListView: int mOverscrollDistance>;

        virtualinvoke r0.<android.widget.AbsListView: boolean overScrollBy(int,int,int,int,int,int,int,int,boolean)>(0, i15, 0, $i39, 0, 0, 0, $i38, 1);

        $i43 = r0.<android.widget.AbsListView: int mOverscrollDistance>;

        $i42 = staticinvoke <java.lang.Math: int abs(int)>($i43);

        $i45 = r0.<android.widget.AbsListView: int mScrollY>;

        $i44 = staticinvoke <java.lang.Math: int abs(int)>($i45);

        if $i42 != $i44 goto label07;

        $r25 = r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        if $r25 == null goto label07;

        $r26 = r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r26.<android.view.VelocityTracker: void clear()>();

     label07:
        i16 = virtualinvoke r0.<android.widget.AbsListView: int getOverScrollMode()>();

        if i16 == 0 goto label08;

        if i16 != 1 goto label10;

        $z9 = specialinvoke r0.<android.widget.AbsListView: boolean contentFits()>();

        if $z9 != 0 goto label10;

     label08:
        r0.<android.widget.AbsListView: int mDirection> = 0;

        r0.<android.widget.AbsListView: int mTouchMode> = 5;

        if i1 <= 0 goto label15;

        $r19 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        $f11 = (float) i15;

        $i46 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $f9 = (float) $i46;

        $f10 = $f11 / $f9;

        virtualinvoke $r19.<android.widget.EdgeEffect: void onPull(float)>($f10);

        $r24 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $z8 = virtualinvoke $r24.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z8 != 0 goto label09;

        $r27 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        virtualinvoke $r27.<android.widget.EdgeEffect: void onRelease()>();

     label09:
        $r22 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        $r23 = virtualinvoke $r22.<android.widget.EdgeEffect: android.graphics.Rect getBounds(boolean)>(0);

        virtualinvoke r0.<android.widget.AbsListView: void invalidate(android.graphics.Rect)>($r23);

     label10:
        r0.<android.widget.AbsListView: int mMotionY> = i0;

     label11:
        r0.<android.widget.AbsListView: int mLastY> = i0;

     label12:
        return;

     label13:
        i3 = i2;

        goto label01;

     label14:
        $i35 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        i12 = $i35 / 2;

        goto label04;

     label15:
        if i1 >= 0 goto label10;

        $r16 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $f6 = (float) i15;

        $i41 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $f8 = (float) $i41;

        $f7 = $f6 / $f8;

        virtualinvoke $r16.<android.widget.EdgeEffect: void onPull(float)>($f7);

        $r21 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        $z7 = virtualinvoke $r21.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z7 != 0 goto label16;

        $r20 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        virtualinvoke $r20.<android.widget.EdgeEffect: void onRelease()>();

     label16:
        $r18 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $r17 = virtualinvoke $r18.<android.widget.EdgeEffect: android.graphics.Rect getBounds(boolean)>(1);

        virtualinvoke r0.<android.widget.AbsListView: void invalidate(android.graphics.Rect)>($r17);

        goto label10;

     label17:
        $i22 = r0.<android.widget.AbsListView: int mTouchMode>;

        if $i22 != 5 goto label12;

        $i21 = r0.<android.widget.AbsListView: int mLastY>;

        if i0 == $i21 goto label12;

        i4 = r0.<android.widget.AbsListView: int mScrollY>;

        i5 = i4 - i3;

        $i24 = r0.<android.widget.AbsListView: int mLastY>;

        if i0 <= $i24 goto label29;

        b6 = 1;

     label18:
        $i25 = r0.<android.widget.AbsListView: int mDirection>;

        if $i25 != 0 goto label19;

        r0.<android.widget.AbsListView: int mDirection> = b6;

     label19:
        i7 = neg i3;

        if i5 >= 0 goto label20;

        if i4 >= 0 goto label21;

     label20:
        if i5 <= 0 goto label30;

        if i4 > 0 goto label30;

     label21:
        i7 = neg i4;

        i8 = i3 + i7;

     label22:
        if i7 == 0 goto label25;

        $i28 = r0.<android.widget.AbsListView: int mScrollY>;

        $i29 = r0.<android.widget.AbsListView: int mOverscrollDistance>;

        virtualinvoke r0.<android.widget.AbsListView: boolean overScrollBy(int,int,int,int,int,int,int,int,boolean)>(0, i7, 0, $i28, 0, 0, 0, $i29, 1);

        i11 = virtualinvoke r0.<android.widget.AbsListView: int getOverScrollMode()>();

        if i11 == 0 goto label23;

        if i11 != 1 goto label25;

        $z5 = specialinvoke r0.<android.widget.AbsListView: boolean contentFits()>();

        if $z5 != 0 goto label25;

     label23:
        if i1 <= 0 goto label31;

        $r7 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        $f5 = (float) i7;

        $i31 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $f4 = (float) $i31;

        $f3 = $f5 / $f4;

        virtualinvoke $r7.<android.widget.EdgeEffect: void onPull(float)>($f3);

        $r13 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $z4 = virtualinvoke $r13.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z4 != 0 goto label24;

        $r14 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        virtualinvoke $r14.<android.widget.EdgeEffect: void onRelease()>();

     label24:
        $r12 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        $r11 = virtualinvoke $r12.<android.widget.EdgeEffect: android.graphics.Rect getBounds(boolean)>(0);

        virtualinvoke r0.<android.widget.AbsListView: void invalidate(android.graphics.Rect)>($r11);

     label25:
        if i8 == 0 goto label28;

        $i23 = r0.<android.widget.AbsListView: int mScrollY>;

        if $i23 == 0 goto label26;

        r0.<android.widget.AbsListView: int mScrollY> = 0;

        virtualinvoke r0.<android.widget.AbsListView: void invalidateParentIfNeeded()>();

     label26:
        virtualinvoke r0.<android.widget.AbsListView: boolean trackMotionScroll(int,int)>(i8, i8);

        r0.<android.widget.AbsListView: int mTouchMode> = 3;

        i9 = virtualinvoke r0.<android.widget.AbsListView: int findClosestMotionRow(int)>(i0);

        r0.<android.widget.AbsListView: int mMotionCorrection> = 0;

        $i27 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i26 = i9 - $i27;

        r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i26);

        if r1 == null goto label33;

        i10 = virtualinvoke r1.<android.view.View: int getTop()>();

     label27:
        r0.<android.widget.AbsListView: int mMotionViewOriginalTop> = i10;

        r0.<android.widget.AbsListView: int mMotionY> = i0;

        r0.<android.widget.AbsListView: int mMotionPosition> = i9;

     label28:
        r0.<android.widget.AbsListView: int mLastY> = i0;

        r0.<android.widget.AbsListView: int mDirection> = b6;

        return;

     label29:
        b6 = -1;

        goto label18;

     label30:
        i8 = 0;

        goto label22;

     label31:
        if i1 >= 0 goto label25;

        $r5 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $f0 = (float) i7;

        $i30 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $f2 = (float) $i30;

        $f1 = $f0 / $f2;

        virtualinvoke $r5.<android.widget.EdgeEffect: void onPull(float)>($f1);

        $r6 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        $z3 = virtualinvoke $r6.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z3 != 0 goto label32;

        $r8 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        virtualinvoke $r8.<android.widget.EdgeEffect: void onRelease()>();

     label32:
        $r10 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $r9 = virtualinvoke $r10.<android.widget.EdgeEffect: android.graphics.Rect getBounds(boolean)>(1);

        virtualinvoke r0.<android.widget.AbsListView: void invalidate(android.graphics.Rect)>($r9);

        goto label25;

     label33:
        i10 = 0;

        goto label27;
    }

    private void setFastScrollerAlwaysVisibleUiThread(boolean)
    {
        android.widget.AbsListView r0;
        boolean z0;
        android.widget.FastScroller $r1, $r2;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        virtualinvoke $r2.<android.widget.FastScroller: void setAlwaysShow(boolean)>(z0);

     label1:
        return;
    }

    private void setFastScrollerEnabledUiThread(boolean)
    {
        android.widget.AbsListView r0;
        boolean z0;
        android.widget.FastScroller $r1, $r2, $r3, $r4, $r5, $r6;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        if $r1 == null goto label3;

        $r6 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        virtualinvoke $r6.<android.widget.FastScroller: void setEnabled(boolean)>(z0);

     label1:
        virtualinvoke r0.<android.widget.AbsListView: void resolvePadding()>();

        $r2 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        if $r2 == null goto label2;

        $r3 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        virtualinvoke $r3.<android.widget.FastScroller: void updateLayout()>();

     label2:
        return;

     label3:
        if z0 == 0 goto label1;

        $r4 = new android.widget.FastScroller;

        specialinvoke $r4.<android.widget.FastScroller: void <init>(android.widget.AbsListView)>(r0);

        r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller> = $r4;

        $r5 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        virtualinvoke $r5.<android.widget.FastScroller: void setEnabled(boolean)>(1);

        goto label1;
    }

    private void showPopup()
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @this: android.widget.AbsListView;

        $i0 = virtualinvoke r0.<android.widget.AbsListView: int getWindowVisibility()>();

        if $i0 != 0 goto label1;

        specialinvoke r0.<android.widget.AbsListView: void createTextFilter(boolean)>(1);

        specialinvoke r0.<android.widget.AbsListView: void positionPopup()>();

        virtualinvoke r0.<android.widget.AbsListView: void checkFocus()>();

     label1:
        return;
    }

    private boolean startScrollIfNeeded(int)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        boolean z0;
        android.view.View r1;
        android.view.ViewParent r2;
        android.widget.AbsListView$CheckForLongPress $r3;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        $i4 = r0.<android.widget.AbsListView: int mMotionY>;

        i1 = i0 - $i4;

        i2 = staticinvoke <java.lang.Math: int abs(int)>(i1);

        $i5 = r0.<android.widget.AbsListView: int mScrollY>;

        if $i5 == 0 goto label06;

        z0 = 1;

     label01:
        if z0 != 0 goto label02;

        $i10 = r0.<android.widget.AbsListView: int mTouchSlop>;

        if i2 <= $i10 goto label10;

     label02:
        specialinvoke r0.<android.widget.AbsListView: void createScrollingCache()>();

        if z0 == 0 goto label07;

        r0.<android.widget.AbsListView: int mTouchMode> = 5;

        r0.<android.widget.AbsListView: int mMotionCorrection> = 0;

     label03:
        $r3 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForLongPress mPendingCheckForLongPress>;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>($r3);

        virtualinvoke r0.<android.widget.AbsListView: void setPressed(boolean)>(0);

        $i9 = r0.<android.widget.AbsListView: int mMotionPosition>;

        $i7 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i8 = $i9 - $i7;

        r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i8);

        if r1 == null goto label04;

        virtualinvoke r1.<android.view.View: void setPressed(boolean)>(0);

     label04:
        virtualinvoke r0.<android.widget.AbsListView: void reportScrollStateChange(int)>(1);

        r2 = virtualinvoke r0.<android.widget.AbsListView: android.view.ViewParent getParent()>();

        if r2 == null goto label05;

        interfaceinvoke r2.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

     label05:
        specialinvoke r0.<android.widget.AbsListView: void scrollIfNeeded(int)>(i0);

        return 1;

     label06:
        z0 = 0;

        goto label01;

     label07:
        r0.<android.widget.AbsListView: int mTouchMode> = 3;

        if i1 <= 0 goto label09;

        i3 = r0.<android.widget.AbsListView: int mTouchSlop>;

     label08:
        r0.<android.widget.AbsListView: int mMotionCorrection> = i3;

        goto label03;

     label09:
        $i6 = r0.<android.widget.AbsListView: int mTouchSlop>;

        i3 = neg $i6;

        goto label08;

     label10:
        return 0;
    }

    private void updateOnScreenCheckedViews()
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, i3, $i4;
        boolean z0, $z1, $z2, $z3;
        android.view.View r1;
        android.content.Context $r2;
        android.content.pm.ApplicationInfo $r3;
        android.util.SparseBooleanArray $r4, $r5;
        android.widget.Checkable $r6;

        r0 := @this: android.widget.AbsListView;

        i0 = r0.<android.widget.AbsListView: int mFirstPosition>;

        i1 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        $r2 = virtualinvoke r0.<android.widget.AbsListView: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i4 = $r3.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i4 < 11 goto label4;

        z0 = 1;

     label1:
        i2 = 0;

     label2:
        if i2 >= i1 goto label6;

        r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i2);

        i3 = i0 + i2;

        $z1 = r1 instanceof android.widget.Checkable;

        if $z1 == 0 goto label5;

        $r6 = (android.widget.Checkable) r1;

        $r5 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        $z3 = virtualinvoke $r5.<android.util.SparseBooleanArray: boolean get(int)>(i3);

        interfaceinvoke $r6.<android.widget.Checkable: void setChecked(boolean)>($z3);

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        z0 = 0;

        goto label1;

     label5:
        if z0 == 0 goto label3;

        $r4 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        $z2 = virtualinvoke $r4.<android.util.SparseBooleanArray: boolean get(int)>(i3);

        virtualinvoke r1.<android.view.View: void setActivated(boolean)>($z2);

        goto label3;

     label6:
        return;
    }

    private void useDefaultSelector()
    {
        android.widget.AbsListView r0;
        android.content.res.Resources $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.widget.AbsListView;

        $r1 = virtualinvoke r0.<android.widget.AbsListView: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(17301602);

        virtualinvoke r0.<android.widget.AbsListView: void setSelector(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void addTouchables(java.util.ArrayList)
    {
        android.widget.AbsListView r0;
        java.util.ArrayList r1;
        int i0, i1, i2, $i3;
        android.widget.ListAdapter r2;
        android.view.View r3;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: java.util.ArrayList;

        i0 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        i1 = r0.<android.widget.AbsListView: int mFirstPosition>;

        r2 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        if r2 != null goto label2;

     label1:
        return;

     label2:
        i2 = 0;

     label3:
        if i2 >= i0 goto label1;

        r3 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i2);

        $i3 = i1 + i2;

        $z0 = interfaceinvoke r2.<android.widget.ListAdapter: boolean isEnabled(int)>($i3);

        if $z0 == 0 goto label4;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

     label4:
        virtualinvoke r3.<android.view.View: void addTouchables(java.util.ArrayList)>(r1);

        i2 = i2 + 1;

        goto label3;
    }

    public void afterTextChanged(android.text.Editable)
    {
        android.widget.AbsListView r0;
        android.text.Editable r1;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.text.Editable;

        return;
    }

    public void beforeTextChanged(java.lang.CharSequence, int, int, int)
    {
        android.widget.AbsListView r0;
        java.lang.CharSequence r1;
        int i0, i1, i2;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        return;
    }

    public boolean canScrollList(int)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        android.graphics.Rect r1;
        android.view.View $r2, $r3;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if i1 != 0 goto label2;

     label1:
        return 0;

     label2:
        i2 = r0.<android.widget.AbsListView: int mFirstPosition>;

        r1 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        if i0 <= 0 goto label4;

        $i6 = i1 - 1;

        $r3 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i6);

        i4 = virtualinvoke $r3.<android.view.View: int getBottom()>();

        $i8 = i2 + i1;

        $i7 = r0.<android.widget.AbsListView: int mItemCount>;

        if $i8 < $i7 goto label3;

        $i10 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $i9 = r1.<android.graphics.Rect: int bottom>;

        $i11 = $i10 - $i9;

        if i4 <= $i11 goto label1;

     label3:
        return 1;

     label4:
        $r2 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(0);

        i3 = virtualinvoke $r2.<android.view.View: int getTop()>();

        if i2 > 0 goto label5;

        $i5 = r1.<android.graphics.Rect: int top>;

        if i3 >= $i5 goto label1;

     label5:
        return 1;
    }

    public boolean checkInputConnectionProxy(android.view.View)
    {
        android.widget.AbsListView r0;
        android.view.View r1;
        android.widget.EditText $r2;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        if r1 != $r2 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.widget.AbsListView r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof android.widget.AbsListView$LayoutParams;

        return $z0;
    }

    public void clearChoices()
    {
        android.widget.AbsListView r0;
        android.util.SparseBooleanArray $r1, $r4;
        android.util.LongSparseArray $r2, $r3;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        if $r1 == null goto label1;

        $r4 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        virtualinvoke $r4.<android.util.SparseBooleanArray: void clear()>();

     label1:
        $r2 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        if $r2 == null goto label2;

        $r3 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        virtualinvoke $r3.<android.util.LongSparseArray: void clear()>();

     label2:
        r0.<android.widget.AbsListView: int mCheckedItemCount> = 0;

        return;
    }

    public void clearTextFilter()
    {
        android.widget.AbsListView r0;
        boolean $z0, $z1;
        android.widget.EditText $r1;
        android.widget.PopupWindow $r2, $r3;

        r0 := @this: android.widget.AbsListView;

        $z0 = r0.<android.widget.AbsListView: boolean mFiltered>;

        if $z0 == 0 goto label1;

        $r1 = specialinvoke r0.<android.widget.AbsListView: android.widget.EditText getTextFilterInput()>();

        virtualinvoke $r1.<android.widget.EditText: void setText(java.lang.CharSequence)>("");

        r0.<android.widget.AbsListView: boolean mFiltered> = 0;

        $r2 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        if $r2 == null goto label1;

        $r3 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        $z1 = virtualinvoke $r3.<android.widget.PopupWindow: boolean isShowing()>();

        if $z1 == 0 goto label1;

        specialinvoke r0.<android.widget.AbsListView: void dismissPopup()>();

     label1:
        return;
    }

    protected int computeVerticalScrollExtent()
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        android.view.View r1, r2;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        i0 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if i0 <= 0 goto label4;

        $z0 = r0.<android.widget.AbsListView: boolean mSmoothScrollbarEnabled>;

        if $z0 == 0 goto label3;

        i1 = i0 * 100;

        r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(0);

        i2 = virtualinvoke r1.<android.view.View: int getTop()>();

        i3 = virtualinvoke r1.<android.view.View: int getHeight()>();

        if i3 <= 0 goto label1;

        $i10 = i2 * 100;

        $i12 = $i10 / i3;

        i1 = i1 + $i12;

     label1:
        $i6 = i0 - 1;

        r2 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i6);

        i4 = virtualinvoke r2.<android.view.View: int getBottom()>();

        i5 = virtualinvoke r2.<android.view.View: int getHeight()>();

        if i5 <= 0 goto label2;

        $i7 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $i9 = i4 - $i7;

        $i8 = 100 * $i9;

        $i11 = $i8 / i5;

        i1 = i1 - $i11;

     label2:
        return i1;

     label3:
        return 1;

     label4:
        return 0;
    }

    protected int computeVerticalScrollOffset()
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        android.view.View r1;
        boolean $z0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;

        r0 := @this: android.widget.AbsListView;

        i0 = r0.<android.widget.AbsListView: int mFirstPosition>;

        i1 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        i2 = 0;

        if i0 < 0 goto label1;

        i2 = 0;

        if i1 <= 0 goto label1;

        $z0 = r0.<android.widget.AbsListView: boolean mSmoothScrollbarEnabled>;

        if $z0 == 0 goto label2;

        r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(0);

        i5 = virtualinvoke r1.<android.view.View: int getTop()>();

        i6 = virtualinvoke r1.<android.view.View: int getHeight()>();

        i2 = 0;

        if i6 <= 0 goto label1;

        $i13 = i0 * 100;

        $i11 = i5 * 100;

        $i10 = $i11 / i6;

        $i14 = $i13 - $i10;

        $i12 = r0.<android.widget.AbsListView: int mScrollY>;

        $f7 = (float) $i12;

        $i15 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $f10 = (float) $i15;

        $f9 = $f7 / $f10;

        $i16 = r0.<android.widget.AbsListView: int mItemCount>;

        $f8 = (float) $i16;

        $f11 = $f9 * $f8;

        $f12 = 100.0F * $f11;

        $i17 = (int) $f12;

        $i18 = $i14 + $i17;

        i2 = staticinvoke <java.lang.Math: int max(int,int)>($i18, 0);

     label1:
        return i2;

     label2:
        i3 = r0.<android.widget.AbsListView: int mItemCount>;

        if i0 != 0 goto label4;

        i4 = 0;

     label3:
        $f6 = (float) i0;

        $f4 = (float) i1;

        $f1 = (float) i4;

        $f0 = (float) i3;

        $f2 = $f1 / $f0;

        $f3 = $f4 * $f2;

        $f5 = $f6 + $f3;

        $i9 = (int) $f5;

        return $i9;

     label4:
        $i7 = i0 + i1;

        if $i7 != i3 goto label5;

        i4 = i3;

        goto label3;

     label5:
        $i8 = i1 / 2;

        i4 = i0 + $i8;

        goto label3;
    }

    protected int computeVerticalScrollRange()
    {
        android.widget.AbsListView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean $z0;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: android.widget.AbsListView;

        $z0 = r0.<android.widget.AbsListView: boolean mSmoothScrollbarEnabled>;

        if $z0 == 0 goto label2;

        $i2 = r0.<android.widget.AbsListView: int mItemCount>;

        $i3 = 100 * $i2;

        i0 = staticinvoke <java.lang.Math: int max(int,int)>($i3, 0);

        $i4 = r0.<android.widget.AbsListView: int mScrollY>;

        if $i4 == 0 goto label1;

        $i5 = r0.<android.widget.AbsListView: int mScrollY>;

        $f0 = (float) $i5;

        $i6 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $f1 = (float) $i6;

        $f3 = $f0 / $f1;

        $i7 = r0.<android.widget.AbsListView: int mItemCount>;

        $f2 = (float) $i7;

        $f5 = $f3 * $f2;

        $f4 = 100.0F * $f5;

        $i9 = (int) $f4;

        $i8 = staticinvoke <java.lang.Math: int abs(int)>($i9);

        i0 = i0 + $i8;

     label1:
        return i0;

     label2:
        $i1 = r0.<android.widget.AbsListView: int mItemCount>;

        return $i1;
    }

    void confirmCheckedPositionsById()
    {
        android.widget.AbsListView r0;
        boolean z0, z1;
        int i0, i2, i3, i4, i5, $i6, $i9, $i10, $i11, $i12, $i13;
        long l1, $l8, $l14;
        android.util.SparseBooleanArray $r1, $r10, $r18;
        android.util.LongSparseArray $r2, $r5, $r6, $r11, $r19;
        android.view.ActionMode $r3, $r4, $r13, $r14;
        java.lang.Integer $r7, $r17;
        java.lang.Object $r8;
        android.widget.ListAdapter $r9, $r16;
        byte $b7, $b15;
        android.widget.AbsListView$MultiChoiceModeWrapper $r12, $r15;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        virtualinvoke $r1.<android.util.SparseBooleanArray: void clear()>();

        z0 = 0;

        i0 = 0;

     label1:
        $r2 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        $i6 = virtualinvoke $r2.<android.util.LongSparseArray: int size()>();

        if i0 >= $i6 goto label7;

        $r5 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        l1 = virtualinvoke $r5.<android.util.LongSparseArray: long keyAt(int)>(i0);

        $r6 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        $r8 = virtualinvoke $r6.<android.util.LongSparseArray: java.lang.Object valueAt(int)>(i0);

        $r7 = (java.lang.Integer) $r8;

        i2 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        $r9 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $l8 = interfaceinvoke $r9.<android.widget.ListAdapter: long getItemId(int)>(i2);

        $b7 = l1 cmp $l8;

        if $b7 == 0 goto label6;

        $i9 = i2 - 20;

        i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i9);

        $i11 = i2 + 20;

        $i10 = r0.<android.widget.AbsListView: int mItemCount>;

        i4 = staticinvoke <java.lang.Math: int min(int,int)>($i11, $i10);

        i5 = i3;

     label2:
        z1 = 0;

        if i5 >= i4 goto label3;

        $r16 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $l14 = interfaceinvoke $r16.<android.widget.ListAdapter: long getItemId(int)>(i5);

        $b15 = l1 cmp $l14;

        if $b15 != 0 goto label5;

        z1 = 1;

        $r18 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        virtualinvoke $r18.<android.util.SparseBooleanArray: void put(int,boolean)>(i5, 1);

        $r19 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        virtualinvoke $r19.<android.util.LongSparseArray: void setValueAt(int,java.lang.Object)>(i0, $r17);

     label3:
        if z1 != 0 goto label4;

        $r11 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        virtualinvoke $r11.<android.util.LongSparseArray: void delete(long)>(l1);

        i0 = i0 + -1;

        $i12 = r0.<android.widget.AbsListView: int mCheckedItemCount>;

        $i13 = -1 + $i12;

        r0.<android.widget.AbsListView: int mCheckedItemCount> = $i13;

        z0 = 1;

        $r14 = r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode>;

        if $r14 == null goto label4;

        $r12 = r0.<android.widget.AbsListView: android.widget.AbsListView$MultiChoiceModeWrapper mMultiChoiceModeCallback>;

        if $r12 == null goto label4;

        $r15 = r0.<android.widget.AbsListView: android.widget.AbsListView$MultiChoiceModeWrapper mMultiChoiceModeCallback>;

        $r13 = r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode>;

        virtualinvoke $r15.<android.widget.AbsListView$MultiChoiceModeWrapper: void onItemCheckedStateChanged(android.view.ActionMode,int,long,boolean)>($r13, i2, l1, 0);

     label4:
        i0 = i0 + 1;

        goto label1;

     label5:
        i5 = i5 + 1;

        goto label2;

     label6:
        $r10 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        virtualinvoke $r10.<android.util.SparseBooleanArray: void put(int,boolean)>(i2, 1);

        goto label4;

     label7:
        if z0 == 0 goto label8;

        $r3 = r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode>;

        if $r3 == null goto label8;

        $r4 = r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode>;

        virtualinvoke $r4.<android.view.ActionMode: void invalidate()>();

     label8:
        return;
    }

    android.view.ContextMenu$ContextMenuInfo createContextMenuInfo(android.view.View, int, long)
    {
        android.widget.AbsListView r0;
        android.view.View r1;
        int i0;
        long l1;
        android.widget.AdapterView$AdapterContextMenuInfo $r2;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        $r2 = new android.widget.AdapterView$AdapterContextMenuInfo;

        specialinvoke $r2.<android.widget.AdapterView$AdapterContextMenuInfo: void <init>(android.view.View,int,long)>(r1, i0, l1);

        return $r2;
    }

    public void deferNotifyDataSetChanged()
    {
        android.widget.AbsListView r0;

        r0 := @this: android.widget.AbsListView;

        r0.<android.widget.AbsListView: boolean mDeferNotifyDataSetChanged> = 1;

        return;
    }

    protected void dispatchDraw(android.graphics.Canvas)
    {
        android.widget.AbsListView r0;
        android.graphics.Canvas r1;
        boolean z0, z1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.graphics.Canvas;

        $i3 = r0.<android.widget.AbsListView: int mGroupFlags>;

        $i4 = 34 & $i3;

        if $i4 != 34 goto label6;

        z0 = 1;

     label1:
        i0 = 0;

        if z0 == 0 goto label2;

        i0 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

        i1 = r0.<android.widget.AbsListView: int mScrollX>;

        i2 = r0.<android.widget.AbsListView: int mScrollY>;

        $i7 = r0.<android.widget.AbsListView: int mPaddingLeft>;

        $i21 = i1 + $i7;

        $i8 = r0.<android.widget.AbsListView: int mPaddingTop>;

        $i22 = i2 + $i8;

        $i9 = r0.<android.widget.AbsListView: int mRight>;

        $i12 = i1 + $i9;

        $i10 = r0.<android.widget.AbsListView: int mLeft>;

        $i14 = $i12 - $i10;

        $i11 = r0.<android.widget.AbsListView: int mPaddingRight>;

        $i19 = $i14 - $i11;

        $i13 = r0.<android.widget.AbsListView: int mBottom>;

        $i15 = i2 + $i13;

        $i16 = r0.<android.widget.AbsListView: int mTop>;

        $i17 = $i15 - $i16;

        $i18 = r0.<android.widget.AbsListView: int mPaddingBottom>;

        $i20 = $i17 - $i18;

        virtualinvoke r1.<android.graphics.Canvas: boolean clipRect(int,int,int,int)>($i21, $i22, $i19, $i20);

        $i23 = r0.<android.widget.AbsListView: int mGroupFlags>;

        $i24 = -35 & $i23;

        r0.<android.widget.AbsListView: int mGroupFlags> = $i24;

     label2:
        z1 = r0.<android.widget.AbsListView: boolean mDrawSelectorOnTop>;

        if z1 != 0 goto label3;

        specialinvoke r0.<android.widget.AbsListView: void drawSelector(android.graphics.Canvas)>(r1);

     label3:
        specialinvoke r0.<android.widget.AdapterView: void dispatchDraw(android.graphics.Canvas)>(r1);

        if z1 == 0 goto label4;

        specialinvoke r0.<android.widget.AbsListView: void drawSelector(android.graphics.Canvas)>(r1);

     label4:
        if z0 == 0 goto label5;

        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i0);

        $i5 = r0.<android.widget.AbsListView: int mGroupFlags>;

        $i6 = 34 | $i5;

        r0.<android.widget.AbsListView: int mGroupFlags> = $i6;

     label5:
        return;

     label6:
        z0 = 0;

        goto label1;
    }

    protected void dispatchSetPressed(boolean)
    {
        android.widget.AbsListView r0;
        boolean z0;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        android.widget.AbsListView r0;
        android.graphics.Canvas r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31;
        android.widget.EdgeEffect $r2, $r3, $r4, $r7, $r8, $r9, $r11, $r14, $r15, $r16, $r17;
        boolean $z0, $z1, $z2, $z3;
        android.graphics.Rect $r5, $r6, $r10, $r12, $r13, $r18;
        float $f0, $f1, $f2, $f3, $f4;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.widget.AdapterView: void draw(android.graphics.Canvas)>(r1);

        $r2 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        if $r2 == null goto label4;

        i0 = r0.<android.widget.AbsListView: int mScrollY>;

        $r3 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        $z0 = virtualinvoke $r3.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z0 != 0 goto label2;

        i8 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $r12 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i24 = $r12.<android.graphics.Rect: int left>;

        $i23 = r0.<android.widget.AbsListView: int mGlowPaddingLeft>;

        i9 = $i24 + $i23;

        $r13 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i26 = $r13.<android.graphics.Rect: int right>;

        $i27 = r0.<android.widget.AbsListView: int mGlowPaddingRight>;

        i10 = $i26 + $i27;

        $i25 = virtualinvoke r0.<android.widget.AbsListView: int getWidth()>();

        $i30 = $i25 - i9;

        i11 = $i30 - i10;

        $i29 = r0.<android.widget.AbsListView: int mFirstPositionDistanceGuess>;

        $i28 = i0 + $i29;

        i12 = staticinvoke <java.lang.Math: int min(int,int)>(0, $i28);

        $f3 = (float) i9;

        $f4 = (float) i12;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f3, $f4);

        $r14 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        $i31 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        virtualinvoke $r14.<android.widget.EdgeEffect: void setSize(int,int)>(i11, $i31);

        $r17 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        $z3 = virtualinvoke $r17.<android.widget.EdgeEffect: boolean draw(android.graphics.Canvas)>(r1);

        if $z3 == 0 goto label1;

        $r16 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        virtualinvoke $r16.<android.widget.EdgeEffect: void setPosition(int,int)>(i9, i12);

        $r15 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        $r18 = virtualinvoke $r15.<android.widget.EdgeEffect: android.graphics.Rect getBounds(boolean)>(0);

        virtualinvoke r0.<android.widget.AbsListView: void invalidate(android.graphics.Rect)>($r18);

     label1:
        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i8);

     label2:
        $r4 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $z1 = virtualinvoke $r4.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z1 != 0 goto label4;

        i1 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $r5 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i13 = $r5.<android.graphics.Rect: int left>;

        $i14 = r0.<android.widget.AbsListView: int mGlowPaddingLeft>;

        i2 = $i13 + $i14;

        $r6 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i17 = $r6.<android.graphics.Rect: int right>;

        $i15 = r0.<android.widget.AbsListView: int mGlowPaddingRight>;

        i3 = $i17 + $i15;

        $i16 = virtualinvoke r0.<android.widget.AbsListView: int getWidth()>();

        $i18 = $i16 - i2;

        i4 = $i18 - i3;

        i5 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $i20 = neg i4;

        i6 = i2 + $i20;

        $i19 = r0.<android.widget.AbsListView: int mLastPositionDistanceGuess>;

        $i21 = i0 + $i19;

        i7 = staticinvoke <java.lang.Math: int max(int,int)>(i5, $i21);

        $f1 = (float) i6;

        $f0 = (float) i7;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f1, $f0);

        $f2 = (float) i4;

        virtualinvoke r1.<android.graphics.Canvas: void rotate(float,float,float)>(180.0F, $f2, 0.0F);

        $r8 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        virtualinvoke $r8.<android.widget.EdgeEffect: void setSize(int,int)>(i4, i5);

        $r7 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $z2 = virtualinvoke $r7.<android.widget.EdgeEffect: boolean draw(android.graphics.Canvas)>(r1);

        if $z2 == 0 goto label3;

        $r11 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $i22 = i6 + i4;

        virtualinvoke $r11.<android.widget.EdgeEffect: void setPosition(int,int)>($i22, i7);

        $r9 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $r10 = virtualinvoke $r9.<android.widget.EdgeEffect: android.graphics.Rect getBounds(boolean)>(1);

        virtualinvoke r0.<android.widget.AbsListView: void invalidate(android.graphics.Rect)>($r10);

     label3:
        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i1);

     label4:
        return;
    }

    protected void drawableStateChanged()
    {
        android.widget.AbsListView r0;

        r0 := @this: android.widget.AbsListView;

        specialinvoke r0.<android.widget.AdapterView: void drawableStateChanged()>();

        virtualinvoke r0.<android.widget.AbsListView: void updateSelectorState()>();

        return;
    }

    abstract void fillGap(boolean);

    int findClosestMotionRow(int)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, $i3, $i4, $i5;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if i1 != 0 goto label2;

        i2 = -1;

     label1:
        return i2;

     label2:
        i2 = virtualinvoke r0.<android.widget.AbsListView: int findMotionRow(int)>(i0);

        if i2 != -1 goto label1;

        $i3 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i4 = i1 + $i3;

        $i5 = -1 + $i4;

        return $i5;
    }

    abstract int findMotionRow(int);

    public android.view.View findViewByAccessibilityIdTraversal(int)
    {
        android.widget.AbsListView r0;
        int i0, $i1;
        boolean $z0;
        android.view.View $r1;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<android.widget.AbsListView: int getAccessibilityViewId()>();

        if i0 != $i1 goto label1;

        return r0;

     label1:
        $z0 = r0.<android.widget.AbsListView: boolean mDataChanged>;

        if $z0 == 0 goto label2;

        return null;

     label2:
        $r1 = specialinvoke r0.<android.widget.AdapterView: android.view.View findViewByAccessibilityIdTraversal(int)>(i0);

        return $r1;
    }

    protected android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        android.widget.AbsListView r0;
        android.widget.AbsListView$LayoutParams $r1;

        r0 := @this: android.widget.AbsListView;

        $r1 = new android.widget.AbsListView$LayoutParams;

        specialinvoke $r1.<android.widget.AbsListView$LayoutParams: void <init>(int,int,int)>(-1, -2, 0);

        return $r1;
    }

    public volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.widget.AbsListView r0;
        android.util.AttributeSet r1;
        android.widget.AbsListView$LayoutParams $r2;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = virtualinvoke r0.<android.widget.AbsListView: android.widget.AbsListView$LayoutParams generateLayoutParams(android.util.AttributeSet)>(r1);

        return $r2;
    }

    protected android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.widget.AbsListView r0;
        android.view.ViewGroup$LayoutParams r1;
        android.widget.AbsListView$LayoutParams $r2;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r2 = new android.widget.AbsListView$LayoutParams;

        specialinvoke $r2.<android.widget.AbsListView$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r1);

        return $r2;
    }

    public android.widget.AbsListView$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.widget.AbsListView r0;
        android.util.AttributeSet r1;
        android.widget.AbsListView$LayoutParams $r2;
        android.content.Context $r3;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = new android.widget.AbsListView$LayoutParams;

        $r3 = virtualinvoke r0.<android.widget.AbsListView: android.content.Context getContext()>();

        specialinvoke $r2.<android.widget.AbsListView$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, r1);

        return $r2;
    }

    protected float getBottomFadingEdgeStrength()
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        float f0, f1, $f2, $f3;
        android.view.View $r1;

        r0 := @this: android.widget.AbsListView;

        i0 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        f0 = specialinvoke r0.<android.widget.AdapterView: float getBottomFadingEdgeStrength()>();

        if i0 != 0 goto label2;

     label1:
        return f0;

     label2:
        $i3 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i4 = i0 + $i3;

        $i7 = -1 + $i4;

        $i5 = r0.<android.widget.AbsListView: int mItemCount>;

        $i6 = -1 + $i5;

        if $i7 >= $i6 goto label3;

        return 1.0F;

     label3:
        $i8 = i0 - 1;

        $r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i8);

        i1 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        i2 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $i9 = virtualinvoke r0.<android.widget.AbsListView: int getVerticalFadingEdgeLength()>();

        f1 = (float) $i9;

        $i11 = r0.<android.widget.AbsListView: int mPaddingBottom>;

        $i10 = i2 - $i11;

        if i1 <= $i10 goto label1;

        $i12 = i1 - i2;

        $i13 = r0.<android.widget.AbsListView: int mPaddingBottom>;

        $i14 = $i12 + $i13;

        $f2 = (float) $i14;

        $f3 = $f2 / f1;

        return $f3;
    }

    protected int getBottomPaddingOffset()
    {
        android.widget.AbsListView r0;
        int $i0, $i1, $i2;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mGroupFlags>;

        $i1 = 34 & $i0;

        if $i1 != 34 goto label1;

        return 0;

     label1:
        $i2 = r0.<android.widget.AbsListView: int mPaddingBottom>;

        return $i2;
    }

    public int getCacheColorHint()
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mCacheColorHint>;

        return $i0;
    }

    public int getCheckedItemCount()
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mCheckedItemCount>;

        return $i0;
    }

    public long[] getCheckedItemIds()
    {
        android.widget.AbsListView r0;
        long[] r1;
        android.util.LongSparseArray r2, $r3;
        int i0, i1, $i2;
        android.widget.ListAdapter $r4;
        long $l3;

        r0 := @this: android.widget.AbsListView;

        $i2 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i2 == 0 goto label1;

        $r3 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        if $r3 == null goto label1;

        $r4 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        if $r4 != null goto label3;

     label1:
        r1 = newarray (long)[0];

     label2:
        return r1;

     label3:
        r2 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        i0 = virtualinvoke r2.<android.util.LongSparseArray: int size()>();

        r1 = newarray (long)[i0];

        i1 = 0;

     label4:
        if i1 >= i0 goto label2;

        $l3 = virtualinvoke r2.<android.util.LongSparseArray: long keyAt(int)>(i1);

        r1[i1] = $l3;

        i1 = i1 + 1;

        goto label4;
    }

    public int getCheckedItemPosition()
    {
        android.widget.AbsListView r0;
        int $i0, $i1, $i2;
        android.util.SparseBooleanArray $r1, $r2, $r3;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i0 != 1 goto label1;

        $r1 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        $i1 = virtualinvoke $r2.<android.util.SparseBooleanArray: int size()>();

        if $i1 != 1 goto label1;

        $r3 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        $i2 = virtualinvoke $r3.<android.util.SparseBooleanArray: int keyAt(int)>(0);

        return $i2;

     label1:
        return -1;
    }

    public android.util.SparseBooleanArray getCheckedItemPositions()
    {
        android.widget.AbsListView r0;
        int $i0;
        android.util.SparseBooleanArray $r1;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i0 == 0 goto label1;

        $r1 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        return $r1;

     label1:
        return null;
    }

    public int getChoiceMode()
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mChoiceMode>;

        return $i0;
    }

    protected android.view.ContextMenu$ContextMenuInfo getContextMenuInfo()
    {
        android.widget.AbsListView r0;
        android.view.ContextMenu$ContextMenuInfo $r1;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo mContextMenuInfo>;

        return $r1;
    }

    public void getFocusedRect(android.graphics.Rect)
    {
        android.widget.AbsListView r0;
        android.graphics.Rect r1;
        android.view.View r2;
        android.view.ViewParent $r3;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.graphics.Rect;

        r2 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getSelectedView()>();

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<android.view.View: android.view.ViewParent getParent()>();

        if $r3 != r0 goto label1;

        virtualinvoke r2.<android.view.View: void getFocusedRect(android.graphics.Rect)>(r1);

        virtualinvoke r0.<android.widget.AbsListView: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>(r2, r1);

        return;

     label1:
        specialinvoke r0.<android.widget.AdapterView: void getFocusedRect(android.graphics.Rect)>(r1);

        return;
    }

    int getFooterViewsCount()
    {
        android.widget.AbsListView r0;

        r0 := @this: android.widget.AbsListView;

        return 0;
    }

    int getHeaderViewsCount()
    {
        android.widget.AbsListView r0;

        r0 := @this: android.widget.AbsListView;

        return 0;
    }

    protected int getLeftPaddingOffset()
    {
        android.widget.AbsListView r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mGroupFlags>;

        $i1 = 34 & $i0;

        if $i1 != 34 goto label1;

        return 0;

     label1:
        $i2 = r0.<android.widget.AbsListView: int mPaddingLeft>;

        $i3 = neg $i2;

        return $i3;
    }

    public int getListPaddingBottom()
    {
        android.widget.AbsListView r0;
        android.graphics.Rect $r1;
        int $i0;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i0 = $r1.<android.graphics.Rect: int bottom>;

        return $i0;
    }

    public int getListPaddingLeft()
    {
        android.widget.AbsListView r0;
        android.graphics.Rect $r1;
        int $i0;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i0 = $r1.<android.graphics.Rect: int left>;

        return $i0;
    }

    public int getListPaddingRight()
    {
        android.widget.AbsListView r0;
        android.graphics.Rect $r1;
        int $i0;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i0 = $r1.<android.graphics.Rect: int right>;

        return $i0;
    }

    public int getListPaddingTop()
    {
        android.widget.AbsListView r0;
        android.graphics.Rect $r1;
        int $i0;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i0 = $r1.<android.graphics.Rect: int top>;

        return $i0;
    }

    protected int getRightPaddingOffset()
    {
        android.widget.AbsListView r0;
        int $i0, $i1, $i2;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mGroupFlags>;

        $i1 = 34 & $i0;

        if $i1 != 34 goto label1;

        return 0;

     label1:
        $i2 = r0.<android.widget.AbsListView: int mPaddingRight>;

        return $i2;
    }

    public android.view.View getSelectedView()
    {
        android.widget.AbsListView r0;
        int $i0, $i1, $i2, $i3, $i4;
        android.view.View $r1;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mItemCount>;

        if $i0 <= 0 goto label1;

        $i1 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        if $i1 < 0 goto label1;

        $i3 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        $i2 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i4 = $i3 - $i2;

        $r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i4);

        return $r1;

     label1:
        return null;
    }

    public android.graphics.drawable.Drawable getSelector()
    {
        android.widget.AbsListView r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        return $r1;
    }

    public int getSolidColor()
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mCacheColorHint>;

        return $i0;
    }

    public java.lang.CharSequence getTextFilter()
    {
        android.widget.AbsListView r0;
        boolean $z0;
        android.widget.EditText $r1, $r2;
        android.text.Editable $r3;

        r0 := @this: android.widget.AbsListView;

        $z0 = r0.<android.widget.AbsListView: boolean mTextFilterEnabled>;

        if $z0 == 0 goto label1;

        $r1 = r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        $r3 = virtualinvoke $r2.<android.widget.EditText: android.text.Editable getText()>();

        return $r3;

     label1:
        return null;
    }

    protected float getTopFadingEdgeStrength()
    {
        android.widget.AbsListView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        float f0, f1, $f2, $f3;
        android.view.View $r1;

        r0 := @this: android.widget.AbsListView;

        i0 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        f0 = specialinvoke r0.<android.widget.AdapterView: float getTopFadingEdgeStrength()>();

        if i0 != 0 goto label2;

     label1:
        return f0;

     label2:
        $i2 = r0.<android.widget.AbsListView: int mFirstPosition>;

        if $i2 <= 0 goto label3;

        return 1.0F;

     label3:
        $r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(0);

        i1 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $i3 = virtualinvoke r0.<android.widget.AbsListView: int getVerticalFadingEdgeLength()>();

        f1 = (float) $i3;

        $i4 = r0.<android.widget.AbsListView: int mPaddingTop>;

        if i1 >= $i4 goto label1;

        $i5 = r0.<android.widget.AbsListView: int mPaddingTop>;

        $i6 = i1 - $i5;

        $i7 = neg $i6;

        $f2 = (float) $i7;

        $f3 = $f2 / f1;

        return $f3;
    }

    protected int getTopPaddingOffset()
    {
        android.widget.AbsListView r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mGroupFlags>;

        $i1 = 34 & $i0;

        if $i1 != 34 goto label1;

        return 0;

     label1:
        $i2 = r0.<android.widget.AbsListView: int mPaddingTop>;

        $i3 = neg $i2;

        return $i3;
    }

    public int getTranscriptMode()
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mTranscriptMode>;

        return $i0;
    }

    public int getVerticalScrollbarWidth()
    {
        android.widget.AbsListView r0;
        android.widget.FastScroller $r1, $r2, $r3;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        $z0 = virtualinvoke $r2.<android.widget.FastScroller: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        $i1 = specialinvoke r0.<android.widget.AdapterView: int getVerticalScrollbarWidth()>();

        $r3 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        $i2 = virtualinvoke $r3.<android.widget.FastScroller: int getWidth()>();

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i1, $i2);

        return $i3;

     label1:
        $i0 = specialinvoke r0.<android.widget.AdapterView: int getVerticalScrollbarWidth()>();

        return $i0;
    }

    protected void handleDataChanged()
    {
        android.widget.AbsListView r0;
        byte b0, $b22;
        int i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33;
        android.view.View r1;
        android.widget.AbsListView$RecycleBin $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z6;
        long $l21, $l23;
        android.widget.ListAdapter $r3, $r4;

        r0 := @this: android.widget.AbsListView;

        b0 = 3;

        i1 = r0.<android.widget.AbsListView: int mItemCount>;

        i2 = r0.<android.widget.AbsListView: int mLastHandledItemCount>;

        $i10 = r0.<android.widget.AbsListView: int mItemCount>;

        r0.<android.widget.AbsListView: int mLastHandledItemCount> = $i10;

        $i11 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i11 == 0 goto label01;

        $r4 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        if $r4 == null goto label01;

        $r3 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $z6 = interfaceinvoke $r3.<android.widget.ListAdapter: boolean hasStableIds()>();

        if $z6 == 0 goto label01;

        virtualinvoke r0.<android.widget.AbsListView: void confirmCheckedPositionsById()>();

     label01:
        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        virtualinvoke $r2.<android.widget.AbsListView$RecycleBin: void clearTransientStateViews()>();

        if i1 <= 0 goto label19;

        $z2 = r0.<android.widget.AbsListView: boolean mNeedSync>;

        if $z2 == 0 goto label09;

        r0.<android.widget.AbsListView: boolean mNeedSync> = 0;

        r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync> = null;

        $i14 = r0.<android.widget.AbsListView: int mTranscriptMode>;

        if $i14 != 2 goto label03;

        r0.<android.widget.AbsListView: int mLayoutMode> = b0;

     label02:
        return;

     label03:
        $i13 = r0.<android.widget.AbsListView: int mTranscriptMode>;

        if $i13 != 1 goto label08;

        $z4 = r0.<android.widget.AbsListView: boolean mForceTranscriptScroll>;

        if $z4 == 0 goto label04;

        r0.<android.widget.AbsListView: boolean mForceTranscriptScroll> = 0;

        r0.<android.widget.AbsListView: int mLayoutMode> = b0;

        return;

     label04:
        i7 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        $i29 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $i30 = virtualinvoke r0.<android.widget.AbsListView: int getPaddingBottom()>();

        i8 = $i29 - $i30;

        $i33 = i7 - 1;

        r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i33);

        if r1 == null goto label06;

        i9 = virtualinvoke r1.<android.view.View: int getBottom()>();

     label05:
        $i31 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i32 = i7 + $i31;

        if $i32 < i2 goto label07;

        if i9 > i8 goto label07;

        r0.<android.widget.AbsListView: int mLayoutMode> = b0;

        return;

     label06:
        i9 = i8;

        goto label05;

     label07:
        virtualinvoke r0.<android.widget.AbsListView: boolean awakenScrollBars()>();

     label08:
        $i16 = r0.<android.widget.AbsListView: int mSyncMode>;

        tableswitch($i16)
        {
            case 0: goto label12;
            case 1: goto label16;
            default: goto label09;
        };

     label09:
        $z1 = virtualinvoke r0.<android.widget.AbsListView: boolean isInTouchMode()>();

        if $z1 != 0 goto label18;

        i3 = virtualinvoke r0.<android.widget.AbsListView: int getSelectedItemPosition()>();

        if i3 < i1 goto label10;

        i3 = i1 - 1;

     label10:
        if i3 >= 0 goto label11;

        i3 = 0;

     label11:
        i4 = virtualinvoke r0.<android.widget.AbsListView: int lookForSelectablePosition(int,boolean)>(i3, 1);

        if i4 < 0 goto label17;

        virtualinvoke r0.<android.widget.AbsListView: void setNextSelectedPositionInt(int)>(i4);

        return;

     label12:
        $z3 = virtualinvoke r0.<android.widget.AbsListView: boolean isInTouchMode()>();

        if $z3 == 0 goto label13;

        r0.<android.widget.AbsListView: int mLayoutMode> = 5;

        $i27 = r0.<android.widget.AbsListView: int mSyncPosition>;

        $i28 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i27);

        $i25 = i1 - 1;

        $i26 = staticinvoke <java.lang.Math: int min(int,int)>($i28, $i25);

        r0.<android.widget.AbsListView: int mSyncPosition> = $i26;

        return;

     label13:
        i6 = virtualinvoke r0.<android.widget.AbsListView: int findSyncPosition()>();

        if i6 < 0 goto label09;

        $i20 = virtualinvoke r0.<android.widget.AbsListView: int lookForSelectablePosition(int,boolean)>(i6, 1);

        if $i20 != i6 goto label09;

        r0.<android.widget.AbsListView: int mSyncPosition> = i6;

        $l23 = r0.<android.widget.AbsListView: long mSyncHeight>;

        $i24 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $l21 = (long) $i24;

        $b22 = $l23 cmp $l21;

        if $b22 != 0 goto label15;

        r0.<android.widget.AbsListView: int mLayoutMode> = 5;

     label14:
        virtualinvoke r0.<android.widget.AbsListView: void setNextSelectedPositionInt(int)>(i6);

        return;

     label15:
        r0.<android.widget.AbsListView: int mLayoutMode> = 2;

        goto label14;

     label16:
        r0.<android.widget.AbsListView: int mLayoutMode> = 5;

        $i15 = r0.<android.widget.AbsListView: int mSyncPosition>;

        $i18 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i15);

        $i17 = i1 - 1;

        $i19 = staticinvoke <java.lang.Math: int min(int,int)>($i18, $i17);

        r0.<android.widget.AbsListView: int mSyncPosition> = $i19;

        return;

     label17:
        i5 = virtualinvoke r0.<android.widget.AbsListView: int lookForSelectablePosition(int,boolean)>(i3, 0);

        if i5 < 0 goto label19;

        virtualinvoke r0.<android.widget.AbsListView: void setNextSelectedPositionInt(int)>(i5);

        return;

     label18:
        $i12 = r0.<android.widget.AbsListView: int mResurrectToPosition>;

        if $i12 >= 0 goto label02;

     label19:
        $z0 = r0.<android.widget.AbsListView: boolean mStackFromBottom>;

        if $z0 == 0 goto label21;

     label20:
        r0.<android.widget.AbsListView: int mLayoutMode> = b0;

        r0.<android.widget.AbsListView: int mSelectedPosition> = -1;

        r0.<android.widget.AbsListView: long mSelectedRowId> = -9223372036854775808L;

        r0.<android.widget.AbsListView: int mNextSelectedPosition> = -1;

        r0.<android.widget.AbsListView: long mNextSelectedRowId> = -9223372036854775808L;

        r0.<android.widget.AbsListView: boolean mNeedSync> = 0;

        r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync> = null;

        r0.<android.widget.AbsListView: int mSelectorPosition> = -1;

        virtualinvoke r0.<android.widget.AbsListView: void checkSelectionChanged()>();

        return;

     label21:
        b0 = 1;

        goto label20;
    }

    public boolean hasTextFilter()
    {
        android.widget.AbsListView r0;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        $z0 = r0.<android.widget.AbsListView: boolean mFiltered>;

        return $z0;
    }

    void hideSelector()
    {
        android.widget.AbsListView r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        if $i0 == -1 goto label3;

        $i1 = r0.<android.widget.AbsListView: int mLayoutMode>;

        if $i1 == 4 goto label1;

        $i6 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        r0.<android.widget.AbsListView: int mResurrectToPosition> = $i6;

     label1:
        $i2 = r0.<android.widget.AbsListView: int mNextSelectedPosition>;

        if $i2 < 0 goto label2;

        $i4 = r0.<android.widget.AbsListView: int mNextSelectedPosition>;

        $i3 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        if $i4 == $i3 goto label2;

        $i5 = r0.<android.widget.AbsListView: int mNextSelectedPosition>;

        r0.<android.widget.AbsListView: int mResurrectToPosition> = $i5;

     label2:
        virtualinvoke r0.<android.widget.AbsListView: void setSelectedPositionInt(int)>(-1);

        virtualinvoke r0.<android.widget.AbsListView: void setNextSelectedPositionInt(int)>(-1);

        r0.<android.widget.AbsListView: int mSelectedTop> = 0;

     label3:
        return;
    }

    public void invalidateViews()
    {
        android.widget.AbsListView r0;

        r0 := @this: android.widget.AbsListView;

        r0.<android.widget.AbsListView: boolean mDataChanged> = 1;

        virtualinvoke r0.<android.widget.AbsListView: void rememberSyncState()>();

        virtualinvoke r0.<android.widget.AbsListView: void requestLayout()>();

        virtualinvoke r0.<android.widget.AbsListView: void invalidate()>();

        return;
    }

    void invokeOnItemScrollListener()
    {
        android.widget.AbsListView r0;
        android.widget.FastScroller $r1, $r4;
        android.widget.AbsListView$OnScrollListener $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        if $r1 == null goto label1;

        $r4 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        $i3 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i4 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        $i5 = r0.<android.widget.AbsListView: int mItemCount>;

        virtualinvoke $r4.<android.widget.FastScroller: void onScroll(int,int,int)>($i3, $i4, $i5);

     label1:
        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$OnScrollListener mOnScrollListener>;

        if $r2 == null goto label2;

        $r3 = r0.<android.widget.AbsListView: android.widget.AbsListView$OnScrollListener mOnScrollListener>;

        $i0 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i1 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        $i2 = r0.<android.widget.AbsListView: int mItemCount>;

        interfaceinvoke $r3.<android.widget.AbsListView$OnScrollListener: void onScroll(android.widget.AbsListView,int,int,int)>(r0, $i0, $i1, $i2);

     label2:
        virtualinvoke r0.<android.widget.AbsListView: void onScrollChanged(int,int,int,int)>(0, 0, 0, 0);

        return;
    }

    public boolean isFastScrollAlwaysVisible()
    {
        android.widget.AbsListView r0;
        android.widget.FastScroller $r1, $r2, $r3;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        if $r1 != null goto label3;

        $z2 = r0.<android.widget.AbsListView: boolean mFastScrollEnabled>;

        if $z2 == 0 goto label2;

        $z3 = r0.<android.widget.AbsListView: boolean mFastScrollAlwaysVisible>;

        if $z3 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;

     label3:
        $r2 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        $z0 = virtualinvoke $r2.<android.widget.FastScroller: boolean isEnabled()>();

        if $z0 == 0 goto label4;

        $r3 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        $z1 = virtualinvoke $r3.<android.widget.FastScroller: boolean isAlwaysShowEnabled()>();

        if $z1 != 0 goto label1;

     label4:
        return 0;
    }

    public boolean isFastScrollEnabled()
    {
        android.widget.AbsListView r0;
        android.widget.FastScroller $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        if $r1 != null goto label1;

        $z1 = r0.<android.widget.AbsListView: boolean mFastScrollEnabled>;

        return $z1;

     label1:
        $r2 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        $z0 = virtualinvoke $r2.<android.widget.FastScroller: boolean isEnabled()>();

        return $z0;
    }

    protected boolean isInFilterMode()
    {
        android.widget.AbsListView r0;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        $z0 = r0.<android.widget.AbsListView: boolean mFiltered>;

        return $z0;
    }

    public boolean isItemChecked(int)
    {
        android.widget.AbsListView r0;
        int i0, $i1;
        android.util.SparseBooleanArray $r1, $r2;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        $i1 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i1 == 0 goto label1;

        $r1 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        $z0 = virtualinvoke $r2.<android.util.SparseBooleanArray: boolean get(int)>(i0);

        return $z0;

     label1:
        return 0;
    }

    protected boolean isPaddingOffsetRequired()
    {
        android.widget.AbsListView r0;
        int $i0, $i1;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mGroupFlags>;

        $i1 = 34 & $i0;

        if $i1 == 34 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isScrollingCacheEnabled()
    {
        android.widget.AbsListView r0;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        $z0 = r0.<android.widget.AbsListView: boolean mScrollingCacheEnabled>;

        return $z0;
    }

    public boolean isSmoothScrollbarEnabled()
    {
        android.widget.AbsListView r0;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        $z0 = r0.<android.widget.AbsListView: boolean mSmoothScrollbarEnabled>;

        return $z0;
    }

    public boolean isStackFromBottom()
    {
        android.widget.AbsListView r0;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        $z0 = r0.<android.widget.AbsListView: boolean mStackFromBottom>;

        return $z0;
    }

    public boolean isTextFilterEnabled()
    {
        android.widget.AbsListView r0;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        $z0 = r0.<android.widget.AbsListView: boolean mTextFilterEnabled>;

        return $z0;
    }

    protected boolean isVerticalScrollBarHidden()
    {
        android.widget.AbsListView r0;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        $z0 = virtualinvoke r0.<android.widget.AbsListView: boolean isFastScrollEnabled()>();

        return $z0;
    }

    public void jumpDrawablesToCurrentState()
    {
        android.widget.AbsListView r0;
        android.graphics.drawable.Drawable $r1, $r2;

        r0 := @this: android.widget.AbsListView;

        specialinvoke r0.<android.widget.AdapterView: void jumpDrawablesToCurrentState()>();

        $r1 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

     label1:
        return;
    }

    void keyPressed()
    {
        android.widget.AbsListView r0;
        android.graphics.drawable.Drawable r1, r4;
        android.graphics.Rect r2;
        android.view.View r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z7, $z8, $z9;
        int $i0, $i1, $i2, $i4, $i5;
        android.widget.AbsListView$CheckForKeyLongPress $r5, $r6, $r7, $r8;
        long $l3;
        android.graphics.drawable.TransitionDrawable $r9, $r10;

        r0 := @this: android.widget.AbsListView;

        $z1 = virtualinvoke r0.<android.widget.AbsListView: boolean isEnabled()>();

        if $z1 == 0 goto label1;

        $z2 = virtualinvoke r0.<android.widget.AbsListView: boolean isClickable()>();

        if $z2 != 0 goto label2;

     label1:
        return;

     label2:
        r1 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        r2 = r0.<android.widget.AbsListView: android.graphics.Rect mSelectorRect>;

        if r1 == null goto label1;

        $z3 = virtualinvoke r0.<android.widget.AbsListView: boolean isFocused()>();

        if $z3 != 0 goto label3;

        $z8 = virtualinvoke r0.<android.widget.AbsListView: boolean touchModeDrawsInPressedState()>();

        if $z8 == 0 goto label1;

     label3:
        $z4 = virtualinvoke r2.<android.graphics.Rect: boolean isEmpty()>();

        if $z4 != 0 goto label1;

        $i1 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        $i0 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i2 = $i1 - $i0;

        r3 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i2);

        if r3 == null goto label4;

        $z9 = virtualinvoke r3.<android.view.View: boolean hasFocusable()>();

        if $z9 != 0 goto label1;

        virtualinvoke r3.<android.view.View: void setPressed(boolean)>(1);

     label4:
        virtualinvoke r0.<android.widget.AbsListView: void setPressed(boolean)>(1);

        z0 = virtualinvoke r0.<android.widget.AbsListView: boolean isLongClickable()>();

        r4 = virtualinvoke r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable getCurrent()>();

        if r4 == null goto label5;

        $z7 = r4 instanceof android.graphics.drawable.TransitionDrawable;

        if $z7 == 0 goto label5;

        if z0 == 0 goto label7;

        $r10 = (android.graphics.drawable.TransitionDrawable) r4;

        $i5 = staticinvoke <android.view.ViewConfiguration: int getLongPressTimeout()>();

        virtualinvoke $r10.<android.graphics.drawable.TransitionDrawable: void startTransition(int)>($i5);

     label5:
        if z0 == 0 goto label1;

        $z5 = r0.<android.widget.AbsListView: boolean mDataChanged>;

        if $z5 != 0 goto label1;

        $r5 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForKeyLongPress mPendingCheckForKeyLongPress>;

        if $r5 != null goto label6;

        $r8 = new android.widget.AbsListView$CheckForKeyLongPress;

        specialinvoke $r8.<android.widget.AbsListView$CheckForKeyLongPress: void <init>(android.widget.AbsListView,android.widget.AbsListView$1)>(r0, null);

        r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForKeyLongPress mPendingCheckForKeyLongPress> = $r8;

     label6:
        $r7 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForKeyLongPress mPendingCheckForKeyLongPress>;

        virtualinvoke $r7.<android.widget.AbsListView$CheckForKeyLongPress: void rememberWindowAttachCount()>();

        $r6 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForKeyLongPress mPendingCheckForKeyLongPress>;

        $i4 = staticinvoke <android.view.ViewConfiguration: int getLongPressTimeout()>();

        $l3 = (long) $i4;

        virtualinvoke r0.<android.widget.AbsListView: boolean postDelayed(java.lang.Runnable,long)>($r6, $l3);

        return;

     label7:
        $r9 = (android.graphics.drawable.TransitionDrawable) r4;

        virtualinvoke $r9.<android.graphics.drawable.TransitionDrawable: void resetTransition()>();

        goto label5;
    }

    protected void layoutChildren()
    {
        android.widget.AbsListView r0;

        r0 := @this: android.widget.AbsListView;

        return;
    }

    android.view.View obtainView(int, boolean[])
    {
        android.widget.AbsListView r0;
        int i0, $i1, $i2, $i4, $i5, $i6;
        boolean[] r1;
        android.view.View r2, r3, r4, r7;
        android.view.ViewGroup$LayoutParams r5, $r18, $r19, $r20;
        android.widget.AbsListView$LayoutParams r6, $r21;
        android.widget.AbsListView$RecycleBin $r8, $r9, $r22, $r25;
        android.widget.ListAdapter $r10, $r17, $r23, $r24;
        boolean $z0, $z1, $z2, $z3;
        android.view.accessibility.AccessibilityManager $r11;
        android.content.Context $r12;
        android.widget.AbsListView$ListItemAccessibilityDelegate $r13, $r14, $r16;
        android.view.View$AccessibilityDelegate $r15;
        long $l3;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        r1 := @parameter1: boolean[];

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(8L, "obtainView");

        r1[0] = 0;

        $r8 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        r2 = virtualinvoke $r8.<android.widget.AbsListView$RecycleBin: android.view.View getTransientStateView(int)>(i0);

        if r2 == null goto label02;

        $r20 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r21 = (android.widget.AbsListView$LayoutParams) $r20;

        $i6 = $r21.<android.widget.AbsListView$LayoutParams: int viewType>;

        $r24 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $i5 = interfaceinvoke $r24.<android.widget.ListAdapter: int getItemViewType(int)>(i0);

        if $i6 != $i5 goto label01;

        $r23 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        r7 = interfaceinvoke $r23.<android.widget.ListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>(i0, r2, r0);

        if r7 == r2 goto label01;

        $r25 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        virtualinvoke $r25.<android.widget.AbsListView$RecycleBin: void addScrapView(android.view.View,int)>(r7, i0);

     label01:
        r1[0] = 1;

        return r2;

     label02:
        $r9 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        r3 = virtualinvoke $r9.<android.widget.AbsListView$RecycleBin: android.view.View getScrapView(int)>(i0);

        $r10 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        r4 = interfaceinvoke $r10.<android.widget.ListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>(i0, r3, r0);

        if r3 == null goto label03;

        if r4 == r3 goto label10;

        $r22 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        virtualinvoke $r22.<android.widget.AbsListView$RecycleBin: void addScrapView(android.view.View,int)>(r3, i0);

     label03:
        $i1 = r0.<android.widget.AbsListView: int mCacheColorHint>;

        if $i1 == 0 goto label04;

        $i4 = r0.<android.widget.AbsListView: int mCacheColorHint>;

        virtualinvoke r4.<android.view.View: void setDrawingCacheBackgroundColor(int)>($i4);

     label04:
        $i2 = virtualinvoke r4.<android.view.View: int getImportantForAccessibility()>();

        if $i2 != 0 goto label05;

        virtualinvoke r4.<android.view.View: void setImportantForAccessibility(int)>(1);

     label05:
        $z0 = r0.<android.widget.AbsListView: boolean mAdapterHasStableIds>;

        if $z0 == 0 goto label07;

        r5 = virtualinvoke r4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        if r5 != null goto label12;

        $r19 = virtualinvoke r0.<android.widget.AbsListView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>();

        r6 = (android.widget.AbsListView$LayoutParams) $r19;

     label06:
        $r17 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $l3 = interfaceinvoke $r17.<android.widget.ListAdapter: long getItemId(int)>(i0);

        r6.<android.widget.AbsListView$LayoutParams: long itemId> = $l3;

        virtualinvoke r4.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r6);

     label07:
        $r12 = r0.<android.widget.AbsListView: android.content.Context mContext>;

        $r11 = staticinvoke <android.view.accessibility.AccessibilityManager: android.view.accessibility.AccessibilityManager getInstance(android.content.Context)>($r12);

        $z1 = virtualinvoke $r11.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z1 == 0 goto label09;

        $r13 = r0.<android.widget.AbsListView: android.widget.AbsListView$ListItemAccessibilityDelegate mAccessibilityDelegate>;

        if $r13 != null goto label08;

        $r16 = new android.widget.AbsListView$ListItemAccessibilityDelegate;

        specialinvoke $r16.<android.widget.AbsListView$ListItemAccessibilityDelegate: void <init>(android.widget.AbsListView)>(r0);

        r0.<android.widget.AbsListView: android.widget.AbsListView$ListItemAccessibilityDelegate mAccessibilityDelegate> = $r16;

     label08:
        $r15 = virtualinvoke r4.<android.view.View: android.view.View$AccessibilityDelegate getAccessibilityDelegate()>();

        if $r15 != null goto label09;

        $r14 = r0.<android.widget.AbsListView: android.widget.AbsListView$ListItemAccessibilityDelegate mAccessibilityDelegate>;

        virtualinvoke r4.<android.view.View: void setAccessibilityDelegate(android.view.View$AccessibilityDelegate)>($r14);

     label09:
        staticinvoke <android.os.Trace: void traceEnd(long)>(8L);

        return r4;

     label10:
        r1[0] = 1;

        $z3 = virtualinvoke r4.<android.view.View: boolean isAccessibilityFocused()>();

        if $z3 == 0 goto label11;

        virtualinvoke r4.<android.view.View: void clearAccessibilityFocus()>();

     label11:
        virtualinvoke r4.<android.view.View: void dispatchFinishTemporaryDetach()>();

        goto label03;

     label12:
        $z2 = virtualinvoke r0.<android.widget.AbsListView: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>(r5);

        if $z2 != 0 goto label13;

        $r18 = virtualinvoke r0.<android.widget.AbsListView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>(r5);

        r6 = (android.widget.AbsListView$LayoutParams) $r18;

        goto label06;

     label13:
        r6 = (android.widget.AbsListView$LayoutParams) r5;

        goto label06;
    }

    protected void onAttachedToWindow()
    {
        android.widget.AbsListView r0;
        android.view.ViewTreeObserver r1;
        boolean $z0, $z1;
        android.widget.ListAdapter $r2, $r6, $r7;
        android.widget.AbsListView$AdapterDataSetObserver $r3, $r4, $r5;
        int $i0, $i1;
        android.widget.PopupWindow $r8;

        r0 := @this: android.widget.AbsListView;

        specialinvoke r0.<android.widget.AdapterView: void onAttachedToWindow()>();

        r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.ViewTreeObserver getViewTreeObserver()>();

        virtualinvoke r1.<android.view.ViewTreeObserver: void addOnTouchModeChangeListener(android.view.ViewTreeObserver$OnTouchModeChangeListener)>(r0);

        $z0 = r0.<android.widget.AbsListView: boolean mTextFilterEnabled>;

        if $z0 == 0 goto label1;

        $r8 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        if $r8 == null goto label1;

        $z1 = r0.<android.widget.AbsListView: boolean mGlobalLayoutListenerAddedFilter>;

        if $z1 != 0 goto label1;

        virtualinvoke r1.<android.view.ViewTreeObserver: void addOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>(r0);

     label1:
        $r2 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        if $r2 == null goto label2;

        $r3 = r0.<android.widget.AbsListView: android.widget.AbsListView$AdapterDataSetObserver mDataSetObserver>;

        if $r3 != null goto label2;

        $r4 = new android.widget.AbsListView$AdapterDataSetObserver;

        specialinvoke $r4.<android.widget.AbsListView$AdapterDataSetObserver: void <init>(android.widget.AbsListView)>(r0);

        r0.<android.widget.AbsListView: android.widget.AbsListView$AdapterDataSetObserver mDataSetObserver> = $r4;

        $r6 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $r5 = r0.<android.widget.AbsListView: android.widget.AbsListView$AdapterDataSetObserver mDataSetObserver>;

        interfaceinvoke $r6.<android.widget.ListAdapter: void registerDataSetObserver(android.database.DataSetObserver)>($r5);

        r0.<android.widget.AbsListView: boolean mDataChanged> = 1;

        $i0 = r0.<android.widget.AbsListView: int mItemCount>;

        r0.<android.widget.AbsListView: int mOldItemCount> = $i0;

        $r7 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $i1 = interfaceinvoke $r7.<android.widget.ListAdapter: int getCount()>();

        r0.<android.widget.AbsListView: int mItemCount> = $i1;

     label2:
        return;
    }

    public void onCancelPendingInputEvents()
    {
        android.widget.AbsListView r0;
        android.widget.AbsListView$PerformClick $r1, $r8;
        java.lang.Runnable $r2, $r7;
        android.widget.AbsListView$CheckForLongPress $r3, $r6;
        android.widget.AbsListView$CheckForKeyLongPress $r4, $r5;

        r0 := @this: android.widget.AbsListView;

        specialinvoke r0.<android.widget.AdapterView: void onCancelPendingInputEvents()>();

        $r1 = r0.<android.widget.AbsListView: android.widget.AbsListView$PerformClick mPerformClick>;

        if $r1 == null goto label1;

        $r8 = r0.<android.widget.AbsListView: android.widget.AbsListView$PerformClick mPerformClick>;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>($r8);

     label1:
        $r2 = r0.<android.widget.AbsListView: java.lang.Runnable mPendingCheckForTap>;

        if $r2 == null goto label2;

        $r7 = r0.<android.widget.AbsListView: java.lang.Runnable mPendingCheckForTap>;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>($r7);

     label2:
        $r3 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForLongPress mPendingCheckForLongPress>;

        if $r3 == null goto label3;

        $r6 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForLongPress mPendingCheckForLongPress>;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>($r6);

     label3:
        $r4 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForKeyLongPress mPendingCheckForKeyLongPress>;

        if $r4 == null goto label4;

        $r5 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForKeyLongPress mPendingCheckForKeyLongPress>;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>($r5);

     label4:
        return;
    }

    protected int[] onCreateDrawableState(int)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        int[] r1, $r2;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        $z0 = r0.<android.widget.AbsListView: boolean mIsChildViewEnabled>;

        if $z0 == 0 goto label2;

        r1 = specialinvoke r0.<android.widget.AdapterView: int[] onCreateDrawableState(int)>(i0);

     label1:
        return r1;

     label2:
        $r2 = <android.widget.AbsListView: int[] ENABLED_STATE_SET>;

        i1 = $r2[0];

        $i4 = i0 + 1;

        r1 = specialinvoke r0.<android.widget.AdapterView: int[] onCreateDrawableState(int)>($i4);

        i2 = -1;

        $i5 = lengthof r1;

        i3 = -1 + $i5;

     label3:
        if i3 < 0 goto label4;

        $i10 = r1[i3];

        if $i10 != i1 goto label5;

        i2 = i3;

     label4:
        if i2 < 0 goto label1;

        $i9 = i2 + 1;

        $i6 = lengthof r1;

        $i7 = $i6 - i2;

        $i8 = -1 + $i7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, $i9, r1, i2, $i8);

        return r1;

     label5:
        i3 = i3 + -1;

        goto label3;
    }

    public android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
    {
        android.widget.AbsListView r0;
        android.view.inputmethod.EditorInfo r1;
        boolean $z0;
        android.widget.AbsListView$InputConnectionWrapper $r2, $r3, $r5;
        android.view.inputmethod.BaseInputConnection $r4;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.inputmethod.EditorInfo;

        $z0 = virtualinvoke r0.<android.widget.AbsListView: boolean isTextFilterEnabled()>();

        if $z0 == 0 goto label2;

        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$InputConnectionWrapper mPublicInputConnection>;

        if $r2 != null goto label1;

        $r4 = new android.view.inputmethod.BaseInputConnection;

        specialinvoke $r4.<android.view.inputmethod.BaseInputConnection: void <init>(android.view.View,boolean)>(r0, 0);

        r0.<android.widget.AbsListView: android.view.inputmethod.InputConnection mDefInputConnection> = $r4;

        $r5 = new android.widget.AbsListView$InputConnectionWrapper;

        specialinvoke $r5.<android.widget.AbsListView$InputConnectionWrapper: void <init>(android.widget.AbsListView,android.view.inputmethod.EditorInfo)>(r0, r1);

        r0.<android.widget.AbsListView: android.widget.AbsListView$InputConnectionWrapper mPublicInputConnection> = $r5;

     label1:
        r1.<android.view.inputmethod.EditorInfo: int inputType> = 177;

        r1.<android.view.inputmethod.EditorInfo: int imeOptions> = 6;

        $r3 = r0.<android.widget.AbsListView: android.widget.AbsListView$InputConnectionWrapper mPublicInputConnection>;

        return $r3;

     label2:
        return null;
    }

    protected void onDetachedFromWindow()
    {
        android.widget.AbsListView r0;
        android.view.ViewTreeObserver r1;
        android.widget.AbsListView$RecycleBin $r2;
        boolean $z0;
        android.widget.ListAdapter $r3, $r20;
        android.os.StrictMode$Span $r4, $r5, $r17, $r19;
        android.widget.AbsListView$FlingRunnable $r6, $r15;
        android.widget.AbsListView$PositionScroller $r7, $r16;
        java.lang.Runnable $r8, $r10, $r11, $r12, $r14;
        android.widget.AbsListView$PerformClick $r9, $r13;
        android.widget.AbsListView$AdapterDataSetObserver $r18, $r21;
        android.widget.PopupWindow $r22;

        r0 := @this: android.widget.AbsListView;

        specialinvoke r0.<android.widget.AdapterView: void onDetachedFromWindow()>();

        specialinvoke r0.<android.widget.AbsListView: void dismissPopup()>();

        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        virtualinvoke $r2.<android.widget.AbsListView$RecycleBin: void clear()>();

        r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.ViewTreeObserver getViewTreeObserver()>();

        virtualinvoke r1.<android.view.ViewTreeObserver: void removeOnTouchModeChangeListener(android.view.ViewTreeObserver$OnTouchModeChangeListener)>(r0);

        $z0 = r0.<android.widget.AbsListView: boolean mTextFilterEnabled>;

        if $z0 == 0 goto label1;

        $r22 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        if $r22 == null goto label1;

        virtualinvoke r1.<android.view.ViewTreeObserver: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>(r0);

        r0.<android.widget.AbsListView: boolean mGlobalLayoutListenerAddedFilter> = 0;

     label1:
        $r3 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        if $r3 == null goto label2;

        $r18 = r0.<android.widget.AbsListView: android.widget.AbsListView$AdapterDataSetObserver mDataSetObserver>;

        if $r18 == null goto label2;

        $r20 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $r21 = r0.<android.widget.AbsListView: android.widget.AbsListView$AdapterDataSetObserver mDataSetObserver>;

        interfaceinvoke $r20.<android.widget.ListAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>($r21);

        r0.<android.widget.AbsListView: android.widget.AbsListView$AdapterDataSetObserver mDataSetObserver> = null;

     label2:
        $r4 = r0.<android.widget.AbsListView: android.os.StrictMode$Span mScrollStrictSpan>;

        if $r4 == null goto label3;

        $r19 = r0.<android.widget.AbsListView: android.os.StrictMode$Span mScrollStrictSpan>;

        virtualinvoke $r19.<android.os.StrictMode$Span: void finish()>();

        r0.<android.widget.AbsListView: android.os.StrictMode$Span mScrollStrictSpan> = null;

     label3:
        $r5 = r0.<android.widget.AbsListView: android.os.StrictMode$Span mFlingStrictSpan>;

        if $r5 == null goto label4;

        $r17 = r0.<android.widget.AbsListView: android.os.StrictMode$Span mFlingStrictSpan>;

        virtualinvoke $r17.<android.os.StrictMode$Span: void finish()>();

        r0.<android.widget.AbsListView: android.os.StrictMode$Span mFlingStrictSpan> = null;

     label4:
        $r6 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        if $r6 == null goto label5;

        $r15 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>($r15);

     label5:
        $r7 = r0.<android.widget.AbsListView: android.widget.AbsListView$PositionScroller mPositionScroller>;

        if $r7 == null goto label6;

        $r16 = r0.<android.widget.AbsListView: android.widget.AbsListView$PositionScroller mPositionScroller>;

        virtualinvoke $r16.<android.widget.AbsListView$PositionScroller: void stop()>();

     label6:
        $r8 = r0.<android.widget.AbsListView: java.lang.Runnable mClearScrollingCache>;

        if $r8 == null goto label7;

        $r14 = r0.<android.widget.AbsListView: java.lang.Runnable mClearScrollingCache>;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>($r14);

     label7:
        $r9 = r0.<android.widget.AbsListView: android.widget.AbsListView$PerformClick mPerformClick>;

        if $r9 == null goto label8;

        $r13 = r0.<android.widget.AbsListView: android.widget.AbsListView$PerformClick mPerformClick>;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>($r13);

     label8:
        $r10 = r0.<android.widget.AbsListView: java.lang.Runnable mTouchModeReset>;

        if $r10 == null goto label9;

        $r11 = r0.<android.widget.AbsListView: java.lang.Runnable mTouchModeReset>;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>($r11);

        $r12 = r0.<android.widget.AbsListView: java.lang.Runnable mTouchModeReset>;

        interfaceinvoke $r12.<java.lang.Runnable: void run()>();

     label9:
        return;
    }

    protected void onDisplayHint(int)
    {
        android.widget.AbsListView r0;
        int i0;
        boolean z0, $z1, $z2, $z3;
        android.widget.PopupWindow $r1, $r2, $r3, $r4;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        specialinvoke r0.<android.widget.AdapterView: void onDisplayHint(int)>(i0);

        lookupswitch(i0)
        {
            case 0: goto label4;
            case 4: goto label3;
            default: goto label1;
        };

     label1:
        if i0 != 4 goto label5;

        z0 = 1;

     label2:
        r0.<android.widget.AbsListView: boolean mPopupHidden> = z0;

        return;

     label3:
        $r1 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        $z1 = virtualinvoke $r2.<android.widget.PopupWindow: boolean isShowing()>();

        if $z1 == 0 goto label1;

        specialinvoke r0.<android.widget.AbsListView: void dismissPopup()>();

        goto label1;

     label4:
        $z2 = r0.<android.widget.AbsListView: boolean mFiltered>;

        if $z2 == 0 goto label1;

        $r3 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        if $r3 == null goto label1;

        $r4 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        $z3 = virtualinvoke $r4.<android.widget.PopupWindow: boolean isShowing()>();

        if $z3 != 0 goto label1;

        specialinvoke r0.<android.widget.AbsListView: void showPopup()>();

        goto label1;

     label5:
        z0 = 0;

        goto label2;
    }

    public void onFilterComplete(int)
    {
        android.widget.AbsListView r0;
        int i0, $i1;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        $i1 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        if $i1 >= 0 goto label1;

        if i0 <= 0 goto label1;

        r0.<android.widget.AbsListView: int mResurrectToPosition> = -1;

        virtualinvoke r0.<android.widget.AbsListView: boolean resurrectSelection()>();

     label1:
        return;
    }

    protected void onFocusChanged(boolean, int, android.graphics.Rect)
    {
        android.widget.AbsListView r0;
        boolean z0, $z1, $z2;
        int i0, $i1, $i2, $i3;
        android.graphics.Rect r1;
        android.widget.ListAdapter $r2, $r3;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: android.graphics.Rect;

        specialinvoke r0.<android.widget.AdapterView: void onFocusChanged(boolean,int,android.graphics.Rect)>(z0, i0, r1);

        if z0 == 0 goto label2;

        $i1 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        if $i1 >= 0 goto label2;

        $z1 = virtualinvoke r0.<android.widget.AbsListView: boolean isInTouchMode()>();

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r0.<android.widget.AbsListView: boolean isAttachedToWindow()>();

        if $z2 != 0 goto label1;

        $r2 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        if $r2 == null goto label1;

        r0.<android.widget.AbsListView: boolean mDataChanged> = 1;

        $i2 = r0.<android.widget.AbsListView: int mItemCount>;

        r0.<android.widget.AbsListView: int mOldItemCount> = $i2;

        $r3 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $i3 = interfaceinvoke $r3.<android.widget.ListAdapter: int getCount()>();

        r0.<android.widget.AbsListView: int mItemCount> = $i3;

     label1:
        virtualinvoke r0.<android.widget.AbsListView: boolean resurrectSelection()>();

     label2:
        return;
    }

    public boolean onGenericMotionEvent(android.view.MotionEvent)
    {
        android.widget.AbsListView r0;
        android.view.MotionEvent r1;
        float f0, $f1, $f2;
        int i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1;
        byte $b5;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.MotionEvent;

        $i1 = virtualinvoke r1.<android.view.MotionEvent: int getSource()>();

        $i2 = 2 & $i1;

        if $i2 == 0 goto label1;

        $i3 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        tableswitch($i3)
        {
            case 8: goto label2;
            default: goto label1;
        };

     label1:
        $z0 = specialinvoke r0.<android.widget.AdapterView: boolean onGenericMotionEvent(android.view.MotionEvent)>(r1);

        return $z0;

     label2:
        $i4 = r0.<android.widget.AbsListView: int mTouchMode>;

        if $i4 != -1 goto label1;

        f0 = virtualinvoke r1.<android.view.MotionEvent: float getAxisValue(int)>(9);

        $b5 = f0 cmpl 0.0F;

        if $b5 == 0 goto label1;

        $f1 = virtualinvoke r0.<android.widget.AbsListView: float getVerticalScrollFactor()>();

        $f2 = f0 * $f1;

        i0 = (int) $f2;

        $z1 = virtualinvoke r0.<android.widget.AbsListView: boolean trackMotionScroll(int,int)>(i0, i0);

        if $z1 != 0 goto label1;

        return 1;
    }

    public void onGlobalLayout()
    {
        android.widget.AbsListView r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.widget.PopupWindow $r1, $r2, $r3, $r4;

        r0 := @this: android.widget.AbsListView;

        $z0 = virtualinvoke r0.<android.widget.AbsListView: boolean isShown()>();

        if $z0 == 0 goto label2;

        $z2 = r0.<android.widget.AbsListView: boolean mFiltered>;

        if $z2 == 0 goto label1;

        $r3 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        if $r3 == null goto label1;

        $r4 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        $z3 = virtualinvoke $r4.<android.widget.PopupWindow: boolean isShowing()>();

        if $z3 != 0 goto label1;

        $z4 = r0.<android.widget.AbsListView: boolean mPopupHidden>;

        if $z4 != 0 goto label1;

        specialinvoke r0.<android.widget.AbsListView: void showPopup()>();

     label1:
        return;

     label2:
        $r1 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        $z1 = virtualinvoke $r2.<android.widget.PopupWindow: boolean isShowing()>();

        if $z1 == 0 goto label1;

        specialinvoke r0.<android.widget.AbsListView: void dismissPopup()>();

        return;
    }

    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.AbsListView r0;
        android.view.accessibility.AccessibilityEvent r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.widget.AdapterView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        $r2 = class "android/widget/AbsListView";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r3);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.widget.AbsListView r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.Class $r2;
        java.lang.String $r3;
        boolean $z0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.widget.AdapterView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        $r2 = class "android/widget/AbsListView";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>($r3);

        $z0 = virtualinvoke r0.<android.widget.AbsListView: boolean isEnabled()>();

        if $z0 == 0 goto label2;

        $i0 = virtualinvoke r0.<android.widget.AbsListView: int getFirstVisiblePosition()>();

        if $i0 <= 0 goto label1;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(8192);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setScrollable(boolean)>(1);

     label1:
        $i1 = virtualinvoke r0.<android.widget.AbsListView: int getLastVisiblePosition()>();

        $i2 = virtualinvoke r0.<android.widget.AbsListView: int getCount()>();

        $i3 = -1 + $i2;

        if $i1 >= $i3 goto label2;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(4096);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setScrollable(boolean)>(1);

     label2:
        return;
    }

    public void onInitializeAccessibilityNodeInfoForItem(android.view.View, int, android.view.accessibility.AccessibilityNodeInfo)
    {
        android.widget.AbsListView r0;
        android.view.View r1;
        int i0, $i1;
        android.view.accessibility.AccessibilityNodeInfo r2;
        android.widget.ListAdapter r3;
        android.widget.Adapter $r4;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: android.view.accessibility.AccessibilityNodeInfo;

        $r4 = virtualinvoke r0.<android.widget.AbsListView: android.widget.Adapter getAdapter()>();

        r3 = (android.widget.ListAdapter) $r4;

        if i0 == -1 goto label1;

        if r3 != null goto label2;

     label1:
        return;

     label2:
        $z0 = virtualinvoke r0.<android.widget.AbsListView: boolean isEnabled()>();

        if $z0 == 0 goto label3;

        $z1 = interfaceinvoke r3.<android.widget.ListAdapter: boolean isEnabled(int)>(i0);

        if $z1 != 0 goto label4;

     label3:
        virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: void setEnabled(boolean)>(0);

        return;

     label4:
        $i1 = virtualinvoke r0.<android.widget.AbsListView: int getSelectedItemPosition()>();

        if i0 != $i1 goto label7;

        virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: void setSelected(boolean)>(1);

        virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(8);

     label5:
        $z2 = virtualinvoke r0.<android.widget.AbsListView: boolean isClickable()>();

        if $z2 == 0 goto label6;

        virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(16);

        virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: void setClickable(boolean)>(1);

     label6:
        $z3 = virtualinvoke r0.<android.widget.AbsListView: boolean isLongClickable()>();

        if $z3 == 0 goto label1;

        virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(32);

        virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: void setLongClickable(boolean)>(1);

        return;

     label7:
        virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(4);

        goto label5;
    }

    public boolean onInterceptHoverEvent(android.view.MotionEvent)
    {
        android.widget.AbsListView r0;
        android.view.MotionEvent r1;
        android.widget.FastScroller $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        if $r2 == null goto label1;

        $r3 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        $z1 = virtualinvoke $r3.<android.widget.FastScroller: boolean onInterceptHoverEvent(android.view.MotionEvent)>(r1);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke r0.<android.widget.AdapterView: boolean onInterceptHoverEvent(android.view.MotionEvent)>(r1);

        return $z0;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        android.widget.AbsListView r0;
        android.view.MotionEvent r1;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        android.widget.AbsListView$PositionScroller $r2, $r8;
        boolean $z0, $z1, $z2;
        android.widget.FastScroller $r3, $r7;
        float $f0, $f1, $f2;
        android.view.VelocityTracker $r4, $r5;
        android.view.View $r6;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$PositionScroller mPositionScroller>;

        if $r2 == null goto label01;

        $r8 = r0.<android.widget.AbsListView: android.widget.AbsListView$PositionScroller mPositionScroller>;

        virtualinvoke $r8.<android.widget.AbsListView$PositionScroller: void stop()>();

     label01:
        $z0 = virtualinvoke r0.<android.widget.AbsListView: boolean isAttachedToWindow()>();

        if $z0 != 0 goto label03;

     label02:
        return 0;

     label03:
        $r3 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        if $r3 == null goto label04;

        $r7 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        $z2 = virtualinvoke $r7.<android.widget.FastScroller: boolean onInterceptTouchEvent(android.view.MotionEvent)>(r1);

        if $z2 == 0 goto label04;

        return 1;

     label04:
        $i7 = i0 & 255;

        tableswitch($i7)
        {
            case 0: goto label06;
            case 1: goto label14;
            case 2: goto label10;
            case 3: goto label14;
            case 4: goto label05;
            case 5: goto label05;
            case 6: goto label15;
            default: goto label05;
        };

     label05:
        return 0;

     label06:
        i3 = r0.<android.widget.AbsListView: int mTouchMode>;

        if i3 == 6 goto label07;

        if i3 != 5 goto label08;

     label07:
        r0.<android.widget.AbsListView: int mMotionCorrection> = 0;

        return 1;

     label08:
        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        i4 = (int) $f1;

        $f2 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        i5 = (int) $f2;

        $i11 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(0);

        r0.<android.widget.AbsListView: int mActivePointerId> = $i11;

        i6 = virtualinvoke r0.<android.widget.AbsListView: int findMotionRow(int)>(i5);

        if i3 == 4 goto label09;

        if i6 < 0 goto label09;

        $i13 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i12 = i6 - $i13;

        $r6 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i12);

        $i14 = virtualinvoke $r6.<android.view.View: int getTop()>();

        r0.<android.widget.AbsListView: int mMotionViewOriginalTop> = $i14;

        r0.<android.widget.AbsListView: int mMotionX> = i4;

        r0.<android.widget.AbsListView: int mMotionY> = i5;

        r0.<android.widget.AbsListView: int mMotionPosition> = i6;

        r0.<android.widget.AbsListView: int mTouchMode> = 0;

        specialinvoke r0.<android.widget.AbsListView: void clearScrollingCache()>();

     label09:
        r0.<android.widget.AbsListView: int mLastY> = -2147483648;

        specialinvoke r0.<android.widget.AbsListView: void initOrResetVelocityTracker()>();

        $r5 = r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r5.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r1);

        if i3 != 4 goto label02;

        return 1;

     label10:
        $i8 = r0.<android.widget.AbsListView: int mTouchMode>;

        tableswitch($i8)
        {
            case 0: goto label12;
            default: goto label11;
        };

     label11:
        return 0;

     label12:
        $i9 = r0.<android.widget.AbsListView: int mActivePointerId>;

        i1 = virtualinvoke r1.<android.view.MotionEvent: int findPointerIndex(int)>($i9);

        if i1 != -1 goto label13;

        i1 = 0;

        $i10 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(0);

        r0.<android.widget.AbsListView: int mActivePointerId> = $i10;

     label13:
        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i1);

        i2 = (int) $f0;

        specialinvoke r0.<android.widget.AbsListView: void initVelocityTrackerIfNotExists()>();

        $r4 = r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r4.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r1);

        $z1 = specialinvoke r0.<android.widget.AbsListView: boolean startScrollIfNeeded(int)>(i2);

        if $z1 == 0 goto label02;

        return 1;

     label14:
        r0.<android.widget.AbsListView: int mTouchMode> = -1;

        r0.<android.widget.AbsListView: int mActivePointerId> = -1;

        specialinvoke r0.<android.widget.AbsListView: void recycleVelocityTracker()>();

        virtualinvoke r0.<android.widget.AbsListView: void reportScrollStateChange(int)>(0);

        return 0;

     label15:
        specialinvoke r0.<android.widget.AbsListView: void onSecondaryPointerUp(android.view.MotionEvent)>(r1);

        return 0;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        android.widget.AbsListView r0;
        int i0;
        android.view.KeyEvent r1;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        return 0;
    }

    public boolean onKeyUp(int, android.view.KeyEvent)
    {
        android.widget.AbsListView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.view.KeyEvent r1;
        android.view.View r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.widget.ListAdapter $r3, $r4;
        long $l8;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        $z0 = staticinvoke <android.view.KeyEvent: boolean isConfirmKey(int)>(i0);

        if $z0 == 0 goto label3;

        $z2 = virtualinvoke r0.<android.widget.AbsListView: boolean isEnabled()>();

        if $z2 != 0 goto label1;

        return 1;

     label1:
        $z3 = virtualinvoke r0.<android.widget.AbsListView: boolean isClickable()>();

        if $z3 == 0 goto label3;

        $z4 = virtualinvoke r0.<android.widget.AbsListView: boolean isPressed()>();

        if $z4 == 0 goto label3;

        $i1 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        if $i1 < 0 goto label3;

        $r3 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        if $r3 == null goto label3;

        $i2 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        $r4 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $i3 = interfaceinvoke $r4.<android.widget.ListAdapter: int getCount()>();

        if $i2 >= $i3 goto label3;

        $i5 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        $i4 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i6 = $i5 - $i4;

        r2 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i6);

        if r2 == null goto label2;

        $i7 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        $l8 = r0.<android.widget.AbsListView: long mSelectedRowId>;

        virtualinvoke r0.<android.widget.AbsListView: boolean performItemClick(android.view.View,int,long)>(r2, $i7, $l8);

        virtualinvoke r2.<android.view.View: void setPressed(boolean)>(0);

     label2:
        virtualinvoke r0.<android.widget.AbsListView: void setPressed(boolean)>(0);

        return 1;

     label3:
        $z1 = specialinvoke r0.<android.widget.AdapterView: boolean onKeyUp(int,android.view.KeyEvent)>(i0, r1);

        return $z1;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.widget.AbsListView r0;
        boolean z0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9;
        android.widget.FastScroller $r1, $r2;
        android.widget.AbsListView$RecycleBin $r3;
        android.view.View $r4;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        specialinvoke r0.<android.widget.AdapterView: void onLayout(boolean,int,int,int,int)>(z0, i0, i1, i2, i3);

        r0.<android.widget.AbsListView: boolean mInLayout> = 1;

        i4 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if z0 == 0 goto label3;

        i5 = 0;

     label1:
        if i5 >= i4 goto label2;

        $r4 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i5);

        virtualinvoke $r4.<android.view.View: void forceLayout()>();

        i5 = i5 + 1;

        goto label1;

     label2:
        $r3 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        virtualinvoke $r3.<android.widget.AbsListView$RecycleBin: void markChildrenDirty()>();

     label3:
        virtualinvoke r0.<android.widget.AbsListView: void layoutChildren()>();

        r0.<android.widget.AbsListView: boolean mInLayout> = 0;

        $i6 = i3 - i1;

        $i7 = $i6 / 3;

        r0.<android.widget.AbsListView: int mOverscrollMax> = $i7;

        $r1 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        if $r1 == null goto label4;

        $r2 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        $i8 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        $i9 = r0.<android.widget.AbsListView: int mItemCount>;

        virtualinvoke $r2.<android.widget.FastScroller: void onItemCountChanged(int,int)>($i8, $i9);

     label4:
        return;
    }

    protected void onMeasure(int, int)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24;
        boolean z0, z1;
        android.graphics.Rect r1;
        android.view.View r2;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 = 1;

        $r3 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        if $r3 != null goto label1;

        specialinvoke r0.<android.widget.AbsListView: void useDefaultSelector()>();

     label1:
        r1 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i6 = r0.<android.widget.AbsListView: int mSelectionLeftPadding>;

        $i5 = r0.<android.widget.AbsListView: int mPaddingLeft>;

        $i7 = $i6 + $i5;

        r1.<android.graphics.Rect: int left> = $i7;

        $i9 = r0.<android.widget.AbsListView: int mSelectionTopPadding>;

        $i8 = r0.<android.widget.AbsListView: int mPaddingTop>;

        $i10 = $i9 + $i8;

        r1.<android.graphics.Rect: int top> = $i10;

        $i11 = r0.<android.widget.AbsListView: int mSelectionRightPadding>;

        $i12 = r0.<android.widget.AbsListView: int mPaddingRight>;

        $i14 = $i11 + $i12;

        r1.<android.graphics.Rect: int right> = $i14;

        $i16 = r0.<android.widget.AbsListView: int mSelectionBottomPadding>;

        $i13 = r0.<android.widget.AbsListView: int mPaddingBottom>;

        $i15 = $i16 + $i13;

        r1.<android.graphics.Rect: int bottom> = $i15;

        $i17 = r0.<android.widget.AbsListView: int mTranscriptMode>;

        z1 = z0;

        i24 = (int) z1;

        if $i17 != i24 goto label4;

        i2 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        $i19 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $i18 = virtualinvoke r0.<android.widget.AbsListView: int getPaddingBottom()>();

        i3 = $i19 - $i18;

        $i20 = i2 - 1;

        r2 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i20);

        if r2 == null goto label5;

        i4 = virtualinvoke r2.<android.view.View: int getBottom()>();

     label2:
        $i22 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i23 = i2 + $i22;

        $i21 = r0.<android.widget.AbsListView: int mLastHandledItemCount>;

        if $i23 < $i21 goto label6;

        if i4 > i3 goto label6;

     label3:
        r0.<android.widget.AbsListView: boolean mForceTranscriptScroll> = z0;

     label4:
        return;

     label5:
        i4 = i3;

        goto label2;

     label6:
        z0 = 0;

        goto label3;
    }

    protected void onOverScrolled(int, int, boolean, boolean)
    {
        android.widget.AbsListView r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        boolean z0, z1;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $i2 = r0.<android.widget.AbsListView: int mScrollY>;

        if $i2 == i1 goto label1;

        $i5 = r0.<android.widget.AbsListView: int mScrollX>;

        $i4 = r0.<android.widget.AbsListView: int mScrollX>;

        $i3 = r0.<android.widget.AbsListView: int mScrollY>;

        virtualinvoke r0.<android.widget.AbsListView: void onScrollChanged(int,int,int,int)>($i5, i1, $i4, $i3);

        r0.<android.widget.AbsListView: int mScrollY> = i1;

        virtualinvoke r0.<android.widget.AbsListView: void invalidateParentIfNeeded()>();

        virtualinvoke r0.<android.widget.AbsListView: boolean awakenScrollBars()>();

     label1:
        return;
    }

    public boolean onRemoteAdapterConnected()
    {
        android.widget.AbsListView r0;
        android.widget.ListAdapter $r1;
        android.widget.RemoteViewsAdapter $r2, $r3, $r4, $r5, $r6;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        $r2 = r0.<android.widget.AbsListView: android.widget.RemoteViewsAdapter mRemoteAdapter>;

        $r1 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        if $r2 == $r1 goto label2;

        $r5 = r0.<android.widget.AbsListView: android.widget.RemoteViewsAdapter mRemoteAdapter>;

        virtualinvoke r0.<android.widget.AbsListView: void setAdapter(android.widget.ListAdapter)>($r5);

        $z0 = r0.<android.widget.AbsListView: boolean mDeferNotifyDataSetChanged>;

        if $z0 == 0 goto label1;

        $r6 = r0.<android.widget.AbsListView: android.widget.RemoteViewsAdapter mRemoteAdapter>;

        virtualinvoke $r6.<android.widget.RemoteViewsAdapter: void notifyDataSetChanged()>();

        r0.<android.widget.AbsListView: boolean mDeferNotifyDataSetChanged> = 0;

     label1:
        return 0;

     label2:
        $r3 = r0.<android.widget.AbsListView: android.widget.RemoteViewsAdapter mRemoteAdapter>;

        if $r3 == null goto label1;

        $r4 = r0.<android.widget.AbsListView: android.widget.RemoteViewsAdapter mRemoteAdapter>;

        virtualinvoke $r4.<android.widget.RemoteViewsAdapter: void superNotifyDataSetChanged()>();

        return 1;
    }

    public void onRemoteAdapterDisconnected()
    {
        android.widget.AbsListView r0;

        r0 := @this: android.widget.AbsListView;

        return;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        android.widget.AbsListView r0;
        android.os.Parcelable r1, $r3;
        android.widget.AbsListView$SavedState r2;
        int $i0, $i6, $i7, $i9, $i10, $i11, $i13;
        long $l1, $l2, $l4, $l8, $l12;
        byte $b3, $b5;
        java.lang.String $r4;
        android.util.SparseBooleanArray $r5, $r11;
        android.util.LongSparseArray $r6, $r9;
        boolean $z0;
        android.widget.AbsListView$MultiChoiceModeWrapper $r7, $r8;
        android.view.ActionMode $r10;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.os.Parcelable;

        r2 = (android.widget.AbsListView$SavedState) r1;

        $r3 = virtualinvoke r2.<android.widget.AbsListView$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.widget.AdapterView: void onRestoreInstanceState(android.os.Parcelable)>($r3);

        r0.<android.widget.AbsListView: boolean mDataChanged> = 1;

        $i0 = r2.<android.widget.AbsListView$SavedState: int height>;

        $l1 = (long) $i0;

        r0.<android.widget.AbsListView: long mSyncHeight> = $l1;

        $l2 = r2.<android.widget.AbsListView$SavedState: long selectedId>;

        $b3 = $l2 cmp 0L;

        if $b3 < 0 goto label5;

        r0.<android.widget.AbsListView: boolean mNeedSync> = 1;

        r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync> = r2;

        $l12 = r2.<android.widget.AbsListView$SavedState: long selectedId>;

        r0.<android.widget.AbsListView: long mSyncRowId> = $l12;

        $i11 = r2.<android.widget.AbsListView$SavedState: int position>;

        r0.<android.widget.AbsListView: int mSyncPosition> = $i11;

        $i13 = r2.<android.widget.AbsListView$SavedState: int viewTop>;

        r0.<android.widget.AbsListView: int mSpecificTop> = $i13;

        r0.<android.widget.AbsListView: int mSyncMode> = 0;

     label1:
        $r4 = r2.<android.widget.AbsListView$SavedState: java.lang.String filter>;

        virtualinvoke r0.<android.widget.AbsListView: void setFilterText(java.lang.String)>($r4);

        $r5 = r2.<android.widget.AbsListView$SavedState: android.util.SparseBooleanArray checkState>;

        if $r5 == null goto label2;

        $r11 = r2.<android.widget.AbsListView$SavedState: android.util.SparseBooleanArray checkState>;

        r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates> = $r11;

     label2:
        $r6 = r2.<android.widget.AbsListView$SavedState: android.util.LongSparseArray checkIdState>;

        if $r6 == null goto label3;

        $r9 = r2.<android.widget.AbsListView$SavedState: android.util.LongSparseArray checkIdState>;

        r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates> = $r9;

     label3:
        $i6 = r2.<android.widget.AbsListView$SavedState: int checkedItemCount>;

        r0.<android.widget.AbsListView: int mCheckedItemCount> = $i6;

        $z0 = r2.<android.widget.AbsListView$SavedState: boolean inActionMode>;

        if $z0 == 0 goto label4;

        $i7 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i7 != 3 goto label4;

        $r8 = r0.<android.widget.AbsListView: android.widget.AbsListView$MultiChoiceModeWrapper mMultiChoiceModeCallback>;

        if $r8 == null goto label4;

        $r7 = r0.<android.widget.AbsListView: android.widget.AbsListView$MultiChoiceModeWrapper mMultiChoiceModeCallback>;

        $r10 = virtualinvoke r0.<android.widget.AbsListView: android.view.ActionMode startActionMode(android.view.ActionMode$Callback)>($r7);

        r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode> = $r10;

     label4:
        virtualinvoke r0.<android.widget.AbsListView: void requestLayout()>();

        return;

     label5:
        $l4 = r2.<android.widget.AbsListView$SavedState: long firstId>;

        $b5 = $l4 cmp 0L;

        if $b5 < 0 goto label1;

        virtualinvoke r0.<android.widget.AbsListView: void setSelectedPositionInt(int)>(-1);

        virtualinvoke r0.<android.widget.AbsListView: void setNextSelectedPositionInt(int)>(-1);

        r0.<android.widget.AbsListView: int mSelectorPosition> = -1;

        r0.<android.widget.AbsListView: boolean mNeedSync> = 1;

        r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync> = r2;

        $l8 = r2.<android.widget.AbsListView$SavedState: long firstId>;

        r0.<android.widget.AbsListView: long mSyncRowId> = $l8;

        $i10 = r2.<android.widget.AbsListView$SavedState: int position>;

        r0.<android.widget.AbsListView: int mSyncPosition> = $i10;

        $i9 = r2.<android.widget.AbsListView$SavedState: int viewTop>;

        r0.<android.widget.AbsListView: int mSpecificTop> = $i9;

        r0.<android.widget.AbsListView: int mSyncMode> = 1;

        goto label1;
    }

    public void onRtlPropertiesChanged(int)
    {
        android.widget.AbsListView r0;
        int i0, $i1;
        android.widget.FastScroller $r1, $r2;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        specialinvoke r0.<android.widget.AdapterView: void onRtlPropertiesChanged(int)>(i0);

        $r1 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        $i1 = virtualinvoke r0.<android.widget.AbsListView: int getVerticalScrollbarPosition()>();

        virtualinvoke $r2.<android.widget.FastScroller: void setScrollbarPosition(int)>($i1);

     label1:
        return;
    }

    public android.os.Parcelable onSaveInstanceState()
    {
        android.widget.AbsListView r0;
        android.widget.AbsListView$SavedState r1, $r5, $r7, $r23, $r24, $r25, $r26, $r28, $r29, $r30, $r31, $r32, $r34;
        boolean z0, z1, $z2, $z3;
        long l0, $l9, $l11, $l18, $l19;
        android.util.LongSparseArray r2, $r9, $r12, $r13, $r14, $r15, $r35;
        int i1, i2, i3, $i4, $i5, $i7, $i8, $i10, $i12, $i13, $i14, $i15, $i16, $i17, $i20, $i21, $i22, $i23;
        android.widget.EditText r3;
        android.text.Editable r4;
        android.os.Parcelable $r6;
        byte $b6;
        android.util.SparseBooleanArray $r8, $r16, $r19, $r33;
        android.widget.RemoteViewsAdapter $r10, $r11;
        android.view.ActionMode $r17;
        java.lang.Object $r18;
        android.view.View $r20;
        java.lang.String $r21, $r27;
        android.widget.ListAdapter $r22;

        r0 := @this: android.widget.AbsListView;

        specialinvoke r0.<android.widget.AbsListView: void dismissPopup()>();

        $r5 = new android.widget.AbsListView$SavedState;

        $r6 = specialinvoke r0.<android.widget.AdapterView: android.os.Parcelable onSaveInstanceState()>();

        specialinvoke $r5.<android.widget.AbsListView$SavedState: void <init>(android.os.Parcelable)>($r6);

        r1 = $r5;

        $r7 = r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync>;

        if $r7 == null goto label02;

        $r24 = r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync>;

        $l19 = $r24.<android.widget.AbsListView$SavedState: long selectedId>;

        r1.<android.widget.AbsListView$SavedState: long selectedId> = $l19;

        $r23 = r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync>;

        $l18 = $r23.<android.widget.AbsListView$SavedState: long firstId>;

        r1.<android.widget.AbsListView$SavedState: long firstId> = $l18;

        $r26 = r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync>;

        $i21 = $r26.<android.widget.AbsListView$SavedState: int viewTop>;

        r1.<android.widget.AbsListView$SavedState: int viewTop> = $i21;

        $r25 = r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync>;

        $i20 = $r25.<android.widget.AbsListView$SavedState: int position>;

        r1.<android.widget.AbsListView$SavedState: int position> = $i20;

        $r29 = r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync>;

        $i22 = $r29.<android.widget.AbsListView$SavedState: int height>;

        r1.<android.widget.AbsListView$SavedState: int height> = $i22;

        $r28 = r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync>;

        $r27 = $r28.<android.widget.AbsListView$SavedState: java.lang.String filter>;

        r1.<android.widget.AbsListView$SavedState: java.lang.String filter> = $r27;

        $r31 = r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync>;

        $z3 = $r31.<android.widget.AbsListView$SavedState: boolean inActionMode>;

        r1.<android.widget.AbsListView$SavedState: boolean inActionMode> = $z3;

        $r30 = r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync>;

        $i23 = $r30.<android.widget.AbsListView$SavedState: int checkedItemCount>;

        r1.<android.widget.AbsListView$SavedState: int checkedItemCount> = $i23;

        $r32 = r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync>;

        $r33 = $r32.<android.widget.AbsListView$SavedState: android.util.SparseBooleanArray checkState>;

        r1.<android.widget.AbsListView$SavedState: android.util.SparseBooleanArray checkState> = $r33;

        $r34 = r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync>;

        $r35 = $r34.<android.widget.AbsListView$SavedState: android.util.LongSparseArray checkIdState>;

        r1.<android.widget.AbsListView$SavedState: android.util.LongSparseArray checkIdState> = $r35;

     label01:
        return r1;

     label02:
        $i4 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if $i4 <= 0 goto label09;

        $i15 = r0.<android.widget.AbsListView: int mItemCount>;

        if $i15 <= 0 goto label09;

        z0 = 1;

     label03:
        l0 = virtualinvoke r0.<android.widget.AbsListView: long getSelectedItemId()>();

        r1.<android.widget.AbsListView$SavedState: long selectedId> = l0;

        $i5 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        r1.<android.widget.AbsListView$SavedState: int height> = $i5;

        $b6 = l0 cmp 0L;

        if $b6 < 0 goto label10;

        $i17 = r0.<android.widget.AbsListView: int mSelectedTop>;

        r1.<android.widget.AbsListView$SavedState: int viewTop> = $i17;

        $i14 = virtualinvoke r0.<android.widget.AbsListView: int getSelectedItemPosition()>();

        r1.<android.widget.AbsListView$SavedState: int position> = $i14;

        r1.<android.widget.AbsListView$SavedState: long firstId> = -1L;

     label04:
        r1.<android.widget.AbsListView$SavedState: java.lang.String filter> = null;

        $z2 = r0.<android.widget.AbsListView: boolean mFiltered>;

        if $z2 == 0 goto label05;

        r3 = r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        if r3 == null goto label05;

        r4 = virtualinvoke r3.<android.widget.EditText: android.text.Editable getText()>();

        if r4 == null goto label05;

        $r21 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();

        r1.<android.widget.AbsListView$SavedState: java.lang.String filter> = $r21;

     label05:
        $i7 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i7 != 3 goto label13;

        $r17 = r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode>;

        if $r17 == null goto label13;

        z1 = 1;

     label06:
        r1.<android.widget.AbsListView$SavedState: boolean inActionMode> = z1;

        $r8 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        if $r8 == null goto label07;

        $r19 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        $r16 = virtualinvoke $r19.<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>();

        r1.<android.widget.AbsListView$SavedState: android.util.SparseBooleanArray checkState> = $r16;

     label07:
        $r9 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        if $r9 == null goto label15;

        $r13 = new android.util.LongSparseArray;

        specialinvoke $r13.<android.util.LongSparseArray: void <init>()>();

        r2 = $r13;

        $r12 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        i1 = virtualinvoke $r12.<android.util.LongSparseArray: int size()>();

        i2 = 0;

     label08:
        if i2 >= i1 goto label14;

        $r14 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        $l9 = virtualinvoke $r14.<android.util.LongSparseArray: long keyAt(int)>(i2);

        $r15 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        $r18 = virtualinvoke $r15.<android.util.LongSparseArray: java.lang.Object valueAt(int)>(i2);

        virtualinvoke r2.<android.util.LongSparseArray: void put(long,java.lang.Object)>($l9, $r18);

        i2 = i2 + 1;

        goto label08;

     label09:
        z0 = 0;

        goto label03;

     label10:
        if z0 == 0 goto label12;

        $i10 = r0.<android.widget.AbsListView: int mFirstPosition>;

        if $i10 <= 0 goto label12;

        $r20 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(0);

        $i12 = virtualinvoke $r20.<android.view.View: int getTop()>();

        r1.<android.widget.AbsListView$SavedState: int viewTop> = $i12;

        i3 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i13 = r0.<android.widget.AbsListView: int mItemCount>;

        if i3 < $i13 goto label11;

        $i16 = r0.<android.widget.AbsListView: int mItemCount>;

        i3 = -1 + $i16;

     label11:
        r1.<android.widget.AbsListView$SavedState: int position> = i3;

        $r22 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $l11 = interfaceinvoke $r22.<android.widget.ListAdapter: long getItemId(int)>(i3);

        r1.<android.widget.AbsListView$SavedState: long firstId> = $l11;

        goto label04;

     label12:
        r1.<android.widget.AbsListView$SavedState: int viewTop> = 0;

        r1.<android.widget.AbsListView$SavedState: long firstId> = -1L;

        r1.<android.widget.AbsListView$SavedState: int position> = 0;

        goto label04;

     label13:
        z1 = 0;

        goto label06;

     label14:
        r1.<android.widget.AbsListView$SavedState: android.util.LongSparseArray checkIdState> = r2;

     label15:
        $i8 = r0.<android.widget.AbsListView: int mCheckedItemCount>;

        r1.<android.widget.AbsListView$SavedState: int checkedItemCount> = $i8;

        $r11 = r0.<android.widget.AbsListView: android.widget.RemoteViewsAdapter mRemoteAdapter>;

        if $r11 == null goto label01;

        $r10 = r0.<android.widget.AbsListView: android.widget.RemoteViewsAdapter mRemoteAdapter>;

        virtualinvoke $r10.<android.widget.RemoteViewsAdapter: void saveRemoteViewsCache()>();

        return r1;
    }

    protected void onSizeChanged(int, int, int, int)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, i3, $i4;
        android.widget.FastScroller $r1, $r2;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $i4 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if $i4 <= 0 goto label1;

        r0.<android.widget.AbsListView: boolean mDataChanged> = 1;

        virtualinvoke r0.<android.widget.AbsListView: void rememberSyncState()>();

     label1:
        $r1 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        if $r1 == null goto label2;

        $r2 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        virtualinvoke $r2.<android.widget.FastScroller: void onSizeChanged(int,int,int,int)>(i0, i1, i2, i3);

     label2:
        return;
    }

    public void onTextChanged(java.lang.CharSequence, int, int, int)
    {
        android.widget.AbsListView r0;
        java.lang.CharSequence r1;
        int i0, i1, i2, i3;
        boolean z0, $z1, $z2;
        android.widget.Filter r2;
        android.widget.PopupWindow $r3;
        android.widget.ListAdapter $r4, $r5;
        android.widget.Filterable $r6;
        java.lang.IllegalStateException $r7;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $z1 = virtualinvoke r0.<android.widget.AbsListView: boolean isTextFilterEnabled()>();

        if $z1 == 0 goto label2;

        specialinvoke r0.<android.widget.AbsListView: void createTextFilter(boolean)>(1);

        i3 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        $r3 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        z0 = virtualinvoke $r3.<android.widget.PopupWindow: boolean isShowing()>();

        if z0 != 0 goto label3;

        if i3 <= 0 goto label3;

        specialinvoke r0.<android.widget.AbsListView: void showPopup()>();

        r0.<android.widget.AbsListView: boolean mFiltered> = 1;

     label1:
        $r4 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $z2 = $r4 instanceof android.widget.Filterable;

        if $z2 == 0 goto label2;

        $r5 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $r6 = (android.widget.Filterable) $r5;

        r2 = interfaceinvoke $r6.<android.widget.Filterable: android.widget.Filter getFilter()>();

        if r2 == null goto label4;

        virtualinvoke r2.<android.widget.Filter: void filter(java.lang.CharSequence,android.widget.Filter$FilterListener)>(r1, r0);

     label2:
        return;

     label3:
        if z0 == 0 goto label1;

        if i3 != 0 goto label1;

        specialinvoke r0.<android.widget.AbsListView: void dismissPopup()>();

        r0.<android.widget.AbsListView: boolean mFiltered> = 0;

        goto label1;

     label4:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("You cannot call onTextChanged with a non filterable adapter");

        throw $r7;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.widget.AbsListView r0;
        android.view.MotionEvent r1;
        boolean z0, z1, z2, $z3, $z4, $z5;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        android.widget.AbsListView$PositionScroller $r2, $r7;
        android.view.VelocityTracker $r3;
        android.widget.FastScroller $r4, $r8;
        android.view.View $r5, $r6;
        float $f0, $f1;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.MotionEvent;

        $z3 = virtualinvoke r0.<android.widget.AbsListView: boolean isEnabled()>();

        if $z3 != 0 goto label03;

        $z5 = virtualinvoke r0.<android.widget.AbsListView: boolean isClickable()>();

        if $z5 != 0 goto label01;

        z2 = virtualinvoke r0.<android.widget.AbsListView: boolean isLongClickable()>();

        z1 = 0;

        if z2 == 0 goto label02;

     label01:
        z1 = 1;

     label02:
        return z1;

     label03:
        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$PositionScroller mPositionScroller>;

        if $r2 == null goto label04;

        $r7 = r0.<android.widget.AbsListView: android.widget.AbsListView$PositionScroller mPositionScroller>;

        virtualinvoke $r7.<android.widget.AbsListView$PositionScroller: void stop()>();

     label04:
        z0 = virtualinvoke r0.<android.widget.AbsListView: boolean isAttachedToWindow()>();

        z1 = 0;

        if z0 == 0 goto label02;

        $r4 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        if $r4 == null goto label05;

        $r8 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        $z4 = virtualinvoke $r8.<android.widget.FastScroller: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        if $z4 == 0 goto label05;

        return 1;

     label05:
        specialinvoke r0.<android.widget.AbsListView: void initVelocityTrackerIfNotExists()>();

        $r3 = r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r3.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r1);

        $i8 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        tableswitch($i8)
        {
            case 0: goto label07;
            case 1: goto label09;
            case 2: goto label08;
            case 3: goto label10;
            case 4: goto label06;
            case 5: goto label13;
            case 6: goto label11;
            default: goto label06;
        };

     label06:
        return 1;

     label07:
        specialinvoke r0.<android.widget.AbsListView: void onTouchDown(android.view.MotionEvent)>(r1);

        goto label06;

     label08:
        specialinvoke r0.<android.widget.AbsListView: void onTouchMove(android.view.MotionEvent)>(r1);

        goto label06;

     label09:
        specialinvoke r0.<android.widget.AbsListView: void onTouchUp(android.view.MotionEvent)>(r1);

        goto label06;

     label10:
        specialinvoke r0.<android.widget.AbsListView: void onTouchCancel()>();

        goto label06;

     label11:
        specialinvoke r0.<android.widget.AbsListView: void onSecondaryPointerUp(android.view.MotionEvent)>(r1);

        i5 = r0.<android.widget.AbsListView: int mMotionX>;

        i6 = r0.<android.widget.AbsListView: int mMotionY>;

        i7 = virtualinvoke r0.<android.widget.AbsListView: int pointToPosition(int,int)>(i5, i6);

        if i7 < 0 goto label12;

        $i10 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i9 = i7 - $i10;

        $r5 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i9);

        $i11 = virtualinvoke $r5.<android.view.View: int getTop()>();

        r0.<android.widget.AbsListView: int mMotionViewOriginalTop> = $i11;

        r0.<android.widget.AbsListView: int mMotionPosition> = i7;

     label12:
        r0.<android.widget.AbsListView: int mLastY> = i6;

        goto label06;

     label13:
        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionIndex()>();

        i1 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(i0);

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(i0);

        i2 = (int) $f1;

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i0);

        i3 = (int) $f0;

        r0.<android.widget.AbsListView: int mMotionCorrection> = 0;

        r0.<android.widget.AbsListView: int mActivePointerId> = i1;

        r0.<android.widget.AbsListView: int mMotionX> = i2;

        r0.<android.widget.AbsListView: int mMotionY> = i3;

        i4 = virtualinvoke r0.<android.widget.AbsListView: int pointToPosition(int,int)>(i2, i3);

        if i4 < 0 goto label14;

        $i12 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i13 = i4 - $i12;

        $r6 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i13);

        $i14 = virtualinvoke $r6.<android.view.View: int getTop()>();

        r0.<android.widget.AbsListView: int mMotionViewOriginalTop> = $i14;

        r0.<android.widget.AbsListView: int mMotionPosition> = i4;

     label14:
        r0.<android.widget.AbsListView: int mLastY> = i3;

        goto label06;
    }

    public void onTouchModeChanged(boolean)
    {
        android.widget.AbsListView r0;
        boolean z0;
        int i0, $i1, $i2, $i3;
        android.widget.AbsListView$FlingRunnable $r1, $r4;
        android.widget.AbsListView$PositionScroller $r2, $r3;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label3;

        virtualinvoke r0.<android.widget.AbsListView: void hideSelector()>();

        $i2 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        if $i2 <= 0 goto label1;

        $i3 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if $i3 <= 0 goto label1;

        virtualinvoke r0.<android.widget.AbsListView: void layoutChildren()>();

     label1:
        virtualinvoke r0.<android.widget.AbsListView: void updateSelectorState()>();

     label2:
        return;

     label3:
        i0 = r0.<android.widget.AbsListView: int mTouchMode>;

        if i0 == 5 goto label4;

        if i0 != 6 goto label2;

     label4:
        $r1 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        if $r1 == null goto label5;

        $r4 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        virtualinvoke $r4.<android.widget.AbsListView$FlingRunnable: void endFling()>();

     label5:
        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$PositionScroller mPositionScroller>;

        if $r2 == null goto label6;

        $r3 = r0.<android.widget.AbsListView: android.widget.AbsListView$PositionScroller mPositionScroller>;

        virtualinvoke $r3.<android.widget.AbsListView$PositionScroller: void stop()>();

     label6:
        $i1 = r0.<android.widget.AbsListView: int mScrollY>;

        if $i1 == 0 goto label2;

        r0.<android.widget.AbsListView: int mScrollY> = 0;

        virtualinvoke r0.<android.widget.AbsListView: void invalidateParentCaches()>();

        specialinvoke r0.<android.widget.AbsListView: void finishGlows()>();

        virtualinvoke r0.<android.widget.AbsListView: void invalidate()>();

        return;
    }

    public void onWindowFocusChanged(boolean)
    {
        android.widget.AbsListView r0;
        boolean z0, $z1, $z2, $z4;
        byte b0;
        int $i1, $i2, $i3, $i4;
        android.widget.AbsListView$FlingRunnable $r1, $r2, $r3;
        android.widget.AbsListView$PositionScroller $r4, $r5;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.widget.AdapterView: void onWindowFocusChanged(boolean)>(z0);

        $z1 = virtualinvoke r0.<android.widget.AbsListView: boolean isInTouchMode()>();

        if $z1 == 0 goto label5;

        b0 = 0;

     label1:
        if z0 != 0 goto label6;

        virtualinvoke r0.<android.widget.AbsListView: void setChildrenDrawingCacheEnabled(boolean)>(0);

        $r1 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        if $r1 == null goto label3;

        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>($r2);

        $r3 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        virtualinvoke $r3.<android.widget.AbsListView$FlingRunnable: void endFling()>();

        $r4 = r0.<android.widget.AbsListView: android.widget.AbsListView$PositionScroller mPositionScroller>;

        if $r4 == null goto label2;

        $r5 = r0.<android.widget.AbsListView: android.widget.AbsListView$PositionScroller mPositionScroller>;

        virtualinvoke $r5.<android.widget.AbsListView$PositionScroller: void stop()>();

     label2:
        $i4 = r0.<android.widget.AbsListView: int mScrollY>;

        if $i4 == 0 goto label3;

        r0.<android.widget.AbsListView: int mScrollY> = 0;

        virtualinvoke r0.<android.widget.AbsListView: void invalidateParentCaches()>();

        specialinvoke r0.<android.widget.AbsListView: void finishGlows()>();

        virtualinvoke r0.<android.widget.AbsListView: void invalidate()>();

     label3:
        specialinvoke r0.<android.widget.AbsListView: void dismissPopup()>();

        if b0 != 1 goto label4;

        $i3 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        r0.<android.widget.AbsListView: int mResurrectToPosition> = $i3;

     label4:
        r0.<android.widget.AbsListView: int mLastTouchMode> = b0;

        return;

     label5:
        b0 = 1;

        goto label1;

     label6:
        $z2 = r0.<android.widget.AbsListView: boolean mFiltered>;

        if $z2 == 0 goto label7;

        $z4 = r0.<android.widget.AbsListView: boolean mPopupHidden>;

        if $z4 != 0 goto label7;

        specialinvoke r0.<android.widget.AbsListView: void showPopup()>();

     label7:
        $i1 = r0.<android.widget.AbsListView: int mLastTouchMode>;

        if b0 == $i1 goto label4;

        $i2 = r0.<android.widget.AbsListView: int mLastTouchMode>;

        if $i2 == -1 goto label4;

        if b0 != 1 goto label8;

        virtualinvoke r0.<android.widget.AbsListView: boolean resurrectSelection()>();

        goto label4;

     label8:
        virtualinvoke r0.<android.widget.AbsListView: void hideSelector()>();

        r0.<android.widget.AbsListView: int mLayoutMode> = 0;

        virtualinvoke r0.<android.widget.AbsListView: void layoutChildren()>();

        goto label4;
    }

    public boolean performAccessibilityAction(int, android.os.Bundle)
    {
        android.widget.AbsListView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        android.os.Bundle r1;
        boolean $z0, $z1, $z2;
        android.graphics.Rect $r2, $r3, $r4, $r5;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        $z0 = specialinvoke r0.<android.widget.AdapterView: boolean performAccessibilityAction(int,android.os.Bundle)>(i0, r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        lookupswitch(i0)
        {
            case 4096: goto label3;
            case 8192: goto label5;
            default: goto label2;
        };

     label2:
        return 0;

     label3:
        $z2 = virtualinvoke r0.<android.widget.AbsListView: boolean isEnabled()>();

        if $z2 == 0 goto label4;

        $i8 = virtualinvoke r0.<android.widget.AbsListView: int getLastVisiblePosition()>();

        $i9 = virtualinvoke r0.<android.widget.AbsListView: int getCount()>();

        $i11 = -1 + $i9;

        if $i8 >= $i11 goto label4;

        $i10 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $r4 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i12 = $r4.<android.graphics.Rect: int top>;

        $i15 = $i10 - $i12;

        $r5 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i13 = $r5.<android.graphics.Rect: int bottom>;

        $i14 = $i15 - $i13;

        virtualinvoke r0.<android.widget.AbsListView: void smoothScrollBy(int,int)>($i14, 200);

        return 1;

     label4:
        return 0;

     label5:
        $z1 = virtualinvoke r0.<android.widget.AbsListView: boolean isEnabled()>();

        if $z1 == 0 goto label6;

        $i1 = r0.<android.widget.AbsListView: int mFirstPosition>;

        if $i1 <= 0 goto label6;

        $i2 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $r2 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i3 = $r2.<android.graphics.Rect: int top>;

        $i5 = $i2 - $i3;

        $r3 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i4 = $r3.<android.graphics.Rect: int bottom>;

        $i6 = $i5 - $i4;

        $i7 = neg $i6;

        virtualinvoke r0.<android.widget.AbsListView: void smoothScrollBy(int,int)>($i7, 200);

        return 1;

     label6:
        return 0;
    }

    public boolean performItemClick(android.view.View, int, long)
    {
        android.widget.AbsListView r0;
        android.view.View r1;
        int i0, i2, i3, $i4, $i5, $i6, $i7, $i8, $i10, $i12;
        long l1, $l9, $l11, $l13;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8, $z9, $z10;
        android.util.SparseBooleanArray $r2, $r4, $r13, $r15, $r16, $r17, $r19;
        android.util.LongSparseArray $r3, $r10, $r11, $r18, $r20, $r25;
        android.view.ActionMode $r5, $r6, $r23;
        android.widget.AbsListView$MultiChoiceModeWrapper $r7;
        android.widget.ListAdapter $r8, $r9, $r12, $r21, $r22;
        java.lang.Integer $r14, $r24;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        z0 = 1;

        i2 = r0.<android.widget.AbsListView: int mChoiceMode>;

        z1 = 0;

        if i2 == 0 goto label07;

        z1 = 1;

        $i4 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i4 == 2 goto label01;

        $i10 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i10 != 3 goto label12;

        $r23 = r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode>;

        if $r23 == null goto label12;

     label01:
        $r2 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        $z6 = virtualinvoke $r2.<android.util.SparseBooleanArray: boolean get(int,boolean)>(i0, 0);

        if $z6 != 0 goto label09;

        z2 = 1;

     label02:
        $r4 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        virtualinvoke $r4.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, z2);

        $r3 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        if $r3 == null goto label03;

        $r8 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $z7 = interfaceinvoke $r8.<android.widget.ListAdapter: boolean hasStableIds()>();

        if $z7 == 0 goto label03;

        if z2 == 0 goto label10;

        $r11 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        $r12 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $l11 = interfaceinvoke $r12.<android.widget.ListAdapter: long getItemId(int)>(i0);

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r11.<android.util.LongSparseArray: void put(long,java.lang.Object)>($l11, $r14);

     label03:
        if z2 == 0 goto label11;

        $i7 = r0.<android.widget.AbsListView: int mCheckedItemCount>;

        $i8 = 1 + $i7;

        r0.<android.widget.AbsListView: int mCheckedItemCount> = $i8;

     label04:
        $r6 = r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode>;

        if $r6 == null goto label05;

        $r7 = r0.<android.widget.AbsListView: android.widget.AbsListView$MultiChoiceModeWrapper mMultiChoiceModeCallback>;

        $r5 = r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode>;

        virtualinvoke $r7.<android.widget.AbsListView$MultiChoiceModeWrapper: void onItemCheckedStateChanged(android.view.ActionMode,int,long,boolean)>($r5, i0, l1, z2);

        z0 = 0;

     label05:
        z3 = 1;

     label06:
        if z3 == 0 goto label07;

        specialinvoke r0.<android.widget.AbsListView: void updateOnScreenCheckedViews()>();

     label07:
        if z0 == 0 goto label08;

        $z5 = specialinvoke r0.<android.widget.AdapterView: boolean performItemClick(android.view.View,int,long)>(r1, i0, l1);

        z1 = z1 | $z5;

     label08:
        return z1;

     label09:
        z2 = 0;

        goto label02;

     label10:
        $r10 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        $r9 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $l9 = interfaceinvoke $r9.<android.widget.ListAdapter: long getItemId(int)>(i0);

        virtualinvoke $r10.<android.util.LongSparseArray: void delete(long)>($l9);

        goto label03;

     label11:
        $i6 = r0.<android.widget.AbsListView: int mCheckedItemCount>;

        $i5 = -1 + $i6;

        r0.<android.widget.AbsListView: int mCheckedItemCount> = $i5;

        goto label04;

     label12:
        i3 = r0.<android.widget.AbsListView: int mChoiceMode>;

        z3 = 0;

        if i3 != 1 goto label06;

        $r13 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        $z8 = virtualinvoke $r13.<android.util.SparseBooleanArray: boolean get(int,boolean)>(i0, 0);

        if $z8 != 0 goto label16;

        z4 = 1;

     label13:
        if z4 == 0 goto label17;

        $r19 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        virtualinvoke $r19.<android.util.SparseBooleanArray: void clear()>();

        $r17 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        virtualinvoke $r17.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, 1);

        $r18 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        if $r18 == null goto label14;

        $r22 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $z10 = interfaceinvoke $r22.<android.widget.ListAdapter: boolean hasStableIds()>();

        if $z10 == 0 goto label14;

        $r20 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        virtualinvoke $r20.<android.util.LongSparseArray: void clear()>();

        $r25 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        $r21 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $l13 = interfaceinvoke $r21.<android.widget.ListAdapter: long getItemId(int)>(i0);

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r25.<android.util.LongSparseArray: void put(long,java.lang.Object)>($l13, $r24);

     label14:
        r0.<android.widget.AbsListView: int mCheckedItemCount> = 1;

     label15:
        z3 = 1;

        goto label06;

     label16:
        z4 = 0;

        goto label13;

     label17:
        $r16 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        $i12 = virtualinvoke $r16.<android.util.SparseBooleanArray: int size()>();

        if $i12 == 0 goto label18;

        $r15 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        $z9 = virtualinvoke $r15.<android.util.SparseBooleanArray: boolean valueAt(int)>(0);

        if $z9 != 0 goto label15;

     label18:
        r0.<android.widget.AbsListView: int mCheckedItemCount> = 0;

        goto label15;
    }

    boolean performLongPress(android.view.View, int, long)
    {
        android.widget.AbsListView r0;
        android.view.View r1;
        int i0, $i2;
        long l1;
        boolean z0;
        android.widget.AdapterView$OnItemLongClickListener r2, $r5;
        android.view.ActionMode r3, $r6;
        android.view.ContextMenu$ContextMenuInfo $r4;
        android.widget.AbsListView$MultiChoiceModeWrapper $r7;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        z0 = 1;

        $i2 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i2 != 3 goto label2;

        $r6 = r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode>;

        if $r6 != null goto label1;

        $r7 = r0.<android.widget.AbsListView: android.widget.AbsListView$MultiChoiceModeWrapper mMultiChoiceModeCallback>;

        r3 = virtualinvoke r0.<android.widget.AbsListView: android.view.ActionMode startActionMode(android.view.ActionMode$Callback)>($r7);

        r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode> = r3;

        if r3 == null goto label1;

        virtualinvoke r0.<android.widget.AbsListView: void setItemChecked(int,boolean)>(i0, z0);

        virtualinvoke r0.<android.widget.AbsListView: boolean performHapticFeedback(int)>(0);

     label1:
        return z0;

     label2:
        r2 = r0.<android.widget.AbsListView: android.widget.AdapterView$OnItemLongClickListener mOnItemLongClickListener>;

        z0 = 0;

        if r2 == null goto label3;

        $r5 = r0.<android.widget.AbsListView: android.widget.AdapterView$OnItemLongClickListener mOnItemLongClickListener>;

        z0 = interfaceinvoke $r5.<android.widget.AdapterView$OnItemLongClickListener: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)>(r0, r1, i0, l1);

     label3:
        if z0 != 0 goto label4;

        $r4 = virtualinvoke r0.<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo createContextMenuInfo(android.view.View,int,long)>(r1, i0, l1);

        r0.<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo mContextMenuInfo> = $r4;

        z0 = specialinvoke r0.<android.widget.AdapterView: boolean showContextMenuForChild(android.view.View)>(r0);

     label4:
        if z0 == 0 goto label1;

        virtualinvoke r0.<android.widget.AbsListView: boolean performHapticFeedback(int)>(0);

        return z0;
    }

    public int pointToPosition(int, int)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        android.graphics.Rect r1, $r3;
        android.view.View r2;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<android.widget.AbsListView: android.graphics.Rect mTouchFrame>;

        if r1 != null goto label1;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<android.widget.AbsListView: android.graphics.Rect mTouchFrame> = $r3;

        r1 = r0.<android.widget.AbsListView: android.graphics.Rect mTouchFrame>;

     label1:
        $i3 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        i2 = -1 + $i3;

     label2:
        if i2 < 0 goto label4;

        r2 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i2);

        $i4 = virtualinvoke r2.<android.view.View: int getVisibility()>();

        if $i4 != 0 goto label3;

        virtualinvoke r2.<android.view.View: void getHitRect(android.graphics.Rect)>(r1);

        $z0 = virtualinvoke r1.<android.graphics.Rect: boolean contains(int,int)>(i0, i1);

        if $z0 == 0 goto label3;

        $i5 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i6 = i2 + $i5;

        return $i6;

     label3:
        i2 = i2 + -1;

        goto label2;

     label4:
        return -1;
    }

    public long pointToRowId(int, int)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2;
        android.widget.ListAdapter $r1;
        long $l3;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = virtualinvoke r0.<android.widget.AbsListView: int pointToPosition(int,int)>(i0, i1);

        if i2 < 0 goto label1;

        $r1 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $l3 = interfaceinvoke $r1.<android.widget.ListAdapter: long getItemId(int)>(i2);

        return $l3;

     label1:
        return -9223372036854775808L;
    }

    void positionSelector(int, android.view.View)
    {
        android.widget.AbsListView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.view.View r1;
        android.graphics.Rect r2;
        boolean z0, z1, $z2, $z3;
        android.widget.AbsListView$SelectionBoundsAdjuster $r3;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.View;

        if i0 == -1 goto label1;

        r0.<android.widget.AbsListView: int mSelectorPosition> = i0;

     label1:
        r2 = r0.<android.widget.AbsListView: android.graphics.Rect mSelectorRect>;

        $i1 = virtualinvoke r1.<android.view.View: int getLeft()>();

        $i2 = virtualinvoke r1.<android.view.View: int getTop()>();

        $i3 = virtualinvoke r1.<android.view.View: int getRight()>();

        $i4 = virtualinvoke r1.<android.view.View: int getBottom()>();

        virtualinvoke r2.<android.graphics.Rect: void set(int,int,int,int)>($i1, $i2, $i3, $i4);

        $z2 = r1 instanceof android.widget.AbsListView$SelectionBoundsAdjuster;

        if $z2 == 0 goto label2;

        $r3 = (android.widget.AbsListView$SelectionBoundsAdjuster) r1;

        interfaceinvoke $r3.<android.widget.AbsListView$SelectionBoundsAdjuster: void adjustListItemSelectionBounds(android.graphics.Rect)>(r2);

     label2:
        $i8 = r2.<android.graphics.Rect: int left>;

        $i7 = r2.<android.graphics.Rect: int top>;

        $i6 = r2.<android.graphics.Rect: int right>;

        $i5 = r2.<android.graphics.Rect: int bottom>;

        specialinvoke r0.<android.widget.AbsListView: void positionSelector(int,int,int,int)>($i8, $i7, $i6, $i5);

        z0 = r0.<android.widget.AbsListView: boolean mIsChildViewEnabled>;

        $z3 = virtualinvoke r1.<android.view.View: boolean isEnabled()>();

        if $z3 == z0 goto label4;

        if z0 != 0 goto label5;

        z1 = 1;

     label3:
        r0.<android.widget.AbsListView: boolean mIsChildViewEnabled> = z1;

        $i9 = virtualinvoke r0.<android.widget.AbsListView: int getSelectedItemPosition()>();

        if $i9 == -1 goto label4;

        virtualinvoke r0.<android.widget.AbsListView: void refreshDrawableState()>();

     label4:
        return;

     label5:
        z1 = 0;

        goto label3;
    }

    public void reclaimViews(java.util.List)
    {
        android.widget.AbsListView r0;
        java.util.List r1;
        int i0, i1, $i2;
        android.widget.AbsListView$RecyclerListener r2;
        android.view.View r3;
        android.widget.AbsListView$LayoutParams r4;
        android.widget.AbsListView$RecycleBin $r5, $r6, $r8;
        android.view.ViewGroup$LayoutParams $r7;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: java.util.List;

        i0 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        $r5 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        r2 = staticinvoke <android.widget.AbsListView$RecycleBin: android.widget.AbsListView$RecyclerListener access$3800(android.widget.AbsListView$RecycleBin)>($r5);

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i1);

        $r7 = virtualinvoke r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.widget.AbsListView$LayoutParams) $r7;

        if r4 == null goto label2;

        $r8 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        $i2 = r4.<android.widget.AbsListView$LayoutParams: int viewType>;

        $z0 = virtualinvoke $r8.<android.widget.AbsListView$RecycleBin: boolean shouldRecycleViewType(int)>($i2);

        if $z0 == 0 goto label2;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r3);

        virtualinvoke r3.<android.view.View: void setAccessibilityDelegate(android.view.View$AccessibilityDelegate)>(null);

        if r2 == null goto label2;

        interfaceinvoke r2.<android.widget.AbsListView$RecyclerListener: void onMovedToScrapHeap(android.view.View)>(r3);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r6 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        virtualinvoke $r6.<android.widget.AbsListView$RecycleBin: void reclaimScrapViews(java.util.List)>(r1);

        virtualinvoke r0.<android.widget.AbsListView: void removeAllViewsInLayout()>();

        return;
    }

    int reconcileSelectedPosition()
    {
        android.widget.AbsListView r0;
        int i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.widget.AbsListView;

        i0 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        if i0 >= 0 goto label1;

        i0 = r0.<android.widget.AbsListView: int mResurrectToPosition>;

     label1:
        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(0, i0);

        $i2 = r0.<android.widget.AbsListView: int mItemCount>;

        $i3 = -1 + $i2;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i3);

        return $i4;
    }

    void reportScrollStateChange(int)
    {
        android.widget.AbsListView r0;
        int i0, $i1;
        android.widget.AbsListView$OnScrollListener $r1, $r2;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        $i1 = r0.<android.widget.AbsListView: int mLastScrollState>;

        if i0 == $i1 goto label1;

        $r1 = r0.<android.widget.AbsListView: android.widget.AbsListView$OnScrollListener mOnScrollListener>;

        if $r1 == null goto label1;

        r0.<android.widget.AbsListView: int mLastScrollState> = i0;

        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$OnScrollListener mOnScrollListener>;

        interfaceinvoke $r2.<android.widget.AbsListView$OnScrollListener: void onScrollStateChanged(android.widget.AbsListView,int)>(r0, i0);

     label1:
        return;
    }

    public void requestDisallowInterceptTouchEvent(boolean)
    {
        android.widget.AbsListView r0;
        boolean z0;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        specialinvoke r0.<android.widget.AbsListView: void recycleVelocityTracker()>();

     label1:
        specialinvoke r0.<android.widget.AdapterView: void requestDisallowInterceptTouchEvent(boolean)>(z0);

        return;
    }

    public void requestLayout()
    {
        android.widget.AbsListView r0;
        boolean $z0, $z1;

        r0 := @this: android.widget.AbsListView;

        $z0 = r0.<android.widget.AbsListView: boolean mBlockLayoutRequests>;

        if $z0 != 0 goto label1;

        $z1 = r0.<android.widget.AbsListView: boolean mInLayout>;

        if $z1 != 0 goto label1;

        specialinvoke r0.<android.widget.AdapterView: void requestLayout()>();

     label1:
        return;
    }

    void requestLayoutIfNecessary()
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @this: android.widget.AbsListView;

        $i0 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if $i0 <= 0 goto label1;

        virtualinvoke r0.<android.widget.AbsListView: void resetList()>();

        virtualinvoke r0.<android.widget.AbsListView: void requestLayout()>();

        virtualinvoke r0.<android.widget.AbsListView: void invalidate()>();

     label1:
        return;
    }

    void resetList()
    {
        android.widget.AbsListView r0;
        android.graphics.Rect $r1;

        r0 := @this: android.widget.AbsListView;

        virtualinvoke r0.<android.widget.AbsListView: void removeAllViewsInLayout()>();

        r0.<android.widget.AbsListView: int mFirstPosition> = 0;

        r0.<android.widget.AbsListView: boolean mDataChanged> = 0;

        r0.<android.widget.AbsListView: java.lang.Runnable mPositionScrollAfterLayout> = null;

        r0.<android.widget.AbsListView: boolean mNeedSync> = 0;

        r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync> = null;

        r0.<android.widget.AbsListView: int mOldSelectedPosition> = -1;

        r0.<android.widget.AbsListView: long mOldSelectedRowId> = -9223372036854775808L;

        virtualinvoke r0.<android.widget.AbsListView: void setSelectedPositionInt(int)>(-1);

        virtualinvoke r0.<android.widget.AbsListView: void setNextSelectedPositionInt(int)>(-1);

        r0.<android.widget.AbsListView: int mSelectedTop> = 0;

        r0.<android.widget.AbsListView: int mSelectorPosition> = -1;

        $r1 = r0.<android.widget.AbsListView: android.graphics.Rect mSelectorRect>;

        virtualinvoke $r1.<android.graphics.Rect: void setEmpty()>();

        virtualinvoke r0.<android.widget.AbsListView: void invalidate()>();

        return;
    }

    boolean resurrectSelection()
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31;
        boolean z0;
        android.view.View r1, r2, $r8;
        android.graphics.Rect $r3, $r4;
        android.widget.AbsListView$FlingRunnable $r5;
        android.widget.AbsListView$PositionScroller $r6, $r7;

        r0 := @this: android.widget.AbsListView;

        i0 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if i0 > 0 goto label01;

        return 0;

     label01:
        i1 = 0;

        $r3 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        i2 = $r3.<android.graphics.Rect: int top>;

        $i15 = r0.<android.widget.AbsListView: int mBottom>;

        $i16 = r0.<android.widget.AbsListView: int mTop>;

        $i19 = $i15 - $i16;

        $r4 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i17 = $r4.<android.graphics.Rect: int bottom>;

        i3 = $i19 - $i17;

        i4 = r0.<android.widget.AbsListView: int mFirstPosition>;

        i5 = r0.<android.widget.AbsListView: int mResurrectToPosition>;

        z0 = 1;

        if i5 < i4 goto label06;

        $i25 = i4 + i0;

        if i5 >= $i25 goto label06;

        i7 = i5;

        $i26 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i27 = i7 - $i26;

        r2 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i27);

        i1 = virtualinvoke r2.<android.view.View: int getTop()>();

        i14 = virtualinvoke r2.<android.view.View: int getBottom()>();

        if i1 >= i2 goto label05;

        $i31 = virtualinvoke r0.<android.widget.AbsListView: int getVerticalFadingEdgeLength()>();

        i1 = i2 + $i31;

     label02:
        r0.<android.widget.AbsListView: int mResurrectToPosition> = -1;

        $r5 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>($r5);

        $r6 = r0.<android.widget.AbsListView: android.widget.AbsListView$PositionScroller mPositionScroller>;

        if $r6 == null goto label03;

        $r7 = r0.<android.widget.AbsListView: android.widget.AbsListView$PositionScroller mPositionScroller>;

        virtualinvoke $r7.<android.widget.AbsListView$PositionScroller: void stop()>();

     label03:
        r0.<android.widget.AbsListView: int mTouchMode> = -1;

        specialinvoke r0.<android.widget.AbsListView: void clearScrollingCache()>();

        r0.<android.widget.AbsListView: int mSpecificTop> = i1;

        i11 = virtualinvoke r0.<android.widget.AbsListView: int lookForSelectablePosition(int,boolean)>(i7, z0);

        if i11 < i4 goto label16;

        $i20 = virtualinvoke r0.<android.widget.AbsListView: int getLastVisiblePosition()>();

        if i11 > $i20 goto label16;

        r0.<android.widget.AbsListView: int mLayoutMode> = 4;

        virtualinvoke r0.<android.widget.AbsListView: void updateSelectorState()>();

        virtualinvoke r0.<android.widget.AbsListView: void setSelectionInt(int)>(i11);

        virtualinvoke r0.<android.widget.AbsListView: void invokeOnItemScrollListener()>();

     label04:
        virtualinvoke r0.<android.widget.AbsListView: void reportScrollStateChange(int)>(0);

        if i11 < 0 goto label17;

        return 1;

     label05:
        if i14 <= i3 goto label02;

        $i30 = virtualinvoke r2.<android.view.View: int getMeasuredHeight()>();

        $i29 = i3 - $i30;

        $i28 = virtualinvoke r0.<android.widget.AbsListView: int getVerticalFadingEdgeLength()>();

        i1 = $i29 - $i28;

        goto label02;

     label06:
        if i5 >= i4 goto label11;

        i7 = i4;

        i13 = 0;

     label07:
        if i13 >= i0 goto label02;

        $r8 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i13);

        i12 = virtualinvoke $r8.<android.view.View: int getTop()>();

        if i13 != 0 goto label09;

        i1 = i12;

        if i4 > 0 goto label08;

        if i12 >= i2 goto label09;

     label08:
        $i24 = virtualinvoke r0.<android.widget.AbsListView: int getVerticalFadingEdgeLength()>();

        i2 = i2 + $i24;

     label09:
        if i12 < i2 goto label10;

        i7 = i4 + i13;

        i1 = i12;

        goto label02;

     label10:
        i13 = i13 + 1;

        goto label07;

     label11:
        i6 = r0.<android.widget.AbsListView: int mItemCount>;

        $i18 = i4 + i0;

        i7 = -1 + $i18;

        i8 = i0 - 1;

     label12:
        z0 = 0;

        if i8 < 0 goto label02;

        r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i8);

        i9 = virtualinvoke r1.<android.view.View: int getTop()>();

        i10 = virtualinvoke r1.<android.view.View: int getBottom()>();

        $i23 = i0 - 1;

        if i8 != $i23 goto label14;

        i1 = i9;

        $i21 = i4 + i0;

        if $i21 < i6 goto label13;

        if i10 <= i3 goto label14;

     label13:
        $i22 = virtualinvoke r0.<android.widget.AbsListView: int getVerticalFadingEdgeLength()>();

        i3 = i3 - $i22;

     label14:
        if i10 > i3 goto label15;

        i7 = i4 + i8;

        i1 = i9;

        z0 = 0;

        goto label02;

     label15:
        i8 = i8 + -1;

        goto label12;

     label16:
        i11 = -1;

        goto label04;

     label17:
        return 0;
    }

    boolean resurrectSelectionIfNeeded()
    {
        android.widget.AbsListView r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        if $i0 >= 0 goto label1;

        $z0 = virtualinvoke r0.<android.widget.AbsListView: boolean resurrectSelection()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.widget.AbsListView: void updateSelectorState()>();

        return 1;

     label1:
        return 0;
    }

    public void scrollListBy(int)
    {
        android.widget.AbsListView r0;
        int i0, $i1, $i2;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        $i2 = neg i0;

        $i1 = neg i0;

        virtualinvoke r0.<android.widget.AbsListView: boolean trackMotionScroll(int,int)>($i2, $i1);

        return;
    }

    public void sendAccessibilityEvent(int)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, $i3, $i4;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        if i0 != 4096 goto label2;

        i1 = virtualinvoke r0.<android.widget.AbsListView: int getFirstVisiblePosition()>();

        i2 = virtualinvoke r0.<android.widget.AbsListView: int getLastVisiblePosition()>();

        $i3 = r0.<android.widget.AbsListView: int mLastAccessibilityScrollEventFromIndex>;

        if $i3 != i1 goto label1;

        $i4 = r0.<android.widget.AbsListView: int mLastAccessibilityScrollEventToIndex>;

        if $i4 != i2 goto label1;

        return;

     label1:
        r0.<android.widget.AbsListView: int mLastAccessibilityScrollEventFromIndex> = i1;

        r0.<android.widget.AbsListView: int mLastAccessibilityScrollEventToIndex> = i2;

     label2:
        specialinvoke r0.<android.widget.AdapterView: void sendAccessibilityEvent(int)>(i0);

        return;
    }

    boolean sendToTextFilter(int, int, android.view.KeyEvent)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, $i3, $i4, $i6, $i7;
        android.view.KeyEvent r1, r2;
        boolean z0, z1, z2, z3, z4, z5, $z6, $z7, $z8, $z9;
        android.widget.PopupWindow r3, $r8;
        android.view.KeyEvent$DispatcherState r4;
        android.widget.EditText $r5, $r6, $r7, $r9;
        long $l5;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.view.KeyEvent;

        $z6 = specialinvoke r0.<android.widget.AbsListView: boolean acceptFilter()>();

        if $z6 != 0 goto label02;

        z1 = 0;

     label01:
        return z1;

     label02:
        z0 = 1;

        z1 = 0;

        lookupswitch(i0)
        {
            case 4: goto label08;
            case 19: goto label07;
            case 20: goto label07;
            case 21: goto label07;
            case 22: goto label07;
            case 23: goto label07;
            case 62: goto label12;
            case 66: goto label07;
            default: goto label03;
        };

     label03:
        if z0 == 0 goto label01;

        specialinvoke r0.<android.widget.AbsListView: void createTextFilter(boolean)>(1);

        r2 = r1;

        $i3 = virtualinvoke r2.<android.view.KeyEvent: int getRepeatCount()>();

        if $i3 <= 0 goto label04;

        $l5 = virtualinvoke r1.<android.view.KeyEvent: long getEventTime()>();

        r2 = staticinvoke <android.view.KeyEvent: android.view.KeyEvent changeTimeRepeat(android.view.KeyEvent,long,int)>(r1, $l5, 0);

     label04:
        $i4 = virtualinvoke r1.<android.view.KeyEvent: int getAction()>();

        tableswitch($i4)
        {
            case 0: goto label06;
            case 1: goto label13;
            case 2: goto label14;
            default: goto label05;
        };

     label05:
        return z1;

     label06:
        $r7 = r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        $z9 = virtualinvoke $r7.<android.widget.EditText: boolean onKeyDown(int,android.view.KeyEvent)>(i0, r2);

        return $z9;

     label07:
        z1 = 0;

        z0 = 0;

        goto label03;

     label08:
        z2 = r0.<android.widget.AbsListView: boolean mFiltered>;

        z1 = 0;

        if z2 == 0 goto label10;

        r3 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        z1 = 0;

        if r3 == null goto label10;

        $r8 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        z3 = virtualinvoke $r8.<android.widget.PopupWindow: boolean isShowing()>();

        z1 = 0;

        if z3 == 0 goto label10;

        $i6 = virtualinvoke r1.<android.view.KeyEvent: int getAction()>();

        if $i6 != 0 goto label11;

        $i7 = virtualinvoke r1.<android.view.KeyEvent: int getRepeatCount()>();

        if $i7 != 0 goto label11;

        r4 = virtualinvoke r0.<android.widget.AbsListView: android.view.KeyEvent$DispatcherState getKeyDispatcherState()>();

        if r4 == null goto label09;

        virtualinvoke r4.<android.view.KeyEvent$DispatcherState: void startTracking(android.view.KeyEvent,java.lang.Object)>(r1, r0);

     label09:
        z1 = 1;

     label10:
        z0 = 0;

        goto label03;

     label11:
        i2 = virtualinvoke r1.<android.view.KeyEvent: int getAction()>();

        z1 = 0;

        if i2 != 1 goto label10;

        z4 = virtualinvoke r1.<android.view.KeyEvent: boolean isTracking()>();

        z1 = 0;

        if z4 == 0 goto label10;

        z5 = virtualinvoke r1.<android.view.KeyEvent: boolean isCanceled()>();

        z1 = 0;

        if z5 != 0 goto label10;

        z1 = 1;

        $r9 = r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        virtualinvoke $r9.<android.widget.EditText: void setText(java.lang.CharSequence)>("");

        goto label10;

     label12:
        z0 = r0.<android.widget.AbsListView: boolean mFiltered>;

        z1 = 0;

        goto label03;

     label13:
        $r6 = r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        $z8 = virtualinvoke $r6.<android.widget.EditText: boolean onKeyUp(int,android.view.KeyEvent)>(i0, r2);

        return $z8;

     label14:
        $r5 = r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        $z7 = virtualinvoke $r5.<android.widget.EditText: boolean onKeyMultiple(int,int,android.view.KeyEvent)>(i0, i1, r1);

        return $z7;
    }

    public volatile void setAdapter(android.widget.Adapter)
    {
        android.widget.AbsListView r0;
        android.widget.Adapter r1;
        android.widget.ListAdapter $r2;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.widget.Adapter;

        $r2 = (android.widget.ListAdapter) r1;

        virtualinvoke r0.<android.widget.AbsListView: void setAdapter(android.widget.ListAdapter)>($r2);

        return;
    }

    public void setAdapter(android.widget.ListAdapter)
    {
        android.widget.AbsListView r0;
        android.widget.ListAdapter r1, $r6;
        android.util.SparseBooleanArray $r2, $r5;
        android.util.LongSparseArray $r3, $r4, $r7, $r8;
        boolean $z0, $z1;
        int $i0;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.widget.ListAdapter;

        if r1 == null goto label1;

        $r6 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $z0 = interfaceinvoke $r6.<android.widget.ListAdapter: boolean hasStableIds()>();

        r0.<android.widget.AbsListView: boolean mAdapterHasStableIds> = $z0;

        $i0 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i0 == 0 goto label1;

        $z1 = r0.<android.widget.AbsListView: boolean mAdapterHasStableIds>;

        if $z1 == 0 goto label1;

        $r7 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        if $r7 != null goto label1;

        $r8 = new android.util.LongSparseArray;

        specialinvoke $r8.<android.util.LongSparseArray: void <init>()>();

        r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates> = $r8;

     label1:
        $r2 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        if $r2 == null goto label2;

        $r5 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        virtualinvoke $r5.<android.util.SparseBooleanArray: void clear()>();

     label2:
        $r3 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        if $r3 == null goto label3;

        $r4 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        virtualinvoke $r4.<android.util.LongSparseArray: void clear()>();

     label3:
        return;
    }

    public void setCacheColorHint(int)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, $i3;
        android.widget.AbsListView$RecycleBin $r1;
        android.view.View $r2;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        $i3 = r0.<android.widget.AbsListView: int mCacheColorHint>;

        if i0 == $i3 goto label3;

        r0.<android.widget.AbsListView: int mCacheColorHint> = i0;

        i1 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r2 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i2);

        virtualinvoke $r2.<android.view.View: void setDrawingCacheBackgroundColor(int)>(i0);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r1 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        virtualinvoke $r1.<android.widget.AbsListView$RecycleBin: void setCacheColorHint(int)>(i0);

     label3:
        return;
    }

    public void setChoiceMode(int)
    {
        android.widget.AbsListView r0;
        int i0, $i1, $i2;
        android.view.ActionMode $r1, $r8;
        android.util.SparseBooleanArray $r2, $r7;
        android.util.LongSparseArray $r3, $r6;
        android.widget.ListAdapter $r4, $r5;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        r0.<android.widget.AbsListView: int mChoiceMode> = i0;

        $r1 = r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode>;

        if $r1 == null goto label1;

        $r8 = r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode>;

        virtualinvoke $r8.<android.view.ActionMode: void finish()>();

        r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode> = null;

     label1:
        $i1 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i1 == 0 goto label4;

        $r2 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        if $r2 != null goto label2;

        $r7 = new android.util.SparseBooleanArray;

        specialinvoke $r7.<android.util.SparseBooleanArray: void <init>(int)>(0);

        r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates> = $r7;

     label2:
        $r3 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        if $r3 != null goto label3;

        $r4 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        if $r4 == null goto label3;

        $r5 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $z0 = interfaceinvoke $r5.<android.widget.ListAdapter: boolean hasStableIds()>();

        if $z0 == 0 goto label3;

        $r6 = new android.util.LongSparseArray;

        specialinvoke $r6.<android.util.LongSparseArray: void <init>(int)>(0);

        r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates> = $r6;

     label3:
        $i2 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i2 != 3 goto label4;

        virtualinvoke r0.<android.widget.AbsListView: void clearChoices()>();

        virtualinvoke r0.<android.widget.AbsListView: void setLongClickable(boolean)>(1);

     label4:
        return;
    }

    public void setDrawSelectorOnTop(boolean)
    {
        android.widget.AbsListView r0;
        boolean z0;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        r0.<android.widget.AbsListView: boolean mDrawSelectorOnTop> = z0;

        return;
    }

    public void setFastScrollAlwaysVisible(boolean)
    {
        android.widget.AbsListView r0;
        boolean z0, $z1, $z2, $z4;
        android.widget.AbsListView$2 $r1;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.widget.AbsListView: boolean mFastScrollAlwaysVisible>;

        if $z1 == z0 goto label2;

        if z0 == 0 goto label1;

        $z4 = r0.<android.widget.AbsListView: boolean mFastScrollEnabled>;

        if $z4 != 0 goto label1;

        virtualinvoke r0.<android.widget.AbsListView: void setFastScrollEnabled(boolean)>(1);

     label1:
        r0.<android.widget.AbsListView: boolean mFastScrollAlwaysVisible> = z0;

        $z2 = specialinvoke r0.<android.widget.AbsListView: boolean isOwnerThread()>();

        if $z2 == 0 goto label3;

        specialinvoke r0.<android.widget.AbsListView: void setFastScrollerAlwaysVisibleUiThread(boolean)>(z0);

     label2:
        return;

     label3:
        $r1 = new android.widget.AbsListView$2;

        specialinvoke $r1.<android.widget.AbsListView$2: void <init>(android.widget.AbsListView,boolean)>(r0, z0);

        virtualinvoke r0.<android.widget.AbsListView: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    public void setFastScrollEnabled(boolean)
    {
        android.widget.AbsListView r0;
        boolean z0, $z1, $z2;
        android.widget.AbsListView$1 $r1;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.widget.AbsListView: boolean mFastScrollEnabled>;

        if $z1 == z0 goto label1;

        r0.<android.widget.AbsListView: boolean mFastScrollEnabled> = z0;

        $z2 = specialinvoke r0.<android.widget.AbsListView: boolean isOwnerThread()>();

        if $z2 == 0 goto label2;

        specialinvoke r0.<android.widget.AbsListView: void setFastScrollerEnabledUiThread(boolean)>(z0);

     label1:
        return;

     label2:
        $r1 = new android.widget.AbsListView$1;

        specialinvoke $r1.<android.widget.AbsListView$1: void <init>(android.widget.AbsListView,boolean)>(r0, z0);

        virtualinvoke r0.<android.widget.AbsListView: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    public void setFilterText(java.lang.String)
    {
        android.widget.AbsListView r0;
        java.lang.String r1;
        boolean $z0, $z1, $z2;
        android.widget.EditText $r2, $r3;
        int $i0;
        android.widget.ListAdapter $r4, $r7;
        android.widget.PopupWindow $r5;
        android.widget.AbsListView$AdapterDataSetObserver $r6;
        android.widget.Filterable $r8;
        android.widget.Filter $r9;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<android.widget.AbsListView: boolean mTextFilterEnabled>;

        if $z0 == 0 goto label2;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z1 != 0 goto label2;

        specialinvoke r0.<android.widget.AbsListView: void createTextFilter(boolean)>(0);

        $r2 = r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        virtualinvoke $r2.<android.widget.EditText: void setText(java.lang.CharSequence)>(r1);

        $r3 = r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        virtualinvoke $r3.<android.widget.EditText: void setSelection(int)>($i0);

        $r4 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $z2 = $r4 instanceof android.widget.Filterable;

        if $z2 == 0 goto label2;

        $r5 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        if $r5 != null goto label1;

        $r7 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $r8 = (android.widget.Filterable) $r7;

        $r9 = interfaceinvoke $r8.<android.widget.Filterable: android.widget.Filter getFilter()>();

        virtualinvoke $r9.<android.widget.Filter: void filter(java.lang.CharSequence)>(r1);

     label1:
        r0.<android.widget.AbsListView: boolean mFiltered> = 1;

        $r6 = r0.<android.widget.AbsListView: android.widget.AbsListView$AdapterDataSetObserver mDataSetObserver>;

        virtualinvoke $r6.<android.widget.AbsListView$AdapterDataSetObserver: void clearSavedState()>();

     label2:
        return;
    }

    protected boolean setFrame(int, int, int, int)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, i3, $i4;
        boolean z0, z1, $z2, $z3;
        android.widget.PopupWindow $r1, $r2;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        z0 = specialinvoke r0.<android.widget.AdapterView: boolean setFrame(int,int,int,int)>(i0, i1, i2, i3);

        if z0 == 0 goto label2;

        $i4 = virtualinvoke r0.<android.widget.AbsListView: int getWindowVisibility()>();

        if $i4 != 0 goto label3;

        z1 = 1;

     label1:
        $z2 = r0.<android.widget.AbsListView: boolean mFiltered>;

        if $z2 == 0 goto label2;

        if z1 == 0 goto label2;

        $r1 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        if $r1 == null goto label2;

        $r2 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        $z3 = virtualinvoke $r2.<android.widget.PopupWindow: boolean isShowing()>();

        if $z3 == 0 goto label2;

        specialinvoke r0.<android.widget.AbsListView: void positionPopup()>();

     label2:
        return z0;

     label3:
        z1 = 0;

        goto label1;
    }

    public void setFriction(float)
    {
        android.widget.AbsListView r0;
        float f0;
        android.widget.AbsListView$FlingRunnable $r1, $r2, $r4;
        android.widget.OverScroller $r3;

        r0 := @this: android.widget.AbsListView;

        f0 := @parameter0: float;

        $r1 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        if $r1 != null goto label1;

        $r4 = new android.widget.AbsListView$FlingRunnable;

        specialinvoke $r4.<android.widget.AbsListView$FlingRunnable: void <init>(android.widget.AbsListView)>(r0);

        r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable> = $r4;

     label1:
        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        $r3 = staticinvoke <android.widget.AbsListView$FlingRunnable: android.widget.OverScroller access$1300(android.widget.AbsListView$FlingRunnable)>($r2);

        virtualinvoke $r3.<android.widget.OverScroller: void setFriction(float)>(f0);

        return;
    }

    public void setItemChecked(int, boolean)
    {
        android.widget.AbsListView r0;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i10, $i11, $i13;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        long l1, $l8, $l9, $l12;
        android.util.SparseBooleanArray $r1, $r2, $r14, $r16, $r17, $r19;
        android.util.LongSparseArray $r3, $r9, $r12, $r13, $r18, $r23;
        android.view.ActionMode $r4, $r7, $r25, $r29;
        android.widget.ListAdapter $r5, $r8, $r10, $r11, $r20, $r21;
        android.widget.AbsListView$MultiChoiceModeWrapper $r6, $r24, $r26, $r27;
        java.lang.Integer $r15, $r22;
        java.lang.IllegalStateException $r28;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $i2 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i2 != 0 goto label02;

     label01:
        return;

     label02:
        if z0 == 0 goto label05;

        $i13 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i13 != 3 goto label05;

        $r25 = r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode>;

        if $r25 != null goto label05;

        $r24 = r0.<android.widget.AbsListView: android.widget.AbsListView$MultiChoiceModeWrapper mMultiChoiceModeCallback>;

        if $r24 == null goto label03;

        $r27 = r0.<android.widget.AbsListView: android.widget.AbsListView$MultiChoiceModeWrapper mMultiChoiceModeCallback>;

        $z9 = virtualinvoke $r27.<android.widget.AbsListView$MultiChoiceModeWrapper: boolean hasWrappedCallback()>();

        if $z9 != 0 goto label04;

     label03:
        $r28 = new java.lang.IllegalStateException;

        specialinvoke $r28.<java.lang.IllegalStateException: void <init>(java.lang.String)>("AbsListView: attempted to start selection mode for CHOICE_MODE_MULTIPLE_MODAL but no choice mode callback was supplied. Call setMultiChoiceModeListener to set a callback.");

        throw $r28;

     label04:
        $r26 = r0.<android.widget.AbsListView: android.widget.AbsListView$MultiChoiceModeWrapper mMultiChoiceModeCallback>;

        $r29 = virtualinvoke r0.<android.widget.AbsListView: android.view.ActionMode startActionMode(android.view.ActionMode$Callback)>($r26);

        r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode> = $r29;

     label05:
        $i3 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i3 == 2 goto label06;

        $i10 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i10 != 3 goto label12;

     label06:
        $r1 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        z1 = virtualinvoke $r1.<android.util.SparseBooleanArray: boolean get(int)>(i0);

        $r2 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        virtualinvoke $r2.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, z0);

        $r3 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        if $r3 == null goto label07;

        $r8 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $z5 = interfaceinvoke $r8.<android.widget.ListAdapter: boolean hasStableIds()>();

        if $z5 == 0 goto label07;

        if z0 == 0 goto label10;

        $r12 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        $r11 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $l9 = interfaceinvoke $r11.<android.widget.ListAdapter: long getItemId(int)>(i0);

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r12.<android.util.LongSparseArray: void put(long,java.lang.Object)>($l9, $r15);

     label07:
        if z1 == z0 goto label08;

        if z0 == 0 goto label11;

        $i7 = r0.<android.widget.AbsListView: int mCheckedItemCount>;

        $i6 = 1 + $i7;

        r0.<android.widget.AbsListView: int mCheckedItemCount> = $i6;

     label08:
        $r4 = r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode>;

        if $r4 == null goto label09;

        $r5 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        l1 = interfaceinvoke $r5.<android.widget.ListAdapter: long getItemId(int)>(i0);

        $r6 = r0.<android.widget.AbsListView: android.widget.AbsListView$MultiChoiceModeWrapper mMultiChoiceModeCallback>;

        $r7 = r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode>;

        virtualinvoke $r6.<android.widget.AbsListView$MultiChoiceModeWrapper: void onItemCheckedStateChanged(android.view.ActionMode,int,long,boolean)>($r7, i0, l1, z0);

     label09:
        $z3 = r0.<android.widget.AbsListView: boolean mInLayout>;

        if $z3 != 0 goto label01;

        $z4 = r0.<android.widget.AbsListView: boolean mBlockLayoutRequests>;

        if $z4 != 0 goto label01;

        r0.<android.widget.AbsListView: boolean mDataChanged> = 1;

        virtualinvoke r0.<android.widget.AbsListView: void rememberSyncState()>();

        virtualinvoke r0.<android.widget.AbsListView: void requestLayout()>();

        return;

     label10:
        $r9 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        $r10 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $l8 = interfaceinvoke $r10.<android.widget.ListAdapter: long getItemId(int)>(i0);

        virtualinvoke $r9.<android.util.LongSparseArray: void delete(long)>($l8);

        goto label07;

     label11:
        $i5 = r0.<android.widget.AbsListView: int mCheckedItemCount>;

        $i4 = -1 + $i5;

        r0.<android.widget.AbsListView: int mCheckedItemCount> = $i4;

        goto label08;

     label12:
        $r13 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        if $r13 == null goto label17;

        $r21 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $z8 = interfaceinvoke $r21.<android.widget.ListAdapter: boolean hasStableIds()>();

        if $z8 == 0 goto label17;

        z2 = 1;

     label13:
        if z0 != 0 goto label14;

        $z7 = virtualinvoke r0.<android.widget.AbsListView: boolean isItemChecked(int)>(i0);

        if $z7 == 0 goto label15;

     label14:
        $r14 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        virtualinvoke $r14.<android.util.SparseBooleanArray: void clear()>();

        if z2 == 0 goto label15;

        $r23 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        virtualinvoke $r23.<android.util.LongSparseArray: void clear()>();

     label15:
        if z0 == 0 goto label18;

        $r19 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        virtualinvoke $r19.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, 1);

        if z2 == 0 goto label16;

        $r18 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        $r20 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $l12 = interfaceinvoke $r20.<android.widget.ListAdapter: long getItemId(int)>(i0);

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r18.<android.util.LongSparseArray: void put(long,java.lang.Object)>($l12, $r22);

     label16:
        r0.<android.widget.AbsListView: int mCheckedItemCount> = 1;

        goto label09;

     label17:
        z2 = 0;

        goto label13;

     label18:
        $r17 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        $i11 = virtualinvoke $r17.<android.util.SparseBooleanArray: int size()>();

        if $i11 == 0 goto label19;

        $r16 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        $z6 = virtualinvoke $r16.<android.util.SparseBooleanArray: boolean valueAt(int)>(0);

        if $z6 != 0 goto label09;

     label19:
        r0.<android.widget.AbsListView: int mCheckedItemCount> = 0;

        goto label09;
    }

    public void setMultiChoiceModeListener(android.widget.AbsListView$MultiChoiceModeListener)
    {
        android.widget.AbsListView r0;
        android.widget.AbsListView$MultiChoiceModeListener r1;
        android.widget.AbsListView$MultiChoiceModeWrapper $r2, $r3, $r4;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.widget.AbsListView$MultiChoiceModeListener;

        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$MultiChoiceModeWrapper mMultiChoiceModeCallback>;

        if $r2 != null goto label1;

        $r4 = new android.widget.AbsListView$MultiChoiceModeWrapper;

        specialinvoke $r4.<android.widget.AbsListView$MultiChoiceModeWrapper: void <init>(android.widget.AbsListView)>(r0);

        r0.<android.widget.AbsListView: android.widget.AbsListView$MultiChoiceModeWrapper mMultiChoiceModeCallback> = $r4;

     label1:
        $r3 = r0.<android.widget.AbsListView: android.widget.AbsListView$MultiChoiceModeWrapper mMultiChoiceModeCallback>;

        virtualinvoke $r3.<android.widget.AbsListView$MultiChoiceModeWrapper: void setWrapped(android.widget.AbsListView$MultiChoiceModeListener)>(r1);

        return;
    }

    public void setOnScrollListener(android.widget.AbsListView$OnScrollListener)
    {
        android.widget.AbsListView r0;
        android.widget.AbsListView$OnScrollListener r1;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.widget.AbsListView$OnScrollListener;

        r0.<android.widget.AbsListView: android.widget.AbsListView$OnScrollListener mOnScrollListener> = r1;

        virtualinvoke r0.<android.widget.AbsListView: void invokeOnItemScrollListener()>();

        return;
    }

    public void setOverScrollEffectPadding(int, int)
    {
        android.widget.AbsListView r0;
        int i0, i1;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<android.widget.AbsListView: int mGlowPaddingLeft> = i0;

        r0.<android.widget.AbsListView: int mGlowPaddingRight> = i1;

        return;
    }

    public void setOverScrollMode(int)
    {
        android.widget.AbsListView r0;
        int i0;
        android.content.Context r1;
        android.widget.EdgeEffect $r2, $r3, $r4;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        if i0 == 2 goto label2;

        $r2 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        if $r2 != null goto label1;

        r1 = virtualinvoke r0.<android.widget.AbsListView: android.content.Context getContext()>();

        $r3 = new android.widget.EdgeEffect;

        specialinvoke $r3.<android.widget.EdgeEffect: void <init>(android.content.Context)>(r1);

        r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop> = $r3;

        $r4 = new android.widget.EdgeEffect;

        specialinvoke $r4.<android.widget.EdgeEffect: void <init>(android.content.Context)>(r1);

        r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom> = $r4;

     label1:
        specialinvoke r0.<android.widget.AdapterView: void setOverScrollMode(int)>(i0);

        return;

     label2:
        r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop> = null;

        r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom> = null;

        goto label1;
    }

    public void setRecyclerListener(android.widget.AbsListView$RecyclerListener)
    {
        android.widget.AbsListView r0;
        android.widget.AbsListView$RecyclerListener r1;
        android.widget.AbsListView$RecycleBin $r2;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.widget.AbsListView$RecyclerListener;

        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        staticinvoke <android.widget.AbsListView$RecycleBin: android.widget.AbsListView$RecyclerListener access$3802(android.widget.AbsListView$RecycleBin,android.widget.AbsListView$RecyclerListener)>($r2, r1);

        return;
    }

    public void setRemoteViewsAdapter(android.content.Intent)
    {
        android.widget.AbsListView r0;
        android.content.Intent r1, $r10;
        android.widget.RemoteViewsAdapter $r2, $r3, $r5, $r6, $r9;
        android.content.Context $r4;
        boolean $z0, $z1;
        android.content.Intent$FilterComparison $r7, $r8;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.content.Intent;

        $r2 = r0.<android.widget.AbsListView: android.widget.RemoteViewsAdapter mRemoteAdapter>;

        if $r2 == null goto label2;

        $r7 = new android.content.Intent$FilterComparison;

        specialinvoke $r7.<android.content.Intent$FilterComparison: void <init>(android.content.Intent)>(r1);

        $r8 = new android.content.Intent$FilterComparison;

        $r9 = r0.<android.widget.AbsListView: android.widget.RemoteViewsAdapter mRemoteAdapter>;

        $r10 = virtualinvoke $r9.<android.widget.RemoteViewsAdapter: android.content.Intent getRemoteViewsServiceIntent()>();

        specialinvoke $r8.<android.content.Intent$FilterComparison: void <init>(android.content.Intent)>($r10);

        $z1 = virtualinvoke $r7.<android.content.Intent$FilterComparison: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label2;

     label1:
        return;

     label2:
        r0.<android.widget.AbsListView: boolean mDeferNotifyDataSetChanged> = 0;

        $r3 = new android.widget.RemoteViewsAdapter;

        $r4 = virtualinvoke r0.<android.widget.AbsListView: android.content.Context getContext()>();

        specialinvoke $r3.<android.widget.RemoteViewsAdapter: void <init>(android.content.Context,android.content.Intent,android.widget.RemoteViewsAdapter$RemoteAdapterConnectionCallback)>($r4, r1, r0);

        r0.<android.widget.AbsListView: android.widget.RemoteViewsAdapter mRemoteAdapter> = $r3;

        $r5 = r0.<android.widget.AbsListView: android.widget.RemoteViewsAdapter mRemoteAdapter>;

        $z0 = virtualinvoke $r5.<android.widget.RemoteViewsAdapter: boolean isDataReady()>();

        if $z0 == 0 goto label1;

        $r6 = r0.<android.widget.AbsListView: android.widget.RemoteViewsAdapter mRemoteAdapter>;

        virtualinvoke r0.<android.widget.AbsListView: void setAdapter(android.widget.ListAdapter)>($r6);

        return;
    }

    public void setRemoteViewsOnClickHandler(android.widget.RemoteViews$OnClickHandler)
    {
        android.widget.AbsListView r0;
        android.widget.RemoteViews$OnClickHandler r1;
        android.widget.RemoteViewsAdapter $r2, $r3;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.widget.RemoteViews$OnClickHandler;

        $r2 = r0.<android.widget.AbsListView: android.widget.RemoteViewsAdapter mRemoteAdapter>;

        if $r2 == null goto label1;

        $r3 = r0.<android.widget.AbsListView: android.widget.RemoteViewsAdapter mRemoteAdapter>;

        virtualinvoke $r3.<android.widget.RemoteViewsAdapter: void setRemoteViewsOnClickHandler(android.widget.RemoteViews$OnClickHandler)>(r1);

     label1:
        return;
    }

    public void setScrollBarStyle(int)
    {
        android.widget.AbsListView r0;
        int i0;
        android.widget.FastScroller $r1, $r2;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        specialinvoke r0.<android.widget.AdapterView: void setScrollBarStyle(int)>(i0);

        $r1 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        virtualinvoke $r2.<android.widget.FastScroller: void setScrollBarStyle(int)>(i0);

     label1:
        return;
    }

    public void setScrollIndicators(android.view.View, android.view.View)
    {
        android.widget.AbsListView r0;
        android.view.View r1, r2;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        r0.<android.widget.AbsListView: android.view.View mScrollUp> = r1;

        r0.<android.widget.AbsListView: android.view.View mScrollDown> = r2;

        return;
    }

    public void setScrollingCacheEnabled(boolean)
    {
        android.widget.AbsListView r0;
        boolean z0, $z1;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.widget.AbsListView: boolean mScrollingCacheEnabled>;

        if $z1 == 0 goto label1;

        if z0 != 0 goto label1;

        specialinvoke r0.<android.widget.AbsListView: void clearScrollingCache()>();

     label1:
        r0.<android.widget.AbsListView: boolean mScrollingCacheEnabled> = z0;

        return;
    }

    abstract void setSelectionInt(int);

    public void setSelector(int)
    {
        android.widget.AbsListView r0;
        int i0;
        android.content.res.Resources $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.AbsListView: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(i0);

        virtualinvoke r0.<android.widget.AbsListView: void setSelector(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void setSelector(android.graphics.drawable.Drawable)
    {
        android.widget.AbsListView r0;
        android.graphics.drawable.Drawable r1, $r3, $r5, $r6;
        android.graphics.Rect r2, $r4;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r3 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        if $r3 == null goto label1;

        $r5 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

        $r6 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        virtualinvoke r0.<android.widget.AbsListView: void unscheduleDrawable(android.graphics.drawable.Drawable)>($r6);

     label1:
        r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector> = r1;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r2 = $r4;

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>(r2);

        $i0 = r2.<android.graphics.Rect: int left>;

        r0.<android.widget.AbsListView: int mSelectionLeftPadding> = $i0;

        $i1 = r2.<android.graphics.Rect: int top>;

        r0.<android.widget.AbsListView: int mSelectionTopPadding> = $i1;

        $i2 = r2.<android.graphics.Rect: int right>;

        r0.<android.widget.AbsListView: int mSelectionRightPadding> = $i2;

        $i3 = r2.<android.graphics.Rect: int bottom>;

        r0.<android.widget.AbsListView: int mSelectionBottomPadding> = $i3;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        virtualinvoke r0.<android.widget.AbsListView: void updateSelectorState()>();

        return;
    }

    public void setSmoothScrollbarEnabled(boolean)
    {
        android.widget.AbsListView r0;
        boolean z0;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        r0.<android.widget.AbsListView: boolean mSmoothScrollbarEnabled> = z0;

        return;
    }

    public void setStackFromBottom(boolean)
    {
        android.widget.AbsListView r0;
        boolean z0, $z1;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.widget.AbsListView: boolean mStackFromBottom>;

        if $z1 == z0 goto label1;

        r0.<android.widget.AbsListView: boolean mStackFromBottom> = z0;

        virtualinvoke r0.<android.widget.AbsListView: void requestLayoutIfNecessary()>();

     label1:
        return;
    }

    public void setTextFilterEnabled(boolean)
    {
        android.widget.AbsListView r0;
        boolean z0;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        r0.<android.widget.AbsListView: boolean mTextFilterEnabled> = z0;

        return;
    }

    public void setTranscriptMode(int)
    {
        android.widget.AbsListView r0;
        int i0;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        r0.<android.widget.AbsListView: int mTranscriptMode> = i0;

        return;
    }

    public void setVelocityScale(float)
    {
        android.widget.AbsListView r0;
        float f0;

        r0 := @this: android.widget.AbsListView;

        f0 := @parameter0: float;

        r0.<android.widget.AbsListView: float mVelocityScale> = f0;

        return;
    }

    public void setVerticalScrollbarPosition(int)
    {
        android.widget.AbsListView r0;
        int i0;
        android.widget.FastScroller $r1, $r2;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        specialinvoke r0.<android.widget.AdapterView: void setVerticalScrollbarPosition(int)>(i0);

        $r1 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroller>;

        virtualinvoke $r2.<android.widget.FastScroller: void setScrollbarPosition(int)>(i0);

     label1:
        return;
    }

    void setVisibleRangeHint(int, int)
    {
        android.widget.AbsListView r0;
        int i0, i1;
        android.widget.RemoteViewsAdapter $r1, $r2;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.widget.AbsListView: android.widget.RemoteViewsAdapter mRemoteAdapter>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.AbsListView: android.widget.RemoteViewsAdapter mRemoteAdapter>;

        virtualinvoke $r2.<android.widget.RemoteViewsAdapter: void setVisibleRangeHint(int,int)>(i0, i1);

     label1:
        return;
    }

    boolean shouldShowSelector()
    {
        android.widget.AbsListView r0;
        boolean $z0, $z1, $z2;

        r0 := @this: android.widget.AbsListView;

        $z0 = virtualinvoke r0.<android.widget.AbsListView: boolean isInTouchMode()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<android.widget.AbsListView: boolean touchModeDrawsInPressedState()>();

        if $z1 == 0 goto label2;

        $z2 = virtualinvoke r0.<android.widget.AbsListView: boolean isPressed()>();

        if $z2 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public boolean showContextMenu(float, float, int)
    {
        android.widget.AbsListView r0;
        float f0, f1;
        int i0, i1, $i3, $i4, $i5, $i6;
        long l2;
        android.view.View r1;
        boolean $z0, $z1;
        android.widget.ListAdapter $r2;
        android.view.ContextMenu$ContextMenuInfo $r3;

        r0 := @this: android.widget.AbsListView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        i0 := @parameter2: int;

        $i4 = (int) f0;

        $i3 = (int) f1;

        i1 = virtualinvoke r0.<android.widget.AbsListView: int pointToPosition(int,int)>($i4, $i3);

        if i1 == -1 goto label1;

        $r2 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        l2 = interfaceinvoke $r2.<android.widget.ListAdapter: long getItemId(int)>(i1);

        $i5 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i6 = i1 - $i5;

        r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i6);

        if r1 == null goto label1;

        $r3 = virtualinvoke r0.<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo createContextMenuInfo(android.view.View,int,long)>(r1, i1, l2);

        r0.<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo mContextMenuInfo> = $r3;

        $z1 = specialinvoke r0.<android.widget.AdapterView: boolean showContextMenuForChild(android.view.View)>(r0);

        return $z1;

     label1:
        $z0 = specialinvoke r0.<android.widget.AdapterView: boolean showContextMenu(float,float,int)>(f0, f1, i0);

        return $z0;
    }

    public boolean showContextMenuForChild(android.view.View)
    {
        android.widget.AbsListView r0;
        android.view.View r1, $r4;
        int i0, $i2, $i3;
        long l1;
        android.widget.AdapterView$OnItemLongClickListener r2, $r6;
        boolean z0;
        android.widget.ListAdapter $r3;
        android.view.ContextMenu$ContextMenuInfo $r5;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.View;

        i0 = virtualinvoke r0.<android.widget.AbsListView: int getPositionForView(android.view.View)>(r1);

        if i0 < 0 goto label3;

        $r3 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        l1 = interfaceinvoke $r3.<android.widget.ListAdapter: long getItemId(int)>(i0);

        r2 = r0.<android.widget.AbsListView: android.widget.AdapterView$OnItemLongClickListener mOnItemLongClickListener>;

        z0 = 0;

        if r2 == null goto label1;

        $r6 = r0.<android.widget.AbsListView: android.widget.AdapterView$OnItemLongClickListener mOnItemLongClickListener>;

        z0 = interfaceinvoke $r6.<android.widget.AdapterView$OnItemLongClickListener: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)>(r0, r1, i0, l1);

     label1:
        if z0 != 0 goto label2;

        $i2 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i3 = i0 - $i2;

        $r4 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i3);

        $r5 = virtualinvoke r0.<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo createContextMenuInfo(android.view.View,int,long)>($r4, i0, l1);

        r0.<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo mContextMenuInfo> = $r5;

        z0 = specialinvoke r0.<android.widget.AdapterView: boolean showContextMenuForChild(android.view.View)>(r1);

     label2:
        return z0;

     label3:
        return 0;
    }

    public void smoothScrollBy(int, int)
    {
        android.widget.AbsListView r0;
        int i0, i1;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.widget.AbsListView: void smoothScrollBy(int,int,boolean)>(i0, i1, 0);

        return;
    }

    void smoothScrollBy(int, int, boolean)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        boolean z0;
        android.widget.AbsListView$FlingRunnable $r1, $r2, $r5, $r8;
        android.widget.AbsListView$PositionScroller $r3, $r4;
        android.view.View $r6, $r7;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r1 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        if $r1 != null goto label1;

        $r8 = new android.widget.AbsListView$FlingRunnable;

        specialinvoke $r8.<android.widget.AbsListView$FlingRunnable: void <init>(android.widget.AbsListView)>(r0);

        r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable> = $r8;

     label1:
        i2 = r0.<android.widget.AbsListView: int mFirstPosition>;

        i3 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        i4 = i2 + i3;

        i5 = virtualinvoke r0.<android.widget.AbsListView: int getPaddingTop()>();

        $i7 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $i8 = virtualinvoke r0.<android.widget.AbsListView: int getPaddingBottom()>();

        i6 = $i7 - $i8;

        if i0 == 0 goto label3;

        $i9 = r0.<android.widget.AbsListView: int mItemCount>;

        if $i9 == 0 goto label3;

        if i3 == 0 goto label3;

        if i2 != 0 goto label2;

        $r7 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(0);

        $i13 = virtualinvoke $r7.<android.view.View: int getTop()>();

        if $i13 != i5 goto label2;

        if i0 < 0 goto label3;

     label2:
        $i10 = r0.<android.widget.AbsListView: int mItemCount>;

        if i4 != $i10 goto label5;

        $i11 = i3 - 1;

        $r6 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i11);

        $i12 = virtualinvoke $r6.<android.view.View: int getBottom()>();

        if $i12 != i6 goto label5;

        if i0 <= 0 goto label5;

     label3:
        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        virtualinvoke $r2.<android.widget.AbsListView$FlingRunnable: void endFling()>();

        $r3 = r0.<android.widget.AbsListView: android.widget.AbsListView$PositionScroller mPositionScroller>;

        if $r3 == null goto label4;

        $r4 = r0.<android.widget.AbsListView: android.widget.AbsListView$PositionScroller mPositionScroller>;

        virtualinvoke $r4.<android.widget.AbsListView$PositionScroller: void stop()>();

     label4:
        return;

     label5:
        virtualinvoke r0.<android.widget.AbsListView: void reportScrollStateChange(int)>(2);

        $r5 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        virtualinvoke $r5.<android.widget.AbsListView$FlingRunnable: void startScroll(int,int,boolean)>(i0, i1, z0);

        return;
    }

    void smoothScrollByOffset(int)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        android.view.View r1;
        android.graphics.Rect r2, $r3;
        float f0, $f1, $f2;
        boolean $z0;
        byte $b14, $b15;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 = -1;

        if i0 >= 0 goto label4;

        i1 = virtualinvoke r0.<android.widget.AbsListView: int getFirstVisiblePosition()>();

     label1:
        if i1 <= -1 goto label3;

        $i3 = virtualinvoke r0.<android.widget.AbsListView: int getFirstVisiblePosition()>();

        $i4 = i1 - $i3;

        r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i4);

        if r1 == null goto label3;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r2 = $r3;

        $z0 = virtualinvoke r1.<android.view.View: boolean getGlobalVisibleRect(android.graphics.Rect)>(r2);

        if $z0 == 0 goto label2;

        $i8 = virtualinvoke r1.<android.view.View: int getWidth()>();

        $i11 = virtualinvoke r1.<android.view.View: int getHeight()>();

        i2 = $i8 * $i11;

        $i10 = virtualinvoke r2.<android.graphics.Rect: int width()>();

        $i13 = virtualinvoke r2.<android.graphics.Rect: int height()>();

        $i12 = $i10 * $i13;

        $f1 = (float) $i12;

        $f2 = (float) i2;

        f0 = $f1 / $f2;

        if i0 >= 0 goto label5;

        $b14 = f0 cmpg 0.75F;

        if $b14 >= 0 goto label5;

        i1 = i1 + 1;

     label2:
        $i5 = virtualinvoke r0.<android.widget.AbsListView: int getCount()>();

        $i6 = i1 + i0;

        $i7 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i6);

        $i9 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i7);

        virtualinvoke r0.<android.widget.AbsListView: void smoothScrollToPosition(int)>($i9);

     label3:
        return;

     label4:
        if i0 <= 0 goto label1;

        i1 = virtualinvoke r0.<android.widget.AbsListView: int getLastVisiblePosition()>();

        goto label1;

     label5:
        if i0 <= 0 goto label2;

        $b15 = f0 cmpg 0.75F;

        if $b15 >= 0 goto label2;

        i1 = i1 + -1;

        goto label2;
    }

    public void smoothScrollToPosition(int)
    {
        android.widget.AbsListView r0;
        int i0;
        android.widget.AbsListView$PositionScroller $r1, $r2, $r3;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.AbsListView: android.widget.AbsListView$PositionScroller mPositionScroller>;

        if $r1 != null goto label1;

        $r3 = new android.widget.AbsListView$PositionScroller;

        specialinvoke $r3.<android.widget.AbsListView$PositionScroller: void <init>(android.widget.AbsListView)>(r0);

        r0.<android.widget.AbsListView: android.widget.AbsListView$PositionScroller mPositionScroller> = $r3;

     label1:
        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$PositionScroller mPositionScroller>;

        virtualinvoke $r2.<android.widget.AbsListView$PositionScroller: void start(int)>(i0);

        return;
    }

    public void smoothScrollToPosition(int, int)
    {
        android.widget.AbsListView r0;
        int i0, i1;
        android.widget.AbsListView$PositionScroller $r1, $r2, $r3;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.widget.AbsListView: android.widget.AbsListView$PositionScroller mPositionScroller>;

        if $r1 != null goto label1;

        $r3 = new android.widget.AbsListView$PositionScroller;

        specialinvoke $r3.<android.widget.AbsListView$PositionScroller: void <init>(android.widget.AbsListView)>(r0);

        r0.<android.widget.AbsListView: android.widget.AbsListView$PositionScroller mPositionScroller> = $r3;

     label1:
        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$PositionScroller mPositionScroller>;

        virtualinvoke $r2.<android.widget.AbsListView$PositionScroller: void start(int,int)>(i0, i1);

        return;
    }

    public void smoothScrollToPositionFromTop(int, int)
    {
        android.widget.AbsListView r0;
        int i0, i1;
        android.widget.AbsListView$PositionScroller $r1, $r2, $r3;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.widget.AbsListView: android.widget.AbsListView$PositionScroller mPositionScroller>;

        if $r1 != null goto label1;

        $r3 = new android.widget.AbsListView$PositionScroller;

        specialinvoke $r3.<android.widget.AbsListView$PositionScroller: void <init>(android.widget.AbsListView)>(r0);

        r0.<android.widget.AbsListView: android.widget.AbsListView$PositionScroller mPositionScroller> = $r3;

     label1:
        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$PositionScroller mPositionScroller>;

        virtualinvoke $r2.<android.widget.AbsListView$PositionScroller: void startWithOffset(int,int)>(i0, i1);

        return;
    }

    public void smoothScrollToPositionFromTop(int, int, int)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2;
        android.widget.AbsListView$PositionScroller $r1, $r2, $r3;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<android.widget.AbsListView: android.widget.AbsListView$PositionScroller mPositionScroller>;

        if $r1 != null goto label1;

        $r3 = new android.widget.AbsListView$PositionScroller;

        specialinvoke $r3.<android.widget.AbsListView$PositionScroller: void <init>(android.widget.AbsListView)>(r0);

        r0.<android.widget.AbsListView: android.widget.AbsListView$PositionScroller mPositionScroller> = $r3;

     label1:
        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$PositionScroller mPositionScroller>;

        virtualinvoke $r2.<android.widget.AbsListView$PositionScroller: void startWithOffset(int,int,int)>(i0, i1, i2);

        return;
    }

    boolean touchModeDrawsInPressedState()
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mTouchMode>;

        tableswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label2;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        return 1;
    }

    boolean trackMotionScroll(int, int)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82;
        android.graphics.Rect r1, $r6;
        boolean z0, z1, z2, z3, $z4, $z5, $z6;
        android.view.View r2, r3, $r4, $r5, $r7, $r8;
        android.widget.AbsListView$RecycleBin $r9, $r10, $r11;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if i2 != 0 goto label01;

        return 1;

     label01:
        $r4 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(0);

        i3 = virtualinvoke $r4.<android.view.View: int getTop()>();

        $i30 = i2 - 1;

        $r5 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i30);

        i4 = virtualinvoke $r5.<android.view.View: int getBottom()>();

        r1 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i33 = r0.<android.widget.AbsListView: int mGroupFlags>;

        i5 = 34 & $i33;

        i6 = 0;

        i7 = 0;

        if i5 != 34 goto label02;

        i7 = r1.<android.graphics.Rect: int top>;

        i6 = r1.<android.graphics.Rect: int bottom>;

     label02:
        i8 = i7 - i3;

        $i34 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $i31 = $i34 - i6;

        i9 = i4 - $i31;

        $i32 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $i38 = r0.<android.widget.AbsListView: int mPaddingBottom>;

        $i36 = $i32 - $i38;

        $i37 = r0.<android.widget.AbsListView: int mPaddingTop>;

        i10 = $i36 - $i37;

        if i0 >= 0 goto label10;

        $i82 = i10 - 1;

        $i81 = neg $i82;

        i11 = staticinvoke <java.lang.Math: int max(int,int)>($i81, i0);

     label03:
        if i1 >= 0 goto label11;

        $i73 = i10 - 1;

        $i74 = neg $i73;

        i12 = staticinvoke <java.lang.Math: int max(int,int)>($i74, i1);

     label04:
        i13 = r0.<android.widget.AbsListView: int mFirstPosition>;

        if i13 != 0 goto label12;

        $i75 = r1.<android.graphics.Rect: int top>;

        $i76 = i3 - $i75;

        r0.<android.widget.AbsListView: int mFirstPositionDistanceGuess> = $i76;

     label05:
        $i42 = i13 + i2;

        $i43 = r0.<android.widget.AbsListView: int mItemCount>;

        if $i42 != $i43 goto label13;

        $i77 = r1.<android.graphics.Rect: int bottom>;

        $i78 = i4 + $i77;

        r0.<android.widget.AbsListView: int mLastPositionDistanceGuess> = $i78;

     label06:
        if i13 != 0 goto label14;

        $i80 = r1.<android.graphics.Rect: int top>;

        if i3 < $i80 goto label14;

        if i12 < 0 goto label14;

        z1 = 1;

     label07:
        $i45 = i13 + i2;

        $i46 = r0.<android.widget.AbsListView: int mItemCount>;

        if $i45 != $i46 goto label15;

        $i69 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $i70 = r1.<android.graphics.Rect: int bottom>;

        $i79 = $i69 - $i70;

        if i4 > $i79 goto label15;

        if i12 > 0 goto label15;

        z0 = 1;

     label08:
        if z1 != 0 goto label09;

        if z0 == 0 goto label17;

     label09:
        if i12 == 0 goto label16;

        return 1;

     label10:
        $i35 = i10 - 1;

        i11 = staticinvoke <java.lang.Math: int min(int,int)>($i35, i0);

        goto label03;

     label11:
        $i40 = i10 - 1;

        i12 = staticinvoke <java.lang.Math: int min(int,int)>($i40, i1);

        goto label04;

     label12:
        $i39 = r0.<android.widget.AbsListView: int mFirstPositionDistanceGuess>;

        $i44 = i12 + $i39;

        r0.<android.widget.AbsListView: int mFirstPositionDistanceGuess> = $i44;

        goto label05;

     label13:
        $i41 = r0.<android.widget.AbsListView: int mLastPositionDistanceGuess>;

        $i47 = i12 + $i41;

        r0.<android.widget.AbsListView: int mLastPositionDistanceGuess> = $i47;

        goto label06;

     label14:
        z1 = 0;

        goto label07;

     label15:
        z0 = 0;

        goto label08;

     label16:
        return 0;

     label17:
        if i12 >= 0 goto label29;

        z3 = 1;

     label18:
        z2 = virtualinvoke r0.<android.widget.AbsListView: boolean isInTouchMode()>();

        if z2 == 0 goto label19;

        virtualinvoke r0.<android.widget.AbsListView: void hideSelector()>();

     label19:
        i15 = virtualinvoke r0.<android.widget.AbsListView: int getHeaderViewsCount()>();

        $i52 = r0.<android.widget.AbsListView: int mItemCount>;

        $i53 = virtualinvoke r0.<android.widget.AbsListView: int getFooterViewsCount()>();

        i14 = $i52 - $i53;

        i17 = 0;

        i16 = 0;

        if z3 == 0 goto label33;

        i23 = neg i12;

        $i65 = r0.<android.widget.AbsListView: int mGroupFlags>;

        $i72 = 34 & $i65;

        if $i72 != 34 goto label20;

        $i71 = r1.<android.graphics.Rect: int top>;

        i23 = i23 + $i71;

     label20:
        i26 = 0;

     label21:
        i27 = i26;

        i17 = 0;

        if i27 >= i2 goto label22;

        r3 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i26);

        i25 = virtualinvoke r3.<android.view.View: int getBottom()>();

        i28 = i23;

        i17 = 0;

        if i25 < i28 goto label30;

     label22:
        $i50 = r0.<android.widget.AbsListView: int mMotionViewOriginalTop>;

        $i51 = i11 + $i50;

        r0.<android.widget.AbsListView: int mMotionViewNewTop> = $i51;

        r0.<android.widget.AbsListView: boolean mBlockLayoutRequests> = 1;

        if i16 <= 0 goto label23;

        virtualinvoke r0.<android.widget.AbsListView: void detachViewsFromParent(int,int)>(i17, i16);

        $r10 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        virtualinvoke $r10.<android.widget.AbsListView$RecycleBin: void removeSkippedScrap()>();

     label23:
        $z4 = virtualinvoke r0.<android.widget.AbsListView: boolean awakenScrollBars()>();

        if $z4 != 0 goto label24;

        virtualinvoke r0.<android.widget.AbsListView: void invalidate()>();

     label24:
        virtualinvoke r0.<android.widget.AbsListView: void offsetChildrenTopAndBottom(int)>(i12);

        if z3 == 0 goto label25;

        $i61 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i67 = i16 + $i61;

        r0.<android.widget.AbsListView: int mFirstPosition> = $i67;

     label25:
        i22 = staticinvoke <java.lang.Math: int abs(int)>(i12);

        if i8 < i22 goto label26;

        if i9 >= i22 goto label27;

     label26:
        virtualinvoke r0.<android.widget.AbsListView: void fillGap(boolean)>(z3);

     label27:
        if z2 != 0 goto label38;

        $i62 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        if $i62 == -1 goto label38;

        $i63 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        $i64 = r0.<android.widget.AbsListView: int mFirstPosition>;

        i24 = $i63 - $i64;

        if i24 < 0 goto label28;

        $i60 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if i24 >= $i60 goto label28;

        $i59 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        $r7 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i24);

        virtualinvoke r0.<android.widget.AbsListView: void positionSelector(int,android.view.View)>($i59, $r7);

     label28:
        r0.<android.widget.AbsListView: boolean mBlockLayoutRequests> = 0;

        virtualinvoke r0.<android.widget.AbsListView: void invokeOnItemScrollListener()>();

        return 0;

     label29:
        z3 = 0;

        goto label18;

     label30:
        i16 = i16 + 1;

        i29 = i13 + i26;

        if i29 < i15 goto label32;

        if i29 >= i14 goto label32;

        $z6 = virtualinvoke r3.<android.view.View: boolean isAccessibilityFocused()>();

        if $z6 == 0 goto label31;

        virtualinvoke r3.<android.view.View: void clearAccessibilityFocus()>();

     label31:
        $r11 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        virtualinvoke $r11.<android.widget.AbsListView$RecycleBin: void addScrapView(android.view.View,int)>(r3, i29);

     label32:
        i26 = i26 + 1;

        goto label21;

     label33:
        $i54 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        i19 = $i54 - i12;

        $i48 = r0.<android.widget.AbsListView: int mGroupFlags>;

        $i49 = 34 & $i48;

        if $i49 != 34 goto label34;

        $i66 = r1.<android.graphics.Rect: int bottom>;

        i19 = i19 - $i66;

     label34:
        i18 = i2 - 1;

     label35:
        if i18 < 0 goto label22;

        r2 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i18);

        $i68 = virtualinvoke r2.<android.view.View: int getTop()>();

        if $i68 <= i19 goto label22;

        i17 = i18;

        i16 = i16 + 1;

        i20 = i13 + i18;

        if i20 < i15 goto label37;

        if i20 >= i14 goto label37;

        $z5 = virtualinvoke r2.<android.view.View: boolean isAccessibilityFocused()>();

        if $z5 == 0 goto label36;

        virtualinvoke r2.<android.view.View: void clearAccessibilityFocus()>();

     label36:
        $r9 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        virtualinvoke $r9.<android.widget.AbsListView$RecycleBin: void addScrapView(android.view.View,int)>(r2, i20);

     label37:
        i18 = i18 + -1;

        goto label35;

     label38:
        $i58 = r0.<android.widget.AbsListView: int mSelectorPosition>;

        if $i58 == -1 goto label39;

        $i56 = r0.<android.widget.AbsListView: int mSelectorPosition>;

        $i55 = r0.<android.widget.AbsListView: int mFirstPosition>;

        i21 = $i56 - $i55;

        if i21 < 0 goto label28;

        $i57 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if i21 >= $i57 goto label28;

        $r8 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i21);

        virtualinvoke r0.<android.widget.AbsListView: void positionSelector(int,android.view.View)>(-1, $r8);

        goto label28;

     label39:
        $r6 = r0.<android.widget.AbsListView: android.graphics.Rect mSelectorRect>;

        virtualinvoke $r6.<android.graphics.Rect: void setEmpty()>();

        goto label28;
    }

    void updateScrollIndicators()
    {
        android.widget.AbsListView r0;
        int i0, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        boolean z0, z1;
        android.view.View r1, r2, $r3, $r4, $r5, $r7;
        byte b1, b2;
        android.graphics.Rect $r6, $r8;

        r0 := @this: android.widget.AbsListView;

        $r3 = r0.<android.widget.AbsListView: android.view.View mScrollUp>;

        if $r3 == null goto label04;

        $i10 = r0.<android.widget.AbsListView: int mFirstPosition>;

        if $i10 <= 0 goto label09;

        z1 = 1;

     label01:
        if z1 != 0 goto label02;

        $i12 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if $i12 <= 0 goto label02;

        $r7 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(0);

        $i13 = virtualinvoke $r7.<android.view.View: int getTop()>();

        $r8 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i14 = $r8.<android.graphics.Rect: int top>;

        if $i13 >= $i14 goto label10;

        z1 = 1;

     label02:
        r2 = r0.<android.widget.AbsListView: android.view.View mScrollUp>;

        if z1 == 0 goto label11;

        b2 = 0;

     label03:
        virtualinvoke r2.<android.view.View: void setVisibility(int)>(b2);

     label04:
        $r4 = r0.<android.widget.AbsListView: android.view.View mScrollDown>;

        if $r4 == null goto label08;

        i0 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        $i3 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i5 = i0 + $i3;

        $i4 = r0.<android.widget.AbsListView: int mItemCount>;

        if $i5 >= $i4 goto label12;

        z0 = 1;

     label05:
        if z0 != 0 goto label06;

        if i0 <= 0 goto label06;

        $i6 = i0 - 1;

        $r5 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i6);

        $i7 = virtualinvoke $r5.<android.view.View: int getBottom()>();

        $i8 = r0.<android.widget.AbsListView: int mBottom>;

        $r6 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i9 = $r6.<android.graphics.Rect: int bottom>;

        $i11 = $i8 - $i9;

        if $i7 <= $i11 goto label13;

        z0 = 1;

     label06:
        r1 = r0.<android.widget.AbsListView: android.view.View mScrollDown>;

        b1 = 0;

        if z0 == 0 goto label14;

     label07:
        virtualinvoke r1.<android.view.View: void setVisibility(int)>(b1);

     label08:
        return;

     label09:
        z1 = 0;

        goto label01;

     label10:
        z1 = 0;

        goto label02;

     label11:
        b2 = 4;

        goto label03;

     label12:
        z0 = 0;

        goto label05;

     label13:
        z0 = 0;

        goto label06;

     label14:
        b1 = 4;

        goto label07;
    }

    void updateSelectorState()
    {
        android.widget.AbsListView r0;
        android.graphics.drawable.Drawable $r1, $r3, $r4;
        boolean $z0;
        int[] $r2, $r5;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke r0.<android.widget.AbsListView: boolean shouldShowSelector()>();

        if $z0 == 0 goto label2;

        $r4 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        $r5 = virtualinvoke r0.<android.widget.AbsListView: int[] getDrawableState()>();

        virtualinvoke $r4.<android.graphics.drawable.Drawable: boolean setState(int[])>($r5);

     label1:
        return;

     label2:
        $r3 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        $r2 = <android.util.StateSet: int[] NOTHING>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean setState(int[])>($r2);

        return;
    }

    public boolean verifyDrawable(android.graphics.drawable.Drawable)
    {
        android.widget.AbsListView r0;
        android.graphics.drawable.Drawable r1, $r2;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        if $r2 == r1 goto label1;

        $z0 = specialinvoke r0.<android.widget.AdapterView: boolean verifyDrawable(android.graphics.drawable.Drawable)>(r1);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
}
