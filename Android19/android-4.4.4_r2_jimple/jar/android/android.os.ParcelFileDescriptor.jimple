public class android.os.ParcelFileDescriptor extends java.lang.Object implements android.os.Parcelable, java.io.Closeable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private static final int MAX_STATUS;
    public static final int MODE_APPEND;
    public static final int MODE_CREATE;
    public static final int MODE_READ_ONLY;
    public static final int MODE_READ_WRITE;
    public static final int MODE_TRUNCATE;
    public static final int MODE_WORLD_READABLE;
    public static final int MODE_WORLD_WRITEABLE;
    public static final int MODE_WRITE_ONLY;
    private static final java.lang.String TAG;
    private volatile boolean mClosed;
    private java.io.FileDescriptor mCommFd;
    private final java.io.FileDescriptor mFd;
    private final dalvik.system.CloseGuard mGuard;
    private android.os.ParcelFileDescriptor$Status mStatus;
    private byte[] mStatusBuf;
    private final android.os.ParcelFileDescriptor mWrapped;

    static void <clinit>()
    {
        android.os.ParcelFileDescriptor$1 $r0;

        <android.os.ParcelFileDescriptor: java.lang.String TAG> = "ParcelFileDescriptor";

        <android.os.ParcelFileDescriptor: int MODE_WRITE_ONLY> = 536870912;

        <android.os.ParcelFileDescriptor: int MODE_WORLD_WRITEABLE> = 2;

        <android.os.ParcelFileDescriptor: int MODE_WORLD_READABLE> = 1;

        <android.os.ParcelFileDescriptor: int MODE_TRUNCATE> = 67108864;

        <android.os.ParcelFileDescriptor: int MODE_READ_WRITE> = 805306368;

        <android.os.ParcelFileDescriptor: int MODE_READ_ONLY> = 268435456;

        <android.os.ParcelFileDescriptor: int MODE_CREATE> = 134217728;

        <android.os.ParcelFileDescriptor: int MODE_APPEND> = 33554432;

        <android.os.ParcelFileDescriptor: int MAX_STATUS> = 1024;

        $r0 = new android.os.ParcelFileDescriptor$1;

        specialinvoke $r0.<android.os.ParcelFileDescriptor$1: void <init>()>();

        <android.os.ParcelFileDescriptor: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(android.os.ParcelFileDescriptor)
    {
        android.os.ParcelFileDescriptor r0, r1;
        dalvik.system.CloseGuard $r2;

        r0 := @this: android.os.ParcelFileDescriptor;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <dalvik.system.CloseGuard: dalvik.system.CloseGuard get()>();

        r0.<android.os.ParcelFileDescriptor: dalvik.system.CloseGuard mGuard> = $r2;

        r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped> = r1;

        r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mFd> = null;

        r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mCommFd> = null;

        r0.<android.os.ParcelFileDescriptor: boolean mClosed> = 1;

        return;
    }

    public void <init>(java.io.FileDescriptor)
    {
        android.os.ParcelFileDescriptor r0;
        java.io.FileDescriptor r1;

        r0 := @this: android.os.ParcelFileDescriptor;

        r1 := @parameter0: java.io.FileDescriptor;

        specialinvoke r0.<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor,java.io.FileDescriptor)>(r1, null);

        return;
    }

    public void <init>(java.io.FileDescriptor, java.io.FileDescriptor)
    {
        android.os.ParcelFileDescriptor r0;
        java.io.FileDescriptor r1, r2;
        dalvik.system.CloseGuard $r3, $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: android.os.ParcelFileDescriptor;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.FileDescriptor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <dalvik.system.CloseGuard: dalvik.system.CloseGuard get()>();

        r0.<android.os.ParcelFileDescriptor: dalvik.system.CloseGuard mGuard> = $r3;

        if r1 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("FileDescriptor must not be null");

        throw $r5;

     label1:
        r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped> = null;

        r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mFd> = r1;

        r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mCommFd> = r2;

        $r4 = r0.<android.os.ParcelFileDescriptor: dalvik.system.CloseGuard mGuard>;

        virtualinvoke $r4.<dalvik.system.CloseGuard: void open(java.lang.String)>("close");

        return;
    }

    static android.os.ParcelFileDescriptor$Status access$000(java.io.FileDescriptor, byte[])
    {
        java.io.FileDescriptor r0;
        byte[] r1;
        android.os.ParcelFileDescriptor$Status $r2;

        r0 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: byte[];

        $r2 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor$Status readCommStatus(java.io.FileDescriptor,byte[])>(r0, r1);

        return $r2;
    }

    public static android.os.ParcelFileDescriptor adoptFd(int)
    {
        int i0;
        java.io.FileDescriptor r0, $r1;
        android.os.ParcelFileDescriptor $r2;

        i0 := @parameter0: int;

        $r1 = new java.io.FileDescriptor;

        specialinvoke $r1.<java.io.FileDescriptor: void <init>()>();

        r0 = $r1;

        virtualinvoke r0.<java.io.FileDescriptor: void setInt$(int)>(i0);

        $r2 = new android.os.ParcelFileDescriptor;

        specialinvoke $r2.<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor)>(r0);

        return $r2;
    }

    private void closeWithStatus(int, java.lang.String)
    {
        android.os.ParcelFileDescriptor r0;
        int i0;
        java.lang.String r1;
        boolean $z0;
        dalvik.system.CloseGuard $r2;
        java.io.FileDescriptor $r3;

        r0 := @this: android.os.ParcelFileDescriptor;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $z0 = r0.<android.os.ParcelFileDescriptor: boolean mClosed>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<android.os.ParcelFileDescriptor: boolean mClosed> = 1;

        $r2 = r0.<android.os.ParcelFileDescriptor: dalvik.system.CloseGuard mGuard>;

        virtualinvoke $r2.<dalvik.system.CloseGuard: void close()>();

        specialinvoke r0.<android.os.ParcelFileDescriptor: void writeCommStatusAndClose(int,java.lang.String)>(i0, r1);

        $r3 = r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mFd>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>($r3);

        virtualinvoke r0.<android.os.ParcelFileDescriptor: void releaseResources()>();

        return;
    }

    private static java.io.FileDescriptor[] createCommSocketPair() throws java.io.IOException
    {
        java.io.FileDescriptor r0, r1, $r4, $r5;
        libcore.io.ErrnoException r2, $r8;
        java.io.FileDescriptor[] r3, $r7;
        int $i0, $i1;
        libcore.io.Os $r6;
        java.io.IOException $r9;

     label1:
        $r4 = new java.io.FileDescriptor;

        specialinvoke $r4.<java.io.FileDescriptor: void <init>()>();

        r0 = $r4;

        $r5 = new java.io.FileDescriptor;

        specialinvoke $r5.<java.io.FileDescriptor: void <init>()>();

        r1 = $r5;

        $r6 = <libcore.io.Libcore: libcore.io.Os os>;

        $i1 = <libcore.io.OsConstants: int AF_UNIX>;

        $i0 = <libcore.io.OsConstants: int SOCK_STREAM>;

        interfaceinvoke $r6.<libcore.io.Os: void socketpair(int,int,int,java.io.FileDescriptor,java.io.FileDescriptor)>($i1, $i0, 0, r0, r1);

        staticinvoke <libcore.io.IoUtils: void setBlocking(java.io.FileDescriptor,boolean)>(r0, 0);

        staticinvoke <libcore.io.IoUtils: void setBlocking(java.io.FileDescriptor,boolean)>(r1, 0);

        $r7 = newarray (java.io.FileDescriptor)[2];

        $r7[0] = r0;

        $r7[1] = r1;

        r3 = $r7;

     label2:
        return r3;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

        $r9 = virtualinvoke r2.<libcore.io.ErrnoException: java.io.IOException rethrowAsIOException()>();

        throw $r9;

        catch libcore.io.ErrnoException from label1 to label2 with label3;
    }

    public static android.os.ParcelFileDescriptor[] createPipe() throws java.io.IOException
    {
        libcore.io.ErrnoException r0, $r8;
        java.io.FileDescriptor[] r1;
        android.os.ParcelFileDescriptor[] r2;
        libcore.io.Os $r3;
        android.os.ParcelFileDescriptor $r4, $r6;
        java.io.FileDescriptor $r5, $r7;
        java.io.IOException $r9;

     label1:
        $r3 = <libcore.io.Libcore: libcore.io.Os os>;

        r1 = interfaceinvoke $r3.<libcore.io.Os: java.io.FileDescriptor[] pipe()>();

        r2 = newarray (android.os.ParcelFileDescriptor)[2];

        $r4 = new android.os.ParcelFileDescriptor;

        $r5 = r1[0];

        specialinvoke $r4.<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor)>($r5);

        r2[0] = $r4;

        $r6 = new android.os.ParcelFileDescriptor;

        $r7 = r1[1];

        specialinvoke $r6.<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor)>($r7);

        r2[1] = $r6;

     label2:
        return r2;

     label3:
        $r8 := @caughtexception;

        r0 = $r8;

        $r9 = virtualinvoke r0.<libcore.io.ErrnoException: java.io.IOException rethrowAsIOException()>();

        throw $r9;

        catch libcore.io.ErrnoException from label1 to label2 with label3;
    }

    public static android.os.ParcelFileDescriptor[] createReliablePipe() throws java.io.IOException
    {
        libcore.io.ErrnoException r0, $r11;
        java.io.FileDescriptor[] r1, r2;
        android.os.ParcelFileDescriptor[] r3;
        libcore.io.Os $r4;
        android.os.ParcelFileDescriptor $r5, $r8;
        java.io.FileDescriptor $r6, $r7, $r9, $r10;
        java.io.IOException $r12;

     label1:
        r1 = staticinvoke <android.os.ParcelFileDescriptor: java.io.FileDescriptor[] createCommSocketPair()>();

        $r4 = <libcore.io.Libcore: libcore.io.Os os>;

        r2 = interfaceinvoke $r4.<libcore.io.Os: java.io.FileDescriptor[] pipe()>();

        r3 = newarray (android.os.ParcelFileDescriptor)[2];

        $r5 = new android.os.ParcelFileDescriptor;

        $r7 = r2[0];

        $r6 = r1[0];

        specialinvoke $r5.<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor,java.io.FileDescriptor)>($r7, $r6);

        r3[0] = $r5;

        $r8 = new android.os.ParcelFileDescriptor;

        $r10 = r2[1];

        $r9 = r1[1];

        specialinvoke $r8.<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor,java.io.FileDescriptor)>($r10, $r9);

        r3[1] = $r8;

     label2:
        return r3;

     label3:
        $r11 := @caughtexception;

        r0 = $r11;

        $r12 = virtualinvoke r0.<libcore.io.ErrnoException: java.io.IOException rethrowAsIOException()>();

        throw $r12;

        catch libcore.io.ErrnoException from label1 to label2 with label3;
    }

    public static android.os.ParcelFileDescriptor[] createReliableSocketPair() throws java.io.IOException
    {
        libcore.io.ErrnoException r0, $r12;
        java.io.FileDescriptor[] r1;
        java.io.FileDescriptor r2, r3, $r5, $r6, $r9, $r11;
        android.os.ParcelFileDescriptor[] r4;
        int $i0, $i1;
        libcore.io.Os $r7;
        android.os.ParcelFileDescriptor $r8, $r10;
        java.io.IOException $r13;

     label1:
        r1 = staticinvoke <android.os.ParcelFileDescriptor: java.io.FileDescriptor[] createCommSocketPair()>();

        $r5 = new java.io.FileDescriptor;

        specialinvoke $r5.<java.io.FileDescriptor: void <init>()>();

        r2 = $r5;

        $r6 = new java.io.FileDescriptor;

        specialinvoke $r6.<java.io.FileDescriptor: void <init>()>();

        r3 = $r6;

        $r7 = <libcore.io.Libcore: libcore.io.Os os>;

        $i1 = <libcore.io.OsConstants: int AF_UNIX>;

        $i0 = <libcore.io.OsConstants: int SOCK_STREAM>;

        interfaceinvoke $r7.<libcore.io.Os: void socketpair(int,int,int,java.io.FileDescriptor,java.io.FileDescriptor)>($i1, $i0, 0, r2, r3);

        r4 = newarray (android.os.ParcelFileDescriptor)[2];

        $r8 = new android.os.ParcelFileDescriptor;

        $r9 = r1[0];

        specialinvoke $r8.<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor,java.io.FileDescriptor)>(r2, $r9);

        r4[0] = $r8;

        $r10 = new android.os.ParcelFileDescriptor;

        $r11 = r1[1];

        specialinvoke $r10.<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor,java.io.FileDescriptor)>(r3, $r11);

        r4[1] = $r10;

     label2:
        return r4;

     label3:
        $r12 := @caughtexception;

        r0 = $r12;

        $r13 = virtualinvoke r0.<libcore.io.ErrnoException: java.io.IOException rethrowAsIOException()>();

        throw $r13;

        catch libcore.io.ErrnoException from label1 to label2 with label3;
    }

    public static android.os.ParcelFileDescriptor[] createSocketPair() throws java.io.IOException
    {
        java.io.FileDescriptor r0, r1, $r4, $r5;
        libcore.io.ErrnoException r2, $r9;
        android.os.ParcelFileDescriptor[] r3;
        int $i0, $i1;
        libcore.io.Os $r6;
        android.os.ParcelFileDescriptor $r7, $r8;
        java.io.IOException $r10;

     label1:
        $r4 = new java.io.FileDescriptor;

        specialinvoke $r4.<java.io.FileDescriptor: void <init>()>();

        r0 = $r4;

        $r5 = new java.io.FileDescriptor;

        specialinvoke $r5.<java.io.FileDescriptor: void <init>()>();

        r1 = $r5;

        $r6 = <libcore.io.Libcore: libcore.io.Os os>;

        $i1 = <libcore.io.OsConstants: int AF_UNIX>;

        $i0 = <libcore.io.OsConstants: int SOCK_STREAM>;

        interfaceinvoke $r6.<libcore.io.Os: void socketpair(int,int,int,java.io.FileDescriptor,java.io.FileDescriptor)>($i1, $i0, 0, r0, r1);

        r3 = newarray (android.os.ParcelFileDescriptor)[2];

        $r7 = new android.os.ParcelFileDescriptor;

        specialinvoke $r7.<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor)>(r0);

        r3[0] = $r7;

        $r8 = new android.os.ParcelFileDescriptor;

        specialinvoke $r8.<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor)>(r1);

        r3[1] = $r8;

     label2:
        return r3;

     label3:
        $r9 := @caughtexception;

        r2 = $r9;

        $r10 = virtualinvoke r2.<libcore.io.ErrnoException: java.io.IOException rethrowAsIOException()>();

        throw $r10;

        catch libcore.io.ErrnoException from label1 to label2 with label3;
    }

    public static android.os.ParcelFileDescriptor dup(java.io.FileDescriptor) throws java.io.IOException
    {
        java.io.FileDescriptor r0, $r5;
        android.os.ParcelFileDescriptor r1, $r3;
        libcore.io.ErrnoException r2, $r6;
        libcore.io.Os $r4;
        java.io.IOException $r7;

        r0 := @parameter0: java.io.FileDescriptor;

     label1:
        $r3 = new android.os.ParcelFileDescriptor;

        $r4 = <libcore.io.Libcore: libcore.io.Os os>;

        $r5 = interfaceinvoke $r4.<libcore.io.Os: java.io.FileDescriptor dup(java.io.FileDescriptor)>(r0);

        specialinvoke $r3.<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor)>($r5);

        r1 = $r3;

     label2:
        return r1;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        $r7 = virtualinvoke r2.<libcore.io.ErrnoException: java.io.IOException rethrowAsIOException()>();

        throw $r7;

        catch libcore.io.ErrnoException from label1 to label2 with label3;
    }

    public static android.os.ParcelFileDescriptor fromData(byte[], java.lang.String) throws java.io.IOException
    {
        byte[] r0;
        java.lang.String r1;
        android.os.MemoryFile r2, $r4;
        java.io.FileDescriptor r3;
        int $i0, $i1, $i2;
        android.os.ParcelFileDescriptor $r5;

        r0 := @parameter0: byte[];

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label2;

     label1:
        return null;

     label2:
        $r4 = new android.os.MemoryFile;

        $i0 = lengthof r0;

        specialinvoke $r4.<android.os.MemoryFile: void <init>(java.lang.String,int)>(r1, $i0);

        r2 = $r4;

        $i1 = lengthof r0;

        if $i1 <= 0 goto label3;

        $i2 = lengthof r0;

        virtualinvoke r2.<android.os.MemoryFile: void writeBytes(byte[],int,int,int)>(r0, 0, 0, $i2);

     label3:
        virtualinvoke r2.<android.os.MemoryFile: void deactivate()>();

        r3 = virtualinvoke r2.<android.os.MemoryFile: java.io.FileDescriptor getFileDescriptor()>();

        if r3 == null goto label1;

        $r5 = new android.os.ParcelFileDescriptor;

        specialinvoke $r5.<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor)>(r3);

        return $r5;
    }

    public static android.os.ParcelFileDescriptor fromDatagramSocket(java.net.DatagramSocket)
    {
        java.net.DatagramSocket r0;
        java.io.FileDescriptor r1;
        android.os.ParcelFileDescriptor $r2;

        r0 := @parameter0: java.net.DatagramSocket;

        r1 = virtualinvoke r0.<java.net.DatagramSocket: java.io.FileDescriptor getFileDescriptor$()>();

        if r1 == null goto label1;

        $r2 = new android.os.ParcelFileDescriptor;

        specialinvoke $r2.<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor)>(r1);

        return $r2;

     label1:
        return null;
    }

    public static android.os.ParcelFileDescriptor fromFd(int) throws java.io.IOException
    {
        int i0;
        java.io.FileDescriptor r0, $r3, $r6;
        android.os.ParcelFileDescriptor r1, $r4;
        libcore.io.ErrnoException r2, $r7;
        libcore.io.Os $r5;
        java.io.IOException $r8;

        i0 := @parameter0: int;

        $r3 = new java.io.FileDescriptor;

        specialinvoke $r3.<java.io.FileDescriptor: void <init>()>();

        r0 = $r3;

        virtualinvoke r0.<java.io.FileDescriptor: void setInt$(int)>(i0);

     label1:
        $r4 = new android.os.ParcelFileDescriptor;

        $r5 = <libcore.io.Libcore: libcore.io.Os os>;

        $r6 = interfaceinvoke $r5.<libcore.io.Os: java.io.FileDescriptor dup(java.io.FileDescriptor)>(r0);

        specialinvoke $r4.<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor)>($r6);

        r1 = $r4;

     label2:
        return r1;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        $r8 = virtualinvoke r2.<libcore.io.ErrnoException: java.io.IOException rethrowAsIOException()>();

        throw $r8;

        catch libcore.io.ErrnoException from label1 to label2 with label3;
    }

    public static android.os.ParcelFileDescriptor fromSocket(java.net.Socket)
    {
        java.net.Socket r0;
        java.io.FileDescriptor r1;
        android.os.ParcelFileDescriptor $r2;

        r0 := @parameter0: java.net.Socket;

        r1 = virtualinvoke r0.<java.net.Socket: java.io.FileDescriptor getFileDescriptor$()>();

        if r1 == null goto label1;

        $r2 = new android.os.ParcelFileDescriptor;

        specialinvoke $r2.<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor)>(r1);

        return $r2;

     label1:
        return null;
    }

    private byte[] getOrCreateStatusBuffer()
    {
        android.os.ParcelFileDescriptor r0;
        byte[] $r1, $r2, $r3;

        r0 := @this: android.os.ParcelFileDescriptor;

        $r1 = r0.<android.os.ParcelFileDescriptor: byte[] mStatusBuf>;

        if $r1 != null goto label1;

        $r3 = newarray (byte)[1024];

        r0.<android.os.ParcelFileDescriptor: byte[] mStatusBuf> = $r3;

     label1:
        $r2 = r0.<android.os.ParcelFileDescriptor: byte[] mStatusBuf>;

        return $r2;
    }

    public static android.os.ParcelFileDescriptor open(java.io.File, int) throws java.io.FileNotFoundException
    {
        java.io.File r0;
        int i0;
        java.io.FileDescriptor r1;
        android.os.ParcelFileDescriptor $r2;

        r0 := @parameter0: java.io.File;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.ParcelFileDescriptor: java.io.FileDescriptor openInternal(java.io.File,int)>(r0, i0);

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = new android.os.ParcelFileDescriptor;

        specialinvoke $r2.<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor)>(r1);

        return $r2;
    }

    public static android.os.ParcelFileDescriptor open(java.io.File, int, android.os.Handler, android.os.ParcelFileDescriptor$OnCloseListener) throws java.io.IOException
    {
        java.io.File r0;
        int i0;
        android.os.Handler r1;
        android.os.ParcelFileDescriptor$OnCloseListener r2;
        java.io.FileDescriptor r3, $r7, $r8, $r10;
        java.io.FileDescriptor[] r4;
        android.os.ParcelFileDescriptor r5, $r6;
        android.os.ParcelFileDescriptor$ListenerBridge $r9;
        android.os.Looper $r11;
        java.lang.IllegalArgumentException $r12, $r13;

        r0 := @parameter0: java.io.File;

        i0 := @parameter1: int;

        r1 := @parameter2: android.os.Handler;

        r2 := @parameter3: android.os.ParcelFileDescriptor$OnCloseListener;

        if r1 != null goto label1;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Handler must not be null");

        throw $r13;

     label1:
        if r2 != null goto label2;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Listener must not be null");

        throw $r12;

     label2:
        r3 = staticinvoke <android.os.ParcelFileDescriptor: java.io.FileDescriptor openInternal(java.io.File,int)>(r0, i0);

        if r3 != null goto label3;

        return null;

     label3:
        r4 = staticinvoke <android.os.ParcelFileDescriptor: java.io.FileDescriptor[] createCommSocketPair()>();

        $r6 = new android.os.ParcelFileDescriptor;

        $r7 = r4[0];

        specialinvoke $r6.<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor,java.io.FileDescriptor)>(r3, $r7);

        r5 = $r6;

        $r8 = r4[1];

        staticinvoke <libcore.io.IoUtils: void setBlocking(java.io.FileDescriptor,boolean)>($r8, 1);

        $r9 = new android.os.ParcelFileDescriptor$ListenerBridge;

        $r10 = r4[1];

        $r11 = virtualinvoke r1.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke $r9.<android.os.ParcelFileDescriptor$ListenerBridge: void <init>(java.io.FileDescriptor,android.os.Looper,android.os.ParcelFileDescriptor$OnCloseListener)>($r10, $r11, r2);

        virtualinvoke $r9.<android.os.ParcelFileDescriptor$ListenerBridge: void start()>();

        return r5;
    }

    private static java.io.FileDescriptor openInternal(java.io.File, int) throws java.io.FileNotFoundException
    {
        java.io.File r0;
        int i0, $i1;
        java.lang.String $r1;
        java.io.FileDescriptor $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @parameter0: java.io.File;

        i0 := @parameter1: int;

        $i1 = 805306368 & i0;

        if $i1 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must specify MODE_READ_ONLY, MODE_WRITE_ONLY, or MODE_READ_WRITE");

        throw $r3;

     label1:
        $r1 = virtualinvoke r0.<java.io.File: java.lang.String getPath()>();

        $r2 = staticinvoke <android.os.Parcel: java.io.FileDescriptor openFileDescriptor(java.lang.String,int)>($r1, i0);

        return $r2;
    }

    public static int parseMode(java.lang.String)
    {
        java.lang.String r0, $r1, $r2, $r3, $r4, $r5, $r6, $r12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.IllegalArgumentException $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11;

        r0 := @parameter0: java.lang.String;

        $r1 = "r";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        return 268435456;

     label1:
        $r2 = "w";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 != 0 goto label2;

        $r3 = "wt";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 == 0 goto label3;

     label2:
        return 738197504;

     label3:
        $r4 = "wa";

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z3 == 0 goto label4;

        return 704643072;

     label4:
        $r5 = "rw";

        $z4 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z4 == 0 goto label5;

        return 939524096;

     label5:
        $r6 = "rwt";

        $z5 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z5 == 0 goto label6;

        return 1006632960;

     label6:
        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad mode \'");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r7;
    }

    private static android.os.ParcelFileDescriptor$Status readCommStatus(java.io.FileDescriptor, byte[])
    {
        java.io.FileDescriptor r0;
        byte[] r1;
        libcore.io.ErrnoException r2, $r11;
        int i0, i1, $i2, $i3, $i4, $i5;
        android.os.ParcelFileDescriptor$Status r3, r4, $r7, $r8, $r10, $r16;
        libcore.io.Os $r5;
        java.nio.ByteOrder $r6;
        java.lang.String $r9, $r14;
        java.lang.StringBuilder $r12, $r13, $r15;

        r0 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: byte[];

     label01:
        $r5 = <libcore.io.Libcore: libcore.io.Os os>;

        $i2 = lengthof r1;

        i0 = interfaceinvoke $r5.<libcore.io.Os: int read(java.io.FileDescriptor,byte[],int,int)>(r0, r1, 0, $i2);

     label02:
        if i0 != 0 goto label04;

     label03:
        $r10 = new android.os.ParcelFileDescriptor$Status;

        specialinvoke $r10.<android.os.ParcelFileDescriptor$Status: void <init>(int)>(-2);

        return $r10;

     label04:
        $r6 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        i1 = staticinvoke <libcore.io.Memory: int peekInt(byte[],int,java.nio.ByteOrder)>(r1, 0, $r6);

     label05:
        if i1 != 1 goto label09;

     label06:
        $r8 = new android.os.ParcelFileDescriptor$Status;

        $r9 = new java.lang.String;

        $i3 = i0 - 4;

        specialinvoke $r9.<java.lang.String: void <init>(byte[],int,int)>(r1, 4, $i3);

        specialinvoke $r8.<android.os.ParcelFileDescriptor$Status: void <init>(int,java.lang.String)>(i1, $r9);

        r3 = $r8;

     label07:
        return r3;

     label08:
        $r11 := @caughtexception;

        r2 = $r11;

        $i5 = r2.<libcore.io.ErrnoException: int errno>;

        $i4 = <libcore.io.OsConstants: int EAGAIN>;

        if $i5 != $i4 goto label11;

        return null;

     label09:
        $r7 = new android.os.ParcelFileDescriptor$Status;

        specialinvoke $r7.<android.os.ParcelFileDescriptor$Status: void <init>(int)>(i1);

        r4 = $r7;

     label10:
        return r4;

     label11:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to read status; assuming dead: ");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ParcelFileDescriptor", $r14);

        $r16 = new android.os.ParcelFileDescriptor$Status;

        specialinvoke $r16.<android.os.ParcelFileDescriptor$Status: void <init>(int)>(-2);

        return $r16;

        catch libcore.io.ErrnoException from label01 to label02 with label08;
        catch libcore.io.ErrnoException from label03 to label04 with label08;
        catch libcore.io.ErrnoException from label04 to label05 with label08;
        catch libcore.io.ErrnoException from label06 to label07 with label08;
        catch libcore.io.ErrnoException from label09 to label10 with label08;
    }

    private void writeCommStatusAndClose(int, java.lang.String)
    {
        android.os.ParcelFileDescriptor r0;
        int i0, i1, i2, $i4, $i5, $i6;
        java.lang.String r1, $r21, $r27;
        java.lang.Throwable r2, $r25;
        android.os.ParcelFileDescriptor$Status r3, $r10;
        libcore.io.ErrnoException r4, $r19;
        byte[] r5, r6, $r9;
        java.io.FileDescriptor $r7, $r8, $r11, $r14, $r15, $r16, $r26;
        java.nio.ByteOrder $r12;
        libcore.io.Os $r13;
        java.lang.StringBuilder $r17, $r18, $r20, $r22, $r23, $r24;

        r0 := @this: android.os.ParcelFileDescriptor;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r7 = r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mCommFd>;

        if $r7 != null goto label02;

        if r1 == null goto label01;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to inform peer: ");

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ParcelFileDescriptor", $r21);

     label01:
        return;

     label02:
        if i0 != 2 goto label03;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ParcelFileDescriptor", "Peer expected signal when closed; unable to deliver after detach");

     label03:
        if i0 != -1 goto label04;

        $r15 = r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mCommFd>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>($r15);

        r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mCommFd> = null;

        return;

     label04:
        $r8 = r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mCommFd>;

        $r9 = specialinvoke r0.<android.os.ParcelFileDescriptor: byte[] getOrCreateStatusBuffer()>();

        $r10 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor$Status readCommStatus(java.io.FileDescriptor,byte[])>($r8, $r9);

        r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor$Status mStatus> = $r10;

        r3 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor$Status mStatus>;

     label05:
        if r3 == null goto label06;

        $r16 = r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mCommFd>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>($r16);

        r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mCommFd> = null;

        return;

     label06:
        r5 = specialinvoke r0.<android.os.ParcelFileDescriptor: byte[] getOrCreateStatusBuffer()>();

        $r12 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        staticinvoke <libcore.io.Memory: void pokeInt(byte[],int,int,java.nio.ByteOrder)>(r5, 0, i0, $r12);

     label07:
        i1 = 0 + 4;

        if r1 == null goto label10;

     label08:
        r6 = virtualinvoke r1.<java.lang.String: byte[] getBytes()>();

        $i6 = lengthof r6;

        $i5 = lengthof r5;

        $i4 = -4 + $i5;

        i2 = staticinvoke <java.lang.Math: int min(int,int)>($i6, $i4);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r6, 0, r5, i1, i2);

     label09:
        i1 = i2 + 4;

     label10:
        $r13 = <libcore.io.Libcore: libcore.io.Os os>;

        $r11 = r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mCommFd>;

        interfaceinvoke $r13.<libcore.io.Os: int write(java.io.FileDescriptor,byte[],int,int)>($r11, r5, 0, i1);

     label11:
        $r14 = r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mCommFd>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>($r14);

        r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mCommFd> = null;

        return;

     label12:
        $r19 := @caughtexception;

        r4 = $r19;

     label13:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to report status: ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ParcelFileDescriptor", $r27);

     label14:
        goto label11;

     label15:
        $r25 := @caughtexception;

        r2 = $r25;

        $r26 = r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mCommFd>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>($r26);

        r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mCommFd> = null;

        throw r2;

        catch java.lang.Throwable from label04 to label05 with label15;
        catch libcore.io.ErrnoException from label06 to label07 with label12;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch libcore.io.ErrnoException from label08 to label09 with label12;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch libcore.io.ErrnoException from label10 to label11 with label12;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    public boolean canDetectErrors()
    {
        android.os.ParcelFileDescriptor r0, $r1, $r3;
        java.io.FileDescriptor $r2;
        boolean $z0;

        r0 := @this: android.os.ParcelFileDescriptor;

        $r1 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped>;

        if $r1 == null goto label1;

        $r3 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped>;

        $z0 = virtualinvoke $r3.<android.os.ParcelFileDescriptor: boolean canDetectErrors()>();

        return $z0;

     label1:
        $r2 = r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mCommFd>;

        if $r2 == null goto label2;

        return 1;

     label2:
        return 0;
    }

    public void checkError() throws java.io.IOException
    {
        android.os.ParcelFileDescriptor r0, $r1, $r11;
        android.os.ParcelFileDescriptor$Status $r2, $r3, $r4, $r5, $r10;
        int $i0;
        java.io.IOException $r6;
        java.io.FileDescriptor $r7, $r8;
        byte[] $r9;

        r0 := @this: android.os.ParcelFileDescriptor;

        $r1 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped>;

        if $r1 == null goto label2;

        $r11 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped>;

        virtualinvoke $r11.<android.os.ParcelFileDescriptor: void checkError()>();

     label1:
        return;

     label2:
        $r2 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor$Status mStatus>;

        if $r2 != null goto label4;

        $r7 = r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mCommFd>;

        if $r7 != null goto label3;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ParcelFileDescriptor", "Peer didn\'t provide a comm channel; unable to check for errors");

        return;

     label3:
        $r8 = r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mCommFd>;

        $r9 = specialinvoke r0.<android.os.ParcelFileDescriptor: byte[] getOrCreateStatusBuffer()>();

        $r10 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor$Status readCommStatus(java.io.FileDescriptor,byte[])>($r8, $r9);

        r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor$Status mStatus> = $r10;

     label4:
        $r3 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor$Status mStatus>;

        if $r3 == null goto label1;

        $r4 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor$Status mStatus>;

        $i0 = $r4.<android.os.ParcelFileDescriptor$Status: int status>;

        if $i0 == 0 goto label1;

        $r5 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor$Status mStatus>;

        $r6 = virtualinvoke $r5.<android.os.ParcelFileDescriptor$Status: java.io.IOException asIOException()>();

        throw $r6;
    }

    public void close() throws java.io.IOException
    {
        android.os.ParcelFileDescriptor r0, $r2, $r3;
        java.lang.Throwable r1, $r4;

        r0 := @this: android.os.ParcelFileDescriptor;

        $r2 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped>;

        if $r2 == null goto label4;

     label1:
        $r3 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped>;

        virtualinvoke $r3.<android.os.ParcelFileDescriptor: void close()>();

     label2:
        virtualinvoke r0.<android.os.ParcelFileDescriptor: void releaseResources()>();

        return;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        virtualinvoke r0.<android.os.ParcelFileDescriptor: void releaseResources()>();

        throw r1;

     label4:
        specialinvoke r0.<android.os.ParcelFileDescriptor: void closeWithStatus(int,java.lang.String)>(0, null);

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void closeWithError(java.lang.String) throws java.io.IOException
    {
        android.os.ParcelFileDescriptor r0, $r3, $r5;
        java.lang.String r1;
        java.lang.Throwable r2, $r6;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: android.os.ParcelFileDescriptor;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped>;

        if $r3 == null goto label4;

     label1:
        $r5 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped>;

        virtualinvoke $r5.<android.os.ParcelFileDescriptor: void closeWithError(java.lang.String)>(r1);

     label2:
        virtualinvoke r0.<android.os.ParcelFileDescriptor: void releaseResources()>();

        return;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        virtualinvoke r0.<android.os.ParcelFileDescriptor: void releaseResources()>();

        throw r2;

     label4:
        if r1 != null goto label5;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Message must not be null");

        throw $r4;

     label5:
        specialinvoke r0.<android.os.ParcelFileDescriptor: void closeWithStatus(int,java.lang.String)>(1, r1);

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int describeContents()
    {
        android.os.ParcelFileDescriptor r0, $r1, $r2;
        int $i0;

        r0 := @this: android.os.ParcelFileDescriptor;

        $r1 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped>;

        if $r1 == null goto label1;

        $r2 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped>;

        $i0 = virtualinvoke $r2.<android.os.ParcelFileDescriptor: int describeContents()>();

        return $i0;

     label1:
        return 1;
    }

    public int detachFd()
    {
        android.os.ParcelFileDescriptor r0, $r1, $r4;
        int i0, $i1;
        boolean $z0;
        java.io.FileDescriptor $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: android.os.ParcelFileDescriptor;

        $r1 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped>;

        if $r1 == null goto label1;

        $r4 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped>;

        $i1 = virtualinvoke $r4.<android.os.ParcelFileDescriptor: int detachFd()>();

        return $i1;

     label1:
        $z0 = r0.<android.os.ParcelFileDescriptor: boolean mClosed>;

        if $z0 == 0 goto label2;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already closed");

        throw $r3;

     label2:
        i0 = virtualinvoke r0.<android.os.ParcelFileDescriptor: int getFd()>();

        $r2 = r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mFd>;

        staticinvoke <android.os.Parcel: void clearFileDescriptor(java.io.FileDescriptor)>($r2);

        specialinvoke r0.<android.os.ParcelFileDescriptor: void writeCommStatusAndClose(int,java.lang.String)>(2, null);

        return i0;
    }

    public android.os.ParcelFileDescriptor dup() throws java.io.IOException
    {
        android.os.ParcelFileDescriptor r0, $r1, $r3, $r4, $r5;
        java.io.FileDescriptor $r2;

        r0 := @this: android.os.ParcelFileDescriptor;

        $r1 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped>;

        if $r1 == null goto label1;

        $r4 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped>;

        $r5 = virtualinvoke $r4.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor dup()>();

        return $r5;

     label1:
        $r2 = virtualinvoke r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        $r3 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor dup(java.io.FileDescriptor)>($r2);

        return $r3;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.os.ParcelFileDescriptor r0, $r2;
        java.lang.Throwable r1, $r5;
        dalvik.system.CloseGuard $r3, $r4;
        boolean $z0;

        r0 := @this: android.os.ParcelFileDescriptor;

        $r2 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped>;

        if $r2 == null goto label1;

        virtualinvoke r0.<android.os.ParcelFileDescriptor: void releaseResources()>();

     label1:
        $r3 = r0.<android.os.ParcelFileDescriptor: dalvik.system.CloseGuard mGuard>;

        if $r3 == null goto label2;

        $r4 = r0.<android.os.ParcelFileDescriptor: dalvik.system.CloseGuard mGuard>;

        virtualinvoke $r4.<dalvik.system.CloseGuard: void warnIfOpen()>();

     label2:
        $z0 = r0.<android.os.ParcelFileDescriptor: boolean mClosed>;

        if $z0 != 0 goto label3;

        specialinvoke r0.<android.os.ParcelFileDescriptor: void closeWithStatus(int,java.lang.String)>(3, null);

     label3:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label4:
        $r5 := @caughtexception;

        r1 = $r5;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw r1;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public int getFd()
    {
        android.os.ParcelFileDescriptor r0, $r1, $r4;
        boolean $z0;
        java.io.FileDescriptor $r2;
        int $i0, $i1;
        java.lang.IllegalStateException $r3;

        r0 := @this: android.os.ParcelFileDescriptor;

        $r1 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped>;

        if $r1 == null goto label1;

        $r4 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped>;

        $i1 = virtualinvoke $r4.<android.os.ParcelFileDescriptor: int getFd()>();

        return $i1;

     label1:
        $z0 = r0.<android.os.ParcelFileDescriptor: boolean mClosed>;

        if $z0 == 0 goto label2;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already closed");

        throw $r3;

     label2:
        $r2 = r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mFd>;

        $i0 = virtualinvoke $r2.<java.io.FileDescriptor: int getInt$()>();

        return $i0;
    }

    public java.io.FileDescriptor getFileDescriptor()
    {
        android.os.ParcelFileDescriptor r0, $r1, $r3;
        java.io.FileDescriptor $r2, $r4;

        r0 := @this: android.os.ParcelFileDescriptor;

        $r1 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped>;

        if $r1 == null goto label1;

        $r3 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped>;

        $r4 = virtualinvoke $r3.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        return $r4;

     label1:
        $r2 = r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mFd>;

        return $r2;
    }

    public long getStatSize()
    {
        android.os.ParcelFileDescriptor r0, $r3, $r6;
        long l0, l1;
        libcore.io.ErrnoException r1, $r8;
        libcore.io.StructStat r2;
        java.io.FileDescriptor $r4;
        libcore.io.Os $r5;
        int $i2, $i3;
        boolean $z0, $z1;
        java.lang.StringBuilder $r7, $r9, $r11;
        java.lang.String $r10;

        r0 := @this: android.os.ParcelFileDescriptor;

        l0 = -1L;

        $r3 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped>;

        if $r3 == null goto label2;

        $r6 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped>;

        l0 = virtualinvoke $r6.<android.os.ParcelFileDescriptor: long getStatSize()>();

     label1:
        return l0;

     label2:
        $r5 = <libcore.io.Libcore: libcore.io.Os os>;

        $r4 = r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mFd>;

        r2 = interfaceinvoke $r5.<libcore.io.Os: libcore.io.StructStat fstat(java.io.FileDescriptor)>($r4);

        $i2 = r2.<libcore.io.StructStat: int st_mode>;

        $z0 = staticinvoke <libcore.io.OsConstants: boolean S_ISREG(int)>($i2);

        if $z0 != 0 goto label3;

        $i3 = r2.<libcore.io.StructStat: int st_mode>;

        $z1 = staticinvoke <libcore.io.OsConstants: boolean S_ISLNK(int)>($i3);

        if $z1 == 0 goto label1;

     label3:
        l1 = r2.<libcore.io.StructStat: long st_size>;

     label4:
        return l1;

     label5:
        $r8 := @caughtexception;

        r1 = $r8;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fstat() failed: ");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ParcelFileDescriptor", $r10);

        return l0;

        catch libcore.io.ErrnoException from label2 to label3 with label5;
        catch libcore.io.ErrnoException from label3 to label4 with label5;
    }

    public void releaseResources()
    {
        android.os.ParcelFileDescriptor r0;

        r0 := @this: android.os.ParcelFileDescriptor;

        return;
    }

    public long seekTo(long) throws java.io.IOException
    {
        android.os.ParcelFileDescriptor r0, $r2, $r5;
        long l0, l1, $l3;
        libcore.io.ErrnoException r1, $r6;
        int $i2;
        java.io.FileDescriptor $r3;
        libcore.io.Os $r4;
        java.io.IOException $r7;

        r0 := @this: android.os.ParcelFileDescriptor;

        l0 := @parameter0: long;

        $r2 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped>;

        if $r2 == null goto label1;

        $r5 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped>;

        $l3 = virtualinvoke $r5.<android.os.ParcelFileDescriptor: long seekTo(long)>(l0);

        return $l3;

     label1:
        $r4 = <libcore.io.Libcore: libcore.io.Os os>;

        $r3 = r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mFd>;

        $i2 = <libcore.io.OsConstants: int SEEK_SET>;

        l1 = interfaceinvoke $r4.<libcore.io.Os: long lseek(java.io.FileDescriptor,long,int)>($r3, l0, $i2);

     label2:
        return l1;

     label3:
        $r6 := @caughtexception;

        r1 = $r6;

        $r7 = virtualinvoke r1.<libcore.io.ErrnoException: java.io.IOException rethrowAsIOException()>();

        throw $r7;

        catch libcore.io.ErrnoException from label1 to label2 with label3;
    }

    public java.lang.String toString()
    {
        android.os.ParcelFileDescriptor r0, $r1, $r8;
        java.lang.StringBuilder $r2, $r3, $r5, $r6;
        java.io.FileDescriptor $r4;
        java.lang.String $r7, $r9;

        r0 := @this: android.os.ParcelFileDescriptor;

        $r1 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped>;

        if $r1 == null goto label1;

        $r8 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped>;

        $r9 = virtualinvoke $r8.<android.os.ParcelFileDescriptor: java.lang.String toString()>();

        return $r9;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{ParcelFileDescriptor: ");

        $r4 = r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mFd>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.os.ParcelFileDescriptor r0, $r3, $r7;
        android.os.Parcel r1;
        int i0, $i1;
        java.lang.Throwable r2, $r8;
        java.io.FileDescriptor $r4, $r5, $r6;
        boolean $z0;

        r0 := @this: android.os.ParcelFileDescriptor;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r3 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped>;

        if $r3 == null goto label5;

     label1:
        $r7 = r0.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor mWrapped>;

        virtualinvoke $r7.<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>(r1, i0);

     label2:
        virtualinvoke r0.<android.os.ParcelFileDescriptor: void releaseResources()>();

     label3:
        return;

     label4:
        $r8 := @caughtexception;

        r2 = $r8;

        virtualinvoke r0.<android.os.ParcelFileDescriptor: void releaseResources()>();

        throw r2;

     label5:
        $r4 = r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mFd>;

        virtualinvoke r1.<android.os.Parcel: void writeFileDescriptor(java.io.FileDescriptor)>($r4);

        $r5 = r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mCommFd>;

        if $r5 == null goto label7;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r6 = r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor mCommFd>;

        virtualinvoke r1.<android.os.Parcel: void writeFileDescriptor(java.io.FileDescriptor)>($r6);

     label6:
        $i1 = i0 & 1;

        if $i1 == 0 goto label3;

        $z0 = r0.<android.os.ParcelFileDescriptor: boolean mClosed>;

        if $z0 != 0 goto label3;

        specialinvoke r0.<android.os.ParcelFileDescriptor: void closeWithStatus(int,java.lang.String)>(-1, null);

        return;

     label7:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        goto label6;

        catch java.lang.Throwable from label1 to label2 with label4;
    }
}
