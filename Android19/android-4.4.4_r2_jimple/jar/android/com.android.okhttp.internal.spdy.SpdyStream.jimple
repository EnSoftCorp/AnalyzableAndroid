public final class com.android.okhttp.internal.spdy.SpdyStream extends java.lang.Object
{
    static final boolean $assertionsDisabled;
    private static final int DATA_FRAME_HEADER_LENGTH;
    public static final int RST_CANCEL;
    public static final int RST_FLOW_CONTROL_ERROR;
    public static final int RST_FRAME_TOO_LARGE;
    public static final int RST_INTERNAL_ERROR;
    public static final int RST_INVALID_CREDENTIALS;
    public static final int RST_INVALID_STREAM;
    public static final int RST_PROTOCOL_ERROR;
    public static final int RST_REFUSED_STREAM;
    public static final int RST_STREAM_ALREADY_CLOSED;
    public static final int RST_STREAM_IN_USE;
    public static final int RST_UNSUPPORTED_VERSION;
    private static final java.lang.String[] STATUS_CODE_NAMES;
    public static final int WINDOW_UPDATE_THRESHOLD;
    private final com.android.okhttp.internal.spdy.SpdyConnection connection;
    private final int id;
    private final com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream in;
    private final com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream out;
    private final int priority;
    private long readTimeoutMillis;
    private final java.util.List requestHeaders;
    private java.util.List responseHeaders;
    private int rstStatusCode;
    private final int slot;
    private int writeWindowSize;

    static void <clinit>()
    {
        boolean z0, $z1;
        java.lang.Class $r0;
        java.lang.String[] $r1;

        <com.android.okhttp.internal.spdy.SpdyStream: int WINDOW_UPDATE_THRESHOLD> = 32768;

        <com.android.okhttp.internal.spdy.SpdyStream: int RST_UNSUPPORTED_VERSION> = 4;

        <com.android.okhttp.internal.spdy.SpdyStream: int RST_STREAM_IN_USE> = 8;

        <com.android.okhttp.internal.spdy.SpdyStream: int RST_STREAM_ALREADY_CLOSED> = 9;

        <com.android.okhttp.internal.spdy.SpdyStream: int RST_REFUSED_STREAM> = 3;

        <com.android.okhttp.internal.spdy.SpdyStream: int RST_PROTOCOL_ERROR> = 1;

        <com.android.okhttp.internal.spdy.SpdyStream: int RST_INVALID_STREAM> = 2;

        <com.android.okhttp.internal.spdy.SpdyStream: int RST_INVALID_CREDENTIALS> = 10;

        <com.android.okhttp.internal.spdy.SpdyStream: int RST_INTERNAL_ERROR> = 6;

        <com.android.okhttp.internal.spdy.SpdyStream: int RST_FRAME_TOO_LARGE> = 11;

        <com.android.okhttp.internal.spdy.SpdyStream: int RST_FLOW_CONTROL_ERROR> = 7;

        <com.android.okhttp.internal.spdy.SpdyStream: int RST_CANCEL> = 5;

        <com.android.okhttp.internal.spdy.SpdyStream: int DATA_FRAME_HEADER_LENGTH> = 8;

        $r0 = class "com/android/okhttp/internal/spdy/SpdyStream";

        $z1 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z1 != 0 goto label2;

        z0 = 1;

     label1:
        <com.android.okhttp.internal.spdy.SpdyStream: boolean $assertionsDisabled> = z0;

        $r1 = newarray (java.lang.String)[12];

        $r1[0] = null;

        $r1[1] = "PROTOCOL_ERROR";

        $r1[2] = "INVALID_STREAM";

        $r1[3] = "REFUSED_STREAM";

        $r1[4] = "UNSUPPORTED_VERSION";

        $r1[5] = "CANCEL";

        $r1[6] = "INTERNAL_ERROR";

        $r1[7] = "FLOW_CONTROL_ERROR";

        $r1[8] = "STREAM_IN_USE";

        $r1[9] = "STREAM_ALREADY_CLOSED";

        $r1[10] = "INVALID_CREDENTIALS";

        $r1[11] = "FRAME_TOO_LARGE";

        <com.android.okhttp.internal.spdy.SpdyStream: java.lang.String[] STATUS_CODE_NAMES> = $r1;

        return;

     label2:
        z0 = 0;

        goto label1;

        return;
    }

    void <init>(int, com.android.okhttp.internal.spdy.SpdyConnection, int, int, int, java.util.List, com.android.okhttp.internal.spdy.Settings)
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        com.android.okhttp.internal.spdy.SpdyConnection r1;
        java.util.List r2;
        com.android.okhttp.internal.spdy.Settings r3;
        boolean z0, z1, z2, $z3;
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream r4, r6, $r9;
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream r5, r7, $r8;
        java.lang.NullPointerException $r10, $r11;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.okhttp.internal.spdy.SpdyConnection;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        r2 := @parameter5: java.util.List;

        r3 := @parameter6: com.android.okhttp.internal.spdy.Settings;

        z0 = 1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.okhttp.internal.spdy.SpdyStream: long readTimeoutMillis> = 0L;

        $r9 = new com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream;

        specialinvoke $r9.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: void <init>(com.android.okhttp.internal.spdy.SpdyStream,com.android.okhttp.internal.spdy.SpdyStream$1)>(r0, null);

        r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream in> = $r9;

        $r8 = new com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream;

        specialinvoke $r8.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: void <init>(com.android.okhttp.internal.spdy.SpdyStream,com.android.okhttp.internal.spdy.SpdyStream$1)>(r0, null);

        r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream out> = $r8;

        r0.<com.android.okhttp.internal.spdy.SpdyStream: int rstStatusCode> = -1;

        if r1 != null goto label01;

        $r11 = new java.lang.NullPointerException;

        specialinvoke $r11.<java.lang.NullPointerException: void <init>(java.lang.String)>("connection == null");

        throw $r11;

     label01:
        if r2 != null goto label02;

        $r10 = new java.lang.NullPointerException;

        specialinvoke $r10.<java.lang.NullPointerException: void <init>(java.lang.String)>("requestHeaders == null");

        throw $r10;

     label02:
        r0.<com.android.okhttp.internal.spdy.SpdyStream: int id> = i0;

        r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyConnection connection> = r1;

        r0.<com.android.okhttp.internal.spdy.SpdyStream: int priority> = i2;

        r0.<com.android.okhttp.internal.spdy.SpdyStream: int slot> = i3;

        r0.<com.android.okhttp.internal.spdy.SpdyStream: java.util.List requestHeaders> = r2;

        $z3 = virtualinvoke r0.<com.android.okhttp.internal.spdy.SpdyStream: boolean isLocallyInitiated()>();

        if $z3 == 0 goto label08;

        r6 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream in>;

        $i6 = i1 & 2;

        if $i6 == 0 goto label06;

        z2 = z0;

     label03:
        staticinvoke <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: boolean access$202(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream,boolean)>(r6, z2);

        r7 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream out>;

        $i7 = i1 & 1;

        if $i7 == 0 goto label07;

     label04:
        staticinvoke <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: boolean access$302(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream,boolean)>(r7, z0);

     label05:
        specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyStream: void setSettings(com.android.okhttp.internal.spdy.Settings)>(r3);

        return;

     label06:
        z2 = 0;

        goto label03;

     label07:
        z0 = 0;

        goto label04;

     label08:
        r4 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream in>;

        $i4 = i1 & 1;

        if $i4 == 0 goto label11;

        z1 = z0;

     label09:
        staticinvoke <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: boolean access$202(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream,boolean)>(r4, z1);

        r5 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream out>;

        $i5 = i1 & 2;

        if $i5 == 0 goto label12;

     label10:
        staticinvoke <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: boolean access$302(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream,boolean)>(r5, z0);

        goto label05;

     label11:
        z1 = 0;

        goto label09;

     label12:
        z0 = 0;

        goto label10;
    }

    static int access$1000(com.android.okhttp.internal.spdy.SpdyStream)
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        int $i0;

        r0 := @parameter0: com.android.okhttp.internal.spdy.SpdyStream;

        $i0 = r0.<com.android.okhttp.internal.spdy.SpdyStream: int rstStatusCode>;

        return $i0;
    }

    static void access$1100(com.android.okhttp.internal.spdy.SpdyStream) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;

        r0 := @parameter0: com.android.okhttp.internal.spdy.SpdyStream;

        specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyStream: void cancelStreamIfNecessary()>();

        return;
    }

    static java.lang.String access$1200(com.android.okhttp.internal.spdy.SpdyStream)
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.okhttp.internal.spdy.SpdyStream;

        $r1 = specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyStream: java.lang.String rstStatusString()>();

        return $r1;
    }

    static com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream access$1300(com.android.okhttp.internal.spdy.SpdyStream)
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream $r1;

        r0 := @parameter0: com.android.okhttp.internal.spdy.SpdyStream;

        $r1 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream out>;

        return $r1;
    }

    static int access$1400(com.android.okhttp.internal.spdy.SpdyStream)
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        int $i0;

        r0 := @parameter0: com.android.okhttp.internal.spdy.SpdyStream;

        $i0 = r0.<com.android.okhttp.internal.spdy.SpdyStream: int writeWindowSize>;

        return $i0;
    }

    static int access$700(com.android.okhttp.internal.spdy.SpdyStream)
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        int $i0;

        r0 := @parameter0: com.android.okhttp.internal.spdy.SpdyStream;

        $i0 = r0.<com.android.okhttp.internal.spdy.SpdyStream: int id>;

        return $i0;
    }

    static com.android.okhttp.internal.spdy.SpdyConnection access$800(com.android.okhttp.internal.spdy.SpdyStream)
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        com.android.okhttp.internal.spdy.SpdyConnection $r1;

        r0 := @parameter0: com.android.okhttp.internal.spdy.SpdyStream;

        $r1 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyConnection connection>;

        return $r1;
    }

    static long access$900(com.android.okhttp.internal.spdy.SpdyStream)
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        long $l0;

        r0 := @parameter0: com.android.okhttp.internal.spdy.SpdyStream;

        $l0 = r0.<com.android.okhttp.internal.spdy.SpdyStream: long readTimeoutMillis>;

        return $l0;
    }

    private void cancelStreamIfNecessary() throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        java.lang.Throwable r1, $r8;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7;
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream $r2, $r5;
        int $i0;
        com.android.okhttp.internal.spdy.SpdyConnection $r3;
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream $r6, $r7;
        java.lang.AssertionError $r9;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        $z2 = <com.android.okhttp.internal.spdy.SpdyStream: boolean $assertionsDisabled>;

        if $z2 != 0 goto label01;

        $z6 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>(r0);

        if $z6 == 0 goto label01;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label01:
        entermonitor r0;

     label02:
        $r2 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream in>;

        $z3 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: boolean access$200(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream)>($r2);

        if $z3 != 0 goto label07;

        $r5 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream in>;

        $z4 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: boolean access$400(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream)>($r5);

        if $z4 == 0 goto label07;

        $r6 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream out>;

        $z5 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: boolean access$300(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream)>($r6);

        if $z5 != 0 goto label12;

        $r7 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream out>;

        $z7 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: boolean access$500(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream)>($r7);

        if $z7 == 0 goto label07;

     label03:
        goto label12;

     label04:
        z1 = virtualinvoke r0.<com.android.okhttp.internal.spdy.SpdyStream: boolean isOpen()>();

        exitmonitor r0;

     label05:
        if z0 == 0 goto label11;

        virtualinvoke r0.<com.android.okhttp.internal.spdy.SpdyStream: void close(int)>(5);

     label06:
        return;

     label07:
        z0 = 0;

        goto label04;

     label08:
        $r8 := @caughtexception;

        r1 = $r8;

     label09:
        exitmonitor r0;

     label10:
        throw r1;

     label11:
        if z1 != 0 goto label06;

        $r3 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyConnection connection>;

        $i0 = r0.<com.android.okhttp.internal.spdy.SpdyStream: int id>;

        virtualinvoke $r3.<com.android.okhttp.internal.spdy.SpdyConnection: com.android.okhttp.internal.spdy.SpdyStream removeStream(int)>($i0);

        return;

     label12:
        z0 = 1;

        goto label04;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    private boolean closeInternal(int)
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        int i0, $i1, $i2;
        java.lang.Throwable r1, $r7;
        boolean $z0, $z1, $z2, $z3;
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream $r2;
        com.android.okhttp.internal.spdy.SpdyConnection $r3;
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream $r5;
        java.lang.AssertionError $r6;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        i0 := @parameter0: int;

        $z0 = <com.android.okhttp.internal.spdy.SpdyStream: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $z3 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>(r0);

        if $z3 == 0 goto label01;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label01:
        entermonitor r0;

     label02:
        $i1 = r0.<com.android.okhttp.internal.spdy.SpdyStream: int rstStatusCode>;

        if $i1 == -1 goto label04;

        exitmonitor r0;

     label03:
        return 0;

     label04:
        $r2 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream in>;

        $z1 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: boolean access$200(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream)>($r2);

        if $z1 == 0 goto label09;

        $r5 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream out>;

        $z2 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: boolean access$300(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream)>($r5);

        if $z2 == 0 goto label09;

        exitmonitor r0;

     label05:
        return 0;

     label06:
        $r7 := @caughtexception;

        r1 = $r7;

     label07:
        exitmonitor r0;

     label08:
        throw r1;

     label09:
        r0.<com.android.okhttp.internal.spdy.SpdyStream: int rstStatusCode> = i0;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r0;

     label10:
        $r3 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyConnection connection>;

        $i2 = r0.<com.android.okhttp.internal.spdy.SpdyStream: int id>;

        virtualinvoke $r3.<com.android.okhttp.internal.spdy.SpdyConnection: com.android.okhttp.internal.spdy.SpdyStream removeStream(int)>($i2);

        return 1;

        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label09 to label10 with label06;
    }

    private java.lang.String rstStatusString()
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r1, $r4;
        java.lang.String[] $r2, $r3;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        $i0 = r0.<com.android.okhttp.internal.spdy.SpdyStream: int rstStatusCode>;

        if $i0 <= 0 goto label1;

        $i3 = r0.<com.android.okhttp.internal.spdy.SpdyStream: int rstStatusCode>;

        $r2 = <com.android.okhttp.internal.spdy.SpdyStream: java.lang.String[] STATUS_CODE_NAMES>;

        $i2 = lengthof $r2;

        if $i3 >= $i2 goto label1;

        $r3 = <com.android.okhttp.internal.spdy.SpdyStream: java.lang.String[] STATUS_CODE_NAMES>;

        $i4 = r0.<com.android.okhttp.internal.spdy.SpdyStream: int rstStatusCode>;

        $r4 = $r3[$i4];

        return $r4;

     label1:
        $i1 = r0.<com.android.okhttp.internal.spdy.SpdyStream: int rstStatusCode>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        return $r1;
    }

    private void setSettings(com.android.okhttp.internal.spdy.Settings)
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        com.android.okhttp.internal.spdy.Settings r1;
        int i0;
        boolean $z0, $z1;
        com.android.okhttp.internal.spdy.SpdyConnection $r2;
        java.lang.AssertionError $r3;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        r1 := @parameter0: com.android.okhttp.internal.spdy.Settings;

        i0 = 65536;

        $z0 = <com.android.okhttp.internal.spdy.SpdyStream: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r2 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyConnection connection>;

        $z1 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>($r2);

        if $z1 != 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        if r1 == null goto label2;

        i0 = virtualinvoke r1.<com.android.okhttp.internal.spdy.Settings: int getInitialWindowSize(int)>(i0);

     label2:
        r0.<com.android.okhttp.internal.spdy.SpdyStream: int writeWindowSize> = i0;

        return;
    }

    public void close(int) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        int i0, $i1;
        boolean $z0;
        com.android.okhttp.internal.spdy.SpdyConnection $r1;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyStream: boolean closeInternal(int)>(i0);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyConnection connection>;

        $i1 = r0.<com.android.okhttp.internal.spdy.SpdyStream: int id>;

        virtualinvoke $r1.<com.android.okhttp.internal.spdy.SpdyConnection: void writeSynReset(int,int)>($i1, i0);

        return;
    }

    public void closeLater(int)
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        int i0, $i1;
        boolean $z0;
        com.android.okhttp.internal.spdy.SpdyConnection $r1;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyStream: boolean closeInternal(int)>(i0);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyConnection connection>;

        $i1 = r0.<com.android.okhttp.internal.spdy.SpdyStream: int id>;

        virtualinvoke $r1.<com.android.okhttp.internal.spdy.SpdyConnection: void writeSynResetLater(int,int)>($i1, i0);

        return;
    }

    public com.android.okhttp.internal.spdy.SpdyConnection getConnection()
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        com.android.okhttp.internal.spdy.SpdyConnection $r1;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        $r1 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyConnection connection>;

        return $r1;
    }

    public java.io.InputStream getInputStream()
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream $r1;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        $r1 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream in>;

        return $r1;
    }

    public java.io.OutputStream getOutputStream()
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        java.lang.Throwable r1, $r5;
        java.util.List $r2;
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream $r3;
        boolean $z0;
        java.lang.IllegalStateException $r4;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.okhttp.internal.spdy.SpdyStream: java.util.List responseHeaders>;

        if $r2 != null goto label5;

        $z0 = virtualinvoke r0.<com.android.okhttp.internal.spdy.SpdyStream: boolean isLocallyInitiated()>();

        if $z0 != 0 goto label5;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("reply before requesting the output stream");

        throw $r4;

     label2:
        $r5 := @caughtexception;

        r1 = $r5;

     label3:
        exitmonitor r0;

     label4:
        throw r1;

     label5:
        exitmonitor r0;

     label6:
        $r3 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream out>;

        return $r3;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.Throwable from label5 to label6 with label2;
    }

    int getPriority()
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        int $i0;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        $i0 = r0.<com.android.okhttp.internal.spdy.SpdyStream: int priority>;

        return $i0;
    }

    public long getReadTimeoutMillis()
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        long $l0;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        $l0 = r0.<com.android.okhttp.internal.spdy.SpdyStream: long readTimeoutMillis>;

        return $l0;
    }

    public java.util.List getRequestHeaders()
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        java.util.List $r1;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        $r1 = r0.<com.android.okhttp.internal.spdy.SpdyStream: java.util.List requestHeaders>;

        return $r1;
    }

    public java.util.List getResponseHeaders() throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        java.lang.Throwable r1, $r13;
        java.lang.InterruptedException r2, $r14;
        java.io.InterruptedIOException r3, $r16;
        java.util.List r4, $r5, $r6;
        java.io.IOException $r7;
        java.lang.StringBuilder $r8, $r9, $r11;
        java.lang.String $r10, $r12;
        int $i0;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        entermonitor r0;

     label1:
        $r5 = r0.<com.android.okhttp.internal.spdy.SpdyStream: java.util.List responseHeaders>;

        if $r5 != null goto label6;

        $i0 = r0.<com.android.okhttp.internal.spdy.SpdyStream: int rstStatusCode>;

        if $i0 != -1 goto label6;

        virtualinvoke r0.<java.lang.Object: void wait()>();

     label2:
        goto label1;

     label3:
        $r14 := @caughtexception;

        r2 = $r14;

     label4:
        $r16 = new java.io.InterruptedIOException;

        specialinvoke $r16.<java.io.InterruptedIOException: void <init>()>();

        r3 = $r16;

        virtualinvoke r3.<java.io.InterruptedIOException: java.lang.Throwable initCause(java.lang.Throwable)>(r2);

        throw r3;

     label5:
        $r13 := @caughtexception;

        r1 = $r13;

        exitmonitor r0;

        throw r1;

     label6:
        $r6 = r0.<com.android.okhttp.internal.spdy.SpdyStream: java.util.List responseHeaders>;

        if $r6 == null goto label8;

        r4 = r0.<com.android.okhttp.internal.spdy.SpdyStream: java.util.List responseHeaders>;

     label7:
        exitmonitor r0;

        return r4;

     label8:
        $r7 = new java.io.IOException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stream was reset: ");

        $r10 = specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyStream: java.lang.String rstStatusString()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>($r12);

        throw $r7;

     label9:
        nop;

        catch java.lang.InterruptedException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label4 to label5 with label5;
        catch java.lang.InterruptedException from label6 to label7 with label3;
        catch java.lang.Throwable from label6 to label7 with label5;
        catch java.lang.InterruptedException from label8 to label9 with label3;
        catch java.lang.Throwable from label8 to label9 with label5;
    }

    public int getRstStatusCode()
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        java.lang.Throwable r1, $r2;
        int i0;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        entermonitor r0;

     label1:
        i0 = r0.<com.android.okhttp.internal.spdy.SpdyStream: int rstStatusCode>;

     label2:
        exitmonitor r0;

        return i0;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    int getSlot()
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        int $i0;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        $i0 = r0.<com.android.okhttp.internal.spdy.SpdyStream: int slot>;

        return $i0;
    }

    public boolean isLocallyInitiated()
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        boolean z0, $z1;
        int $i0, $i1;
        com.android.okhttp.internal.spdy.SpdyConnection $r1;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        $i0 = r0.<com.android.okhttp.internal.spdy.SpdyStream: int id>;

        $i1 = $i0 % 2;

        if $i1 != 1 goto label2;

        z0 = 1;

     label1:
        $r1 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyConnection connection>;

        $z1 = $r1.<com.android.okhttp.internal.spdy.SpdyConnection: boolean client>;

        if $z1 != z0 goto label3;

        return 1;

     label2:
        z0 = 0;

        goto label1;

     label3:
        return 0;
    }

    public boolean isOpen()
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        java.lang.Throwable r1, $r7;
        int i0;
        boolean z0, $z1, $z2, $z3, $z4;
        java.util.List r2;
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream $r3, $r6;
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream $r4, $r5;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        entermonitor r0;

     label1:
        i0 = r0.<com.android.okhttp.internal.spdy.SpdyStream: int rstStatusCode>;

     label2:
        z0 = 0;

        if i0 == -1 goto label4;

     label3:
        exitmonitor r0;

        return z0;

     label4:
        $r3 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream in>;

        $z1 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: boolean access$200(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream)>($r3);

        if $z1 != 0 goto label5;

        $r6 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream in>;

        $z4 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: boolean access$400(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream)>($r6);

        if $z4 == 0 goto label8;

     label5:
        $r4 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream out>;

        $z2 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: boolean access$300(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream)>($r4);

        if $z2 != 0 goto label6;

        $r5 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream out>;

        $z3 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: boolean access$500(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream)>($r5);

        if $z3 == 0 goto label8;

     label6:
        r2 = r0.<com.android.okhttp.internal.spdy.SpdyStream: java.util.List responseHeaders>;

     label7:
        z0 = 0;

        if r2 != null goto label3;

     label8:
        z0 = 1;

        goto label3;

     label9:
        $r7 := @caughtexception;

        r1 = $r7;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label4 to label5 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
    }

    void receiveData(java.io.InputStream, int) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        java.io.InputStream r1;
        int i0;
        boolean $z0, $z1;
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream $r2;
        java.lang.AssertionError $r3;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        r1 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        $z0 = <com.android.okhttp.internal.spdy.SpdyStream: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>(r0);

        if $z1 == 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $r2 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream in>;

        virtualinvoke $r2.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: void receive(java.io.InputStream,int)>(r1, i0);

        return;
    }

    void receiveFin()
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        java.lang.Throwable r1, $r6;
        boolean z0, $z1, $z3;
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream $r2;
        int $i0;
        com.android.okhttp.internal.spdy.SpdyConnection $r3;
        java.lang.AssertionError $r5;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        $z1 = <com.android.okhttp.internal.spdy.SpdyStream: boolean $assertionsDisabled>;

        if $z1 != 0 goto label1;

        $z3 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>(r0);

        if $z3 == 0 goto label1;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label1:
        entermonitor r0;

     label2:
        $r2 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream in>;

        staticinvoke <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream: boolean access$202(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream,boolean)>($r2, 1);

        z0 = virtualinvoke r0.<com.android.okhttp.internal.spdy.SpdyStream: boolean isOpen()>();

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r0;

     label3:
        if z0 != 0 goto label4;

        $r3 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyConnection connection>;

        $i0 = r0.<com.android.okhttp.internal.spdy.SpdyStream: int id>;

        virtualinvoke $r3.<com.android.okhttp.internal.spdy.SpdyConnection: com.android.okhttp.internal.spdy.SpdyStream removeStream(int)>($i0);

     label4:
        return;

     label5:
        $r6 := @caughtexception;

        r1 = $r6;

     label6:
        exitmonitor r0;

     label7:
        throw r1;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    void receiveHeaders(java.util.List) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        java.util.List r1, $r4, $r6;
        boolean z0, $z1, $z4;
        java.lang.Throwable r2, $r8;
        java.util.ArrayList r3, $r5;
        java.lang.AssertionError $r7;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        r1 := @parameter0: java.util.List;

        $z1 = <com.android.okhttp.internal.spdy.SpdyStream: boolean $assertionsDisabled>;

        if $z1 != 0 goto label1;

        $z4 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>(r0);

        if $z4 == 0 goto label1;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label1:
        z0 = 0;

        entermonitor r0;

     label2:
        $r4 = r0.<com.android.okhttp.internal.spdy.SpdyStream: java.util.List responseHeaders>;

        if $r4 == null goto label6;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r3 = $r5;

        $r6 = r0.<com.android.okhttp.internal.spdy.SpdyStream: java.util.List responseHeaders>;

        interfaceinvoke r3.<java.util.List: boolean addAll(java.util.Collection)>($r6);

        interfaceinvoke r3.<java.util.List: boolean addAll(java.util.Collection)>(r1);

        r0.<com.android.okhttp.internal.spdy.SpdyStream: java.util.List responseHeaders> = r3;

     label3:
        exitmonitor r0;

     label4:
        if z0 == 0 goto label5;

        virtualinvoke r0.<com.android.okhttp.internal.spdy.SpdyStream: void closeLater(int)>(1);

     label5:
        return;

     label6:
        z0 = 1;

        goto label3;

     label7:
        $r8 := @caughtexception;

        r2 = $r8;

     label8:
        exitmonitor r0;

     label9:
        throw r2;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    void receiveReply(java.util.List) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        java.util.List r1, $r5;
        boolean z0, z1, $z2, $z3, $z4;
        java.lang.Throwable r2, $r7;
        int $i0;
        com.android.okhttp.internal.spdy.SpdyConnection $r3;
        java.lang.AssertionError $r6;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        r1 := @parameter0: java.util.List;

        $z2 = <com.android.okhttp.internal.spdy.SpdyStream: boolean $assertionsDisabled>;

        if $z2 != 0 goto label01;

        $z4 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>(r0);

        if $z4 == 0 goto label01;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label01:
        z0 = 0;

        z1 = 1;

        entermonitor r0;

     label02:
        $z3 = virtualinvoke r0.<com.android.okhttp.internal.spdy.SpdyStream: boolean isLocallyInitiated()>();

        if $z3 == 0 goto label06;

        $r5 = r0.<com.android.okhttp.internal.spdy.SpdyStream: java.util.List responseHeaders>;

        if $r5 != null goto label06;

        r0.<com.android.okhttp.internal.spdy.SpdyStream: java.util.List responseHeaders> = r1;

        z1 = virtualinvoke r0.<com.android.okhttp.internal.spdy.SpdyStream: boolean isOpen()>();

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

     label03:
        exitmonitor r0;

     label04:
        if z0 == 0 goto label10;

        virtualinvoke r0.<com.android.okhttp.internal.spdy.SpdyStream: void closeLater(int)>(8);

     label05:
        return;

     label06:
        z0 = 1;

        goto label03;

     label07:
        $r7 := @caughtexception;

        r2 = $r7;

     label08:
        exitmonitor r0;

     label09:
        throw r2;

     label10:
        if z1 != 0 goto label05;

        $r3 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyConnection connection>;

        $i0 = r0.<com.android.okhttp.internal.spdy.SpdyStream: int id>;

        virtualinvoke $r3.<com.android.okhttp.internal.spdy.SpdyConnection: com.android.okhttp.internal.spdy.SpdyStream removeStream(int)>($i0);

        return;

        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
    }

    void receiveRstStream(int)
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        int i0, $i1;
        java.lang.Throwable r1, $r2;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        $i1 = r0.<com.android.okhttp.internal.spdy.SpdyStream: int rstStatusCode>;

        if $i1 != -1 goto label2;

        r0.<com.android.okhttp.internal.spdy.SpdyStream: int rstStatusCode> = i0;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void receiveSettings(com.android.okhttp.internal.spdy.Settings)
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        com.android.okhttp.internal.spdy.Settings r1;
        boolean $z0, $z1;
        java.lang.AssertionError $r2;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        r1 := @parameter0: com.android.okhttp.internal.spdy.Settings;

        $z0 = <com.android.okhttp.internal.spdy.SpdyStream: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>(r0);

        if $z1 != 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyStream: void setSettings(com.android.okhttp.internal.spdy.Settings)>(r1);

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        return;
    }

    void receiveWindowUpdate(int)
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        int i0;
        java.lang.Throwable r1, $r3;
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream $r2;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream out>;

        staticinvoke <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: int access$620(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream,int)>($r2, i0);

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void reply(java.util.List, boolean) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        java.util.List r1, $r3;
        boolean z0, $z1, $z2, $z4;
        byte b0;
        java.lang.Throwable r2, $r10;
        int $i1;
        com.android.okhttp.internal.spdy.SpdyConnection $r4;
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream $r5;
        java.lang.IllegalStateException $r6, $r8;
        java.lang.NullPointerException $r7;
        java.lang.AssertionError $r9;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        r1 := @parameter0: java.util.List;

        z0 := @parameter1: boolean;

        $z1 = <com.android.okhttp.internal.spdy.SpdyStream: boolean $assertionsDisabled>;

        if $z1 != 0 goto label01;

        $z4 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>(r0);

        if $z4 == 0 goto label01;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label01:
        entermonitor r0;

        if r1 != null goto label06;

     label02:
        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("responseHeaders == null");

        throw $r7;

     label03:
        $r10 := @caughtexception;

        r2 = $r10;

     label04:
        exitmonitor r0;

     label05:
        throw r2;

     label06:
        $z2 = virtualinvoke r0.<com.android.okhttp.internal.spdy.SpdyStream: boolean isLocallyInitiated()>();

        if $z2 == 0 goto label07;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("cannot reply to a locally initiated stream");

        throw $r8;

     label07:
        $r3 = r0.<com.android.okhttp.internal.spdy.SpdyStream: java.util.List responseHeaders>;

        if $r3 == null goto label08;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("reply already sent");

        throw $r6;

     label08:
        r0.<com.android.okhttp.internal.spdy.SpdyStream: java.util.List responseHeaders> = r1;

     label09:
        b0 = 0;

        if z0 != 0 goto label12;

     label10:
        $r5 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream out>;

        staticinvoke <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: boolean access$302(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream,boolean)>($r5, 1);

     label11:
        b0 = 0 | 1;

     label12:
        exitmonitor r0;

     label13:
        $r4 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyConnection connection>;

        $i1 = r0.<com.android.okhttp.internal.spdy.SpdyStream: int id>;

        virtualinvoke $r4.<com.android.okhttp.internal.spdy.SpdyConnection: void writeSynReply(int,int,java.util.List)>($i1, b0, r1);

        return;

        catch java.lang.Throwable from label02 to label03 with label03;
        catch java.lang.Throwable from label04 to label05 with label03;
        catch java.lang.Throwable from label06 to label07 with label03;
        catch java.lang.Throwable from label07 to label08 with label03;
        catch java.lang.Throwable from label08 to label09 with label03;
        catch java.lang.Throwable from label10 to label11 with label03;
        catch java.lang.Throwable from label12 to label13 with label03;
    }

    public void setReadTimeout(long)
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        long l0;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        l0 := @parameter0: long;

        r0.<com.android.okhttp.internal.spdy.SpdyStream: long readTimeoutMillis> = l0;

        return;
    }
}
