public final class libcore.icu.RuleBasedCollatorICU extends java.lang.Object implements java.lang.Cloneable
{
    public static final int ALTERNATE_HANDLING;
    public static final int CASE_FIRST;
    public static final int CASE_LEVEL;
    public static final int DECOMPOSITION_MODE;
    public static final int FRENCH_COLLATION;
    public static final int STRENGTH;
    public static final int VALUE_ATTRIBUTE_VALUE_COUNT;
    public static final int VALUE_DEFAULT;
    public static final int VALUE_DEFAULT_STRENGTH;
    public static final int VALUE_IDENTICAL;
    public static final int VALUE_LOWER_FIRST;
    public static final int VALUE_NON_IGNORABLE;
    public static final int VALUE_OFF;
    public static final int VALUE_ON;
    public static final int VALUE_ON_WITHOUT_HANGUL;
    public static final int VALUE_PRIMARY;
    public static final int VALUE_QUATERNARY;
    public static final int VALUE_SECONDARY;
    public static final int VALUE_SHIFTED;
    public static final int VALUE_TERTIARY;
    public static final int VALUE_UPPER_FIRST;
    private final long address;

    private void <init>(long)
    {
        libcore.icu.RuleBasedCollatorICU r0;
        long l0;

        r0 := @this: libcore.icu.RuleBasedCollatorICU;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<libcore.icu.RuleBasedCollatorICU: long address> = l0;

        return;
    }

    public void <init>(java.lang.String) throws java.text.ParseException
    {
        libcore.icu.RuleBasedCollatorICU r0;
        java.lang.String r1;
        long $l0;
        java.lang.NullPointerException $r2;

        r0 := @this: libcore.icu.RuleBasedCollatorICU;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("rules == null");

        throw $r2;

     label1:
        $l0 = staticinvoke <libcore.icu.NativeCollation: long openCollatorFromRules(java.lang.String,int,int)>(r1, 16, 2);

        r0.<libcore.icu.RuleBasedCollatorICU: long address> = $l0;

        return;
    }

    public void <init>(java.util.Locale)
    {
        libcore.icu.RuleBasedCollatorICU r0;
        java.util.Locale r1;
        java.lang.String $r2;
        long $l0;

        r0 := @this: libcore.icu.RuleBasedCollatorICU;

        r1 := @parameter0: java.util.Locale;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<java.util.Locale: java.lang.String toString()>();

        $l0 = staticinvoke <libcore.icu.NativeCollation: long openCollator(java.lang.String)>($r2);

        r0.<libcore.icu.RuleBasedCollatorICU: long address> = $l0;

        return;
    }

    private java.lang.String characterIteratorToString(java.text.CharacterIterator)
    {
        libcore.icu.RuleBasedCollatorICU r0;
        java.text.CharacterIterator r1;
        java.lang.StringBuilder r2, $r3;
        char c0;
        java.lang.String $r4;

        r0 := @this: libcore.icu.RuleBasedCollatorICU;

        r1 := @parameter0: java.text.CharacterIterator;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r2 = $r3;

        c0 = interfaceinvoke r1.<java.text.CharacterIterator: char current()>();

     label1:
        if c0 == 65535 goto label2;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        c0 = interfaceinvoke r1.<java.text.CharacterIterator: char next()>();

        goto label1;

     label2:
        $r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public java.lang.Object clone()
    {
        libcore.icu.RuleBasedCollatorICU r0, $r1;
        long $l0, $l1;

        r0 := @this: libcore.icu.RuleBasedCollatorICU;

        $r1 = new libcore.icu.RuleBasedCollatorICU;

        $l0 = r0.<libcore.icu.RuleBasedCollatorICU: long address>;

        $l1 = staticinvoke <libcore.icu.NativeCollation: long safeClone(long)>($l0);

        specialinvoke $r1.<libcore.icu.RuleBasedCollatorICU: void <init>(long)>($l1);

        return $r1;
    }

    public int compare(java.lang.String, java.lang.String)
    {
        libcore.icu.RuleBasedCollatorICU r0;
        java.lang.String r1, r2;
        long $l0;
        int $i1;

        r0 := @this: libcore.icu.RuleBasedCollatorICU;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $l0 = r0.<libcore.icu.RuleBasedCollatorICU: long address>;

        $i1 = staticinvoke <libcore.icu.NativeCollation: int compare(long,java.lang.String,java.lang.String)>($l0, r1, r2);

        return $i1;
    }

    public boolean equals(java.lang.Object)
    {
        libcore.icu.RuleBasedCollatorICU r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.lang.String $r3, $r4;
        int $i0, $i1, $i2, $i3;

        r0 := @this: libcore.icu.RuleBasedCollatorICU;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label2;

     label1:
        return 1;

     label2:
        $z0 = r1 instanceof libcore.icu.RuleBasedCollatorICU;

        if $z0 != 0 goto label3;

        return 0;

     label3:
        r2 = (libcore.icu.RuleBasedCollatorICU) r1;

        $r3 = virtualinvoke r0.<libcore.icu.RuleBasedCollatorICU: java.lang.String getRules()>();

        $r4 = virtualinvoke r2.<libcore.icu.RuleBasedCollatorICU: java.lang.String getRules()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label4;

        $i0 = virtualinvoke r0.<libcore.icu.RuleBasedCollatorICU: int getStrength()>();

        $i1 = virtualinvoke r2.<libcore.icu.RuleBasedCollatorICU: int getStrength()>();

        if $i0 != $i1 goto label4;

        $i2 = virtualinvoke r0.<libcore.icu.RuleBasedCollatorICU: int getDecomposition()>();

        $i3 = virtualinvoke r2.<libcore.icu.RuleBasedCollatorICU: int getDecomposition()>();

        if $i2 == $i3 goto label1;

     label4:
        return 0;
    }

    public boolean equals(java.lang.String, java.lang.String)
    {
        libcore.icu.RuleBasedCollatorICU r0;
        java.lang.String r1, r2;
        int $i0;

        r0 := @this: libcore.icu.RuleBasedCollatorICU;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<libcore.icu.RuleBasedCollatorICU: int compare(java.lang.String,java.lang.String)>(r1, r2);

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected void finalize() throws java.lang.Throwable
    {
        libcore.icu.RuleBasedCollatorICU r0;
        java.lang.Throwable r1, $r2;
        long $l0;

        r0 := @this: libcore.icu.RuleBasedCollatorICU;

     label1:
        $l0 = r0.<libcore.icu.RuleBasedCollatorICU: long address>;

        staticinvoke <libcore.icu.NativeCollation: void closeCollator(long)>($l0);

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getAttribute(int)
    {
        libcore.icu.RuleBasedCollatorICU r0;
        int i0, $i2;
        long $l1;

        r0 := @this: libcore.icu.RuleBasedCollatorICU;

        i0 := @parameter0: int;

        $l1 = r0.<libcore.icu.RuleBasedCollatorICU: long address>;

        $i2 = staticinvoke <libcore.icu.NativeCollation: int getAttribute(long,int)>($l1, i0);

        return $i2;
    }

    public libcore.icu.CollationElementIteratorICU getCollationElementIterator(java.lang.String)
    {
        libcore.icu.RuleBasedCollatorICU r0;
        java.lang.String r1;
        long $l0;
        libcore.icu.CollationElementIteratorICU $r2;

        r0 := @this: libcore.icu.RuleBasedCollatorICU;

        r1 := @parameter0: java.lang.String;

        $l0 = r0.<libcore.icu.RuleBasedCollatorICU: long address>;

        $r2 = staticinvoke <libcore.icu.CollationElementIteratorICU: libcore.icu.CollationElementIteratorICU getInstance(long,java.lang.String)>($l0, r1);

        return $r2;
    }

    public libcore.icu.CollationElementIteratorICU getCollationElementIterator(java.text.CharacterIterator)
    {
        libcore.icu.RuleBasedCollatorICU r0;
        java.text.CharacterIterator r1;
        java.lang.String $r2;
        libcore.icu.CollationElementIteratorICU $r3;

        r0 := @this: libcore.icu.RuleBasedCollatorICU;

        r1 := @parameter0: java.text.CharacterIterator;

        $r2 = specialinvoke r0.<libcore.icu.RuleBasedCollatorICU: java.lang.String characterIteratorToString(java.text.CharacterIterator)>(r1);

        $r3 = virtualinvoke r0.<libcore.icu.RuleBasedCollatorICU: libcore.icu.CollationElementIteratorICU getCollationElementIterator(java.lang.String)>($r2);

        return $r3;
    }

    public java.text.CollationKey getCollationKey(java.lang.String)
    {
        libcore.icu.RuleBasedCollatorICU r0;
        java.lang.String r1;
        byte[] r2;
        long $l0;
        libcore.icu.CollationKeyICU $r3;

        r0 := @this: libcore.icu.RuleBasedCollatorICU;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label2;

     label1:
        return null;

     label2:
        $l0 = r0.<libcore.icu.RuleBasedCollatorICU: long address>;

        r2 = staticinvoke <libcore.icu.NativeCollation: byte[] getSortKey(long,java.lang.String)>($l0, r1);

        if r2 == null goto label1;

        $r3 = new libcore.icu.CollationKeyICU;

        specialinvoke $r3.<libcore.icu.CollationKeyICU: void <init>(java.lang.String,byte[])>(r1, r2);

        return $r3;
    }

    public int getDecomposition()
    {
        libcore.icu.RuleBasedCollatorICU r0;
        long $l0;
        int $i1;

        r0 := @this: libcore.icu.RuleBasedCollatorICU;

        $l0 = r0.<libcore.icu.RuleBasedCollatorICU: long address>;

        $i1 = staticinvoke <libcore.icu.NativeCollation: int getAttribute(long,int)>($l0, 4);

        return $i1;
    }

    public java.lang.String getRules()
    {
        libcore.icu.RuleBasedCollatorICU r0;
        long $l0;
        java.lang.String $r1;

        r0 := @this: libcore.icu.RuleBasedCollatorICU;

        $l0 = r0.<libcore.icu.RuleBasedCollatorICU: long address>;

        $r1 = staticinvoke <libcore.icu.NativeCollation: java.lang.String getRules(long)>($l0);

        return $r1;
    }

    public int getStrength()
    {
        libcore.icu.RuleBasedCollatorICU r0;
        long $l0;
        int $i1;

        r0 := @this: libcore.icu.RuleBasedCollatorICU;

        $l0 = r0.<libcore.icu.RuleBasedCollatorICU: long address>;

        $i1 = staticinvoke <libcore.icu.NativeCollation: int getAttribute(long,int)>($l0, 5);

        return $i1;
    }

    public int hashCode()
    {
        libcore.icu.RuleBasedCollatorICU r0;

        r0 := @this: libcore.icu.RuleBasedCollatorICU;

        return 42;
    }

    public void setAttribute(int, int)
    {
        libcore.icu.RuleBasedCollatorICU r0;
        int i0, i1;
        long $l2;

        r0 := @this: libcore.icu.RuleBasedCollatorICU;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $l2 = r0.<libcore.icu.RuleBasedCollatorICU: long address>;

        staticinvoke <libcore.icu.NativeCollation: void setAttribute(long,int,int)>($l2, i0, i1);

        return;
    }

    public void setDecomposition(int)
    {
        libcore.icu.RuleBasedCollatorICU r0;
        int i0;
        long $l1;

        r0 := @this: libcore.icu.RuleBasedCollatorICU;

        i0 := @parameter0: int;

        $l1 = r0.<libcore.icu.RuleBasedCollatorICU: long address>;

        staticinvoke <libcore.icu.NativeCollation: void setAttribute(long,int,int)>($l1, 4, i0);

        return;
    }

    public void setStrength(int)
    {
        libcore.icu.RuleBasedCollatorICU r0;
        int i0;
        long $l1;

        r0 := @this: libcore.icu.RuleBasedCollatorICU;

        i0 := @parameter0: int;

        $l1 = r0.<libcore.icu.RuleBasedCollatorICU: long address>;

        staticinvoke <libcore.icu.NativeCollation: void setAttribute(long,int,int)>($l1, 5, i0);

        return;
    }

    public static void <clinit>()
    {
        <libcore.icu.RuleBasedCollatorICU: int VALUE_UPPER_FIRST> = 25;

        <libcore.icu.RuleBasedCollatorICU: int VALUE_TERTIARY> = 2;

        <libcore.icu.RuleBasedCollatorICU: int VALUE_SHIFTED> = 20;

        <libcore.icu.RuleBasedCollatorICU: int VALUE_SECONDARY> = 1;

        <libcore.icu.RuleBasedCollatorICU: int VALUE_QUATERNARY> = 3;

        <libcore.icu.RuleBasedCollatorICU: int VALUE_PRIMARY> = 0;

        <libcore.icu.RuleBasedCollatorICU: int VALUE_ON_WITHOUT_HANGUL> = 28;

        <libcore.icu.RuleBasedCollatorICU: int VALUE_ON> = 17;

        <libcore.icu.RuleBasedCollatorICU: int VALUE_OFF> = 16;

        <libcore.icu.RuleBasedCollatorICU: int VALUE_NON_IGNORABLE> = 21;

        <libcore.icu.RuleBasedCollatorICU: int VALUE_LOWER_FIRST> = 24;

        <libcore.icu.RuleBasedCollatorICU: int VALUE_IDENTICAL> = 15;

        <libcore.icu.RuleBasedCollatorICU: int VALUE_DEFAULT_STRENGTH> = 2;

        <libcore.icu.RuleBasedCollatorICU: int VALUE_DEFAULT> = -1;

        <libcore.icu.RuleBasedCollatorICU: int VALUE_ATTRIBUTE_VALUE_COUNT> = 29;

        <libcore.icu.RuleBasedCollatorICU: int STRENGTH> = 5;

        <libcore.icu.RuleBasedCollatorICU: int FRENCH_COLLATION> = 0;

        <libcore.icu.RuleBasedCollatorICU: int DECOMPOSITION_MODE> = 4;

        <libcore.icu.RuleBasedCollatorICU: int CASE_LEVEL> = 3;

        <libcore.icu.RuleBasedCollatorICU: int CASE_FIRST> = 2;

        <libcore.icu.RuleBasedCollatorICU: int ALTERNATE_HANDLING> = 1;

        return;
    }
}
