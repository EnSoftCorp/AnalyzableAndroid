public class org.apache.xalan.transformer.KeyTable extends java.lang.Object
{
    private int m_docKey;
    private java.util.Vector m_keyDeclarations;
    private org.apache.xpath.objects.XNodeSet m_keyNodes;
    private java.util.Hashtable m_refsTable;

    public void <init>(int, org.apache.xml.utils.PrefixResolver, org.apache.xml.utils.QName, java.util.Vector, org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.transformer.KeyTable r0;
        int i0;
        org.apache.xml.utils.PrefixResolver r1;
        org.apache.xml.utils.QName r2;
        java.util.Vector r3;
        org.apache.xpath.XPathContext r4;
        org.apache.xpath.objects.XNodeSet $r5, $r7, $r8;
        org.apache.xalan.transformer.KeyIterator $r6;

        r0 := @this: org.apache.xalan.transformer.KeyTable;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.xml.utils.PrefixResolver;

        r2 := @parameter2: org.apache.xml.utils.QName;

        r3 := @parameter3: java.util.Vector;

        r4 := @parameter4: org.apache.xpath.XPathContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xalan.transformer.KeyTable: java.util.Hashtable m_refsTable> = null;

        r0.<org.apache.xalan.transformer.KeyTable: int m_docKey> = i0;

        r0.<org.apache.xalan.transformer.KeyTable: java.util.Vector m_keyDeclarations> = r3;

        $r5 = new org.apache.xpath.objects.XNodeSet;

        $r6 = new org.apache.xalan.transformer.KeyIterator;

        specialinvoke $r6.<org.apache.xalan.transformer.KeyIterator: void <init>(org.apache.xml.utils.QName,java.util.Vector)>(r2, r3);

        specialinvoke $r5.<org.apache.xpath.objects.XNodeSet: void <init>(org.apache.xml.dtm.DTMIterator)>($r6);

        r0.<org.apache.xalan.transformer.KeyTable: org.apache.xpath.objects.XNodeSet m_keyNodes> = $r5;

        $r7 = r0.<org.apache.xalan.transformer.KeyTable: org.apache.xpath.objects.XNodeSet m_keyNodes>;

        virtualinvoke $r7.<org.apache.xpath.objects.XNodeSet: void allowDetachToRelease(boolean)>(0);

        $r8 = r0.<org.apache.xalan.transformer.KeyTable: org.apache.xpath.objects.XNodeSet m_keyNodes>;

        virtualinvoke $r8.<org.apache.xpath.objects.XNodeSet: void setRoot(int,java.lang.Object)>(i0, r4);

        return;
    }

    private void addValueInRefsTable(org.apache.xpath.XPathContext, org.apache.xml.utils.XMLString, int)
    {
        org.apache.xalan.transformer.KeyTable r0;
        org.apache.xpath.XPathContext r1;
        org.apache.xml.utils.XMLString r2;
        int i0, $i1;
        org.apache.xpath.objects.XNodeSet r3, r4, $r8;
        java.util.Hashtable $r5, $r10;
        java.lang.Object $r6;
        org.apache.xpath.NodeSetDTM $r7;
        org.apache.xml.dtm.DTMManager $r9;

        r0 := @this: org.apache.xalan.transformer.KeyTable;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        r2 := @parameter1: org.apache.xml.utils.XMLString;

        i0 := @parameter2: int;

        $r5 = r0.<org.apache.xalan.transformer.KeyTable: java.util.Hashtable m_refsTable>;

        $r6 = virtualinvoke $r5.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r2);

        r3 = (org.apache.xpath.objects.XNodeSet) $r6;

        if r3 != null goto label2;

        $r8 = new org.apache.xpath.objects.XNodeSet;

        $r9 = virtualinvoke r1.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMManager getDTMManager()>();

        specialinvoke $r8.<org.apache.xpath.objects.XNodeSet: void <init>(int,org.apache.xml.dtm.DTMManager)>(i0, $r9);

        r4 = $r8;

        virtualinvoke r4.<org.apache.xpath.objects.XNodeSet: int nextNode()>();

        $r10 = r0.<org.apache.xalan.transformer.KeyTable: java.util.Hashtable m_refsTable>;

        virtualinvoke $r10.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r4);

     label1:
        return;

     label2:
        $i1 = virtualinvoke r3.<org.apache.xpath.objects.XNodeSet: int getCurrentNode()>();

        if $i1 == i0 goto label1;

        $r7 = virtualinvoke r3.<org.apache.xpath.objects.XNodeSet: org.apache.xpath.NodeSetDTM mutableNodeset()>();

        virtualinvoke $r7.<org.apache.xpath.NodeSetDTM: void addNode(int)>(i0);

        virtualinvoke r3.<org.apache.xpath.objects.XNodeSet: int nextNode()>();

        return;
    }

    private java.util.Vector getKeyDeclarations()
    {
        org.apache.xalan.transformer.KeyTable r0;
        int i0, i1;
        java.util.Vector r1, $r3, $r4, $r5;
        org.apache.xalan.templates.KeyDeclaration r2;
        java.lang.Object $r6;
        org.apache.xml.utils.QName $r7, $r8;
        boolean $z0;

        r0 := @this: org.apache.xalan.transformer.KeyTable;

        $r3 = r0.<org.apache.xalan.transformer.KeyTable: java.util.Vector m_keyDeclarations>;

        i0 = virtualinvoke $r3.<java.util.Vector: int size()>();

        $r4 = new java.util.Vector;

        specialinvoke $r4.<java.util.Vector: void <init>(int)>(i0);

        r1 = $r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r5 = r0.<org.apache.xalan.transformer.KeyTable: java.util.Vector m_keyDeclarations>;

        $r6 = virtualinvoke $r5.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        r2 = (org.apache.xalan.templates.KeyDeclaration) $r6;

        $r7 = virtualinvoke r2.<org.apache.xalan.templates.KeyDeclaration: org.apache.xml.utils.QName getName()>();

        $r8 = virtualinvoke r0.<org.apache.xalan.transformer.KeyTable: org.apache.xml.utils.QName getKeyTableName()>();

        $z0 = virtualinvoke $r7.<org.apache.xml.utils.QName: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label2;

        virtualinvoke r1.<java.util.Vector: boolean add(java.lang.Object)>(r2);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return r1;
    }

    private java.util.Hashtable getRefsTable()
    {
        org.apache.xalan.transformer.KeyTable r0;
        org.apache.xalan.transformer.KeyIterator r1;
        org.apache.xpath.XPathContext r2;
        java.util.Vector r3;
        int i0, i1, i2, i3, $i4;
        javax.xml.transform.TransformerException r4, $r20;
        org.apache.xpath.objects.XObject r5;
        org.apache.xml.dtm.DTMIterator r6, $r11;
        java.util.Hashtable $r7, $r8, $r9;
        org.apache.xpath.objects.XNodeSet $r10, $r12, $r13, $r18;
        org.apache.xalan.templates.KeyDeclaration $r14;
        java.lang.Object $r15;
        org.apache.xml.utils.PrefixResolver $r16;
        org.apache.xpath.XPath $r17;
        org.apache.xml.dtm.DTM $r19;
        org.apache.xml.utils.WrappedRuntimeException $r21;
        org.apache.xml.utils.XMLString $r22, $r23;

        r0 := @this: org.apache.xalan.transformer.KeyTable;

        $r7 = r0.<org.apache.xalan.transformer.KeyTable: java.util.Hashtable m_refsTable>;

        if $r7 != null goto label11;

        $r9 = new java.util.Hashtable;

        specialinvoke $r9.<java.util.Hashtable: void <init>(int)>(89);

        r0.<org.apache.xalan.transformer.KeyTable: java.util.Hashtable m_refsTable> = $r9;

        $r10 = r0.<org.apache.xalan.transformer.KeyTable: org.apache.xpath.objects.XNodeSet m_keyNodes>;

        $r11 = virtualinvoke $r10.<org.apache.xpath.objects.XNodeSet: org.apache.xml.dtm.DTMIterator getContainedIter()>();

        r1 = (org.apache.xalan.transformer.KeyIterator) $r11;

        r2 = virtualinvoke r1.<org.apache.xalan.transformer.KeyIterator: org.apache.xpath.XPathContext getXPathContext()>();

        r3 = specialinvoke r0.<org.apache.xalan.transformer.KeyTable: java.util.Vector getKeyDeclarations()>();

        i0 = virtualinvoke r3.<java.util.Vector: int size()>();

        $r12 = r0.<org.apache.xalan.transformer.KeyTable: org.apache.xpath.objects.XNodeSet m_keyNodes>;

        virtualinvoke $r12.<org.apache.xpath.objects.XNodeSet: void reset()>();

     label01:
        $r13 = r0.<org.apache.xalan.transformer.KeyTable: org.apache.xpath.objects.XNodeSet m_keyNodes>;

        i1 = virtualinvoke $r13.<org.apache.xpath.objects.XNodeSet: int nextNode()>();

        if -1 == i1 goto label11;

        i2 = 0;

     label02:
        if i2 >= i0 goto label01;

     label03:
        $r15 = virtualinvoke r3.<java.util.Vector: java.lang.Object elementAt(int)>(i2);

        $r14 = (org.apache.xalan.templates.KeyDeclaration) $r15;

        $r17 = virtualinvoke $r14.<org.apache.xalan.templates.KeyDeclaration: org.apache.xpath.XPath getUse()>();

        $r16 = virtualinvoke r1.<org.apache.xalan.transformer.KeyIterator: org.apache.xml.utils.PrefixResolver getPrefixResolver()>();

        r5 = virtualinvoke $r17.<org.apache.xpath.XPath: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)>(r2, i1, $r16);

        $i4 = virtualinvoke r5.<org.apache.xpath.objects.XObject: int getType()>();

        if $i4 == 4 goto label05;

        $r23 = virtualinvoke r5.<org.apache.xpath.objects.XObject: org.apache.xml.utils.XMLString xstr()>();

        specialinvoke r0.<org.apache.xalan.transformer.KeyTable: void addValueInRefsTable(org.apache.xpath.XPathContext,org.apache.xml.utils.XMLString,int)>(r2, $r23, i1);

     label04:
        goto label12;

     label05:
        $r18 = (org.apache.xpath.objects.XNodeSet) r5;

        r6 = virtualinvoke $r18.<org.apache.xpath.objects.XNodeSet: org.apache.xml.dtm.DTMIterator iterRaw()>();

     label06:
        i3 = interfaceinvoke r6.<org.apache.xml.dtm.DTMIterator: int nextNode()>();

     label07:
        if -1 == i3 goto label12;

     label08:
        $r19 = virtualinvoke r2.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>(i3);

        $r22 = interfaceinvoke $r19.<org.apache.xml.dtm.DTM: org.apache.xml.utils.XMLString getStringValue(int)>(i3);

        specialinvoke r0.<org.apache.xalan.transformer.KeyTable: void addValueInRefsTable(org.apache.xpath.XPathContext,org.apache.xml.utils.XMLString,int)>(r2, $r22, i1);

     label09:
        goto label06;

     label10:
        $r20 := @caughtexception;

        r4 = $r20;

        $r21 = new org.apache.xml.utils.WrappedRuntimeException;

        specialinvoke $r21.<org.apache.xml.utils.WrappedRuntimeException: void <init>(java.lang.Exception)>(r4);

        throw $r21;

     label11:
        $r8 = r0.<org.apache.xalan.transformer.KeyTable: java.util.Hashtable m_refsTable>;

        return $r8;

     label12:
        i2 = i2 + 1;

        goto label02;

        catch javax.xml.transform.TransformerException from label03 to label04 with label10;
        catch javax.xml.transform.TransformerException from label05 to label06 with label10;
        catch javax.xml.transform.TransformerException from label06 to label07 with label10;
        catch javax.xml.transform.TransformerException from label08 to label09 with label10;
    }

    public int getDocKey()
    {
        org.apache.xalan.transformer.KeyTable r0;
        int $i0;

        r0 := @this: org.apache.xalan.transformer.KeyTable;

        $i0 = r0.<org.apache.xalan.transformer.KeyTable: int m_docKey>;

        return $i0;
    }

    org.apache.xalan.transformer.KeyIterator getKeyIterator()
    {
        org.apache.xalan.transformer.KeyTable r0;
        org.apache.xpath.objects.XNodeSet $r1;
        org.apache.xml.dtm.DTMIterator $r2;
        org.apache.xalan.transformer.KeyIterator $r3, $r4;

        r0 := @this: org.apache.xalan.transformer.KeyTable;

        $r1 = r0.<org.apache.xalan.transformer.KeyTable: org.apache.xpath.objects.XNodeSet m_keyNodes>;

        $r2 = virtualinvoke $r1.<org.apache.xpath.objects.XNodeSet: org.apache.xml.dtm.DTMIterator getContainedIter()>();

        $r3 = (org.apache.xalan.transformer.KeyIterator) $r2;

        $r4 = (org.apache.xalan.transformer.KeyIterator) $r3;

        return $r4;
    }

    public org.apache.xml.utils.QName getKeyTableName()
    {
        org.apache.xalan.transformer.KeyTable r0;
        org.apache.xalan.transformer.KeyIterator $r1;
        org.apache.xml.utils.QName $r2;

        r0 := @this: org.apache.xalan.transformer.KeyTable;

        $r1 = virtualinvoke r0.<org.apache.xalan.transformer.KeyTable: org.apache.xalan.transformer.KeyIterator getKeyIterator()>();

        $r2 = virtualinvoke $r1.<org.apache.xalan.transformer.KeyIterator: org.apache.xml.utils.QName getName()>();

        return $r2;
    }

    public org.apache.xpath.objects.XNodeSet getNodeSetDTMByKey(org.apache.xml.utils.QName, org.apache.xml.utils.XMLString)
    {
        org.apache.xalan.transformer.KeyTable r0;
        org.apache.xml.utils.QName r1;
        org.apache.xml.utils.XMLString r2;
        org.apache.xpath.objects.XNodeSet r3, $r8;
        java.util.Hashtable $r5;
        java.lang.Object $r6;
        org.apache.xalan.transformer.KeyTable$1 $r7;
        org.apache.xml.dtm.DTMIterator $r9, $r13;
        org.apache.xalan.transformer.KeyIterator $r10;
        org.apache.xpath.XPathContext $r11;
        org.apache.xml.dtm.DTMManager $r12;
        java.lang.CloneNotSupportedException $r14;

        r0 := @this: org.apache.xalan.transformer.KeyTable;

        r1 := @parameter0: org.apache.xml.utils.QName;

        r2 := @parameter1: org.apache.xml.utils.XMLString;

        $r5 = specialinvoke r0.<org.apache.xalan.transformer.KeyTable: java.util.Hashtable getRefsTable()>();

        $r6 = virtualinvoke $r5.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r2);

        r3 = (org.apache.xpath.objects.XNodeSet) $r6;

        if r3 == null goto label2;

     label1:
        $r13 = virtualinvoke r3.<org.apache.xpath.objects.XNodeSet: org.apache.xml.dtm.DTMIterator cloneWithReset()>();

        r3 = (org.apache.xpath.objects.XNodeSet) $r13;

     label2:
        if r3 != null goto label3;

        $r7 = new org.apache.xalan.transformer.KeyTable$1;

        $r8 = r0.<org.apache.xalan.transformer.KeyTable: org.apache.xpath.objects.XNodeSet m_keyNodes>;

        $r9 = virtualinvoke $r8.<org.apache.xpath.objects.XNodeSet: org.apache.xml.dtm.DTMIterator getContainedIter()>();

        $r10 = (org.apache.xalan.transformer.KeyIterator) $r9;

        $r11 = virtualinvoke $r10.<org.apache.xalan.transformer.KeyIterator: org.apache.xpath.XPathContext getXPathContext()>();

        $r12 = virtualinvoke $r11.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMManager getDTMManager()>();

        specialinvoke $r7.<org.apache.xalan.transformer.KeyTable$1: void <init>(org.apache.xalan.transformer.KeyTable,org.apache.xml.dtm.DTMManager)>(r0, $r12);

        r3 = $r7;

        virtualinvoke r3.<org.apache.xpath.objects.XNodeSet: void reset()>();

     label3:
        return r3;

     label4:
        $r14 := @caughtexception;

        r3 = null;

        goto label2;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label4;
    }
}
