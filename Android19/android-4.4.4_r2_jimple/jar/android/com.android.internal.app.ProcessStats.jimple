public final class com.android.internal.app.ProcessStats extends java.lang.Object implements android.os.Parcelable
{
    public static final int ADJ_COUNT;
    public static final int ADJ_MEM_FACTOR_COUNT;
    public static final int ADJ_MEM_FACTOR_CRITICAL;
    public static final int ADJ_MEM_FACTOR_LOW;
    public static final int ADJ_MEM_FACTOR_MODERATE;
    public static final int ADJ_MEM_FACTOR_NORMAL;
    public static final java.lang.String[] ADJ_MEM_NAMES_CSV;
    static final java.lang.String[] ADJ_MEM_TAGS;
    public static final int ADJ_NOTHING;
    public static final int ADJ_SCREEN_MOD;
    public static final java.lang.String[] ADJ_SCREEN_NAMES_CSV;
    public static final int ADJ_SCREEN_OFF;
    public static final int ADJ_SCREEN_ON;
    static final java.lang.String[] ADJ_SCREEN_TAGS;
    public static final int[] ALL_MEM_ADJ;
    public static final int[] ALL_PROC_STATES;
    public static final int[] ALL_SCREEN_ADJ;
    public static final int[] BACKGROUND_PROC_STATES;
    static final int[] BAD_TABLE;
    public static long COMMIT_PERIOD;
    public static final android.os.Parcelable$Creator CREATOR;
    static final java.lang.String CSV_SEP;
    static final boolean DEBUG;
    static final boolean DEBUG_PARCEL;
    public static final int FLAG_COMPLETE;
    public static final int FLAG_SHUTDOWN;
    public static final int FLAG_SYSPROPS;
    static final int LONGS_SIZE;
    private static final int MAGIC;
    public static final int[] NON_CACHED_PROC_STATES;
    static int OFFSET_ARRAY_MASK;
    static int OFFSET_ARRAY_SHIFT;
    static int OFFSET_INDEX_MASK;
    static int OFFSET_INDEX_SHIFT;
    static int OFFSET_TYPE_MASK;
    static int OFFSET_TYPE_SHIFT;
    private static final int PARCEL_VERSION;
    static final int[] PROCESS_STATE_TO_STATE;
    public static final int PSS_AVERAGE;
    public static final int PSS_COUNT;
    public static final int PSS_MAXIMUM;
    public static final int PSS_MINIMUM;
    public static final int PSS_SAMPLE_COUNT;
    public static final int PSS_USS_AVERAGE;
    public static final int PSS_USS_MAXIMUM;
    public static final int PSS_USS_MINIMUM;
    public static final java.lang.String SERVICE_NAME;
    public static final int STATE_BACKUP;
    public static final int STATE_CACHED_ACTIVITY;
    public static final int STATE_CACHED_ACTIVITY_CLIENT;
    public static final int STATE_CACHED_EMPTY;
    public static final int STATE_COUNT;
    public static final int STATE_HEAVY_WEIGHT;
    public static final int STATE_HOME;
    public static final int STATE_IMPORTANT_BACKGROUND;
    public static final int STATE_IMPORTANT_FOREGROUND;
    public static final int STATE_LAST_ACTIVITY;
    static final java.lang.String[] STATE_NAMES;
    public static final java.lang.String[] STATE_NAMES_CSV;
    public static final int STATE_NOTHING;
    public static final int STATE_PERSISTENT;
    public static final int STATE_RECEIVER;
    public static final int STATE_SERVICE;
    public static final int STATE_SERVICE_RESTARTING;
    static final java.lang.String[] STATE_TAGS;
    public static final int STATE_TOP;
    static final java.lang.String TAG;
    int[] mAddLongTable;
    int mAddLongTableSize;
    android.util.ArrayMap mCommonStringToIndex;
    public int mFlags;
    java.util.ArrayList mIndexToCommonString;
    final java.util.ArrayList mLongs;
    public int mMemFactor;
    public final long[] mMemFactorDurations;
    int mNextLong;
    public final com.android.internal.app.ProcessMap mPackages;
    public final com.android.internal.app.ProcessMap mProcesses;
    public java.lang.String mReadError;
    boolean mRunning;
    java.lang.String mRuntime;
    public long mStartTime;
    public long mTimePeriodEndRealtime;
    public long mTimePeriodStartClock;
    public java.lang.String mTimePeriodStartClockStr;
    public long mTimePeriodStartRealtime;
    java.lang.String mWebView;

    static void <clinit>()
    {
        int[] $r0, $r1, $r2, $r3, $r4, $r5, $r14;
        java.lang.String[] $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        com.android.internal.app.ProcessStats$1 $r13;

        <com.android.internal.app.ProcessStats: java.lang.String TAG> = "ProcessStats";

        <com.android.internal.app.ProcessStats: int STATE_TOP> = 1;

        <com.android.internal.app.ProcessStats: int STATE_SERVICE_RESTARTING> = 7;

        <com.android.internal.app.ProcessStats: int STATE_SERVICE> = 6;

        <com.android.internal.app.ProcessStats: int STATE_RECEIVER> = 8;

        <com.android.internal.app.ProcessStats: int STATE_PERSISTENT> = 0;

        <com.android.internal.app.ProcessStats: int STATE_NOTHING> = -1;

        <com.android.internal.app.ProcessStats: int STATE_LAST_ACTIVITY> = 10;

        <com.android.internal.app.ProcessStats: int STATE_IMPORTANT_FOREGROUND> = 2;

        <com.android.internal.app.ProcessStats: int STATE_IMPORTANT_BACKGROUND> = 3;

        <com.android.internal.app.ProcessStats: int STATE_HOME> = 9;

        <com.android.internal.app.ProcessStats: int STATE_HEAVY_WEIGHT> = 5;

        <com.android.internal.app.ProcessStats: int STATE_COUNT> = 14;

        <com.android.internal.app.ProcessStats: int STATE_CACHED_EMPTY> = 13;

        <com.android.internal.app.ProcessStats: int STATE_CACHED_ACTIVITY_CLIENT> = 12;

        <com.android.internal.app.ProcessStats: int STATE_CACHED_ACTIVITY> = 11;

        <com.android.internal.app.ProcessStats: int STATE_BACKUP> = 4;

        <com.android.internal.app.ProcessStats: java.lang.String SERVICE_NAME> = "procstats";

        <com.android.internal.app.ProcessStats: int PSS_USS_MINIMUM> = 4;

        <com.android.internal.app.ProcessStats: int PSS_USS_MAXIMUM> = 6;

        <com.android.internal.app.ProcessStats: int PSS_USS_AVERAGE> = 5;

        <com.android.internal.app.ProcessStats: int PSS_SAMPLE_COUNT> = 0;

        <com.android.internal.app.ProcessStats: int PSS_MINIMUM> = 1;

        <com.android.internal.app.ProcessStats: int PSS_MAXIMUM> = 3;

        <com.android.internal.app.ProcessStats: int PSS_COUNT> = 7;

        <com.android.internal.app.ProcessStats: int PSS_AVERAGE> = 2;

        <com.android.internal.app.ProcessStats: int PARCEL_VERSION> = 13;

        <com.android.internal.app.ProcessStats: int MAGIC> = 1347638355;

        <com.android.internal.app.ProcessStats: int LONGS_SIZE> = 4096;

        <com.android.internal.app.ProcessStats: int FLAG_SYSPROPS> = 4;

        <com.android.internal.app.ProcessStats: int FLAG_SHUTDOWN> = 2;

        <com.android.internal.app.ProcessStats: int FLAG_COMPLETE> = 1;

        <com.android.internal.app.ProcessStats: boolean DEBUG_PARCEL> = 0;

        <com.android.internal.app.ProcessStats: boolean DEBUG> = 0;

        <com.android.internal.app.ProcessStats: java.lang.String CSV_SEP> = "\t";

        <com.android.internal.app.ProcessStats: int ADJ_SCREEN_ON> = 4;

        <com.android.internal.app.ProcessStats: int ADJ_SCREEN_OFF> = 0;

        <com.android.internal.app.ProcessStats: int ADJ_SCREEN_MOD> = 4;

        <com.android.internal.app.ProcessStats: int ADJ_NOTHING> = -1;

        <com.android.internal.app.ProcessStats: int ADJ_MEM_FACTOR_NORMAL> = 0;

        <com.android.internal.app.ProcessStats: int ADJ_MEM_FACTOR_MODERATE> = 1;

        <com.android.internal.app.ProcessStats: int ADJ_MEM_FACTOR_LOW> = 2;

        <com.android.internal.app.ProcessStats: int ADJ_MEM_FACTOR_CRITICAL> = 3;

        <com.android.internal.app.ProcessStats: int ADJ_MEM_FACTOR_COUNT> = 4;

        <com.android.internal.app.ProcessStats: int ADJ_COUNT> = 8;

        <com.android.internal.app.ProcessStats: long COMMIT_PERIOD> = 10800000L;

        $r0 = newarray (int)[4];

        $r0[0] = 0;

        $r0[1] = 1;

        $r0[2] = 2;

        $r0[3] = 3;

        <com.android.internal.app.ProcessStats: int[] ALL_MEM_ADJ> = $r0;

        $r1 = newarray (int)[2];

        $r1[0] = 0;

        $r1[1] = 4;

        <com.android.internal.app.ProcessStats: int[] ALL_SCREEN_ADJ> = $r1;

        $r2 = newarray (int)[9];

        $r2[0] = 0;

        $r2[1] = 1;

        $r2[2] = 2;

        $r2[3] = 3;

        $r2[4] = 4;

        $r2[5] = 5;

        $r2[6] = 6;

        $r2[7] = 7;

        $r2[8] = 8;

        <com.android.internal.app.ProcessStats: int[] NON_CACHED_PROC_STATES> = $r2;

        $r3 = newarray (int)[7];

        $r3[0] = 2;

        $r3[1] = 3;

        $r3[2] = 4;

        $r3[3] = 5;

        $r3[4] = 6;

        $r3[5] = 7;

        $r3[6] = 8;

        <com.android.internal.app.ProcessStats: int[] BACKGROUND_PROC_STATES> = $r3;

        $r4 = newarray (int)[14];

        $r4[0] = 0;

        $r4[1] = 0;

        $r4[2] = 1;

        $r4[3] = 2;

        $r4[4] = 3;

        $r4[5] = 4;

        $r4[6] = 5;

        $r4[7] = 6;

        $r4[8] = 8;

        $r4[9] = 9;

        $r4[10] = 10;

        $r4[11] = 11;

        $r4[12] = 12;

        $r4[13] = 13;

        <com.android.internal.app.ProcessStats: int[] PROCESS_STATE_TO_STATE> = $r4;

        $r5 = newarray (int)[14];

        $r5[0] = 0;

        $r5[1] = 1;

        $r5[2] = 2;

        $r5[3] = 3;

        $r5[4] = 4;

        $r5[5] = 5;

        $r5[6] = 6;

        $r5[7] = 7;

        $r5[8] = 8;

        $r5[9] = 9;

        $r5[10] = 10;

        $r5[11] = 11;

        $r5[12] = 12;

        $r5[13] = 13;

        <com.android.internal.app.ProcessStats: int[] ALL_PROC_STATES> = $r5;

        $r6 = newarray (java.lang.String)[14];

        $r6[0] = "Persist";

        $r6[1] = "Top    ";

        $r6[2] = "ImpFg  ";

        $r6[3] = "ImpBg  ";

        $r6[4] = "Backup ";

        $r6[5] = "HeavyWt";

        $r6[6] = "Service";

        $r6[7] = "ServRst";

        $r6[8] = "Receivr";

        $r6[9] = "Home   ";

        $r6[10] = "LastAct";

        $r6[11] = "CchAct ";

        $r6[12] = "CchCAct";

        $r6[13] = "CchEmty";

        <com.android.internal.app.ProcessStats: java.lang.String[] STATE_NAMES> = $r6;

        $r7 = newarray (java.lang.String)[2];

        $r7[0] = "off";

        $r7[1] = "on";

        <com.android.internal.app.ProcessStats: java.lang.String[] ADJ_SCREEN_NAMES_CSV> = $r7;

        $r8 = newarray (java.lang.String)[4];

        $r8[0] = "norm";

        $r8[1] = "mod";

        $r8[2] = "low";

        $r8[3] = "crit";

        <com.android.internal.app.ProcessStats: java.lang.String[] ADJ_MEM_NAMES_CSV> = $r8;

        $r9 = newarray (java.lang.String)[14];

        $r9[0] = "pers";

        $r9[1] = "top";

        $r9[2] = "impfg";

        $r9[3] = "impbg";

        $r9[4] = "backup";

        $r9[5] = "heavy";

        $r9[6] = "service";

        $r9[7] = "service-rs";

        $r9[8] = "receiver";

        $r9[9] = "home";

        $r9[10] = "lastact";

        $r9[11] = "cch-activity";

        $r9[12] = "cch-aclient";

        $r9[13] = "cch-empty";

        <com.android.internal.app.ProcessStats: java.lang.String[] STATE_NAMES_CSV> = $r9;

        $r10 = newarray (java.lang.String)[2];

        $r10[0] = "0";

        $r10[1] = "1";

        <com.android.internal.app.ProcessStats: java.lang.String[] ADJ_SCREEN_TAGS> = $r10;

        $r11 = newarray (java.lang.String)[4];

        $r11[0] = "n";

        $r11[1] = "m";

        $r11[2] = "l";

        $r11[3] = "c";

        <com.android.internal.app.ProcessStats: java.lang.String[] ADJ_MEM_TAGS> = $r11;

        $r12 = newarray (java.lang.String)[14];

        $r12[0] = "p";

        $r12[1] = "t";

        $r12[2] = "f";

        $r12[3] = "b";

        $r12[4] = "u";

        $r12[5] = "w";

        $r12[6] = "s";

        $r12[7] = "x";

        $r12[8] = "r";

        $r12[9] = "h";

        $r12[10] = "l";

        $r12[11] = "a";

        $r12[12] = "c";

        $r12[13] = "e";

        <com.android.internal.app.ProcessStats: java.lang.String[] STATE_TAGS> = $r12;

        <com.android.internal.app.ProcessStats: int OFFSET_TYPE_SHIFT> = 0;

        <com.android.internal.app.ProcessStats: int OFFSET_TYPE_MASK> = 255;

        <com.android.internal.app.ProcessStats: int OFFSET_ARRAY_SHIFT> = 8;

        <com.android.internal.app.ProcessStats: int OFFSET_ARRAY_MASK> = 255;

        <com.android.internal.app.ProcessStats: int OFFSET_INDEX_SHIFT> = 16;

        <com.android.internal.app.ProcessStats: int OFFSET_INDEX_MASK> = 65535;

        $r13 = new com.android.internal.app.ProcessStats$1;

        specialinvoke $r13.<com.android.internal.app.ProcessStats$1: void <init>()>();

        <com.android.internal.app.ProcessStats: android.os.Parcelable$Creator CREATOR> = $r13;

        $r14 = newarray (int)[0];

        <com.android.internal.app.ProcessStats: int[] BAD_TABLE> = $r14;

        return;
    }

    public void <init>(android.os.Parcel)
    {
        com.android.internal.app.ProcessStats r0;
        android.os.Parcel r1;
        com.android.internal.app.ProcessMap $r2, $r3;
        long[] $r4;
        java.util.ArrayList $r5;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new com.android.internal.app.ProcessMap;

        specialinvoke $r2.<com.android.internal.app.ProcessMap: void <init>()>();

        r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mPackages> = $r2;

        $r3 = new com.android.internal.app.ProcessMap;

        specialinvoke $r3.<com.android.internal.app.ProcessMap: void <init>()>();

        r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mProcesses> = $r3;

        $r4 = newarray (long)[8];

        r0.<com.android.internal.app.ProcessStats: long[] mMemFactorDurations> = $r4;

        r0.<com.android.internal.app.ProcessStats: int mMemFactor> = -1;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs> = $r5;

        virtualinvoke r0.<com.android.internal.app.ProcessStats: void reset()>();

        virtualinvoke r0.<com.android.internal.app.ProcessStats: void readFromParcel(android.os.Parcel)>(r1);

        return;
    }

    public void <init>(boolean)
    {
        com.android.internal.app.ProcessStats r0;
        boolean z0;
        com.android.internal.app.ProcessMap $r1, $r2;
        long[] $r3;
        java.util.ArrayList $r4;

        r0 := @this: com.android.internal.app.ProcessStats;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.android.internal.app.ProcessMap;

        specialinvoke $r1.<com.android.internal.app.ProcessMap: void <init>()>();

        r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mPackages> = $r1;

        $r2 = new com.android.internal.app.ProcessMap;

        specialinvoke $r2.<com.android.internal.app.ProcessMap: void <init>()>();

        r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mProcesses> = $r2;

        $r3 = newarray (long)[8];

        r0.<com.android.internal.app.ProcessStats: long[] mMemFactorDurations> = $r3;

        r0.<com.android.internal.app.ProcessStats: int mMemFactor> = -1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs> = $r4;

        r0.<com.android.internal.app.ProcessStats: boolean mRunning> = z0;

        virtualinvoke r0.<com.android.internal.app.ProcessStats: void reset()>();

        return;
    }

    static int[] access$100(com.android.internal.app.ProcessStats, android.os.Parcel, java.lang.String, java.lang.String)
    {
        com.android.internal.app.ProcessStats r0;
        android.os.Parcel r1;
        java.lang.String r2, r3;
        int[] $r4;

        r0 := @parameter0: com.android.internal.app.ProcessStats;

        r1 := @parameter1: android.os.Parcel;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r4 = specialinvoke r0.<com.android.internal.app.ProcessStats: int[] readTableFromParcel(android.os.Parcel,java.lang.String,java.lang.String)>(r1, r2, r3);

        return $r4;
    }

    static int binarySearch(int[], int, int)
    {
        int[] r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = 0;

        i3 = i0 - 1;

     label1:
        if i2 > i3 goto label3;

        $i6 = i2 + i3;

        i4 = $i6 >>> 1;

        $i8 = r0[i4];

        $i7 = <com.android.internal.app.ProcessStats: int OFFSET_TYPE_SHIFT>;

        $i10 = $i8 >> $i7;

        $i9 = <com.android.internal.app.ProcessStats: int OFFSET_TYPE_MASK>;

        i5 = $i10 & $i9;

        if i5 >= i1 goto label2;

        i2 = i4 + 1;

        goto label1;

     label2:
        if i5 <= i1 goto label4;

        i3 = i4 - 1;

        goto label1;

     label3:
        i4 = i2 ^ -1;

     label4:
        return i4;
    }

    private void buildTimePeriodStartClockStr()
    {
        com.android.internal.app.ProcessStats r0;
        long $l0;
        java.lang.CharSequence $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.app.ProcessStats;

        $l0 = r0.<com.android.internal.app.ProcessStats: long mTimePeriodStartClock>;

        $r1 = staticinvoke <android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,long)>("yyyy-MM-dd-HH-mm-ss", $l0);

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        r0.<com.android.internal.app.ProcessStats: java.lang.String mTimePeriodStartClockStr> = $r2;

        return;
    }

    public static void computeProcessData(com.android.internal.app.ProcessStats$ProcessState, com.android.internal.app.ProcessStats$ProcessDataCollection, long)
    {
        com.android.internal.app.ProcessStats$ProcessState r0;
        com.android.internal.app.ProcessStats$ProcessDataCollection r1;
        long l0, l5, l6, l7, l8, l9, l10, l11, $l20, $l21, $l22, $l24, $l25, $l27, $l29, $l30, $l31, $l33, $l34, $l35, $l36, $l38, $l39, $l40, $l41, $l43, $l44, $l45;
        int i1, i2, i3, i4, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        int[] $r2, $r3, $r4, $r5, $r6, $r7;
        byte $b23, $b26, $b28, $b32, $b37, $b42;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17;

        r0 := @parameter0: com.android.internal.app.ProcessStats$ProcessState;

        r1 := @parameter1: com.android.internal.app.ProcessStats$ProcessDataCollection;

        l0 := @parameter2: long;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long totalTime> = 0L;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long maxUss> = 0L;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long avgUss> = 0L;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long minUss> = 0L;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long maxPss> = 0L;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long avgPss> = 0L;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long minPss> = 0L;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long numPss> = 0L;

        i1 = 0;

     label01:
        $r2 = r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: int[] screenStates>;

        $i12 = lengthof $r2;

        if i1 >= $i12 goto label12;

        i2 = 0;

     label02:
        $r3 = r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: int[] memStates>;

        $i13 = lengthof $r3;

        if i2 >= $i13 goto label11;

        i3 = 0;

     label03:
        $r4 = r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: int[] procStates>;

        $i14 = lengthof $r4;

        if i3 >= $i14 goto label10;

        $r6 = r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: int[] screenStates>;

        $i15 = $r6[i1];

        $r5 = r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: int[] memStates>;

        $i16 = $r5[i2];

        $i19 = $i15 + $i16;

        $i18 = 14 * $i19;

        $r7 = r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: int[] procStates>;

        $i17 = $r7[i3];

        i4 = $i18 + $i17;

        $l21 = r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long totalTime>;

        $l22 = virtualinvoke r0.<com.android.internal.app.ProcessStats$ProcessState: long getDuration(int,long)>(i4, l0);

        $l20 = $l21 + $l22;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long totalTime> = $l20;

        l5 = virtualinvoke r0.<com.android.internal.app.ProcessStats$ProcessState: long getPssSampleCount(int)>(i4);

        $b23 = l5 cmp 0L;

        if $b23 <= 0 goto label05;

        l6 = virtualinvoke r0.<com.android.internal.app.ProcessStats$ProcessState: long getPssMinimum(int)>(i4);

        l7 = virtualinvoke r0.<com.android.internal.app.ProcessStats$ProcessState: long getPssAverage(int)>(i4);

        l8 = virtualinvoke r0.<com.android.internal.app.ProcessStats$ProcessState: long getPssMaximum(int)>(i4);

        l9 = virtualinvoke r0.<com.android.internal.app.ProcessStats$ProcessState: long getPssUssMinimum(int)>(i4);

        l10 = virtualinvoke r0.<com.android.internal.app.ProcessStats$ProcessState: long getPssUssAverage(int)>(i4);

        l11 = virtualinvoke r0.<com.android.internal.app.ProcessStats$ProcessState: long getPssUssMaximum(int)>(i4);

        $l24 = r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long numPss>;

        $b28 = $l24 cmp 0L;

        if $b28 != 0 goto label06;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long minPss> = l6;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long avgPss> = l7;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long maxPss> = l8;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long minUss> = l9;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long avgUss> = l10;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long maxUss> = l11;

     label04:
        $l41 = r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long numPss>;

        $l43 = l5 + $l41;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long numPss> = $l43;

     label05:
        i3 = i3 + 1;

        goto label03;

     label06:
        $l27 = r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long minPss>;

        $b26 = l6 cmp $l27;

        if $b26 >= 0 goto label07;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long minPss> = l6;

     label07:
        $l25 = r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long avgPss>;

        $d1 = (double) $l25;

        $l29 = r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long numPss>;

        $d2 = (double) $l29;

        $d3 = $d1 * $d2;

        $d5 = (double) l7;

        $d0 = (double) l5;

        $d4 = $d5 * $d0;

        $d7 = $d3 + $d4;

        $l30 = r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long numPss>;

        $l31 = l5 + $l30;

        $d8 = (double) $l31;

        $d6 = $d7 / $d8;

        $l35 = (long) $d6;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long avgPss> = $l35;

        $l36 = r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long maxPss>;

        $b37 = l8 cmp $l36;

        if $b37 <= 0 goto label08;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long maxPss> = l8;

     label08:
        $l38 = r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long minUss>;

        $b32 = l9 cmp $l38;

        if $b32 >= 0 goto label09;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long minUss> = l9;

     label09:
        $l33 = r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long avgUss>;

        $d12 = (double) $l33;

        $l34 = r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long numPss>;

        $d9 = (double) $l34;

        $d10 = $d12 * $d9;

        $d14 = (double) l10;

        $d13 = (double) l5;

        $d15 = $d14 * $d13;

        $d17 = $d10 + $d15;

        $l39 = r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long numPss>;

        $l40 = l5 + $l39;

        $d11 = (double) $l40;

        $d16 = $d17 / $d11;

        $l45 = (long) $d16;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long avgUss> = $l45;

        $l44 = r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long maxUss>;

        $b42 = l11 cmp $l44;

        if $b42 <= 0 goto label04;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long maxUss> = l11;

        goto label04;

     label10:
        i2 = i2 + 1;

        goto label02;

     label11:
        i1 = i1 + 1;

        goto label01;

     label12:
        return;
    }

    static long computeProcessTimeLocked(com.android.internal.app.ProcessStats$ProcessState, int[], int[], int[], long)
    {
        com.android.internal.app.ProcessStats$ProcessState r0;
        int[] r1, r2, r3;
        long l0, l1, $l14;
        int i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;

        r0 := @parameter0: com.android.internal.app.ProcessStats$ProcessState;

        r1 := @parameter1: int[];

        r2 := @parameter2: int[];

        r3 := @parameter3: int[];

        l0 := @parameter4: long;

        l1 = 0L;

        i2 = 0;

     label1:
        $i5 = lengthof r1;

        if i2 >= $i5 goto label6;

        i3 = 0;

     label2:
        $i6 = lengthof r2;

        if i3 >= $i6 goto label5;

        i4 = 0;

     label3:
        $i7 = lengthof r3;

        if i4 >= $i7 goto label4;

        $i9 = r1[i2];

        $i8 = r2[i3];

        $i11 = $i9 + $i8;

        $i13 = 14 * $i11;

        $i10 = r3[i4];

        $i12 = $i13 + $i10;

        $l14 = virtualinvoke r0.<com.android.internal.app.ProcessStats$ProcessState: long getDuration(int,long)>($i12, l0);

        l1 = l1 + $l14;

        i4 = i4 + 1;

        goto label3;

     label4:
        i3 = i3 + 1;

        goto label2;

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        r0.<com.android.internal.app.ProcessStats$ProcessState: long mTmpTotalTime> = l1;

        return l1;
    }

    static void dumpAdjTimesCheckin(java.io.PrintWriter, java.lang.String, long[], int, long, long)
    {
        java.io.PrintWriter r0;
        java.lang.String r1;
        long[] r2;
        int i0, i3, i4, i5;
        long l1, l2, l6, $l8;
        byte $b7;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: long[];

        i0 := @parameter3: int;

        l1 := @parameter4: long;

        l2 := @parameter5: long;

        i3 = 0;

     label1:
        if i3 >= 8 goto label6;

        i4 = 0;

     label2:
        if i4 >= 4 goto label5;

        i5 = i4 + i3;

        l6 = r2[i5];

        if i0 != i5 goto label3;

        $l8 = l2 - l1;

        l6 = l6 + $l8;

     label3:
        $b7 = l6 cmp 0L;

        if $b7 == 0 goto label4;

        staticinvoke <com.android.internal.app.ProcessStats: void printAdjTagAndValue(java.io.PrintWriter,int,long)>(r0, i5, l6);

     label4:
        i4 = i4 + 1;

        goto label2;

     label5:
        i3 = i3 + 4;

        goto label1;

     label6:
        return;
    }

    static void dumpAllProcessPssCheckin(java.io.PrintWriter, com.android.internal.app.ProcessStats$ProcessState)
    {
        java.io.PrintWriter r0;
        com.android.internal.app.ProcessStats$ProcessState r1;
        int i0, i1, i2, $i10, $i11, $i12, $i13;
        long l3, l4, l5, l6, l7, l8, l9;
        int[] $r2;
        com.android.internal.app.ProcessStats $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: com.android.internal.app.ProcessStats$ProcessState;

        i0 = 0;

     label1:
        $i10 = r1.<com.android.internal.app.ProcessStats$ProcessState: int mPssTableSize>;

        if i0 >= $i10 goto label2;

        $r2 = r1.<com.android.internal.app.ProcessStats$ProcessState: int[] mPssTable>;

        i1 = $r2[i0];

        $i11 = <com.android.internal.app.ProcessStats: int OFFSET_TYPE_SHIFT>;

        $i12 = i1 >> $i11;

        $i13 = <com.android.internal.app.ProcessStats: int OFFSET_TYPE_MASK>;

        i2 = $i12 & $i13;

        $r3 = r1.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        l3 = virtualinvoke $r3.<com.android.internal.app.ProcessStats: long getLong(int,int)>(i1, 0);

        $r4 = r1.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        l4 = virtualinvoke $r4.<com.android.internal.app.ProcessStats: long getLong(int,int)>(i1, 1);

        $r5 = r1.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        l5 = virtualinvoke $r5.<com.android.internal.app.ProcessStats: long getLong(int,int)>(i1, 2);

        $r6 = r1.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        l6 = virtualinvoke $r6.<com.android.internal.app.ProcessStats: long getLong(int,int)>(i1, 3);

        $r8 = r1.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        l7 = virtualinvoke $r8.<com.android.internal.app.ProcessStats: long getLong(int,int)>(i1, 4);

        $r7 = r1.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        l8 = virtualinvoke $r7.<com.android.internal.app.ProcessStats: long getLong(int,int)>(i1, 5);

        $r9 = r1.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        l9 = virtualinvoke $r9.<com.android.internal.app.ProcessStats: long getLong(int,int)>(i1, 6);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        staticinvoke <com.android.internal.app.ProcessStats: void printProcStateTag(java.io.PrintWriter,int)>(r0, i2);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(58);

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>(l3);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(58);

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>(l4);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(58);

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>(l5);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(58);

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>(l6);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(58);

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>(l7);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(58);

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>(l8);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(58);

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>(l9);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    static void dumpAllProcessStateCheckin(java.io.PrintWriter, com.android.internal.app.ProcessStats$ProcessState, long)
    {
        java.io.PrintWriter r0;
        com.android.internal.app.ProcessStats$ProcessState r1;
        long l0, l4, $l7, $l8, $l14, $l15;
        boolean z0;
        int i1, i2, i3, $i5, $i6, $i9, $i10, $i11, $i12, $i13;
        int[] $r2;
        com.android.internal.app.ProcessStats $r3;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: com.android.internal.app.ProcessStats$ProcessState;

        l0 := @parameter2: long;

        z0 = 0;

        i1 = 0;

     label1:
        $i5 = r1.<com.android.internal.app.ProcessStats$ProcessState: int mDurationsTableSize>;

        if i1 >= $i5 goto label3;

        $r2 = r1.<com.android.internal.app.ProcessStats$ProcessState: int[] mDurationsTable>;

        i2 = $r2[i1];

        $i11 = <com.android.internal.app.ProcessStats: int OFFSET_TYPE_SHIFT>;

        $i12 = i2 >> $i11;

        $i10 = <com.android.internal.app.ProcessStats: int OFFSET_TYPE_MASK>;

        i3 = $i12 & $i10;

        $r3 = r1.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        l4 = virtualinvoke $r3.<com.android.internal.app.ProcessStats: long getLong(int,int)>(i2, 0);

        $i13 = r1.<com.android.internal.app.ProcessStats$ProcessState: int mCurState>;

        if $i13 != i3 goto label2;

        z0 = 1;

        $l15 = r1.<com.android.internal.app.ProcessStats$ProcessState: long mStartTime>;

        $l14 = l0 - $l15;

        l4 = l4 + $l14;

     label2:
        staticinvoke <com.android.internal.app.ProcessStats: void printProcStateTagAndValue(java.io.PrintWriter,int,long)>(r0, i3, l4);

        i1 = i1 + 1;

        goto label1;

     label3:
        if z0 != 0 goto label4;

        $i6 = r1.<com.android.internal.app.ProcessStats$ProcessState: int mCurState>;

        if $i6 == -1 goto label4;

        $i9 = r1.<com.android.internal.app.ProcessStats$ProcessState: int mCurState>;

        $l7 = r1.<com.android.internal.app.ProcessStats$ProcessState: long mStartTime>;

        $l8 = l0 - $l7;

        staticinvoke <com.android.internal.app.ProcessStats: void printProcStateTagAndValue(java.io.PrintWriter,int,long)>(r0, $i9, $l8);

     label4:
        return;
    }

    private void dumpProcessInternalLocked(java.io.PrintWriter, java.lang.String, com.android.internal.app.ProcessStats$ProcessState, boolean)
    {
        com.android.internal.app.ProcessStats r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r4, $r6, $r7, $r11, $r13;
        com.android.internal.app.ProcessStats$ProcessState r3, $r5, $r8, $r9, $r10, $r12;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: com.android.internal.app.ProcessStats$ProcessState;

        z0 := @parameter3: boolean;

        if z0 == 0 goto label2;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("myID=");

        $i4 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r3);

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mCommonProcess=");

        $r5 = r3.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        $i5 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r5);

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i5);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r6);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mPackage=");

        $r7 = r3.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mPackage>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        $z5 = r3.<com.android.internal.app.ProcessStats$ProcessState: boolean mMultiPackage>;

        if $z5 == 0 goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mMultiPackage=");

        $z6 = r3.<com.android.internal.app.ProcessStats$ProcessState: boolean mMultiPackage>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z6);

     label1:
        $r9 = r3.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        if r3 == $r9 goto label2;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Common Proc: ");

        $r8 = r3.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        $r11 = $r8.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r11);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("/");

        $r10 = r3.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        $i6 = $r10.<com.android.internal.app.ProcessStats$ProcessState: int mUid>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i6);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" pkg=");

        $r12 = r3.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        $r13 = $r12.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mPackage>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r13);

     label2:
        $z1 = r3.<com.android.internal.app.ProcessStats$ProcessState: boolean mActive>;

        if $z1 == 0 goto label3;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mActive=");

        $z4 = r3.<com.android.internal.app.ProcessStats$ProcessState: boolean mActive>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z4);

     label3:
        $z2 = r3.<com.android.internal.app.ProcessStats$ProcessState: boolean mDead>;

        if $z2 == 0 goto label4;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mDead=");

        $z3 = r3.<com.android.internal.app.ProcessStats$ProcessState: boolean mDead>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z3);

     label4:
        $i0 = r3.<com.android.internal.app.ProcessStats$ProcessState: int mNumActiveServices>;

        if $i0 != 0 goto label5;

        $i3 = r3.<com.android.internal.app.ProcessStats$ProcessState: int mNumStartedServices>;

        if $i3 == 0 goto label6;

     label5:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mNumActiveServices=");

        $i1 = r3.<com.android.internal.app.ProcessStats$ProcessState: int mNumActiveServices>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mNumStartedServices=");

        $i2 = r3.<com.android.internal.app.ProcessStats$ProcessState: int mNumStartedServices>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i2);

     label6:
        return;
    }

    static void dumpProcessList(java.io.PrintWriter, java.lang.String, java.util.ArrayList, int[], int[], int[], long)
    {
        java.io.PrintWriter r0;
        java.lang.String r1, r6, $r12;
        java.util.ArrayList r2;
        int[] r3, r4, r5;
        long l0;
        int i1, $i2, $i3, $i4, $i5;
        com.android.internal.app.ProcessStats$ProcessState r7;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.Object $r11;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.ArrayList;

        r3 := @parameter3: int[];

        r4 := @parameter4: int[];

        r5 := @parameter5: int[];

        l0 := @parameter6: long;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        r6 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $i2 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i1 = -1 + $i2;

     label1:
        if i1 < 0 goto label3;

        $r11 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r7 = (com.android.internal.app.ProcessStats$ProcessState) $r11;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        $r12 = r7.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r12);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" / ");

        $i3 = r7.<com.android.internal.app.ProcessStats$ProcessState: int mUid>;

        staticinvoke <android.os.UserHandle: void formatUid(java.io.PrintWriter,int)>(r0, $i3);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" (");

        $i5 = r7.<com.android.internal.app.ProcessStats$ProcessState: int mDurationsTableSize>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i5);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" entries)");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>(":");

        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessState(java.io.PrintWriter,java.lang.String,com.android.internal.app.ProcessStats$ProcessState,int[],int[],int[],long)>(r0, r6, r7, r3, r4, r5, l0);

        $i4 = r7.<com.android.internal.app.ProcessStats$ProcessState: int mPssTableSize>;

        if $i4 <= 0 goto label2;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessPss(java.io.PrintWriter,java.lang.String,com.android.internal.app.ProcessStats$ProcessState,int[],int[],int[])>(r0, r6, r7, r3, r4, r5);

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return;
    }

    public static void dumpProcessListCsv(java.io.PrintWriter, java.util.ArrayList, boolean, int[], boolean, int[], boolean, int[], long)
    {
        java.io.PrintWriter r0;
        java.util.ArrayList r1;
        boolean z0, z1, z2;
        int[] r2, r3, r4, r5, r6, r7;
        long l0;
        int i1, $i2, $i3;
        com.android.internal.app.ProcessStats$ProcessState r8;
        java.lang.Object $r9;
        java.lang.String $r10;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.util.ArrayList;

        z0 := @parameter2: boolean;

        r2 := @parameter3: int[];

        z1 := @parameter4: boolean;

        r3 := @parameter5: int[];

        z2 := @parameter6: boolean;

        r4 := @parameter7: int[];

        l0 := @parameter8: long;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("process");

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("\t");

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("uid");

        if z0 == 0 goto label5;

        r5 = r2;

     label1:
        if z1 == 0 goto label6;

        r6 = r3;

     label2:
        if z2 == 0 goto label7;

        r7 = r4;

     label3:
        staticinvoke <com.android.internal.app.ProcessStats: void dumpStateHeadersCsv(java.io.PrintWriter,java.lang.String,int[],int[],int[])>(r0, "\t", r5, r6, r7);

        virtualinvoke r0.<java.io.PrintWriter: void println()>();

        $i2 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i1 = -1 + $i2;

     label4:
        if i1 < 0 goto label8;

        $r9 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r8 = (com.android.internal.app.ProcessStats$ProcessState) $r9;

        $r10 = r8.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r10);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("\t");

        $i3 = r8.<com.android.internal.app.ProcessStats$ProcessState: int mUid>;

        staticinvoke <android.os.UserHandle: void formatUid(java.io.PrintWriter,int)>(r0, $i3);

        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessStateCsv(java.io.PrintWriter,com.android.internal.app.ProcessStats$ProcessState,boolean,int[],boolean,int[],boolean,int[],long)>(r0, r8, z0, r2, z1, r3, z2, r4, l0);

        virtualinvoke r0.<java.io.PrintWriter: void println()>();

        i1 = i1 + -1;

        goto label4;

     label5:
        r5 = null;

        goto label1;

     label6:
        r6 = null;

        goto label2;

     label7:
        r7 = null;

        goto label3;

     label8:
        return;
    }

    static void dumpProcessPss(java.io.PrintWriter, java.lang.String, com.android.internal.app.ProcessStats$ProcessState, int[], int[], int[])
    {
        java.io.PrintWriter r0;
        java.lang.String r1, $r7;
        com.android.internal.app.ProcessStats$ProcessState r2;
        int[] r3, r4, r5;
        boolean z0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i9, $i10, i11, $i12, $i13, $i14, $i15, $i22, $i23, $i24, $i25, $i26, $i27, $i29, $i30, $i31, $i32, $i43;
        long l8, $l16, $l17, $l18, $l19, $l20, $l21, $l33, $l34, $l35, $l36, $l37, $l38, $l39, $l40, $l41, $l42, $l44, $l45;
        byte $b28;
        java.lang.String[] $r6;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: com.android.internal.app.ProcessStats$ProcessState;

        r3 := @parameter3: int[];

        r4 := @parameter4: int[];

        r5 := @parameter5: int[];

        z0 = 0;

        i0 = -1;

        i1 = 0;

     label01:
        $i10 = lengthof r3;

        if i1 >= $i10 goto label14;

        i2 = -1;

        i3 = 0;

     label02:
        $i26 = lengthof r4;

        if i3 >= $i26 goto label13;

        i4 = 0;

     label03:
        $i27 = lengthof r5;

        if i4 >= $i27 goto label12;

        i5 = r3[i1];

        i6 = r4[i3];

        $i24 = i5 + i6;

        $i30 = 14 * $i24;

        $i25 = r5[i4];

        i7 = $i30 + $i25;

        l8 = virtualinvoke r2.<com.android.internal.app.ProcessStats$ProcessState: long getPssSampleCount(int)>(i7);

        $b28 = l8 cmp 0L;

        if $b28 <= 0 goto label09;

        if z0 != 0 goto label04;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("PSS/USS (");

        $i43 = r2.<com.android.internal.app.ProcessStats$ProcessState: int mPssTableSize>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i43);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>(" entries):");

        z0 = 1;

     label04:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        $i29 = lengthof r3;

        if $i29 <= 1 goto label06;

        if i0 == i5 goto label10;

        i11 = i5;

     label05:
        staticinvoke <com.android.internal.app.ProcessStats: void printScreenLabel(java.io.PrintWriter,int)>(r0, i11);

        i0 = i5;

     label06:
        $i31 = lengthof r4;

        if $i31 <= 1 goto label08;

        if i2 == i6 goto label11;

        i9 = i6;

     label07:
        staticinvoke <com.android.internal.app.ProcessStats: void printMemLabel(java.io.PrintWriter,int,char)>(r0, i9, 47);

        i2 = i6;

     label08:
        $r6 = <com.android.internal.app.ProcessStats: java.lang.String[] STATE_NAMES>;

        $i32 = r5[i4];

        $r7 = $r6[$i32];

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r7);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>(l8);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" samples ");

        $l34 = virtualinvoke r2.<com.android.internal.app.ProcessStats$ProcessState: long getPssMinimum(int)>(i7);

        $l33 = 1024L * $l34;

        staticinvoke <com.android.internal.app.ProcessStats: void printSizeValue(java.io.PrintWriter,long)>(r0, $l33);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        $l37 = virtualinvoke r2.<com.android.internal.app.ProcessStats$ProcessState: long getPssAverage(int)>(i7);

        $l36 = 1024L * $l37;

        staticinvoke <com.android.internal.app.ProcessStats: void printSizeValue(java.io.PrintWriter,long)>(r0, $l36);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        $l35 = virtualinvoke r2.<com.android.internal.app.ProcessStats$ProcessState: long getPssMaximum(int)>(i7);

        $l40 = 1024L * $l35;

        staticinvoke <com.android.internal.app.ProcessStats: void printSizeValue(java.io.PrintWriter,long)>(r0, $l40);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" / ");

        $l39 = virtualinvoke r2.<com.android.internal.app.ProcessStats$ProcessState: long getPssUssMinimum(int)>(i7);

        $l38 = 1024L * $l39;

        staticinvoke <com.android.internal.app.ProcessStats: void printSizeValue(java.io.PrintWriter,long)>(r0, $l38);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        $l42 = virtualinvoke r2.<com.android.internal.app.ProcessStats$ProcessState: long getPssUssAverage(int)>(i7);

        $l41 = 1024L * $l42;

        staticinvoke <com.android.internal.app.ProcessStats: void printSizeValue(java.io.PrintWriter,long)>(r0, $l41);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        $l45 = virtualinvoke r2.<com.android.internal.app.ProcessStats$ProcessState: long getPssUssMaximum(int)>(i7);

        $l44 = 1024L * $l45;

        staticinvoke <com.android.internal.app.ProcessStats: void printSizeValue(java.io.PrintWriter,long)>(r0, $l44);

        virtualinvoke r0.<java.io.PrintWriter: void println()>();

     label09:
        i4 = i4 + 1;

        goto label03;

     label10:
        i11 = -1;

        goto label05;

     label11:
        i9 = -1;

        goto label07;

     label12:
        i3 = i3 + 1;

        goto label02;

     label13:
        i1 = i1 + 1;

        goto label01;

     label14:
        $i13 = r2.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveWake>;

        if $i13 == 0 goto label15;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("Killed for excessive wake locks: ");

        $i22 = r2.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveWake>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i22);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>(" times");

     label15:
        $i12 = r2.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveCpu>;

        if $i12 == 0 goto label16;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("Killed for excessive CPU use: ");

        $i23 = r2.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveCpu>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i23);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>(" times");

     label16:
        $i15 = r2.<com.android.internal.app.ProcessStats$ProcessState: int mNumCachedKill>;

        if $i15 == 0 goto label17;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("Killed from cached state: ");

        $i14 = r2.<com.android.internal.app.ProcessStats$ProcessState: int mNumCachedKill>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i14);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" times from pss ");

        $l17 = r2.<com.android.internal.app.ProcessStats$ProcessState: long mMinCachedKillPss>;

        $l16 = 1024L * $l17;

        staticinvoke <com.android.internal.app.ProcessStats: void printSizeValue(java.io.PrintWriter,long)>(r0, $l16);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("-");

        $l19 = r2.<com.android.internal.app.ProcessStats$ProcessState: long mAvgCachedKillPss>;

        $l18 = 1024L * $l19;

        staticinvoke <com.android.internal.app.ProcessStats: void printSizeValue(java.io.PrintWriter,long)>(r0, $l18);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("-");

        $l21 = r2.<com.android.internal.app.ProcessStats$ProcessState: long mMaxCachedKillPss>;

        $l20 = 1024L * $l21;

        staticinvoke <com.android.internal.app.ProcessStats: void printSizeValue(java.io.PrintWriter,long)>(r0, $l20);

        virtualinvoke r0.<java.io.PrintWriter: void println()>();

     label17:
        return;
    }

    static void dumpProcessState(java.io.PrintWriter, java.lang.String, com.android.internal.app.ProcessStats$ProcessState, int[], int[], int[], long)
    {
        java.io.PrintWriter r0;
        java.lang.String r1, r6, $r8;
        com.android.internal.app.ProcessStats$ProcessState r2;
        int[] r3, r4, r5;
        long l0, l1, l10;
        int i2, i3, i4, i5, i6, i7, i8, i9, i11, $i12, i13, $i14, $i16, $i17, $i18, $i19, $i20, $i21, $i23, $i24, $i25, $i26;
        byte $b15, $b22;
        java.lang.String[] $r7;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: com.android.internal.app.ProcessStats$ProcessState;

        r3 := @parameter3: int[];

        r4 := @parameter4: int[];

        r5 := @parameter5: int[];

        l0 := @parameter6: long;

        l1 = 0L;

        i2 = -1;

        i3 = 0;

     label01:
        $i12 = lengthof r3;

        if i3 >= $i12 goto label14;

        i4 = -1;

        i5 = 0;

     label02:
        $i16 = lengthof r4;

        if i5 >= $i16 goto label13;

        i6 = 0;

     label03:
        $i19 = lengthof r5;

        if i6 >= $i19 goto label12;

        i7 = r3[i3];

        i9 = r4[i5];

        $i18 = i7 + i9;

        $i20 = 14 * $i18;

        $i21 = r5[i6];

        i8 = $i20 + $i21;

        l10 = virtualinvoke r2.<com.android.internal.app.ProcessStats$ProcessState: long getDuration(int,long)>(i8, l0);

        r6 = "";

        $i24 = r2.<com.android.internal.app.ProcessStats$ProcessState: int mCurState>;

        if $i24 != i8 goto label04;

        r6 = " (running)";

     label04:
        $b22 = l10 cmp 0L;

        if $b22 == 0 goto label09;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        $i23 = lengthof r3;

        if $i23 <= 1 goto label06;

        if i2 == i7 goto label10;

        i13 = i7;

     label05:
        staticinvoke <com.android.internal.app.ProcessStats: void printScreenLabel(java.io.PrintWriter,int)>(r0, i13);

        i2 = i7;

     label06:
        $i25 = lengthof r4;

        if $i25 <= 1 goto label08;

        if i4 == i9 goto label11;

        i11 = i9;

     label07:
        staticinvoke <com.android.internal.app.ProcessStats: void printMemLabel(java.io.PrintWriter,int,char)>(r0, i11, 47);

        i4 = i9;

     label08:
        $r7 = <com.android.internal.app.ProcessStats: java.lang.String[] STATE_NAMES>;

        $i26 = r5[i6];

        $r8 = $r7[$i26];

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r8);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>(l10, r0);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>(r6);

        l1 = l1 + l10;

     label09:
        i6 = i6 + 1;

        goto label03;

     label10:
        i13 = -1;

        goto label05;

     label11:
        i11 = -1;

        goto label07;

     label12:
        i5 = i5 + 1;

        goto label02;

     label13:
        i3 = i3 + 1;

        goto label01;

     label14:
        $b15 = l1 cmp 0L;

        if $b15 == 0 goto label17;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        $i14 = lengthof r3;

        if $i14 <= 1 goto label15;

        staticinvoke <com.android.internal.app.ProcessStats: void printScreenLabel(java.io.PrintWriter,int)>(r0, -1);

     label15:
        $i17 = lengthof r4;

        if $i17 <= 1 goto label16;

        staticinvoke <com.android.internal.app.ProcessStats: void printMemLabel(java.io.PrintWriter,int,char)>(r0, -1, 47);

     label16:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("TOTAL  : ");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>(l1, r0);

        virtualinvoke r0.<java.io.PrintWriter: void println()>();

     label17:
        return;
    }

    static void dumpProcessStateCsv(java.io.PrintWriter, com.android.internal.app.ProcessStats$ProcessState, boolean, int[], boolean, int[], boolean, int[], long)
    {
        java.io.PrintWriter r0;
        com.android.internal.app.ProcessStats$ProcessState r1;
        boolean z0, z1, z2;
        int[] r2, r3, r4;
        long l0, l13, $l26;
        int i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i14, i15, i16, i17, i18, i19, $i20, $i21, $i22, $i23, $i24, $i25;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: com.android.internal.app.ProcessStats$ProcessState;

        z0 := @parameter2: boolean;

        r2 := @parameter3: int[];

        z1 := @parameter4: boolean;

        r3 := @parameter5: int[];

        z2 := @parameter6: boolean;

        r4 := @parameter7: int[];

        l0 := @parameter8: long;

        if z0 == 0 goto label19;

        i1 = lengthof r2;

     label01:
        if z1 == 0 goto label20;

        i2 = lengthof r3;

     label02:
        if z2 == 0 goto label21;

        i3 = lengthof r4;

     label03:
        i4 = 0;

     label04:
        if i4 >= i1 goto label36;

        i5 = 0;

     label05:
        if i5 >= i2 goto label35;

        i6 = 0;

     label06:
        if i6 >= i3 goto label34;

        if z0 == 0 goto label22;

        i8 = r2[i4];

     label07:
        if z1 == 0 goto label23;

        i7 = r3[i5];

     label08:
        if z2 == 0 goto label24;

        i10 = r4[i6];

     label09:
        if z0 == 0 goto label25;

        i9 = 1;

     label10:
        if z1 == 0 goto label26;

        i12 = 1;

     label11:
        if z2 == 0 goto label27;

        i11 = 1;

     label12:
        l13 = 0L;

        i15 = 0;

     label13:
        if i15 >= i9 goto label33;

        i14 = 0;

     label14:
        if i14 >= i12 goto label32;

        i17 = 0;

     label15:
        if i17 >= i11 goto label31;

        if z0 == 0 goto label28;

        i16 = 0;

     label16:
        if z1 == 0 goto label29;

        i19 = 0;

     label17:
        if z2 == 0 goto label30;

        i18 = 0;

     label18:
        $i21 = i8 + i16;

        $i20 = i7 + $i21;

        $i24 = i19 + $i20;

        $i25 = 14 * $i24;

        $i22 = i10 + $i25;

        $i23 = i18 + $i22;

        $l26 = virtualinvoke r1.<com.android.internal.app.ProcessStats$ProcessState: long getDuration(int,long)>($i23, l0);

        l13 = l13 + $l26;

        i17 = i17 + 1;

        goto label15;

     label19:
        i1 = 1;

        goto label01;

     label20:
        i2 = 1;

        goto label02;

     label21:
        i3 = 1;

        goto label03;

     label22:
        i8 = 0;

        goto label07;

     label23:
        i7 = 0;

        goto label08;

     label24:
        i10 = 0;

        goto label09;

     label25:
        i9 = lengthof r2;

        goto label10;

     label26:
        i12 = lengthof r3;

        goto label11;

     label27:
        i11 = lengthof r4;

        goto label12;

     label28:
        i16 = r2[i15];

        goto label16;

     label29:
        i19 = r3[i14];

        goto label17;

     label30:
        i18 = r4[i17];

        goto label18;

     label31:
        i14 = i14 + 1;

        goto label14;

     label32:
        i15 = i15 + 1;

        goto label13;

     label33:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("\t");

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>(l13);

        i6 = i6 + 1;

        goto label06;

     label34:
        i5 = i5 + 1;

        goto label05;

     label35:
        i4 = i4 + 1;

        goto label04;

     label36:
        return;
    }

    static void dumpProcessSummaryDetails(java.io.PrintWriter, com.android.internal.app.ProcessStats$ProcessState, java.lang.String, java.lang.String, int[], int[], int[], long, long, boolean)
    {
        java.io.PrintWriter r0;
        com.android.internal.app.ProcessStats$ProcessState r1;
        java.lang.String r2, r3;
        int[] r4, r5, r6;
        long l0, l1, $l2, $l5;
        boolean z0;
        com.android.internal.app.ProcessStats$ProcessDataCollection r7, $r8;
        byte $b3, $b4;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: com.android.internal.app.ProcessStats$ProcessState;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: int[];

        r5 := @parameter5: int[];

        r6 := @parameter6: int[];

        l0 := @parameter7: long;

        l1 := @parameter8: long;

        z0 := @parameter9: boolean;

        $r8 = new com.android.internal.app.ProcessStats$ProcessDataCollection;

        specialinvoke $r8.<com.android.internal.app.ProcessStats$ProcessDataCollection: void <init>(int[],int[],int[])>(r4, r5, r6);

        r7 = $r8;

        staticinvoke <com.android.internal.app.ProcessStats: void computeProcessData(com.android.internal.app.ProcessStats$ProcessState,com.android.internal.app.ProcessStats$ProcessDataCollection,long)>(r1, r7, l0);

        $l2 = r7.<com.android.internal.app.ProcessStats$ProcessDataCollection: long totalTime>;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label1;

        $l5 = r7.<com.android.internal.app.ProcessStats$ProcessDataCollection: long numPss>;

        $b4 = $l5 cmp 0L;

        if $b4 == 0 goto label4;

     label1:
        if r2 == null goto label2;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r2);

     label2:
        if r3 == null goto label3;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r3);

     label3:
        virtualinvoke r7.<com.android.internal.app.ProcessStats$ProcessDataCollection: void print(java.io.PrintWriter,long,boolean)>(r0, l1, z0);

        if r2 == null goto label4;

        virtualinvoke r0.<java.io.PrintWriter: void println()>();

     label4:
        return;
    }

    static void dumpProcessSummaryLocked(java.io.PrintWriter, java.lang.String, java.util.ArrayList, int[], int[], int[], long, long)
    {
        java.io.PrintWriter r0;
        java.lang.String r1, $r8;
        java.util.ArrayList r2;
        int[] r3, r4, r5, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20;
        long l0, l1;
        int i2, $i3, $i4;
        com.android.internal.app.ProcessStats$ProcessState r6;
        java.lang.Object $r7;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.ArrayList;

        r3 := @parameter3: int[];

        r4 := @parameter4: int[];

        r5 := @parameter5: int[];

        l0 := @parameter6: long;

        l1 := @parameter7: long;

        $i3 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i2 = -1 + $i3;

     label1:
        if i2 < 0 goto label2;

        $r7 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r6 = (com.android.internal.app.ProcessStats$ProcessState) $r7;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("* ");

        $r8 = r6.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r8);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" / ");

        $i4 = r6.<com.android.internal.app.ProcessStats$ProcessState: int mUid>;

        staticinvoke <android.os.UserHandle: void formatUid(java.io.PrintWriter,int)>(r0, $i4);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>(":");

        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessSummaryDetails(java.io.PrintWriter,com.android.internal.app.ProcessStats$ProcessState,java.lang.String,java.lang.String,int[],int[],int[],long,long,boolean)>(r0, r6, r1, "         TOTAL: ", r3, r4, r5, l0, l1, 1);

        $r9 = newarray (int)[1];

        $r9[0] = 0;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessSummaryDetails(java.io.PrintWriter,com.android.internal.app.ProcessStats$ProcessState,java.lang.String,java.lang.String,int[],int[],int[],long,long,boolean)>(r0, r6, r1, "    Persistent: ", r3, r4, $r9, l0, l1, 1);

        $r11 = newarray (int)[1];

        $r11[0] = 1;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessSummaryDetails(java.io.PrintWriter,com.android.internal.app.ProcessStats$ProcessState,java.lang.String,java.lang.String,int[],int[],int[],long,long,boolean)>(r0, r6, r1, "           Top: ", r3, r4, $r11, l0, l1, 1);

        $r10 = newarray (int)[1];

        $r10[0] = 2;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessSummaryDetails(java.io.PrintWriter,com.android.internal.app.ProcessStats$ProcessState,java.lang.String,java.lang.String,int[],int[],int[],long,long,boolean)>(r0, r6, r1, "        Imp Fg: ", r3, r4, $r10, l0, l1, 1);

        $r13 = newarray (int)[1];

        $r13[0] = 3;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessSummaryDetails(java.io.PrintWriter,com.android.internal.app.ProcessStats$ProcessState,java.lang.String,java.lang.String,int[],int[],int[],long,long,boolean)>(r0, r6, r1, "        Imp Bg: ", r3, r4, $r13, l0, l1, 1);

        $r12 = newarray (int)[1];

        $r12[0] = 4;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessSummaryDetails(java.io.PrintWriter,com.android.internal.app.ProcessStats$ProcessState,java.lang.String,java.lang.String,int[],int[],int[],long,long,boolean)>(r0, r6, r1, "        Backup: ", r3, r4, $r12, l0, l1, 1);

        $r15 = newarray (int)[1];

        $r15[0] = 5;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessSummaryDetails(java.io.PrintWriter,com.android.internal.app.ProcessStats$ProcessState,java.lang.String,java.lang.String,int[],int[],int[],long,long,boolean)>(r0, r6, r1, "     Heavy Wgt: ", r3, r4, $r15, l0, l1, 1);

        $r14 = newarray (int)[1];

        $r14[0] = 6;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessSummaryDetails(java.io.PrintWriter,com.android.internal.app.ProcessStats$ProcessState,java.lang.String,java.lang.String,int[],int[],int[],long,long,boolean)>(r0, r6, r1, "       Service: ", r3, r4, $r14, l0, l1, 1);

        $r17 = newarray (int)[1];

        $r17[0] = 7;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessSummaryDetails(java.io.PrintWriter,com.android.internal.app.ProcessStats$ProcessState,java.lang.String,java.lang.String,int[],int[],int[],long,long,boolean)>(r0, r6, r1, "    Service Rs: ", r3, r4, $r17, l0, l1, 1);

        $r16 = newarray (int)[1];

        $r16[0] = 8;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessSummaryDetails(java.io.PrintWriter,com.android.internal.app.ProcessStats$ProcessState,java.lang.String,java.lang.String,int[],int[],int[],long,long,boolean)>(r0, r6, r1, "      Receiver: ", r3, r4, $r16, l0, l1, 1);

        $r19 = newarray (int)[1];

        $r19[0] = 9;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessSummaryDetails(java.io.PrintWriter,com.android.internal.app.ProcessStats$ProcessState,java.lang.String,java.lang.String,int[],int[],int[],long,long,boolean)>(r0, r6, r1, "        (Home): ", r3, r4, $r19, l0, l1, 1);

        $r18 = newarray (int)[1];

        $r18[0] = 10;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessSummaryDetails(java.io.PrintWriter,com.android.internal.app.ProcessStats$ProcessState,java.lang.String,java.lang.String,int[],int[],int[],long,long,boolean)>(r0, r6, r1, "    (Last Act): ", r3, r4, $r18, l0, l1, 1);

        $r20 = newarray (int)[3];

        $r20[0] = 11;

        $r20[1] = 12;

        $r20[2] = 13;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessSummaryDetails(java.io.PrintWriter,com.android.internal.app.ProcessStats$ProcessState,java.lang.String,java.lang.String,int[],int[],int[],long,long,boolean)>(r0, r6, r1, "      (Cached): ", r3, r4, $r20, l0, l1, 1);

        i2 = i2 + -1;

        goto label1;

     label2:
        return;
    }

    static void dumpServiceTimeCheckin(java.io.PrintWriter, java.lang.String, java.lang.String, int, java.lang.String, com.android.internal.app.ProcessStats$ServiceState, int, int, int, long, long)
    {
        java.io.PrintWriter r0;
        java.lang.String r1, r2, r3;
        int i0, i1, i2, i3, i6, i7, i8, i9, $i12, $i13, $i14, $i15, $i16;
        com.android.internal.app.ProcessStats$ServiceState r4;
        long l4, l5, l10, $l11, $l17;
        boolean z0;
        int[] $r5;
        com.android.internal.app.ProcessStats $r6;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: com.android.internal.app.ProcessStats$ServiceState;

        i1 := @parameter6: int;

        i2 := @parameter7: int;

        i3 := @parameter8: int;

        l4 := @parameter9: long;

        l5 := @parameter10: long;

        if i2 > 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(",");

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(",");

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>(i0);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(",");

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(",");

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>(i2);

        z0 = 0;

        i6 = 0;

     label2:
        $i12 = r4.<com.android.internal.app.ProcessStats$ServiceState: int mDurationsTableSize>;

        if i6 >= $i12 goto label6;

        $r5 = r4.<com.android.internal.app.ProcessStats$ServiceState: int[] mDurationsTable>;

        i7 = $r5[i6];

        $i13 = <com.android.internal.app.ProcessStats: int OFFSET_TYPE_SHIFT>;

        $i14 = i7 >> $i13;

        $i15 = <com.android.internal.app.ProcessStats: int OFFSET_TYPE_MASK>;

        i9 = $i14 & $i15;

        i8 = i9 / 4;

        $i16 = i9 % 4;

        if $i16 == i1 goto label4;

     label3:
        i6 = i6 + 1;

        goto label2;

     label4:
        $r6 = r4.<com.android.internal.app.ProcessStats$ServiceState: com.android.internal.app.ProcessStats mStats>;

        l10 = virtualinvoke $r6.<com.android.internal.app.ProcessStats: long getLong(int,int)>(i7, 0);

        if i3 != i8 goto label5;

        z0 = 1;

        $l17 = l5 - l4;

        l10 = l10 + $l17;

     label5:
        staticinvoke <com.android.internal.app.ProcessStats: void printAdjTagAndValue(java.io.PrintWriter,int,long)>(r0, i8, l10);

        goto label3;

     label6:
        if z0 != 0 goto label7;

        if i3 == -1 goto label7;

        $l11 = l5 - l4;

        staticinvoke <com.android.internal.app.ProcessStats: void printAdjTagAndValue(java.io.PrintWriter,int,long)>(r0, i3, $l11);

     label7:
        virtualinvoke r0.<java.io.PrintWriter: void println()>();

        return;
    }

    public static long dumpSingleServiceTime(java.io.PrintWriter, java.lang.String, com.android.internal.app.ProcessStats$ServiceState, int, int, long, long)
    {
        java.io.PrintWriter r0;
        java.lang.String r1, r3;
        com.android.internal.app.ProcessStats$ServiceState r2;
        int i0, i1, i5, i6, i7, i8, i9, i11, i13;
        long l2, l3, l4, l10;
        byte $b12, $b14;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: com.android.internal.app.ProcessStats$ServiceState;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        l2 := @parameter5: long;

        l3 := @parameter6: long;

        l4 = 0L;

        i5 = -1;

        i6 = 0;

     label01:
        if i6 >= 8 goto label11;

        i7 = -1;

        i8 = 0;

     label02:
        if i8 >= 4 goto label10;

        i9 = i8 + i6;

        l10 = staticinvoke <com.android.internal.app.ProcessStats$ServiceState: long access$000(com.android.internal.app.ProcessStats$ServiceState,int,int,long,int,long)>(r2, i0, i1, l2, i9, l3);

        r3 = "";

        if i1 != i9 goto label03;

        if r0 == null goto label03;

        r3 = " (running)";

     label03:
        $b14 = l10 cmp 0L;

        if $b14 == 0 goto label07;

        if r0 == null goto label06;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        if i5 == i6 goto label08;

        i11 = i6;

     label04:
        staticinvoke <com.android.internal.app.ProcessStats: void printScreenLabel(java.io.PrintWriter,int)>(r0, i11);

        i5 = i6;

        if i7 == i8 goto label09;

        i13 = i8;

     label05:
        staticinvoke <com.android.internal.app.ProcessStats: void printMemLabel(java.io.PrintWriter,int,char)>(r0, i13, 0);

        i7 = i8;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>(l10, r0);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>(r3);

     label06:
        l4 = l4 + l10;

     label07:
        i8 = i8 + 1;

        goto label02;

     label08:
        i11 = -1;

        goto label04;

     label09:
        i13 = -1;

        goto label05;

     label10:
        i6 = i6 + 4;

        goto label01;

     label11:
        $b12 = l4 cmp 0L;

        if $b12 == 0 goto label12;

        if r0 == null goto label12;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("    TOTAL: ");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>(l4, r0);

        virtualinvoke r0.<java.io.PrintWriter: void println()>();

     label12:
        return l4;
    }

    public static long dumpSingleTime(java.io.PrintWriter, java.lang.String, long[], int, long, long)
    {
        java.io.PrintWriter r0;
        java.lang.String r1, r3;
        long[] r2;
        int i0, i4, i5, i6, i7, i8, i10, i11;
        long l1, l2, l3, l9, $l14;
        byte $b12, $b13;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: long[];

        i0 := @parameter3: int;

        l1 := @parameter4: long;

        l2 := @parameter5: long;

        l3 = 0L;

        i4 = -1;

        i5 = 0;

     label01:
        if i5 >= 8 goto label11;

        i6 = -1;

        i7 = 0;

     label02:
        if i7 >= 4 goto label10;

        i8 = i7 + i5;

        l9 = r2[i8];

        r3 = "";

        if i0 != i8 goto label03;

        $l14 = l2 - l1;

        l9 = l9 + $l14;

        if r0 == null goto label03;

        r3 = " (running)";

     label03:
        $b12 = l9 cmp 0L;

        if $b12 == 0 goto label07;

        if r0 == null goto label06;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        if i4 == i5 goto label08;

        i11 = i5;

     label04:
        staticinvoke <com.android.internal.app.ProcessStats: void printScreenLabel(java.io.PrintWriter,int)>(r0, i11);

        i4 = i5;

        if i6 == i7 goto label09;

        i10 = i7;

     label05:
        staticinvoke <com.android.internal.app.ProcessStats: void printMemLabel(java.io.PrintWriter,int,char)>(r0, i10, 0);

        i6 = i7;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>(l9, r0);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>(r3);

     label06:
        l3 = l3 + l9;

     label07:
        i7 = i7 + 1;

        goto label02;

     label08:
        i11 = -1;

        goto label04;

     label09:
        i10 = -1;

        goto label05;

     label10:
        i5 = i5 + 4;

        goto label01;

     label11:
        $b13 = l3 cmp 0L;

        if $b13 == 0 goto label12;

        if r0 == null goto label12;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("    TOTAL: ");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>(l3, r0);

        virtualinvoke r0.<java.io.PrintWriter: void println()>();

     label12:
        return l3;
    }

    static void dumpStateHeadersCsv(java.io.PrintWriter, java.lang.String, int[], int[], int[])
    {
        java.io.PrintWriter r0;
        java.lang.String r1, $r6;
        int[] r2, r3, r4;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11;
        boolean z0;
        java.lang.String[] $r5;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: int[];

        r3 := @parameter3: int[];

        r4 := @parameter4: int[];

        if r2 == null goto label12;

        i0 = lengthof r2;

     label01:
        if r3 == null goto label13;

        i1 = lengthof r3;

     label02:
        if r4 == null goto label14;

        i2 = lengthof r4;

     label03:
        i3 = 0;

     label04:
        if i3 >= i0 goto label17;

        i4 = 0;

     label05:
        if i4 >= i1 goto label16;

        i5 = 0;

     label06:
        if i5 >= i2 goto label15;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        z0 = 0;

        if r2 == null goto label07;

        i6 = lengthof r2;

        z0 = 0;

        if i6 <= 1 goto label07;

        $i10 = r2[i3];

        staticinvoke <com.android.internal.app.ProcessStats: void printScreenLabelCsv(java.io.PrintWriter,int)>(r0, $i10);

        z0 = 1;

     label07:
        if r3 == null goto label09;

        $i9 = lengthof r3;

        if $i9 <= 1 goto label09;

        if z0 == 0 goto label08;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("-");

     label08:
        $i11 = r3[i4];

        staticinvoke <com.android.internal.app.ProcessStats: void printMemLabelCsv(java.io.PrintWriter,int)>(r0, $i11);

        z0 = 1;

     label09:
        if r4 == null goto label11;

        $i7 = lengthof r4;

        if $i7 <= 1 goto label11;

        if z0 == 0 goto label10;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("-");

     label10:
        $r5 = <com.android.internal.app.ProcessStats: java.lang.String[] STATE_NAMES_CSV>;

        $i8 = r4[i5];

        $r6 = $r5[$i8];

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r6);

     label11:
        i5 = i5 + 1;

        goto label06;

     label12:
        i0 = 1;

        goto label01;

     label13:
        i1 = 1;

        goto label02;

     label14:
        i2 = 1;

        goto label03;

     label15:
        i4 = i4 + 1;

        goto label05;

     label16:
        i3 = i3 + 1;

        goto label04;

     label17:
        return;
    }

    static void printAdjTag(java.io.PrintWriter, int)
    {
        java.io.PrintWriter r0;
        int i0, i1;
        java.lang.String[] $r1, $r2;

        r0 := @parameter0: java.io.PrintWriter;

        i0 := @parameter1: int;

        $r1 = <com.android.internal.app.ProcessStats: java.lang.String[] ADJ_SCREEN_TAGS>;

        i1 = staticinvoke <com.android.internal.app.ProcessStats: int printArrayEntry(java.io.PrintWriter,java.lang.String[],int,int)>(r0, $r1, i0, 4);

        $r2 = <com.android.internal.app.ProcessStats: java.lang.String[] ADJ_MEM_TAGS>;

        staticinvoke <com.android.internal.app.ProcessStats: int printArrayEntry(java.io.PrintWriter,java.lang.String[],int,int)>(r0, $r2, i1, 1);

        return;
    }

    static void printAdjTagAndValue(java.io.PrintWriter, int, long)
    {
        java.io.PrintWriter r0;
        int i0;
        long l1;

        r0 := @parameter0: java.io.PrintWriter;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        staticinvoke <com.android.internal.app.ProcessStats: void printAdjTag(java.io.PrintWriter,int)>(r0, i0);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(58);

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>(l1);

        return;
    }

    static int printArrayEntry(java.io.PrintWriter, java.lang.String[], int, int)
    {
        java.io.PrintWriter r0;
        java.lang.String[] r1;
        int i0, i1, i2, $i3, $i4, $i5;
        java.lang.String $r2;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.lang.String[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 = i0 / i1;

        if i2 < 0 goto label2;

        $i5 = lengthof r1;

        if i2 >= $i5 goto label2;

        $r2 = r1[i2];

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r2);

     label1:
        $i3 = i2 * i1;

        $i4 = i0 - $i3;

        return $i4;

     label2:
        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(63);

        goto label1;
    }

    static java.lang.String printLongOffset(int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        java.lang.StringBuilder r0, $r1;
        java.lang.String $r7;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>(16);

        r0 = $r1;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $i1 = <com.android.internal.app.ProcessStats: int OFFSET_ARRAY_SHIFT>;

        $i3 = i0 >> $i1;

        $i2 = <com.android.internal.app.ProcessStats: int OFFSET_ARRAY_MASK>;

        $i4 = $i3 & $i2;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("i");

        $i5 = <com.android.internal.app.ProcessStats: int OFFSET_INDEX_SHIFT>;

        $i7 = i0 >> $i5;

        $i6 = <com.android.internal.app.ProcessStats: int OFFSET_INDEX_MASK>;

        $i8 = $i7 & $i6;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("t");

        $i10 = <com.android.internal.app.ProcessStats: int OFFSET_TYPE_SHIFT>;

        $i12 = i0 >> $i10;

        $i9 = <com.android.internal.app.ProcessStats: int OFFSET_TYPE_MASK>;

        $i11 = $i12 & $i9;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r7 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    private static void printMemLabel(java.io.PrintWriter, int, char)
    {
        java.io.PrintWriter r0;
        int i0;
        char c1;

        r0 := @parameter0: java.io.PrintWriter;

        i0 := @parameter1: int;

        c1 := @parameter2: char;

        tableswitch(i0)
        {
            case -1: goto label3;
            case 0: goto label4;
            case 1: goto label5;
            case 2: goto label6;
            case 3: goto label7;
            default: goto label1;
        };

     label1:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("????");

        if c1 == 0 goto label2;

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(c1);

     label2:
        return;

     label3:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        if c1 == 0 goto label2;

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(32);

        return;

     label4:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("Norm");

        if c1 == 0 goto label2;

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(c1);

        return;

     label5:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("Mod ");

        if c1 == 0 goto label2;

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(c1);

        return;

     label6:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("Low ");

        if c1 == 0 goto label2;

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(c1);

        return;

     label7:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("Crit");

        if c1 == 0 goto label2;

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(c1);

        return;
    }

    public static void printMemLabelCsv(java.io.PrintWriter, int)
    {
        java.io.PrintWriter r0;
        int i0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @parameter0: java.io.PrintWriter;

        i0 := @parameter1: int;

        if i0 < 0 goto label1;

        if i0 > 3 goto label2;

        $r1 = <com.android.internal.app.ProcessStats: java.lang.String[] ADJ_MEM_NAMES_CSV>;

        $r2 = $r1[i0];

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r2);

     label1:
        return;

     label2:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("???");

        return;
    }

    static void printPercent(java.io.PrintWriter, double)
    {
        java.io.PrintWriter r0;
        double d0, d1;
        java.lang.Object[] r1, r2, r3;
        byte $b0, $b1;
        java.lang.Double $r4, $r6, $r8;
        java.lang.String $r5, $r7, $r9;

        r0 := @parameter0: java.io.PrintWriter;

        d0 := @parameter1: double;

        d1 = d0 * 100.0;

        $b0 = d1 cmpg 1.0;

        if $b0 >= 0 goto label2;

        r3 = newarray (java.lang.Object)[1];

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        r3[0] = $r8;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%.2f", r3);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r9);

     label1:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("%");

        return;

     label2:
        $b1 = d1 cmpg 10.0;

        if $b1 >= 0 goto label3;

        r2 = newarray (java.lang.Object)[1];

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        r2[0] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%.1f", r2);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r7);

        goto label1;

     label3:
        r1 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        r1[0] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%.0f", r1);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r5);

        goto label1;
    }

    static void printProcStateTag(java.io.PrintWriter, int)
    {
        java.io.PrintWriter r0;
        int i0, i1, i2;
        java.lang.String[] $r1, $r2, $r3;

        r0 := @parameter0: java.io.PrintWriter;

        i0 := @parameter1: int;

        $r1 = <com.android.internal.app.ProcessStats: java.lang.String[] ADJ_SCREEN_TAGS>;

        i1 = staticinvoke <com.android.internal.app.ProcessStats: int printArrayEntry(java.io.PrintWriter,java.lang.String[],int,int)>(r0, $r1, i0, 56);

        $r2 = <com.android.internal.app.ProcessStats: java.lang.String[] ADJ_MEM_TAGS>;

        i2 = staticinvoke <com.android.internal.app.ProcessStats: int printArrayEntry(java.io.PrintWriter,java.lang.String[],int,int)>(r0, $r2, i1, 14);

        $r3 = <com.android.internal.app.ProcessStats: java.lang.String[] STATE_TAGS>;

        staticinvoke <com.android.internal.app.ProcessStats: int printArrayEntry(java.io.PrintWriter,java.lang.String[],int,int)>(r0, $r3, i2, 1);

        return;
    }

    static void printProcStateTagAndValue(java.io.PrintWriter, int, long)
    {
        java.io.PrintWriter r0;
        int i0;
        long l1;

        r0 := @parameter0: java.io.PrintWriter;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        staticinvoke <com.android.internal.app.ProcessStats: void printProcStateTag(java.io.PrintWriter,int)>(r0, i0);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(58);

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>(l1);

        return;
    }

    private static void printScreenLabel(java.io.PrintWriter, int)
    {
        java.io.PrintWriter r0;
        int i0;

        r0 := @parameter0: java.io.PrintWriter;

        i0 := @parameter1: int;

        tableswitch(i0)
        {
            case -1: goto label2;
            case 0: goto label3;
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label1;
            case 4: goto label4;
            default: goto label1;
        };

     label1:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("????/");

        return;

     label2:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("     ");

        return;

     label3:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("SOff/");

        return;

     label4:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("SOn /");

        return;
    }

    public static void printScreenLabelCsv(java.io.PrintWriter, int)
    {
        java.io.PrintWriter r0;
        int i0;
        java.lang.String[] $r1, $r3;
        java.lang.String $r2, $r4;

        r0 := @parameter0: java.io.PrintWriter;

        i0 := @parameter1: int;

        tableswitch(i0)
        {
            case -1: goto label2;
            case 0: goto label3;
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label1;
            case 4: goto label4;
            default: goto label1;
        };

     label1:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("???");

     label2:
        return;

     label3:
        $r3 = <com.android.internal.app.ProcessStats: java.lang.String[] ADJ_SCREEN_NAMES_CSV>;

        $r4 = $r3[0];

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r4);

        return;

     label4:
        $r1 = <com.android.internal.app.ProcessStats: java.lang.String[] ADJ_SCREEN_NAMES_CSV>;

        $r2 = $r1[1];

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r2);

        return;
    }

    static void printSizeValue(java.io.PrintWriter, long)
    {
        java.io.PrintWriter r0;
        long l0;
        float f0;
        java.lang.String r1, r3;
        java.lang.Object[] r2, r4, r5, r6;
        byte $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8;
        java.lang.Float $r7, $r8, $r9, $r10;

        r0 := @parameter0: java.io.PrintWriter;

        l0 := @parameter1: long;

        f0 = (float) l0;

        r1 = "";

        $b1 = f0 cmpl 900.0F;

        if $b1 <= 0 goto label1;

        r1 = "KB";

        f0 = f0 / 1024.0F;

     label1:
        $b2 = f0 cmpl 900.0F;

        if $b2 <= 0 goto label2;

        r1 = "MB";

        f0 = f0 / 1024.0F;

     label2:
        $b3 = f0 cmpl 900.0F;

        if $b3 <= 0 goto label3;

        r1 = "GB";

        f0 = f0 / 1024.0F;

     label3:
        $b4 = f0 cmpl 900.0F;

        if $b4 <= 0 goto label4;

        r1 = "TB";

        f0 = f0 / 1024.0F;

     label4:
        $b5 = f0 cmpl 900.0F;

        if $b5 <= 0 goto label5;

        r1 = "PB";

        f0 = f0 / 1024.0F;

     label5:
        $b6 = f0 cmpg 1.0F;

        if $b6 >= 0 goto label7;

        r6 = newarray (java.lang.Object)[1];

        $r10 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        r6[0] = $r10;

        r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%.2f", r6);

     label6:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        return;

     label7:
        $b8 = f0 cmpg 10.0F;

        if $b8 >= 0 goto label8;

        r5 = newarray (java.lang.Object)[1];

        $r9 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        r5[0] = $r9;

        r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%.1f", r5);

        goto label6;

     label8:
        $b7 = f0 cmpg 100.0F;

        if $b7 >= 0 goto label9;

        r4 = newarray (java.lang.Object)[1];

        $r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        r4[0] = $r8;

        r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%.0f", r4);

        goto label6;

     label9:
        r2 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        r2[0] = $r7;

        r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%.0f", r2);

        goto label6;
    }

    private boolean readCheckedInt(android.os.Parcel, int, java.lang.String)
    {
        com.android.internal.app.ProcessStats r0;
        android.os.Parcel r1;
        int i0, i1;
        java.lang.String r2, $r8;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i1 == i0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.internal.app.ProcessStats: java.lang.String mReadError> = $r8;

        return 0;

     label1:
        return 1;
    }

    private java.lang.String readCommonString(android.os.Parcel, int)
    {
        com.android.internal.app.ProcessStats r0;
        android.os.Parcel r1;
        int i0, i1, i2, $i3;
        java.lang.String r2, $r9, $r10;
        java.util.ArrayList $r3, $r4, $r6, $r7;
        java.lang.Object $r8;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        if i0 > 9 goto label1;

        $r9 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        return $r9;

     label1:
        i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i1 < 0 goto label2;

        $r7 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mIndexToCommonString>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r10 = (java.lang.String) $r8;

        return $r10;

     label2:
        i2 = i1 ^ -1;

        r2 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

     label3:
        $r3 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mIndexToCommonString>;

        $i3 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i3 > i2 goto label4;

        $r6 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mIndexToCommonString>;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(null);

        goto label3;

     label4:
        $r4 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mIndexToCommonString>;

        virtualinvoke $r4.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i2, r2);

        return r2;
    }

    private void readCompactedLongArray(android.os.Parcel, int, long[], int)
    {
        com.android.internal.app.ProcessStats r0;
        android.os.Parcel r1;
        int i0, i1, i2, i3, i4, i5, $i6;
        long[] r2;
        long $l7, $l8, $l9, $l10, $l11;
        java.lang.RuntimeException $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r9;
        java.lang.String $r8;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        r2 := @parameter2: long[];

        i1 := @parameter3: int;

        if i0 > 10 goto label2;

        virtualinvoke r1.<android.os.Parcel: void readLongArray(long[])>(r2);

     label1:
        return;

     label2:
        i2 = lengthof r2;

        if i1 <= i2 goto label3;

        $r3 = new java.lang.RuntimeException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad array lengths: got ");

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" array is ");

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label3:
        i3 = 0;

     label4:
        if i3 >= i1 goto label7;

        i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i4 < 0 goto label6;

        $l11 = (long) i4;

        r2[i3] = $l11;

     label5:
        i3 = i3 + 1;

        goto label4;

     label6:
        i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i6 = i4 ^ -1;

        $l7 = (long) $i6;

        $l9 = $l7 << 32;

        $l8 = (long) i5;

        $l10 = $l9 | $l8;

        r2[i3] = $l10;

        goto label5;

     label7:
        if i3 >= i2 goto label1;

        r2[i3] = 0L;

        i3 = i3 + 1;

        goto label7;
    }

    static byte[] readFully(java.io.InputStream, int[]) throws java.io.IOException
    {
        java.io.InputStream r0;
        int[] r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        byte[] r2, r3;

        r0 := @parameter0: java.io.InputStream;

        r1 := @parameter1: int[];

        i0 = 0;

        i1 = virtualinvoke r0.<java.io.InputStream: int available()>();

        if i1 <= 0 goto label3;

        i2 = i1 + 1;

     label1:
        r2 = newarray (byte)[i2];

     label2:
        $i4 = lengthof r2;

        $i5 = $i4 - i0;

        i3 = virtualinvoke r0.<java.io.InputStream: int read(byte[],int,int)>(r2, i0, $i5);

        if i3 >= 0 goto label4;

        r1[0] = i0;

        return r2;

     label3:
        i2 = 16384;

        goto label1;

     label4:
        i0 = i0 + i3;

        $i6 = lengthof r2;

        if i0 < $i6 goto label2;

        $i7 = i0 + 16384;

        r3 = newarray (byte)[$i7];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r3, 0, i0);

        r2 = r3;

        goto label2;
    }

    private int[] readTableFromParcel(android.os.Parcel, java.lang.String, java.lang.String)
    {
        com.android.internal.app.ProcessStats r0;
        android.os.Parcel r1;
        java.lang.String r2, r3, $r9, $r10, $r16;
        int i0, i1, $i2, $i3, $i4;
        int[] r4;
        boolean $z0;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r11, $r12, $r13, $r14, $r15, $r17;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i0 >= 0 goto label2;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring existing stats; bad ");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" table size: ");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ProcessStats", $r16);

        r4 = <com.android.internal.app.ProcessStats: int[] BAD_TABLE>;

     label1:
        return r4;

     label2:
        if i0 != 0 goto label3;

        return null;

     label3:
        r4 = newarray (int)[i0];

        i1 = 0;

     label4:
        if i1 >= i0 goto label1;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r4[i1] = $i2;

        $i3 = r4[i1];

        $z0 = virtualinvoke r0.<com.android.internal.app.ProcessStats: boolean validateLongOffset(int)>($i3);

        if $z0 != 0 goto label5;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring existing stats; bad ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" table entry: ");

        $i4 = r4[i1];

        $r9 = staticinvoke <com.android.internal.app.ProcessStats: java.lang.String printLongOffset(int)>($i4);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ProcessStats", $r10);

        return null;

     label5:
        i1 = i1 + 1;

        goto label4;
    }

    private void resetCommon()
    {
        com.android.internal.app.ProcessStats r0;
        long l0, $l1;
        java.util.ArrayList $r1, $r3;
        long[] $r2, $r4;

        r0 := @this: com.android.internal.app.ProcessStats;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.internal.app.ProcessStats: long mTimePeriodStartClock> = $l1;

        specialinvoke r0.<com.android.internal.app.ProcessStats: void buildTimePeriodStartClockStr()>();

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.internal.app.ProcessStats: long mTimePeriodEndRealtime> = l0;

        r0.<com.android.internal.app.ProcessStats: long mTimePeriodStartRealtime> = l0;

        $r1 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        $r3 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs>;

        $r2 = newarray (long)[4096];

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        r0.<com.android.internal.app.ProcessStats: int mNextLong> = 0;

        $r4 = r0.<com.android.internal.app.ProcessStats: long[] mMemFactorDurations>;

        staticinvoke <java.util.Arrays: void fill(long[],long)>($r4, 0L);

        r0.<com.android.internal.app.ProcessStats: long mStartTime> = 0L;

        r0.<com.android.internal.app.ProcessStats: java.lang.String mReadError> = null;

        r0.<com.android.internal.app.ProcessStats: int mFlags> = 0;

        virtualinvoke r0.<com.android.internal.app.ProcessStats: boolean evaluateSystemProperties(boolean)>(1);

        return;
    }

    private void writeCommonString(android.os.Parcel, java.lang.String)
    {
        com.android.internal.app.ProcessStats r0;
        android.os.Parcel r1;
        java.lang.String r2;
        java.lang.Integer r3, r4;
        android.util.ArrayMap $r5, $r7, $r8;
        java.lang.Object $r6;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: java.lang.String;

        $r5 = r0.<com.android.internal.app.ProcessStats: android.util.ArrayMap mCommonStringToIndex>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        r3 = (java.lang.Integer) $r6;

        if r3 == null goto label1;

        $i3 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        return;

     label1:
        $r7 = r0.<com.android.internal.app.ProcessStats: android.util.ArrayMap mCommonStringToIndex>;

        $i0 = virtualinvoke $r7.<android.util.ArrayMap: int size()>();

        r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r8 = r0.<com.android.internal.app.ProcessStats: android.util.ArrayMap mCommonStringToIndex>;

        virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r4);

        $i1 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        $i2 = -1 ^ $i1;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        return;
    }

    private void writeCompactedLongArray(android.os.Parcel, long[], int)
    {
        com.android.internal.app.ProcessStats r0;
        android.os.Parcel r1;
        long[] r2;
        int i0, i1, i3, i4, $i9, $i11;
        long l2, $l7, $l8, $l10;
        byte $b5, $b6;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: long[];

        i0 := @parameter2: int;

        i1 = 0;

     label1:
        if i1 >= i0 goto label5;

        l2 = r2[i1];

        $b5 = l2 cmp 0L;

        if $b5 >= 0 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Time val negative: ");

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l2);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ProcessStats", $r6);

        l2 = 0L;

     label2:
        $b6 = l2 cmp 2147483647L;

        if $b6 > 0 goto label4;

        $i11 = (int) l2;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i11);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        $l7 = l2 >> 32;

        $l8 = 2147483647L & $l7;

        $i9 = (int) $l8;

        i3 = -1 ^ $i9;

        $l10 = 268435455L & l2;

        i4 = (int) $l10;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i3);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i4);

        goto label3;

     label5:
        return;
    }

    public void add(com.android.internal.app.ProcessStats)
    {
        com.android.internal.app.ProcessStats r0, r1;
        android.util.ArrayMap r2, r3, $r31, $r33, $r38, $r44, $r46, $r48, $r55;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, $i12, $i13, $i24, $i27;
        long[] r4, $r21;
        android.util.SparseArray r5, r11;
        com.android.internal.app.ProcessStats$ProcessState r6, r7, r15, r16, $r29, $r49, $r50;
        java.lang.String r8, r9, r12, r19, $r22, $r25, $r28, $r32, $r35, $r36, $r42, $r43, $r52, $r54;
        com.android.internal.app.ProcessStats$PackageState r10, r13, r18;
        com.android.internal.app.ProcessStats$ServiceState r14, $r45;
        long l11, $l15, $l16, $l17, $l18, $l19, $l20, $l21, $l22, $l23, $l25, $l26;
        com.android.internal.app.ProcessMap $r17, $r20, $r24, $r27;
        byte $b14;
        java.lang.Object $r23, $r26, $r30, $r37, $r40, $r41, $r47, $r51;
        boolean $z0;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: com.android.internal.app.ProcessStats;

        $r17 = r1.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mPackages>;

        r2 = virtualinvoke $r17.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        i0 = 0;

     label01:
        $i13 = virtualinvoke r2.<android.util.ArrayMap: int size()>();

        if i0 >= $i13 goto label10;

        $r40 = virtualinvoke r2.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i0);

        r12 = (java.lang.String) $r40;

        $r41 = virtualinvoke r2.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i0);

        r11 = (android.util.SparseArray) $r41;

        i6 = 0;

     label02:
        $i27 = virtualinvoke r11.<android.util.SparseArray: int size()>();

        if i6 >= $i27 goto label09;

        i5 = virtualinvoke r11.<android.util.SparseArray: int keyAt(int)>(i6);

        $r37 = virtualinvoke r11.<android.util.SparseArray: java.lang.Object valueAt(int)>(i6);

        r13 = (com.android.internal.app.ProcessStats$PackageState) $r37;

        $r38 = r13.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        i7 = virtualinvoke $r38.<android.util.ArrayMap: int size()>();

        $r46 = r13.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        i9 = virtualinvoke $r46.<android.util.ArrayMap: int size()>();

        i8 = 0;

     label03:
        if i8 >= i7 goto label06;

        $r44 = r13.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r51 = virtualinvoke $r44.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i8);

        r16 = (com.android.internal.app.ProcessStats$ProcessState) $r51;

        $r50 = r16.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        if $r50 == r16 goto label05;

        $r52 = r16.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        r15 = virtualinvoke r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessStats$ProcessState getProcessStateLocked(java.lang.String,int,java.lang.String)>(r12, i5, $r52);

        $r49 = r15.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        if $r49 != r15 goto label04;

        r15.<com.android.internal.app.ProcessStats$ProcessState: boolean mMultiPackage> = 1;

        l11 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r18 = virtualinvoke r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessStats$PackageState getPackageStateLocked(java.lang.String,int)>(r12, i5);

        r19 = r15.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mPackage>;

        r15 = virtualinvoke r15.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState clone(java.lang.String,long)>(r19, l11);

        $r55 = r18.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r54 = r15.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        virtualinvoke $r55.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r54, r15);

     label04:
        virtualinvoke r15.<com.android.internal.app.ProcessStats$ProcessState: void add(com.android.internal.app.ProcessStats$ProcessState)>(r16);

     label05:
        i8 = i8 + 1;

        goto label03;

     label06:
        i10 = 0;

     label07:
        if i10 >= i9 goto label08;

        $r48 = r13.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        $r47 = virtualinvoke $r48.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i10);

        r14 = (com.android.internal.app.ProcessStats$ServiceState) $r47;

        $r42 = r14.<com.android.internal.app.ProcessStats$ServiceState: java.lang.String mProcessName>;

        $r43 = r14.<com.android.internal.app.ProcessStats$ServiceState: java.lang.String mName>;

        $r45 = virtualinvoke r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessStats$ServiceState getServiceStateLocked(java.lang.String,int,java.lang.String,java.lang.String)>(r12, i5, $r42, $r43);

        virtualinvoke $r45.<com.android.internal.app.ProcessStats$ServiceState: void add(com.android.internal.app.ProcessStats$ServiceState)>(r14);

        i10 = i10 + 1;

        goto label07;

     label08:
        i6 = i6 + 1;

        goto label02;

     label09:
        i0 = i0 + 1;

        goto label01;

     label10:
        $r20 = r1.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mProcesses>;

        r3 = virtualinvoke $r20.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        i1 = 0;

     label11:
        $i12 = virtualinvoke r3.<android.util.ArrayMap: int size()>();

        if i1 >= $i12 goto label15;

        $r23 = virtualinvoke r3.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        r5 = (android.util.SparseArray) $r23;

        i3 = 0;

     label12:
        $i24 = virtualinvoke r5.<android.util.SparseArray: int size()>();

        if i3 >= $i24 goto label14;

        i4 = virtualinvoke r5.<android.util.SparseArray: int keyAt(int)>(i3);

        $r26 = virtualinvoke r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        r6 = (com.android.internal.app.ProcessStats$ProcessState) $r26;

        $r24 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mProcesses>;

        $r25 = r6.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        $r30 = virtualinvoke $r24.<com.android.internal.app.ProcessMap: java.lang.Object get(java.lang.String,int)>($r25, i4);

        r7 = (com.android.internal.app.ProcessStats$ProcessState) $r30;

        if r7 != null goto label13;

        r8 = r6.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mPackage>;

        r9 = r6.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        $r29 = new com.android.internal.app.ProcessStats$ProcessState;

        specialinvoke $r29.<com.android.internal.app.ProcessStats$ProcessState: void <init>(com.android.internal.app.ProcessStats,java.lang.String,int,java.lang.String)>(r0, r8, i4, r9);

        r7 = $r29;

        $r27 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mProcesses>;

        $r28 = r6.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        virtualinvoke $r27.<com.android.internal.app.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>($r28, i4, r7);

        $r35 = r6.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mPackage>;

        r10 = virtualinvoke r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessStats$PackageState getPackageStateLocked(java.lang.String,int)>($r35, i4);

        $r31 = r10.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r36 = r6.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        $z0 = virtualinvoke $r31.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>($r36);

        if $z0 != 0 goto label13;

        $r33 = r10.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r32 = r6.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        virtualinvoke $r33.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r32, r7);

     label13:
        virtualinvoke r7.<com.android.internal.app.ProcessStats$ProcessState: void add(com.android.internal.app.ProcessStats$ProcessState)>(r6);

        i3 = i3 + 1;

        goto label12;

     label14:
        i1 = i1 + 1;

        goto label11;

     label15:
        i2 = 0;

     label16:
        if i2 >= 8 goto label17;

        r4 = r0.<com.android.internal.app.ProcessStats: long[] mMemFactorDurations>;

        $l26 = r4[i2];

        $r21 = r1.<com.android.internal.app.ProcessStats: long[] mMemFactorDurations>;

        $l22 = $r21[i2];

        $l25 = $l26 + $l22;

        r4[i2] = $l25;

        i2 = i2 + 1;

        goto label16;

     label17:
        $l17 = r1.<com.android.internal.app.ProcessStats: long mTimePeriodStartClock>;

        $l16 = r0.<com.android.internal.app.ProcessStats: long mTimePeriodStartClock>;

        $b14 = $l17 cmp $l16;

        if $b14 >= 0 goto label18;

        $l23 = r1.<com.android.internal.app.ProcessStats: long mTimePeriodStartClock>;

        r0.<com.android.internal.app.ProcessStats: long mTimePeriodStartClock> = $l23;

        $r22 = r1.<com.android.internal.app.ProcessStats: java.lang.String mTimePeriodStartClockStr>;

        r0.<com.android.internal.app.ProcessStats: java.lang.String mTimePeriodStartClockStr> = $r22;

     label18:
        $l18 = r0.<com.android.internal.app.ProcessStats: long mTimePeriodEndRealtime>;

        $l20 = r1.<com.android.internal.app.ProcessStats: long mTimePeriodEndRealtime>;

        $l15 = r1.<com.android.internal.app.ProcessStats: long mTimePeriodStartRealtime>;

        $l21 = $l20 - $l15;

        $l19 = $l18 + $l21;

        r0.<com.android.internal.app.ProcessStats: long mTimePeriodEndRealtime> = $l19;

        return;
    }

    int addLongData(int, int, int)
    {
        com.android.internal.app.ProcessStats r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        int[] r1, $r2, $r3, $r4, $r5, $r6, $r7;

        r0 := @this: com.android.internal.app.ProcessStats;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r2 = r0.<com.android.internal.app.ProcessStats: int[] mAddLongTable>;

        if $r2 == null goto label5;

        $r6 = r0.<com.android.internal.app.ProcessStats: int[] mAddLongTable>;

        i3 = lengthof $r6;

     label1:
        $i5 = r0.<com.android.internal.app.ProcessStats: int mAddLongTableSize>;

        if $i5 < i3 goto label3;

        $i16 = i3 + 1;

        $i15 = staticinvoke <com.android.internal.util.ArrayUtils: int idealIntArraySize(int)>($i16);

        r1 = newarray (int)[$i15];

        if i3 <= 0 goto label2;

        $r7 = r0.<com.android.internal.app.ProcessStats: int[] mAddLongTable>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, r1, 0, i3);

     label2:
        r0.<com.android.internal.app.ProcessStats: int[] mAddLongTable> = r1;

     label3:
        $i6 = r0.<com.android.internal.app.ProcessStats: int mAddLongTableSize>;

        if $i6 <= 0 goto label4;

        $i10 = r0.<com.android.internal.app.ProcessStats: int mAddLongTableSize>;

        $i12 = $i10 - i0;

        if $i12 == 0 goto label4;

        $r4 = r0.<com.android.internal.app.ProcessStats: int[] mAddLongTable>;

        $r5 = r0.<com.android.internal.app.ProcessStats: int[] mAddLongTable>;

        $i13 = i0 + 1;

        $i11 = r0.<com.android.internal.app.ProcessStats: int mAddLongTableSize>;

        $i14 = $i11 - i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, i0, $r5, $i13, $i14);

     label4:
        i4 = virtualinvoke r0.<com.android.internal.app.ProcessStats: int allocLongData(int)>(i2);

        $r3 = r0.<com.android.internal.app.ProcessStats: int[] mAddLongTable>;

        $i7 = i1 | i4;

        $r3[i0] = $i7;

        $i8 = r0.<com.android.internal.app.ProcessStats: int mAddLongTableSize>;

        $i9 = 1 + $i8;

        r0.<com.android.internal.app.ProcessStats: int mAddLongTableSize> = $i9;

        return i4;

     label5:
        i3 = 0;

        goto label1;
    }

    int allocLongData(int)
    {
        com.android.internal.app.ProcessStats r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        long[] r1, r2;
        java.util.ArrayList $r3, $r4, $r6;
        java.lang.Object $r5;

        r0 := @this: com.android.internal.app.ProcessStats;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs>;

        $i3 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i1 = -1 + $i3;

        $r4 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r1 = (long[]) $r5;

        $i4 = r0.<com.android.internal.app.ProcessStats: int mNextLong>;

        $i6 = i0 + $i4;

        $i5 = lengthof r1;

        if $i6 <= $i5 goto label1;

        r2 = newarray (long)[4096];

        $r6 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs>;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        i1 = i1 + 1;

        r0.<com.android.internal.app.ProcessStats: int mNextLong> = 0;

     label1:
        $i7 = <com.android.internal.app.ProcessStats: int OFFSET_ARRAY_SHIFT>;

        $i12 = i1 << $i7;

        $i10 = r0.<com.android.internal.app.ProcessStats: int mNextLong>;

        $i8 = <com.android.internal.app.ProcessStats: int OFFSET_INDEX_SHIFT>;

        $i9 = $i10 << $i8;

        i2 = $i12 | $i9;

        $i11 = r0.<com.android.internal.app.ProcessStats: int mNextLong>;

        $i13 = i0 + $i11;

        r0.<com.android.internal.app.ProcessStats: int mNextLong> = $i13;

        return i2;
    }

    java.lang.String collapseString(java.lang.String, java.lang.String)
    {
        com.android.internal.app.ProcessStats r0;
        java.lang.String r1, r2, $r3;
        int i0, i1;
        boolean $z0;
        char $c2;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        i0 = virtualinvoke r2.<java.lang.String: int length()>();

        i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if i0 != i1 goto label2;

        r2 = "";

     label1:
        return r2;

     label2:
        if i0 < i1 goto label1;

        $c2 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i1);

        if $c2 != 46 goto label1;

        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(i1);

        return $r3;
    }

    public java.util.ArrayList collectProcessesLocked(int[], int[], int[], int[], long, java.lang.String, boolean)
    {
        com.android.internal.app.ProcessStats r0;
        int[] r1, r2, r3, r4;
        long l0, $l8;
        java.lang.String r5, r11, $r26;
        boolean z0, z1, $z3, $z4, $z6;
        android.util.ArraySet r6, $r15;
        android.util.ArrayMap r7, $r21, $r25;
        int i1, i2, i3, i4, i5, $i6, $i7, $i9, $i12;
        java.util.ArrayList r8, $r16;
        com.android.internal.app.ProcessStats$ProcessState r9, r13, $r24;
        android.util.SparseArray r10;
        com.android.internal.app.ProcessStats$PackageState r12;
        com.android.internal.app.ProcessMap $r14;
        java.lang.Object $r17, $r19, $r20, $r22, $r23;
        com.android.internal.app.ProcessStats$2 $r18;
        byte $b11;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: int[];

        r2 := @parameter1: int[];

        r3 := @parameter2: int[];

        r4 := @parameter3: int[];

        l0 := @parameter4: long;

        r5 := @parameter5: java.lang.String;

        z0 := @parameter6: boolean;

        $r15 = new android.util.ArraySet;

        specialinvoke $r15.<android.util.ArraySet: void <init>()>();

        r6 = $r15;

        $r14 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mPackages>;

        r7 = virtualinvoke $r14.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        i1 = 0;

     label01:
        $i6 = virtualinvoke r7.<android.util.ArrayMap: int size()>();

        if i1 >= $i6 goto label12;

        $r19 = virtualinvoke r7.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i1);

        r11 = (java.lang.String) $r19;

        $r22 = virtualinvoke r7.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        r10 = (android.util.SparseArray) $r22;

        i3 = 0;

     label02:
        $i12 = virtualinvoke r10.<android.util.SparseArray: int size()>();

        if i3 >= $i12 goto label11;

        $r20 = virtualinvoke r10.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        r12 = (com.android.internal.app.ProcessStats$PackageState) $r20;

        $r21 = r12.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        i4 = virtualinvoke $r21.<android.util.ArrayMap: int size()>();

        if r5 == null goto label03;

        $z6 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>(r11);

        if $z6 == 0 goto label07;

     label03:
        z1 = 1;

     label04:
        i5 = 0;

     label05:
        if i5 >= i4 goto label10;

        $r25 = r12.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r23 = virtualinvoke $r25.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i5);

        r13 = (com.android.internal.app.ProcessStats$ProcessState) $r23;

        if z1 != 0 goto label08;

        $r26 = r13.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        $z3 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>($r26);

        if $z3 != 0 goto label08;

     label06:
        i5 = i5 + 1;

        goto label05;

     label07:
        z1 = 0;

        goto label04;

     label08:
        if z0 == 0 goto label09;

        $z4 = virtualinvoke r13.<com.android.internal.app.ProcessStats$ProcessState: boolean isInUse()>();

        if $z4 == 0 goto label06;

     label09:
        $r24 = r13.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        virtualinvoke r6.<android.util.ArraySet: boolean add(java.lang.Object)>($r24);

        goto label06;

     label10:
        i3 = i3 + 1;

        goto label02;

     label11:
        i1 = i1 + 1;

        goto label01;

     label12:
        $r16 = new java.util.ArrayList;

        $i7 = virtualinvoke r6.<android.util.ArraySet: int size()>();

        specialinvoke $r16.<java.util.ArrayList: void <init>(int)>($i7);

        r8 = $r16;

        i2 = 0;

     label13:
        $i9 = virtualinvoke r6.<android.util.ArraySet: int size()>();

        if i2 >= $i9 goto label15;

        $r17 = virtualinvoke r6.<android.util.ArraySet: java.lang.Object valueAt(int)>(i2);

        r9 = (com.android.internal.app.ProcessStats$ProcessState) $r17;

        $l8 = staticinvoke <com.android.internal.app.ProcessStats: long computeProcessTimeLocked(com.android.internal.app.ProcessStats$ProcessState,int[],int[],int[],long)>(r9, r1, r2, r3, l0);

        $b11 = $l8 cmp 0L;

        if $b11 <= 0 goto label14;

        virtualinvoke r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r9);

        if r3 == r4 goto label14;

        staticinvoke <com.android.internal.app.ProcessStats: long computeProcessTimeLocked(com.android.internal.app.ProcessStats$ProcessState,int[],int[],int[],long)>(r9, r1, r2, r4, l0);

     label14:
        i2 = i2 + 1;

        goto label13;

     label15:
        $r18 = new com.android.internal.app.ProcessStats$2;

        specialinvoke $r18.<com.android.internal.app.ProcessStats$2: void <init>(com.android.internal.app.ProcessStats)>(r0);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r8, $r18);

        return r8;
    }

    public int describeContents()
    {
        com.android.internal.app.ProcessStats r0;

        r0 := @this: com.android.internal.app.ProcessStats;

        return 0;
    }

    public void dumpCheckinLocked(java.io.PrintWriter, java.lang.String)
    {
        com.android.internal.app.ProcessStats r0;
        java.io.PrintWriter r1;
        java.lang.String r2, r5, r9, r12, $r15, $r16, $r17, $r30, $r33, $r35, $r39, $r41, $r43, $r46;
        long l0, l1, $l17, $l23, $l33, $l34, $l35, $l36, $l42, $l44, $l45, $l55, $l56, $l57;
        android.util.ArrayMap r3, r4, $r25, $r26, $r28, $r32, $r37, $r38, $r42, $r45;
        boolean z0, $z1, $z2;
        int i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, $i16, $i18, $i19, $i20, $i21, $i22, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i37, $i38, $i39, $i40, $i41, $i43, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54;
        android.util.SparseArray r6, r8;
        com.android.internal.app.ProcessStats$ProcessState r7, r14;
        com.android.internal.app.ProcessStats$PackageState r10;
        com.android.internal.app.ProcessStats$ServiceState r11;
        com.android.internal.app.ProcessMap $r13, $r18;
        java.lang.Object $r19, $r20, $r22, $r23, $r24, $r27, $r29, $r31, $r34, $r36, $r40, $r44;
        long[] $r21;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r13 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mPackages>;

        r3 = virtualinvoke $r13.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("vers,3");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("period,");

        $r15 = r0.<com.android.internal.app.ProcessStats: java.lang.String mTimePeriodStartClockStr>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r15);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $l17 = r0.<com.android.internal.app.ProcessStats: long mTimePeriodStartRealtime>;

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l17);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $z1 = r0.<com.android.internal.app.ProcessStats: boolean mRunning>;

        if $z1 == 0 goto label08;

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

     label01:
        virtualinvoke r1.<java.io.PrintWriter: void print(long)>(l1);

        z0 = 1;

        $i16 = r0.<com.android.internal.app.ProcessStats: int mFlags>;

        $i20 = 2 & $i16;

        if $i20 == 0 goto label02;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",shutdown");

        z0 = 0;

     label02:
        $i21 = r0.<com.android.internal.app.ProcessStats: int mFlags>;

        $i18 = 4 & $i21;

        if $i18 == 0 goto label03;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",sysprops");

        z0 = 0;

     label03:
        $i19 = r0.<com.android.internal.app.ProcessStats: int mFlags>;

        $i22 = 1 & $i19;

        if $i22 == 0 goto label04;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",complete");

        z0 = 0;

     label04:
        if z0 == 0 goto label05;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",partial");

     label05:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("config,");

        $r17 = r0.<com.android.internal.app.ProcessStats: java.lang.String mRuntime>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r17);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

        $r16 = r0.<com.android.internal.app.ProcessStats: java.lang.String mWebView>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r16);

        i2 = 0;

     label06:
        i3 = virtualinvoke r3.<android.util.ArrayMap: int size()>();

        if i2 >= i3 goto label18;

        $r23 = virtualinvoke r3.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i2);

        r9 = (java.lang.String) $r23;

        if r2 == null goto label09;

        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z2 != 0 goto label09;

     label07:
        i2 = i2 + 1;

        goto label06;

     label08:
        l1 = r0.<com.android.internal.app.ProcessStats: long mTimePeriodEndRealtime>;

        goto label01;

     label09:
        $r24 = virtualinvoke r3.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i2);

        r8 = (android.util.SparseArray) $r24;

        i10 = 0;

     label10:
        i9 = virtualinvoke r8.<android.util.SparseArray: int size()>();

        if i10 >= i9 goto label07;

        i11 = virtualinvoke r8.<android.util.SparseArray: int keyAt(int)>(i10);

        $r27 = virtualinvoke r8.<android.util.SparseArray: java.lang.Object valueAt(int)>(i10);

        r10 = (com.android.internal.app.ProcessStats$PackageState) $r27;

        $r28 = r10.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        i13 = virtualinvoke $r28.<android.util.ArrayMap: int size()>();

        $r25 = r10.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        i12 = virtualinvoke $r25.<android.util.ArrayMap: int size()>();

        i15 = 0;

     label11:
        if i15 >= i13 goto label15;

        $r38 = r10.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r36 = virtualinvoke $r38.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i15);

        r14 = (com.android.internal.app.ProcessStats$ProcessState) $r36;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("pkgproc,");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r9);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i11);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $r37 = r10.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r34 = virtualinvoke $r37.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i15);

        $r35 = (java.lang.String) $r34;

        $r33 = virtualinvoke r0.<com.android.internal.app.ProcessStats: java.lang.String collapseString(java.lang.String,java.lang.String)>(r9, $r35);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r33);

        staticinvoke <com.android.internal.app.ProcessStats: void dumpAllProcessStateCheckin(java.io.PrintWriter,com.android.internal.app.ProcessStats$ProcessState,long)>(r1, r14, l0);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        $i47 = r14.<com.android.internal.app.ProcessStats$ProcessState: int mPssTableSize>;

        if $i47 <= 0 goto label12;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("pkgpss,");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r9);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i11);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $r45 = r10.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r44 = virtualinvoke $r45.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i15);

        $r43 = (java.lang.String) $r44;

        $r46 = virtualinvoke r0.<com.android.internal.app.ProcessStats: java.lang.String collapseString(java.lang.String,java.lang.String)>(r9, $r43);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r46);

        staticinvoke <com.android.internal.app.ProcessStats: void dumpAllProcessPssCheckin(java.io.PrintWriter,com.android.internal.app.ProcessStats$ProcessState)>(r1, r14);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label12:
        $i52 = r14.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveWake>;

        if $i52 > 0 goto label13;

        $i54 = r14.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveCpu>;

        if $i54 > 0 goto label13;

        $i53 = r14.<com.android.internal.app.ProcessStats$ProcessState: int mNumCachedKill>;

        if $i53 <= 0 goto label14;

     label13:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("pkgkills,");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r9);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i11);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $r42 = r10.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r40 = virtualinvoke $r42.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i15);

        $r41 = (java.lang.String) $r40;

        $r39 = virtualinvoke r0.<com.android.internal.app.ProcessStats: java.lang.String collapseString(java.lang.String,java.lang.String)>(r9, $r41);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r39);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $i51 = r14.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveWake>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i51);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $i49 = r14.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveCpu>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i49);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $i50 = r14.<com.android.internal.app.ProcessStats$ProcessState: int mNumCachedKill>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i50);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $l57 = r14.<com.android.internal.app.ProcessStats$ProcessState: long mMinCachedKillPss>;

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l57);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(":");

        $l56 = r14.<com.android.internal.app.ProcessStats$ProcessState: long mAvgCachedKillPss>;

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l56);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(":");

        $l55 = r14.<com.android.internal.app.ProcessStats$ProcessState: long mMaxCachedKillPss>;

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l55);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label14:
        i15 = i15 + 1;

        goto label11;

     label15:
        i14 = 0;

     label16:
        if i14 >= i12 goto label17;

        $r26 = r10.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        $r31 = virtualinvoke $r26.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i14);

        $r30 = (java.lang.String) $r31;

        r12 = virtualinvoke r0.<com.android.internal.app.ProcessStats: java.lang.String collapseString(java.lang.String,java.lang.String)>(r9, $r30);

        $r32 = r10.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        $r29 = virtualinvoke $r32.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i14);

        r11 = (com.android.internal.app.ProcessStats$ServiceState) $r29;

        $i37 = r11.<com.android.internal.app.ProcessStats$ServiceState: int mRunCount>;

        $i38 = r11.<com.android.internal.app.ProcessStats$ServiceState: int mRunState>;

        $l36 = r11.<com.android.internal.app.ProcessStats$ServiceState: long mRunStartTime>;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpServiceTimeCheckin(java.io.PrintWriter,java.lang.String,java.lang.String,int,java.lang.String,com.android.internal.app.ProcessStats$ServiceState,int,int,int,long,long)>(r1, "pkgsvc-run", r9, i11, r12, r11, 0, $i37, $i38, $l36, l0);

        $i46 = r11.<com.android.internal.app.ProcessStats$ServiceState: int mStartedCount>;

        $i43 = r11.<com.android.internal.app.ProcessStats$ServiceState: int mStartedState>;

        $l44 = r11.<com.android.internal.app.ProcessStats$ServiceState: long mStartedStartTime>;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpServiceTimeCheckin(java.io.PrintWriter,java.lang.String,java.lang.String,int,java.lang.String,com.android.internal.app.ProcessStats$ServiceState,int,int,int,long,long)>(r1, "pkgsvc-start", r9, i11, r12, r11, 1, $i46, $i43, $l44, l0);

        $i39 = r11.<com.android.internal.app.ProcessStats$ServiceState: int mBoundCount>;

        $i40 = r11.<com.android.internal.app.ProcessStats$ServiceState: int mBoundState>;

        $l45 = r11.<com.android.internal.app.ProcessStats$ServiceState: long mBoundStartTime>;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpServiceTimeCheckin(java.io.PrintWriter,java.lang.String,java.lang.String,int,java.lang.String,com.android.internal.app.ProcessStats$ServiceState,int,int,int,long,long)>(r1, "pkgsvc-bound", r9, i11, r12, r11, 2, $i39, $i40, $l45, l0);

        $i48 = r11.<com.android.internal.app.ProcessStats$ServiceState: int mExecCount>;

        $i41 = r11.<com.android.internal.app.ProcessStats$ServiceState: int mExecState>;

        $l42 = r11.<com.android.internal.app.ProcessStats$ServiceState: long mExecStartTime>;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpServiceTimeCheckin(java.io.PrintWriter,java.lang.String,java.lang.String,int,java.lang.String,com.android.internal.app.ProcessStats$ServiceState,int,int,int,long,long)>(r1, "pkgsvc-exec", r9, i11, r12, r11, 3, $i48, $i41, $l42, l0);

        i14 = i14 + 1;

        goto label16;

     label17:
        i10 = i10 + 1;

        goto label10;

     label18:
        $r18 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mProcesses>;

        r4 = virtualinvoke $r18.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        i4 = 0;

     label19:
        i5 = virtualinvoke r4.<android.util.ArrayMap: int size()>();

        if i4 >= i5 goto label26;

        $r20 = virtualinvoke r4.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i4);

        r5 = (java.lang.String) $r20;

        $r19 = virtualinvoke r4.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i4);

        r6 = (android.util.SparseArray) $r19;

        i7 = 0;

     label20:
        i6 = virtualinvoke r6.<android.util.SparseArray: int size()>();

        if i7 >= i6 goto label25;

        i8 = virtualinvoke r6.<android.util.SparseArray: int keyAt(int)>(i7);

        $r22 = virtualinvoke r6.<android.util.SparseArray: java.lang.Object valueAt(int)>(i7);

        r7 = (com.android.internal.app.ProcessStats$ProcessState) $r22;

        $i25 = r7.<com.android.internal.app.ProcessStats$ProcessState: int mDurationsTableSize>;

        if $i25 <= 0 goto label21;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("proc,");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r5);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i8);

        staticinvoke <com.android.internal.app.ProcessStats: void dumpAllProcessStateCheckin(java.io.PrintWriter,com.android.internal.app.ProcessStats$ProcessState,long)>(r1, r7, l0);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label21:
        $i29 = r7.<com.android.internal.app.ProcessStats$ProcessState: int mPssTableSize>;

        if $i29 <= 0 goto label22;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("pss,");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r5);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i8);

        staticinvoke <com.android.internal.app.ProcessStats: void dumpAllProcessPssCheckin(java.io.PrintWriter,com.android.internal.app.ProcessStats$ProcessState)>(r1, r7);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label22:
        $i28 = r7.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveWake>;

        if $i28 > 0 goto label23;

        $i30 = r7.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveCpu>;

        if $i30 > 0 goto label23;

        $i31 = r7.<com.android.internal.app.ProcessStats$ProcessState: int mNumCachedKill>;

        if $i31 <= 0 goto label24;

     label23:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("kills,");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r5);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i8);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $i27 = r7.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveWake>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i27);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $i26 = r7.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveCpu>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i26);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $i32 = r7.<com.android.internal.app.ProcessStats$ProcessState: int mNumCachedKill>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i32);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $l33 = r7.<com.android.internal.app.ProcessStats$ProcessState: long mMinCachedKillPss>;

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l33);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(":");

        $l34 = r7.<com.android.internal.app.ProcessStats$ProcessState: long mAvgCachedKillPss>;

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l34);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(":");

        $l35 = r7.<com.android.internal.app.ProcessStats$ProcessState: long mMaxCachedKillPss>;

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l35);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label24:
        i7 = i7 + 1;

        goto label20;

     label25:
        i4 = i4 + 1;

        goto label19;

     label26:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("total");

        $r21 = r0.<com.android.internal.app.ProcessStats: long[] mMemFactorDurations>;

        $i24 = r0.<com.android.internal.app.ProcessStats: int mMemFactor>;

        $l23 = r0.<com.android.internal.app.ProcessStats: long mStartTime>;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpAdjTimesCheckin(java.io.PrintWriter,java.lang.String,long[],int,long,long)>(r1, ",", $r21, $i24, $l23, l0);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        return;
    }

    void dumpFilteredSummaryLocked(java.io.PrintWriter, java.lang.String, java.lang.String, int[], int[], int[], int[], long, long, java.lang.String, boolean)
    {
        com.android.internal.app.ProcessStats r0;
        java.io.PrintWriter r1;
        java.lang.String r2, r3, r8;
        int[] r4, r5, r6, r7;
        long l0, l1;
        boolean z0;
        java.util.ArrayList r9;
        int $i2;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: int[];

        r5 := @parameter4: int[];

        r6 := @parameter5: int[];

        r7 := @parameter6: int[];

        l0 := @parameter7: long;

        l1 := @parameter8: long;

        r8 := @parameter9: java.lang.String;

        z0 := @parameter10: boolean;

        r9 = virtualinvoke r0.<com.android.internal.app.ProcessStats: java.util.ArrayList collectProcessesLocked(int[],int[],int[],int[],long,java.lang.String,boolean)>(r4, r5, r6, r7, l0, r8, z0);

        $i2 = virtualinvoke r9.<java.util.ArrayList: int size()>();

        if $i2 <= 0 goto label2;

        if r2 == null goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(r2);

     label1:
        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessSummaryLocked(java.io.PrintWriter,java.lang.String,java.util.ArrayList,int[],int[],int[],long,long)>(r1, r3, r9, r4, r5, r7, l0, l1);

     label2:
        return;
    }

    public void dumpLocked(java.io.PrintWriter, java.lang.String, long, boolean, boolean, boolean)
    {
        com.android.internal.app.ProcessStats r0;
        java.io.PrintWriter r1;
        java.lang.String r2, r5, r7, $r30, $r37, $r38, $r41, $r42, $r58, $r61, $r65, $r66, $r71;
        long l0, l1, l20, l21, l24, l29, $l34;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z26, $z27, $z28, $z29, $z30;
        android.util.ArrayMap r3, r4, $r31, $r33, $r34, $r40, $r44, $r52, $r54, $r56, $r59, $r62;
        int i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i22, i23, i25, i26, i27, i28, i30, $i31, i32, i33, $i35, $i36, $i37, $i38, $i39, $i40, $i41;
        android.util.SparseArray r6, r9;
        com.android.internal.app.ProcessStats$ProcessState r8, r12, r13, $r57, $r72;
        com.android.internal.app.ProcessStats$PackageState r10;
        com.android.internal.app.ProcessStats$ServiceState r11;
        java.util.ArrayList r14, $r17, $r67;
        long[] $r15;
        com.android.internal.app.ProcessMap $r16, $r18;
        java.lang.Object $r19, $r20, $r21, $r28, $r29, $r32, $r35, $r36, $r39, $r43, $r45, $r53, $r55, $r60, $r63, $r64;
        int[] $r22, $r23, $r24, $r25, $r26, $r27, $r46, $r47, $r48, $r49, $r50, $r51, $r68, $r69, $r70;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        z2 := @parameter5: boolean;

        $r15 = r0.<com.android.internal.app.ProcessStats: long[] mMemFactorDurations>;

        $i31 = r0.<com.android.internal.app.ProcessStats: int mMemFactor>;

        $l34 = r0.<com.android.internal.app.ProcessStats: long mStartTime>;

        l1 = staticinvoke <com.android.internal.app.ProcessStats: long dumpSingleTime(java.io.PrintWriter,java.lang.String,long[],int,long,long)>(null, null, $r15, $i31, $l34, l0);

        $r16 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mPackages>;

        r3 = virtualinvoke $r16.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        z3 = 0;

        z4 = 0;

        i2 = 0;

     label01:
        i3 = virtualinvoke r3.<android.util.ArrayMap: int size()>();

        if i2 >= i3 goto label49;

        $r29 = virtualinvoke r3.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i2);

        r7 = (java.lang.String) $r29;

        $r28 = virtualinvoke r3.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i2);

        r9 = (android.util.SparseArray) $r28;

        i11 = 0;

     label02:
        i13 = virtualinvoke r9.<android.util.SparseArray: int size()>();

        if i11 >= i13 goto label48;

        i12 = virtualinvoke r9.<android.util.SparseArray: int keyAt(int)>(i11);

        $r35 = virtualinvoke r9.<android.util.SparseArray: java.lang.Object valueAt(int)>(i11);

        r10 = (com.android.internal.app.ProcessStats$PackageState) $r35;

        $r34 = r10.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        i15 = virtualinvoke $r34.<android.util.ArrayMap: int size()>();

        $r33 = r10.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        i14 = virtualinvoke $r33.<android.util.ArrayMap: int size()>();

        if r2 == null goto label03;

        $z29 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z29 == 0 goto label08;

     label03:
        z6 = 1;

     label04:
        if z6 != 0 goto label10;

        i32 = 0;

     label05:
        i33 = i32;

        z11 = 0;

        if i33 >= i15 goto label06;

        $r62 = r10.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r63 = virtualinvoke $r62.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i32);

        $r72 = (com.android.internal.app.ProcessStats$ProcessState) $r63;

        $r71 = $r72.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        $z30 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r71);

        if $z30 == 0 goto label09;

        z11 = 1;

     label06:
        if z11 != 0 goto label10;

     label07:
        i11 = i11 + 1;

        goto label02;

     label08:
        z6 = 0;

        goto label04;

     label09:
        i32 = i32 + 1;

        goto label05;

     label10:
        if i15 > 0 goto label11;

        if i14 <= 0 goto label13;

     label11:
        if z3 != 0 goto label12;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Per-Package Stats:");

        z3 = 1;

        z4 = 1;

     label12:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  * ");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r7);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" / ");

        staticinvoke <android.os.UserHandle: void formatUid(java.io.PrintWriter,int)>(r1, i12);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(":");

     label13:
        if z0 == 0 goto label14;

        if z1 == 0 goto label21;

     label14:
        i17 = 0;

     label15:
        if i17 >= i15 goto label27;

        $r54 = r10.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r53 = virtualinvoke $r54.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i17);

        r12 = (com.android.internal.app.ProcessStats$ProcessState) $r53;

        if z6 != 0 goto label17;

        $r66 = r12.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        $z28 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r66);

        if $z28 != 0 goto label17;

     label16:
        i17 = i17 + 1;

        goto label15;

     label17:
        if z2 == 0 goto label18;

        $z23 = virtualinvoke r12.<com.android.internal.app.ProcessStats$ProcessState: boolean isInUse()>();

        if $z23 != 0 goto label18;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("      (Not active: ");

        $r52 = r10.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r64 = virtualinvoke $r52.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i17);

        $r65 = (java.lang.String) $r64;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r65);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(")");

        goto label16;

     label18:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("      Process ");

        $r56 = r10.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r55 = virtualinvoke $r56.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i17);

        $r58 = (java.lang.String) $r55;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r58);

        $r57 = r12.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        $z24 = $r57.<com.android.internal.app.ProcessStats$ProcessState: boolean mMultiPackage>;

        if $z24 == 0 goto label20;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" (multi, ");

     label19:
        $i41 = r12.<com.android.internal.app.ProcessStats$ProcessState: int mDurationsTableSize>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i41);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" entries)");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(":");

        $r49 = <com.android.internal.app.ProcessStats: int[] ALL_SCREEN_ADJ>;

        $r46 = <com.android.internal.app.ProcessStats: int[] ALL_MEM_ADJ>;

        $r47 = <com.android.internal.app.ProcessStats: int[] ALL_PROC_STATES>;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessState(java.io.PrintWriter,java.lang.String,com.android.internal.app.ProcessStats$ProcessState,int[],int[],int[],long)>(r1, "        ", r12, $r49, $r46, $r47, l0);

        $r50 = <com.android.internal.app.ProcessStats: int[] ALL_SCREEN_ADJ>;

        $r51 = <com.android.internal.app.ProcessStats: int[] ALL_MEM_ADJ>;

        $r48 = <com.android.internal.app.ProcessStats: int[] ALL_PROC_STATES>;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessPss(java.io.PrintWriter,java.lang.String,com.android.internal.app.ProcessStats$ProcessState,int[],int[],int[])>(r1, "        ", r12, $r50, $r51, $r48);

        specialinvoke r0.<com.android.internal.app.ProcessStats: void dumpProcessInternalLocked(java.io.PrintWriter,java.lang.String,com.android.internal.app.ProcessStats$ProcessState,boolean)>(r1, "        ", r12, z1);

        goto label16;

     label20:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" (unique, ");

        goto label19;

     label21:
        $r67 = new java.util.ArrayList;

        specialinvoke $r67.<java.util.ArrayList: void <init>()>();

        r14 = $r67;

        i30 = 0;

     label22:
        if i30 >= i15 goto label26;

        $r59 = r10.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r60 = virtualinvoke $r59.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i30);

        r13 = (com.android.internal.app.ProcessStats$ProcessState) $r60;

        if z6 != 0 goto label24;

        $r61 = r13.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        $z27 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r61);

        if $z27 != 0 goto label24;

     label23:
        i30 = i30 + 1;

        goto label22;

     label24:
        if z2 == 0 goto label25;

        $z26 = virtualinvoke r13.<com.android.internal.app.ProcessStats$ProcessState: boolean isInUse()>();

        if $z26 == 0 goto label23;

     label25:
        virtualinvoke r14.<java.util.ArrayList: boolean add(java.lang.Object)>(r13);

        goto label23;

     label26:
        $r70 = <com.android.internal.app.ProcessStats: int[] ALL_SCREEN_ADJ>;

        $r69 = <com.android.internal.app.ProcessStats: int[] ALL_MEM_ADJ>;

        $r68 = <com.android.internal.app.ProcessStats: int[] NON_CACHED_PROC_STATES>;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessSummaryLocked(java.io.PrintWriter,java.lang.String,java.util.ArrayList,int[],int[],int[],long,long)>(r1, "      ", r14, $r70, $r69, $r68, l0, l1);

     label27:
        i18 = 0;

     label28:
        if i18 >= i14 goto label07;

        $r31 = r10.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        $r32 = virtualinvoke $r31.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i18);

        r11 = (com.android.internal.app.ProcessStats$ServiceState) $r32;

        if z6 != 0 goto label30;

        $r41 = r11.<com.android.internal.app.ProcessStats$ServiceState: java.lang.String mProcessName>;

        $z20 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r41);

        if $z20 != 0 goto label30;

     label29:
        i18 = i18 + 1;

        goto label28;

     label30:
        if z2 == 0 goto label31;

        $z21 = virtualinvoke r11.<com.android.internal.app.ProcessStats$ServiceState: boolean isInUse()>();

        if $z21 != 0 goto label31;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("      (Not active: ");

        $r44 = r10.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        $r43 = virtualinvoke $r44.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i18);

        $r42 = (java.lang.String) $r43;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r42);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(")");

        goto label29;

     label31:
        if z1 == 0 goto label43;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("      Service ");

     label32:
        $r40 = r10.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        $r39 = virtualinvoke $r40.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i18);

        $r38 = (java.lang.String) $r39;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r38);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(":");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("        Process: ");

        $r37 = r11.<com.android.internal.app.ProcessStats$ServiceState: java.lang.String mProcessName>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r37);

        i16 = r11.<com.android.internal.app.ProcessStats$ServiceState: int mRunCount>;

        i19 = r11.<com.android.internal.app.ProcessStats$ServiceState: int mRunState>;

        l20 = r11.<com.android.internal.app.ProcessStats$ServiceState: long mRunStartTime>;

        if z0 == 0 goto label33;

        if z1 == 0 goto label44;

     label33:
        z7 = 1;

     label34:
        virtualinvoke r0.<com.android.internal.app.ProcessStats: void dumpServiceStats(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.android.internal.app.ProcessStats$ServiceState,int,int,int,long,long,long,boolean)>(r1, "        ", "          ", "    ", "Running", r11, i16, 0, i19, l20, l0, l1, z7);

        i22 = r11.<com.android.internal.app.ProcessStats$ServiceState: int mStartedCount>;

        i23 = r11.<com.android.internal.app.ProcessStats$ServiceState: int mStartedState>;

        l21 = r11.<com.android.internal.app.ProcessStats$ServiceState: long mStartedStartTime>;

        if z0 == 0 goto label35;

        if z1 == 0 goto label45;

     label35:
        z8 = 1;

     label36:
        virtualinvoke r0.<com.android.internal.app.ProcessStats: void dumpServiceStats(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.android.internal.app.ProcessStats$ServiceState,int,int,int,long,long,long,boolean)>(r1, "        ", "          ", "    ", "Started", r11, i22, 1, i23, l21, l0, l1, z8);

        i26 = r11.<com.android.internal.app.ProcessStats$ServiceState: int mBoundCount>;

        i25 = r11.<com.android.internal.app.ProcessStats$ServiceState: int mBoundState>;

        l24 = r11.<com.android.internal.app.ProcessStats$ServiceState: long mBoundStartTime>;

        if z0 == 0 goto label37;

        if z1 == 0 goto label46;

     label37:
        z9 = 1;

     label38:
        virtualinvoke r0.<com.android.internal.app.ProcessStats: void dumpServiceStats(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.android.internal.app.ProcessStats$ServiceState,int,int,int,long,long,long,boolean)>(r1, "        ", "          ", "      ", "Bound", r11, i26, 2, i25, l24, l0, l1, z9);

        i28 = r11.<com.android.internal.app.ProcessStats$ServiceState: int mExecCount>;

        i27 = r11.<com.android.internal.app.ProcessStats$ServiceState: int mExecState>;

        l29 = r11.<com.android.internal.app.ProcessStats$ServiceState: long mExecStartTime>;

        if z0 == 0 goto label39;

        if z1 == 0 goto label47;

     label39:
        z10 = 1;

     label40:
        virtualinvoke r0.<com.android.internal.app.ProcessStats: void dumpServiceStats(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.android.internal.app.ProcessStats$ServiceState,int,int,int,long,long,long,boolean)>(r1, "        ", "          ", "  ", "Executing", r11, i28, 3, i27, l29, l0, l1, z10);

        if z1 == 0 goto label29;

        $r36 = r11.<com.android.internal.app.ProcessStats$ServiceState: java.lang.Object mOwner>;

        if $r36 == null goto label41;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("        mOwner=");

        $r45 = r11.<com.android.internal.app.ProcessStats$ServiceState: java.lang.Object mOwner>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r45);

     label41:
        $z19 = r11.<com.android.internal.app.ProcessStats$ServiceState: boolean mStarted>;

        if $z19 != 0 goto label42;

        $z22 = r11.<com.android.internal.app.ProcessStats$ServiceState: boolean mRestarting>;

        if $z22 == 0 goto label29;

     label42:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("        mStarted=");

        $z18 = r11.<com.android.internal.app.ProcessStats$ServiceState: boolean mStarted>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z18);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mRestarting=");

        $z17 = r11.<com.android.internal.app.ProcessStats$ServiceState: boolean mRestarting>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z17);

        goto label29;

     label43:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("      * ");

        goto label32;

     label44:
        z7 = 0;

        goto label34;

     label45:
        z8 = 0;

        goto label36;

     label46:
        z9 = 0;

        goto label38;

     label47:
        z10 = 0;

        goto label40;

     label48:
        i2 = i2 + 1;

        goto label01;

     label49:
        $r18 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mProcesses>;

        r4 = virtualinvoke $r18.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        z5 = 0;

        i4 = 0;

        i6 = 0;

        i5 = 0;

     label50:
        i7 = virtualinvoke r4.<android.util.ArrayMap: int size()>();

        if i5 >= i7 goto label59;

        $r20 = virtualinvoke r4.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i5);

        r5 = (java.lang.String) $r20;

        $r21 = virtualinvoke r4.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i5);

        r6 = (android.util.SparseArray) $r21;

        i8 = 0;

     label51:
        i10 = virtualinvoke r6.<android.util.SparseArray: int size()>();

        if i8 >= i10 goto label58;

        i9 = virtualinvoke r6.<android.util.SparseArray: int keyAt(int)>(i8);

        i6 = i6 + 1;

        $r19 = virtualinvoke r6.<android.util.SparseArray: java.lang.Object valueAt(int)>(i8);

        r8 = (com.android.internal.app.ProcessStats$ProcessState) $r19;

        $i37 = r8.<com.android.internal.app.ProcessStats$ProcessState: int mDurationsTableSize>;

        if $i37 != 0 goto label53;

        $i40 = r8.<com.android.internal.app.ProcessStats$ProcessState: int mCurState>;

        if $i40 != -1 goto label53;

        $i39 = r8.<com.android.internal.app.ProcessStats$ProcessState: int mPssTableSize>;

        if $i39 != 0 goto label53;

     label52:
        i8 = i8 + 1;

        goto label51;

     label53:
        $z12 = r8.<com.android.internal.app.ProcessStats$ProcessState: boolean mMultiPackage>;

        if $z12 == 0 goto label52;

        if r2 == null goto label54;

        $z16 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z16 != 0 goto label54;

        $r30 = r8.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mPackage>;

        $z15 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r30);

        if $z15 == 0 goto label52;

     label54:
        i4 = i4 + 1;

        if z4 == 0 goto label55;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label55:
        z4 = 1;

        if z5 != 0 goto label56;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Multi-Package Common Processes:");

        z5 = 1;

     label56:
        if z2 == 0 goto label57;

        $z14 = virtualinvoke r8.<com.android.internal.app.ProcessStats$ProcessState: boolean isInUse()>();

        if $z14 != 0 goto label57;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("      (Not active: ");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r5);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(")");

        goto label52;

     label57:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  * ");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r5);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" / ");

        staticinvoke <android.os.UserHandle: void formatUid(java.io.PrintWriter,int)>(r1, i9);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" (");

        $i38 = r8.<com.android.internal.app.ProcessStats$ProcessState: int mDurationsTableSize>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i38);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" entries)");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(":");

        $r26 = <com.android.internal.app.ProcessStats: int[] ALL_SCREEN_ADJ>;

        $r27 = <com.android.internal.app.ProcessStats: int[] ALL_MEM_ADJ>;

        $r25 = <com.android.internal.app.ProcessStats: int[] ALL_PROC_STATES>;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessState(java.io.PrintWriter,java.lang.String,com.android.internal.app.ProcessStats$ProcessState,int[],int[],int[],long)>(r1, "        ", r8, $r26, $r27, $r25, l0);

        $r24 = <com.android.internal.app.ProcessStats: int[] ALL_SCREEN_ADJ>;

        $r22 = <com.android.internal.app.ProcessStats: int[] ALL_MEM_ADJ>;

        $r23 = <com.android.internal.app.ProcessStats: int[] ALL_PROC_STATES>;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessPss(java.io.PrintWriter,java.lang.String,com.android.internal.app.ProcessStats$ProcessState,int[],int[],int[])>(r1, "        ", r8, $r24, $r22, $r23);

        specialinvoke r0.<com.android.internal.app.ProcessStats: void dumpProcessInternalLocked(java.io.PrintWriter,java.lang.String,com.android.internal.app.ProcessStats$ProcessState,boolean)>(r1, "        ", r8, z1);

        goto label52;

     label58:
        i5 = i5 + 1;

        goto label50;

     label59:
        if z1 == 0 goto label60;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  Total procs: ");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" shown of ");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i6);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(" total");

     label60:
        if z4 == 0 goto label61;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label61:
        if z0 == 0 goto label64;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Summary:");

        virtualinvoke r0.<com.android.internal.app.ProcessStats: void dumpSummaryLocked(java.io.PrintWriter,java.lang.String,long,boolean)>(r1, r2, l0, z2);

     label62:
        if z1 == 0 goto label63;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Internal state:");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  Num long arrays: ");

        $r17 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs>;

        $i35 = virtualinvoke $r17.<java.util.ArrayList: int size()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i35);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  Next long entry: ");

        $i36 = r0.<com.android.internal.app.ProcessStats: int mNextLong>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i36);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  mRunning=");

        $z13 = r0.<com.android.internal.app.ProcessStats: boolean mRunning>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z13);

     label63:
        return;

     label64:
        virtualinvoke r0.<com.android.internal.app.ProcessStats: void dumpTotalsLocked(java.io.PrintWriter,long)>(r1, l0);

        goto label62;
    }

    void dumpServiceStats(java.io.PrintWriter, java.lang.String, java.lang.String, java.lang.String, java.lang.String, com.android.internal.app.ProcessStats$ServiceState, int, int, int, long, long, long, boolean)
    {
        com.android.internal.app.ProcessStats r0;
        java.io.PrintWriter r1;
        java.lang.String r2, r3, r4, r5;
        com.android.internal.app.ProcessStats$ServiceState r6;
        int i0, i1, i2;
        long l3, l4, l5, l6;
        boolean z0;
        double $d0, $d1, $d2;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: com.android.internal.app.ProcessStats$ServiceState;

        i0 := @parameter6: int;

        i1 := @parameter7: int;

        i2 := @parameter8: int;

        l3 := @parameter9: long;

        l4 := @parameter10: long;

        l5 := @parameter11: long;

        z0 := @parameter12: boolean;

        if i0 == 0 goto label1;

        if z0 == 0 goto label2;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r5);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" op count ");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i0);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(":");

        staticinvoke <com.android.internal.app.ProcessStats: long dumpSingleServiceTime(java.io.PrintWriter,java.lang.String,com.android.internal.app.ProcessStats$ServiceState,int,int,long,long)>(r1, r3, r6, i1, i2, l3, l4);

     label1:
        return;

     label2:
        l6 = staticinvoke <com.android.internal.app.ProcessStats: long dumpSingleServiceTime(java.io.PrintWriter,java.lang.String,com.android.internal.app.ProcessStats$ServiceState,int,int,long,long)>(null, null, r6, i1, i2, l3, l4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r5);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" count ");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" / time ");

        $d0 = (double) l6;

        $d1 = (double) l5;

        $d2 = $d0 / $d1;

        staticinvoke <com.android.internal.app.ProcessStats: void printPercent(java.io.PrintWriter,double)>(r1, $d2);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        return;
    }

    public void dumpSummaryLocked(java.io.PrintWriter, java.lang.String, long, boolean)
    {
        com.android.internal.app.ProcessStats r0;
        java.io.PrintWriter r1;
        java.lang.String r2;
        long l0, l1, $l2;
        boolean z0;
        int $i3;
        long[] $r3;
        int[] $r4, $r5, $r6, $r7;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        z0 := @parameter3: boolean;

        $r3 = r0.<com.android.internal.app.ProcessStats: long[] mMemFactorDurations>;

        $i3 = r0.<com.android.internal.app.ProcessStats: int mMemFactor>;

        $l2 = r0.<com.android.internal.app.ProcessStats: long mStartTime>;

        l1 = staticinvoke <com.android.internal.app.ProcessStats: long dumpSingleTime(java.io.PrintWriter,java.lang.String,long[],int,long,long)>(null, null, $r3, $i3, $l2, l0);

        $r7 = <com.android.internal.app.ProcessStats: int[] ALL_SCREEN_ADJ>;

        $r6 = <com.android.internal.app.ProcessStats: int[] ALL_MEM_ADJ>;

        $r5 = <com.android.internal.app.ProcessStats: int[] ALL_PROC_STATES>;

        $r4 = <com.android.internal.app.ProcessStats: int[] NON_CACHED_PROC_STATES>;

        virtualinvoke r0.<com.android.internal.app.ProcessStats: void dumpFilteredSummaryLocked(java.io.PrintWriter,java.lang.String,java.lang.String,int[],int[],int[],int[],long,long,java.lang.String,boolean)>(r1, null, "  ", $r7, $r6, $r5, $r4, l0, l1, r2, z0);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r0.<com.android.internal.app.ProcessStats: void dumpTotalsLocked(java.io.PrintWriter,long)>(r1, l0);

        return;
    }

    void dumpTotalsLocked(java.io.PrintWriter, long)
    {
        com.android.internal.app.ProcessStats r0;
        java.io.PrintWriter r1;
        long l0, l1, $l2, $l5, $l6, $l7;
        boolean z0, $z1;
        int $i3, $i8, $i9, $i10, $i11, $i12, $i13;
        long[] $r2;
        java.lang.CharSequence $r3;
        java.lang.String $r4, $r5;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: java.io.PrintWriter;

        l0 := @parameter1: long;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Run time Stats:");

        $r2 = r0.<com.android.internal.app.ProcessStats: long[] mMemFactorDurations>;

        $i3 = r0.<com.android.internal.app.ProcessStats: int mMemFactor>;

        $l2 = r0.<com.android.internal.app.ProcessStats: long mStartTime>;

        staticinvoke <com.android.internal.app.ProcessStats: long dumpSingleTime(java.io.PrintWriter,java.lang.String,long[],int,long,long)>(r1, "  ", $r2, $i3, $l2, l0);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("          Start time: ");

        $l5 = r0.<com.android.internal.app.ProcessStats: long mTimePeriodStartClock>;

        $r3 = staticinvoke <android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,long)>("yyyy-MM-dd HH:mm:ss", $l5);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.Object)>($r3);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  Total elapsed time: ");

        $z1 = r0.<com.android.internal.app.ProcessStats: boolean mRunning>;

        if $z1 == 0 goto label6;

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

     label1:
        $l7 = r0.<com.android.internal.app.ProcessStats: long mTimePeriodStartRealtime>;

        $l6 = l1 - $l7;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l6, r1);

        z0 = 1;

        $i9 = r0.<com.android.internal.app.ProcessStats: int mFlags>;

        $i8 = 2 & $i9;

        if $i8 == 0 goto label2;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" (shutdown)");

        z0 = 0;

     label2:
        $i11 = r0.<com.android.internal.app.ProcessStats: int mFlags>;

        $i10 = 4 & $i11;

        if $i10 == 0 goto label3;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" (sysprops)");

        z0 = 0;

     label3:
        $i13 = r0.<com.android.internal.app.ProcessStats: int mFlags>;

        $i12 = 1 & $i13;

        if $i12 == 0 goto label4;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" (complete)");

        z0 = 0;

     label4:
        if z0 == 0 goto label5;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" (partial)");

     label5:
        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(32);

        $r5 = r0.<com.android.internal.app.ProcessStats: java.lang.String mRuntime>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r5);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(32);

        $r4 = r0.<com.android.internal.app.ProcessStats: java.lang.String mWebView>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r4);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        return;

     label6:
        l1 = r0.<com.android.internal.app.ProcessStats: long mTimePeriodEndRealtime>;

        goto label1;
    }

    public boolean evaluateSystemProperties(boolean)
    {
        com.android.internal.app.ProcessStats r0;
        boolean z0, z1, z2, $z3, $z4;
        java.lang.String r1, r2, $r4, $r5, $r6;
        dalvik.system.VMRuntime $r3;

        r0 := @this: com.android.internal.app.ProcessStats;

        z0 := @parameter0: boolean;

        $r3 = staticinvoke <dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>();

        $r4 = virtualinvoke $r3.<dalvik.system.VMRuntime: java.lang.String vmLibrary()>();

        r1 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("persist.sys.dalvik.vm.lib", $r4);

        $r5 = r0.<com.android.internal.app.ProcessStats: java.lang.String mRuntime>;

        z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r1, $r5);

        z2 = 0;

        if z1 != 0 goto label1;

        z2 = 1;

        if z0 == 0 goto label1;

        r0.<com.android.internal.app.ProcessStats: java.lang.String mRuntime> = r1;

     label1:
        $z3 = staticinvoke <android.webkit.WebViewFactory: boolean useExperimentalWebView()>();

        if $z3 == 0 goto label4;

        r2 = "chromeview";

     label2:
        $r6 = r0.<com.android.internal.app.ProcessStats: java.lang.String mWebView>;

        $z4 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r2, $r6);

        if $z4 != 0 goto label3;

        z2 = 1;

        if z0 == 0 goto label3;

        r0.<com.android.internal.app.ProcessStats: java.lang.String mWebView> = r2;

     label3:
        return z2;

     label4:
        r2 = "webview";

        goto label2;
    }

    long getLong(int, int)
    {
        com.android.internal.app.ProcessStats r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.util.ArrayList $r1;
        java.lang.Object $r2;
        long[] $r3;
        long $l11;

        r0 := @this: com.android.internal.app.ProcessStats;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs>;

        $i2 = <com.android.internal.app.ProcessStats: int OFFSET_ARRAY_SHIFT>;

        $i4 = i0 >> $i2;

        $i3 = <com.android.internal.app.ProcessStats: int OFFSET_ARRAY_MASK>;

        $i5 = $i4 & $i3;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i5);

        $r3 = (long[]) $r2;

        $i6 = <com.android.internal.app.ProcessStats: int OFFSET_INDEX_SHIFT>;

        $i8 = i0 >> $i6;

        $i7 = <com.android.internal.app.ProcessStats: int OFFSET_INDEX_MASK>;

        $i9 = $i8 & $i7;

        $i10 = i1 + $i9;

        $l11 = $r3[$i10];

        return $l11;
    }

    public com.android.internal.app.ProcessStats$PackageState getPackageStateLocked(java.lang.String, int)
    {
        com.android.internal.app.ProcessStats r0;
        java.lang.String r1;
        int i0;
        com.android.internal.app.ProcessStats$PackageState r2, r3, $r6;
        com.android.internal.app.ProcessMap $r4, $r7;
        java.lang.Object $r5;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r4 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mPackages>;

        $r5 = virtualinvoke $r4.<com.android.internal.app.ProcessMap: java.lang.Object get(java.lang.String,int)>(r1, i0);

        r2 = (com.android.internal.app.ProcessStats$PackageState) $r5;

        if r2 == null goto label1;

        return r2;

     label1:
        $r6 = new com.android.internal.app.ProcessStats$PackageState;

        specialinvoke $r6.<com.android.internal.app.ProcessStats$PackageState: void <init>(java.lang.String,int)>(r1, i0);

        r3 = $r6;

        $r7 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mPackages>;

        virtualinvoke $r7.<com.android.internal.app.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>(r1, i0, r3);

        return r3;
    }

    public com.android.internal.app.ProcessStats$ProcessState getProcessStateLocked(java.lang.String, int, java.lang.String)
    {
        com.android.internal.app.ProcessStats r0;
        java.lang.String r1, r2, $r17, $r19, $r20, $r24, $r29, $r31, $r32;
        int i0, i3, $i5;
        com.android.internal.app.ProcessStats$PackageState r3, r7;
        com.android.internal.app.ProcessStats$ProcessState r4, r5, r6, r8, $r14, $r27, $r35, $r36;
        long l1, l2;
        com.android.internal.app.ProcessStats$ServiceState r9;
        android.util.ArrayMap $r10, $r16, $r30, $r33, $r38;
        com.android.internal.app.ProcessMap $r11, $r40;
        java.lang.Object $r12, $r13, $r37;
        boolean $z0, $z1;
        java.lang.StringBuilder $r18, $r21, $r22, $r23, $r25, $r26, $r28;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 = virtualinvoke r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessStats$PackageState getPackageStateLocked(java.lang.String,int)>(r1, i0);

        $r10 = r3.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r12 = virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        r4 = (com.android.internal.app.ProcessStats$ProcessState) $r12;

        if r4 == null goto label1;

        return r4;

     label1:
        $r11 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mProcesses>;

        $r13 = virtualinvoke $r11.<com.android.internal.app.ProcessMap: java.lang.Object get(java.lang.String,int)>(r2, i0);

        r5 = (com.android.internal.app.ProcessStats$ProcessState) $r13;

        if r5 != null goto label2;

        $r35 = new com.android.internal.app.ProcessStats$ProcessState;

        specialinvoke $r35.<com.android.internal.app.ProcessStats$ProcessState: void <init>(com.android.internal.app.ProcessStats,java.lang.String,int,java.lang.String)>(r0, r1, i0, r2);

        r5 = $r35;

        $r40 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mProcesses>;

        virtualinvoke $r40.<com.android.internal.app.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>(r2, i0, r5);

     label2:
        $z0 = r5.<com.android.internal.app.ProcessStats$ProcessState: boolean mMultiPackage>;

        if $z0 != 0 goto label9;

        $r17 = r5.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mPackage>;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z1 == 0 goto label4;

        r6 = r5;

     label3:
        $r16 = r3.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        virtualinvoke $r16.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r6);

        return r6;

     label4:
        r5.<com.android.internal.app.ProcessStats$ProcessState: boolean mMultiPackage> = 1;

        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r19 = r5.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mPackage>;

        r7 = virtualinvoke r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessStats$PackageState getPackageStateLocked(java.lang.String,int)>($r19, i0);

        if r7 == null goto label7;

        $r32 = r5.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mPackage>;

        r8 = virtualinvoke r5.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState clone(java.lang.String,long)>($r32, l2);

        $r30 = r7.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r31 = r5.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        virtualinvoke $r30.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r31, r8);

        $r33 = r7.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        $i5 = virtualinvoke $r33.<android.util.ArrayMap: int size()>();

        i3 = -1 + $i5;

     label5:
        if i3 < 0 goto label8;

        $r38 = r7.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        $r37 = virtualinvoke $r38.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i3);

        r9 = (com.android.internal.app.ProcessStats$ServiceState) $r37;

        $r36 = r9.<com.android.internal.app.ProcessStats$ServiceState: com.android.internal.app.ProcessStats$ProcessState mProc>;

        if $r36 != r5 goto label6;

        r9.<com.android.internal.app.ProcessStats$ServiceState: com.android.internal.app.ProcessStats$ProcessState mProc> = r8;

     label6:
        i3 = i3 + -1;

        goto label5;

     label7:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cloning proc state: no package state ");

        $r20 = r5.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mPackage>;

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r23 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for proc ");

        $r24 = r5.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        $r28 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ProcessStats", $r29);

     label8:
        $r27 = new com.android.internal.app.ProcessStats$ProcessState;

        specialinvoke $r27.<com.android.internal.app.ProcessStats$ProcessState: void <init>(com.android.internal.app.ProcessStats$ProcessState,java.lang.String,int,java.lang.String,long)>(r5, r1, i0, r2, l2);

        r6 = $r27;

        goto label3;

     label9:
        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r14 = new com.android.internal.app.ProcessStats$ProcessState;

        specialinvoke $r14.<com.android.internal.app.ProcessStats$ProcessState: void <init>(com.android.internal.app.ProcessStats$ProcessState,java.lang.String,int,java.lang.String,long)>(r5, r1, i0, r2, l1);

        r6 = $r14;

        goto label3;
    }

    public com.android.internal.app.ProcessStats$ServiceState getServiceStateLocked(java.lang.String, int, java.lang.String, java.lang.String)
    {
        com.android.internal.app.ProcessStats r0;
        java.lang.String r1, r2, r3;
        int i0;
        com.android.internal.app.ProcessStats$PackageState r4;
        com.android.internal.app.ProcessStats$ServiceState r5, r7, $r10;
        com.android.internal.app.ProcessStats$ProcessState r6;
        android.util.ArrayMap $r8, $r11;
        java.lang.Object $r9;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 = virtualinvoke r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessStats$PackageState getPackageStateLocked(java.lang.String,int)>(r1, i0);

        $r8 = r4.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        $r9 = virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r3);

        r5 = (com.android.internal.app.ProcessStats$ServiceState) $r9;

        if r5 == null goto label1;

        return r5;

     label1:
        if r2 == null goto label3;

        r6 = virtualinvoke r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessStats$ProcessState getProcessStateLocked(java.lang.String,int,java.lang.String)>(r1, i0, r2);

     label2:
        $r10 = new com.android.internal.app.ProcessStats$ServiceState;

        specialinvoke $r10.<com.android.internal.app.ProcessStats$ServiceState: void <init>(com.android.internal.app.ProcessStats,java.lang.String,java.lang.String,java.lang.String,com.android.internal.app.ProcessStats$ProcessState)>(r0, r1, r3, r2, r6);

        r7 = $r10;

        $r11 = r4.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        virtualinvoke $r11.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r7);

        return r7;

     label3:
        r6 = null;

        goto label2;
    }

    public void read(java.io.InputStream)
    {
        com.android.internal.app.ProcessStats r0;
        java.io.InputStream r1;
        java.io.IOException r2, $r6;
        int[] r3;
        byte[] r4;
        android.os.Parcel r5;
        int $i0;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: java.io.InputStream;

     label1:
        r3 = newarray (int)[1];

        r4 = staticinvoke <com.android.internal.app.ProcessStats: byte[] readFully(java.io.InputStream,int[])>(r1, r3);

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $i0 = r3[0];

        virtualinvoke r5.<android.os.Parcel: void unmarshall(byte[],int,int)>(r4, 0, $i0);

        virtualinvoke r5.<android.os.Parcel: void setDataPosition(int)>(0);

        virtualinvoke r1.<java.io.InputStream: void close()>();

        virtualinvoke r0.<com.android.internal.app.ProcessStats: void readFromParcel(android.os.Parcel)>(r5);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("caught exception: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.internal.app.ProcessStats: java.lang.String mReadError> = $r10;

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void readFromParcel(android.os.Parcel)
    {
        com.android.internal.app.ProcessStats r0;
        android.os.Parcel r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z7, $z8, $z9, $z10, $z11;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, $i15, $i18, $i20, $i21;
        long[] r2, $r21, $r22, $r76, $r77;
        java.lang.String r3, r5, r7, r8, r11, r12, $r17, $r18, $r37, $r45, $r49, $r53, $r57, $r62, $r71, $r78, $r82, $r90;
        com.android.internal.app.ProcessStats$PackageState r4, $r23;
        com.android.internal.app.ProcessStats$ServiceState r6, $r31;
        com.android.internal.app.ProcessStats$ProcessState r9, r10, r13, $r42, $r61;
        com.android.internal.app.ProcessMap $r14, $r24, $r34, $r68, $r70, $r91;
        android.util.ArrayMap $r15, $r29, $r32, $r36, $r39, $r44, $r92;
        long $l16, $l17, $l19;
        java.util.ArrayList $r16, $r19, $r20, $r73, $r75, $r86;
        java.lang.Object $r26, $r33, $r41, $r67, $r74;
        java.lang.StringBuilder $r27, $r28, $r38, $r40, $r46, $r47, $r48, $r50, $r51, $r52, $r54, $r55, $r56, $r58, $r59, $r60, $r63, $r64, $r65, $r66, $r72, $r79, $r80, $r81, $r83, $r84, $r85, $r87, $r88, $r89;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: android.os.Parcel;

        $r14 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mPackages>;

        $r15 = virtualinvoke $r14.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        $i15 = virtualinvoke $r15.<android.util.ArrayMap: int size()>();

        if $i15 > 0 goto label01;

        $r91 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mProcesses>;

        $r92 = virtualinvoke $r91.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        $i21 = virtualinvoke $r92.<android.util.ArrayMap: int size()>();

        if $i21 <= 0 goto label05;

     label01:
        z0 = 1;

     label02:
        if z0 == 0 goto label03;

        virtualinvoke r0.<com.android.internal.app.ProcessStats: void resetSafely()>();

     label03:
        $z1 = specialinvoke r0.<com.android.internal.app.ProcessStats: boolean readCheckedInt(android.os.Parcel,int,java.lang.String)>(r1, 1347638355, "magic number");

        if $z1 != 0 goto label06;

     label04:
        return;

     label05:
        z0 = 0;

        goto label02;

     label06:
        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i0 == 13 goto label07;

        $r87 = new java.lang.StringBuilder;

        specialinvoke $r87.<java.lang.StringBuilder: void <init>()>();

        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad version: ");

        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.internal.app.ProcessStats: java.lang.String mReadError> = $r90;

        return;

     label07:
        $z4 = specialinvoke r0.<com.android.internal.app.ProcessStats: boolean readCheckedInt(android.os.Parcel,int,java.lang.String)>(r1, 14, "state count");

        if $z4 == 0 goto label04;

        $z2 = specialinvoke r0.<com.android.internal.app.ProcessStats: boolean readCheckedInt(android.os.Parcel,int,java.lang.String)>(r1, 8, "adj count");

        if $z2 == 0 goto label04;

        $z3 = specialinvoke r0.<com.android.internal.app.ProcessStats: boolean readCheckedInt(android.os.Parcel,int,java.lang.String)>(r1, 7, "pss count");

        if $z3 == 0 goto label04;

        $z5 = specialinvoke r0.<com.android.internal.app.ProcessStats: boolean readCheckedInt(android.os.Parcel,int,java.lang.String)>(r1, 4096, "longs size");

        if $z5 == 0 goto label04;

        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mIndexToCommonString> = $r16;

        $l16 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.app.ProcessStats: long mTimePeriodStartClock> = $l16;

        specialinvoke r0.<com.android.internal.app.ProcessStats: void buildTimePeriodStartClockStr()>();

        $l17 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.app.ProcessStats: long mTimePeriodStartRealtime> = $l17;

        $l19 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.app.ProcessStats: long mTimePeriodEndRealtime> = $l19;

        $r18 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<com.android.internal.app.ProcessStats: java.lang.String mRuntime> = $r18;

        $r17 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<com.android.internal.app.ProcessStats: java.lang.String mWebView> = $r17;

        $i18 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.app.ProcessStats: int mFlags> = $i18;

        i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r20 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs>;

        virtualinvoke $r20.<java.util.ArrayList: void clear()>();

        i3 = 0;

     label08:
        i4 = i1 - 1;

        if i3 >= i4 goto label11;

     label09:
        $r73 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs>;

        i14 = virtualinvoke $r73.<java.util.ArrayList: int size()>();

        if i3 < i14 goto label10;

        $r86 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs>;

        $r76 = newarray (long)[4096];

        virtualinvoke $r86.<java.util.ArrayList: boolean add(java.lang.Object)>($r76);

        goto label09;

     label10:
        $r75 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs>;

        $r74 = virtualinvoke $r75.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r77 = (long[]) $r74;

        specialinvoke r0.<com.android.internal.app.ProcessStats: void readCompactedLongArray(android.os.Parcel,int,long[],int)>(r1, i0, $r77, 4096);

        i3 = i3 + 1;

        goto label08;

     label11:
        r2 = newarray (long)[4096];

        r0.<com.android.internal.app.ProcessStats: int mNextLong> = i2;

        specialinvoke r0.<com.android.internal.app.ProcessStats: void readCompactedLongArray(android.os.Parcel,int,long[],int)>(r1, i0, r2, i2);

        $r19 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs>;

        virtualinvoke $r19.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        $r21 = r0.<com.android.internal.app.ProcessStats: long[] mMemFactorDurations>;

        $r22 = r0.<com.android.internal.app.ProcessStats: long[] mMemFactorDurations>;

        $i20 = lengthof $r22;

        specialinvoke r0.<com.android.internal.app.ProcessStats: void readCompactedLongArray(android.os.Parcel,int,long[],int)>(r1, i0, $r21, $i20);

        i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i5 >= 0 goto label12;

        $r85 = new java.lang.StringBuilder;

        specialinvoke $r85.<java.lang.StringBuilder: void <init>()>();

        $r84 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad process count: ");

        $r72 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r71 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.internal.app.ProcessStats: java.lang.String mReadError> = $r71;

        return;

     label12:
        if i5 <= 0 goto label21;

        i5 = i5 + -1;

        r11 = specialinvoke r0.<com.android.internal.app.ProcessStats: java.lang.String readCommonString(android.os.Parcel,int)>(r1, i0);

        if r11 != null goto label13;

        r0.<com.android.internal.app.ProcessStats: java.lang.String mReadError> = "bad process name";

        return;

     label13:
        i13 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i13 >= 0 goto label15;

        $r81 = new java.lang.StringBuilder;

        specialinvoke $r81.<java.lang.StringBuilder: void <init>()>();

        $r80 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad uid count: ");

        $r83 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i13);

        $r82 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.internal.app.ProcessStats: java.lang.String mReadError> = $r82;

        return;

     label14:
        $r70 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mProcesses>;

        virtualinvoke $r70.<com.android.internal.app.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>(r11, i12, r13);

     label15:
        if i13 <= 0 goto label12;

        i13 = i13 + -1;

        i12 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i12 >= 0 goto label16;

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r65 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad uid: ");

        $r79 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i12);

        $r78 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.internal.app.ProcessStats: java.lang.String mReadError> = $r78;

        return;

     label16:
        r12 = specialinvoke r0.<com.android.internal.app.ProcessStats: java.lang.String readCommonString(android.os.Parcel,int)>(r1, i0);

        if r12 != null goto label17;

        r0.<com.android.internal.app.ProcessStats: java.lang.String mReadError> = "bad process package name";

        return;

     label17:
        if z0 == 0 goto label19;

        $r68 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mProcesses>;

        $r67 = virtualinvoke $r68.<com.android.internal.app.ProcessMap: java.lang.Object get(java.lang.String,int)>(r11, i12);

        r13 = (com.android.internal.app.ProcessStats$ProcessState) $r67;

     label18:
        if r13 == null goto label20;

        $z10 = virtualinvoke r13.<com.android.internal.app.ProcessStats$ProcessState: boolean readFromParcel(android.os.Parcel,boolean)>(r1, 0);

        if $z10 != 0 goto label14;

        return;

     label19:
        r13 = null;

        goto label18;

     label20:
        $r61 = new com.android.internal.app.ProcessStats$ProcessState;

        specialinvoke $r61.<com.android.internal.app.ProcessStats$ProcessState: void <init>(com.android.internal.app.ProcessStats,java.lang.String,int,java.lang.String)>(r0, r12, i12, r11);

        r13 = $r61;

        $z11 = virtualinvoke r13.<com.android.internal.app.ProcessStats$ProcessState: boolean readFromParcel(android.os.Parcel,boolean)>(r1, 1);

        if $z11 != 0 goto label14;

        return;

     label21:
        i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i6 >= 0 goto label22;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r64 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad package count: ");

        $r63 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r62 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.internal.app.ProcessStats: java.lang.String mReadError> = $r62;

        return;

     label22:
        if i6 <= 0 goto label43;

        i6 = i6 + -1;

        r3 = specialinvoke r0.<com.android.internal.app.ProcessStats: java.lang.String readCommonString(android.os.Parcel,int)>(r1, i0);

        if r3 != null goto label23;

        r0.<com.android.internal.app.ProcessStats: java.lang.String mReadError> = "bad package name";

        return;

     label23:
        i7 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i7 >= 0 goto label24;

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad uid count: ");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        $r53 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.internal.app.ProcessStats: java.lang.String mReadError> = $r53;

        return;

     label24:
        if i7 <= 0 goto label22;

        i7 = i7 + -1;

        i8 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i8 >= 0 goto label25;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad uid: ");

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        $r57 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.internal.app.ProcessStats: java.lang.String mReadError> = $r57;

        return;

     label25:
        $r23 = new com.android.internal.app.ProcessStats$PackageState;

        specialinvoke $r23.<com.android.internal.app.ProcessStats$PackageState: void <init>(java.lang.String,int)>(r3, i8);

        r4 = $r23;

        $r24 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mPackages>;

        virtualinvoke $r24.<com.android.internal.app.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>(r3, i8, r4);

        i9 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i9 >= 0 goto label27;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad package process count: ");

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        $r45 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.internal.app.ProcessStats: java.lang.String mReadError> = $r45;

        return;

     label26:
        $r44 = r4.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        virtualinvoke $r44.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, r10);

     label27:
        if i9 <= 0 goto label34;

        i9 = i9 + -1;

        r8 = specialinvoke r0.<com.android.internal.app.ProcessStats: java.lang.String readCommonString(android.os.Parcel,int)>(r1, i0);

        if r8 != null goto label28;

        r0.<com.android.internal.app.ProcessStats: java.lang.String mReadError> = "bad package process name";

        return;

     label28:
        i11 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r34 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mProcesses>;

        $r33 = virtualinvoke $r34.<com.android.internal.app.ProcessMap: java.lang.Object get(java.lang.String,int)>(r8, i8);

        r9 = (com.android.internal.app.ProcessStats$ProcessState) $r33;

        if r9 != null goto label29;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no common proc: ");

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r49 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.internal.app.ProcessStats: java.lang.String mReadError> = $r49;

        return;

     label29:
        if i11 == 0 goto label33;

        if z0 == 0 goto label31;

        $r39 = r4.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r41 = virtualinvoke $r39.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r8);

        r10 = (com.android.internal.app.ProcessStats$ProcessState) $r41;

     label30:
        if r10 == null goto label32;

        $z8 = virtualinvoke r10.<com.android.internal.app.ProcessStats$ProcessState: boolean readFromParcel(android.os.Parcel,boolean)>(r1, 0);

        if $z8 != 0 goto label26;

        return;

     label31:
        r10 = null;

        goto label30;

     label32:
        $r42 = new com.android.internal.app.ProcessStats$ProcessState;

        specialinvoke $r42.<com.android.internal.app.ProcessStats$ProcessState: void <init>(com.android.internal.app.ProcessStats$ProcessState,java.lang.String,int,java.lang.String,long)>(r9, r3, i8, r8, 0L);

        r10 = $r42;

        $z9 = virtualinvoke r10.<com.android.internal.app.ProcessStats$ProcessState: boolean readFromParcel(android.os.Parcel,boolean)>(r1, 1);

        if $z9 != 0 goto label26;

        return;

     label33:
        $r36 = r4.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        virtualinvoke $r36.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, r9);

        goto label27;

     label34:
        i10 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i10 >= 0 goto label36;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad package service count: ");

        $r38 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10);

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.internal.app.ProcessStats: java.lang.String mReadError> = $r37;

        return;

     label35:
        $r29 = r4.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        virtualinvoke $r29.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r6);

     label36:
        if i10 <= 0 goto label24;

        i10 = i10 + -1;

        r5 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        if r5 != null goto label37;

        r0.<com.android.internal.app.ProcessStats: java.lang.String mReadError> = "bad package service name";

        return;

     label37:
        if i0 <= 9 goto label41;

        r7 = specialinvoke r0.<com.android.internal.app.ProcessStats: java.lang.String readCommonString(android.os.Parcel,int)>(r1, i0);

     label38:
        if z0 == 0 goto label42;

        $r32 = r4.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        $r26 = virtualinvoke $r32.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r5);

        r6 = (com.android.internal.app.ProcessStats$ServiceState) $r26;

     label39:
        if r6 != null goto label40;

        $r31 = new com.android.internal.app.ProcessStats$ServiceState;

        specialinvoke $r31.<com.android.internal.app.ProcessStats$ServiceState: void <init>(com.android.internal.app.ProcessStats,java.lang.String,java.lang.String,java.lang.String,com.android.internal.app.ProcessStats$ProcessState)>(r0, r3, r5, r7, null);

        r6 = $r31;

     label40:
        $z7 = virtualinvoke r6.<com.android.internal.app.ProcessStats$ServiceState: boolean readFromParcel(android.os.Parcel)>(r1);

        if $z7 != 0 goto label35;

        return;

     label41:
        r7 = null;

        goto label38;

     label42:
        r6 = null;

        goto label39;

     label43:
        r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mIndexToCommonString> = null;

        return;
    }

    public void reset()
    {
        com.android.internal.app.ProcessStats r0;
        com.android.internal.app.ProcessMap $r1, $r3;
        android.util.ArrayMap $r2, $r4;

        r0 := @this: com.android.internal.app.ProcessStats;

        specialinvoke r0.<com.android.internal.app.ProcessStats: void resetCommon()>();

        $r1 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mPackages>;

        $r2 = virtualinvoke $r1.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        virtualinvoke $r2.<android.util.ArrayMap: void clear()>();

        $r3 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mProcesses>;

        $r4 = virtualinvoke $r3.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        virtualinvoke $r4.<android.util.ArrayMap: void clear()>();

        r0.<com.android.internal.app.ProcessStats: int mMemFactor> = -1;

        r0.<com.android.internal.app.ProcessStats: long mStartTime> = 0L;

        return;
    }

    public void resetSafely()
    {
        com.android.internal.app.ProcessStats r0;
        long l0;
        android.util.ArrayMap r1, r2, $r11, $r14, $r15, $r16, $r17, $r18, $r21, $r24, $r28;
        int i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        android.util.SparseArray r3, r7;
        com.android.internal.app.ProcessStats$PackageState r4;
        com.android.internal.app.ProcessStats$ServiceState r5;
        com.android.internal.app.ProcessStats$ProcessState r6, $r25, $r29, $r31, $r33, $r35;
        com.android.internal.app.ProcessMap $r8, $r9;
        java.lang.Object $r10, $r13, $r19, $r20, $r23, $r26, $r32, $r34, $r36;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.android.internal.app.ProcessStats;

        specialinvoke r0.<com.android.internal.app.ProcessStats: void resetCommon()>();

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r8 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mProcesses>;

        r1 = virtualinvoke $r8.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        $i7 = virtualinvoke r1.<android.util.ArrayMap: int size()>();

        i1 = -1 + $i7;

     label01:
        if i1 < 0 goto label07;

        $r26 = virtualinvoke r1.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        r7 = (android.util.SparseArray) $r26;

        $i16 = virtualinvoke r7.<android.util.SparseArray: int size()>();

        i6 = -1 + $i16;

     label02:
        if i6 < 0 goto label05;

        $r34 = virtualinvoke r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(i6);

        $r35 = (com.android.internal.app.ProcessStats$ProcessState) $r34;

        $z3 = virtualinvoke $r35.<com.android.internal.app.ProcessStats$ProcessState: boolean isInUse()>();

        if $z3 == 0 goto label04;

        $r32 = virtualinvoke r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(i6);

        $r33 = (com.android.internal.app.ProcessStats$ProcessState) $r32;

        virtualinvoke $r33.<com.android.internal.app.ProcessStats$ProcessState: void resetSafely(long)>(l0);

     label03:
        i6 = i6 + -1;

        goto label02;

     label04:
        $r36 = virtualinvoke r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(i6);

        $r31 = (com.android.internal.app.ProcessStats$ProcessState) $r36;

        virtualinvoke $r31.<com.android.internal.app.ProcessStats$ProcessState: void makeDead()>();

        virtualinvoke r7.<android.util.SparseArray: void removeAt(int)>(i6);

        goto label03;

     label05:
        $i15 = virtualinvoke r7.<android.util.SparseArray: int size()>();

        if $i15 > 0 goto label06;

        virtualinvoke r1.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i1);

     label06:
        i1 = i1 + -1;

        goto label01;

     label07:
        $r9 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mPackages>;

        r2 = virtualinvoke $r9.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        $i8 = virtualinvoke r2.<android.util.ArrayMap: int size()>();

        i2 = -1 + $i8;

     label08:
        if i2 < 0 goto label22;

        $r10 = virtualinvoke r2.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i2);

        r3 = (android.util.SparseArray) $r10;

        $i10 = virtualinvoke r3.<android.util.SparseArray: int size()>();

        i3 = -1 + $i10;

     label09:
        if i3 < 0 goto label20;

        $r13 = virtualinvoke r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        r4 = (com.android.internal.app.ProcessStats$PackageState) $r13;

        $r11 = r4.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $i12 = virtualinvoke $r11.<android.util.ArrayMap: int size()>();

        i4 = -1 + $i12;

     label10:
        if i4 < 0 goto label14;

        $r21 = r4.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r20 = virtualinvoke $r21.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i4);

        r6 = (com.android.internal.app.ProcessStats$ProcessState) $r20;

        $z1 = virtualinvoke r6.<com.android.internal.app.ProcessStats$ProcessState: boolean isInUse()>();

        if $z1 != 0 goto label11;

        $r25 = r6.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        $z2 = virtualinvoke $r25.<com.android.internal.app.ProcessStats$ProcessState: boolean isInUse()>();

        if $z2 == 0 goto label13;

     label11:
        virtualinvoke r6.<com.android.internal.app.ProcessStats$ProcessState: void resetSafely(long)>(l0);

     label12:
        i4 = i4 + -1;

        goto label10;

     label13:
        $r24 = r4.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r23 = virtualinvoke $r24.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i4);

        $r29 = (com.android.internal.app.ProcessStats$ProcessState) $r23;

        virtualinvoke $r29.<com.android.internal.app.ProcessStats$ProcessState: void makeDead()>();

        $r28 = r4.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        virtualinvoke $r28.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i4);

        goto label12;

     label14:
        $r14 = r4.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        $i11 = virtualinvoke $r14.<android.util.ArrayMap: int size()>();

        i5 = -1 + $i11;

     label15:
        if i5 < 0 goto label18;

        $r18 = r4.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        $r19 = virtualinvoke $r18.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i5);

        r5 = (com.android.internal.app.ProcessStats$ServiceState) $r19;

        $z0 = virtualinvoke r5.<com.android.internal.app.ProcessStats$ServiceState: boolean isInUse()>();

        if $z0 == 0 goto label17;

        virtualinvoke r5.<com.android.internal.app.ProcessStats$ServiceState: void resetSafely(long)>(l0);

     label16:
        i5 = i5 + -1;

        goto label15;

     label17:
        $r17 = r4.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        virtualinvoke $r17.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i5);

        goto label16;

     label18:
        $r16 = r4.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $i14 = virtualinvoke $r16.<android.util.ArrayMap: int size()>();

        if $i14 > 0 goto label19;

        $r15 = r4.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        $i13 = virtualinvoke $r15.<android.util.ArrayMap: int size()>();

        if $i13 > 0 goto label19;

        virtualinvoke r3.<android.util.SparseArray: void removeAt(int)>(i3);

     label19:
        i3 = i3 + -1;

        goto label09;

     label20:
        $i9 = virtualinvoke r3.<android.util.SparseArray: int size()>();

        if $i9 > 0 goto label21;

        virtualinvoke r2.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i2);

     label21:
        i2 = i2 + -1;

        goto label08;

     label22:
        r0.<com.android.internal.app.ProcessStats: long mStartTime> = l0;

        return;
    }

    void setLong(int, int, long)
    {
        com.android.internal.app.ProcessStats r0;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        long l2;
        java.util.ArrayList $r1;
        java.lang.Object $r2;
        long[] $r3;

        r0 := @this: com.android.internal.app.ProcessStats;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        $r1 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs>;

        $i3 = <com.android.internal.app.ProcessStats: int OFFSET_ARRAY_SHIFT>;

        $i5 = i0 >> $i3;

        $i4 = <com.android.internal.app.ProcessStats: int OFFSET_ARRAY_MASK>;

        $i6 = $i5 & $i4;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i6);

        $r3 = (long[]) $r2;

        $i7 = <com.android.internal.app.ProcessStats: int OFFSET_INDEX_SHIFT>;

        $i9 = i0 >> $i7;

        $i8 = <com.android.internal.app.ProcessStats: int OFFSET_INDEX_MASK>;

        $i10 = $i9 & $i8;

        $i11 = i1 + $i10;

        $r3[$i11] = l2;

        return;
    }

    boolean validateLongOffset(int)
    {
        com.android.internal.app.ProcessStats r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.util.ArrayList $r1;

        r0 := @this: com.android.internal.app.ProcessStats;

        i0 := @parameter0: int;

        $i1 = <com.android.internal.app.ProcessStats: int OFFSET_ARRAY_SHIFT>;

        $i3 = i0 >> $i1;

        $i2 = <com.android.internal.app.ProcessStats: int OFFSET_ARRAY_MASK>;

        $i4 = $i3 & $i2;

        $r1 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs>;

        $i5 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i4 < $i5 goto label2;

     label1:
        return 0;

     label2:
        $i6 = <com.android.internal.app.ProcessStats: int OFFSET_INDEX_SHIFT>;

        $i8 = i0 >> $i6;

        $i7 = <com.android.internal.app.ProcessStats: int OFFSET_INDEX_MASK>;

        $i9 = $i8 & $i7;

        if $i9 >= 4096 goto label1;

        return 1;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        com.android.internal.app.ProcessStats r0;
        android.os.Parcel r1;
        int i0, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, $i26, $i29, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i45, $i46;
        long l1, $l27, $l28, $l30, $l41, $l42, $l43, $l44;
        android.util.ArrayMap r2, r3, $r16, $r17, $r32, $r34, $r38, $r39, $r41, $r48, $r54, $r61, $r64, $r65;
        android.util.SparseArray r4, r8, r11, r15;
        com.android.internal.app.ProcessStats$PackageState r5, r13;
        com.android.internal.app.ProcessStats$ProcessState r6, r9, r14, $r46, $r59, $r67;
        com.android.internal.app.ProcessStats$ServiceState r7, $r62;
        long[] r10, r12, $r27, $r28, $r31;
        com.android.internal.app.ProcessMap $r18, $r19, $r20;
        java.lang.String $r21, $r22, $r36, $r40, $r42, $r44, $r51, $r53;
        java.util.ArrayList $r23, $r24, $r25, $r26, $r58;
        java.lang.Object $r29, $r30, $r33, $r35, $r37, $r43, $r45, $r47, $r49, $r50, $r52, $r55, $r56, $r57, $r60, $r63, $r66, $r68;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1347638355);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(13);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(14);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(8);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(4096);

        $r17 = new android.util.ArrayMap;

        $r18 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mProcesses>;

        $r16 = $r18.<com.android.internal.app.ProcessMap: android.util.ArrayMap mMap>;

        $i26 = virtualinvoke $r16.<android.util.ArrayMap: int size()>();

        specialinvoke $r17.<android.util.ArrayMap: void <init>(int)>($i26);

        r0.<com.android.internal.app.ProcessStats: android.util.ArrayMap mCommonStringToIndex> = $r17;

        $r20 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mProcesses>;

        r2 = virtualinvoke $r20.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        i2 = virtualinvoke r2.<android.util.ArrayMap: int size()>();

        i3 = 0;

     label01:
        if i3 >= i2 goto label04;

        $r66 = virtualinvoke r2.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i3);

        r15 = (android.util.SparseArray) $r66;

        i25 = virtualinvoke r15.<android.util.SparseArray: int size()>();

        i24 = 0;

     label02:
        if i24 >= i25 goto label03;

        $r68 = virtualinvoke r15.<android.util.SparseArray: java.lang.Object valueAt(int)>(i24);

        $r67 = (com.android.internal.app.ProcessStats$ProcessState) $r68;

        virtualinvoke $r67.<com.android.internal.app.ProcessStats$ProcessState: void commitStateTime(long)>(l1);

        i24 = i24 + 1;

        goto label02;

     label03:
        i3 = i3 + 1;

        goto label01;

     label04:
        $r19 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mPackages>;

        r3 = virtualinvoke $r19.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        i4 = virtualinvoke r3.<android.util.ArrayMap: int size()>();

        i5 = 0;

     label05:
        if i5 >= i4 goto label13;

        $r56 = virtualinvoke r3.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i5);

        r11 = (android.util.SparseArray) $r56;

        i19 = virtualinvoke r11.<android.util.SparseArray: int size()>();

        i20 = 0;

     label06:
        if i20 >= i19 goto label12;

        $r55 = virtualinvoke r11.<android.util.SparseArray: java.lang.Object valueAt(int)>(i20);

        r13 = (com.android.internal.app.ProcessStats$PackageState) $r55;

        $r54 = r13.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        i18 = virtualinvoke $r54.<android.util.ArrayMap: int size()>();

        i22 = 0;

     label07:
        if i22 >= i18 goto label09;

        $r61 = r13.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r60 = virtualinvoke $r61.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i22);

        r14 = (com.android.internal.app.ProcessStats$ProcessState) $r60;

        $r59 = r14.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        if $r59 == r14 goto label08;

        virtualinvoke r14.<com.android.internal.app.ProcessStats$ProcessState: void commitStateTime(long)>(l1);

     label08:
        i22 = i22 + 1;

        goto label07;

     label09:
        $r65 = r13.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        i23 = virtualinvoke $r65.<android.util.ArrayMap: int size()>();

        i21 = 0;

     label10:
        if i21 >= i23 goto label11;

        $r64 = r13.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        $r63 = virtualinvoke $r64.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i21);

        $r62 = (com.android.internal.app.ProcessStats$ServiceState) $r63;

        virtualinvoke $r62.<com.android.internal.app.ProcessStats$ServiceState: void commitStateTime(long)>(l1);

        i21 = i21 + 1;

        goto label10;

     label11:
        i20 = i20 + 1;

        goto label06;

     label12:
        i5 = i5 + 1;

        goto label05;

     label13:
        $l28 = r0.<com.android.internal.app.ProcessStats: long mTimePeriodStartClock>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l28);

        $l27 = r0.<com.android.internal.app.ProcessStats: long mTimePeriodStartRealtime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l27);

        $l30 = r0.<com.android.internal.app.ProcessStats: long mTimePeriodEndRealtime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l30);

        $r22 = r0.<com.android.internal.app.ProcessStats: java.lang.String mRuntime>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r22);

        $r21 = r0.<com.android.internal.app.ProcessStats: java.lang.String mWebView>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r21);

        $i29 = r0.<com.android.internal.app.ProcessStats: int mFlags>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i29);

        $r24 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs>;

        $i32 = virtualinvoke $r24.<java.util.ArrayList: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i32);

        $i31 = r0.<com.android.internal.app.ProcessStats: int mNextLong>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i31);

        i6 = 0;

     label14:
        $r23 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs>;

        $i35 = virtualinvoke $r23.<java.util.ArrayList: int size()>();

        $i36 = -1 + $i35;

        if i6 >= $i36 goto label15;

        $r58 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs>;

        $r57 = virtualinvoke $r58.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        r12 = (long[]) $r57;

        $i46 = lengthof r12;

        specialinvoke r0.<com.android.internal.app.ProcessStats: void writeCompactedLongArray(android.os.Parcel,long[],int)>(r1, r12, $i46);

        i6 = i6 + 1;

        goto label14;

     label15:
        $r25 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs>;

        $r26 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs>;

        $i33 = virtualinvoke $r26.<java.util.ArrayList: int size()>();

        $i34 = -1 + $i33;

        $r30 = virtualinvoke $r25.<java.util.ArrayList: java.lang.Object get(int)>($i34);

        $r31 = (long[]) $r30;

        $i38 = r0.<com.android.internal.app.ProcessStats: int mNextLong>;

        specialinvoke r0.<com.android.internal.app.ProcessStats: void writeCompactedLongArray(android.os.Parcel,long[],int)>(r1, $r31, $i38);

        $i39 = r0.<com.android.internal.app.ProcessStats: int mMemFactor>;

        if $i39 == -1 goto label16;

        r10 = r0.<com.android.internal.app.ProcessStats: long[] mMemFactorDurations>;

        i17 = r0.<com.android.internal.app.ProcessStats: int mMemFactor>;

        $l41 = r10[i17];

        $l43 = r0.<com.android.internal.app.ProcessStats: long mStartTime>;

        $l44 = l1 - $l43;

        $l42 = $l41 + $l44;

        r10[i17] = $l42;

        r0.<com.android.internal.app.ProcessStats: long mStartTime> = l1;

     label16:
        $r28 = r0.<com.android.internal.app.ProcessStats: long[] mMemFactorDurations>;

        $r27 = r0.<com.android.internal.app.ProcessStats: long[] mMemFactorDurations>;

        $i37 = lengthof $r27;

        specialinvoke r0.<com.android.internal.app.ProcessStats: void writeCompactedLongArray(android.os.Parcel,long[],int)>(r1, $r28, $i37);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        i7 = 0;

     label17:
        if i7 >= i2 goto label20;

        $r47 = virtualinvoke r2.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i7);

        $r44 = (java.lang.String) $r47;

        specialinvoke r0.<com.android.internal.app.ProcessStats: void writeCommonString(android.os.Parcel,java.lang.String)>(r1, $r44);

        $r45 = virtualinvoke r2.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i7);

        r8 = (android.util.SparseArray) $r45;

        i15 = virtualinvoke r8.<android.util.SparseArray: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i15);

        i16 = 0;

     label18:
        if i16 >= i15 goto label19;

        $i45 = virtualinvoke r8.<android.util.SparseArray: int keyAt(int)>(i16);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i45);

        $r52 = virtualinvoke r8.<android.util.SparseArray: java.lang.Object valueAt(int)>(i16);

        r9 = (com.android.internal.app.ProcessStats$ProcessState) $r52;

        $r53 = r9.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mPackage>;

        specialinvoke r0.<com.android.internal.app.ProcessStats: void writeCommonString(android.os.Parcel,java.lang.String)>(r1, $r53);

        virtualinvoke r9.<com.android.internal.app.ProcessStats$ProcessState: void writeToParcel(android.os.Parcel,long)>(r1, l1);

        i16 = i16 + 1;

        goto label18;

     label19:
        i7 = i7 + 1;

        goto label17;

     label20:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i4);

        i8 = 0;

     label21:
        if i8 >= i4 goto label30;

        $r29 = virtualinvoke r3.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i8);

        $r36 = (java.lang.String) $r29;

        specialinvoke r0.<com.android.internal.app.ProcessStats: void writeCommonString(android.os.Parcel,java.lang.String)>(r1, $r36);

        $r35 = virtualinvoke r3.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i8);

        r4 = (android.util.SparseArray) $r35;

        i9 = virtualinvoke r4.<android.util.SparseArray: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i9);

        i10 = 0;

     label22:
        if i10 >= i9 goto label29;

        $i40 = virtualinvoke r4.<android.util.SparseArray: int keyAt(int)>(i10);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i40);

        $r33 = virtualinvoke r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i10);

        r5 = (com.android.internal.app.ProcessStats$PackageState) $r33;

        $r32 = r5.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        i12 = virtualinvoke $r32.<android.util.ArrayMap: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i12);

        i11 = 0;

     label23:
        if i11 >= i12 goto label26;

        $r39 = r5.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r50 = virtualinvoke $r39.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i11);

        $r51 = (java.lang.String) $r50;

        specialinvoke r0.<com.android.internal.app.ProcessStats: void writeCommonString(android.os.Parcel,java.lang.String)>(r1, $r51);

        $r48 = r5.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r49 = virtualinvoke $r48.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i11);

        r6 = (com.android.internal.app.ProcessStats$ProcessState) $r49;

        $r46 = r6.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        if $r46 != r6 goto label25;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label24:
        i11 = i11 + 1;

        goto label23;

     label25:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<com.android.internal.app.ProcessStats$ProcessState: void writeToParcel(android.os.Parcel,long)>(r1, l1);

        goto label24;

     label26:
        $r34 = r5.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        i14 = virtualinvoke $r34.<android.util.ArrayMap: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i14);

        i13 = 0;

     label27:
        if i13 >= i14 goto label28;

        $r41 = r5.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        $r43 = virtualinvoke $r41.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i13);

        $r42 = (java.lang.String) $r43;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r42);

        $r38 = r5.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        $r37 = virtualinvoke $r38.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i13);

        r7 = (com.android.internal.app.ProcessStats$ServiceState) $r37;

        $r40 = r7.<com.android.internal.app.ProcessStats$ServiceState: java.lang.String mProcessName>;

        specialinvoke r0.<com.android.internal.app.ProcessStats: void writeCommonString(android.os.Parcel,java.lang.String)>(r1, $r40);

        virtualinvoke r7.<com.android.internal.app.ProcessStats$ServiceState: void writeToParcel(android.os.Parcel,long)>(r1, l1);

        i13 = i13 + 1;

        goto label27;

     label28:
        i10 = i10 + 1;

        goto label22;

     label29:
        i8 = i8 + 1;

        goto label21;

     label30:
        r0.<com.android.internal.app.ProcessStats: android.util.ArrayMap mCommonStringToIndex> = null;

        return;
    }
}
