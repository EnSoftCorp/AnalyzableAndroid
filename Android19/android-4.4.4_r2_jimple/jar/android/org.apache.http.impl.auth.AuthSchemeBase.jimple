public abstract class org.apache.http.impl.auth.AuthSchemeBase extends java.lang.Object implements org.apache.http.auth.AuthScheme
{
    private boolean proxy;

    public void <init>()
    {
        org.apache.http.impl.auth.AuthSchemeBase r0;

        r0 := @this: org.apache.http.impl.auth.AuthSchemeBase;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean isProxy()
    {
        org.apache.http.impl.auth.AuthSchemeBase r0;
        boolean $z0;

        r0 := @this: org.apache.http.impl.auth.AuthSchemeBase;

        $z0 = r0.<org.apache.http.impl.auth.AuthSchemeBase: boolean proxy>;

        return $z0;
    }

    protected abstract void parseChallenge(org.apache.http.util.CharArrayBuffer, int, int) throws org.apache.http.auth.MalformedChallengeException;

    public void processChallenge(org.apache.http.Header) throws org.apache.http.auth.MalformedChallengeException
    {
        org.apache.http.impl.auth.AuthSchemeBase r0;
        org.apache.http.Header r1;
        java.lang.String r2, r3, r5, $r10, $r12, $r17;
        org.apache.http.util.CharArrayBuffer r4, $r11;
        int i0, i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.http.auth.MalformedChallengeException $r6, $r14, $r18;
        java.lang.StringBuilder $r7, $r8, $r9, $r13, $r15, $r16;
        char $c6, $c7;
        org.apache.http.FormattedHeader $r19, $r20;
        java.lang.IllegalArgumentException $r21;

        r0 := @this: org.apache.http.impl.auth.AuthSchemeBase;

        r1 := @parameter0: org.apache.http.Header;

        if r1 != null goto label01;

        $r21 = new java.lang.IllegalArgumentException;

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Header may not be null");

        throw $r21;

     label01:
        r2 = interfaceinvoke r1.<org.apache.http.Header: java.lang.String getName()>();

        $z0 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("WWW-Authenticate");

        if $z0 == 0 goto label04;

        r0.<org.apache.http.impl.auth.AuthSchemeBase: boolean proxy> = 0;

     label02:
        $z2 = r1 instanceof org.apache.http.FormattedHeader;

        if $z2 == 0 goto label06;

        $r20 = (org.apache.http.FormattedHeader) r1;

        r4 = interfaceinvoke $r20.<org.apache.http.FormattedHeader: org.apache.http.util.CharArrayBuffer getBuffer()>();

        $r19 = (org.apache.http.FormattedHeader) r1;

        i0 = interfaceinvoke $r19.<org.apache.http.FormattedHeader: int getValuePos()>();

     label03:
        $i4 = virtualinvoke r4.<org.apache.http.util.CharArrayBuffer: int length()>();

        if i0 >= $i4 goto label08;

        $c7 = virtualinvoke r4.<org.apache.http.util.CharArrayBuffer: char charAt(int)>(i0);

        $z4 = staticinvoke <org.apache.http.protocol.HTTP: boolean isWhitespace(char)>($c7);

        if $z4 == 0 goto label08;

        i0 = i0 + 1;

        goto label03;

     label04:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Proxy-Authenticate");

        if $z1 == 0 goto label05;

        r0.<org.apache.http.impl.auth.AuthSchemeBase: boolean proxy> = 1;

        goto label02;

     label05:
        $r6 = new org.apache.http.auth.MalformedChallengeException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected header name: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.apache.http.auth.MalformedChallengeException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label06:
        r3 = interfaceinvoke r1.<org.apache.http.Header: java.lang.String getValue()>();

        if r3 != null goto label07;

        $r18 = new org.apache.http.auth.MalformedChallengeException;

        specialinvoke $r18.<org.apache.http.auth.MalformedChallengeException: void <init>(java.lang.String)>("Header value is null");

        throw $r18;

     label07:
        $r11 = new org.apache.http.util.CharArrayBuffer;

        $i2 = virtualinvoke r3.<java.lang.String: int length()>();

        specialinvoke $r11.<org.apache.http.util.CharArrayBuffer: void <init>(int)>($i2);

        r4 = $r11;

        virtualinvoke r4.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>(r3);

        i0 = 0;

        goto label03;

     label08:
        i1 = i0;

     label09:
        $i3 = virtualinvoke r4.<org.apache.http.util.CharArrayBuffer: int length()>();

        if i0 >= $i3 goto label10;

        $c6 = virtualinvoke r4.<org.apache.http.util.CharArrayBuffer: char charAt(int)>(i0);

        $z5 = staticinvoke <org.apache.http.protocol.HTTP: boolean isWhitespace(char)>($c6);

        if $z5 != 0 goto label10;

        i0 = i0 + 1;

        goto label09;

     label10:
        r5 = virtualinvoke r4.<org.apache.http.util.CharArrayBuffer: java.lang.String substring(int,int)>(i1, i0);

        $r12 = virtualinvoke r0.<org.apache.http.impl.auth.AuthSchemeBase: java.lang.String getSchemeName()>();

        $z3 = virtualinvoke r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r12);

        if $z3 != 0 goto label11;

        $r14 = new org.apache.http.auth.MalformedChallengeException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid scheme identifier: ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<org.apache.http.auth.MalformedChallengeException: void <init>(java.lang.String)>($r17);

        throw $r14;

     label11:
        $i5 = virtualinvoke r4.<org.apache.http.util.CharArrayBuffer: int length()>();

        virtualinvoke r0.<org.apache.http.impl.auth.AuthSchemeBase: void parseChallenge(org.apache.http.util.CharArrayBuffer,int,int)>(r4, i0, $i5);

        return;
    }
}
