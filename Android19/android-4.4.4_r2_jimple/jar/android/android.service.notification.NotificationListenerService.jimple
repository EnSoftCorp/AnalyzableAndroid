public abstract class android.service.notification.NotificationListenerService extends android.app.Service
{
    public static final java.lang.String SERVICE_INTERFACE;
    private final java.lang.String TAG;
    private android.app.INotificationManager mNoMan;
    private android.service.notification.NotificationListenerService$INotificationListenerWrapper mWrapper;

    public void <init>()
    {
        android.service.notification.NotificationListenerService r0;
        java.lang.StringBuilder $r1, $r4, $r5, $r8, $r9;
        java.lang.Class $r2, $r6;
        java.lang.String $r3, $r7, $r10;

        r0 := @this: android.service.notification.NotificationListenerService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = class "android/service/notification/NotificationListenerService";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getSimpleName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.service.notification.NotificationListenerService: java.lang.String TAG> = $r10;

        r0.<android.service.notification.NotificationListenerService: android.service.notification.NotificationListenerService$INotificationListenerWrapper mWrapper> = null;

        return;
    }

    static java.lang.String access$100(android.service.notification.NotificationListenerService)
    {
        android.service.notification.NotificationListenerService r0;
        java.lang.String $r1;

        r0 := @parameter0: android.service.notification.NotificationListenerService;

        $r1 = r0.<android.service.notification.NotificationListenerService: java.lang.String TAG>;

        return $r1;
    }

    private final android.app.INotificationManager getNotificationInterface()
    {
        android.service.notification.NotificationListenerService r0;
        android.app.INotificationManager $r1, $r2, $r4;
        android.os.IBinder $r3;

        r0 := @this: android.service.notification.NotificationListenerService;

        $r1 = r0.<android.service.notification.NotificationListenerService: android.app.INotificationManager mNoMan>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("notification");

        $r4 = staticinvoke <android.app.INotificationManager$Stub: android.app.INotificationManager asInterface(android.os.IBinder)>($r3);

        r0.<android.service.notification.NotificationListenerService: android.app.INotificationManager mNoMan> = $r4;

     label1:
        $r2 = r0.<android.service.notification.NotificationListenerService: android.app.INotificationManager mNoMan>;

        return $r2;
    }

    public final void cancelAllNotifications()
    {
        android.service.notification.NotificationListenerService r0;
        android.os.RemoteException r1, $r4;
        android.app.INotificationManager $r2;
        android.service.notification.NotificationListenerService$INotificationListenerWrapper $r3;
        java.lang.String $r5;

        r0 := @this: android.service.notification.NotificationListenerService;

     label1:
        $r2 = specialinvoke r0.<android.service.notification.NotificationListenerService: android.app.INotificationManager getNotificationInterface()>();

        $r3 = r0.<android.service.notification.NotificationListenerService: android.service.notification.NotificationListenerService$INotificationListenerWrapper mWrapper>;

        interfaceinvoke $r2.<android.app.INotificationManager: void cancelAllNotificationsFromListener(android.service.notification.INotificationListener)>($r3);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = r0.<android.service.notification.NotificationListenerService: java.lang.String TAG>;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, "Unable to contact notification manager", r1);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public final void cancelNotification(java.lang.String, java.lang.String, int)
    {
        android.service.notification.NotificationListenerService r0;
        java.lang.String r1, r2, $r7;
        int i0;
        android.os.RemoteException r3, $r6;
        android.app.INotificationManager $r4;
        android.service.notification.NotificationListenerService$INotificationListenerWrapper $r5;

        r0 := @this: android.service.notification.NotificationListenerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

     label1:
        $r4 = specialinvoke r0.<android.service.notification.NotificationListenerService: android.app.INotificationManager getNotificationInterface()>();

        $r5 = r0.<android.service.notification.NotificationListenerService: android.service.notification.NotificationListenerService$INotificationListenerWrapper mWrapper>;

        interfaceinvoke $r4.<android.app.INotificationManager: void cancelNotificationFromListener(android.service.notification.INotificationListener,java.lang.String,java.lang.String,int)>($r5, r1, r2, i0);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        $r7 = r0.<android.service.notification.NotificationListenerService: java.lang.String TAG>;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>($r7, "Unable to contact notification manager", r3);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.service.notification.StatusBarNotification[] getActiveNotifications()
    {
        android.service.notification.NotificationListenerService r0;
        android.os.RemoteException r1, $r5;
        android.service.notification.StatusBarNotification[] r2;
        android.app.INotificationManager $r3;
        android.service.notification.NotificationListenerService$INotificationListenerWrapper $r4;
        java.lang.String $r6;

        r0 := @this: android.service.notification.NotificationListenerService;

     label1:
        $r3 = specialinvoke r0.<android.service.notification.NotificationListenerService: android.app.INotificationManager getNotificationInterface()>();

        $r4 = r0.<android.service.notification.NotificationListenerService: android.service.notification.NotificationListenerService$INotificationListenerWrapper mWrapper>;

        r2 = interfaceinvoke $r3.<android.app.INotificationManager: android.service.notification.StatusBarNotification[] getActiveNotificationsFromListener(android.service.notification.INotificationListener)>($r4);

     label2:
        return r2;

     label3:
        $r5 := @caughtexception;

        r1 = $r5;

        $r6 = r0.<android.service.notification.NotificationListenerService: java.lang.String TAG>;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>($r6, "Unable to contact notification manager", r1);

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.os.IBinder onBind(android.content.Intent)
    {
        android.service.notification.NotificationListenerService r0;
        android.content.Intent r1;
        android.service.notification.NotificationListenerService$INotificationListenerWrapper $r2, $r3, $r4;

        r0 := @this: android.service.notification.NotificationListenerService;

        r1 := @parameter0: android.content.Intent;

        $r2 = r0.<android.service.notification.NotificationListenerService: android.service.notification.NotificationListenerService$INotificationListenerWrapper mWrapper>;

        if $r2 != null goto label1;

        $r4 = new android.service.notification.NotificationListenerService$INotificationListenerWrapper;

        specialinvoke $r4.<android.service.notification.NotificationListenerService$INotificationListenerWrapper: void <init>(android.service.notification.NotificationListenerService,android.service.notification.NotificationListenerService$1)>(r0, null);

        r0.<android.service.notification.NotificationListenerService: android.service.notification.NotificationListenerService$INotificationListenerWrapper mWrapper> = $r4;

     label1:
        $r3 = r0.<android.service.notification.NotificationListenerService: android.service.notification.NotificationListenerService$INotificationListenerWrapper mWrapper>;

        return $r3;
    }

    public abstract void onNotificationPosted(android.service.notification.StatusBarNotification);

    public abstract void onNotificationRemoved(android.service.notification.StatusBarNotification);

    public static void <clinit>()
    {
        <android.service.notification.NotificationListenerService: java.lang.String SERVICE_INTERFACE> = "android.service.notification.NotificationListenerService";

        return;
    }
}
